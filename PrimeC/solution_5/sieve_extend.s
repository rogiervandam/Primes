GAS LISTING /tmp/ccIyIA9Z.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite --param l1-cache-size=32
  20              	# --param l1-cache-line-size=64 --param l2-cache-size=12288 -mtune=skylake
  21              	# -malign-data=cacheline -masm=intel -mavx -g -Ofast -Wextra -Wall
  22              	# -Wno-unused-function -funroll-all-loops -fno-asynchronous-unwind-tables
  23              	# -fno-exceptions -fverbose-asm -fstack-protector-strong -Wformat-security
  24              	# -fstack-clash-protection -fcf-protection
  25              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  26              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  27              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  28              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  29              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  30              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  31              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  32              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  33              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  34              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  35              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  36              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  37              	# -finline-atomics -finline-functions -finline-functions-called-once
  38              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  39              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  40              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  41              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  42              	# -fira-share-save-slots -fira-share-spill-slots
  43              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  44              	# -fleading-underscore -flifetime-dse -floop-interchange
  45              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  46              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  47              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  48              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  49              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  50              	# -freg-struct-return -frename-registers -freorder-blocks
  51              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  52              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  53              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  54              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  55              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  56              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  57              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
GAS LISTING /tmp/ccIyIA9Z.s 			page 2


  58              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
  59              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  60              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  61              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  62              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  63              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  64              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  65              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  66              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  67              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  68              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  69              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  70              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  71              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  72              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  73              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  74              	# -m128bit-long-double -m64 -m80387 -mabm -madx -maes -malign-stringops
  75              	# -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16 -mf16c -mfancy-math-387
  76              	# -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc -mhle -mlong-double-80
  77              	# -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw -mpush-args -mrdrnd
  78              	# -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3 -msse4 -msse4.1
  79              	# -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper -mxsave
  80              	# -mxsavec -mxsaveopt -mxsaves
  81              	
  82              		.text
  83              	.Ltext0:
  84              		.cfi_sections	.debug_frame
  85              		.p2align 4
  87              	continuePattern_smallSize:
  88              	.LVL0:
  89              	.LFB59:
  90              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** // Sieve algorithm by Rogier van Dam - 2022
   2:sieve_extend.c **** // Find all primes up to <max int> using the Sieve of Eratosthenes (https://en.wikipedia.org/wiki/S
   3:sieve_extend.c **** 
   4:sieve_extend.c **** #include <stdio.h>
   5:sieve_extend.c **** #include <stdlib.h>
   6:sieve_extend.c **** #include <stdint.h>
   7:sieve_extend.c **** #include <time.h>
   8:sieve_extend.c **** #include <math.h>
   9:sieve_extend.c **** #include <string.h>
  10:sieve_extend.c **** #ifdef _OPENMP
  11:sieve_extend.c **** #include <omp.h>
  12:sieve_extend.c **** #endif
  13:sieve_extend.c **** 
  14:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
  15:sieve_extend.c **** #define option_runonce 0
  16:sieve_extend.c **** #define debug if (option_runonce)
  17:sieve_extend.c **** #define verbose(level) if (option_verboselevel >= level)
  18:sieve_extend.c **** #define verbose_at(level) if (option_verboselevel == level)
  19:sieve_extend.c **** 
  20:sieve_extend.c **** // defaults
  21:sieve_extend.c **** #define default_sieve_limit 1000000
  22:sieve_extend.c **** #define default_blocksize (32*1024*8)
  23:sieve_extend.c **** #define default_max_time 5
  24:sieve_extend.c **** #define default_sample_duration 0.1
  25:sieve_extend.c **** #define default_sample_max 5
GAS LISTING /tmp/ccIyIA9Z.s 			page 3


  26:sieve_extend.c **** #define default_verbose_level 0
  27:sieve_extend.c **** #define default_tune_level 1
  28:sieve_extend.c **** #define default_check_level 1
  29:sieve_extend.c **** #define default_show_primes_on_error 100
  30:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  31:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  32:sieve_extend.c **** 
  33:sieve_extend.c **** // helper functions
  34:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  35:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  36:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  37:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  38:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  39:sieve_extend.c **** 
  40:sieve_extend.c **** // types
  41:sieve_extend.c **** #define bitword_t uint64_t
  42:sieve_extend.c **** #define TYPE uint64_t
  43:sieve_extend.c **** #define counter_t TYPE
  44:sieve_extend.c **** #define bitshift_t TYPE
  45:sieve_extend.c **** 
  46:sieve_extend.c **** // masks and mask helpers
  47:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  48:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  49:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  50:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  51:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  52:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  53:sieve_extend.c **** #define VECTOR_SIZE_counter ((counter_t)VECTOR_SIZE_bytes*8)
  54:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  55:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  56:sieve_extend.c **** 
  57:sieve_extend.c **** // types (II) - calculated
  58:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  59:sieve_extend.c **** 
  60:sieve_extend.c **** // globals for tuning
  61:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  62:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  63:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)128)
  64:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  65:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 32;
  66:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = 96;
  67:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  68:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  69:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  70:sieve_extend.c **** 
  71:sieve_extend.c **** // Patterns based on types
  72:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  73:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  74:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  75:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  76:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  77:sieve_extend.c **** 
  78:sieve_extend.c **** // helpder functions for word/vector indexing
  79:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  80:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  81:sieve_extend.c **** #define wordstart(index) ((counter_t)(index)&(counter_t)(~WORDMASK))
  82:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
GAS LISTING /tmp/ccIyIA9Z.s 			page 4


  83:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  84:sieve_extend.c **** #define vectorfromword(word) ((counter_t)(word)>>(SHIFT_VECTOR-SHIFT_WORD))
  85:sieve_extend.c **** #define wordinvector(index) ((counter_t)(index) & (counter_t)VECTORMASK)
  86:sieve_extend.c **** 
  87:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  88:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  89:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  90:sieve_extend.c **** #define markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  91:sieve_extend.c **** #define markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  92:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  93:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  94:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  95:sieve_extend.c **** 
  96:sieve_extend.c **** struct sieve_t {
  97:sieve_extend.c ****     bitword_t* bitstorage;
  98:sieve_extend.c ****     counter_t  bits;
  99:sieve_extend.c ****     counter_t  size;
 100:sieve_extend.c **** };
 101:sieve_extend.c **** 
 102:sieve_extend.c **** //#include "debugtools.h"
 103:sieve_extend.c **** 
 104:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 105:sieve_extend.c **** // moved clearing the sieve with 0 to the sieve_block_extend - it gave weird malloc problems at thi
 106:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 107:sieve_extend.c **** static struct sieve_t *sieve_create(counter_t size) {
 108:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 109:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 110:sieve_extend.c ****     sieve->bits     = size >> 1;
 111:sieve_extend.c ****     sieve->size     = size;
 112:sieve_extend.c ****     return sieve;
 113:sieve_extend.c **** }
 114:sieve_extend.c **** 
 115:sieve_extend.c **** static void sieve_delete(struct sieve_t *sieve) {
 116:sieve_extend.c ****     free(sieve->bitstorage);
 117:sieve_extend.c ****     free(sieve);
 118:sieve_extend.c **** }
 119:sieve_extend.c **** 
 120:sieve_extend.c **** // search the next bit not set - for small expected distances
 121:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitstorage, register counter_t index) {
 122:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 124:sieve_extend.c **** }
 125:sieve_extend.c **** 
 126:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 127:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitstorage, register counter_t index) {
 128:sieve_extend.c ****    const bitshift_t index_bit  = bitindex_calc(index);
 129:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 130:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 131:sieve_extend.c ****    index += distance;
 132:sieve_extend.c ****    distance += index_bit;
 133:sieve_extend.c **** 
 134:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 135:sieve_extend.c ****        index_word++;
 136:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 137:sieve_extend.c ****        index += distance;
 138:sieve_extend.c ****    }
 139:sieve_extend.c **** 
GAS LISTING /tmp/ccIyIA9Z.s 			page 5


 140:sieve_extend.c ****    return index;
 141:sieve_extend.c **** }
 142:sieve_extend.c **** 
 143:sieve_extend.c **** // apply the same word mask at large ranges
 144:sieve_extend.c **** // manually unlooped - this here is where the main speed increase comes from
 145:sieve_extend.c **** // idea from PrimeRust/solution_1 by Michael Barber 
 146:sieve_extend.c **** static inline void applyMask_word(bitword_t* __restrict bitstorage, const counter_t step, const cou
 147:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 148:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 149:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 150:sieve_extend.c **** 
 151:sieve_extend.c ****    //#pragma GCC unroll 10
 152:sieve_extend.c ****    #pragma GCC ivdep
 153:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 159:sieve_extend.c ****    }
 160:sieve_extend.c **** 
 161:sieve_extend.c ****    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_aligned(&bitstorage[(rang
 162:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 163:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 164:sieve_extend.c ****    }
 165:sieve_extend.c **** 
 166:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 167:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 168:sieve_extend.c ****    }
 169:sieve_extend.c **** }
 170:sieve_extend.c **** 
 171:sieve_extend.c **** // same as word mask, but at a vector level - uses the sse/avx extensions, hopefully
 172:sieve_extend.c **** static inline void applyMask_vector(bitvector_t* __restrict bitstorage, const counter_t step, const
 173:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 174:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 175:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 176:sieve_extend.c ****     
 177:sieve_extend.c ****     #pragma GCC ivdep
 178:sieve_extend.c ****     while likely(index_ptr < fast_loop_ptr) {
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 183:sieve_extend.c ****     }
 184:sieve_extend.c ****     
 185:sieve_extend.c ****     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_aligned(&bitstorage[(r
 186:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 187:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 188:sieve_extend.c ****     }
 189:sieve_extend.c **** }
 190:sieve_extend.c **** 
 191:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 192:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 193:sieve_extend.c **** // This is especially true for small steps over long ranges
 194:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 195:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitstorage, const counter_t range_start, 
 196:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 6


 197:sieve_extend.c **** 
 198:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 199:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 200:sieve_extend.c **** 
 201:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 202:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 203:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 204:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 205:sieve_extend.c ****             bitstorage[index_word] |= mask;
 206:sieve_extend.c ****         }
 207:sieve_extend.c ****     }
 208:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 209:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 210:sieve_extend.c ****         
 211:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 212:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 213:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 214:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 215:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 216:sieve_extend.c ****         }
 217:sieve_extend.c ****     }
 218:sieve_extend.c **** }
 219:sieve_extend.c **** 
 220:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 221:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitstorage, const counter_t range_s
 222:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 223:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 224:sieve_extend.c **** 
 225:sieve_extend.c ****     #pragma GCC ivdep
 226:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 227:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 228:sieve_extend.c ****     }
 229:sieve_extend.c **** }
 230:sieve_extend.c **** 
 231:sieve_extend.c **** static inline void setBitsTrue_largeRange_vector(bitword_t* __restrict bitstorage_word, counter_t r
 232:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 233:sieve_extend.c **** 
 234:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 235:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 236:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 237:sieve_extend.c **** 
 238:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 239:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 240:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 241:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 242:sieve_extend.c ****             return;
 243:sieve_extend.c ****         }
 244:sieve_extend.c **** 
 245:sieve_extend.c ****         for (; range_start <= range_start_atvector; range_start += step) 
 246:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 247:sieve_extend.c ****     }
 248:sieve_extend.c ****     
 249:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + VECTOR_SIZE_counter * step;
 250:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 251:sieve_extend.c ****         setBitsTrue_largeRange(bitstorage_word, range_start, step, range_stop);
 252:sieve_extend.c ****         return;
 253:sieve_extend.c ****     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 7


 254:sieve_extend.c **** 
 255:sieve_extend.c ****     debug printf("..building masks in range %ju-%ju\n", (uintmax_t)range_start, (uintmax_t)range_st
 256:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 257:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 258:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 259:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 260:sieve_extend.c ****         register bitvector_t quadmask = { };
 261:sieve_extend.c **** 
 262:sieve_extend.c ****         // build a quadmask
 263:sieve_extend.c ****         #pragma GCC ivdep 
 264:sieve_extend.c ****         do {
 265:sieve_extend.c ****             quadmask[word] |= markmask(index);
 266:sieve_extend.c ****             index += step;
 267:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 268:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 269:sieve_extend.c **** 
 270:sieve_extend.c ****         // use mask on all n*step multiples
 271:sieve_extend.c ****         // register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_W
 272:sieve_extend.c ****         bitvector_t* __restrict bitstorage_vector = __builtin_assume_aligned( (bitvector_t*) bitsto
 273:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 274:sieve_extend.c ****     }
 275:sieve_extend.c **** }
 276:sieve_extend.c **** 
 277:sieve_extend.c **** static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const counter_t source_star
  91              		.loc 1 277 159 view -0
  92              		.cfi_startproc
 278:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  93              		.loc 1 278 5 view .LVU1
 279:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitstorage(bitstorage, 4); }
 280:sieve_extend.c **** 
 281:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  94              		.loc 1 281 5 view .LVU2
 282:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
  95              		.loc 1 282 5 view .LVU3
  96              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  97              		.loc 1 277 159 is_stmt 0 view .LVU4
  98 0000 55       		push	rbp	#
  99              		.cfi_def_cfa_offset 16
 100              		.cfi_offset 6, -16
 101              	# sieve_extend.c:281:     const counter_t source_word = wordindex(source_start);
 281:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
 102              		.loc 1 281 21 view .LVU5
 103 0001 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 277 159 view .LVU6
 106 0004 4989D1   		mov	r9, rdx	# size, tmp438
 107 0007 4889E5   		mov	rbp, rsp	#,
 108              		.cfi_def_cfa_register 6
 109 000a 4157     		push	r15	#
 110              	# sieve_extend.c:281:     const counter_t source_word = wordindex(source_start);
 281:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
 111              		.loc 1 281 21 view .LVU7
 112 000c 48C1E806 		shr	rax, 6	# source_word,
 113              	.LVL1:
 114              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
GAS LISTING /tmp/ccIyIA9Z.s 			page 8


 115              		.loc 1 282 138 view .LVU8
 116 0010 89F2     		mov	edx, esi	# tmp250, source_start
 117              	.LVL2:
 118              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 119              		.loc 1 277 159 view .LVU9
 120 0012 4156     		push	r14	#
 121              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 122              		.loc 1 282 138 view .LVU10
 123 0014 83E23F   		and	edx, 63	# tmp250,
 124              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 125              		.loc 1 282 137 view .LVU11
 126 0017 41B84000 		mov	r8d, 64	# tmp252,
 126      0000
 127              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 128              		.loc 1 277 159 view .LVU12
 129 001d 4155     		push	r13	#
 130              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 131              		.loc 1 282 137 view .LVU13
 132 001f 4129D0   		sub	r8d, edx	# tmp251, tmp250
 133              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 134              		.loc 1 282 171 view .LVU14
 135 0022 4589CB   		mov	r11d, r9d	# tmp258, size
 136              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 137              		.loc 1 277 159 view .LVU15
 138 0025 4154     		push	r12	#
 139              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 140              		.loc 1 282 171 view .LVU16
 141 0027 41F7D3   		not	r11d	# tmp258
 142              		.cfi_offset 15, -24
 143              		.cfi_offset 14, -32
 144              		.cfi_offset 13, -40
 145              		.cfi_offset 12, -48
 146 002a 49C7C4FF 		mov	r12, -1	# tmp261,
 146      FFFFFF
 147              	# sieve_extend.c:277: static void continuePattern_smallSize(bitword_t* __restrict bitstorage, const
 277:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 148              		.loc 1 277 159 view .LVU17
 149 0031 53       		push	rbx	#
 150              		.cfi_offset 3, -56
 151              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 152              		.loc 1 282 60 view .LVU18
 153 0032 488B1CC7 		mov	rbx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 154              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 155              		.loc 1 282 171 view .LVU19
 156 0036 C442A3F7 		shrx	r13, r12, r11	# tmp260, tmp261, tmp258
 156      EC
 157              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 158              		.loc 1 282 116 view .LVU20
 159 003b C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp253, *_11, tmp251
 159      44C708
 160              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 161              		.loc 1 282 60 view .LVU21
 162 0042 C462CBF7 		shrx	r10, rbx, rsi	# tmp255, *_5, source_start
 162      D3
GAS LISTING /tmp/ccIyIA9Z.s 			page 9


 163              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 164              		.loc 1 282 87 view .LVU22
 165 0047 4D09D0   		or	r8, r10	# tmp257, tmp255
 166              	# sieve_extend.c:282:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 167              		.loc 1 282 24 view .LVU23
 168 004a 4D21E8   		and	r8, r13	# pattern, tmp260
 169              	.LVL3:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 170              		.loc 1 283 5 is_stmt 1 view .LVU24
 171              	.LBB420:
 172              		.loc 1 283 10 view .LVU25
 173              		.loc 1 283 54 view .LVU26
 174              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 175              		.loc 1 283 5 is_stmt 0 view .LVU27
 176 004d 4983F940 		cmp	r9, 64	# size,
 177 0051 0F87B900 		ja	.L2	#,
 177      0000
 178 0057 4D89CE   		mov	r14, r9	# pattern_size, size
 179              	.LVL4:
 180              	.L3:
 284:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 181              		.loc 1 284 9 is_stmt 1 discriminator 3 view .LVU28
 182              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 183              		.loc 1 283 103 is_stmt 0 discriminator 3 view .LVU29
 184 005a 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 185              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 186              		.loc 1 284 29 discriminator 3 view .LVU30
 187 005e C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 187      F8
 188              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 189              		.loc 1 284 17 discriminator 3 view .LVU31
 190 0063 4D09F8   		or	r8, r15	# pattern, _23
 191              	.LVL5:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 192              		.loc 1 283 90 is_stmt 1 discriminator 3 view .LVU32
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 193              		.loc 1 283 54 discriminator 3 view .LVU33
 194              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 195              		.loc 1 283 5 is_stmt 0 discriminator 3 view .LVU34
 196 0066 4883F840 		cmp	rax, 64	# pattern_size,
 197 006a 0F87A000 		ja	.L2	#,
 197      0000
 198              		.loc 1 284 9 is_stmt 1 view .LVU35
 199              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 200              		.loc 1 283 103 is_stmt 0 view .LVU36
 201 0070 4A8D1CB5 		lea	rbx, 0[0+r14*4]	# pattern_size,
 201      00000000 
 202              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 203              		.loc 1 284 29 view .LVU37
 204 0078 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 204      D0
 205              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 206              		.loc 1 284 17 view .LVU38
 207 007d 4909D0   		or	r8, rdx	# pattern, _23
GAS LISTING /tmp/ccIyIA9Z.s 			page 10


 208              	.LVL6:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 209              		.loc 1 283 90 is_stmt 1 view .LVU39
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 210              		.loc 1 283 54 view .LVU40
 211              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 212              		.loc 1 283 5 is_stmt 0 view .LVU41
 213 0080 4883FB40 		cmp	rbx, 64	# pattern_size,
 214 0084 0F878600 		ja	.L2	#,
 214      0000
 215              		.loc 1 284 9 is_stmt 1 view .LVU42
 216              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 217              		.loc 1 283 103 is_stmt 0 view .LVU43
 218 008a 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 218      00000000 
 219              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 220              		.loc 1 284 29 view .LVU44
 221 0092 C442E1F7 		shlx	r10, r8, rbx	# _23, pattern, pattern_size
 221      D0
 222              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 223              		.loc 1 284 17 view .LVU45
 224 0097 4D09D0   		or	r8, r10	# pattern, _23
 225              	.LVL7:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 226              		.loc 1 283 90 is_stmt 1 view .LVU46
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 227              		.loc 1 283 54 view .LVU47
 228              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 229              		.loc 1 283 5 is_stmt 0 view .LVU48
 230 009a 4983FB40 		cmp	r11, 64	# pattern_size,
 231 009e 7770     		ja	.L2	#,
 232              		.loc 1 284 9 is_stmt 1 view .LVU49
 233              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 234              		.loc 1 283 103 is_stmt 0 view .LVU50
 235 00a0 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 236 00a3 49C1E504 		sal	r13, 4	# pattern_size,
 237              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 238              		.loc 1 284 29 view .LVU51
 239 00a7 C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 239      E0
 240              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 241              		.loc 1 284 17 view .LVU52
 242 00ac 4D09E0   		or	r8, r12	# pattern, _23
 243              	.LVL8:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 244              		.loc 1 283 90 is_stmt 1 view .LVU53
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 245              		.loc 1 283 54 view .LVU54
 246              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 247              		.loc 1 283 5 is_stmt 0 view .LVU55
 248 00af 4983FD40 		cmp	r13, 64	# pattern_size,
 249 00b3 775B     		ja	.L2	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 11


 250              		.loc 1 284 9 is_stmt 1 view .LVU56
 251              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 283 103 is_stmt 0 view .LVU57
 253 00b5 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 254 00b8 48C1E005 		sal	rax, 5	# pattern_size,
 255              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 256              		.loc 1 284 29 view .LVU58
 257 00bc C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 257      F8
 258              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 259              		.loc 1 284 17 view .LVU59
 260 00c1 4D09F8   		or	r8, r15	# pattern, _23
 261              	.LVL9:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 262              		.loc 1 283 90 is_stmt 1 view .LVU60
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 263              		.loc 1 283 54 view .LVU61
 264              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 265              		.loc 1 283 5 is_stmt 0 view .LVU62
 266 00c4 4883F840 		cmp	rax, 64	# pattern_size,
 267 00c8 7746     		ja	.L2	#,
 268              		.loc 1 284 9 is_stmt 1 view .LVU63
 269              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 270              		.loc 1 283 103 is_stmt 0 view .LVU64
 271 00ca 4C89F3   		mov	rbx, r14	# pattern_size, pattern_size
 272 00cd 48C1E306 		sal	rbx, 6	# pattern_size,
 273              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 274              		.loc 1 284 29 view .LVU65
 275 00d1 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 275      D0
 276              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 277              		.loc 1 284 17 view .LVU66
 278 00d6 4909D0   		or	r8, rdx	# pattern, _23
 279              	.LVL10:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 283 90 is_stmt 1 view .LVU67
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 281              		.loc 1 283 54 view .LVU68
 282              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 283              		.loc 1 283 5 is_stmt 0 view .LVU69
 284 00d9 4883FB40 		cmp	rbx, 64	# pattern_size,
 285 00dd 7731     		ja	.L2	#,
 286              		.loc 1 284 9 is_stmt 1 view .LVU70
 287              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 288              		.loc 1 283 103 is_stmt 0 view .LVU71
 289 00df 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 290 00e2 49C1E307 		sal	r11, 7	# pattern_size,
 291              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 292              		.loc 1 284 29 view .LVU72
 293 00e6 C442E1F7 		shlx	r10, r8, rbx	# _23, pattern, pattern_size
 293      D0
 294              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
GAS LISTING /tmp/ccIyIA9Z.s 			page 12


 295              		.loc 1 284 17 view .LVU73
 296 00eb 4D09D0   		or	r8, r10	# pattern, _23
 297              	.LVL11:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 298              		.loc 1 283 90 is_stmt 1 view .LVU74
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 299              		.loc 1 283 54 view .LVU75
 300              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 301              		.loc 1 283 5 is_stmt 0 view .LVU76
 302 00ee 4983FB40 		cmp	r11, 64	# pattern_size,
 303 00f2 771C     		ja	.L2	#,
 304              		.loc 1 284 9 is_stmt 1 view .LVU77
 305              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 283 103 is_stmt 0 view .LVU78
 307 00f4 49C1E608 		sal	r14, 8	# pattern_size,
 308              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 309              		.loc 1 284 29 view .LVU79
 310 00f8 C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 310      E0
 311              	# sieve_extend.c:284:         pattern |= (pattern << pattern_size);
 312              		.loc 1 284 17 view .LVU80
 313 00fd 4D09E0   		or	r8, r12	# pattern, _23
 314              	.LVL12:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 283 90 is_stmt 1 view .LVU81
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 316              		.loc 1 283 54 view .LVU82
 317              	# sieve_extend.c:283:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 318              		.loc 1 283 5 is_stmt 0 view .LVU83
 319 0100 4983FE40 		cmp	r14, 64	# pattern_size,
 320 0104 0F8650FF 		jbe	.L3	#,
 320      FFFF
 321              	.LVL13:
 322 010a 660F1F44 		.p2align 4,,10
 322      0000
 323              		.p2align 3
 324              	.L2:
 283:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 325              		.loc 1 283 5 view .LVU84
 326              	.LBE420:
 285:sieve_extend.c **** 
 286:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 327              		.loc 1 286 5 is_stmt 1 view .LVU85
 328              	# sieve_extend.c:286:     const counter_t destination_start = source_start + size;
 329              		.loc 1 286 21 is_stmt 0 view .LVU86
 330 0110 4C01CE   		add	rsi, r9	# destination_start, size
 331              	.LVL14:
 287:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 332              		.loc 1 287 5 is_stmt 1 view .LVU87
 333              	# sieve_extend.c:287:     counter_t destination_start_word = wordindex(destination_start);
 334              		.loc 1 287 15 is_stmt 0 view .LVU88
 335 0113 4989F6   		mov	r14, rsi	# destination_start_word, destination_start
 336 0116 49C1EE06 		shr	r14, 6	# destination_start_word,
 337              	.LVL15:
GAS LISTING /tmp/ccIyIA9Z.s 			page 13


 288:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 338              		.loc 1 288 5 is_stmt 1 view .LVU89
 339              	# sieve_extend.c:288:     counter_t destination_stop_word = wordindex(destination_stop);
 340              		.loc 1 288 15 is_stmt 0 view .LVU90
 341 011a 4989CB   		mov	r11, rcx	# destination_stop_word, destination_stop
 342 011d 4E8D14F5 		lea	r10, 0[0+r14*8]	# _116,
 342      00000000 
 343 0125 4E8D2C17 		lea	r13, [rdi+r10]	# _117,
 344 0129 F7D1     		not	ecx	# tmp264
 345              	.LVL16:
 346              		.loc 1 288 15 view .LVU91
 347 012b 48C7C2FF 		mov	rdx, -1	# tmp266,
 347      FFFFFF
 348 0132 49C1EB06 		shr	r11, 6	# destination_stop_word,
 349              	.LVL17:
 289:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 350              		.loc 1 289 5 is_stmt 1 view .LVU92
 351 0136 4D8B7D00 		mov	r15, QWORD PTR 0[r13]	# pretmp_118, *_117
 352 013a C4C2C9F7 		shlx	rax, r8, rsi	# _120, pattern, destination_start
 352      C0
 353 013f C4E2F3F7 		shrx	rbx, rdx, rcx	# _124, tmp266, tmp264
 353      DA
 354              	# sieve_extend.c:289:     if (destination_start_word >= destination_stop_word) {
 355              		.loc 1 289 8 is_stmt 0 view .LVU93
 356 0144 4D39DE   		cmp	r14, r11	# destination_start_word, destination_stop_word
 357 0147 0F83B303 		jnb	.L36	#,
 357      0000
 290:sieve_extend.c ****         bitstorage[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(d
 291:sieve_extend.c ****         return;
 292:sieve_extend.c ****     }
 293:sieve_extend.c **** 
 294:sieve_extend.c ****     bitstorage[destination_start_word] |= (pattern << bitindex(destination_start));
 358              		.loc 1 294 5 is_stmt 1 view .LVU94
 359              	# sieve_extend.c:294:     bitstorage[destination_start_word] |= (pattern << bitindex(destination_st
 360              		.loc 1 294 40 is_stmt 0 view .LVU95
 361 014d 4C09F8   		or	rax, r15	# tmp269, pretmp_118
 362              	# sieve_extend.c:296:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 295:sieve_extend.c **** 
 296:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 363              		.loc 1 296 31 view .LVU96
 364 0150 B9400000 		mov	ecx, 64	# tmp270,
 364      00
 365              	# sieve_extend.c:294:     bitstorage[destination_start_word] |= (pattern << bitindex(destination_st
 294:sieve_extend.c **** 
 366              		.loc 1 294 40 view .LVU97
 367 0155 49894500 		mov	QWORD PTR 0[r13], rax	# *_117, tmp269
 368              		.loc 1 296 5 is_stmt 1 view .LVU98
 369              	# sieve_extend.c:296:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 370              		.loc 1 296 31 is_stmt 0 view .LVU99
 371 0159 31D2     		xor	edx, edx	# tmp271
 372 015b 4889C8   		mov	rax, rcx	# tmp272, tmp270
 373 015e 49F7F1   		div	r9	# size
 374              	.LVL18:
 297:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 375              		.loc 1 297 5 is_stmt 1 view .LVU100
 298:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 376              		.loc 1 298 5 view .LVU101
GAS LISTING /tmp/ccIyIA9Z.s 			page 14


 299:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 377              		.loc 1 299 5 view .LVU102
 378              	# sieve_extend.c:299:     register counter_t loop_range = destination_stop_word - destination_start
 379              		.loc 1 299 24 is_stmt 0 view .LVU103
 380 0161 4D89DC   		mov	r12, r11	# loop_range, destination_stop_word
 381 0164 4D29F4   		sub	r12, r14	# loop_range, destination_start_word
 382              	.LVL19:
 300:sieve_extend.c ****     destination_start_word++;
 383              		.loc 1 300 5 is_stmt 1 view .LVU104
 384              	# sieve_extend.c:297:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 297:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 385              		.loc 1 297 31 is_stmt 0 view .LVU105
 386 0167 4889C8   		mov	rax, rcx	# tmp270, tmp270
 387              	# sieve_extend.c:298:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 298:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 388              		.loc 1 298 89 view .LVU106
 389 016a 48F7DE   		neg	rsi	# tmp275
 390              	.LVL20:
 391              	# sieve_extend.c:300:     destination_start_word++;
 392              		.loc 1 300 27 view .LVU107
 393 016d 4D8D4E01 		lea	r9, 1[r14]	# destination_start_word,
 394              	.LVL21:
 395              	.LBB421:
 301:sieve_extend.c ****     
 302:sieve_extend.c ****     #pragma GCC ivdep
 303:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 396              		.loc 1 303 10 is_stmt 1 view .LVU108
 397              		.loc 1 303 25 view .LVU109
 398              	.LBE421:
 399              	# sieve_extend.c:298:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 298:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 400              		.loc 1 298 25 is_stmt 0 view .LVU110
 401 0171 83E63F   		and	esi, 63	# shift,
 402              	.LVL22:
 298:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 403              		.loc 1 298 25 view .LVU111
 404 0174 4D8D6C24 		lea	r13, 1[r12]	# niters.158,
 404      01
 405              	# sieve_extend.c:297:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 297:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 406              		.loc 1 297 31 view .LVU112
 407 0179 4829D0   		sub	rax, rdx	# tmp270, tmp271
 408              	.LVL23:
 297:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 409              		.loc 1 297 31 view .LVU113
 410 017c 4983FC06 		cmp	r12, 6	# loop_range,
 411 0180 0F869403 		jbe	.L9	#,
 411      0000
 412 0186 4A8D4C17 		lea	rcx, 8[rdi+r10]	# ivtmp.177,
 412      08
 413 018b 4D89EA   		mov	r10, r13	# bnd.159, niters.158
 414 018e 49C1EA03 		shr	r10, 3	# bnd.159,
 415 0192 49C1E206 		sal	r10, 6	# tmp283,
 416 0196 C5F96EEA 		vmovd	xmm5, edx	# vect_cst__1, _127
 417 019a C5F96EE6 		vmovd	xmm4, esi	# vect_cst__131, _129
 418 019e C5F96ED8 		vmovd	xmm3, eax	# vect_cst__108, _125
 419 01a2 C4C1F96E 		vmovq	xmm6, r8	# pattern, pattern
GAS LISTING /tmp/ccIyIA9Z.s 			page 15


 419      F0
 420 01a7 4D8D340A 		lea	r14, [r10+rcx]	# _216,
 421 01ab 4183E240 		and	r10d, 64	# tmp283,
 422              	# sieve_extend.c:300:     destination_start_word++;
 300:sieve_extend.c ****     
 423              		.loc 1 300 27 view .LVU114
 424 01af C57D6F0D 		vmovdqa	ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.162,
 424      00000000 
 425 01b7 C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp360,
 425      00000000 
 426 01bf C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp361,
 426      00000000 
 427 01c7 C57D6F3D 		vmovdqa	ymm15, YMMWORD PTR .LC3[rip]	# tmp362,
 427      00000000 
 428 01cf C4627D58 		vpbroadcastd	ymm12, xmm5	# vect_cst__1, vect_cst__1
 428      E5
 429 01d4 C4627D58 		vpbroadcastd	ymm13, xmm4	# vect_cst__131, vect_cst__131
 429      EC
 430 01d9 C4627D58 		vpbroadcastd	ymm14, xmm3	# vect_cst__108, vect_cst__108
 430      F3
 431 01de C4E27D59 		vpbroadcastq	ymm2, xmm6	# vect_cst__38, pattern
 431      D6
 432 01e3 0F849700 		je	.L7	#,
 432      0000
 433 01e9 C57D7FC9 		vmovdqa	ymm1, ymm9	# vect_vec_iv_.162, vect_vec_iv_.162
 434              	.LBB422:
 435              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 304:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 436              		.loc 1 304 83 view .LVU115
 437 01ed C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.162, vect_vec_iv_.162, tmp361
 438 01f1 C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp400, vect_vec_iv_.162, vect_vec_iv_.162,
 438      C220
 439 01f7 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp401, vect_vec_iv_.162, vect_vec_iv_.162,
 439      DA31
 440 01fd C5FD70E8 		vpshufd	ymm5, ymm0, 216	# tmp402, tmp400,
 440      D8
 441 0202 C4C17D70 		vpshufd	ymm4, ymm11, 216	# tmp403, tmp401,
 441      E3D8
 442 0208 C5D56CDC 		vpunpcklqdq	ymm3, ymm5, ymm4	# tmp404, tmp402, tmp403
 443 020c C4E21D40 		vpmulld	ymm6, ymm12, ymm3	# vect__45.164, vect_cst__1, tmp404
 443      F3
 444 0211 4883C140 		add	rcx, 64	# ivtmp.177,
 445 0215 C44135D4 		vpaddq	ymm9, ymm9, ymm8	# vect_vec_iv_.162, vect_vec_iv_.162, tmp360
 445      C8
 446              	.LVL24:
 447              		.loc 1 304 9 is_stmt 1 view .LVU116
 448              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 449              		.loc 1 304 83 is_stmt 0 view .LVU117
 450 021a C4C14DFE 		vpaddd	ymm1, ymm6, ymm13	# vect__47.165, vect__45.164, vect_cst__131
 450      CD
 451              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 452              		.loc 1 304 101 view .LVU118
 453 021f C4C175DB 		vpand	ymm0, ymm1, ymm15	# vect__48.166, vect__47.165, tmp362
 453      C7
 454              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 455              		.loc 1 304 74 view .LVU119
 456 0224 C58DFAE8 		vpsubd	ymm5, ymm14, ymm0	# vect__49.167, vect_cst__108, vect__48.166
GAS LISTING /tmp/ccIyIA9Z.s 			page 16


 457              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 458              		.loc 1 304 118 view .LVU120
 459 0228 C4627D35 		vpmovzxdq	ymm10, xmm5	#, vect__49.167
 459      D5
 460 022d C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.166
 460      D8
 461 0232 C4C2ED47 		vpsllvq	ymm4, ymm2, ymm10	# vect_patt_138.169, vect_cst__38, vect_patt_139.168
 461      E2
 462 0237 C4C2ED45 		vpsrlvq	ymm3, ymm2, ymm11	# vect_patt_136.171, vect_cst__38, vect_patt_137.170
 462      DB
 463 023c C4E37D39 		vextracti128	xmm1, ymm5, 0x1	# tmp416, vect__49.167
 463      E901
 464 0242 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp419, vect__48.166
 464      C001
 465 0248 C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__55.172, vect_patt_138.169, vect_patt_136.171
 466 024c C4E27D35 		vpmovzxdq	ymm5, xmm1	# vect_patt_139.168, tmp416
 466      E9
 467 0251 C4E27D35 		vpmovzxdq	ymm4, xmm0	# vect_patt_137.170, tmp419
 467      E0
 468 0256 C462ED47 		vpsllvq	ymm10, ymm2, ymm5	# vect_patt_138.169, vect_cst__38, vect_patt_139.168
 468      D5
 469 025b C462ED45 		vpsrlvq	ymm11, ymm2, ymm4	# vect_patt_136.171, vect_cst__38, vect_patt_137.170
 469      DC
 470              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 471              		.loc 1 304 46 view .LVU121
 472 0260 C5FE7F71 		vmovdqu	YMMWORD PTR -64[rcx], ymm6	# MEM[base: _213, offset: 0B], vect__55.172
 472      C0
 473              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 474              		.loc 1 304 118 view .LVU122
 475 0265 C4C12DEB 		vpor	ymm3, ymm10, ymm11	# vect__55.172, vect_patt_138.169, vect_patt_136.171
 475      DB
 476              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 477              		.loc 1 304 46 view .LVU123
 478 026a C5FE7F59 		vmovdqu	YMMWORD PTR -32[rcx], ymm3	# MEM[base: _213, offset: 32B], vect__55.172
 478      E0
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 479              		.loc 1 303 40 is_stmt 1 view .LVU124
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 480              		.loc 1 303 25 view .LVU125
 481 026f 4C39F1   		cmp	rcx, r14	# ivtmp.177, _216
 482 0272 0F840F01 		je	.L31	#,
 482      0000
 483 0278 0F1F8400 		.p2align 4,,10
 483      00000000 
 484              		.p2align 3
 485              	.L7:
 486              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 487              		.loc 1 304 83 is_stmt 0 discriminator 3 view .LVU126
 488 0280 C5B5D4CF 		vpaddq	ymm1, ymm9, ymm7	# vect_vec_iv_.162, vect_vec_iv_.162, tmp361
 489 0284 C4C135D4 		vpaddq	ymm6, ymm9, ymm8	# vect_vec_iv_.162, vect_vec_iv_.162, tmp360
 489      F0
 490              		.loc 1 304 9 is_stmt 1 discriminator 3 view .LVU127
 491              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 492              		.loc 1 304 83 is_stmt 0 discriminator 3 view .LVU128
 493 0289 C4E33546 		vperm2i128	ymm5, ymm9, ymm1, 32	# tmp290, vect_vec_iv_.162, vect_vec_iv_.162,
 493      E920
 494 028f C4633546 		vperm2i128	ymm9, ymm9, ymm1, 49	# tmp291, vect_vec_iv_.162, vect_vec_iv_.162,
GAS LISTING /tmp/ccIyIA9Z.s 			page 17


 494      C931
 495 0295 C57D70D5 		vpshufd	ymm10, ymm5, 216	# tmp288, tmp290,
 495      D8
 496 029a C4C17D70 		vpshufd	ymm0, ymm9, 216	# tmp289, tmp291,
 496      C1D8
 497 02a0 C5AD6CE0 		vpunpcklqdq	ymm4, ymm10, ymm0	# tmp292, tmp288, tmp289
 498 02a4 C4621D40 		vpmulld	ymm11, ymm12, ymm4	# vect__45.164, vect_cst__1, tmp292
 498      DC
 499 02a9 4883E980 		sub	rcx, -128	# ivtmp.177,
 500 02ad C4C125FE 		vpaddd	ymm3, ymm11, ymm13	# vect__47.165, vect__45.164, vect_cst__131
 500      DD
 501              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 502              		.loc 1 304 101 discriminator 3 view .LVU129
 503 02b2 C4C165DB 		vpand	ymm5, ymm3, ymm15	# vect__48.166, vect__47.165, tmp362
 503      EF
 504              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 505              		.loc 1 304 74 discriminator 3 view .LVU130
 506 02b7 C58DFACD 		vpsubd	ymm1, ymm14, ymm5	# vect__49.167, vect_cst__108, vect__48.166
 507              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 508              		.loc 1 304 118 discriminator 3 view .LVU131
 509 02bb C4627D35 		vpmovzxdq	ymm9, xmm1	#, vect__49.167
 509      C9
 510 02c0 C4E27D35 		vpmovzxdq	ymm0, xmm5	#, vect__48.166
 510      C5
 511 02c5 C442ED47 		vpsllvq	ymm10, ymm2, ymm9	# vect_patt_138.169, vect_cst__38, vect_patt_139.168
 511      D1
 512 02ca C4E2ED45 		vpsrlvq	ymm4, ymm2, ymm0	# vect_patt_136.171, vect_cst__38, vect_patt_137.170
 512      E0
 513 02cf C4E37D39 		vextracti128	xmm3, ymm1, 0x1	# tmp304, vect__49.167
 513      CB01
 514 02d5 C4E37D39 		vextracti128	xmm5, ymm5, 0x1	# tmp307, vect__48.166
 514      ED01
 515 02db C52DEBDC 		vpor	ymm11, ymm10, ymm4	# vect__55.172, vect_patt_138.169, vect_patt_136.171
 516 02df C4E27D35 		vpmovzxdq	ymm1, xmm3	# vect_patt_139.168, tmp304
 516      CB
 517 02e4 C4627D35 		vpmovzxdq	ymm10, xmm5	# vect_patt_137.170, tmp307
 517      D5
 518 02e9 C462ED47 		vpsllvq	ymm9, ymm2, ymm1	# vect_patt_138.169, vect_cst__38, vect_patt_139.168
 518      C9
 519 02ee C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.171, vect_cst__38, vect_patt_137.170
 519      C2
 520              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 521              		.loc 1 304 46 discriminator 3 view .LVU132
 522 02f3 C57E7F59 		vmovdqu	YMMWORD PTR -128[rcx], ymm11	# MEM[base: _213, offset: 0B], vect__55.172
 522      80
 523              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 524              		.loc 1 304 83 discriminator 3 view .LVU133
 525 02f8 C54DD4DF 		vpaddq	ymm11, ymm6, ymm7	# vect_vec_iv_.162, vect_vec_iv_.162, tmp361
 526              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 527              		.loc 1 304 118 discriminator 3 view .LVU134
 528 02fc C5B5EBE0 		vpor	ymm4, ymm9, ymm0	# vect__55.172, vect_patt_138.169, vect_patt_136.171
 529              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 530              		.loc 1 304 83 discriminator 3 view .LVU135
 531 0300 C4C34D46 		vperm2i128	ymm3, ymm6, ymm11, 32	# tmp375, vect_vec_iv_.162, vect_vec_iv_.162,
 531      DB20
 532 0306 C4414DD4 		vpaddq	ymm9, ymm6, ymm8	# vect_vec_iv_.162, vect_vec_iv_.162, tmp360
 532      C8
GAS LISTING /tmp/ccIyIA9Z.s 			page 18


 533 030b C4C34D46 		vperm2i128	ymm6, ymm6, ymm11, 49	# tmp376, vect_vec_iv_.162, vect_vec_iv_.162,
 533      F331
 534 0311 C5FD70CB 		vpshufd	ymm1, ymm3, 216	# tmp377, tmp375,
 534      D8
 535 0316 C5FD70EE 		vpshufd	ymm5, ymm6, 216	# tmp378, tmp376,
 535      D8
 536 031b C5756CD5 		vpunpcklqdq	ymm10, ymm1, ymm5	# tmp379, tmp377, tmp378
 537 031f C4C21D40 		vpmulld	ymm0, ymm12, ymm10	# vect__45.164, vect_cst__1, tmp379
 537      C2
 538              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 539              		.loc 1 304 46 discriminator 3 view .LVU136
 540 0324 C5FE7F61 		vmovdqu	YMMWORD PTR -96[rcx], ymm4	# MEM[base: _213, offset: 32B], vect__55.172
 540      A0
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 541              		.loc 1 303 40 is_stmt 1 discriminator 3 view .LVU137
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 542              		.loc 1 303 25 discriminator 3 view .LVU138
 543              		.loc 1 304 9 discriminator 3 view .LVU139
 544              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 545              		.loc 1 304 83 is_stmt 0 discriminator 3 view .LVU140
 546 0329 C4C17DFE 		vpaddd	ymm4, ymm0, ymm13	# vect__47.165, vect__45.164, vect_cst__131
 546      E5
 547              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 548              		.loc 1 304 101 discriminator 3 view .LVU141
 549 032e C4C15DDB 		vpand	ymm3, ymm4, ymm15	# vect__48.166, vect__47.165, tmp362
 549      DF
 550              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 551              		.loc 1 304 74 discriminator 3 view .LVU142
 552 0333 C58DFAF3 		vpsubd	ymm6, ymm14, ymm3	# vect__49.167, vect_cst__108, vect__48.166
 553              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 554              		.loc 1 304 118 discriminator 3 view .LVU143
 555 0337 C4627D35 		vpmovzxdq	ymm11, xmm6	#, vect__49.167
 555      DE
 556 033c C4E27D35 		vpmovzxdq	ymm5, xmm3	#, vect__48.166
 556      EB
 557 0341 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.169, vect_cst__38, vect_patt_139.168
 557      CB
 558 0346 C462ED45 		vpsrlvq	ymm10, ymm2, ymm5	# vect_patt_136.171, vect_cst__38, vect_patt_137.170
 558      D5
 559 034b C4E37D39 		vextracti128	xmm4, ymm6, 0x1	# tmp391, vect__49.167
 559      F401
 560 0351 C4E37D39 		vextracti128	xmm3, ymm3, 0x1	# tmp394, vect__48.166
 560      DB01
 561 0357 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.172, vect_patt_138.169, vect_patt_136.171
 561      C2
 562 035c C4E27D35 		vpmovzxdq	ymm6, xmm4	# vect_patt_139.168, tmp391
 562      F4
 563 0361 C4E27D35 		vpmovzxdq	ymm1, xmm3	# vect_patt_137.170, tmp394
 563      CB
 564 0366 C462ED47 		vpsllvq	ymm11, ymm2, ymm6	# vect_patt_138.169, vect_cst__38, vect_patt_139.168
 564      DE
 565 036b C4E2ED45 		vpsrlvq	ymm5, ymm2, ymm1	# vect_patt_136.171, vect_cst__38, vect_patt_137.170
 565      E9
 566              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 567              		.loc 1 304 46 discriminator 3 view .LVU144
 568 0370 C5FE7F41 		vmovdqu	YMMWORD PTR -64[rcx], ymm0	# MEM[base: _213, offset: 0B], vect__55.172
 568      C0
GAS LISTING /tmp/ccIyIA9Z.s 			page 19


 569              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 570              		.loc 1 304 118 discriminator 3 view .LVU145
 571 0375 C525EBD5 		vpor	ymm10, ymm11, ymm5	# vect__55.172, vect_patt_138.169, vect_patt_136.171
 572              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 573              		.loc 1 304 46 discriminator 3 view .LVU146
 574 0379 C57E7F51 		vmovdqu	YMMWORD PTR -32[rcx], ymm10	# MEM[base: _213, offset: 32B], vect__55.172
 574      E0
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 575              		.loc 1 303 40 is_stmt 1 discriminator 3 view .LVU147
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 576              		.loc 1 303 25 discriminator 3 view .LVU148
 577 037e 4C39F1   		cmp	rcx, r14	# ivtmp.177, _216
 578 0381 0F85F9FE 		jne	.L7	#,
 578      FFFF
 579              	.L31:
 580 0387 4D89EF   		mov	r15, r13	# niters_vector_mult_vf.160, niters.158
 581 038a 4983E7F8 		and	r15, -8	# niters_vector_mult_vf.160,
 582 038e 4183E507 		and	r13d, 7	# niters.158,
 583 0392 0F847D01 		je	.L37	#,
 583      0000
 584 0398 C5F877   		vzeroupper
 585              	.L6:
 586              	.LVL25:
 587              		.loc 1 304 9 view .LVU149
 588              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 589              		.loc 1 304 83 is_stmt 0 view .LVU150
 590 039b 89D1     		mov	ecx, edx	# tmp310, tmp271
 591 039d 410FAFCF 		imul	ecx, r15d	# tmp310, niters_vector_mult_vf.160
 592              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 593              		.loc 1 304 74 view .LVU151
 594 03a1 4189C2   		mov	r10d, eax	# tmp313, pattern_size
 595              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 596              		.loc 1 304 19 view .LVU152
 597 03a4 4F8D2C39 		lea	r13, [r9+r15]	# tmp312,
 598              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 599              		.loc 1 304 83 view .LVU153
 600 03a8 01F1     		add	ecx, esi	# tmp311, shift
 601              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 602              		.loc 1 304 101 view .LVU154
 603 03aa 83E13F   		and	ecx, 63	# _49,
 604              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 605              		.loc 1 304 74 view .LVU155
 606 03ad 4129CA   		sub	r10d, ecx	# tmp313, _49
 607              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 608              		.loc 1 304 57 view .LVU156
 609 03b0 C442A9F7 		shlx	r14, r8, r10	# tmp314, pattern, tmp313
 609      F0
 610              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 611              		.loc 1 304 129 view .LVU157
 612 03b5 C4C2F3F7 		shrx	rcx, r8, rcx	# tmp315, pattern, _49
 612      C8
 613              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 614              		.loc 1 304 118 view .LVU158
 615 03ba 4C09F1   		or	rcx, r14	# tmp316, tmp314
 616 03bd 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_55, tmp316
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 617              		.loc 1 303 40 is_stmt 1 view .LVU159
GAS LISTING /tmp/ccIyIA9Z.s 			page 20


 618 03c1 4D8D6F01 		lea	r13, 1[r15]	# i,
 619              	.LVL26:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 620              		.loc 1 303 25 view .LVU160
 621              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 622              		.loc 1 303 5 is_stmt 0 view .LVU161
 623 03c5 4D39EC   		cmp	r12, r13	# loop_range, i
 624 03c8 0F821D01 		jb	.L8	#,
 624      0000
 625              		.loc 1 304 9 is_stmt 1 view .LVU162
 626              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 627              		.loc 1 304 83 is_stmt 0 view .LVU163
 628 03ce 4189D2   		mov	r10d, edx	# tmp317, tmp271
 629 03d1 450FAFD5 		imul	r10d, r13d	# tmp317, i
 630              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 631              		.loc 1 304 74 view .LVU164
 632 03d5 4189C6   		mov	r14d, eax	# tmp320, pattern_size
 633              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 634              		.loc 1 304 19 view .LVU165
 635 03d8 4D01CD   		add	r13, r9	# tmp319, destination_start_word
 636              	.LVL27:
 637              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 638              		.loc 1 304 83 view .LVU166
 639 03db 4101F2   		add	r10d, esi	# tmp318, shift
 640              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 641              		.loc 1 304 101 view .LVU167
 642 03de 4183E23F 		and	r10d, 63	# _142,
 643              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 644              		.loc 1 304 74 view .LVU168
 645 03e2 4529D6   		sub	r14d, r10d	# tmp320, _142
 646              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 647              		.loc 1 304 57 view .LVU169
 648 03e5 C4C289F7 		shlx	rcx, r8, r14	# tmp321, pattern, tmp320
 648      C8
 649              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 650              		.loc 1 304 129 view .LVU170
 651 03ea C442ABF7 		shrx	r10, r8, r10	# tmp322, pattern, _142
 651      D0
 652              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 653              		.loc 1 304 118 view .LVU171
 654 03ef 4C09D1   		or	rcx, r10	# tmp323, tmp322
 655 03f2 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_148, tmp323
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 656              		.loc 1 303 40 is_stmt 1 view .LVU172
 657 03f6 4D8D6F02 		lea	r13, 2[r15]	# i,
 658              	.LVL28:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 659              		.loc 1 303 25 view .LVU173
 660              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 661              		.loc 1 303 5 is_stmt 0 view .LVU174
 662 03fa 4D39EC   		cmp	r12, r13	# loop_range, i
 663 03fd 0F82E800 		jb	.L8	#,
 663      0000
 664              		.loc 1 304 9 is_stmt 1 view .LVU175
 665              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccIyIA9Z.s 			page 21


 666              		.loc 1 304 83 is_stmt 0 view .LVU176
 667 0403 89D1     		mov	ecx, edx	# tmp324, tmp271
 668 0405 410FAFCD 		imul	ecx, r13d	# tmp324, i
 669              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 670              		.loc 1 304 74 view .LVU177
 671 0409 4189C6   		mov	r14d, eax	# tmp327, pattern_size
 672              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 673              		.loc 1 304 19 view .LVU178
 674 040c 4D01CD   		add	r13, r9	# tmp326, destination_start_word
 675              	.LVL29:
 676              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 677              		.loc 1 304 83 view .LVU179
 678 040f 01F1     		add	ecx, esi	# tmp325, shift
 679              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 680              		.loc 1 304 101 view .LVU180
 681 0411 83E13F   		and	ecx, 63	# _157,
 682              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 683              		.loc 1 304 74 view .LVU181
 684 0414 4129CE   		sub	r14d, ecx	# tmp327, _157
 685              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 686              		.loc 1 304 57 view .LVU182
 687 0417 C44289F7 		shlx	r10, r8, r14	# tmp328, pattern, tmp327
 687      D0
 688              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 689              		.loc 1 304 129 view .LVU183
 690 041c C4C2F3F7 		shrx	rcx, r8, rcx	# tmp329, pattern, _157
 690      C8
 691              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 692              		.loc 1 304 118 view .LVU184
 693 0421 4C09D1   		or	rcx, r10	# tmp330, tmp328
 694 0424 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_163, tmp330
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 695              		.loc 1 303 40 is_stmt 1 view .LVU185
 696 0428 4D8D6F03 		lea	r13, 3[r15]	# i,
 697              	.LVL30:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 698              		.loc 1 303 25 view .LVU186
 699              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 700              		.loc 1 303 5 is_stmt 0 view .LVU187
 701 042c 4D39EC   		cmp	r12, r13	# loop_range, i
 702 042f 0F82B600 		jb	.L8	#,
 702      0000
 703              		.loc 1 304 9 is_stmt 1 view .LVU188
 704              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 705              		.loc 1 304 83 is_stmt 0 view .LVU189
 706 0435 4189D2   		mov	r10d, edx	# tmp331, tmp271
 707 0438 450FAFD5 		imul	r10d, r13d	# tmp331, i
 708              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 709              		.loc 1 304 74 view .LVU190
 710 043c 4189C6   		mov	r14d, eax	# tmp334, pattern_size
 711              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 712              		.loc 1 304 19 view .LVU191
 713 043f 4D01CD   		add	r13, r9	# tmp333, destination_start_word
 714              	.LVL31:
 715              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 716              		.loc 1 304 83 view .LVU192
GAS LISTING /tmp/ccIyIA9Z.s 			page 22


 717 0442 4101F2   		add	r10d, esi	# tmp332, shift
 718              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 719              		.loc 1 304 101 view .LVU193
 720 0445 4183E23F 		and	r10d, 63	# _172,
 721              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 722              		.loc 1 304 74 view .LVU194
 723 0449 4529D6   		sub	r14d, r10d	# tmp334, _172
 724              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 725              		.loc 1 304 57 view .LVU195
 726 044c C44289F7 		shlx	r14, r8, r14	# tmp335, pattern, tmp334
 726      F0
 727              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 728              		.loc 1 304 129 view .LVU196
 729 0451 C4C2ABF7 		shrx	rcx, r8, r10	# tmp336, pattern, _172
 729      C8
 730              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 731              		.loc 1 304 118 view .LVU197
 732 0456 4C09F1   		or	rcx, r14	# tmp337, tmp335
 733 0459 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_178, tmp337
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 734              		.loc 1 303 40 is_stmt 1 view .LVU198
 735 045d 4D8D6F04 		lea	r13, 4[r15]	# i,
 736              	.LVL32:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 737              		.loc 1 303 25 view .LVU199
 738              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 739              		.loc 1 303 5 is_stmt 0 view .LVU200
 740 0461 4D39EC   		cmp	r12, r13	# loop_range, i
 741 0464 0F828100 		jb	.L8	#,
 741      0000
 742              		.loc 1 304 9 is_stmt 1 view .LVU201
 743              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 744              		.loc 1 304 83 is_stmt 0 view .LVU202
 745 046a 4189D2   		mov	r10d, edx	# tmp338, tmp271
 746 046d 450FAFD5 		imul	r10d, r13d	# tmp338, i
 747              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 748              		.loc 1 304 74 view .LVU203
 749 0471 4189C6   		mov	r14d, eax	# tmp341, pattern_size
 750              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 751              		.loc 1 304 19 view .LVU204
 752 0474 4D01CD   		add	r13, r9	# tmp340, destination_start_word
 753              	.LVL33:
 754              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 755              		.loc 1 304 83 view .LVU205
 756 0477 4101F2   		add	r10d, esi	# tmp339, shift
 757              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 758              		.loc 1 304 101 view .LVU206
 759 047a 4183E23F 		and	r10d, 63	# _187,
 760              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 761              		.loc 1 304 74 view .LVU207
 762 047e 4529D6   		sub	r14d, r10d	# tmp341, _187
 763              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 764              		.loc 1 304 57 view .LVU208
 765 0481 C44289F7 		shlx	r14, r8, r14	# tmp342, pattern, tmp341
 765      F0
 766              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccIyIA9Z.s 			page 23


 767              		.loc 1 304 129 view .LVU209
 768 0486 C4C2ABF7 		shrx	rcx, r8, r10	# tmp343, pattern, _187
 768      C8
 769              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 770              		.loc 1 304 118 view .LVU210
 771 048b 4C09F1   		or	rcx, r14	# tmp344, tmp342
 772 048e 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_193, tmp344
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 773              		.loc 1 303 40 is_stmt 1 view .LVU211
 774 0492 4D8D6F05 		lea	r13, 5[r15]	# i,
 775              	.LVL34:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 776              		.loc 1 303 25 view .LVU212
 777              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 778              		.loc 1 303 5 is_stmt 0 view .LVU213
 779 0496 4D39EC   		cmp	r12, r13	# loop_range, i
 780 0499 7250     		jb	.L8	#,
 781              		.loc 1 304 9 is_stmt 1 view .LVU214
 782              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 783              		.loc 1 304 83 is_stmt 0 view .LVU215
 784 049b 4189D2   		mov	r10d, edx	# tmp345, tmp271
 785 049e 450FAFD5 		imul	r10d, r13d	# tmp345, i
 786              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 787              		.loc 1 304 74 view .LVU216
 788 04a2 4189C6   		mov	r14d, eax	# tmp348, pattern_size
 789              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 790              		.loc 1 304 19 view .LVU217
 791 04a5 4D01CD   		add	r13, r9	# tmp347, destination_start_word
 792              	.LVL35:
 793              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 794              		.loc 1 304 83 view .LVU218
 795 04a8 4101F2   		add	r10d, esi	# tmp346, shift
 796              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 797              		.loc 1 304 101 view .LVU219
 798 04ab 4183E23F 		and	r10d, 63	# _202,
 799              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 800              		.loc 1 304 74 view .LVU220
 801 04af 4529D6   		sub	r14d, r10d	# tmp348, _202
 802              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 803              		.loc 1 304 57 view .LVU221
 804 04b2 C44289F7 		shlx	r14, r8, r14	# tmp349, pattern, tmp348
 804      F0
 805              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 806              		.loc 1 304 129 view .LVU222
 807 04b7 C4C2ABF7 		shrx	rcx, r8, r10	# tmp350, pattern, _202
 807      C8
 808              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 809              		.loc 1 303 40 view .LVU223
 810 04bc 4983C706 		add	r15, 6	# i,
 811              	.LVL36:
 812              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 813              		.loc 1 304 118 view .LVU224
 814 04c0 4C09F1   		or	rcx, r14	# tmp351, tmp349
 815 04c3 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_208, tmp351
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
GAS LISTING /tmp/ccIyIA9Z.s 			page 24


 816              		.loc 1 303 40 is_stmt 1 view .LVU225
 817              	.LVL37:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 818              		.loc 1 303 25 view .LVU226
 819              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 820              		.loc 1 303 5 is_stmt 0 view .LVU227
 821 04c7 4D39FC   		cmp	r12, r15	# loop_range, i
 822 04ca 721F     		jb	.L8	#,
 823              		.loc 1 304 9 is_stmt 1 view .LVU228
 824              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 825              		.loc 1 304 83 is_stmt 0 view .LVU229
 826 04cc 410FAFD7 		imul	edx, r15d	# tmp352, i
 827              	.LVL38:
 828              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 829              		.loc 1 304 19 view .LVU230
 830 04d0 4D01CF   		add	r15, r9	# tmp354, destination_start_word
 831              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 832              		.loc 1 304 83 view .LVU231
 833 04d3 01D6     		add	esi, edx	# tmp353, tmp352
 834              	.LVL39:
 835              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 836              		.loc 1 304 101 view .LVU232
 837 04d5 83E63F   		and	esi, 63	# _111,
 838              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 839              		.loc 1 304 74 view .LVU233
 840 04d8 29F0     		sub	eax, esi	# tmp355, _111
 841              	.LVL40:
 842              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 843              		.loc 1 304 57 view .LVU234
 844 04da C4C2F9F7 		shlx	rdx, r8, rax	# tmp356, pattern, tmp355
 844      D0
 845              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 846              		.loc 1 304 129 view .LVU235
 847 04df C4C2CBF7 		shrx	rsi, r8, rsi	# tmp357, pattern, _111
 847      F0
 848              	# sieve_extend.c:304:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 849              		.loc 1 304 118 view .LVU236
 850 04e4 4809D6   		or	rsi, rdx	# tmp358, tmp356
 851 04e7 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_104, tmp358
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 852              		.loc 1 303 40 is_stmt 1 view .LVU237
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 853              		.loc 1 303 25 view .LVU238
 854              	.L8:
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 855              		.loc 1 303 25 is_stmt 0 view .LVU239
 856              	.LBE422:
 305:sieve_extend.c ****     }
 306:sieve_extend.c ****     bitstorage[destination_stop_word] &= chopmask(destination_stop);
 857              		.loc 1 306 5 is_stmt 1 view .LVU240
 858              	# sieve_extend.c:306:     bitstorage[destination_stop_word] &= chopmask(destination_stop);
 859              		.loc 1 306 39 is_stmt 0 view .LVU241
 860 04eb 4A211CDF 		and	QWORD PTR [rdi+r11*8], rbx	# *_57, _124
 861              	# sieve_extend.c:307: }
 307:sieve_extend.c **** }
 862              		.loc 1 307 1 view .LVU242
GAS LISTING /tmp/ccIyIA9Z.s 			page 25


 863 04ef 5B       		pop	rbx	#
 864 04f0 415C     		pop	r12	#
 865              	.LVL41:
 866              		.loc 1 307 1 view .LVU243
 867 04f2 415D     		pop	r13	#
 868 04f4 415E     		pop	r14	#
 869 04f6 415F     		pop	r15	#
 870 04f8 5D       		pop	rbp	#
 871              		.cfi_remember_state
 872              		.cfi_def_cfa 7, 8
 873 04f9 C3       		ret	
 874              	.LVL42:
 875 04fa 660F1F44 		.p2align 4,,10
 875      0000
 876              		.p2align 3
 877              	.L36:
 878              		.cfi_restore_state
 290:sieve_extend.c ****         return;
 879              		.loc 1 290 9 is_stmt 1 view .LVU244
 880              	# sieve_extend.c:290:         bitstorage[destination_start_word] |= (pattern << bitindex(destinatio
 290:sieve_extend.c ****         return;
 881              		.loc 1 290 88 is_stmt 0 view .LVU245
 882 0500 4821D8   		and	rax, rbx	# tmp267, _124
 883              	# sieve_extend.c:290:         bitstorage[destination_start_word] |= (pattern << bitindex(destinatio
 290:sieve_extend.c ****         return;
 884              		.loc 1 290 44 view .LVU246
 885 0503 4C09F8   		or	rax, r15	# tmp268, pretmp_118
 886 0506 49894500 		mov	QWORD PTR 0[r13], rax	# *_117, tmp268
 291:sieve_extend.c ****     }
 887              		.loc 1 291 9 is_stmt 1 view .LVU247
 888              	# sieve_extend.c:307: }
 889              		.loc 1 307 1 is_stmt 0 view .LVU248
 890 050a 5B       		pop	rbx	#
 891 050b 415C     		pop	r12	#
 892 050d 415D     		pop	r13	#
 893 050f 415E     		pop	r14	#
 894              	.LVL43:
 895              		.loc 1 307 1 view .LVU249
 896 0511 415F     		pop	r15	#
 897 0513 5D       		pop	rbp	#
 898              		.cfi_remember_state
 899              		.cfi_def_cfa 7, 8
 900 0514 C3       		ret	
 901              	.LVL44:
 902              	.L37:
 903              		.cfi_restore_state
 904              		.loc 1 307 1 view .LVU250
 905 0515 C5F877   		vzeroupper
 906 0518 EBD1     		jmp	.L8	#
 907              	.LVL45:
 908              	.L9:
 909              	.LBB423:
 910              	# sieve_extend.c:303:     for (counter_t i=0; i<=loop_range; ++i ) {
 303:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 911              		.loc 1 303 20 view .LVU251
 912 051a 4531FF   		xor	r15d, r15d	# niters_vector_mult_vf.160
 913 051d E979FEFF 		jmp	.L6	#
GAS LISTING /tmp/ccIyIA9Z.s 			page 26


 913      FF
 914              	.LBE423:
 915              		.cfi_endproc
 916              	.LFE59:
 918 0522 66662E0F 		.p2align 4
 918      1F840000 
 918      0000000F 
 918      1F00
 919              		.globl	compare_tuning_result
 921              	compare_tuning_result:
 922              	.LVL46:
 923              	.LFB73:
 308:sieve_extend.c **** 
 309:sieve_extend.c **** static void continuePattern_aligned(bitword_t* bitstorage, const counter_t source_start, const coun
 310:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 311:sieve_extend.c **** 
 312:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 313:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 314:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 315:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 316:sieve_extend.c ****     
 317:sieve_extend.c ****     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 318:sieve_extend.c **** 
 319:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 320:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 321:sieve_extend.c ****         copy_word += size;
 322:sieve_extend.c ****     }
 323:sieve_extend.c **** 
 324:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 325:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 326:sieve_extend.c ****         source_word++;
 327:sieve_extend.c ****         copy_word++;
 328:sieve_extend.c ****     }
 329:sieve_extend.c **** 
 330:sieve_extend.c **** }
 331:sieve_extend.c **** 
 332:sieve_extend.c **** static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t source_start, const c
 333:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 334:sieve_extend.c ****    
 335:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 336:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 337:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 338:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 339:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 340:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 341:sieve_extend.c **** 
 342:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstorage[copy_word] >> shift
 343:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 344:sieve_extend.c **** 
 345:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 346:sieve_extend.c **** 
 347:sieve_extend.c ****     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 348:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 349:sieve_extend.c ****     }
 350:sieve_extend.c **** }
 351:sieve_extend.c **** 
 352:sieve_extend.c **** 
GAS LISTING /tmp/ccIyIA9Z.s 			page 27


 353:sieve_extend.c **** static inline counter_t continuePattern_shiftleft_unrolled(bitword_t* __restrict bitstorage, const 
 354:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 355:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 356:sieve_extend.c ****     counter_t distance = 0;
 357:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 358:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 359:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 360:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 361:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 362:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 363:sieve_extend.c ****         copy_word += 2;
 364:sieve_extend.c ****         source_word += 2;
 365:sieve_extend.c ****         distance += 2;
 366:sieve_extend.c ****     }
 367:sieve_extend.c ****     return distance;
 368:sieve_extend.c **** }
 369:sieve_extend.c **** 
 370:sieve_extend.c **** static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t source_start, const co
 371:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 372:sieve_extend.c **** 
 373:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 374:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 375:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 376:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 377:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 378:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 379:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 380:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 381:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 382:sieve_extend.c **** 
 383:sieve_extend.c ****     copy_word++;
 384:sieve_extend.c ****     source_word++;
 385:sieve_extend.c **** 
 386:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 387:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 388:sieve_extend.c ****     source_word += distance;
 389:sieve_extend.c ****     copy_word += distance;
 390:sieve_extend.c **** 
 391:sieve_extend.c ****     debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start - 
 392:sieve_extend.c **** 
 393:sieve_extend.c ****     #pragma GCC ivdep
 394:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 395:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 396:sieve_extend.c ****     }
 397:sieve_extend.c **** 
 398:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 399:sieve_extend.c **** 
 400:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 401:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 402:sieve_extend.c **** 
 403:sieve_extend.c ****     #pragma GCC ivdep
 404:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 405:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 406:sieve_extend.c **** 
 407:sieve_extend.c ****     #pragma GCC ivdep
 408:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 409:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccIyIA9Z.s 			page 28


 410:sieve_extend.c **** 
 411:sieve_extend.c **** 
 412:sieve_extend.c ****  }
 413:sieve_extend.c **** 
 414:sieve_extend.c **** // continue a pattern that start at <source_start> with a size of <size>.
 415:sieve_extend.c **** // repeat this pattern up to <destination_stop>.
 416:sieve_extend.c **** // for small sizes, this is done on a word level
 417:sieve_extend.c **** // for larger sizes, we look at the offset / start bit and apply the appropriate algorithm.
 418:sieve_extend.c **** // note that these algorithms are general for bitstorage and have no specialized assumptions for th
 419:sieve_extend.c **** static inline void continuePattern(bitword_t* bitstorage, const counter_t source_start, const count
 420:sieve_extend.c ****     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorage, source_start, size,
 421:sieve_extend.c **** 
 422:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 423:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 424:sieve_extend.c **** 
 425:sieve_extend.c ****     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, source_start, size, dest
 426:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 427:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 428:sieve_extend.c **** }
 429:sieve_extend.c **** 
 430:sieve_extend.c **** static void sieve_block_stripe(bitword_t* bitstorage, const counter_t block_start, const counter_t 
 431:sieve_extend.c ****     counter_t prime = prime_start;
 432:sieve_extend.c ****     counter_t start = 0;
 433:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 434:sieve_extend.c **** 
 435:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 436:sieve_extend.c ****     
 437:sieve_extend.c ****     while (prime*step <= block_stop) {
 438:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 439:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 440:sieve_extend.c ****         else 
 441:sieve_extend.c ****             start = prime * prime * 2 + prime * 2;
 442:sieve_extend.c **** 
 443:sieve_extend.c ****         if unlikely(step < VECTORSTEP_FASTER) {
 444:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 445:sieve_extend.c ****             prime = searchBitFalse(bitstorage, prime+1 );
 446:sieve_extend.c ****         }
 447:sieve_extend.c ****         else {
 448:sieve_extend.c ****             setBitsTrue_largeRange(bitstorage, start, step, block_stop);
 449:sieve_extend.c ****             prime = searchBitFalse_longRange(bitstorage, prime+1 );
 450:sieve_extend.c ****         }
 451:sieve_extend.c **** 
 452:sieve_extend.c ****         step  = prime * 2 + 1;
 453:sieve_extend.c ****     }
 454:sieve_extend.c **** }
 455:sieve_extend.c **** 
 456:sieve_extend.c **** // structure to help sieve_block_extend report back to the main module
 457:sieve_extend.c **** struct block {
 458:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 459:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 460:sieve_extend.c ****     counter_t prime; // next prime to be striped
 461:sieve_extend.c **** };
 462:sieve_extend.c **** 
 463:sieve_extend.c **** // returns prime that could not be handled:
 464:sieve_extend.c **** // start is too large
 465:sieve_extend.c **** // range is too big
 466:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_t *sieve, const counter_t block_start, const co
GAS LISTING /tmp/ccIyIA9Z.s 			page 29


 467:sieve_extend.c ****     bitword_t* bitstorage      = sieve->bitstorage;
 468:sieve_extend.c ****     register counter_t prime   = 0;
 469:sieve_extend.c ****     counter_t patternsize_bits = 1;
 470:sieve_extend.c ****     counter_t pattern_start    = 0;
 471:sieve_extend.c ****     counter_t range_stop       = block_start;
 472:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 473:sieve_extend.c **** 
 474:sieve_extend.c ****     sieve->bitstorage[wordindex(block_start)] = SAFE_ZERO; // only the first word has to be cleared
 475:sieve_extend.c ****     
 476:sieve_extend.c ****     for (;range_stop < block_stop;) {
 477:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 478:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 479:sieve_extend.c ****         if unlikely(start > block_stop) break;
 480:sieve_extend.c **** 
 481:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 482:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 483:sieve_extend.c **** 
 484:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 485:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 486:sieve_extend.c ****         block.pattern_start = pattern_start;
 487:sieve_extend.c ****         if unlikely(range_stop > block_stop) break;//return block; //range_stop = block_stop;
 488:sieve_extend.c **** 
 489:sieve_extend.c ****         if likely(patternsize_bits>1) {
 490:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 491:sieve_extend.c ****             continuePattern(bitstorage, pattern_start, patternsize_bits, range_stop);
 492:sieve_extend.c ****         }
 493:sieve_extend.c ****         patternsize_bits *= step;
 494:sieve_extend.c **** 
 495:sieve_extend.c ****         if (step < MEDIUMSTEP_FASTER)      setBitsTrue_mediumStep(bitstorage, start, step, range_st
 496:sieve_extend.c ****         else if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bitstorage, start, step, r
 497:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitstorage, start, step, range_st
 498:sieve_extend.c ****         block.prime = prime;
 499:sieve_extend.c ****     } 
 500:sieve_extend.c **** 
 501:sieve_extend.c ****     return block;
 502:sieve_extend.c **** }
 503:sieve_extend.c **** 
 504:sieve_extend.c **** 
 505:sieve_extend.c **** /* This is the main module that does all the work*/
 506:sieve_extend.c **** static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t blocksize) {
 507:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 508:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 509:sieve_extend.c **** 
 510:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 511:sieve_extend.c **** 
 512:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 513:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 514:sieve_extend.c **** 
 515:sieve_extend.c ****     // returns the max prime that was processed in the pattern
 516:sieve_extend.c ****     counter_t startprime = block.prime;
 517:sieve_extend.c **** 
 518:sieve_extend.c ****     // continue the found pattern to the entire sieve
 519:sieve_extend.c ****     continuePattern(bitstorage, block.pattern_start, block.pattern_size, sieve->bits);
 520:sieve_extend.c **** 
 521:sieve_extend.c ****     // in the sieve all bits for the multiples of primes up to startprime have been set
 522:sieve_extend.c ****     // process the sieve and stripe all the multiples of primes > start_prime
 523:sieve_extend.c ****     // do this block by block to minimize cache misses
GAS LISTING /tmp/ccIyIA9Z.s 			page 30


 524:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 525:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 526:sieve_extend.c ****         counter_t prime = searchBitFalse(bitstorage, startprime);
 527:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 528:sieve_extend.c ****     } 
 529:sieve_extend.c **** 
 530:sieve_extend.c ****     // retunr the completed sieve
 531:sieve_extend.c ****     return sieve;
 532:sieve_extend.c **** }
 533:sieve_extend.c **** 
 534:sieve_extend.c **** static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 535:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 536:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 537:sieve_extend.c ****         primeCount++;
 538:sieve_extend.c ****         if (factor < maxFactor/2) {
 539:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 540:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 541:sieve_extend.c ****         }
 542:sieve_extend.c ****     }
 543:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 544:sieve_extend.c **** }
 545:sieve_extend.c **** 
 546:sieve_extend.c **** static counter_t count_primes(struct sieve_t *sieve) {
 547:sieve_extend.c ****     counter_t primeCount = 1;
 548:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 549:sieve_extend.c ****     return primeCount;
 550:sieve_extend.c **** }
 551:sieve_extend.c **** 
 552:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_t *sieve) {
 553:sieve_extend.c ****     printf("DeepAnalyzing\n");
 554:sieve_extend.c ****     counter_t warn_prime = 0;
 555:sieve_extend.c ****     counter_t warn_nonprime = 0;
 556:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 557:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 558:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 559:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 560:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 561:sieve_extend.c ****                 }
 562:sieve_extend.c ****             }
 563:sieve_extend.c ****         }
 564:sieve_extend.c ****         else {
 565:sieve_extend.c ****             counter_t c_prime = 0;
 566:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 567:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 568:sieve_extend.c ****             }
 569:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
 570:sieve_extend.c ****         }
 571:sieve_extend.c ****     }
 572:sieve_extend.c **** }
 573:sieve_extend.c **** 
 574:sieve_extend.c **** 
 575:sieve_extend.c **** int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 576:sieve_extend.c **** 
 577:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
 578:sieve_extend.c ****     counter_t valid_primes = 0;
 579:sieve_extend.c ****     switch(sieve->size) {
 580:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
GAS LISTING /tmp/ccIyIA9Z.s 			page 31


 581:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 582:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 583:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 584:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 585:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 586:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 587:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 588:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 589:sieve_extend.c ****         default:            valid_primes= 0;
 590:sieve_extend.c ****     }
 591:sieve_extend.c **** 
 592:sieve_extend.c ****     int valid = (valid_primes == primecount);
 593:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 594:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 595:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 596:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 597:sieve_extend.c ****     }
 598:sieve_extend.c ****     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
 599:sieve_extend.c ****     return (valid);
 600:sieve_extend.c **** }
 601:sieve_extend.c **** 
 602:sieve_extend.c **** void usage(char *name) {
 603:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 604:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 605:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 606:sieve_extend.c ****     fprintf(stderr, "  --help             This help function\n");
 607:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 608:sieve_extend.c ****     #ifdef _OPENMP
 609:sieve_extend.c ****     fprintf(stderr, "  --threads <count>  Set the maximum number of threads to be used\n");
 610:sieve_extend.c ****     fprintf(stderr, "                     Use 'all' to use all available threads or 'half' for /2 (
 611:sieve_extend.c ****     #endif
 612:sieve_extend.c ****     fprintf(stderr, "  --time  <seconds>  The maximum time (in seconds) to run passes of the sieve 
 613:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 614:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 615:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 616:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 617:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 618:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 619:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 620:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 621:sieve_extend.c ****     exit(1);
 622:sieve_extend.c **** }
 623:sieve_extend.c **** 
 624:sieve_extend.c **** typedef struct  {
 625:sieve_extend.c ****     counter_t maxints;
 626:sieve_extend.c ****     counter_t blocksize_bits;
 627:sieve_extend.c ****     counter_t blocksize_kb;
 628:sieve_extend.c ****     counter_t free_bits;
 629:sieve_extend.c ****     counter_t smallstep_faster;
 630:sieve_extend.c ****     counter_t mediumstep_faster;
 631:sieve_extend.c ****     counter_t vectorstep_faster;
 632:sieve_extend.c ****     counter_t threads;
 633:sieve_extend.c ****     counter_t sample_max;
 634:sieve_extend.c ****     double    sample_duration;
 635:sieve_extend.c ****     counter_t passes;
 636:sieve_extend.c ****     double    elapsed_time;
 637:sieve_extend.c ****     double    avg;
GAS LISTING /tmp/ccIyIA9Z.s 			page 32


 638:sieve_extend.c **** } tuning_result_type;
 639:sieve_extend.c **** 
 640:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 924              		.loc 1 640 57 is_stmt 1 view -0
 925              		.cfi_startproc
 926              		.loc 1 640 57 is_stmt 0 view .LVU253
 927 0530 F30F1EFA 		endbr64	
 641:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 928              		.loc 1 641 5 is_stmt 1 view .LVU254
 929              	.LVL47:
 642:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 930              		.loc 1 642 5 view .LVU255
 643:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 931              		.loc 1 643 5 view .LVU256
 932              	# sieve_extend.c:643:     return (resultB->avg > resultA->avg ? 1 : -1);
 933              		.loc 1 643 45 is_stmt 0 view .LVU257
 934 0534 C5FB1046 		vmovsd	xmm0, QWORD PTR 96[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 934      60
 935 0539 31C0     		xor	eax, eax	# <retval>
 936 053b C5F92F47 		vcomisd	xmm0, QWORD PTR 96[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 936      60
 937 0540 0F97C0   		seta	al	#, <retval>
 938 0543 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 939              	# sieve_extend.c:644: }
 644:sieve_extend.c **** }
 940              		.loc 1 644 1 view .LVU258
 941 0547 C3       		ret	
 942              		.cfi_endproc
 943              	.LFE73:
 945 0548 0F1F8400 		.p2align 4
 945      00000000 
 947              	continuePattern_shiftright:
 948              	.LVL48:
 949              	.LFB61:
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 950              		.loc 1 332 149 is_stmt 1 view -0
 951              		.cfi_startproc
 333:sieve_extend.c ****    
 952              		.loc 1 333 5 view .LVU260
 335:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 953              		.loc 1 335 5 view .LVU261
 954              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 955              		.loc 1 332 149 is_stmt 0 view .LVU262
 956 0550 55       		push	rbp	#
 957              		.cfi_def_cfa_offset 16
 958              		.cfi_offset 6, -16
 959              	# sieve_extend.c:336:     const counter_t copy_start = source_start + size;
 336:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 960              		.loc 1 336 21 view .LVU263
 961 0551 4801F2   		add	rdx, rsi	# copy_start, source_start
 962              	.LVL49:
 963              	# sieve_extend.c:337:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 964              		.loc 1 337 39 view .LVU264
 965 0554 4989D2   		mov	r10, rdx	# _4, copy_start
 966              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
GAS LISTING /tmp/ccIyIA9Z.s 			page 33


 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 967              		.loc 1 332 149 view .LVU265
 968 0557 4889E5   		mov	rbp, rsp	#,
 969              		.cfi_def_cfa_register 6
 970 055a 4157     		push	r15	#
 971              	# sieve_extend.c:337:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 972              		.loc 1 337 39 view .LVU266
 973 055c 4183E23F 		and	r10d, 63	# _4,
 974              	# sieve_extend.c:337:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 975              		.loc 1 337 67 view .LVU267
 976 0560 4989F1   		mov	r9, rsi	# _5, source_start
 977              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 978              		.loc 1 332 149 view .LVU268
 979 0563 4156     		push	r14	#
 980              	# sieve_extend.c:339:     register counter_t source_word = wordindex(source_start);
 339:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 981              		.loc 1 339 24 view .LVU269
 982 0565 4889F0   		mov	rax, rsi	# source_start, source_start
 983 0568 48C1E806 		shr	rax, 6	# source_start,
 984              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 985              		.loc 1 332 149 view .LVU270
 986 056c 4155     		push	r13	#
 987              	# sieve_extend.c:337:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 988              		.loc 1 337 67 view .LVU271
 989 056e 4183E13F 		and	r9d, 63	# _5,
 990              	# sieve_extend.c:340:     register counter_t copy_word = wordindex(copy_start);
 340:sieve_extend.c **** 
 991              		.loc 1 340 24 view .LVU272
 992 0572 48C1EA06 		shr	rdx, 6	# copy_word,
 993              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 994              		.loc 1 332 149 view .LVU273
 995 0576 4154     		push	r12	#
 996              		.cfi_offset 15, -24
 997              		.cfi_offset 14, -32
 998              		.cfi_offset 13, -40
 999              		.cfi_offset 12, -48
 1000              	# sieve_extend.c:337:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1001              		.loc 1 337 31 view .LVU274
 1002 0578 4D89D4   		mov	r12, r10	# shift, _4
 1003 057b 4D29CC   		sub	r12, r9	# shift, _5
 1004              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1005              		.loc 1 332 149 view .LVU275
 1006 057e 53       		push	rbx	#
 1007              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1008              		.loc 1 342 27 view .LVU276
 1009 057f 4C8D2CD5 		lea	r13, 0[0+rdx*8]	# _6,
 1009      00000000 
 1010              		.cfi_offset 3, -56
GAS LISTING /tmp/ccIyIA9Z.s 			page 34


 1011              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1012              		.loc 1 342 42 view .LVU277
 1013 0587 488D1CC5 		lea	rbx, 0[0+rax*8]	# _9,
 1013      00000000 
 1014              	# sieve_extend.c:332: static void continuePattern_shiftright(bitword_t* bitstorage, const counter_t
 332:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1015              		.loc 1 332 149 view .LVU278
 1016 058f 4883E4E0 		and	rsp, -32	#,
 1017              	# sieve_extend.c:338:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 338:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1018              		.loc 1 338 31 view .LVU279
 1019 0593 4983C140 		add	r9, 64	# tmp193,
 1020              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1021              		.loc 1 342 27 view .LVU280
 1022 0597 4E8D342F 		lea	r14, [rdi+r13]	# _7,
 1023              	# sieve_extend.c:338:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 338:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1024              		.loc 1 338 31 view .LVU281
 1025 059b 4D29D1   		sub	r9, r10	# shift_flipped, _4
 1026              	# sieve_extend.c:339:     register counter_t source_word = wordindex(source_start);
 339:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1027              		.loc 1 339 24 view .LVU282
 1028 059e 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, source_word
 1028      F8
 1029              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1030              		.loc 1 342 113 view .LVU283
 1031 05a3 48C7C6FF 		mov	rsi, -1	# tmp201,
 1031      FFFFFF
 1032              	.LVL50:
 1033              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1034              		.loc 1 342 42 view .LVU284
 1035 05aa 488D041F 		lea	rax, [rdi+rbx]	# _10,
 1036              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1037              		.loc 1 342 56 view .LVU285
 1038 05ae C46299F7 		shlx	r11, QWORD PTR [rax], r12	# tmp195, *_10, shift
 1038      18
 1039              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1040              		.loc 1 342 92 view .LVU286
 1041 05b3 C442B3F7 		shrx	r15, QWORD PTR [r14], r9	# tmp197, *_7, shift_flipped
 1041      3E
 1042              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1043              		.loc 1 342 113 view .LVU287
 1044 05b8 C462A9F7 		shlx	r8, rsi, r10	# tmp200, tmp201, _4
 1044      C6
 1045              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1046              		.loc 1 342 66 view .LVU288
 1047 05bd 4D09DF   		or	r15, r11	# tmp198, tmp195
 1048              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
GAS LISTING /tmp/ccIyIA9Z.s 			page 35


 1049              		.loc 1 342 27 view .LVU289
 1050 05c0 4D8B16   		mov	r10, QWORD PTR [r14]	# tmp202, *_7
 1051              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1052              		.loc 1 342 111 view .LVU290
 1053 05c3 4D21F8   		and	r8, r15	# tmp202, tmp198
 1054              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1055              		.loc 1 342 27 view .LVU291
 1056 05c6 4D09C2   		or	r10, r8	# tmp202, tmp202
 1057              	# sieve_extend.c:335:     const counter_t destination_stop_word = wordindex(destination_stop);
 335:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1058              		.loc 1 335 21 view .LVU292
 1059 05c9 48C1E906 		shr	rcx, 6	# destination_stop_word,
 1060              	.LVL51:
 336:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1061              		.loc 1 336 5 is_stmt 1 view .LVU293
 337:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1062              		.loc 1 337 5 view .LVU294
 338:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1063              		.loc 1 338 5 view .LVU295
 339:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1064              		.loc 1 339 5 view .LVU296
 340:sieve_extend.c **** 
 1065              		.loc 1 340 5 view .LVU297
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1066              		.loc 1 342 5 view .LVU298
 1067              	# sieve_extend.c:343:     if unlikely(++copy_word > destination_stop_word) return; // rapid exit fo
 343:sieve_extend.c **** 
 1068              		.loc 1 343 8 is_stmt 0 view .LVU299
 1069 05cd 4C8D5A01 		lea	r11, 1[rdx]	# copy_word,
 1070              	# sieve_extend.c:342:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 342:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1071              		.loc 1 342 27 view .LVU300
 1072 05d1 4D8916   		mov	QWORD PTR [r14], r10	# *_7, tmp203
 343:sieve_extend.c **** 
 1073              		.loc 1 343 5 is_stmt 1 view .LVU301
 1074              	.LVL52:
 1075              	# sieve_extend.c:343:     if unlikely(++copy_word > destination_stop_word) return; // rapid exit fo
 343:sieve_extend.c **** 
 1076              		.loc 1 343 8 is_stmt 0 view .LVU302
 1077 05d4 4C39D9   		cmp	rcx, r11	# destination_stop_word, copy_word
 1078 05d7 0F823103 		jb	.L134	#,
 1078      0000
 1079 05dd 4C8D7328 		lea	r14, 40[rbx]	# tmp205,
 1080 05e1 4D8D5508 		lea	r10, 8[r13]	# tmp204,
 1081 05e5 4D39F2   		cmp	r10, r14	# tmp204, tmp205
 1082 05e8 4D8D7528 		lea	r14, 40[r13]	# tmp208,
 1083 05ec 410F9DC7 		setge	r15b	#, tmp207
 1084 05f0 4C39F3   		cmp	rbx, r14	# _9, tmp208
 1085 05f3 410F9DC6 		setge	r14b	#, tmp210
 1086 05f7 4508F7   		or	r15b, r14b	# tmp207, tmp210
 1087 05fa 4489E6   		mov	esi, r12d	# _12, shift
 1088 05fd 4589C8   		mov	r8d, r9d	# _14, shift_flipped
 1089 0600 0F843203 		je	.L43	#,
 1089      0000
 1090 0606 4C8D79FF 		lea	r15, -1[rcx]	# tmp212,
GAS LISTING /tmp/ccIyIA9Z.s 			page 36


 1091 060a 4929D7   		sub	r15, rdx	# tmp213, copy_word
 1092 060d 4983FF03 		cmp	r15, 3	# tmp213,
 1093 0611 0F862103 		jbe	.L43	#,
 1093      0000
 1094 0617 4989CD   		mov	r13, rcx	# niters.187, destination_stop_word
 1095 061a 4929D5   		sub	r13, rdx	# niters.187, copy_word
 1096 061d 4D89EE   		mov	r14, r13	# bnd.188, niters.187
 1097 0620 49C1EE02 		shr	r14, 2	# bnd.188,
 1098 0624 49C1E605 		sal	r14, 5	# _165,
 1099 0628 498D76E0 		lea	rsi, -32[r14]	# tmp260,
 1100 062c 48C1EE05 		shr	rsi, 5	# tmp258,
 1101 0630 48FFC6   		inc	rsi	# tmp261
 1102 0633 488D5C1F 		lea	rbx, 8[rdi+rbx]	# vectp.197,
 1102      08
 1103 0638 4901FA   		add	r10, rdi	# vectp.202, bitstorage
 1104 063b 31D2     		xor	edx, edx	# ivtmp.219
 1105 063d C4C1796E 		vmovd	xmm1, r9d	# _14, _14
 1105      C9
 1106 0642 C4C1796E 		vmovd	xmm0, r12d	# _12, _12
 1106      C4
 1107 0647 83E607   		and	esi, 7	# tmp262,
 1108 064a 0F841A01 		je	.L44	#,
 1108      0000
 1109 0650 4883FE01 		cmp	rsi, 1	# tmp262,
 1110 0654 0F84E700 		je	.L96	#,
 1110      0000
 1111 065a 4883FE02 		cmp	rsi, 2	# tmp262,
 1112 065e 0F84BD00 		je	.L97	#,
 1112      0000
 1113 0664 4883FE03 		cmp	rsi, 3	# tmp262,
 1114 0668 0F849200 		je	.L98	#,
 1114      0000
 1115 066e 4883FE04 		cmp	rsi, 4	# tmp262,
 1116 0672 746C     		je	.L99	#,
 1117 0674 4883FE05 		cmp	rsi, 5	# tmp262,
 1118 0678 7445     		je	.L100	#,
 1119 067a 4883FE06 		cmp	rsi, 6	# tmp262,
 1120 067e 741E     		je	.L101	#,
 1121              	.LVL53:
 348:sieve_extend.c ****     }
 1122              		.loc 1 348 9 is_stmt 1 view .LVU303
 1123              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1124              		.loc 1 348 58 is_stmt 0 view .LVU304
 1125 0680 C5FE6F30 		vmovdqu	ymm6, YMMWORD PTR [rax]	# tmp469, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1126              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1127              		.loc 1 348 105 view .LVU305
 1128 0684 C5FE6F3B 		vmovdqu	ymm7, YMMWORD PTR [rbx]	# tmp470, MEM[base: vectp.197_117, index: ivtmp.219_163, offset: 0
 1129              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1130              		.loc 1 348 58 view .LVU306
 1131 0688 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__29.195, tmp469, _14
 1132              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1133              		.loc 1 348 105 view .LVU307
 1134 068c C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__34.199, tmp470, _12
GAS LISTING /tmp/ccIyIA9Z.s 			page 37


 1135 0690 BA200000 		mov	edx, 32	# ivtmp.219,
 1135      00
 1136              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1137              		.loc 1 348 76 view .LVU308
 1138 0695 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__37.200, vect__29.195, vect__34.199
 1139              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1140              		.loc 1 348 31 view .LVU309
 1141 0699 C4C17E7F 		vmovdqu	YMMWORD PTR [r10], ymm4	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B], vect
 1141      22
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1142              		.loc 1 347 48 is_stmt 1 view .LVU310
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1143              		.loc 1 347 12 view .LVU311
 1144              	.L101:
 348:sieve_extend.c ****     }
 1145              		.loc 1 348 9 view .LVU312
 1146              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1147              		.loc 1 348 58 is_stmt 0 view .LVU313
 1148 069e C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rax+rdx]	# tmp471, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1148      10
 1149              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1150              		.loc 1 348 105 view .LVU314
 1151 06a3 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rbx+rdx]	# tmp472, MEM[base: vectp.197_117, index: ivtmp.219_163, offse
 1151      13
 1152              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1153              		.loc 1 348 58 view .LVU315
 1154 06a8 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__29.195, tmp471, _14
 1155              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1156              		.loc 1 348 105 view .LVU316
 1157 06ac C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__34.199, tmp472, _12
 1158              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1159              		.loc 1 348 76 view .LVU317
 1160 06b0 C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__37.200, vect__29.195, vect__34.199
 1160      DA
 1161              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1162              		.loc 1 348 31 view .LVU318
 1163 06b5 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm11	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B],
 1163      1C12
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1164              		.loc 1 347 48 is_stmt 1 view .LVU319
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1165              		.loc 1 347 12 view .LVU320
 1166 06bb 4883C220 		add	rdx, 32	# ivtmp.219,
 1167              	.L100:
 348:sieve_extend.c ****     }
 1168              		.loc 1 348 9 view .LVU321
 1169              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1170              		.loc 1 348 58 is_stmt 0 view .LVU322
GAS LISTING /tmp/ccIyIA9Z.s 			page 38


 1171 06bf C57E6F24 		vmovdqu	ymm12, YMMWORD PTR [rax+rdx]	# tmp473, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1171      10
 1172              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1173              		.loc 1 348 105 view .LVU323
 1174 06c4 C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rbx+rdx]	# tmp474, MEM[base: vectp.197_117, index: ivtmp.219_163, offs
 1174      13
 1175              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1176              		.loc 1 348 58 view .LVU324
 1177 06c9 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__29.195, tmp473, _14
 1178              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1179              		.loc 1 348 105 view .LVU325
 1180 06cd C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__34.199, tmp474, _12
 1181              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1182              		.loc 1 348 76 view .LVU326
 1183 06d1 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__37.200, vect__29.195, vect__34.199
 1183      F7
 1184              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1185              		.loc 1 348 31 view .LVU327
 1186 06d6 C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm6	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B], 
 1186      3412
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1187              		.loc 1 347 48 is_stmt 1 view .LVU328
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1188              		.loc 1 347 12 view .LVU329
 1189 06dc 4883C220 		add	rdx, 32	# ivtmp.219,
 1190              	.L99:
 348:sieve_extend.c ****     }
 1191              		.loc 1 348 9 view .LVU330
 1192              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1193              		.loc 1 348 58 is_stmt 0 view .LVU331
 1194 06e0 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rax+rdx]	# tmp475, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1194      10
 1195              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1196              		.loc 1 348 105 view .LVU332
 1197 06e5 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rbx+rdx]	# tmp476, MEM[base: vectp.197_117, index: ivtmp.219_163, offse
 1197      13
 1198              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1199              		.loc 1 348 58 view .LVU333
 1200 06ea C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__29.195, tmp475, _14
 1201              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1202              		.loc 1 348 105 view .LVU334
 1203 06ee C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__34.199, tmp476, _12
 1204              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1205              		.loc 1 348 76 view .LVU335
 1206 06f2 C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__37.200, vect__29.195, vect__34.199
 1207              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 39


 1208              		.loc 1 348 31 view .LVU336
 1209 06f6 C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm5	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B], 
 1209      2C12
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1210              		.loc 1 347 48 is_stmt 1 view .LVU337
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1211              		.loc 1 347 12 view .LVU338
 1212 06fc 4883C220 		add	rdx, 32	# ivtmp.219,
 1213              	.L98:
 348:sieve_extend.c ****     }
 1214              		.loc 1 348 9 view .LVU339
 1215              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1216              		.loc 1 348 58 is_stmt 0 view .LVU340
 1217 0700 C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rax+rdx]	# tmp477, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1217      10
 1218              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1219              		.loc 1 348 105 view .LVU341
 1220 0705 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rbx+rdx]	# tmp478, MEM[base: vectp.197_117, index: ivtmp.219_163, offs
 1220      13
 1221              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1222              		.loc 1 348 58 view .LVU342
 1223 070a C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__29.195, tmp477, _14
 1224              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1225              		.loc 1 348 105 view .LVU343
 1226 070e C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__34.199, tmp478, _12
 1227              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1228              		.loc 1 348 76 view .LVU344
 1229 0712 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__37.200, vect__29.195, vect__34.199
 1229      E3
 1230              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1231              		.loc 1 348 31 view .LVU345
 1232 0717 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm12	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B],
 1232      2412
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1233              		.loc 1 347 48 is_stmt 1 view .LVU346
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1234              		.loc 1 347 12 view .LVU347
 1235 071d 4883C220 		add	rdx, 32	# ivtmp.219,
 1236              	.L97:
 348:sieve_extend.c ****     }
 1237              		.loc 1 348 9 view .LVU348
 1238              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1239              		.loc 1 348 58 is_stmt 0 view .LVU349
 1240 0721 C57E6F2C 		vmovdqu	ymm13, YMMWORD PTR [rax+rdx]	# tmp479, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1240      10
 1241              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1242              		.loc 1 348 105 view .LVU350
 1243 0726 C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rbx+rdx]	# tmp480, MEM[base: vectp.197_117, index: ivtmp.219_163, offs
 1243      13
GAS LISTING /tmp/ccIyIA9Z.s 			page 40


 1244              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1245              		.loc 1 348 58 view .LVU351
 1246 072b C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__29.195, tmp479, _14
 1247              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1248              		.loc 1 348 105 view .LVU352
 1249 072f C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__34.199, tmp480, _12
 1250              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1251              		.loc 1 348 76 view .LVU353
 1252 0733 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__37.200, vect__29.195, vect__34.199
 1253              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1254              		.loc 1 348 31 view .LVU354
 1255 0737 C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm2	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B], 
 1255      1412
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1256              		.loc 1 347 48 is_stmt 1 view .LVU355
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1257              		.loc 1 347 12 view .LVU356
 1258 073d 4883C220 		add	rdx, 32	# ivtmp.219,
 1259              	.L96:
 348:sieve_extend.c ****     }
 1260              		.loc 1 348 9 view .LVU357
 1261              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1262              		.loc 1 348 58 is_stmt 0 view .LVU358
 1263 0741 C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rax+rdx]	# tmp481, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1263      10
 1264              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1265              		.loc 1 348 105 view .LVU359
 1266 0746 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rbx+rdx]	# tmp482, MEM[base: vectp.197_117, index: ivtmp.219_163, offse
 1266      13
 1267              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1268              		.loc 1 348 58 view .LVU360
 1269 074b C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__29.195, tmp481, _14
 1270              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1271              		.loc 1 348 105 view .LVU361
 1272 074f C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__34.199, tmp482, _12
 1273              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1274              		.loc 1 348 76 view .LVU362
 1275 0753 C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__37.200, vect__29.195, vect__34.199
 1276              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1277              		.loc 1 348 31 view .LVU363
 1278 0757 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm8	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B], 
 1278      0412
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1279              		.loc 1 347 48 is_stmt 1 view .LVU364
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1280              		.loc 1 347 12 view .LVU365
 1281 075d 4883C220 		add	rdx, 32	# ivtmp.219,
GAS LISTING /tmp/ccIyIA9Z.s 			page 41


 1282 0761 4C39F2   		cmp	rdx, r14	# ivtmp.219, _165
 1283 0764 0F842E01 		je	.L126	#,
 1283      0000
 1284              	.L44:
 348:sieve_extend.c ****     }
 1285              		.loc 1 348 9 discriminator 2 view .LVU366
 1286              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1287              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU367
 1288 076a C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rax+rdx]	# tmp448, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1288      10
 1289              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1290              		.loc 1 348 105 discriminator 2 view .LVU368
 1291 076f C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rbx+rdx]	# tmp449, MEM[base: vectp.197_117, index: ivtmp.219_163, offs
 1291      13
 1292              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1293              		.loc 1 348 58 discriminator 2 view .LVU369
 1294 0774 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__29.195, tmp448, _14
 1295              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1296              		.loc 1 348 105 discriminator 2 view .LVU370
 1297 0778 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__34.199, tmp449, _12
 1298              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1299              		.loc 1 348 76 discriminator 2 view .LVU371
 1300 077c C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__37.200, vect__29.195, vect__34.199
 1300      EC
 1301              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1302              		.loc 1 348 31 discriminator 2 view .LVU372
 1303 0781 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm13	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B],
 1303      2C12
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1304              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU373
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1305              		.loc 1 347 12 discriminator 2 view .LVU374
 348:sieve_extend.c ****     }
 1306              		.loc 1 348 9 discriminator 2 view .LVU375
 1307              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1308              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU376
 1309 0787 C57E6F74 		vmovdqu	ymm14, YMMWORD PTR 32[rax+rdx]	# tmp450, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1309      1020
 1310              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1311              		.loc 1 348 105 discriminator 2 view .LVU377
 1312 078d C5FE6F74 		vmovdqu	ymm6, YMMWORD PTR 32[rbx+rdx]	# tmp451, MEM[base: vectp.197_117, index: ivtmp.219_163, off
 1312      1320
 1313              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1314              		.loc 1 348 58 discriminator 2 view .LVU378
 1315 0793 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__29.195, tmp450, _14
 1316              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1317              		.loc 1 348 105 discriminator 2 view .LVU379
GAS LISTING /tmp/ccIyIA9Z.s 			page 42


 1318 0797 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__34.199, tmp451, _12
 1319              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1320              		.loc 1 348 76 discriminator 2 view .LVU380
 1321 079b C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__37.200, vect__29.195, vect__34.199
 1322              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1323              		.loc 1 348 31 discriminator 2 view .LVU381
 1324 079f C4C17E7F 		vmovdqu	YMMWORD PTR 32[r10+rdx], ymm7	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B]
 1324      7C1220
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1325              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU382
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1326              		.loc 1 347 12 discriminator 2 view .LVU383
 348:sieve_extend.c ****     }
 1327              		.loc 1 348 9 discriminator 2 view .LVU384
 1328              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1329              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU385
 1330 07a6 C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rax+rdx]	# tmp452, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1330      1040
 1331              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1332              		.loc 1 348 105 discriminator 2 view .LVU386
 1333 07ac C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rbx+rdx]	# tmp453, MEM[base: vectp.197_117, index: ivtmp.219_163, off
 1333      1340
 1334              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1335              		.loc 1 348 58 discriminator 2 view .LVU387
 1336 07b2 C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__29.195, tmp452, _14
 1337              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1338              		.loc 1 348 105 discriminator 2 view .LVU388
 1339 07b6 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__34.199, tmp453, _12
 1340              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1341              		.loc 1 348 76 discriminator 2 view .LVU389
 1342 07ba C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__37.200, vect__29.195, vect__34.199
 1342      C8
 1343              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1344              		.loc 1 348 31 discriminator 2 view .LVU390
 1345 07bf C4417E7F 		vmovdqu	YMMWORD PTR 64[r10+rdx], ymm9	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B]
 1345      4C1240
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1346              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU391
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1347              		.loc 1 347 12 discriminator 2 view .LVU392
 348:sieve_extend.c ****     }
 1348              		.loc 1 348 9 discriminator 2 view .LVU393
 1349              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1350              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU394
 1351 07c6 C57E6F54 		vmovdqu	ymm10, YMMWORD PTR 96[rax+rdx]	# tmp454, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1351      1060
 1352              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 43


 1353              		.loc 1 348 105 discriminator 2 view .LVU395
 1354 07cc C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 96[rbx+rdx]	# tmp455, MEM[base: vectp.197_117, index: ivtmp.219_163, of
 1354      1360
 1355              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1356              		.loc 1 348 58 discriminator 2 view .LVU396
 1357 07d2 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__29.195, tmp454, _14
 1358              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1359              		.loc 1 348 105 discriminator 2 view .LVU397
 1360 07d6 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__34.199, tmp455, _12
 1361              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1362              		.loc 1 348 76 discriminator 2 view .LVU398
 1363 07da C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__37.200, vect__29.195, vect__34.199
 1363      F5
 1364              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1365              		.loc 1 348 31 discriminator 2 view .LVU399
 1366 07df C4417E7F 		vmovdqu	YMMWORD PTR 96[r10+rdx], ymm14	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B
 1366      741260
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1367              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU400
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1368              		.loc 1 347 12 discriminator 2 view .LVU401
 348:sieve_extend.c ****     }
 1369              		.loc 1 348 9 discriminator 2 view .LVU402
 1370              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1371              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU403
 1372 07e6 C57E6FBC 		vmovdqu	ymm15, YMMWORD PTR 128[rax+rdx]	# tmp456, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1372      10800000 
 1372      00
 1373              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1374              		.loc 1 348 105 discriminator 2 view .LVU404
 1375 07ef C5FE6F94 		vmovdqu	ymm2, YMMWORD PTR 128[rbx+rdx]	# tmp457, MEM[base: vectp.197_117, index: ivtmp.219_163, of
 1375      13800000 
 1375      00
 1376              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1377              		.loc 1 348 58 discriminator 2 view .LVU405
 1378 07f8 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__29.195, tmp456, _14
 1379              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1380              		.loc 1 348 105 discriminator 2 view .LVU406
 1381 07fc C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__34.199, tmp457, _12
 1382              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1383              		.loc 1 348 76 discriminator 2 view .LVU407
 1384 0800 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__37.200, vect__29.195, vect__34.199
 1385              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1386              		.loc 1 348 31 discriminator 2 view .LVU408
 1387 0804 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r10+rdx], ymm4	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B
 1387      A4128000 
 1387      0000
GAS LISTING /tmp/ccIyIA9Z.s 			page 44


 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1388              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU409
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1389              		.loc 1 347 12 discriminator 2 view .LVU410
 348:sieve_extend.c ****     }
 1390              		.loc 1 348 9 discriminator 2 view .LVU411
 1391              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1392              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU412
 1393 080e C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 160[rax+rdx]	# tmp458, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1393      10A00000 
 1393      00
 1394              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1395              		.loc 1 348 105 discriminator 2 view .LVU413
 1396 0817 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rbx+rdx]	# tmp459, MEM[base: vectp.197_117, index: ivtmp.219_163, of
 1396      13A00000 
 1396      00
 1397              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1398              		.loc 1 348 58 discriminator 2 view .LVU414
 1399 0820 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__29.195, tmp458, _14
 1400              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1401              		.loc 1 348 105 discriminator 2 view .LVU415
 1402 0824 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__34.199, tmp459, _12
 1403              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1404              		.loc 1 348 76 discriminator 2 view .LVU416
 1405 0828 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__37.200, vect__29.195, vect__34.199
 1405      D1
 1406              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1407              		.loc 1 348 31 discriminator 2 view .LVU417
 1408 082d C4417E7F 		vmovdqu	YMMWORD PTR 160[r10+rdx], ymm10	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0
 1408      9412A000 
 1408      0000
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1409              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU418
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1410              		.loc 1 347 12 discriminator 2 view .LVU419
 348:sieve_extend.c ****     }
 1411              		.loc 1 348 9 discriminator 2 view .LVU420
 1412              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1413              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU421
 1414 0837 C57E6F9C 		vmovdqu	ymm11, YMMWORD PTR 192[rax+rdx]	# tmp460, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1414      10C00000 
 1414      00
 1415              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1416              		.loc 1 348 105 discriminator 2 view .LVU422
 1417 0840 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 192[rbx+rdx]	# tmp461, MEM[base: vectp.197_117, index: ivtmp.219_163, o
 1417      13C00000 
 1417      00
 1418              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 45


 1419              		.loc 1 348 58 discriminator 2 view .LVU423
 1420 0849 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__29.195, tmp460, _14
 1421              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1422              		.loc 1 348 105 discriminator 2 view .LVU424
 1423 084d C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__34.199, tmp461, _12
 1424              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1425              		.loc 1 348 76 discriminator 2 view .LVU425
 1426 0851 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__37.200, vect__29.195, vect__34.199
 1426      FE
 1427              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1428              		.loc 1 348 31 discriminator 2 view .LVU426
 1429 0856 C4417E7F 		vmovdqu	YMMWORD PTR 192[r10+rdx], ymm15	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0
 1429      BC12C000 
 1429      0000
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1430              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU427
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1431              		.loc 1 347 12 discriminator 2 view .LVU428
 348:sieve_extend.c ****     }
 1432              		.loc 1 348 9 discriminator 2 view .LVU429
 1433              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1434              		.loc 1 348 58 is_stmt 0 discriminator 2 view .LVU430
 1435 0860 C5FE6FB4 		vmovdqu	ymm6, YMMWORD PTR 224[rax+rdx]	# tmp462, MEM[base: _10, index: ivtmp.219_163, offset: 0B]
 1435      10E00000 
 1435      00
 1436              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1437              		.loc 1 348 105 discriminator 2 view .LVU431
 1438 0869 C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 224[rbx+rdx]	# tmp463, MEM[base: vectp.197_117, index: ivtmp.219_163, of
 1438      13E00000 
 1438      00
 1439              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1440              		.loc 1 348 58 discriminator 2 view .LVU432
 1441 0872 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__29.195, tmp462, _14
 1442              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1443              		.loc 1 348 105 discriminator 2 view .LVU433
 1444 0876 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__34.199, tmp463, _12
 1445              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1446              		.loc 1 348 76 discriminator 2 view .LVU434
 1447 087a C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__37.200, vect__29.195, vect__34.199
 1448              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1449              		.loc 1 348 31 discriminator 2 view .LVU435
 1450 087e C4C17E7F 		vmovdqu	YMMWORD PTR 224[r10+rdx], ymm5	# MEM[base: vectp.202_125, index: ivtmp.219_163, offset: 0B
 1450      AC12E000 
 1450      0000
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1451              		.loc 1 347 48 is_stmt 1 discriminator 2 view .LVU436
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1452              		.loc 1 347 12 discriminator 2 view .LVU437
GAS LISTING /tmp/ccIyIA9Z.s 			page 46


 1453 0888 4881C200 		add	rdx, 256	# ivtmp.219,
 1453      010000
 1454 088f 4C39F2   		cmp	rdx, r14	# ivtmp.219, _165
 1455 0892 0F85D2FE 		jne	.L44	#,
 1455      FFFF
 1456              	.L126:
 1457 0898 4C8B7C24 		mov	r15, QWORD PTR -8[rsp]	# source_word, %sfp
 1457      F8
 1458 089d 4C89E8   		mov	rax, r13	# niters_vector_mult_vf.189, niters.187
 1459 08a0 4883E0FC 		and	rax, -4	# niters_vector_mult_vf.189,
 1460 08a4 4901C3   		add	r11, rax	# tmp.190, niters_vector_mult_vf.189
 1461 08a7 4901C7   		add	r15, rax	# source_word, niters_vector_mult_vf.189
 1462 08aa 4939C5   		cmp	r13, rax	# niters.187, niters_vector_mult_vf.189
 1463 08ad 7471     		je	.L133	#,
 1464              	.LVL54:
 348:sieve_extend.c ****     }
 1465              		.loc 1 348 9 view .LVU438
 1466              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1467              		.loc 1 348 105 is_stmt 0 view .LVU439
 1468 08af C42299F7 		shlx	r8, QWORD PTR 8[rdi+r15*8], r12	# tmp226, *_33, shift
 1468      44FF08
 1469              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1470              		.loc 1 348 58 view .LVU440
 1471 08b6 C422B3F7 		shrx	r13, QWORD PTR [rdi+r15*8], r9	# tmp228, *_28, shift_flipped
 1471      2CFF
 1472              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1473              		.loc 1 347 48 view .LVU441
 1474 08bc 498D5B01 		lea	rbx, 1[r11]	# copy_word,
 1475              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1476              		.loc 1 348 76 view .LVU442
 1477 08c0 4D09E8   		or	r8, r13	# tmp230, tmp228
 1478 08c3 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_37, tmp230
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1479              		.loc 1 347 48 is_stmt 1 view .LVU443
 1480              	.LVL55:
 1481              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1482              		.loc 1 348 89 is_stmt 0 view .LVU444
 1483 08c7 4D8D5701 		lea	r10, 1[r15]	# _31,
 1484              	.LVL56:
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1485              		.loc 1 347 12 is_stmt 1 view .LVU445
 1486              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1487              		.loc 1 347 5 is_stmt 0 view .LVU446
 1488 08cb 4839D9   		cmp	rcx, rbx	# destination_stop_word, copy_word
 1489 08ce 7250     		jb	.L133	#,
 348:sieve_extend.c ****     }
 1490              		.loc 1 348 9 is_stmt 1 view .LVU447
 1491              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1492              		.loc 1 348 58 is_stmt 0 view .LVU448
 1493 08d0 4A8B34D7 		mov	rsi, QWORD PTR [rdi+r10*8]	# *_135, *_135
GAS LISTING /tmp/ccIyIA9Z.s 			page 47


 1494              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1495              		.loc 1 348 105 view .LVU449
 1496 08d4 C42299F7 		shlx	r14, QWORD PTR 8[rdi+r10*8], r12	# tmp231, *_140, shift
 1496      74D708
 1497              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1498              		.loc 1 348 58 view .LVU450
 1499 08db C4E2B3F7 		shrx	rdx, rsi, r9	# tmp233, *_135, shift_flipped
 1499      D6
 1500              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1501              		.loc 1 347 48 view .LVU451
 1502 08e0 4983C302 		add	r11, 2	# copy_word,
 1503              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1504              		.loc 1 348 76 view .LVU452
 1505 08e4 4909D6   		or	r14, rdx	# tmp235, tmp233
 1506 08e7 4C8934DF 		mov	QWORD PTR [rdi+rbx*8], r14	# *_144, tmp235
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1507              		.loc 1 347 48 is_stmt 1 view .LVU453
 1508              	.LVL57:
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1509              		.loc 1 347 12 view .LVU454
 1510              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1511              		.loc 1 348 89 is_stmt 0 view .LVU455
 1512 08eb 4983C702 		add	r15, 2	# _138,
 1513              	.LVL58:
 1514              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1515              		.loc 1 347 5 view .LVU456
 1516 08ef 4C39D9   		cmp	rcx, r11	# destination_stop_word, copy_word
 1517 08f2 722C     		jb	.L133	#,
 348:sieve_extend.c ****     }
 1518              		.loc 1 348 9 is_stmt 1 view .LVU457
 1519              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1520              		.loc 1 348 105 is_stmt 0 view .LVU458
 1521 08f4 C4A299F7 		shlx	rcx, QWORD PTR 8[rdi+r15*8], r12	# tmp236, *_97, shift
 1521      4CFF08
 1522              	.LVL59:
 1523              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1524              		.loc 1 348 58 view .LVU459
 1525 08fb 4E8B24FF 		mov	r12, QWORD PTR [rdi+r15*8]	# *_92, *_92
 1526 08ff C442B3F7 		shrx	r9, r12, r9	# tmp238, *_92, shift_flipped
 1526      CC
 1527              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1528              		.loc 1 348 76 view .LVU460
 1529 0904 4909C9   		or	r9, rcx	# tmp240, tmp236
 1530 0907 4E890CDF 		mov	QWORD PTR [rdi+r11*8], r9	# *_101, tmp240
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1531              		.loc 1 347 48 is_stmt 1 view .LVU461
 1532              	.LVL60:
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
GAS LISTING /tmp/ccIyIA9Z.s 			page 48


 1533              		.loc 1 347 12 view .LVU462
 1534 090b C5F877   		vzeroupper
 1535              	.LVL61:
 1536              	.L134:
 1537              	# sieve_extend.c:350: }
 350:sieve_extend.c **** 
 1538              		.loc 1 350 1 is_stmt 0 view .LVU463
 1539 090e 488D65D8 		lea	rsp, -40[rbp]	#,
 1540 0912 5B       		pop	rbx	#
 1541 0913 415C     		pop	r12	#
 1542 0915 415D     		pop	r13	#
 1543 0917 415E     		pop	r14	#
 1544 0919 415F     		pop	r15	#
 1545 091b 5D       		pop	rbp	#
 1546              		.cfi_remember_state
 1547              		.cfi_def_cfa 7, 8
 1548 091c C3       		ret	
 1549              	.LVL62:
 1550 091d 0F1F00   		.p2align 4,,10
 1551              		.p2align 3
 1552              	.L133:
 1553              		.cfi_restore_state
 350:sieve_extend.c **** 
 1554              		.loc 1 350 1 view .LVU464
 1555 0920 C5F877   		vzeroupper
 1556 0923 488D65D8 		lea	rsp, -40[rbp]	#,
 1557 0927 5B       		pop	rbx	#
 1558 0928 415C     		pop	r12	#
 1559 092a 415D     		pop	r13	#
 1560 092c 415E     		pop	r14	#
 1561 092e 415F     		pop	r15	#
 1562 0930 5D       		pop	rbp	#
 1563              		.cfi_remember_state
 1564              		.cfi_def_cfa 7, 8
 1565 0931 C3       		ret	
 1566              	.LVL63:
 1567              		.p2align 4,,10
 1568 0932 660F1F44 		.p2align 3
 1568      0000
 1569              	.L43:
 1570              		.cfi_restore_state
 350:sieve_extend.c **** 
 1571              		.loc 1 350 1 view .LVU465
 1572 0938 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# source_word, %sfp
 1572      F8
 1573              	.LVL64:
 350:sieve_extend.c **** 
 1574              		.loc 1 350 1 view .LVU466
 1575 093d 4C01D9   		add	rcx, r11	# tmp241, source_word
 1576              	.LVL65:
 350:sieve_extend.c **** 
 1577              		.loc 1 350 1 view .LVU467
 1578 0940 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp243,
 1579              	.LVL66:
 350:sieve_extend.c **** 
 1580              		.loc 1 350 1 view .LVU468
 1581 0944 4C29EF   		sub	rdi, r13	# _161, _6
GAS LISTING /tmp/ccIyIA9Z.s 			page 49


 1582 0947 4989FF   		mov	r15, rdi	# tmp253, _161
 1583 094a 4929C7   		sub	r15, rax	# tmp253, ivtmp.209
 1584 094d 4983EF08 		sub	r15, 8	# tmp254,
 1585 0951 49C1EF03 		shr	r15, 3	# tmp252,
 1586 0955 49FFC7   		inc	r15	# tmp255
 1587              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1588              		.loc 1 348 31 view .LVU469
 1589 0958 4C29DA   		sub	rdx, r11	# tmp244, source_word
 1590              	.LVL67:
 348:sieve_extend.c ****     }
 1591              		.loc 1 348 31 view .LVU470
 1592 095b 4183E707 		and	r15d, 7	# tmp256,
 1593 095f 0F84D600 		je	.L46	#,
 1593      0000
 1594 0965 4983FF01 		cmp	r15, 1	# tmp256,
 1595 0969 0F84AC00 		je	.L102	#,
 1595      0000
 1596 096f 4983FF02 		cmp	r15, 2	# tmp256,
 1597 0973 0F848B00 		je	.L103	#,
 1597      0000
 1598 0979 4983FF03 		cmp	r15, 3	# tmp256,
 1599 097d 746E     		je	.L104	#,
 1600 097f 4983FF04 		cmp	r15, 4	# tmp256,
 1601 0983 7451     		je	.L105	#,
 1602 0985 4983FF05 		cmp	r15, 5	# tmp256,
 1603 0989 7434     		je	.L106	#,
 1604 098b 4983FF06 		cmp	r15, 6	# tmp256,
 1605 098f 7417     		je	.L107	#,
 1606              	.LVL68:
 348:sieve_extend.c ****     }
 1607              		.loc 1 348 9 is_stmt 1 view .LVU471
 1608              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1609              		.loc 1 348 58 is_stmt 0 view .LVU472
 1610 0991 C462BBF7 		shrx	r10, QWORD PTR [rax], r8	# tmp349, MEM[base: _153, offset: 0B], _14
 1610      10
 1611              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1612              		.loc 1 348 105 view .LVU473
 1613 0996 C462C9F7 		shlx	r13, QWORD PTR 8[rax], rsi	# tmp351, MEM[base: _153, offset: 8B], _12
 1613      6808
 1614              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1615              		.loc 1 348 76 view .LVU474
 1616 099c 4D09EA   		or	r10, r13	# tmp352, tmp351
 1617 099f 4C8954D0 		mov	QWORD PTR 8[rax+rdx*8], r10	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp352
 1617      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1618              		.loc 1 347 48 is_stmt 1 view .LVU475
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1619              		.loc 1 347 12 view .LVU476
 1620 09a4 4883C008 		add	rax, 8	# ivtmp.209,
 1621              	.L107:
 348:sieve_extend.c ****     }
 1622              		.loc 1 348 9 view .LVU477
 1623              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccIyIA9Z.s 			page 50


 348:sieve_extend.c ****     }
 1624              		.loc 1 348 58 is_stmt 0 view .LVU478
 1625 09a8 C4E2BBF7 		shrx	rbx, QWORD PTR [rax], r8	# tmp354, MEM[base: _153, offset: 0B], _14
 1625      18
 1626              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1627              		.loc 1 348 105 view .LVU479
 1628 09ad C462C9F7 		shlx	r14, QWORD PTR 8[rax], rsi	# tmp356, MEM[base: _153, offset: 8B], _12
 1628      7008
 1629              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1630              		.loc 1 348 76 view .LVU480
 1631 09b3 4C09F3   		or	rbx, r14	# tmp357, tmp356
 1632 09b6 48895CD0 		mov	QWORD PTR 8[rax+rdx*8], rbx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp357
 1632      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1633              		.loc 1 347 48 is_stmt 1 view .LVU481
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1634              		.loc 1 347 12 view .LVU482
 1635 09bb 4883C008 		add	rax, 8	# ivtmp.209,
 1636              	.L106:
 348:sieve_extend.c ****     }
 1637              		.loc 1 348 9 view .LVU483
 1638              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1639              		.loc 1 348 58 is_stmt 0 view .LVU484
 1640 09bf C4E2BBF7 		shrx	rcx, QWORD PTR [rax], r8	# tmp359, MEM[base: _153, offset: 0B], _14
 1640      08
 1641              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1642              		.loc 1 348 105 view .LVU485
 1643 09c4 C462C9F7 		shlx	r12, QWORD PTR 8[rax], rsi	# tmp361, MEM[base: _153, offset: 8B], _12
 1643      6008
 1644              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1645              		.loc 1 348 76 view .LVU486
 1646 09ca 4C09E1   		or	rcx, r12	# tmp362, tmp361
 1647 09cd 48894CD0 		mov	QWORD PTR 8[rax+rdx*8], rcx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp362
 1647      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1648              		.loc 1 347 48 is_stmt 1 view .LVU487
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1649              		.loc 1 347 12 view .LVU488
 1650 09d2 4883C008 		add	rax, 8	# ivtmp.209,
 1651              	.L105:
 348:sieve_extend.c ****     }
 1652              		.loc 1 348 9 view .LVU489
 1653              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1654              		.loc 1 348 58 is_stmt 0 view .LVU490
 1655 09d6 C462BBF7 		shrx	r11, QWORD PTR [rax], r8	# tmp364, MEM[base: _153, offset: 0B], _14
 1655      18
 1656              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1657              		.loc 1 348 105 view .LVU491
 1658 09db C462C9F7 		shlx	r9, QWORD PTR 8[rax], rsi	# tmp366, MEM[base: _153, offset: 8B], _12
 1658      4808
GAS LISTING /tmp/ccIyIA9Z.s 			page 51


 1659              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1660              		.loc 1 348 76 view .LVU492
 1661 09e1 4D09CB   		or	r11, r9	# tmp367, tmp366
 1662 09e4 4C895CD0 		mov	QWORD PTR 8[rax+rdx*8], r11	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp367
 1662      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1663              		.loc 1 347 48 is_stmt 1 view .LVU493
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1664              		.loc 1 347 12 view .LVU494
 1665 09e9 4883C008 		add	rax, 8	# ivtmp.209,
 1666              	.L104:
 348:sieve_extend.c ****     }
 1667              		.loc 1 348 9 view .LVU495
 1668              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1669              		.loc 1 348 58 is_stmt 0 view .LVU496
 1670 09ed C462BBF7 		shrx	r15, QWORD PTR [rax], r8	# tmp369, MEM[base: _153, offset: 0B], _14
 1670      38
 1671              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1672              		.loc 1 348 105 view .LVU497
 1673 09f2 C462C9F7 		shlx	r10, QWORD PTR 8[rax], rsi	# tmp371, MEM[base: _153, offset: 8B], _12
 1673      5008
 1674              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1675              		.loc 1 348 76 view .LVU498
 1676 09f8 4D09D7   		or	r15, r10	# tmp372, tmp371
 1677 09fb 4C897CD0 		mov	QWORD PTR 8[rax+rdx*8], r15	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp372
 1677      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1678              		.loc 1 347 48 is_stmt 1 view .LVU499
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1679              		.loc 1 347 12 view .LVU500
 1680 0a00 4883C008 		add	rax, 8	# ivtmp.209,
 1681              	.L103:
 348:sieve_extend.c ****     }
 1682              		.loc 1 348 9 view .LVU501
 1683              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1684              		.loc 1 348 58 is_stmt 0 view .LVU502
 1685 0a04 C462BBF7 		shrx	r13, QWORD PTR [rax], r8	# tmp374, MEM[base: _153, offset: 0B], _14
 1685      28
 1686              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1687              		.loc 1 348 105 view .LVU503
 1688 0a09 C4E2C9F7 		shlx	rbx, QWORD PTR 8[rax], rsi	# tmp376, MEM[base: _153, offset: 8B], _12
 1688      5808
 1689              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1690              		.loc 1 348 76 view .LVU504
 1691 0a0f 4909DD   		or	r13, rbx	# tmp377, tmp376
 1692 0a12 4C896CD0 		mov	QWORD PTR 8[rax+rdx*8], r13	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp377
 1692      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1693              		.loc 1 347 48 is_stmt 1 view .LVU505
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
GAS LISTING /tmp/ccIyIA9Z.s 			page 52


 1694              		.loc 1 347 12 view .LVU506
 1695 0a17 4883C008 		add	rax, 8	# ivtmp.209,
 1696              	.L102:
 348:sieve_extend.c ****     }
 1697              		.loc 1 348 9 view .LVU507
 1698              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1699              		.loc 1 348 58 is_stmt 0 view .LVU508
 1700 0a1b C462BBF7 		shrx	r14, QWORD PTR [rax], r8	# tmp379, MEM[base: _153, offset: 0B], _14
 1700      30
 1701              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1702              		.loc 1 348 105 view .LVU509
 1703 0a20 C4E2C9F7 		shlx	rcx, QWORD PTR 8[rax], rsi	# tmp381, MEM[base: _153, offset: 8B], _12
 1703      4808
 1704              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1705              		.loc 1 348 76 view .LVU510
 1706 0a26 4909CE   		or	r14, rcx	# tmp382, tmp381
 1707 0a29 4C8974D0 		mov	QWORD PTR 8[rax+rdx*8], r14	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp382
 1707      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1708              		.loc 1 347 48 is_stmt 1 view .LVU511
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1709              		.loc 1 347 12 view .LVU512
 1710 0a2e 4883C008 		add	rax, 8	# ivtmp.209,
 1711              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1712              		.loc 1 347 5 is_stmt 0 view .LVU513
 1713 0a32 4839F8   		cmp	rax, rdi	# ivtmp.209, _161
 1714 0a35 0F84D3FE 		je	.L134	#,
 1714      FFFF
 1715              	.L46:
 348:sieve_extend.c ****     }
 1716              		.loc 1 348 9 is_stmt 1 view .LVU514
 1717              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1718              		.loc 1 348 105 is_stmt 0 view .LVU515
 1719 0a3b C462C9F7 		shlx	r11, QWORD PTR 8[rax], rsi	# tmp247, MEM[base: _153, offset: 8B], _12
 1719      5808
 1720              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1721              		.loc 1 348 58 view .LVU516
 1722 0a41 C462BBF7 		shrx	r12, QWORD PTR [rax], r8	# tmp245, MEM[base: _153, offset: 0B], _14
 1722      20
 1723              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1724              		.loc 1 348 76 view .LVU517
 1725 0a46 4D09DC   		or	r12, r11	# tmp249, tmp247
 1726 0a49 4C8964D0 		mov	QWORD PTR 8[rax+rdx*8], r12	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp249
 1726      08
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1727              		.loc 1 347 48 is_stmt 1 view .LVU518
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1728              		.loc 1 347 12 view .LVU519
 1729 0a4e 4C8D6810 		lea	r13, 16[rax]	# ivtmp.209,
 1730 0a52 4C8D6018 		lea	r12, 24[rax]	# ivtmp.209,
GAS LISTING /tmp/ccIyIA9Z.s 			page 53


 1731              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1732              		.loc 1 348 105 is_stmt 0 view .LVU520
 1733 0a56 C462C9F7 		shlx	r10, QWORD PTR 16[rax], rsi	# tmp310, MEM[base: _153, offset: 8B], _12
 1733      5010
 1734              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1735              		.loc 1 348 58 view .LVU521
 1736 0a5c C462BBF7 		shrx	r15, QWORD PTR 8[rax], r8	# tmp308, MEM[base: _153, offset: 0B], _14
 1736      7808
 1737              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1738              		.loc 1 348 76 view .LVU522
 1739 0a62 4D09D7   		or	r15, r10	# tmp311, tmp310
 1740 0a65 4C897CD0 		mov	QWORD PTR 16[rax+rdx*8], r15	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp311
 1740      10
 1741 0a6a 4C8D4808 		lea	r9, 8[rax]	# tmp257,
 348:sieve_extend.c ****     }
 1742              		.loc 1 348 9 is_stmt 1 view .LVU523
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1743              		.loc 1 347 48 view .LVU524
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1744              		.loc 1 347 12 view .LVU525
 348:sieve_extend.c ****     }
 1745              		.loc 1 348 9 view .LVU526
 1746 0a6e 4C8D4820 		lea	r9, 32[rax]	# ivtmp.209,
 1747              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1748              		.loc 1 348 105 is_stmt 0 view .LVU527
 1749 0a72 C442C9F7 		shlx	r14, QWORD PTR 8[r13], rsi	# tmp316, MEM[base: _153, offset: 8B], _12
 1749      7508
 1750              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1751              		.loc 1 348 58 view .LVU528
 1752 0a78 C4E2BBF7 		shrx	rbx, QWORD PTR 16[rax], r8	# tmp314, MEM[base: _153, offset: 0B], _14
 1752      5810
 1753              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1754              		.loc 1 348 76 view .LVU529
 1755 0a7e 4C09F3   		or	rbx, r14	# tmp317, tmp316
 1756 0a81 48895CD0 		mov	QWORD PTR 24[rax+rdx*8], rbx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp317
 1756      18
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1757              		.loc 1 347 48 is_stmt 1 view .LVU530
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1758              		.loc 1 347 12 view .LVU531
 348:sieve_extend.c ****     }
 1759              		.loc 1 348 9 view .LVU532
 1760 0a86 4C8D6828 		lea	r13, 40[rax]	# ivtmp.209,
 1761              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1762              		.loc 1 348 105 is_stmt 0 view .LVU533
 1763 0a8a C442C9F7 		shlx	r11, QWORD PTR 8[r12], rsi	# tmp322, MEM[base: _153, offset: 8B], _12
 1763      5C2408
 1764              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1765              		.loc 1 348 58 view .LVU534
GAS LISTING /tmp/ccIyIA9Z.s 			page 54


 1766 0a91 C4E2BBF7 		shrx	rcx, QWORD PTR 24[rax], r8	# tmp320, MEM[base: _153, offset: 0B], _14
 1766      4818
 1767              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1768              		.loc 1 348 76 view .LVU535
 1769 0a97 4C09D9   		or	rcx, r11	# tmp323, tmp322
 1770 0a9a 48894CD0 		mov	QWORD PTR 32[rax+rdx*8], rcx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp323
 1770      20
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1771              		.loc 1 347 48 is_stmt 1 view .LVU536
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1772              		.loc 1 347 12 view .LVU537
 348:sieve_extend.c ****     }
 1773              		.loc 1 348 9 view .LVU538
 1774 0a9f 4C8D6030 		lea	r12, 48[rax]	# ivtmp.209,
 1775              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1776              		.loc 1 348 105 is_stmt 0 view .LVU539
 1777 0aa3 C442C9F7 		shlx	r10, QWORD PTR 8[r9], rsi	# tmp328, MEM[base: _153, offset: 8B], _12
 1777      5108
 1778              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1779              		.loc 1 348 58 view .LVU540
 1780 0aa9 C462BBF7 		shrx	r15, QWORD PTR 32[rax], r8	# tmp326, MEM[base: _153, offset: 0B], _14
 1780      7820
 1781              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1782              		.loc 1 348 76 view .LVU541
 1783 0aaf 4D09D7   		or	r15, r10	# tmp329, tmp328
 1784 0ab2 4C897CD0 		mov	QWORD PTR 40[rax+rdx*8], r15	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp329
 1784      28
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1785              		.loc 1 347 48 is_stmt 1 view .LVU542
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1786              		.loc 1 347 12 view .LVU543
 348:sieve_extend.c ****     }
 1787              		.loc 1 348 9 view .LVU544
 1788 0ab7 4C8D4838 		lea	r9, 56[rax]	# ivtmp.209,
 1789              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1790              		.loc 1 348 58 is_stmt 0 view .LVU545
 1791 0abb C4E2BBF7 		shrx	rbx, QWORD PTR 40[rax], r8	# tmp332, MEM[base: _153, offset: 0B], _14
 1791      5828
 1792              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1793              		.loc 1 348 105 view .LVU546
 1794 0ac1 C442C9F7 		shlx	r14, QWORD PTR 8[r13], rsi	# tmp334, MEM[base: _153, offset: 8B], _12
 1794      7508
 1795              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1796              		.loc 1 348 76 view .LVU547
 1797 0ac7 4C09F3   		or	rbx, r14	# tmp335, tmp334
 1798 0aca 48895CD0 		mov	QWORD PTR 48[rax+rdx*8], rbx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp335
 1798      30
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1799              		.loc 1 347 48 is_stmt 1 view .LVU548
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
GAS LISTING /tmp/ccIyIA9Z.s 			page 55


 1800              		.loc 1 347 12 view .LVU549
 348:sieve_extend.c ****     }
 1801              		.loc 1 348 9 view .LVU550
 1802              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1803              		.loc 1 348 58 is_stmt 0 view .LVU551
 1804 0acf C4E2BBF7 		shrx	rcx, QWORD PTR 48[rax], r8	# tmp338, MEM[base: _153, offset: 0B], _14
 1804      4830
 1805              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1806              		.loc 1 348 105 view .LVU552
 1807 0ad5 C442C9F7 		shlx	r11, QWORD PTR 8[r12], rsi	# tmp340, MEM[base: _153, offset: 8B], _12
 1807      5C2408
 1808              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1809              		.loc 1 348 76 view .LVU553
 1810 0adc 4C09D9   		or	rcx, r11	# tmp341, tmp340
 1811 0adf 48894CD0 		mov	QWORD PTR 56[rax+rdx*8], rcx	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp341
 1811      38
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1812              		.loc 1 347 48 is_stmt 1 view .LVU554
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1813              		.loc 1 347 12 view .LVU555
 348:sieve_extend.c ****     }
 1814              		.loc 1 348 9 view .LVU556
 1815              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1816              		.loc 1 348 58 is_stmt 0 view .LVU557
 1817 0ae4 C462BBF7 		shrx	r15, QWORD PTR 56[rax], r8	# tmp344, MEM[base: _153, offset: 0B], _14
 1817      7838
 1818              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1819              		.loc 1 348 105 view .LVU558
 1820 0aea C442C9F7 		shlx	r10, QWORD PTR 8[r9], rsi	# tmp346, MEM[base: _153, offset: 8B], _12
 1820      5108
 1821              	# sieve_extend.c:348:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 348:sieve_extend.c ****     }
 1822              		.loc 1 348 76 view .LVU559
 1823 0af0 4D09D7   		or	r15, r10	# tmp347, tmp346
 1824 0af3 4C897CD0 		mov	QWORD PTR 64[rax+rdx*8], r15	# MEM[base: _153, index: _155, step: 8, offset: 8B], tmp347
 1824      40
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1825              		.loc 1 347 48 is_stmt 1 view .LVU560
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1826              		.loc 1 347 12 view .LVU561
 1827 0af8 4883C040 		add	rax, 64	# ivtmp.209,
 1828              	# sieve_extend.c:347:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 347:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 1829              		.loc 1 347 5 is_stmt 0 view .LVU562
 1830 0afc 4839F8   		cmp	rax, rdi	# ivtmp.209, _161
 1831 0aff 0F8536FF 		jne	.L46	#,
 1831      FFFF
 1832 0b05 E904FEFF 		jmp	.L134	#
 1832      FF
 1833              		.cfi_endproc
 1834              	.LFE61:
 1836 0b0a 660F1F44 		.p2align 4
GAS LISTING /tmp/ccIyIA9Z.s 			page 56


 1836      0000
 1838              	continuePattern_aligned:
 1839              	.LVL69:
 1840              	.LFB60:
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 1841              		.loc 1 309 146 is_stmt 1 view -0
 1842              		.cfi_startproc
 310:sieve_extend.c **** 
 1843              		.loc 1 310 5 view .LVU564
 312:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1844              		.loc 1 312 5 view .LVU565
 1845              	# sieve_extend.c:309: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 1846              		.loc 1 309 146 is_stmt 0 view .LVU566
 1847 0b10 55       		push	rbp	#
 1848              		.cfi_def_cfa_offset 16
 1849              		.cfi_offset 6, -16
 1850 0b11 4889E5   		mov	rbp, rsp	#,
 1851              		.cfi_def_cfa_register 6
 1852 0b14 4157     		push	r15	#
 1853 0b16 4156     		push	r14	#
 1854              		.cfi_offset 15, -24
 1855              		.cfi_offset 14, -32
 1856              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 1857              		.loc 1 317 39 view .LVU567
 1858 0b18 4989FE   		mov	r14, rdi	# _5, bitstorage
 1859              	# sieve_extend.c:309: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 1860              		.loc 1 309 146 view .LVU568
 1861 0b1b 4155     		push	r13	#
 1862 0b1d 4154     		push	r12	#
 1863              		.cfi_offset 13, -40
 1864              		.cfi_offset 12, -48
 1865 0b1f 4989D4   		mov	r12, rdx	# size, tmp267
 1866              	# sieve_extend.c:313:     const counter_t copy_start = source_start + size;
 313:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 1867              		.loc 1 313 21 view .LVU569
 1868 0b22 4801F2   		add	rdx, rsi	# copy_start, source_start
 1869              	.LVL70:
 1870              	# sieve_extend.c:309: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 1871              		.loc 1 309 146 view .LVU570
 1872 0b25 53       		push	rbx	#
 1873              	# sieve_extend.c:314:     counter_t source_word = wordindex(source_start);
 314:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 1874              		.loc 1 314 15 view .LVU571
 1875 0b26 48C1EE06 		shr	rsi, 6	# source_start,
 1876              	.LVL71:
 1877              	# sieve_extend.c:315:     counter_t copy_word = wordindex(copy_start);
 315:sieve_extend.c ****     
 1878              		.loc 1 315 15 view .LVU572
 1879 0b2a 4889D0   		mov	rax, rdx	# ivtmp.261, copy_start
 1880              	# sieve_extend.c:309: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 1881              		.loc 1 309 146 view .LVU573
 1882 0b2d 4883E4E0 		and	rsp, -32	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 57


 1883 0b31 4883EC20 		sub	rsp, 32	#,
 1884              		.cfi_offset 3, -56
 1885              	# sieve_extend.c:312:     const counter_t destination_stop_word = wordindex(destination_stop);
 312:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1886              		.loc 1 312 21 view .LVU574
 1887 0b35 4889CB   		mov	rbx, rcx	# tmp268, tmp268
 1888              	# sieve_extend.c:315:     counter_t copy_word = wordindex(copy_start);
 315:sieve_extend.c ****     
 1889              		.loc 1 315 15 view .LVU575
 1890 0b38 48C1E806 		shr	rax, 6	# ivtmp.261,
 1891              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 1892              		.loc 1 317 56 view .LVU576
 1893 0b3c 89D1     		mov	ecx, edx	# tmp159, copy_start
 1894              	.LVL72:
 1895              	# sieve_extend.c:314:     counter_t source_word = wordindex(source_start);
 314:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 1896              		.loc 1 314 15 view .LVU577
 1897 0b3e 48893424 		mov	QWORD PTR [rsp], rsi	# %sfp, source_word
 1898              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 1899              		.loc 1 317 39 view .LVU578
 1900 0b42 48C1E603 		sal	rsi, 3	# _4,
 1901 0b46 4901F6   		add	r14, rsi	# _5, _4
 1902              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 1903              		.loc 1 317 56 view .LVU579
 1904 0b49 F7D1     		not	ecx	# tmp159
 1905 0b4b 48C7C2FF 		mov	rdx, -1	# tmp162,
 1905      FFFFFF
 1906              	# sieve_extend.c:312:     const counter_t destination_stop_word = wordindex(destination_stop);
 312:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1907              		.loc 1 312 21 view .LVU580
 1908 0b52 48C1EB06 		shr	rbx, 6	# tmp268,
 1909              	.LVL73:
 313:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 1910              		.loc 1 313 5 is_stmt 1 view .LVU581
 314:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 1911              		.loc 1 314 5 view .LVU582
 315:sieve_extend.c ****     
 1912              		.loc 1 315 5 view .LVU583
 317:sieve_extend.c **** 
 1913              		.loc 1 317 5 view .LVU584
 1914              	# sieve_extend.c:319:     while (copy_word + size <= destination_stop_word) {
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 1915              		.loc 1 319 22 is_stmt 0 view .LVU585
 1916 0b56 4D8D0C04 		lea	r9, [r12+rax]	# ivtmp.261,
 1917              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 1918              		.loc 1 317 39 view .LVU586
 1919 0b5a 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, _4
 1919      08
 1920              	# sieve_extend.c:309: static void continuePattern_aligned(bitword_t* bitstorage, const counter_t so
 309:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 1921              		.loc 1 309 146 view .LVU587
 1922 0b5f 48897C24 		mov	QWORD PTR 16[rsp], rdi	# %sfp, bitstorage
 1922      10
GAS LISTING /tmp/ccIyIA9Z.s 			page 58


 1923              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 1924              		.loc 1 317 56 view .LVU588
 1925 0b64 C4E2F3F7 		shrx	rsi, rdx, rcx	# tmp161, tmp162, tmp159
 1925      F2
 1926              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 1927              		.loc 1 317 53 view .LVU589
 1928 0b69 C442C8F2 		andn	r8, rsi, QWORD PTR [r14]	# tmp165, tmp161, *_5
 1928      06
 1929              	# sieve_extend.c:317:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 317:sieve_extend.c **** 
 1930              		.loc 1 317 27 view .LVU590
 1931 0b6e 4C8904C7 		mov	QWORD PTR [rdi+rax*8], r8	# *_13, tmp165
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 1932              		.loc 1 319 5 is_stmt 1 view .LVU591
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 1933              		.loc 1 319 11 view .LVU592
 1934 0b72 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.261
 1935 0b75 0F824D01 		jb	.L137	#,
 1935      0000
 1936 0b7b 4C8D2CC5 		lea	r13, 0[0+rax*8]	# _12,
 1936      00000000 
 1937 0b83 4901FD   		add	r13, rdi	# tmp166, bitstorage
 1938 0b86 4A8D04CD 		lea	rax, 0[0+r9*8]	# tmp167,
 1938      00000000 
 1939              	# sieve_extend.c:320:         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)s
 320:sieve_extend.c ****         copy_word += size;
 1940              		.loc 1 320 9 is_stmt 0 view .LVU593
 1941 0b8e 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 1941      00000000 
 1942 0b96 4929C5   		sub	r13, rax	# _135, tmp167
 1943              	.LVL74:
 1944              	.L138:
 320:sieve_extend.c ****         copy_word += size;
 1945              		.loc 1 320 9 is_stmt 1 view .LVU594
 1946              	.LBB424:
 1947              	.LBI424:
 1948              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
GAS LISTING /tmp/ccIyIA9Z.s 			page 59


  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 1949              		.loc 2 31 1 view .LVU595
 1950              	.LBB425:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 1951              		.loc 2 34 3 view .LVU596
 1952              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 1953              		.loc 2 34 10 is_stmt 0 view .LVU597
 1954 0b99 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp169,
 1954      00
 1955 0b9e 4C89FA   		mov	rdx, r15	#, _15
 1956 0ba1 4C89F6   		mov	rsi, r14	#, _5
 1957 0ba4 4C894C24 		mov	QWORD PTR 24[rsp], r9	# %sfp, ivtmp.261
 1957      18
 1958 0ba9 E8000000 		call	memcpy@PLT	#
 1958      00
 1959              	.LVL75:
 1960              		.loc 2 34 10 view .LVU598
 1961              	.LBE425:
 1962              	.LBE424:
 321:sieve_extend.c ****     }
 1963              		.loc 1 321 9 is_stmt 1 view .LVU599
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 1964              		.loc 1 319 11 view .LVU600
 1965 0bae 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.261, %sfp
 1965      18
 1966 0bb3 4E8D0C20 		lea	r9, [rax+r12]	# ivtmp.261,
 1967 0bb7 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.261
 1968 0bba 0F820801 		jb	.L137	#,
 1968      0000
 320:sieve_extend.c ****         copy_word += size;
 1969              		.loc 1 320 9 view .LVU601
 1970              	.LVL76:
 1971              	.LBB433:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 1972              		.loc 2 31 1 view .LVU602
 1973              	.LBB426:
 1974              		.loc 2 34 3 view .LVU603
 1975              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 1976              		.loc 2 34 10 is_stmt 0 view .LVU604
 1977 0bc0 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp246,
 1977      00
 1978 0bc5 4C89FA   		mov	rdx, r15	#, _15
 1979 0bc8 4C89F6   		mov	rsi, r14	#, _5
GAS LISTING /tmp/ccIyIA9Z.s 			page 60


 1980 0bcb 4C894C24 		mov	QWORD PTR 24[rsp], r9	# %sfp, ivtmp.261
 1980      18
 1981              	.LVL77:
 1982              		.loc 2 34 10 view .LVU605
 1983 0bd0 E8000000 		call	memcpy@PLT	#
 1983      00
 1984              	.LVL78:
 1985              		.loc 2 34 10 view .LVU606
 1986              	.LBE426:
 1987              	.LBE433:
 321:sieve_extend.c ****     }
 1988              		.loc 1 321 9 is_stmt 1 view .LVU607
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 1989              		.loc 1 319 11 view .LVU608
 1990 0bd5 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.261, %sfp
 1990      18
 1991 0bda 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.261,
 1992 0bde 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.261
 1993 0be1 0F82E100 		jb	.L137	#,
 1993      0000
 320:sieve_extend.c ****         copy_word += size;
 1994              		.loc 1 320 9 view .LVU609
 1995              	.LVL79:
 1996              	.LBB434:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 1997              		.loc 2 31 1 view .LVU610
 1998              	.LBB427:
 1999              		.loc 2 34 3 view .LVU611
 2000              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2001              		.loc 2 34 10 is_stmt 0 view .LVU612
 2002 0be7 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp249,
 2002      00
 2003 0bec 4C89FA   		mov	rdx, r15	#, _15
 2004 0bef 4C89F6   		mov	rsi, r14	#, _5
 2005 0bf2 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, ivtmp.261
 2005      18
 2006 0bf7 E8000000 		call	memcpy@PLT	#
 2006      00
 2007              	.LVL80:
 2008              		.loc 2 34 10 view .LVU613
 2009              	.LBE427:
 2010              	.LBE434:
 321:sieve_extend.c ****     }
 2011              		.loc 1 321 9 is_stmt 1 view .LVU614
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2012              		.loc 1 319 11 view .LVU615
 2013 0bfc 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.261, %sfp
 2013      18
 2014 0c01 4E8D1C20 		lea	r11, [rax+r12]	# ivtmp.261,
 2015 0c05 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.261
 2016 0c08 0F82BA00 		jb	.L137	#,
 2016      0000
 320:sieve_extend.c ****         copy_word += size;
 2017              		.loc 1 320 9 view .LVU616
 2018              	.LVL81:
 2019              	.LBB435:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
GAS LISTING /tmp/ccIyIA9Z.s 			page 61


 2020              		.loc 2 31 1 view .LVU617
 2021              	.LBB428:
 2022              		.loc 2 34 3 view .LVU618
 2023              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2024              		.loc 2 34 10 is_stmt 0 view .LVU619
 2025 0c0e 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp252,
 2025      00
 2026 0c13 4C89FA   		mov	rdx, r15	#, _15
 2027 0c16 4C89F6   		mov	rsi, r14	#, _5
 2028 0c19 4C895C24 		mov	QWORD PTR 24[rsp], r11	# %sfp, ivtmp.261
 2028      18
 2029 0c1e E8000000 		call	memcpy@PLT	#
 2029      00
 2030              	.LVL82:
 2031              		.loc 2 34 10 view .LVU620
 2032              	.LBE428:
 2033              	.LBE435:
 321:sieve_extend.c ****     }
 2034              		.loc 1 321 9 is_stmt 1 view .LVU621
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2035              		.loc 1 319 11 view .LVU622
 2036 0c23 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.261, %sfp
 2036      18
 2037 0c28 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.261,
 2038 0c2c 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.261
 2039 0c2f 0F829300 		jb	.L137	#,
 2039      0000
 320:sieve_extend.c ****         copy_word += size;
 2040              		.loc 1 320 9 view .LVU623
 2041              	.LVL83:
 2042              	.LBB436:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2043              		.loc 2 31 1 view .LVU624
 2044              	.LBB429:
 2045              		.loc 2 34 3 view .LVU625
 2046              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2047              		.loc 2 34 10 is_stmt 0 view .LVU626
 2048 0c35 4C89FA   		mov	rdx, r15	#, _15
 2049 0c38 498D7CCD 		lea	rdi, 0[r13+rcx*8]	# tmp255,
 2049      00
 2050 0c3d 4C89F6   		mov	rsi, r14	#, _5
 2051 0c40 48894C24 		mov	QWORD PTR 24[rsp], rcx	# %sfp, ivtmp.261
 2051      18
 2052 0c45 E8000000 		call	memcpy@PLT	#
 2052      00
 2053              	.LVL84:
 2054              		.loc 2 34 10 view .LVU627
 2055              	.LBE429:
 2056              	.LBE436:
 321:sieve_extend.c ****     }
 2057              		.loc 1 321 9 is_stmt 1 view .LVU628
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2058              		.loc 1 319 11 view .LVU629
 2059 0c4a 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.261, %sfp
 2059      18
 2060 0c4f 4A8D1420 		lea	rdx, [rax+r12]	# ivtmp.261,
 2061 0c53 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.261
GAS LISTING /tmp/ccIyIA9Z.s 			page 62


 2062 0c56 7270     		jb	.L137	#,
 320:sieve_extend.c ****         copy_word += size;
 2063              		.loc 1 320 9 view .LVU630
 2064              	.LVL85:
 2065              	.LBB437:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2066              		.loc 2 31 1 view .LVU631
 2067              	.LBB430:
 2068              		.loc 2 34 3 view .LVU632
 2069              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2070              		.loc 2 34 10 is_stmt 0 view .LVU633
 2071 0c58 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, ivtmp.261
 2071      18
 2072 0c5d 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp258,
 2072      00
 2073 0c62 4C89F6   		mov	rsi, r14	#, _5
 2074 0c65 4C89FA   		mov	rdx, r15	#, _15
 2075 0c68 E8000000 		call	memcpy@PLT	#
 2075      00
 2076              	.LVL86:
 2077              		.loc 2 34 10 view .LVU634
 2078              	.LBE430:
 2079              	.LBE437:
 321:sieve_extend.c ****     }
 2080              		.loc 1 321 9 is_stmt 1 view .LVU635
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2081              		.loc 1 319 11 view .LVU636
 2082 0c6d 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.261, %sfp
 2082      18
 2083 0c72 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.261,
 2084 0c76 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.261
 2085 0c79 724D     		jb	.L137	#,
 320:sieve_extend.c ****         copy_word += size;
 2086              		.loc 1 320 9 view .LVU637
 2087              	.LVL87:
 2088              	.LBB438:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2089              		.loc 2 31 1 view .LVU638
 2090              	.LBB431:
 2091              		.loc 2 34 3 view .LVU639
 2092              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2093              		.loc 2 34 10 is_stmt 0 view .LVU640
 2094 0c7b 48897424 		mov	QWORD PTR 24[rsp], rsi	# %sfp, ivtmp.261
 2094      18
 2095 0c80 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp261,
 2095      00
 2096 0c85 4C89FA   		mov	rdx, r15	#, _15
 2097 0c88 4C89F6   		mov	rsi, r14	#, _5
 2098 0c8b E8000000 		call	memcpy@PLT	#
 2098      00
 2099              	.LVL88:
 2100              		.loc 2 34 10 view .LVU641
 2101              	.LBE431:
 2102              	.LBE438:
 321:sieve_extend.c ****     }
 2103              		.loc 1 321 9 is_stmt 1 view .LVU642
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
GAS LISTING /tmp/ccIyIA9Z.s 			page 63


 2104              		.loc 1 319 11 view .LVU643
 2105 0c90 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.261, %sfp
 2105      18
 2106 0c95 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.261,
 2107 0c99 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.261
 2108 0c9c 722A     		jb	.L137	#,
 320:sieve_extend.c ****         copy_word += size;
 2109              		.loc 1 320 9 view .LVU644
 2110              	.LVL89:
 2111              	.LBB439:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2112              		.loc 2 31 1 view .LVU645
 2113              	.LBB432:
 2114              		.loc 2 34 3 view .LVU646
 2115              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 2116              		.loc 2 34 10 is_stmt 0 view .LVU647
 2117 0c9e 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp264,
 2117      00
 2118 0ca3 4C89FA   		mov	rdx, r15	#, _15
 2119 0ca6 4C89F6   		mov	rsi, r14	#, _5
 2120 0ca9 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, ivtmp.261
 2120      18
 2121 0cae E8000000 		call	memcpy@PLT	#
 2121      00
 2122              	.LVL90:
 2123              		.loc 2 34 10 view .LVU648
 2124              	.LBE432:
 2125              	.LBE439:
 321:sieve_extend.c ****     }
 2126              		.loc 1 321 9 is_stmt 1 view .LVU649
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2127              		.loc 1 319 11 view .LVU650
 2128 0cb3 488B4424 		mov	rax, QWORD PTR 24[rsp]	# ivtmp.261, %sfp
 2128      18
 2129              	.LVL91:
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2130              		.loc 1 319 11 is_stmt 0 view .LVU651
 2131 0cb8 4E8D0C20 		lea	r9, [rax+r12]	# ivtmp.261,
 2132              	.LVL92:
 319:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 2133              		.loc 1 319 11 view .LVU652
 2134 0cbc 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.261
 2135 0cbf 0F83D4FE 		jnb	.L138	#,
 2135      FFFF
 2136              	.LVL93:
 2137              		.p2align 4,,10
 2138 0cc5 0F1F00   		.p2align 3
 2139              	.L137:
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2140              		.loc 1 324 10 is_stmt 1 view .LVU653
 2141 0cc8 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.261
 2142 0ccb 0F86F701 		jbe	.L242	#,
 2142      0000
 2143 0cd1 4C8B6C24 		mov	r13, QWORD PTR 8[rsp]	# _4, %sfp
 2143      08
 2144 0cd6 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 2144      00000000 
GAS LISTING /tmp/ccIyIA9Z.s 			page 64


 2145              	.LVL94:
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2146              		.loc 1 324 10 is_stmt 0 view .LVU654
 2147 0cde 498D7C24 		lea	rdi, 32[r12]	# tmp175,
 2147      20
 2148 0ce3 4939FD   		cmp	r13, rdi	# _4, tmp175
 2149 0ce6 4D8D5520 		lea	r10, 32[r13]	# tmp178,
 2150 0cea 410F9DC7 		setge	r15b	#, tmp177
 2151 0cee 4D39D4   		cmp	r12, r10	# _41, tmp178
 2152 0cf1 410F9DC3 		setge	r11b	#, tmp180
 2153 0cf5 4508DF   		or	r15b, r11b	# tmp177, tmp180
 2154 0cf8 0F84FA01 		je	.L140	#,
 2154      0000
 2155 0cfe 488D4BFF 		lea	rcx, -1[rbx]	# tmp182,
 2156 0d02 4829C1   		sub	rcx, rax	# tmp183, ivtmp.261
 2157 0d05 4883F908 		cmp	rcx, 8	# tmp183,
 2158 0d09 0F86E901 		jbe	.L140	#,
 2158      0000
 2159 0d0f 4989D9   		mov	r9, rbx	# niters.230, destination_stop_word
 2160 0d12 4929C1   		sub	r9, rax	# niters.230, ivtmp.261
 2161 0d15 4C89CE   		mov	rsi, r9	# bnd.231, niters.230
 2162 0d18 48C1EE02 		shr	rsi, 2	# bnd.231,
 2163 0d1c 48C1E605 		sal	rsi, 5	# _128,
 2164 0d20 4C8D46E0 		lea	r8, -32[rsi]	# tmp198,
 2165 0d24 49C1E805 		shr	r8, 5	# tmp196,
 2166 0d28 49FFC0   		inc	r8	# tmp199
 2167 0d2b 4C036424 		add	r12, QWORD PTR 16[rsp]	# vectp.239, %sfp
 2167      10
 2168 0d30 31D2     		xor	edx, edx	# ivtmp.252
 2169 0d32 4183E007 		and	r8d, 7	# tmp200,
 2170 0d36 0F849D00 		je	.L141	#,
 2170      0000
 2171 0d3c 4983F801 		cmp	r8, 1	# tmp200,
 2172 0d40 747E     		je	.L202	#,
 2173 0d42 4983F802 		cmp	r8, 2	# tmp200,
 2174 0d46 7468     		je	.L203	#,
 2175 0d48 4983F803 		cmp	r8, 3	# tmp200,
 2176 0d4c 7452     		je	.L204	#,
 2177 0d4e 4983F804 		cmp	r8, 4	# tmp200,
 2178 0d52 743C     		je	.L205	#,
 2179 0d54 4983F805 		cmp	r8, 5	# tmp200,
 2180 0d58 7426     		je	.L206	#,
 2181 0d5a 4983F806 		cmp	r8, 6	# tmp200,
 2182 0d5e 7410     		je	.L207	#,
 2183              	.LVL95:
 325:sieve_extend.c ****         source_word++;
 2184              		.loc 1 325 9 is_stmt 1 view .LVU655
 2185              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2186              		.loc 1 325 31 is_stmt 0 view .LVU656
 2187 0d60 C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r14]	# tmp306, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2187      0E
 2188 0d65 BA200000 		mov	edx, 32	# ivtmp.252,
 2188      00
 2189 0d6a C4C17E7F 		vmovdqu	YMMWORD PTR [r12], ymm1	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B], tmp30
 2189      0C24
 326:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccIyIA9Z.s 			page 65


 2190              		.loc 1 326 9 is_stmt 1 view .LVU657
 327:sieve_extend.c ****     }
 2191              		.loc 1 327 9 view .LVU658
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2192              		.loc 1 324 10 view .LVU659
 2193              	.L207:
 325:sieve_extend.c ****         source_word++;
 2194              		.loc 1 325 9 view .LVU660
 2195              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2196              		.loc 1 325 31 is_stmt 0 view .LVU661
 2197 0d70 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r14+rdx]	# tmp307, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2197      3C16
 2198 0d76 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm7	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B], t
 2198      3C14
 326:sieve_extend.c ****         copy_word++;
 2199              		.loc 1 326 9 is_stmt 1 view .LVU662
 327:sieve_extend.c ****     }
 2200              		.loc 1 327 9 view .LVU663
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2201              		.loc 1 324 10 view .LVU664
 2202 0d7c 4883C220 		add	rdx, 32	# ivtmp.252,
 2203              	.L206:
 325:sieve_extend.c ****         source_word++;
 2204              		.loc 1 325 9 view .LVU665
 2205              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2206              		.loc 1 325 31 is_stmt 0 view .LVU666
 2207 0d80 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r14+rdx]	# tmp308, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2207      3416
 2208 0d86 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm6	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B], t
 2208      3414
 326:sieve_extend.c ****         copy_word++;
 2209              		.loc 1 326 9 is_stmt 1 view .LVU667
 327:sieve_extend.c ****     }
 2210              		.loc 1 327 9 view .LVU668
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2211              		.loc 1 324 10 view .LVU669
 2212 0d8c 4883C220 		add	rdx, 32	# ivtmp.252,
 2213              	.L205:
 325:sieve_extend.c ****         source_word++;
 2214              		.loc 1 325 9 view .LVU670
 2215              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2216              		.loc 1 325 31 is_stmt 0 view .LVU671
 2217 0d90 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r14+rdx]	# tmp309, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2217      2C16
 2218 0d96 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm5	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B], t
 2218      2C14
 326:sieve_extend.c ****         copy_word++;
 2219              		.loc 1 326 9 is_stmt 1 view .LVU672
 327:sieve_extend.c ****     }
 2220              		.loc 1 327 9 view .LVU673
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2221              		.loc 1 324 10 view .LVU674
 2222 0d9c 4883C220 		add	rdx, 32	# ivtmp.252,
 2223              	.L204:
GAS LISTING /tmp/ccIyIA9Z.s 			page 66


 325:sieve_extend.c ****         source_word++;
 2224              		.loc 1 325 9 view .LVU675
 2225              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2226              		.loc 1 325 31 is_stmt 0 view .LVU676
 2227 0da0 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r14+rdx]	# tmp310, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2227      2416
 2228 0da6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm4	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B], t
 2228      2414
 326:sieve_extend.c ****         copy_word++;
 2229              		.loc 1 326 9 is_stmt 1 view .LVU677
 327:sieve_extend.c ****     }
 2230              		.loc 1 327 9 view .LVU678
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2231              		.loc 1 324 10 view .LVU679
 2232 0dac 4883C220 		add	rdx, 32	# ivtmp.252,
 2233              	.L203:
 325:sieve_extend.c ****         source_word++;
 2234              		.loc 1 325 9 view .LVU680
 2235              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2236              		.loc 1 325 31 is_stmt 0 view .LVU681
 2237 0db0 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR [r14+rdx]	# tmp311, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2237      0416
 2238 0db6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm0	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B], t
 2238      0414
 326:sieve_extend.c ****         copy_word++;
 2239              		.loc 1 326 9 is_stmt 1 view .LVU682
 327:sieve_extend.c ****     }
 2240              		.loc 1 327 9 view .LVU683
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2241              		.loc 1 324 10 view .LVU684
 2242 0dbc 4883C220 		add	rdx, 32	# ivtmp.252,
 2243              	.L202:
 325:sieve_extend.c ****         source_word++;
 2244              		.loc 1 325 9 view .LVU685
 2245              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2246              		.loc 1 325 31 is_stmt 0 view .LVU686
 2247 0dc0 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR [r14+rdx]	# tmp312, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2247      1416
 2248 0dc6 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm2	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B], t
 2248      1414
 326:sieve_extend.c ****         copy_word++;
 2249              		.loc 1 326 9 is_stmt 1 view .LVU687
 327:sieve_extend.c ****     }
 2250              		.loc 1 327 9 view .LVU688
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2251              		.loc 1 324 10 view .LVU689
 2252 0dcc 4883C220 		add	rdx, 32	# ivtmp.252,
 2253 0dd0 4839F2   		cmp	rdx, rsi	# ivtmp.252, _128
 2254 0dd3 0F849600 		je	.L238	#,
 2254      0000
 2255              	.L141:
 325:sieve_extend.c ****         source_word++;
 2256              		.loc 1 325 9 view .LVU690
 2257              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccIyIA9Z.s 			page 67


 325:sieve_extend.c ****         source_word++;
 2258              		.loc 1 325 31 is_stmt 0 view .LVU691
 2259 0dd9 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r14+rdx]	# tmp286, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2259      1C16
 2260 0ddf C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm3	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B], t
 2260      1C14
 326:sieve_extend.c ****         copy_word++;
 2261              		.loc 1 326 9 is_stmt 1 view .LVU692
 327:sieve_extend.c ****     }
 2262              		.loc 1 327 9 view .LVU693
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2263              		.loc 1 324 10 view .LVU694
 325:sieve_extend.c ****         source_word++;
 2264              		.loc 1 325 9 view .LVU695
 2265              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2266              		.loc 1 325 31 is_stmt 0 view .LVU696
 2267 0de5 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 32[r14+rdx]	# tmp287, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2267      441620
 2268 0dec C4417E7F 		vmovdqu	YMMWORD PTR 32[r12+rdx], ymm8	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B],
 2268      441420
 326:sieve_extend.c ****         copy_word++;
 2269              		.loc 1 326 9 is_stmt 1 view .LVU697
 327:sieve_extend.c ****     }
 2270              		.loc 1 327 9 view .LVU698
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2271              		.loc 1 324 10 view .LVU699
 325:sieve_extend.c ****         source_word++;
 2272              		.loc 1 325 9 view .LVU700
 2273              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2274              		.loc 1 325 31 is_stmt 0 view .LVU701
 2275 0df3 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 64[r14+rdx]	# tmp288, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2275      4C1640
 2276 0dfa C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rdx], ymm9	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B],
 2276      4C1440
 326:sieve_extend.c ****         copy_word++;
 2277              		.loc 1 326 9 is_stmt 1 view .LVU702
 327:sieve_extend.c ****     }
 2278              		.loc 1 327 9 view .LVU703
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2279              		.loc 1 324 10 view .LVU704
 325:sieve_extend.c ****         source_word++;
 2280              		.loc 1 325 9 view .LVU705
 2281              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2282              		.loc 1 325 31 is_stmt 0 view .LVU706
 2283 0e01 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 96[r14+rdx]	# tmp289, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2283      541660
 2284 0e08 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rdx], ymm10	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B]
 2284      541460
 326:sieve_extend.c ****         copy_word++;
 2285              		.loc 1 326 9 is_stmt 1 view .LVU707
 327:sieve_extend.c ****     }
 2286              		.loc 1 327 9 view .LVU708
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2287              		.loc 1 324 10 view .LVU709
GAS LISTING /tmp/ccIyIA9Z.s 			page 68


 325:sieve_extend.c ****         source_word++;
 2288              		.loc 1 325 9 view .LVU710
 2289              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2290              		.loc 1 325 31 is_stmt 0 view .LVU711
 2291 0e0f C4417E6F 		vmovdqu	ymm11, YMMWORD PTR 128[r14+rdx]	# tmp290, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2291      9C168000 
 2291      0000
 2292 0e19 C4417E7F 		vmovdqu	YMMWORD PTR 128[r12+rdx], ymm11	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B
 2292      9C148000 
 2292      0000
 326:sieve_extend.c ****         copy_word++;
 2293              		.loc 1 326 9 is_stmt 1 view .LVU712
 327:sieve_extend.c ****     }
 2294              		.loc 1 327 9 view .LVU713
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2295              		.loc 1 324 10 view .LVU714
 325:sieve_extend.c ****         source_word++;
 2296              		.loc 1 325 9 view .LVU715
 2297              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2298              		.loc 1 325 31 is_stmt 0 view .LVU716
 2299 0e23 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 160[r14+rdx]	# tmp291, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2299      A416A000 
 2299      0000
 2300 0e2d C4417E7F 		vmovdqu	YMMWORD PTR 160[r12+rdx], ymm12	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B
 2300      A414A000 
 2300      0000
 326:sieve_extend.c ****         copy_word++;
 2301              		.loc 1 326 9 is_stmt 1 view .LVU717
 327:sieve_extend.c ****     }
 2302              		.loc 1 327 9 view .LVU718
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2303              		.loc 1 324 10 view .LVU719
 325:sieve_extend.c ****         source_word++;
 2304              		.loc 1 325 9 view .LVU720
 2305              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2306              		.loc 1 325 31 is_stmt 0 view .LVU721
 2307 0e37 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r14+rdx]	# tmp292, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
 2307      AC16C000 
 2307      0000
 2308 0e41 C4417E7F 		vmovdqu	YMMWORD PTR 192[r12+rdx], ymm13	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B
 2308      AC14C000 
 2308      0000
 326:sieve_extend.c ****         copy_word++;
 2309              		.loc 1 326 9 is_stmt 1 view .LVU722
 327:sieve_extend.c ****     }
 2310              		.loc 1 327 9 view .LVU723
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2311              		.loc 1 324 10 view .LVU724
 325:sieve_extend.c ****         source_word++;
 2312              		.loc 1 325 9 view .LVU725
 2313              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2314              		.loc 1 325 31 is_stmt 0 view .LVU726
 2315 0e4b C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 224[r14+rdx]	# tmp293, MEM[base: _5, index: ivtmp.252_126, offset: 0B]
GAS LISTING /tmp/ccIyIA9Z.s 			page 69


 2315      B416E000 
 2315      0000
 2316 0e55 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rdx], ymm14	# MEM[base: vectp.239_98, index: ivtmp.252_126, offset: 0B
 2316      B414E000 
 2316      0000
 326:sieve_extend.c ****         copy_word++;
 2317              		.loc 1 326 9 is_stmt 1 view .LVU727
 327:sieve_extend.c ****     }
 2318              		.loc 1 327 9 view .LVU728
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2319              		.loc 1 324 10 view .LVU729
 2320 0e5f 4881C200 		add	rdx, 256	# ivtmp.252,
 2320      010000
 2321 0e66 4839F2   		cmp	rdx, rsi	# ivtmp.252, _128
 2322 0e69 0F856AFF 		jne	.L141	#,
 2322      FFFF
 2323              	.L238:
 2324 0e6f 4C8B2424 		mov	r12, QWORD PTR [rsp]	# source_word, %sfp
 2325 0e73 4D89CE   		mov	r14, r9	# niters_vector_mult_vf.232, niters.230
 2326 0e76 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.232,
 2327 0e7a 4D01F4   		add	r12, r14	# source_word, niters_vector_mult_vf.232
 2328 0e7d 4C01F0   		add	rax, r14	# tmp.234, niters_vector_mult_vf.232
 2329 0e80 4D39F1   		cmp	r9, r14	# niters.230, niters_vector_mult_vf.232
 2330 0e83 745B     		je	.L241	#,
 2331              	.LVL96:
 325:sieve_extend.c ****         source_word++;
 2332              		.loc 1 325 9 view .LVU730
 2333              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2334              		.loc 1 325 43 is_stmt 0 view .LVU731
 2335 0e85 4C8B6C24 		mov	r13, QWORD PTR 16[rsp]	# bitstorage, %sfp
 2335      10
 2336              	# sieve_extend.c:327:         copy_word++;
 327:sieve_extend.c ****     }
 2337              		.loc 1 327 18 view .LVU732
 2338 0e8a 4C8D7801 		lea	r15, 1[rax]	# copy_word,
 2339              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2340              		.loc 1 325 43 view .LVU733
 2341 0e8e 4B8B7CE5 		mov	rdi, QWORD PTR 0[r13+r12*8]	# _37, *_21
 2341      00
 2342              	# sieve_extend.c:326:         source_word++;
 326:sieve_extend.c ****         copy_word++;
 2343              		.loc 1 326 20 view .LVU734
 2344 0e93 49FFC4   		inc	r12	# source_word
 2345              	.LVL97:
 2346              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2347              		.loc 1 325 31 view .LVU735
 2348 0e96 49897CC5 		mov	QWORD PTR 0[r13+rax*8], rdi	# *_23, _37
 2348      00
 326:sieve_extend.c ****         copy_word++;
 2349              		.loc 1 326 9 is_stmt 1 view .LVU736
 2350              	.LVL98:
 327:sieve_extend.c ****     }
 2351              		.loc 1 327 9 view .LVU737
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccIyIA9Z.s 			page 70


 2352              		.loc 1 324 10 view .LVU738
 2353 0e9b 4C39FB   		cmp	rbx, r15	# destination_stop_word, copy_word
 2354 0e9e 7640     		jbe	.L241	#,
 325:sieve_extend.c ****         source_word++;
 2355              		.loc 1 325 9 view .LVU739
 2356              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2357              		.loc 1 325 43 is_stmt 0 view .LVU740
 2358 0ea0 4F8B5CE5 		mov	r11, QWORD PTR 0[r13+r12*8]	# _111, *_108
 2358      00
 2359              	# sieve_extend.c:327:         copy_word++;
 327:sieve_extend.c ****     }
 2360              		.loc 1 327 18 view .LVU741
 2361 0ea5 4883C002 		add	rax, 2	# copy_word,
 2362              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2363              		.loc 1 325 31 view .LVU742
 2364 0ea9 4F895CFD 		mov	QWORD PTR 0[r13+r15*8], r11	# *_110, _111
 2364      00
 326:sieve_extend.c ****         copy_word++;
 2365              		.loc 1 326 9 is_stmt 1 view .LVU743
 327:sieve_extend.c ****     }
 2366              		.loc 1 327 9 view .LVU744
 2367              	.LVL99:
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2368              		.loc 1 324 10 view .LVU745
 2369              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2370              		.loc 1 325 43 is_stmt 0 view .LVU746
 2371 0eae 4E8D14E5 		lea	r10, 0[0+r12*8]	# _107,
 2371      00000000 
 2372              	# sieve_extend.c:324:    while (copy_word < destination_stop_word) {
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2373              		.loc 1 324 10 view .LVU747
 2374 0eb6 4839C3   		cmp	rbx, rax	# destination_stop_word, copy_word
 2375 0eb9 7625     		jbe	.L241	#,
 325:sieve_extend.c ****         source_word++;
 2376              		.loc 1 325 9 is_stmt 1 view .LVU748
 2377              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2378              		.loc 1 325 43 is_stmt 0 view .LVU749
 2379 0ebb 4F8B4C15 		mov	r9, QWORD PTR 8[r13+r10]	# _83, *_80
 2379      08
 2380              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2381              		.loc 1 325 31 view .LVU750
 2382 0ec0 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_82, _83
 2382      00
 326:sieve_extend.c ****         copy_word++;
 2383              		.loc 1 326 9 is_stmt 1 view .LVU751
 327:sieve_extend.c ****     }
 2384              		.loc 1 327 9 view .LVU752
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2385              		.loc 1 324 10 view .LVU753
 2386 0ec5 C5F877   		vzeroupper
 2387              	.LVL100:
 2388              	.L242:
GAS LISTING /tmp/ccIyIA9Z.s 			page 71


 2389              	# sieve_extend.c:330: }
 330:sieve_extend.c **** 
 2390              		.loc 1 330 1 is_stmt 0 view .LVU754
 2391 0ec8 488D65D8 		lea	rsp, -40[rbp]	#,
 2392              	.LVL101:
 330:sieve_extend.c **** 
 2393              		.loc 1 330 1 view .LVU755
 2394 0ecc 5B       		pop	rbx	#
 2395 0ecd 415C     		pop	r12	#
 2396 0ecf 415D     		pop	r13	#
 2397 0ed1 415E     		pop	r14	#
 2398 0ed3 415F     		pop	r15	#
 2399 0ed5 5D       		pop	rbp	#
 2400              		.cfi_remember_state
 2401              		.cfi_def_cfa 7, 8
 2402              	.LVL102:
 330:sieve_extend.c **** 
 2403              		.loc 1 330 1 view .LVU756
 2404 0ed6 C3       		ret	
 2405              	.LVL103:
 2406 0ed7 660F1F84 		.p2align 4,,10
 2406      00000000 
 2406      00
 2407              		.p2align 3
 2408              	.L241:
 2409              		.cfi_restore_state
 330:sieve_extend.c **** 
 2410              		.loc 1 330 1 view .LVU757
 2411 0ee0 C5F877   		vzeroupper
 2412 0ee3 488D65D8 		lea	rsp, -40[rbp]	#,
 2413              	.LVL104:
 330:sieve_extend.c **** 
 2414              		.loc 1 330 1 view .LVU758
 2415 0ee7 5B       		pop	rbx	#
 2416              	.LVL105:
 330:sieve_extend.c **** 
 2417              		.loc 1 330 1 view .LVU759
 2418 0ee8 415C     		pop	r12	#
 2419 0eea 415D     		pop	r13	#
 2420 0eec 415E     		pop	r14	#
 2421 0eee 415F     		pop	r15	#
 2422 0ef0 5D       		pop	rbp	#
 2423              		.cfi_remember_state
 2424              		.cfi_def_cfa 7, 8
 2425              	.LVL106:
 330:sieve_extend.c **** 
 2426              		.loc 1 330 1 view .LVU760
 2427 0ef1 C3       		ret	
 2428              	.LVL107:
 2429              		.p2align 4,,10
 2430 0ef2 660F1F44 		.p2align 3
 2430      0000
 2431              	.L140:
 2432              		.cfi_restore_state
 330:sieve_extend.c **** 
 2433              		.loc 1 330 1 view .LVU761
 2434 0ef8 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# bitstorage, %sfp
GAS LISTING /tmp/ccIyIA9Z.s 			page 72


 2434      10
 2435              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2436              		.loc 1 325 43 view .LVU762
 2437 0efd 488B1424 		mov	rdx, QWORD PTR [rsp]	# source_word, %sfp
 2438 0f01 4C8D04DE 		lea	r8, [rsi+rbx*8]	# _125,
 2439 0f05 4901F4   		add	r12, rsi	# ivtmp.247, bitstorage
 2440 0f08 4829C2   		sub	rdx, rax	# source_word, ivtmp.261
 2441 0f0b 4C89C0   		mov	rax, r8	# tmp191, _125
 2442 0f0e 4C29E0   		sub	rax, r12	# tmp191, ivtmp.247
 2443 0f11 4883E808 		sub	rax, 8	# tmp192,
 2444 0f15 48C1E803 		shr	rax, 3	# tmp190,
 2445 0f19 48FFC0   		inc	rax	# tmp193
 2446 0f1c 83E007   		and	eax, 7	# tmp194,
 2447 0f1f 0F848800 		je	.L143	#,
 2447      0000
 2448 0f25 4883F801 		cmp	rax, 1	# tmp194,
 2449 0f29 746C     		je	.L208	#,
 2450 0f2b 4883F802 		cmp	rax, 2	# tmp194,
 2451 0f2f 7459     		je	.L209	#,
 2452 0f31 4883F803 		cmp	rax, 3	# tmp194,
 2453 0f35 7446     		je	.L210	#,
 2454 0f37 4883F804 		cmp	rax, 4	# tmp194,
 2455 0f3b 7433     		je	.L211	#,
 2456 0f3d 4883F805 		cmp	rax, 5	# tmp194,
 2457 0f41 7420     		je	.L212	#,
 2458 0f43 4883F806 		cmp	rax, 6	# tmp194,
 2459 0f47 740D     		je	.L213	#,
 2460              	.LVL108:
 325:sieve_extend.c ****         source_word++;
 2461              		.loc 1 325 9 is_stmt 1 view .LVU763
 2462              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2463              		.loc 1 325 43 is_stmt 0 view .LVU764
 2464 0f49 4D8B34D4 		mov	r14, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2465 0f4d 4983C408 		add	r12, 8	# ivtmp.247,
 2466              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2467              		.loc 1 325 31 view .LVU765
 2468 0f51 4D897424 		mov	QWORD PTR -8[r12], r14	# MEM[base: _120, offset: 0B], _70
 2468      F8
 326:sieve_extend.c ****         copy_word++;
 2469              		.loc 1 326 9 is_stmt 1 view .LVU766
 327:sieve_extend.c ****     }
 2470              		.loc 1 327 9 view .LVU767
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2471              		.loc 1 324 10 view .LVU768
 2472              	.L213:
 325:sieve_extend.c ****         source_word++;
 2473              		.loc 1 325 9 view .LVU769
 2474              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2475              		.loc 1 325 43 is_stmt 0 view .LVU770
 2476 0f56 4D8B2CD4 		mov	r13, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2477 0f5a 4983C408 		add	r12, 8	# ivtmp.247,
 2478              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccIyIA9Z.s 			page 73


 2479              		.loc 1 325 31 view .LVU771
 2480 0f5e 4D896C24 		mov	QWORD PTR -8[r12], r13	# MEM[base: _120, offset: 0B], _70
 2480      F8
 326:sieve_extend.c ****         copy_word++;
 2481              		.loc 1 326 9 is_stmt 1 view .LVU772
 327:sieve_extend.c ****     }
 2482              		.loc 1 327 9 view .LVU773
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2483              		.loc 1 324 10 view .LVU774
 2484              	.L212:
 325:sieve_extend.c ****         source_word++;
 2485              		.loc 1 325 9 view .LVU775
 2486              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2487              		.loc 1 325 43 is_stmt 0 view .LVU776
 2488 0f63 498B3CD4 		mov	rdi, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2489 0f67 4983C408 		add	r12, 8	# ivtmp.247,
 2490              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2491              		.loc 1 325 31 view .LVU777
 2492 0f6b 49897C24 		mov	QWORD PTR -8[r12], rdi	# MEM[base: _120, offset: 0B], _70
 2492      F8
 326:sieve_extend.c ****         copy_word++;
 2493              		.loc 1 326 9 is_stmt 1 view .LVU778
 327:sieve_extend.c ****     }
 2494              		.loc 1 327 9 view .LVU779
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2495              		.loc 1 324 10 view .LVU780
 2496              	.L211:
 325:sieve_extend.c ****         source_word++;
 2497              		.loc 1 325 9 view .LVU781
 2498              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2499              		.loc 1 325 43 is_stmt 0 view .LVU782
 2500 0f70 4D8B3CD4 		mov	r15, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2501 0f74 4983C408 		add	r12, 8	# ivtmp.247,
 2502              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2503              		.loc 1 325 31 view .LVU783
 2504 0f78 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _120, offset: 0B], _70
 2504      F8
 326:sieve_extend.c ****         copy_word++;
 2505              		.loc 1 326 9 is_stmt 1 view .LVU784
 327:sieve_extend.c ****     }
 2506              		.loc 1 327 9 view .LVU785
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2507              		.loc 1 324 10 view .LVU786
 2508              	.L210:
 325:sieve_extend.c ****         source_word++;
 2509              		.loc 1 325 9 view .LVU787
 2510              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2511              		.loc 1 325 43 is_stmt 0 view .LVU788
 2512 0f7d 4D8B14D4 		mov	r10, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2513 0f81 4983C408 		add	r12, 8	# ivtmp.247,
 2514              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccIyIA9Z.s 			page 74


 2515              		.loc 1 325 31 view .LVU789
 2516 0f85 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _120, offset: 0B], _70
 2516      F8
 326:sieve_extend.c ****         copy_word++;
 2517              		.loc 1 326 9 is_stmt 1 view .LVU790
 327:sieve_extend.c ****     }
 2518              		.loc 1 327 9 view .LVU791
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2519              		.loc 1 324 10 view .LVU792
 2520              	.L209:
 325:sieve_extend.c ****         source_word++;
 2521              		.loc 1 325 9 view .LVU793
 2522              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2523              		.loc 1 325 43 is_stmt 0 view .LVU794
 2524 0f8a 4D8B1CD4 		mov	r11, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2525 0f8e 4983C408 		add	r12, 8	# ivtmp.247,
 2526              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2527              		.loc 1 325 31 view .LVU795
 2528 0f92 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _120, offset: 0B], _70
 2528      F8
 326:sieve_extend.c ****         copy_word++;
 2529              		.loc 1 326 9 is_stmt 1 view .LVU796
 327:sieve_extend.c ****     }
 2530              		.loc 1 327 9 view .LVU797
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2531              		.loc 1 324 10 view .LVU798
 2532              	.L208:
 325:sieve_extend.c ****         source_word++;
 2533              		.loc 1 325 9 view .LVU799
 2534              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2535              		.loc 1 325 43 is_stmt 0 view .LVU800
 2536 0f97 498B0CD4 		mov	rcx, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2537 0f9b 4983C408 		add	r12, 8	# ivtmp.247,
 2538              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2539              		.loc 1 325 31 view .LVU801
 2540 0f9f 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _120, offset: 0B], _70
 2540      F8
 326:sieve_extend.c ****         copy_word++;
 2541              		.loc 1 326 9 is_stmt 1 view .LVU802
 327:sieve_extend.c ****     }
 2542              		.loc 1 327 9 view .LVU803
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2543              		.loc 1 324 10 view .LVU804
 2544 0fa4 4D39C4   		cmp	r12, r8	# ivtmp.247, _125
 2545 0fa7 0F841BFF 		je	.L242	#,
 2545      FFFF
 2546              	.LVL109:
 2547              	.L143:
 325:sieve_extend.c ****         source_word++;
 2548              		.loc 1 325 9 view .LVU805
 2549              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2550              		.loc 1 325 43 is_stmt 0 view .LVU806
GAS LISTING /tmp/ccIyIA9Z.s 			page 75


 2551 0fad 498B1CD4 		mov	rbx, QWORD PTR [r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2552              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2553              		.loc 1 325 31 view .LVU807
 2554 0fb1 49891C24 		mov	QWORD PTR [r12], rbx	# MEM[base: _120, offset: 0B], _70
 326:sieve_extend.c ****         copy_word++;
 2555              		.loc 1 326 9 is_stmt 1 view .LVU808
 327:sieve_extend.c ****     }
 2556              		.loc 1 327 9 view .LVU809
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2557              		.loc 1 324 10 view .LVU810
 325:sieve_extend.c ****         source_word++;
 2558              		.loc 1 325 9 view .LVU811
 2559              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2560              		.loc 1 325 43 is_stmt 0 view .LVU812
 2561 0fb5 4D8B4CD4 		mov	r9, QWORD PTR 8[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2561      08
 2562              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2563              		.loc 1 325 31 view .LVU813
 2564 0fba 4D894C24 		mov	QWORD PTR 8[r12], r9	# MEM[base: _120, offset: 0B], _70
 2564      08
 326:sieve_extend.c ****         copy_word++;
 2565              		.loc 1 326 9 is_stmt 1 view .LVU814
 327:sieve_extend.c ****     }
 2566              		.loc 1 327 9 view .LVU815
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2567              		.loc 1 324 10 view .LVU816
 325:sieve_extend.c ****         source_word++;
 2568              		.loc 1 325 9 view .LVU817
 2569              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2570              		.loc 1 325 43 is_stmt 0 view .LVU818
 2571 0fbf 498B74D4 		mov	rsi, QWORD PTR 16[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2571      10
 2572              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2573              		.loc 1 325 31 view .LVU819
 2574 0fc4 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _120, offset: 0B], _70
 2574      10
 326:sieve_extend.c ****         copy_word++;
 2575              		.loc 1 326 9 is_stmt 1 view .LVU820
 327:sieve_extend.c ****     }
 2576              		.loc 1 327 9 view .LVU821
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2577              		.loc 1 324 10 view .LVU822
 325:sieve_extend.c ****         source_word++;
 2578              		.loc 1 325 9 view .LVU823
 2579              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2580              		.loc 1 325 43 is_stmt 0 view .LVU824
 2581 0fc9 498B44D4 		mov	rax, QWORD PTR 24[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2581      18
 2582              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2583              		.loc 1 325 31 view .LVU825
GAS LISTING /tmp/ccIyIA9Z.s 			page 76


 2584 0fce 49894424 		mov	QWORD PTR 24[r12], rax	# MEM[base: _120, offset: 0B], _70
 2584      18
 326:sieve_extend.c ****         copy_word++;
 2585              		.loc 1 326 9 is_stmt 1 view .LVU826
 327:sieve_extend.c ****     }
 2586              		.loc 1 327 9 view .LVU827
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2587              		.loc 1 324 10 view .LVU828
 325:sieve_extend.c ****         source_word++;
 2588              		.loc 1 325 9 view .LVU829
 2589              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2590              		.loc 1 325 43 is_stmt 0 view .LVU830
 2591 0fd3 4D8B74D4 		mov	r14, QWORD PTR 32[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2591      20
 2592              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2593              		.loc 1 325 31 view .LVU831
 2594 0fd8 4D897424 		mov	QWORD PTR 32[r12], r14	# MEM[base: _120, offset: 0B], _70
 2594      20
 326:sieve_extend.c ****         copy_word++;
 2595              		.loc 1 326 9 is_stmt 1 view .LVU832
 327:sieve_extend.c ****     }
 2596              		.loc 1 327 9 view .LVU833
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2597              		.loc 1 324 10 view .LVU834
 325:sieve_extend.c ****         source_word++;
 2598              		.loc 1 325 9 view .LVU835
 2599              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2600              		.loc 1 325 43 is_stmt 0 view .LVU836
 2601 0fdd 4D8B6CD4 		mov	r13, QWORD PTR 40[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2601      28
 2602              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2603              		.loc 1 325 31 view .LVU837
 2604 0fe2 4D896C24 		mov	QWORD PTR 40[r12], r13	# MEM[base: _120, offset: 0B], _70
 2604      28
 326:sieve_extend.c ****         copy_word++;
 2605              		.loc 1 326 9 is_stmt 1 view .LVU838
 327:sieve_extend.c ****     }
 2606              		.loc 1 327 9 view .LVU839
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2607              		.loc 1 324 10 view .LVU840
 325:sieve_extend.c ****         source_word++;
 2608              		.loc 1 325 9 view .LVU841
 2609              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2610              		.loc 1 325 43 is_stmt 0 view .LVU842
 2611 0fe7 498B7CD4 		mov	rdi, QWORD PTR 48[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2611      30
 2612              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2613              		.loc 1 325 31 view .LVU843
 2614 0fec 49897C24 		mov	QWORD PTR 48[r12], rdi	# MEM[base: _120, offset: 0B], _70
 2614      30
 326:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccIyIA9Z.s 			page 77


 2615              		.loc 1 326 9 is_stmt 1 view .LVU844
 327:sieve_extend.c ****     }
 2616              		.loc 1 327 9 view .LVU845
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2617              		.loc 1 324 10 view .LVU846
 325:sieve_extend.c ****         source_word++;
 2618              		.loc 1 325 9 view .LVU847
 2619              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2620              		.loc 1 325 43 is_stmt 0 view .LVU848
 2621 0ff1 4D8B7CD4 		mov	r15, QWORD PTR 56[r12+rdx*8]	# _70, MEM[base: _120, index: _121, step: 8, offset: 0B]
 2621      38
 2622 0ff6 4983C440 		add	r12, 64	# ivtmp.247,
 2623              	# sieve_extend.c:325:         bitstorage[copy_word] = bitstorage[source_word];
 325:sieve_extend.c ****         source_word++;
 2624              		.loc 1 325 31 view .LVU849
 2625 0ffa 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _120, offset: 0B], _70
 2625      F8
 326:sieve_extend.c ****         copy_word++;
 2626              		.loc 1 326 9 is_stmt 1 view .LVU850
 327:sieve_extend.c ****     }
 2627              		.loc 1 327 9 view .LVU851
 324:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 2628              		.loc 1 324 10 view .LVU852
 2629 0fff 4D39C4   		cmp	r12, r8	# ivtmp.247, _125
 2630 1002 75A9     		jne	.L143	#,
 2631 1004 E9BFFEFF 		jmp	.L242	#
 2631      FF
 2632              		.cfi_endproc
 2633              	.LFE60:
 2635 1009 0F1F8000 		.p2align 4
 2635      000000
 2637              	continuePattern_shiftleft:
 2638              	.LVL110:
 2639              	.LFB63:
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2640              		.loc 1 370 148 view -0
 2641              		.cfi_startproc
 371:sieve_extend.c **** 
 2642              		.loc 1 371 5 view .LVU854
 373:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2643              		.loc 1 373 5 view .LVU855
 2644              	# sieve_extend.c:370: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2645              		.loc 1 370 148 is_stmt 0 view .LVU856
 2646 1010 55       		push	rbp	#
 2647              		.cfi_def_cfa_offset 16
 2648              		.cfi_offset 6, -16
 2649              	# sieve_extend.c:373:     const counter_t destination_stop_word = wordindex(destination_stop);
 373:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2650              		.loc 1 373 21 view .LVU857
 2651 1011 48C1E906 		shr	rcx, 6	# tmp924,
 2652              	.LVL111:
 2653              	# sieve_extend.c:374:     const counter_t copy_start = source_start + size;
 374:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 2654              		.loc 1 374 21 view .LVU858
 2655 1015 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
GAS LISTING /tmp/ccIyIA9Z.s 			page 78


 2656              	# sieve_extend.c:370: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2657              		.loc 1 370 148 view .LVU859
 2658 1019 4889E5   		mov	rbp, rsp	#,
 2659              		.cfi_def_cfa_register 6
 2660 101c 4157     		push	r15	#
 2661              		.cfi_offset 15, -24
 2662              	# sieve_extend.c:373:     const counter_t destination_stop_word = wordindex(destination_stop);
 373:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2663              		.loc 1 373 21 view .LVU860
 2664 101e 4989CF   		mov	r15, rcx	# destination_stop_word, tmp924
 2665              	# sieve_extend.c:370: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2666              		.loc 1 370 148 view .LVU861
 2667 1021 4989D2   		mov	r10, rdx	# size, tmp923
 2668 1024 4156     		push	r14	#
 2669              		.cfi_offset 14, -32
 2670              	# sieve_extend.c:378:     register counter_t copy_word = wordindex(copy_start);
 378:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 2671              		.loc 1 378 24 view .LVU862
 2672 1026 4D89C6   		mov	r14, r8	# copy_word, copy_start
 2673 1029 49C1EE06 		shr	r14, 6	# copy_word,
 2674              	# sieve_extend.c:370: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2675              		.loc 1 370 148 view .LVU863
 2676 102d 4155     		push	r13	#
 2677 102f 4154     		push	r12	#
 2678 1031 53       		push	rbx	#
 2679              		.cfi_offset 13, -40
 2680              		.cfi_offset 12, -48
 2681              		.cfi_offset 3, -56
 2682 1032 4889FB   		mov	rbx, rdi	# bitstorage, tmp921
 2683 1035 4883E4E0 		and	rsp, -32	#,
 2684 1039 4883EC60 		sub	rsp, 96	#,
 2685              	# sieve_extend.c:373:     const counter_t destination_stop_word = wordindex(destination_stop);
 373:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 2686              		.loc 1 373 21 view .LVU864
 2687 103d 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, destination_stop_word
 2687      58
 2688              	.LVL112:
 374:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 2689              		.loc 1 374 5 is_stmt 1 view .LVU865
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2690              		.loc 1 375 5 view .LVU866
 2691              	# sieve_extend.c:375:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2692              		.loc 1 375 39 is_stmt 0 view .LVU867
 2693 1042 4889F1   		mov	rcx, rsi	# _4, source_start
 2694              	.LVL113:
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2695              		.loc 1 375 39 view .LVU868
 2696 1045 83E13F   		and	ecx, 63	# _4,
 2697              	# sieve_extend.c:370: static void continuePattern_shiftleft(bitword_t* bitstorage, const counter_t 
 370:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 2698              		.loc 1 370 148 view .LVU869
 2699 1048 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 2699      18
GAS LISTING /tmp/ccIyIA9Z.s 			page 79


 2700              	# sieve_extend.c:375:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2701              		.loc 1 375 69 view .LVU870
 2702 104d 4C89C2   		mov	rdx, r8	# _5, copy_start
 2703              	.LVL114:
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2704              		.loc 1 375 69 view .LVU871
 2705 1050 83E23F   		and	edx, 63	# _5,
 2706              	.LVL115:
 376:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 2707              		.loc 1 376 5 is_stmt 1 view .LVU872
 377:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2708              		.loc 1 377 5 view .LVU873
 2709              	# sieve_extend.c:377:     register counter_t source_word = wordindex(source_start);
 377:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2710              		.loc 1 377 24 is_stmt 0 view .LVU874
 2711 1053 48C1EE06 		shr	rsi, 6	# source_start,
 2712              	.LVL116:
 2713              	# sieve_extend.c:375:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2714              		.loc 1 375 31 view .LVU875
 2715 1057 4989CD   		mov	r13, rcx	# shift, _4
 2716              	# sieve_extend.c:377:     register counter_t source_word = wordindex(source_start);
 377:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2717              		.loc 1 377 24 view .LVU876
 2718 105a 4989F1   		mov	r9, rsi	# source_word, source_start
 2719              	.LVL117:
 378:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 2720              		.loc 1 378 5 is_stmt 1 view .LVU877
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2721              		.loc 1 379 5 view .LVU878
 2722              	# sieve_extend.c:375:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 375:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2723              		.loc 1 375 31 is_stmt 0 view .LVU879
 2724 105d 4929D5   		sub	r13, rdx	# shift, _5
 2725              	.LVL118:
 2726              	# sieve_extend.c:376:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 376:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 2727              		.loc 1 376 31 view .LVU880
 2728 1060 4829CA   		sub	rdx, rcx	# tmp418, _4
 2729              	.LVL119:
 376:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 2730              		.loc 1 376 31 view .LVU881
 2731 1063 4883C240 		add	rdx, 64	# shift_flipped,
 2732              	.LVL120:
 2733              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2734              		.loc 1 379 42 view .LVU882
 2735 1067 4A8D04CD 		lea	rax, 0[0+r9*8]	# _9,
 2735      00000000 
 2736              	# sieve_extend.c:380:                              | (bitstorage[source_word+1] << shift_flipped))
 380:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2737              		.loc 1 380 59 view .LVU883
 2738 106f C462E9F7 		shlx	r12, QWORD PTR 8[rdi+rax], rdx	# tmp420, *_16, shift_flipped
 2738      640708
 2739              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
GAS LISTING /tmp/ccIyIA9Z.s 			page 80


 2740              		.loc 1 379 56 view .LVU884
 2741 1076 4A8B3CCF 		mov	rdi, QWORD PTR [rdi+r9*8]	# *_10, *_10
 2742              	.LVL121:
 2743              	# sieve_extend.c:380:                              | (bitstorage[source_word+1] << shift_flipped))
 380:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2744              		.loc 1 380 43 view .LVU885
 2745 107a 4D8D5901 		lea	r11, 1[r9]	# tmp.282,
 2746              	# sieve_extend.c:386:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 386:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 2747              		.loc 1 386 41 view .LVU886
 2748 107e 4F8D1413 		lea	r10, [r11+r10]	# tmp431,
 2749              	.LVL122:
 2750              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2751              		.loc 1 379 56 view .LVU887
 2752 1082 C46293F7 		shrx	r9, rdi, r13	# tmp422, *_10, shift
 2752      CF
 2753              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2754              		.loc 1 379 27 view .LVU888
 2755 1087 4A8D34F5 		lea	rsi, 0[0+r14*8]	# _6,
 2755      00000000 
 2756              	.LVL123:
 2757              	# sieve_extend.c:380:                              | (bitstorage[source_word+1] << shift_flipped))
 380:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2758              		.loc 1 380 30 view .LVU889
 2759 108f 4D09E1   		or	r9, r12	# tmp424, tmp420
 2760              	# sieve_extend.c:381:                              & ~chopmask(copy_start); // because this is the 
 381:sieve_extend.c **** 
 2761              		.loc 1 381 33 view .LVU890
 2762 1092 41F7D0   		not	r8d	# tmp425
 2763              	.LVL124:
 381:sieve_extend.c **** 
 2764              		.loc 1 381 33 view .LVU891
 2765 1095 48C7C1FF 		mov	rcx, -1	# tmp428,
 2765      FFFFFF
 2766 109c C462BBF7 		shrx	r8, rcx, r8	# tmp427, tmp428, tmp425
 2766      C1
 2767              	# sieve_extend.c:381:                              & ~chopmask(copy_start); // because this is the 
 381:sieve_extend.c **** 
 2768              		.loc 1 381 30 view .LVU892
 2769 10a1 C442B8F2 		andn	r12, r8, r9	# tmp430, tmp427, tmp424
 2769      E1
 2770              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2771              		.loc 1 379 27 view .LVU893
 2772 10a6 4C092433 		or	QWORD PTR [rbx+rsi], r12	# *_7, tmp430
 383:sieve_extend.c ****     source_word++;
 2773              		.loc 1 383 5 is_stmt 1 view .LVU894
 2774              	# sieve_extend.c:386:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 386:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 2775              		.loc 1 386 21 is_stmt 0 view .LVU895
 2776 10aa 4D39FA   		cmp	r10, r15	# tmp431, destination_stop_word
 2777 10ad 4D0F47D7 		cmova	r10, r15	# tmp431,, tmp431, destination_stop_word
 2778              	.LBB445:
 2779              	.LBB446:
 2780              	# sieve_extend.c:354:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
GAS LISTING /tmp/ccIyIA9Z.s 			page 81


 354:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2781              		.loc 1 354 91 view .LVU896
 2782 10b1 41B90200 		mov	r9d, 2	# tmp432,
 2782      0000
 2783 10b7 4983FA02 		cmp	r10, 2	# aligned_copy_word,
 2784 10bb 4D0F43CA 		cmovnb	r9, r10	# aligned_copy_word,, _86
 2785              	.LBE446:
 2786              	.LBE445:
 2787              	# sieve_extend.c:383:     copy_word++;
 383:sieve_extend.c ****     source_word++;
 2788              		.loc 1 383 14 view .LVU897
 2789 10bf 4D8D6601 		lea	r12, 1[r14]	# tmp.283,
 2790              	.LVL125:
 384:sieve_extend.c **** 
 2791              		.loc 1 384 5 is_stmt 1 view .LVU898
 386:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 2792              		.loc 1 386 5 view .LVU899
 2793              	.LBB468:
 2794              	.LBB464:
 2795              	# sieve_extend.c:354:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 354:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2796              		.loc 1 354 21 is_stmt 0 view .LVU900
 2797 10c3 498D79FE 		lea	rdi, -2[r9]	# fast_loop_stop_word,
 2798              	.LBE464:
 2799              	.LBE468:
 2800              	# sieve_extend.c:379:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 379:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 2801              		.loc 1 379 56 view .LVU901
 2802 10c7 44896C24 		mov	DWORD PTR 64[rsp], r13d	# %sfp, shift
 2802      40
 2803              	# sieve_extend.c:380:                              | (bitstorage[source_word+1] << shift_flipped))
 380:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 2804              		.loc 1 380 59 view .LVU902
 2805 10cc 8954243C 		mov	DWORD PTR 60[rsp], edx	# %sfp, shift_flipped
 2806              	# sieve_extend.c:386:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 386:sieve_extend.c ****     const counter_t distance  = continuePattern_shiftleft_unrolled(bitstorage, aligned_copy_word, s
 2807              		.loc 1 386 21 view .LVU903
 2808 10d0 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, aligned_copy_word
 2808      50
 2809              	.LVL126:
 387:sieve_extend.c ****     source_word += distance;
 2810              		.loc 1 387 5 is_stmt 1 view .LVU904
 2811              	.LBB469:
 2812              	.LBI445:
 353:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 2813              		.loc 1 353 25 view .LVU905
 2814              	.LBB465:
 354:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2815              		.loc 1 354 5 view .LVU906
 2816              	# sieve_extend.c:354:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 354:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 2817              		.loc 1 354 21 is_stmt 0 view .LVU907
 2818 10d5 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, fast_loop_stop_word
 2818      28
 2819              	.LVL127:
 355:sieve_extend.c ****     counter_t distance = 0;
 2820              		.loc 1 355 5 is_stmt 1 view .LVU908
GAS LISTING /tmp/ccIyIA9Z.s 			page 82


 356:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 2821              		.loc 1 356 5 view .LVU909
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 2822              		.loc 1 357 5 view .LVU910
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 2823              		.loc 1 357 11 view .LVU911
 2824 10da 4939FC   		cmp	r12, rdi	# tmp.283, fast_loop_stop_word
 2825 10dd 0F83A004 		jnb	.L245	#,
 2825      0000
 2826 10e3 4C8D5040 		lea	r10, 64[rax]	# tmp435,
 2827              	.LVL128:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 2828              		.loc 1 357 11 is_stmt 0 view .LVU912
 2829 10e7 4C8D4610 		lea	r8, 16[rsi]	# tmp436,
 2830 10eb 4D29F1   		sub	r9, r14	# tmp433, copy_word
 2831 10ee 488D7E48 		lea	rdi, 72[rsi]	# tmp439,
 2832              	.LVL129:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 2833              		.loc 1 357 11 view .LVU913
 2834 10f2 4983E904 		sub	r9, 4	# _215,
 2835 10f6 488D4808 		lea	rcx, 8[rax]	# tmp612,
 2836 10fa 4D39C2   		cmp	r10, r8	# tmp435, tmp436
 2837 10fd 410F9EC7 		setle	r15b	#, tmp438
 2838              	.LVL130:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 2839              		.loc 1 357 11 view .LVU914
 2840 1101 4839CF   		cmp	rdi, rcx	# tmp439, tmp612
 2841 1104 4C894C24 		mov	QWORD PTR 48[rsp], r9	# %sfp, _215
 2841      30
 2842 1109 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, tmp439
 2842      48
 2843 110e 4C8D4850 		lea	r9, 80[rax]	# tmp444,
 2844 1112 400F9EC7 		setle	dil	#, tmp442
 2845 1116 4109FF   		or	r15d, edi	# tmp443, tmp442
 2846 1119 4D39C1   		cmp	r9, r8	# tmp444, tmp436
 2847 111c 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, tmp444
 2847      20
 2848 1121 410F9EC1 		setle	r9b	#, tmp447
 2849 1125 4883C010 		add	rax, 16	# tmp449,
 2850 1129 48394424 		cmp	QWORD PTR 72[rsp], rax	# %sfp, tmp449
 2850      48
 2851 112e 400F9EC7 		setle	dil	#, tmp451
 2852 1132 4409CF   		or	edi, r9d	# tmp452, tmp447
 2853 1135 4421FF   		and	edi, r15d	# tmp453, tmp443
 2854 1138 48837C24 		cmp	QWORD PTR 48[rsp], 11	# %sfp,
 2854      300B
 2855 113e 410F97C7 		seta	r15b	#, tmp455
 2856 1142 4C8D4E08 		lea	r9, 8[rsi]	# tmp458,
 2857 1146 4421FF   		and	edi, r15d	# tmp456, tmp455
 2858 1149 4D39CA   		cmp	r10, r9	# tmp435, tmp458
 2859 114c 410F9EC2 		setle	r10b	#, tmp460
 2860 1150 4883C640 		add	rsi, 64	# tmp461,
 2861 1154 4839CE   		cmp	rsi, rcx	# tmp461, tmp612
 2862 1157 410F9EC7 		setle	r15b	#, tmp464
 2863 115b 4509FA   		or	r10d, r15d	# tmp465, tmp464
 2864 115e 4421D7   		and	edi, r10d	# tmp466, tmp465
 2865 1161 4C394C24 		cmp	QWORD PTR 32[rsp], r9	# %sfp, tmp458
GAS LISTING /tmp/ccIyIA9Z.s 			page 83


 2865      20
 2866 1166 410F9EC2 		setle	r10b	#, tmp470
 2867 116a 4839C6   		cmp	rsi, rax	# tmp461, tmp449
 2868 116d 410F9EC7 		setle	r15b	#, tmp474
 2869 1171 4509FA   		or	r10d, r15d	# tmp475, tmp474
 2870 1174 4484D7   		test	dil, r10b	# tmp466, tmp475
 2871 1177 0F84F30A 		je	.L246	#,
 2871      0000
 2872 117d 4C394C24 		cmp	QWORD PTR 72[rsp], r9	# %sfp, tmp458
 2872      48
 2873 1182 400F9EC7 		setle	dil	#, tmp480
 2874 1186 4C39C6   		cmp	rsi, r8	# tmp461, tmp436
 2875 1189 400F9EC6 		setle	sil	#, tmp484
 2876 118d 4008F7   		or	dil, sil	# tmp480, tmp484
 2877 1190 0F84DA0A 		je	.L246	#,
 2877      0000
 2878 1196 4801D9   		add	rcx, rbx	# vectp.304, bitstorage
 2879              	.LBB447:
 2880              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 2881              		.loc 1 358 19 view .LVU915
 2882 1199 C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1004, MEM[base: vectp.304_373, index: ivtmp.359_533, offset: 
 2883 119d 4801D8   		add	rax, rbx	# vectp.308, bitstorage
 2884              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 2885              		.loc 1 359 19 view .LVU916
 2886 11a0 C5FE6F08 		vmovdqu	ymm1, YMMWORD PTR [rax]	# MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0B], MEM[
 2887 11a4 C5FE6F40 		vmovdqu	ymm0, YMMWORD PTR 32[rax]	# MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 32B], M
 2887      20
 2888              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 2889              		.loc 1 358 19 view .LVU917
 2890 11a9 C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp496, tmp1004, MEM[base: vectp.304_373, index: ivt
 2890      20
 2891              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 2892              		.loc 1 359 19 view .LVU918
 2893 11ae C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp492, MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0B],
 2894 11b2 C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp510, MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0B]
 2895 11b6 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_390, tmp492,
 2895      C5D8
 2896 11bc C4C1796E 		vmovd	xmm3, r13d	# _12,
 2896      DD
 2897 11c1 C5F96EE2 		vmovd	xmm4, edx	# _18,
 2898              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 2899              		.loc 1 358 19 view .LVU919
 2900 11c5 C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp495, tmp496,
 2900      F2D8
 2901              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 2902              		.loc 1 359 19 view .LVU920
 2903 11cb C443FD00 		vpermq	ymm15, ymm14, 216	# tmp509, tmp510,
 2903      FED8
 2904 11d1 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# _215, %sfp
 2904      30
 2905              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
GAS LISTING /tmp/ccIyIA9Z.s 			page 84


 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 2906              		.loc 1 360 44 view .LVU921
 2907 11d6 C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.311, tmp495, _12
 2908              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 2909              		.loc 1 360 65 view .LVU922
 2910 11da C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.312, vect_perm_even_390, _18
 2911              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 2912              		.loc 1 362 65 view .LVU923
 2913 11de C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.315, tmp509, _18
 2914              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 2915              		.loc 1 362 44 view .LVU924
 2916 11e2 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.314, vect_perm_even_390, _12
 2917              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 2918              		.loc 1 360 54 view .LVU925
 2919 11e6 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.313, vect__98.311, vect__100.312
 2919      DA
 2920              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 2921              		.loc 1 362 54 view .LVU926
 2922 11eb C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.316, vect__110.315, vect__109.314
 2923 11ef 49C1EE03 		shr	r14, 3	# _215,
 2924              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 2925              		.loc 1 360 33 view .LVU927
 2926 11f3 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp506, vect__104.313
 2926      DD01
 2927              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 2928              		.loc 1 362 33 view .LVU928
 2929 11f9 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp520, vect__114.316
 2929      EF01
 2930 11ff 4D8D56FF 		lea	r10, -1[r14]	# tmp631,
 2931              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 2932              		.loc 1 360 33 view .LVU929
 2933 1203 C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _396, index: ivtmp.359_533, offset: 0B], tmp502
 2933      1C0B
 2934 1209 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _396, index: ivtmp.359_533, offset: 32B], tmp506
 2934      6C0B20
 2935 1210 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _396, index: ivtmp.359_533, offset: 16B], tmp50
 2935      5C0B1001 
 2936 1218 C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _396, index: ivtmp.359_533, offset: 48B], tmp50
 2936      6C0B3001 
 2937 1220 4E8D3C0B 		lea	r15, [rbx+r9]	# _396,
 2938 1224 4A8D3C03 		lea	rdi, [rbx+r8]	# _416,
 2939              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 2940              		.loc 1 362 33 view .LVU930
 2941 1228 C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _416, index: ivtmp.359_533, offset: 0B], tmp516
 2941      2C03
 2942 122e C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _416, index: ivtmp.359_533, offset: 32B], tmp520
 2942      7C0320
 2943 1235 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _416, index: ivtmp.359_533, offset: 16B], tmp516
GAS LISTING /tmp/ccIyIA9Z.s 			page 85


 2943      6C031001 
 2944 123d C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _416, index: ivtmp.359_533, offset: 48B], tmp520
 2944      7C033001 
 2945 1245 4183E201 		and	r10d, 1	# tmp633,
 2946              	.LVL131:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 2947              		.loc 1 358 9 is_stmt 1 view .LVU931
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 2948              		.loc 1 359 9 view .LVU932
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 2949              		.loc 1 360 9 view .LVU933
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 2950              		.loc 1 361 9 view .LVU934
 362:sieve_extend.c ****         copy_word += 2;
 2951              		.loc 1 362 9 view .LVU935
 363:sieve_extend.c ****         source_word += 2;
 2952              		.loc 1 363 9 view .LVU936
 364:sieve_extend.c ****         distance += 2;
 2953              		.loc 1 364 9 view .LVU937
 365:sieve_extend.c ****     }
 2954              		.loc 1 365 9 view .LVU938
 365:sieve_extend.c ****     }
 2955              		.loc 1 365 9 is_stmt 0 view .LVU939
 2956              	.LBE447:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 2957              		.loc 1 357 11 is_stmt 1 view .LVU940
 2958 1249 41B90100 		mov	r9d, 1	# ivtmp.357,
 2958      0000
 2959 124f 41B84000 		mov	r8d, 64	# ivtmp.359,
 2959      0000
 2960 1255 4983FE01 		cmp	r14, 1	# bnd.297,
 2961 1259 0F86ED01 		jbe	.L379	#,
 2961      0000
 2962 125f 4D85D2   		test	r10, r10	# tmp633
 2963 1262 0F84A800 		je	.L247	#,
 2963      0000
 2964              	.LBB448:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 2965              		.loc 1 358 9 view .LVU941
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 2966              		.loc 1 359 9 view .LVU942
 2967              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 2968              		.loc 1 358 19 is_stmt 0 view .LVU943
 2969 1268 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1097, MEM[base: vectp.304_373, index: ivtmp.359_533, offset
 2969      40
 2970              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 2971              		.loc 1 359 19 view .LVU944
 2972 126d C57E6F48 		vmovdqu	ymm9, YMMWORD PTR 64[rax]	# MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0B], ME
 2972      40
 2973 1272 C57E6F50 		vmovdqu	ymm10, YMMWORD PTR 96[rax]	# MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 32B], 
 2973      60
 2974              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 2975              		.loc 1 358 19 view .LVU945
 2976 1277 C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp899, tmp1097, MEM[base: vectp.304_373, index: iv
GAS LISTING /tmp/ccIyIA9Z.s 			page 86


 2976      60
 2977              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 2978              		.loc 1 359 19 view .LVU946
 2979 127c C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp895, MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0B]
 2979      D2
 2980 1281 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp910, MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0B]
 2980      C2
 2981 1286 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_390, tmp895,
 2981      DAD8
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 2982              		.loc 1 360 9 is_stmt 1 view .LVU947
 2983              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 2984              		.loc 1 358 19 is_stmt 0 view .LVU948
 2985 128c C443FD00 		vpermq	ymm13, ymm12, 216	# tmp900, tmp899,
 2985      ECD8
 2986              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 2987              		.loc 1 359 19 view .LVU949
 2988 1292 C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp911, tmp910,
 2988      F8D8
 2989              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 2990              		.loc 1 360 44 view .LVU950
 2991 1298 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.311, tmp900, _12
 2992              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 2993              		.loc 1 360 65 view .LVU951
 2994 129c C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.312, vect_perm_even_390, _18
 2995              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 2996              		.loc 1 362 65 view .LVU952
 2997 12a0 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.315, tmp911, _18
 2998              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 2999              		.loc 1 362 44 view .LVU953
 3000 12a4 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.314, vect_perm_even_390, _12
 3001              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3002              		.loc 1 360 54 view .LVU954
 3003 12a8 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.313, vect__98.311, vect__100.312
 3003      CF
 3004              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3005              		.loc 1 362 54 view .LVU955
 3006 12ad C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.316, vect__110.315, vect__109.314
 3006      D2
 3007              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3008              		.loc 1 360 33 view .LVU956
 3009 12b2 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp907, vect__104.313
 3009      CD01
 3010              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3011              		.loc 1 362 33 view .LVU957
 3012 12b8 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp918, vect__114.316
GAS LISTING /tmp/ccIyIA9Z.s 			page 87


 3012      D601
 3013              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3014              		.loc 1 360 33 view .LVU958
 3015 12be C4C179D6 		vmovq	QWORD PTR 64[r15], xmm1	# MEM[base: _396, index: ivtmp.359_533, offset: 0B], tmp904
 3015      4F40
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3016              		.loc 1 360 33 view .LVU959
 3017 12c4 C4C179D6 		vmovq	QWORD PTR 96[r15], xmm5	# MEM[base: _396, index: ivtmp.359_533, offset: 32B], tmp907
 3017      6F60
 3018 12ca C4C3F916 		vpextrq	QWORD PTR 80[r15], xmm1, 1	# MEM[base: _396, index: ivtmp.359_533, offset: 16B], tmp904
 3018      4F5001
 3019 12d1 C4C3F916 		vpextrq	QWORD PTR 112[r15], xmm5, 1	# MEM[base: _396, index: ivtmp.359_533, offset: 48B], tmp907
 3019      6F7001
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3020              		.loc 1 361 9 is_stmt 1 view .LVU960
 362:sieve_extend.c ****         copy_word += 2;
 3021              		.loc 1 362 9 view .LVU961
 3022 12d8 41B90200 		mov	r9d, 2	# ivtmp.357,
 3022      0000
 3023              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3024              		.loc 1 362 33 is_stmt 0 view .LVU962
 3025 12de C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _416, index: ivtmp.359_533, offset: 0B], tmp915
 3025      40
 362:sieve_extend.c ****         copy_word += 2;
 3026              		.loc 1 362 33 view .LVU963
 3027 12e3 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _416, index: ivtmp.359_533, offset: 32B], tmp918
 3027      60
 3028 12e8 41B88000 		mov	r8d, 128	# ivtmp.359,
 3028      0000
 3029 12ee C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _416, index: ivtmp.359_533, offset: 16B], tmp915
 3029      575001
 3030 12f5 C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _416, index: ivtmp.359_533, offset: 48B], tmp918
 3030      777001
 363:sieve_extend.c ****         source_word += 2;
 3031              		.loc 1 363 9 is_stmt 1 view .LVU964
 364:sieve_extend.c ****         distance += 2;
 3032              		.loc 1 364 9 view .LVU965
 365:sieve_extend.c ****     }
 3033              		.loc 1 365 9 view .LVU966
 365:sieve_extend.c ****     }
 3034              		.loc 1 365 9 is_stmt 0 view .LVU967
 3035              	.LBE448:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3036              		.loc 1 357 11 is_stmt 1 view .LVU968
 3037 12fc 4983FE02 		cmp	r14, 2	# bnd.297,
 3038 1300 0F864601 		jbe	.L379	#,
 3038      0000
 3039 1306 662E0F1F 		.p2align 4,,10
 3039      84000000 
 3039      0000
 3040              		.p2align 3
 3041              	.L247:
 3042              	.LBB449:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3043              		.loc 1 358 9 view .LVU969
GAS LISTING /tmp/ccIyIA9Z.s 			page 88


 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3044              		.loc 1 359 9 view .LVU970
 3045              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3046              		.loc 1 358 19 is_stmt 0 view .LVU971
 3047 1310 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1005, MEM[base: vectp.304_373, index: ivtmp.359_533, offse
 3047      0C01
 3048              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3049              		.loc 1 359 19 view .LVU972
 3050 1316 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rax+r8]	# MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0B], 
 3050      2400
 3051 131c C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rax+r8]	# MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 32B
 3051      6C0020
 3052              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3053              		.loc 1 358 19 view .LVU973
 3054 1323 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp644, tmp1005, MEM[base: vectp.304_373, index: 
 3054      440120
 3055              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3056              		.loc 1 359 19 view .LVU974
 3057 132a C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp640, MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0
 3057      F5
 3058 132f C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp655, MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0
 3058      DD
 3059 1334 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_390, tmp640,
 3059      FED8
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3060              		.loc 1 360 9 is_stmt 1 view .LVU975
 3061              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3062              		.loc 1 358 19 is_stmt 0 view .LVU976
 3063 133a C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp645, tmp644,
 3063      E8D8
 3064              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3065              		.loc 1 359 19 view .LVU977
 3066 1340 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp656, tmp655,
 3066      F3D8
 3067              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3068              		.loc 1 360 44 view .LVU978
 3069 1346 C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.311, tmp645, _12
 3070              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3071              		.loc 1 360 65 view .LVU979
 3072 134a C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.312, vect_perm_even_390, _18
 3073              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3074              		.loc 1 362 65 view .LVU980
 3075 134e C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.315, tmp656, _18
 3076              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3077              		.loc 1 362 44 view .LVU981
 3078 1352 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.314, vect_perm_even_390, _12
 3079              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
GAS LISTING /tmp/ccIyIA9Z.s 			page 89


 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3080              		.loc 1 360 54 view .LVU982
 3081 1356 C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.313, vect__98.311, vect__100.312
 3082              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3083              		.loc 1 362 54 view .LVU983
 3084 135a C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.316, vect__110.315, vect__109.314
 3084      F5
 3085              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3086              		.loc 1 360 33 view .LVU984
 3087 135f C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp652, vect__104.313
 3087      CA01
 3088              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3089              		.loc 1 362 33 view .LVU985
 3090 1365 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp663, vect__114.316
 3090      F101
 3091              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3092              		.loc 1 360 33 view .LVU986
 3093 136b C40179D6 		vmovq	QWORD PTR [r15+r8], xmm9	# MEM[base: _396, index: ivtmp.359_533, offset: 0B], tmp649
 3093      0C07
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3094              		.loc 1 360 33 view .LVU987
 3095 1371 C48179D6 		vmovq	QWORD PTR 32[r15+r8], xmm2	# MEM[base: _396, index: ivtmp.359_533, offset: 32B], tmp652
 3095      540720
 3096 1378 C403F916 		vpextrq	QWORD PTR 16[r15+r8], xmm9, 1	# MEM[base: _396, index: ivtmp.359_533, offset: 16B], tmp649
 3096      4C071001 
 3097 1380 C483F916 		vpextrq	QWORD PTR 48[r15+r8], xmm2, 1	# MEM[base: _396, index: ivtmp.359_533, offset: 48B], tmp652
 3097      54073001 
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3098              		.loc 1 361 9 is_stmt 1 view .LVU988
 362:sieve_extend.c ****         copy_word += 2;
 3099              		.loc 1 362 9 view .LVU989
 3100              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3101              		.loc 1 362 33 is_stmt 0 view .LVU990
 3102 1388 C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _416, index: ivtmp.359_533, offset: 0B], tmp660
 3102      3407
 362:sieve_extend.c ****         copy_word += 2;
 3103              		.loc 1 362 33 view .LVU991
 3104 138e C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _416, index: ivtmp.359_533, offset: 32B], tmp663
 3104      4C0720
 3105 1395 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _416, index: ivtmp.359_533, offset: 16B], tmp66
 3105      74071001 
 3106 139d C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _416, index: ivtmp.359_533, offset: 48B], tmp663
 3106      4C073001 
 363:sieve_extend.c ****         source_word += 2;
 3107              		.loc 1 363 9 is_stmt 1 view .LVU992
 364:sieve_extend.c ****         distance += 2;
 3108              		.loc 1 364 9 view .LVU993
 365:sieve_extend.c ****     }
 3109              		.loc 1 365 9 view .LVU994
 365:sieve_extend.c ****     }
 3110              		.loc 1 365 9 is_stmt 0 view .LVU995
 3111              	.LBE449:
GAS LISTING /tmp/ccIyIA9Z.s 			page 90


 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3112              		.loc 1 357 11 is_stmt 1 view .LVU996
 3113              	.LBB450:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3114              		.loc 1 358 9 view .LVU997
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3115              		.loc 1 359 9 view .LVU998
 3116              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3117              		.loc 1 358 19 is_stmt 0 view .LVU999
 3118 13a5 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1006, MEM[base: vectp.304_373, index: ivtmp.359_533, off
 3118      7C0140
 3119              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3120              		.loc 1 359 19 view .LVU1000
 3121 13ac C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rax+r8]	# MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0B],
 3121      440040
 3122 13b3 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rax+r8]	# MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 32B]
 3122      440060
 3123              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3124              		.loc 1 358 19 view .LVU1001
 3125 13ba C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp674, tmp1006, MEM[base: vectp.304_373, index:
 3125      540160
 3126              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3127              		.loc 1 359 19 view .LVU1002
 3128 13c1 C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp670, MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0B],
 3129 13c5 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp685, MEM[base: vectp.308_382, index: ivtmp.359_533, offset: 0B]
 3130 13c9 C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_390, tmp670,
 3130      CDD8
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3131              		.loc 1 360 9 is_stmt 1 view .LVU1003
 3132              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3133              		.loc 1 358 19 is_stmt 0 view .LVU1004
 3134 13cf C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp675, tmp674,
 3134      D2D8
 3135              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3136              		.loc 1 359 19 view .LVU1005
 3137 13d5 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp686, tmp685,
 3137      CFD8
 3138              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3139              		.loc 1 360 44 view .LVU1006
 3140 13db C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.311, tmp675, _12
 3141              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3142              		.loc 1 360 65 view .LVU1007
 3143 13df C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.312, vect_perm_even_390, _18
 3144              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3145              		.loc 1 362 65 view .LVU1008
 3146 13e3 C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.315, tmp686, _18
 3147              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccIyIA9Z.s 			page 91


 3148              		.loc 1 362 44 view .LVU1009
 3149 13e7 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.314, vect_perm_even_390, _12
 3150              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3151              		.loc 1 360 54 view .LVU1010
 3152 13eb C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.313, vect__98.311, vect__100.312
 3153              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3154              		.loc 1 362 54 view .LVU1011
 3155 13ef C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.316, vect__110.315, vect__109.314
 3156              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3157              		.loc 1 360 33 view .LVU1012
 3158 13f3 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp682, vect__104.313
 3158      E601
 3159              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3160              		.loc 1 362 33 view .LVU1013
 3161 13f9 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp693, vect__114.316
 3161      EF01
 3162 13ff 4983C102 		add	r9, 2	# ivtmp.357,
 3163              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3164              		.loc 1 360 33 view .LVU1014
 3165 1403 C40179D6 		vmovq	QWORD PTR 64[r15+r8], xmm12	# MEM[base: _396, index: ivtmp.359_533, offset: 0B], tmp679
 3165      640740
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3166              		.loc 1 360 33 view .LVU1015
 3167 140a C40179D6 		vmovq	QWORD PTR 96[r15+r8], xmm14	# MEM[base: _396, index: ivtmp.359_533, offset: 32B], tmp682
 3167      740760
 3168 1411 C403F916 		vpextrq	QWORD PTR 80[r15+r8], xmm12, 1	# MEM[base: _396, index: ivtmp.359_533, offset: 16B], tmp67
 3168      64075001 
 3169 1419 C403F916 		vpextrq	QWORD PTR 112[r15+r8], xmm14, 1	# MEM[base: _396, index: ivtmp.359_533, offset: 48B], tmp6
 3169      74077001 
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3170              		.loc 1 361 9 is_stmt 1 view .LVU1016
 362:sieve_extend.c ****         copy_word += 2;
 3171              		.loc 1 362 9 view .LVU1017
 3172              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3173              		.loc 1 362 33 is_stmt 0 view .LVU1018
 3174 1421 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _416, index: ivtmp.359_533, offset: 0B], tmp690
 3174      6C0740
 362:sieve_extend.c ****         copy_word += 2;
 3175              		.loc 1 362 33 view .LVU1019
 3176 1428 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _416, index: ivtmp.359_533, offset: 32B], tmp693
 3176      7C0760
 3177 142f C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _416, index: ivtmp.359_533, offset: 16B], tmp690
 3177      6C075001 
 3178 1437 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _416, index: ivtmp.359_533, offset: 48B], tmp69
 3178      7C077001 
 363:sieve_extend.c ****         source_word += 2;
 3179              		.loc 1 363 9 is_stmt 1 view .LVU1020
 364:sieve_extend.c ****         distance += 2;
 3180              		.loc 1 364 9 view .LVU1021
 365:sieve_extend.c ****     }
 3181              		.loc 1 365 9 view .LVU1022
GAS LISTING /tmp/ccIyIA9Z.s 			page 92


 365:sieve_extend.c ****     }
 3182              		.loc 1 365 9 is_stmt 0 view .LVU1023
 3183              	.LBE450:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3184              		.loc 1 357 11 is_stmt 1 view .LVU1024
 3185 143f 4983E880 		sub	r8, -128	# ivtmp.359,
 3186 1443 4D39CE   		cmp	r14, r9	# bnd.297, ivtmp.357
 3187 1446 0F87C4FE 		ja	.L247	#,
 3187      FFFF
 3188              	.L379:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3189              		.loc 1 357 11 is_stmt 0 view .LVU1025
 3190 144c 49C1E603 		sal	r14, 3	# _366,
 3191 1450 4B8D0C33 		lea	rcx, [r11+r14]	# tmp.299,
 3192              	.LBB451:
 3193              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3194              		.loc 1 358 39 view .LVU1026
 3195 1454 4C8D3CCD 		lea	r15, 0[0+rcx*8]	# _55,
 3195      00000000 
 3196              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3197              		.loc 1 359 19 view .LVU1027
 3198 145c 4A8B7C3B 		mov	rdi, QWORD PTR 8[rbx+r15]	# source1, *_156
 3198      08
 3199 1461 4B8D0434 		lea	rax, [r12+r14]	# tmp.300,
 3200              	.LVL132:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3201              		.loc 1 358 9 is_stmt 1 view .LVU1028
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3202              		.loc 1 359 9 view .LVU1029
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3203              		.loc 1 360 9 view .LVU1030
 3204              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3205              		.loc 1 360 44 is_stmt 0 view .LVU1031
 3206 1465 C4E293F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r13	# tmp524, *_56, shift
 3206      34CB
 3207              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3208              		.loc 1 360 65 view .LVU1032
 3209 146b C462E9F7 		shlx	r10, rdi, rdx	# tmp526, source1, shift_flipped
 3209      D7
 3210              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3211              		.loc 1 360 54 view .LVU1033
 3212 1470 4C09D6   		or	rsi, r10	# tmp527, tmp526
 3213 1473 488934C3 		mov	QWORD PTR [rbx+rax*8], rsi	# *_79, tmp527
 3214              	.LVL133:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3215              		.loc 1 361 9 is_stmt 1 view .LVU1034
 3216              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3217              		.loc 1 362 44 is_stmt 0 view .LVU1035
 3218 1477 C4E293F7 		shrx	rdi, rdi, r13	# tmp530, source1, shift
 3218      FF
 3219              	.LVL134:
GAS LISTING /tmp/ccIyIA9Z.s 			page 93


 3220              	# sieve_extend.c:361:         bitword_t source2 = bitstorage[source_word+2];
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3221              		.loc 1 361 39 view .LVU1036
 3222 147c 4C8D4902 		lea	r9, 2[rcx]	# _439,
 3223              	.LVL135:
 362:sieve_extend.c ****         copy_word += 2;
 3224              		.loc 1 362 9 is_stmt 1 view .LVU1037
 3225              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3226              		.loc 1 362 65 is_stmt 0 view .LVU1038
 3227 1480 4E8B443B 		mov	r8, QWORD PTR 16[rbx+r15]	# *_441, *_441
 3227      10
 3228              	# sieve_extend.c:365:         distance += 2;
 365:sieve_extend.c ****     }
 3229              		.loc 1 365 18 view .LVU1039
 3230 1485 4D8D5602 		lea	r10, 2[r14]	# distance,
 3231              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3232              		.loc 1 362 65 view .LVU1040
 3233 1489 C442E9F7 		shlx	r15, r8, rdx	# tmp528, *_441, shift_flipped
 3233      F8
 3234              	.LVL136:
 3235              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3236              		.loc 1 362 54 view .LVU1041
 3237 148e 4C09FF   		or	rdi, r15	# tmp531, tmp528
 3238              	.LBE451:
 3239              	# sieve_extend.c:357:     while (copy_word < fast_loop_stop_word) {
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3240              		.loc 1 357 11 view .LVU1042
 3241 1491 4C8B7C24 		mov	r15, QWORD PTR 40[rsp]	# fast_loop_stop_word, %sfp
 3241      28
 3242              	.LBB452:
 3243              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 3244              		.loc 1 363 19 view .LVU1043
 3245 1496 4C8D4002 		lea	r8, 2[rax]	# copy_word,
 3246              	.LVL137:
 3247              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3248              		.loc 1 362 54 view .LVU1044
 3249 149a 48897CC3 		mov	QWORD PTR 8[rbx+rax*8], rdi	# *_447, tmp531
 3249      08
 3250              	.LVL138:
 363:sieve_extend.c ****         source_word += 2;
 3251              		.loc 1 363 9 is_stmt 1 view .LVU1045
 364:sieve_extend.c ****         distance += 2;
 3252              		.loc 1 364 9 view .LVU1046
 365:sieve_extend.c ****     }
 3253              		.loc 1 365 9 view .LVU1047
 365:sieve_extend.c ****     }
 3254              		.loc 1 365 9 is_stmt 0 view .LVU1048
 3255              	.LBE452:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3256              		.loc 1 357 11 is_stmt 1 view .LVU1049
 3257 149f 4D39C7   		cmp	r15, r8	# fast_loop_stop_word, copy_word
 3258 14a2 0F86D500 		jbe	.L250	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 94


 3258      0000
 3259              	.LBB453:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3260              		.loc 1 358 9 view .LVU1050
 3261              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3262              		.loc 1 358 39 is_stmt 0 view .LVU1051
 3263 14a8 4E8D14CD 		lea	r10, 0[0+r9*8]	# _456,
 3263      00000000 
 3264              	.LVL139:
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3265              		.loc 1 359 9 is_stmt 1 view .LVU1052
 3266              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3267              		.loc 1 359 19 is_stmt 0 view .LVU1053
 3268 14b0 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_461
 3268      08
 3269              	.LVL140:
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3270              		.loc 1 360 9 is_stmt 1 view .LVU1054
 3271              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3272              		.loc 1 360 44 is_stmt 0 view .LVU1055
 3273 14b5 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_457, *_457
 3274              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3275              		.loc 1 360 65 view .LVU1056
 3276 14b9 C462E9F7 		shlx	r9, rdi, rdx	# tmp534, source1, shift_flipped
 3276      CF
 3277              	.LVL141:
 3278              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3279              		.loc 1 360 44 view .LVU1057
 3280 14be C4E293F7 		shrx	rsi, rsi, r13	# tmp532, *_457, shift
 3280      F6
 3281              	.LVL142:
 3282              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3283              		.loc 1 360 54 view .LVU1058
 3284 14c3 4C09CE   		or	rsi, r9	# tmp535, tmp534
 3285 14c6 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_466, tmp535
 3286              	.LVL143:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3287              		.loc 1 361 9 is_stmt 1 view .LVU1059
 3288              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3289              		.loc 1 362 44 is_stmt 0 view .LVU1060
 3290 14ca C4E293F7 		shrx	rdi, rdi, r13	# tmp538, source1, shift
 3290      FF
 3291              	.LVL144:
 3292              	# sieve_extend.c:361:         bitword_t source2 = bitstorage[source_word+2];
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3293              		.loc 1 361 39 view .LVU1061
 3294 14cf 4C8D4904 		lea	r9, 4[rcx]	# _469,
 3295              	.LVL145:
 362:sieve_extend.c ****         copy_word += 2;
 3296              		.loc 1 362 9 is_stmt 1 view .LVU1062
GAS LISTING /tmp/ccIyIA9Z.s 			page 95


 3297              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3298              		.loc 1 362 65 is_stmt 0 view .LVU1063
 3299 14d3 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_471, *_471
 3299      10
 3300              	.LVL146:
 362:sieve_extend.c ****         copy_word += 2;
 3301              		.loc 1 362 65 view .LVU1064
 3302 14d8 C4C2E9F7 		shlx	rsi, r10, rdx	# tmp536, *_471, shift_flipped
 3302      F2
 3303              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3304              		.loc 1 362 54 view .LVU1065
 3305 14dd 4809F7   		or	rdi, rsi	# tmp539, tmp536
 3306 14e0 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_477, tmp539
 3306      08
 363:sieve_extend.c ****         source_word += 2;
 3307              		.loc 1 363 9 is_stmt 1 view .LVU1066
 3308              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 3309              		.loc 1 363 19 is_stmt 0 view .LVU1067
 3310 14e5 4C8D4004 		lea	r8, 4[rax]	# copy_word,
 3311              	.LVL147:
 364:sieve_extend.c ****         distance += 2;
 3312              		.loc 1 364 9 is_stmt 1 view .LVU1068
 365:sieve_extend.c ****     }
 3313              		.loc 1 365 9 view .LVU1069
 3314              	# sieve_extend.c:365:         distance += 2;
 365:sieve_extend.c ****     }
 3315              		.loc 1 365 18 is_stmt 0 view .LVU1070
 3316 14e9 4D8D5604 		lea	r10, 4[r14]	# distance,
 3317              	.LVL148:
 365:sieve_extend.c ****     }
 3318              		.loc 1 365 18 view .LVU1071
 3319              	.LBE453:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3320              		.loc 1 357 11 is_stmt 1 view .LVU1072
 3321 14ed 4D39C7   		cmp	r15, r8	# fast_loop_stop_word, copy_word
 3322 14f0 0F868700 		jbe	.L250	#,
 3322      0000
 3323              	.LBB454:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3324              		.loc 1 358 9 view .LVU1073
 3325              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3326              		.loc 1 358 39 is_stmt 0 view .LVU1074
 3327 14f6 4E8D14CD 		lea	r10, 0[0+r9*8]	# _486,
 3327      00000000 
 3328              	.LVL149:
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3329              		.loc 1 359 9 is_stmt 1 view .LVU1075
 3330              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3331              		.loc 1 359 19 is_stmt 0 view .LVU1076
 3332 14fe 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_491
 3332      08
 3333              	.LVL150:
GAS LISTING /tmp/ccIyIA9Z.s 			page 96


 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3334              		.loc 1 360 9 is_stmt 1 view .LVU1077
 3335              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3336              		.loc 1 360 44 is_stmt 0 view .LVU1078
 3337 1503 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_487, *_487
 3338              	.LVL151:
 3339              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 3340              		.loc 1 363 19 view .LVU1079
 3341 1507 4883C006 		add	rax, 6	# copy_word,
 3342              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3343              		.loc 1 360 44 view .LVU1080
 3344 150b C4C293F7 		shrx	rsi, r9, r13	# tmp540, *_487, shift
 3344      F1
 3345              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3346              		.loc 1 360 65 view .LVU1081
 3347 1510 C462E9F7 		shlx	r9, rdi, rdx	# tmp542, source1, shift_flipped
 3347      CF
 3348              	.LVL152:
 3349              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3350              		.loc 1 360 54 view .LVU1082
 3351 1515 4C09CE   		or	rsi, r9	# tmp543, tmp542
 3352 1518 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_496, tmp543
 3353              	.LVL153:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3354              		.loc 1 361 9 is_stmt 1 view .LVU1083
 3355              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3356              		.loc 1 362 44 is_stmt 0 view .LVU1084
 3357 151c C4E293F7 		shrx	rdi, rdi, r13	# tmp546, source1, shift
 3357      FF
 3358              	.LVL154:
 3359              	# sieve_extend.c:361:         bitword_t source2 = bitstorage[source_word+2];
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3360              		.loc 1 361 39 view .LVU1085
 3361 1521 4883C106 		add	rcx, 6	# _499,
 3362              	.LVL155:
 362:sieve_extend.c ****         copy_word += 2;
 3363              		.loc 1 362 9 is_stmt 1 view .LVU1086
 3364              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3365              		.loc 1 362 65 is_stmt 0 view .LVU1087
 3366 1525 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_501, *_501
 3366      10
 3367              	.LVL156:
 362:sieve_extend.c ****         copy_word += 2;
 3368              		.loc 1 362 65 view .LVU1088
 3369 152a C4C2E9F7 		shlx	rsi, r10, rdx	# tmp544, *_501, shift_flipped
 3369      F2
 3370              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3371              		.loc 1 362 54 view .LVU1089
 3372 152f 4809F7   		or	rdi, rsi	# tmp547, tmp544
GAS LISTING /tmp/ccIyIA9Z.s 			page 97


 3373 1532 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_507, tmp547
 3373      08
 363:sieve_extend.c ****         source_word += 2;
 3374              		.loc 1 363 9 is_stmt 1 view .LVU1090
 3375              	.LVL157:
 364:sieve_extend.c ****         distance += 2;
 3376              		.loc 1 364 9 view .LVU1091
 365:sieve_extend.c ****     }
 3377              		.loc 1 365 9 view .LVU1092
 3378              	# sieve_extend.c:365:         distance += 2;
 365:sieve_extend.c ****     }
 3379              		.loc 1 365 18 is_stmt 0 view .LVU1093
 3380 1537 4D8D5606 		lea	r10, 6[r14]	# distance,
 3381              	.LVL158:
 365:sieve_extend.c ****     }
 3382              		.loc 1 365 18 view .LVU1094
 3383              	.LBE454:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3384              		.loc 1 357 11 is_stmt 1 view .LVU1095
 3385 153b 4939C7   		cmp	r15, rax	# fast_loop_stop_word, copy_word
 3386 153e 763D     		jbe	.L250	#,
 3387              	.LBB455:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3388              		.loc 1 358 9 view .LVU1096
 3389              	# sieve_extend.c:358:         bitword_t source0 = bitstorage[source_word  ];
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 3390              		.loc 1 358 39 is_stmt 0 view .LVU1097
 3391 1540 4C8D3CCD 		lea	r15, 0[0+rcx*8]	# _335,
 3391      00000000 
 3392              	.LVL159:
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3393              		.loc 1 359 9 is_stmt 1 view .LVU1098
 3394              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 3395              		.loc 1 359 19 is_stmt 0 view .LVU1099
 3396 1548 4E8B4C3B 		mov	r9, QWORD PTR 8[rbx+r15]	# source1, *_340
 3396      08
 3397              	.LVL160:
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3398              		.loc 1 360 9 is_stmt 1 view .LVU1100
 3399              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3400              		.loc 1 360 44 is_stmt 0 view .LVU1101
 3401 154d 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_336, *_336
 3402              	.LVL161:
 3403              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3404              		.loc 1 360 65 view .LVU1102
 3405 1551 C442E9F7 		shlx	r8, r9, rdx	# tmp550, source1, shift_flipped
 3405      C1
 3406              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3407              		.loc 1 360 44 view .LVU1103
 3408 1556 C46293F7 		shrx	r10, rcx, r13	# tmp548, *_336, shift
 3408      D1
 3409              	.LVL162:
 3410              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
GAS LISTING /tmp/ccIyIA9Z.s 			page 98


 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 3411              		.loc 1 360 54 view .LVU1104
 3412 155b 4D09C2   		or	r10, r8	# tmp551, tmp550
 3413 155e 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_345, tmp551
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 3414              		.loc 1 361 9 is_stmt 1 view .LVU1105
 3415              	.LVL163:
 362:sieve_extend.c ****         copy_word += 2;
 3416              		.loc 1 362 9 view .LVU1106
 3417              	# sieve_extend.c:365:         distance += 2;
 365:sieve_extend.c ****     }
 3418              		.loc 1 365 18 is_stmt 0 view .LVU1107
 3419 1562 4D8D5608 		lea	r10, 8[r14]	# distance,
 3420              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3421              		.loc 1 362 65 view .LVU1108
 3422 1566 4A8B743B 		mov	rsi, QWORD PTR 16[rbx+r15]	# *_350, *_350
 3422      10
 3423              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3424              		.loc 1 362 44 view .LVU1109
 3425 156b C44293F7 		shrx	r15, r9, r13	# tmp554, source1, shift
 3425      F9
 3426              	.LVL164:
 3427              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3428              		.loc 1 362 65 view .LVU1110
 3429 1570 C4E2E9F7 		shlx	rdi, rsi, rdx	# tmp552, *_350, shift_flipped
 3429      FE
 3430              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 3431              		.loc 1 362 54 view .LVU1111
 3432 1575 4909FF   		or	r15, rdi	# tmp555, tmp552
 3433 1578 4C897CC3 		mov	QWORD PTR 8[rbx+rax*8], r15	# *_356, tmp555
 3433      08
 363:sieve_extend.c ****         source_word += 2;
 3434              		.loc 1 363 9 is_stmt 1 view .LVU1112
 364:sieve_extend.c ****         distance += 2;
 3435              		.loc 1 364 9 view .LVU1113
 3436              	.LVL165:
 365:sieve_extend.c ****     }
 3437              		.loc 1 365 9 view .LVU1114
 365:sieve_extend.c ****     }
 3438              		.loc 1 365 9 is_stmt 0 view .LVU1115
 3439              	.LBE455:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3440              		.loc 1 357 11 is_stmt 1 view .LVU1116
 3441              	.L250:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 3442              		.loc 1 357 11 is_stmt 0 view .LVU1117
 3443 157d 4D01D3   		add	r11, r10	# tmp.282, distance
 3444 1580 4D01D4   		add	r12, r10	# tmp.283, distance
 3445              	.LVL166:
 3446              	.L245:
 367:sieve_extend.c **** }
 3447              		.loc 1 367 5 is_stmt 1 view .LVU1118
 367:sieve_extend.c **** }
GAS LISTING /tmp/ccIyIA9Z.s 			page 99


 3448              		.loc 1 367 5 is_stmt 0 view .LVU1119
 3449              	.LBE465:
 3450              	.LBE469:
 388:sieve_extend.c ****     copy_word += distance;
 3451              		.loc 1 388 5 is_stmt 1 view .LVU1120
 389:sieve_extend.c **** 
 3452              		.loc 1 389 5 view .LVU1121
 391:sieve_extend.c **** 
 3453              		.loc 1 391 5 view .LVU1122
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3454              		.loc 1 394 11 view .LVU1123
 3455              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3456              		.loc 1 394 5 is_stmt 0 view .LVU1124
 3457 1583 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 3457      50
 3458 1588 4C39E7   		cmp	rdi, r12	# aligned_copy_word, tmp.283
 3459 158b 0F82CF08 		jb	.L263	#,
 3459      0000
 3460 1591 488D4F01 		lea	rcx, 1[rdi]	# tmp.273,
 3461 1595 4989CE   		mov	r14, rcx	# niters.279, tmp.273
 3462 1598 4C29E7   		sub	rdi, r12	# tmp566, tmp.283
 3463 159b 4D29E6   		sub	r14, r12	# niters.279, tmp.283
 3464 159e 4883FF02 		cmp	rdi, 2	# tmp566,
 3465 15a2 0F86B902 		jbe	.L252	#,
 3465      0000
 3466 15a8 4D89F2   		mov	r10, r14	# bnd.280, niters.279
 3467 15ab 49C1EA02 		shr	r10, 2	# bnd.280,
 3468 15af 49C1E205 		sal	r10, 5	# _518,
 3469 15b3 498D72E0 		lea	rsi, -32[r10]	# tmp621,
 3470 15b7 48C1EE05 		shr	rsi, 5	# tmp619,
 3471 15bb 4A8D04DD 		lea	rax, 0[0+r11*8]	# _31,
 3471      00000000 
 3472 15c3 48FFC6   		inc	rsi	# tmp622
 3473 15c6 C5796E54 		vmovd	xmm10, DWORD PTR 64[rsp]	# _12, %sfp
 3473      2440
 3474 15cc C5796E5C 		vmovd	xmm11, DWORD PTR 60[rsp]	# _18, %sfp
 3474      243C
 3475 15d2 4C8D3C03 		lea	r15, [rbx+rax]	# vectp.285,
 3476 15d6 4C8D4403 		lea	r8, 8[rbx+rax]	# vectp.289,
 3476      08
 3477 15db 4E8D0CE3 		lea	r9, [rbx+r12*8]	# vectp.294,
 3478 15df 31FF     		xor	edi, edi	# ivtmp.335
 3479 15e1 83E607   		and	esi, 7	# tmp623,
 3480 15e4 0F841801 		je	.L253	#,
 3480      0000
 3481 15ea 4883FE01 		cmp	rsi, 1	# tmp623,
 3482 15ee 0F84E000 		je	.L338	#,
 3482      0000
 3483 15f4 4883FE02 		cmp	rsi, 2	# tmp623,
 3484 15f8 0F84B200 		je	.L339	#,
 3484      0000
 3485 15fe 4883FE03 		cmp	rsi, 3	# tmp623,
 3486 1602 0F848300 		je	.L340	#,
 3486      0000
 3487 1608 4883FE04 		cmp	rsi, 4	# tmp623,
 3488 160c 7458     		je	.L341	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 100


 3489 160e 4883FE05 		cmp	rsi, 5	# tmp623,
 3490 1612 742E     		je	.L342	#,
 3491 1614 4883FE06 		cmp	rsi, 6	# tmp623,
 3492 1618 0F852A06 		jne	.L405	#,
 3492      0000
 3493              	.L343:
 395:sieve_extend.c ****     }
 3494              		.loc 1 395 9 is_stmt 1 view .LVU1125
 3495              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3496              		.loc 1 395 60 is_stmt 0 view .LVU1126
 3497 161e C4417E6F 		vmovdqu	ymm13, YMMWORD PTR [r15+rdi]	# tmp1072, MEM[base: vectp.285_32, index: ivtmp.335_516, offs
 3497      2C3F
 3498              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3499              		.loc 1 395 100 view .LVU1127
 3500 1624 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rdi]	# tmp1073, MEM[base: vectp.289_1, index: ivtmp.335_516, offset
 3500      3C38
 3501              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3502              		.loc 1 395 60 view .LVU1128
 3503 162a C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.287, tmp1072, _12
 3503      F2
 3504              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3505              		.loc 1 395 100 view .LVU1129
 3506 162f C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.291, tmp1073, _18
 3506      CB
 3507              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3508              		.loc 1 395 70 view .LVU1130
 3509 1634 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.292, vect__38.287, vect__43.291
 3510              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3511              		.loc 1 395 31 view .LVU1131
 3512 1638 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm8	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B], v
 3512      0439
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3513              		.loc 1 394 43 is_stmt 1 view .LVU1132
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3514              		.loc 1 394 11 view .LVU1133
 3515 163e 4883C720 		add	rdi, 32	# ivtmp.335,
 3516              	.L342:
 395:sieve_extend.c ****     }
 3517              		.loc 1 395 9 view .LVU1134
 3518              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3519              		.loc 1 395 60 is_stmt 0 view .LVU1135
 3520 1642 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR [r15+rdi]	# tmp1074, MEM[base: vectp.285_32, index: ivtmp.335_516, offse
 3520      043F
 3521              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3522              		.loc 1 395 100 view .LVU1136
 3523 1648 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rdi]	# tmp1075, MEM[base: vectp.289_1, index: ivtmp.335_516, offset:
 3523      0C38
 3524              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 101


 3525              		.loc 1 395 60 view .LVU1137
 3526 164e C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.287, tmp1074, _12
 3526      EA
 3527              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3528              		.loc 1 395 100 view .LVU1138
 3529 1653 C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.291, tmp1075, _18
 3529      FB
 3530              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3531              		.loc 1 395 70 view .LVU1139
 3532 1658 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.292, vect__38.287, vect__43.291
 3533              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3534              		.loc 1 395 31 view .LVU1140
 3535 165c C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm3	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B], v
 3535      1C39
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3536              		.loc 1 394 43 is_stmt 1 view .LVU1141
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3537              		.loc 1 394 11 view .LVU1142
 3538 1662 4883C720 		add	rdi, 32	# ivtmp.335,
 3539              	.L341:
 395:sieve_extend.c ****     }
 3540              		.loc 1 395 9 view .LVU1143
 3541              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3542              		.loc 1 395 60 is_stmt 0 view .LVU1144
 3543 1666 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR [r15+rdi]	# tmp1076, MEM[base: vectp.285_32, index: ivtmp.335_516, offse
 3543      143F
 3544              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3545              		.loc 1 395 100 view .LVU1145
 3546 166c C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8+rdi]	# tmp1077, MEM[base: vectp.289_1, index: ivtmp.335_516, offset:
 3546      2438
 3547              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3548              		.loc 1 395 60 view .LVU1146
 3549 1672 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.287, tmp1076, _12
 3549      F2
 3550              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3551              		.loc 1 395 100 view .LVU1147
 3552 1677 C4415DF3 		vpsllq	ymm12, ymm4, xmm11	# vect__43.291, tmp1077, _18
 3552      E3
 3553              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3554              		.loc 1 395 70 view .LVU1148
 3555 167c C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.292, vect__38.287, vect__43.291
 3555      EC
 3556              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3557              		.loc 1 395 31 view .LVU1149
 3558 1681 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm13	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B], 
 3558      2C39
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3559              		.loc 1 394 43 is_stmt 1 view .LVU1150
GAS LISTING /tmp/ccIyIA9Z.s 			page 102


 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3560              		.loc 1 394 11 view .LVU1151
 3561 1687 4883C720 		add	rdi, 32	# ivtmp.335,
 3562              	.L340:
 395:sieve_extend.c ****     }
 3563              		.loc 1 395 9 view .LVU1152
 3564              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3565              		.loc 1 395 60 is_stmt 0 view .LVU1153
 3566 168b C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r15+rdi]	# tmp1078, MEM[base: vectp.285_32, index: ivtmp.335_516, offs
 3566      343F
 3567              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3568              		.loc 1 395 100 view .LVU1154
 3569 1691 C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r8+rdi]	# tmp1079, MEM[base: vectp.289_1, index: ivtmp.335_516, offset:
 3569      0C38
 3570              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3571              		.loc 1 395 60 view .LVU1155
 3572 1697 C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.287, tmp1078, _12
 3572      FA
 3573              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3574              		.loc 1 395 100 view .LVU1156
 3575 169c C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.291, tmp1079, _18
 3575      C3
 3576              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3577              		.loc 1 395 70 view .LVU1157
 3578 16a1 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.292, vect__38.287, vect__43.291
 3578      C0
 3579              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3580              		.loc 1 395 31 view .LVU1158
 3581 16a6 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm0	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B], v
 3581      0439
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3582              		.loc 1 394 43 is_stmt 1 view .LVU1159
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3583              		.loc 1 394 11 view .LVU1160
 3584 16ac 4883C720 		add	rdi, 32	# ivtmp.335,
 3585              	.L339:
 395:sieve_extend.c ****     }
 3586              		.loc 1 395 9 view .LVU1161
 3587              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3588              		.loc 1 395 60 is_stmt 0 view .LVU1162
 3589 16b0 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r15+rdi]	# tmp1080, MEM[base: vectp.285_32, index: ivtmp.335_516, offse
 3589      2C3F
 3590              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3591              		.loc 1 395 100 view .LVU1163
 3592 16b6 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8+rdi]	# tmp1081, MEM[base: vectp.289_1, index: ivtmp.335_516, offset:
 3592      3C38
 3593              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3594              		.loc 1 395 60 view .LVU1164
GAS LISTING /tmp/ccIyIA9Z.s 			page 103


 3595 16bc C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.287, tmp1080, _12
 3595      CA
 3596              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3597              		.loc 1 395 100 view .LVU1165
 3598 16c1 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.291, tmp1081, _18
 3598      DB
 3599              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3600              		.loc 1 395 70 view .LVU1166
 3601 16c6 C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.292, vect__38.287, vect__43.291
 3602              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3603              		.loc 1 395 31 view .LVU1167
 3604 16ca C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm2	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B], v
 3604      1439
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3605              		.loc 1 394 43 is_stmt 1 view .LVU1168
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3606              		.loc 1 394 11 view .LVU1169
 3607 16d0 4883C720 		add	rdi, 32	# ivtmp.335,
 3608              	.L338:
 395:sieve_extend.c ****     }
 3609              		.loc 1 395 9 view .LVU1170
 3610              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3611              		.loc 1 395 60 is_stmt 0 view .LVU1171
 3612 16d4 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r15+rdi]	# tmp1082, MEM[base: vectp.285_32, index: ivtmp.335_516, offse
 3612      343F
 3613              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3614              		.loc 1 395 100 view .LVU1172
 3615 16da C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8+rdi]	# tmp1083, MEM[base: vectp.289_1, index: ivtmp.335_516, offset:
 3615      2438
 3616              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3617              		.loc 1 395 60 view .LVU1173
 3618 16e0 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.287, tmp1082, _12
 3618      E2
 3619              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3620              		.loc 1 395 100 view .LVU1174
 3621 16e5 C4415DF3 		vpsllq	ymm13, ymm4, xmm11	# vect__43.291, tmp1083, _18
 3621      EB
 3622              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3623              		.loc 1 395 70 view .LVU1175
 3624 16ea C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__46.292, vect__38.287, vect__43.291
 3624      F5
 3625              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3626              		.loc 1 395 31 view .LVU1176
 3627 16ef C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm14	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B], 
 3627      3439
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3628              		.loc 1 394 43 is_stmt 1 view .LVU1177
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
GAS LISTING /tmp/ccIyIA9Z.s 			page 104


 3629              		.loc 1 394 11 view .LVU1178
 3630 16f5 4883C720 		add	rdi, 32	# ivtmp.335,
 3631 16f9 4C39D7   		cmp	rdi, r10	# ivtmp.335, _518
 3632 16fc 0F844D01 		je	.L384	#,
 3632      0000
 3633              	.L253:
 395:sieve_extend.c ****     }
 3634              		.loc 1 395 9 discriminator 2 view .LVU1179
 3635              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3636              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1180
 3637 1702 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r15+rdi]	# tmp1023, MEM[base: vectp.285_32, index: ivtmp.335_516, offs
 3637      3C3F
 3638              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3639              		.loc 1 395 100 discriminator 2 view .LVU1181
 3640 1708 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r8+rdi]	# tmp1024, MEM[base: vectp.289_1, index: ivtmp.335_516, offset:
 3640      0438
 3641              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3642              		.loc 1 395 60 discriminator 2 view .LVU1182
 3643 170e C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.287, tmp1023, _12
 3643      CA
 3644              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3645              		.loc 1 395 100 discriminator 2 view .LVU1183
 3646 1713 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.291, tmp1024, _18
 3646      C3
 3647              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3648              		.loc 1 395 70 discriminator 2 view .LVU1184
 3649 1718 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.292, vect__38.287, vect__43.291
 3650              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3651              		.loc 1 395 31 discriminator 2 view .LVU1185
 3652 171c C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdi], ymm5	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B], v
 3652      2C39
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3653              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1186
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3654              		.loc 1 394 11 discriminator 2 view .LVU1187
 395:sieve_extend.c ****     }
 3655              		.loc 1 395 9 discriminator 2 view .LVU1188
 3656              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3657              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1189
 3658 1722 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 32[r15+rdi]	# tmp1025, MEM[base: vectp.285_32, index: ivtmp.335_516, off
 3658      4C3F20
 3659              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3660              		.loc 1 395 100 discriminator 2 view .LVU1190
 3661 1729 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 32[r8+rdi]	# tmp1026, MEM[base: vectp.289_1, index: ivtmp.335_516, offse
 3661      5C3820
 3662              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3663              		.loc 1 395 60 discriminator 2 view .LVU1191
 3664 1730 C4C135D3 		vpsrlq	ymm7, ymm9, xmm10	# vect__38.287, tmp1025, _12
GAS LISTING /tmp/ccIyIA9Z.s 			page 105


 3664      FA
 3665              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3666              		.loc 1 395 100 discriminator 2 view .LVU1192
 3667 1735 C4C165F3 		vpsllq	ymm2, ymm3, xmm11	# vect__43.291, tmp1026, _18
 3667      D3
 3668              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3669              		.loc 1 395 70 discriminator 2 view .LVU1193
 3670 173a C5C5EBF2 		vpor	ymm6, ymm7, ymm2	# vect__46.292, vect__38.287, vect__43.291
 3671              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3672              		.loc 1 395 31 discriminator 2 view .LVU1194
 3673 173e C4C17E7F 		vmovdqu	YMMWORD PTR 32[r9+rdi], ymm6	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B],
 3673      743920
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3674              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1195
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3675              		.loc 1 394 11 discriminator 2 view .LVU1196
 395:sieve_extend.c ****     }
 3676              		.loc 1 395 9 discriminator 2 view .LVU1197
 3677              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3678              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1198
 3679 1745 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 64[r15+rdi]	# tmp1027, MEM[base: vectp.285_32, index: ivtmp.335_516, of
 3679      643F40
 3680              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3681              		.loc 1 395 100 discriminator 2 view .LVU1199
 3682 174c C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR 64[r8+rdi]	# tmp1028, MEM[base: vectp.289_1, index: ivtmp.335_516, offse
 3682      643840
 3683              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3684              		.loc 1 395 60 discriminator 2 view .LVU1200
 3685 1753 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.287, tmp1027, _12
 3685      EA
 3686              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3687              		.loc 1 395 100 discriminator 2 view .LVU1201
 3688 1758 C4415DF3 		vpsllq	ymm14, ymm4, xmm11	# vect__43.291, tmp1028, _18
 3688      F3
 3689              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3690              		.loc 1 395 70 discriminator 2 view .LVU1202
 3691 175d C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__46.292, vect__38.287, vect__43.291
 3691      FE
 3692              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3693              		.loc 1 395 31 discriminator 2 view .LVU1203
 3694 1762 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rdi], ymm15	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B]
 3694      7C3940
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3695              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1204
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3696              		.loc 1 394 11 discriminator 2 view .LVU1205
 395:sieve_extend.c ****     }
 3697              		.loc 1 395 9 discriminator 2 view .LVU1206
GAS LISTING /tmp/ccIyIA9Z.s 			page 106


 3698              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3699              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1207
 3700 1769 C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR 96[r15+rdi]	# tmp1029, MEM[base: vectp.285_32, index: ivtmp.335_516, off
 3700      4C3F60
 3701              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3702              		.loc 1 395 100 discriminator 2 view .LVU1208
 3703 1770 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[r8+rdi]	# tmp1030, MEM[base: vectp.289_1, index: ivtmp.335_516, offse
 3703      443860
 3704              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3705              		.loc 1 395 60 discriminator 2 view .LVU1209
 3706 1777 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.287, tmp1029, _12
 3706      C2
 3707              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3708              		.loc 1 395 100 discriminator 2 view .LVU1210
 3709 177c C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.291, tmp1030, _18
 3709      EB
 3710              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3711              		.loc 1 395 70 discriminator 2 view .LVU1211
 3712 1781 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.292, vect__38.287, vect__43.291
 3713              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3714              		.loc 1 395 31 discriminator 2 view .LVU1212
 3715 1785 C4417E7F 		vmovdqu	YMMWORD PTR 96[r9+rdi], ymm9	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B],
 3715      4C3960
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3716              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1213
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3717              		.loc 1 394 11 discriminator 2 view .LVU1214
 395:sieve_extend.c ****     }
 3718              		.loc 1 395 9 discriminator 2 view .LVU1215
 3719              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3720              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1216
 3721 178c C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[r15+rdi]	# tmp1031, MEM[base: vectp.285_32, index: ivtmp.335_516, of
 3721      BC3F8000 
 3721      0000
 3722              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3723              		.loc 1 395 100 discriminator 2 view .LVU1217
 3724 1796 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 128[r8+rdi]	# tmp1032, MEM[base: vectp.289_1, index: ivtmp.335_516, offs
 3724      9C388000 
 3724      0000
 3725              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3726              		.loc 1 395 60 discriminator 2 view .LVU1218
 3727 17a0 C4C145D3 		vpsrlq	ymm2, ymm7, xmm10	# vect__38.287, tmp1031, _12
 3727      D2
 3728              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3729              		.loc 1 395 100 discriminator 2 view .LVU1219
 3730 17a5 C4C165F3 		vpsllq	ymm6, ymm3, xmm11	# vect__43.291, tmp1032, _18
 3730      F3
GAS LISTING /tmp/ccIyIA9Z.s 			page 107


 3731              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3732              		.loc 1 395 70 discriminator 2 view .LVU1220
 3733 17aa C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.292, vect__38.287, vect__43.291
 3734              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3735              		.loc 1 395 31 discriminator 2 view .LVU1221
 3736 17ae C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rdi], ymm12	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B
 3736      A4398000 
 3736      0000
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3737              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1222
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3738              		.loc 1 394 11 discriminator 2 view .LVU1223
 395:sieve_extend.c ****     }
 3739              		.loc 1 395 9 discriminator 2 view .LVU1224
 3740              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3741              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1225
 3742 17b8 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 160[r15+rdi]	# tmp1033, MEM[base: vectp.285_32, index: ivtmp.335_516, o
 3742      AC3FA000 
 3742      0000
 3743              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3744              		.loc 1 395 100 discriminator 2 view .LVU1226
 3745 17c2 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR 160[r8+rdi]	# tmp1034, MEM[base: vectp.289_1, index: ivtmp.335_516, offs
 3745      A438A000 
 3745      0000
 3746              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3747              		.loc 1 395 60 discriminator 2 view .LVU1227
 3748 17cc C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.287, tmp1033, _12
 3748      F2
 3749              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3750              		.loc 1 395 100 discriminator 2 view .LVU1228
 3751 17d1 C4415DF3 		vpsllq	ymm15, ymm4, xmm11	# vect__43.291, tmp1034, _18
 3751      FB
 3752              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3753              		.loc 1 395 70 discriminator 2 view .LVU1229
 3754 17d6 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__46.292, vect__38.287, vect__43.291
 3754      CF
 3755              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3756              		.loc 1 395 31 discriminator 2 view .LVU1230
 3757 17db C4C17E7F 		vmovdqu	YMMWORD PTR 160[r9+rdi], ymm1	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B]
 3757      8C39A000 
 3757      0000
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3758              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1231
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3759              		.loc 1 394 11 discriminator 2 view .LVU1232
 395:sieve_extend.c ****     }
 3760              		.loc 1 395 9 discriminator 2 view .LVU1233
 3761              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 108


 3762              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1234
 3763 17e5 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 192[r15+rdi]	# tmp1035, MEM[base: vectp.285_32, index: ivtmp.335_516, of
 3763      843FC000 
 3763      0000
 3764              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3765              		.loc 1 395 100 discriminator 2 view .LVU1235
 3766 17ef C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[r8+rdi]	# tmp1036, MEM[base: vectp.289_1, index: ivtmp.335_516, offs
 3766      AC38C000 
 3766      0000
 3767              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3768              		.loc 1 395 60 discriminator 2 view .LVU1236
 3769 17f9 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.287, tmp1035, _12
 3769      C2
 3770              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3771              		.loc 1 395 100 discriminator 2 view .LVU1237
 3772 17fe C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.291, tmp1036, _18
 3772      CB
 3773              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3774              		.loc 1 395 70 discriminator 2 view .LVU1238
 3775 1803 C4C17DEB 		vpor	ymm7, ymm0, ymm9	# vect__46.292, vect__38.287, vect__43.291
 3775      F9
 3776              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3777              		.loc 1 395 31 discriminator 2 view .LVU1239
 3778 1808 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r9+rdi], ymm7	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B]
 3778      BC39C000 
 3778      0000
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3779              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1240
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3780              		.loc 1 394 11 discriminator 2 view .LVU1241
 395:sieve_extend.c ****     }
 3781              		.loc 1 395 9 discriminator 2 view .LVU1242
 3782              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3783              		.loc 1 395 60 is_stmt 0 discriminator 2 view .LVU1243
 3784 1812 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 224[r15+rdi]	# tmp1037, MEM[base: vectp.285_32, index: ivtmp.335_516, of
 3784      943FE000 
 3784      0000
 3785              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3786              		.loc 1 395 100 discriminator 2 view .LVU1244
 3787 181c C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 224[r8+rdi]	# tmp1038, MEM[base: vectp.289_1, index: ivtmp.335_516, offs
 3787      9C38E000 
 3787      0000
 3788              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3789              		.loc 1 395 60 discriminator 2 view .LVU1245
 3790 1826 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.287, tmp1037, _12
 3790      F2
 3791              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3792              		.loc 1 395 100 discriminator 2 view .LVU1246
GAS LISTING /tmp/ccIyIA9Z.s 			page 109


 3793 182b C44165F3 		vpsllq	ymm12, ymm3, xmm11	# vect__43.291, tmp1038, _18
 3793      E3
 3794              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3795              		.loc 1 395 70 discriminator 2 view .LVU1247
 3796 1830 C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.292, vect__38.287, vect__43.291
 3796      EC
 3797              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3798              		.loc 1 395 31 discriminator 2 view .LVU1248
 3799 1835 C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rdi], ymm13	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B
 3799      AC39E000 
 3799      0000
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3800              		.loc 1 394 43 is_stmt 1 discriminator 2 view .LVU1249
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3801              		.loc 1 394 11 discriminator 2 view .LVU1250
 3802 183f 4881C700 		add	rdi, 256	# ivtmp.335,
 3802      010000
 3803 1846 4C39D7   		cmp	rdi, r10	# ivtmp.335, _518
 3804 1849 0F85B3FE 		jne	.L253	#,
 3804      FFFF
 3805              	.L384:
 3806 184f 4C89F0   		mov	rax, r14	# niters_vector_mult_vf.281, niters.279
 3807 1852 4883E0FC 		and	rax, -4	# niters_vector_mult_vf.281,
 3808 1856 4901C3   		add	r11, rax	# tmp.282, niters_vector_mult_vf.281
 3809 1859 4901C4   		add	r12, rax	# tmp.283, niters_vector_mult_vf.281
 3810 185c 4C39F0   		cmp	rax, r14	# niters_vector_mult_vf.281, niters.279
 3811 185f 7463     		je	.L251	#,
 3812              	.L252:
 3813              	.LVL167:
 395:sieve_extend.c ****     }
 3814              		.loc 1 395 9 view .LVU1251
 3815              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3816              		.loc 1 394 5 is_stmt 0 view .LVU1252
 3817 1861 4C8B5424 		mov	r10, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 3817      50
 3818              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3819              		.loc 1 395 100 view .LVU1253
 3820 1866 C422E9F7 		shlx	r14, QWORD PTR 8[rbx+r11*8], rdx	# tmp577, *_430, shift_flipped
 3820      74DB08
 3821              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3822              		.loc 1 395 60 view .LVU1254
 3823 186d C42293F7 		shrx	r8, QWORD PTR [rbx+r11*8], r13	# tmp579, *_110, shift
 3823      04DB
 3824              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3825              		.loc 1 394 52 view .LVU1255
 3826 1873 4D8D4C24 		lea	r9, 1[r12]	# copy_word,
 3826      01
 3827              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3828              		.loc 1 395 70 view .LVU1256
 3829 1878 4D09C6   		or	r14, r8	# tmp581, tmp579
GAS LISTING /tmp/ccIyIA9Z.s 			page 110


 3830 187b 4E8934E3 		mov	QWORD PTR [rbx+r12*8], r14	# *_433, tmp581
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3831              		.loc 1 394 43 is_stmt 1 view .LVU1257
 3832              	.LVL168:
 3833              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3834              		.loc 1 395 83 is_stmt 0 view .LVU1258
 3835 187f 4D8D7B01 		lea	r15, 1[r11]	# _113,
 3836              	.LVL169:
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3837              		.loc 1 394 11 is_stmt 1 view .LVU1259
 3838              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3839              		.loc 1 394 5 is_stmt 0 view .LVU1260
 3840 1883 4D39CA   		cmp	r10, r9	# aligned_copy_word, copy_word
 3841 1886 723C     		jb	.L251	#,
 395:sieve_extend.c ****     }
 3842              		.loc 1 395 9 is_stmt 1 view .LVU1261
 3843              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3844              		.loc 1 395 60 is_stmt 0 view .LVU1262
 3845 1888 4A8B3CFB 		mov	rdi, QWORD PTR [rbx+r15*8]	# *_38, *_38
 3846              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3847              		.loc 1 395 100 view .LVU1263
 3848 188c C4A2E9F7 		shlx	rsi, QWORD PTR 8[rbx+r15*8], rdx	# tmp582, *_43, shift_flipped
 3848      74FB08
 3849              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3850              		.loc 1 395 60 view .LVU1264
 3851 1893 C4E293F7 		shrx	rax, rdi, r13	# tmp584, *_38, shift
 3851      C7
 3852              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3853              		.loc 1 394 52 view .LVU1265
 3854 1898 4D8D6424 		lea	r12, 2[r12]	# copy_word,
 3854      02
 3855              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3856              		.loc 1 395 70 view .LVU1266
 3857 189d 4809C6   		or	rsi, rax	# tmp586, tmp584
 3858 18a0 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# *_83, tmp586
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3859              		.loc 1 394 43 is_stmt 1 view .LVU1267
 3860              	.LVL170:
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3861              		.loc 1 394 11 view .LVU1268
 3862              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3863              		.loc 1 395 83 is_stmt 0 view .LVU1269
 3864 18a4 4D8D5B02 		lea	r11, 2[r11]	# _41,
 3865              	.LVL171:
 3866              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3867              		.loc 1 394 5 view .LVU1270
 3868 18a8 4D39E2   		cmp	r10, r12	# aligned_copy_word, copy_word
 3869 18ab 7217     		jb	.L251	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 111


 395:sieve_extend.c ****     }
 3870              		.loc 1 395 9 is_stmt 1 view .LVU1271
 3871              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3872              		.loc 1 395 60 is_stmt 0 view .LVU1272
 3873 18ad 4E8B3CDB 		mov	r15, QWORD PTR [rbx+r11*8]	# *_151, *_151
 3874              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3875              		.loc 1 395 100 view .LVU1273
 3876 18b1 C4A2E9F7 		shlx	rdx, QWORD PTR 8[rbx+r11*8], rdx	# tmp587, *_146, shift_flipped
 3876      54DB08
 3877              	.LVL172:
 3878              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3879              		.loc 1 395 60 view .LVU1274
 3880 18b8 C44293F7 		shrx	r13, r15, r13	# tmp589, *_151, shift
 3880      EF
 3881              	.LVL173:
 3882              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 3883              		.loc 1 395 70 view .LVU1275
 3884 18bd 4C09EA   		or	rdx, r13	# tmp591, tmp589
 3885 18c0 4A8914E3 		mov	QWORD PTR [rbx+r12*8], rdx	# *_120, tmp591
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3886              		.loc 1 394 43 is_stmt 1 view .LVU1276
 3887              	.LVL174:
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 3888              		.loc 1 394 11 view .LVU1277
 3889              	.L251:
 398:sieve_extend.c **** 
 3890              		.loc 1 398 5 view .LVU1278
 3891              	# sieve_extend.c:398:     if (copy_word >= destination_stop_word) return;
 398:sieve_extend.c **** 
 3892              		.loc 1 398 8 is_stmt 0 view .LVU1279
 3893 18c4 4C8B4C24 		mov	r9, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 3893      58
 3894 18c9 4939C9   		cmp	r9, rcx	# destination_stop_word, tmp.273
 3895 18cc 0F865E03 		jbe	.L402	#,
 3895      0000
 400:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 3896              		.loc 1 400 5 is_stmt 1 view .LVU1280
 3897              	# sieve_extend.c:400:     source_word = copy_word - size; // recalibrate
 400:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 3898              		.loc 1 400 17 is_stmt 0 view .LVU1281
 3899 18d2 4C8B5424 		mov	r10, QWORD PTR 24[rsp]	# size, %sfp
 3899      18
 3900 18d7 4989CF   		mov	r15, rcx	# tmp.272, tmp.273
 3901              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 3902              		.loc 1 404 21 view .LVU1282
 3903 18da 4D8D040A 		lea	r8, [r10+rcx]	# ivtmp.330,
 3904              	# sieve_extend.c:400:     source_word = copy_word - size; // recalibrate
 400:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 3905              		.loc 1 400 17 view .LVU1283
 3906 18de 4D29D7   		sub	r15, r10	# tmp.272, size
 3907              	.LVL175:
 401:sieve_extend.c **** 
GAS LISTING /tmp/ccIyIA9Z.s 			page 112


 3908              		.loc 1 401 5 is_stmt 1 view .LVU1284
 3909              	# sieve_extend.c:401:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 401:sieve_extend.c **** 
 3910              		.loc 1 401 18 is_stmt 0 view .LVU1285
 3911 18e1 4E8D2CD5 		lea	r13, 0[0+r10*8]	# memsize,
 3911      00000000 
 3912              	.LVL176:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 3913              		.loc 1 404 11 is_stmt 1 view .LVU1286
 3914              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 3915              		.loc 1 404 5 is_stmt 0 view .LVU1287
 3916 18e9 4D39C1   		cmp	r9, r8	# destination_stop_word, ivtmp.330
 3917 18ec 0F826301 		jb	.L256	#,
 3917      0000
 3918 18f2 4C8D24CB 		lea	r12, [rbx+rcx*8]	# tmp594,
 3919 18f6 4A8D0CC5 		lea	rcx, 0[0+r8*8]	# tmp595,
 3919      00000000 
 3920              	.LVL177:
 3921              	# sieve_extend.c:405:         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 405:sieve_extend.c **** 
 3922              		.loc 1 405 40 view .LVU1288
 3923 18fe 4E8D34FB 		lea	r14, [rbx+r15*8]	# _48,
 3924 1902 4C897C24 		mov	QWORD PTR 72[rsp], r15	# %sfp, tmp.272
 3924      48
 3925 1907 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitstorage
 3925      40
 3926 190c 4929CC   		sub	r12, rcx	# _370, tmp595
 3927 190f 4C89CB   		mov	rbx, r9	# destination_stop_word, destination_stop_word
 3928              	.LVL178:
 405:sieve_extend.c **** 
 3929              		.loc 1 405 40 view .LVU1289
 3930 1912 4D89D7   		mov	r15, r10	# size, size
 3931              	.LVL179:
 405:sieve_extend.c **** 
 3932              		.loc 1 405 40 view .LVU1290
 3933 1915 C5F877   		vzeroupper
 3934              	.LVL180:
 3935              	.L257:
 405:sieve_extend.c **** 
 3936              		.loc 1 405 9 is_stmt 1 discriminator 2 view .LVU1291
 3937              	.LBB470:
 3938              	.LBI470:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3939              		.loc 2 31 1 discriminator 2 view .LVU1292
 3940              	.LBB471:
 3941              		.loc 2 34 3 discriminator 2 view .LVU1293
 3942              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3943              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU1294
 3944 1918 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp597,
 3945 191c 4C89EA   		mov	rdx, r13	#, memsize
 3946 191f 4C89F6   		mov	rsi, r14	#, _48
 3947 1922 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, ivtmp.330
 3947      50
 3948 1927 E8000000 		call	memcpy@PLT	#
 3948      00
 3949              	.LVL181:
GAS LISTING /tmp/ccIyIA9Z.s 			page 113


 3950              		.loc 2 34 10 discriminator 2 view .LVU1295
 3951              	.LBE471:
 3952              	.LBE470:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 3953              		.loc 1 404 54 is_stmt 1 discriminator 2 view .LVU1296
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 3954              		.loc 1 404 11 discriminator 2 view .LVU1297
 3955 192c 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.330, %sfp
 3955      50
 3956 1931 4E8D0439 		lea	r8, [rcx+r15]	# ivtmp.330,
 3957              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 3958              		.loc 1 404 5 is_stmt 0 discriminator 2 view .LVU1298
 3959 1935 4939D8   		cmp	r8, rbx	# ivtmp.330, destination_stop_word
 3960 1938 0F870201 		ja	.L393	#,
 3960      0000
 405:sieve_extend.c **** 
 3961              		.loc 1 405 9 is_stmt 1 view .LVU1299
 3962              	.LVL182:
 3963              	.LBB479:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3964              		.loc 2 31 1 view .LVU1300
 3965              	.LBB472:
 3966              		.loc 2 34 3 view .LVU1301
 3967              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3968              		.loc 2 34 10 is_stmt 0 view .LVU1302
 3969 193e 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp810,
 3970 1942 4C89EA   		mov	rdx, r13	#, memsize
 3971 1945 4C89F6   		mov	rsi, r14	#, _48
 3972 1948 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, ivtmp.330
 3972      50
 3973              	.LVL183:
 3974              		.loc 2 34 10 view .LVU1303
 3975 194d E8000000 		call	memcpy@PLT	#
 3975      00
 3976              	.LVL184:
 3977              		.loc 2 34 10 view .LVU1304
 3978              	.LBE472:
 3979              	.LBE479:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 3980              		.loc 1 404 54 is_stmt 1 view .LVU1305
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 3981              		.loc 1 404 11 view .LVU1306
 3982 1952 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.330, %sfp
 3982      50
 3983 1957 4E8D1C39 		lea	r11, [rcx+r15]	# ivtmp.330,
 3984              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 3985              		.loc 1 404 5 is_stmt 0 view .LVU1307
 3986 195b 4939DB   		cmp	r11, rbx	# ivtmp.330, destination_stop_word
 3987 195e 0F87DC00 		ja	.L393	#,
 3987      0000
 405:sieve_extend.c **** 
 3988              		.loc 1 405 9 is_stmt 1 view .LVU1308
 3989              	.LVL185:
 3990              	.LBB480:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
GAS LISTING /tmp/ccIyIA9Z.s 			page 114


 3991              		.loc 2 31 1 view .LVU1309
 3992              	.LBB473:
 3993              		.loc 2 34 3 view .LVU1310
 3994              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 3995              		.loc 2 34 10 is_stmt 0 view .LVU1311
 3996 1964 4C89F6   		mov	rsi, r14	#, _48
 3997 1967 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp813,
 3998 196b 4C89EA   		mov	rdx, r13	#, memsize
 3999 196e 4C895C24 		mov	QWORD PTR 80[rsp], r11	# %sfp, ivtmp.330
 3999      50
 4000 1973 E8000000 		call	memcpy@PLT	#
 4000      00
 4001              	.LVL186:
 4002              		.loc 2 34 10 view .LVU1312
 4003              	.LBE473:
 4004              	.LBE480:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4005              		.loc 1 404 54 is_stmt 1 view .LVU1313
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4006              		.loc 1 404 11 view .LVU1314
 4007 1978 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.330, %sfp
 4007      50
 4008 197d 4A8D3439 		lea	rsi, [rcx+r15]	# ivtmp.330,
 4009              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4010              		.loc 1 404 5 is_stmt 0 view .LVU1315
 4011 1981 4839DE   		cmp	rsi, rbx	# ivtmp.330, destination_stop_word
 4012 1984 0F87B600 		ja	.L393	#,
 4012      0000
 405:sieve_extend.c **** 
 4013              		.loc 1 405 9 is_stmt 1 view .LVU1316
 4014              	.LVL187:
 4015              	.LBB481:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4016              		.loc 2 31 1 view .LVU1317
 4017              	.LBB474:
 4018              		.loc 2 34 3 view .LVU1318
 4019              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4020              		.loc 2 34 10 is_stmt 0 view .LVU1319
 4021 198a 48897424 		mov	QWORD PTR 80[rsp], rsi	# %sfp, ivtmp.330
 4021      50
 4022 198f 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp816,
 4023 1993 4C89EA   		mov	rdx, r13	#, memsize
 4024 1996 4C89F6   		mov	rsi, r14	#, _48
 4025 1999 E8000000 		call	memcpy@PLT	#
 4025      00
 4026              	.LVL188:
 4027              		.loc 2 34 10 view .LVU1320
 4028              	.LBE474:
 4029              	.LBE481:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4030              		.loc 1 404 54 is_stmt 1 view .LVU1321
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4031              		.loc 1 404 11 view .LVU1322
 4032 199e 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.330, %sfp
 4032      50
 4033 19a3 4A8D0439 		lea	rax, [rcx+r15]	# ivtmp.330,
GAS LISTING /tmp/ccIyIA9Z.s 			page 115


 4034              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4035              		.loc 1 404 5 is_stmt 0 view .LVU1323
 4036 19a7 4839D8   		cmp	rax, rbx	# ivtmp.330, destination_stop_word
 4037 19aa 0F879000 		ja	.L393	#,
 4037      0000
 405:sieve_extend.c **** 
 4038              		.loc 1 405 9 is_stmt 1 view .LVU1324
 4039              	.LVL189:
 4040              	.LBB482:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4041              		.loc 2 31 1 view .LVU1325
 4042              	.LBB475:
 4043              		.loc 2 34 3 view .LVU1326
 4044              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4045              		.loc 2 34 10 is_stmt 0 view .LVU1327
 4046 19b0 4C89EA   		mov	rdx, r13	#, memsize
 4047 19b3 498D3CC4 		lea	rdi, [r12+rax*8]	# tmp819,
 4048 19b7 4C89F6   		mov	rsi, r14	#, _48
 4049 19ba 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.330
 4049      50
 4050 19bf E8000000 		call	memcpy@PLT	#
 4050      00
 4051              	.LVL190:
 4052              		.loc 2 34 10 view .LVU1328
 4053              	.LBE475:
 4054              	.LBE482:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4055              		.loc 1 404 54 is_stmt 1 view .LVU1329
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4056              		.loc 1 404 11 view .LVU1330
 4057 19c4 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.330, %sfp
 4057      50
 4058 19c9 4A8D1439 		lea	rdx, [rcx+r15]	# ivtmp.330,
 4059              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4060              		.loc 1 404 5 is_stmt 0 view .LVU1331
 4061 19cd 4839DA   		cmp	rdx, rbx	# ivtmp.330, destination_stop_word
 4062 19d0 776E     		ja	.L393	#,
 405:sieve_extend.c **** 
 4063              		.loc 1 405 9 is_stmt 1 view .LVU1332
 4064              	.LVL191:
 4065              	.LBB483:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4066              		.loc 2 31 1 view .LVU1333
 4067              	.LBB476:
 4068              		.loc 2 34 3 view .LVU1334
 4069              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4070              		.loc 2 34 10 is_stmt 0 view .LVU1335
 4071 19d2 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, ivtmp.330
 4071      50
 4072 19d7 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp822,
 4073 19db 4C89F6   		mov	rsi, r14	#, _48
 4074 19de 4C89EA   		mov	rdx, r13	#, memsize
 4075 19e1 E8000000 		call	memcpy@PLT	#
 4075      00
 4076              	.LVL192:
GAS LISTING /tmp/ccIyIA9Z.s 			page 116


 4077              		.loc 2 34 10 view .LVU1336
 4078              	.LBE476:
 4079              	.LBE483:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4080              		.loc 1 404 54 is_stmt 1 view .LVU1337
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4081              		.loc 1 404 11 view .LVU1338
 4082 19e6 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.330, %sfp
 4082      50
 4083 19eb 4E8D0C39 		lea	r9, [rcx+r15]	# ivtmp.330,
 4084              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4085              		.loc 1 404 5 is_stmt 0 view .LVU1339
 4086 19ef 4939D9   		cmp	r9, rbx	# ivtmp.330, destination_stop_word
 4087 19f2 774C     		ja	.L393	#,
 405:sieve_extend.c **** 
 4088              		.loc 1 405 9 is_stmt 1 view .LVU1340
 4089              	.LVL193:
 4090              	.LBB484:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4091              		.loc 2 31 1 view .LVU1341
 4092              	.LBB477:
 4093              		.loc 2 34 3 view .LVU1342
 4094              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4095              		.loc 2 34 10 is_stmt 0 view .LVU1343
 4096 19f4 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp825,
 4097 19f8 4C89EA   		mov	rdx, r13	#, memsize
 4098 19fb 4C89F6   		mov	rsi, r14	#, _48
 4099 19fe 4C894C24 		mov	QWORD PTR 80[rsp], r9	# %sfp, ivtmp.330
 4099      50
 4100 1a03 E8000000 		call	memcpy@PLT	#
 4100      00
 4101              	.LVL194:
 4102              		.loc 2 34 10 view .LVU1344
 4103              	.LBE477:
 4104              	.LBE484:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4105              		.loc 1 404 54 is_stmt 1 view .LVU1345
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4106              		.loc 1 404 11 view .LVU1346
 4107 1a08 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.330, %sfp
 4107      50
 4108 1a0d 4E8D1439 		lea	r10, [rcx+r15]	# ivtmp.330,
 4109              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4110              		.loc 1 404 5 is_stmt 0 view .LVU1347
 4111 1a11 4939DA   		cmp	r10, rbx	# ivtmp.330, destination_stop_word
 4112 1a14 772A     		ja	.L393	#,
 405:sieve_extend.c **** 
 4113              		.loc 1 405 9 is_stmt 1 view .LVU1348
 4114              	.LVL195:
 4115              	.LBB485:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4116              		.loc 2 31 1 view .LVU1349
 4117              	.LBB478:
 4118              		.loc 2 34 3 view .LVU1350
 4119              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
GAS LISTING /tmp/ccIyIA9Z.s 			page 117


 4120              		.loc 2 34 10 is_stmt 0 view .LVU1351
 4121 1a16 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp828,
 4122 1a1a 4C89EA   		mov	rdx, r13	#, memsize
 4123 1a1d 4C89F6   		mov	rsi, r14	#, _48
 4124 1a20 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, ivtmp.330
 4124      50
 4125 1a25 E8000000 		call	memcpy@PLT	#
 4125      00
 4126              	.LVL196:
 4127              		.loc 2 34 10 view .LVU1352
 4128              	.LBE478:
 4129              	.LBE485:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4130              		.loc 1 404 54 is_stmt 1 view .LVU1353
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4131              		.loc 1 404 11 view .LVU1354
 4132 1a2a 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.330, %sfp
 4132      50
 4133              	.LVL197:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4134              		.loc 1 404 11 is_stmt 0 view .LVU1355
 4135 1a2f 4E8D0439 		lea	r8, [rcx+r15]	# ivtmp.330,
 4136              	.LVL198:
 4137              	# sieve_extend.c:404:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4138              		.loc 1 404 5 view .LVU1356
 4139 1a33 4939D8   		cmp	r8, rbx	# ivtmp.330, destination_stop_word
 4140 1a36 0F86DCFE 		jbe	.L257	#,
 4140      FFFF
 4141              	.LVL199:
 4142 1a3c 0F1F4000 		.p2align 4,,10
 4143              		.p2align 3
 4144              	.L393:
 404:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 4145              		.loc 1 404 5 view .LVU1357
 4146 1a40 4C8B7C24 		mov	r15, QWORD PTR 72[rsp]	# tmp.272, %sfp
 4146      48
 4147 1a45 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitstorage, %sfp
 4147      40
 4148              	.LVL200:
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4149              		.loc 1 408 11 is_stmt 1 view .LVU1358
 4150              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4151              		.loc 1 408 5 is_stmt 0 view .LVU1359
 4152 1a4a 483B4C24 		cmp	rcx, QWORD PTR 88[rsp]	# tmp.273, %sfp
 4152      58
 4153 1a4f 0F87C401 		ja	.L403	#,
 4153      0000
 4154              	.LVL201:
 4155              	.L256:
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4156              		.loc 1 408 5 view .LVU1360
 4157 1a55 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 4157      58
 4158 1a5a 4C8D6F01 		lea	r13, 1[rdi]	# tmp603,
 4159              	.LVL202:
GAS LISTING /tmp/ccIyIA9Z.s 			page 118


 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4160              		.loc 1 408 5 view .LVU1361
 4161 1a5e 4829CF   		sub	rdi, rcx	# tmp604, tmp.273
 4162 1a61 4929CD   		sub	r13, rcx	# niters.269, tmp.273
 4163 1a64 4883FF02 		cmp	rdi, 2	# tmp604,
 4164 1a68 0F866D01 		jbe	.L259	#,
 4164      0000
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4165              		.loc 1 408 5 view .LVU1362
 4166 1a6e 4D89EB   		mov	r11, r13	# bnd.270, niters.269
 4167 1a71 49C1EB02 		shr	r11, 2	# bnd.270,
 4168 1a75 49C1E305 		sal	r11, 5	# _133,
 4169 1a79 498D73E0 		lea	rsi, -32[r11]	# tmp615,
 4170 1a7d 48C1EE05 		shr	rsi, 5	# tmp613,
 4171 1a81 48FFC6   		inc	rsi	# tmp616
 4172 1a84 4E8D34FB 		lea	r14, [rbx+r15*8]	# vectp.275,
 4173 1a88 4C8D24CB 		lea	r12, [rbx+rcx*8]	# vectp.278,
 4174              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4175              		.loc 1 394 5 view .LVU1363
 4176 1a8c 31C0     		xor	eax, eax	# ivtmp.322
 4177 1a8e 83E607   		and	esi, 7	# tmp617,
 4178 1a91 0F849D00 		je	.L260	#,
 4178      0000
 4179 1a97 4883FE01 		cmp	rsi, 1	# tmp617,
 4180 1a9b 747E     		je	.L345	#,
 4181 1a9d 4883FE02 		cmp	rsi, 2	# tmp617,
 4182 1aa1 7468     		je	.L346	#,
 4183 1aa3 4883FE03 		cmp	rsi, 3	# tmp617,
 4184 1aa7 7452     		je	.L347	#,
 4185 1aa9 4883FE04 		cmp	rsi, 4	# tmp617,
 4186 1aad 743C     		je	.L348	#,
 4187 1aaf 4883FE05 		cmp	rsi, 5	# tmp617,
 4188 1ab3 7426     		je	.L349	#,
 4189 1ab5 4883FE06 		cmp	rsi, 6	# tmp617,
 4190 1ab9 7410     		je	.L350	#,
 4191              	.LVL203:
 409:sieve_extend.c **** 
 4192              		.loc 1 409 9 is_stmt 1 view .LVU1364
 4193              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4194              		.loc 1 409 31 is_stmt 0 view .LVU1365
 4195 1abb C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r14]	# tmp1063, MEM[base: vectp.275_170, index: ivtmp.322_107, offset:
 4195      16
 4196 1ac0 B8200000 		mov	eax, 32	# ivtmp.322,
 4196      00
 4197 1ac5 C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm10	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B], tmp
 4197      1424
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4198              		.loc 1 408 48 is_stmt 1 view .LVU1366
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4199              		.loc 1 408 11 view .LVU1367
 4200              	.L350:
 409:sieve_extend.c **** 
 4201              		.loc 1 409 9 view .LVU1368
 4202              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
GAS LISTING /tmp/ccIyIA9Z.s 			page 119


 4203              		.loc 1 409 31 is_stmt 0 view .LVU1369
 4204 1acb C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r14+rax]	# tmp1064, MEM[base: vectp.275_170, index: ivtmp.322_107, off
 4204      1C06
 4205 1ad1 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm11	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B],
 4205      1C04
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4206              		.loc 1 408 48 is_stmt 1 view .LVU1370
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4207              		.loc 1 408 11 view .LVU1371
 4208 1ad7 4883C020 		add	rax, 32	# ivtmp.322,
 4209              	.L349:
 409:sieve_extend.c **** 
 4210              		.loc 1 409 9 view .LVU1372
 4211              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4212              		.loc 1 409 31 is_stmt 0 view .LVU1373
 4213 1adb C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r14+rax]	# tmp1065, MEM[base: vectp.275_170, index: ivtmp.322_107, off
 4213      3406
 4214 1ae1 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm14	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B],
 4214      3404
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4215              		.loc 1 408 48 is_stmt 1 view .LVU1374
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4216              		.loc 1 408 11 view .LVU1375
 4217 1ae7 4883C020 		add	rax, 32	# ivtmp.322,
 4218              	.L348:
 409:sieve_extend.c **** 
 4219              		.loc 1 409 9 view .LVU1376
 4220              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4221              		.loc 1 409 31 is_stmt 0 view .LVU1377
 4222 1aeb C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r14+rax]	# tmp1066, MEM[base: vectp.275_170, index: ivtmp.322_107, offs
 4222      2406
 4223 1af1 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm4	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B], 
 4223      2404
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4224              		.loc 1 408 48 is_stmt 1 view .LVU1378
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4225              		.loc 1 408 11 view .LVU1379
 4226 1af7 4883C020 		add	rax, 32	# ivtmp.322,
 4227              	.L347:
 409:sieve_extend.c **** 
 4228              		.loc 1 409 9 view .LVU1380
 4229              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4230              		.loc 1 409 31 is_stmt 0 view .LVU1381
 4231 1afb C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r14+rax]	# tmp1067, MEM[base: vectp.275_170, index: ivtmp.322_107, off
 4231      3C06
 4232 1b01 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm15	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B],
 4232      3C04
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4233              		.loc 1 408 48 is_stmt 1 view .LVU1382
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4234              		.loc 1 408 11 view .LVU1383
 4235 1b07 4883C020 		add	rax, 32	# ivtmp.322,
 4236              	.L346:
 409:sieve_extend.c **** 
GAS LISTING /tmp/ccIyIA9Z.s 			page 120


 4237              		.loc 1 409 9 view .LVU1384
 4238              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4239              		.loc 1 409 31 is_stmt 0 view .LVU1385
 4240 1b0b C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r14+rax]	# tmp1068, MEM[base: vectp.275_170, index: ivtmp.322_107, offs
 4240      0C06
 4241 1b11 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm1	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B], 
 4241      0C04
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4242              		.loc 1 408 48 is_stmt 1 view .LVU1386
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4243              		.loc 1 408 11 view .LVU1387
 4244 1b17 4883C020 		add	rax, 32	# ivtmp.322,
 4245              	.L345:
 409:sieve_extend.c **** 
 4246              		.loc 1 409 9 view .LVU1388
 4247              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4248              		.loc 1 409 31 is_stmt 0 view .LVU1389
 4249 1b1b C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r14+rax]	# tmp1069, MEM[base: vectp.275_170, index: ivtmp.322_107, offs
 4249      0406
 4250 1b21 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm8	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B], 
 4250      0404
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4251              		.loc 1 408 48 is_stmt 1 view .LVU1390
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4252              		.loc 1 408 11 view .LVU1391
 4253 1b27 4883C020 		add	rax, 32	# ivtmp.322,
 4254 1b2b 4C39D8   		cmp	rax, r11	# ivtmp.322, _133
 4255 1b2e 0F849500 		je	.L382	#,
 4255      0000
 4256              	.L260:
 409:sieve_extend.c **** 
 4257              		.loc 1 409 9 discriminator 2 view .LVU1392
 4258              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4259              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1393
 4260 1b34 C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR [r14+rax]	# tmp1052, MEM[base: vectp.275_170, index: ivtmp.322_107, offs
 4260      0406
 4261 1b3a C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm0	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B], 
 4261      0404
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4262              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1394
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4263              		.loc 1 408 11 discriminator 2 view .LVU1395
 409:sieve_extend.c **** 
 4264              		.loc 1 409 9 discriminator 2 view .LVU1396
 4265              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4266              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1397
 4267 1b40 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[r14+rax]	# tmp1053, MEM[base: vectp.275_170, index: ivtmp.322_107, of
 4267      6C0620
 4268 1b47 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r12+rax], ymm5	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B]
 4268      6C0420
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4269              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1398
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccIyIA9Z.s 			page 121


 4270              		.loc 1 408 11 discriminator 2 view .LVU1399
 409:sieve_extend.c **** 
 4271              		.loc 1 409 9 discriminator 2 view .LVU1400
 4272              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4273              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1401
 4274 1b4e C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 64[r14+rax]	# tmp1054, MEM[base: vectp.275_170, index: ivtmp.322_107, of
 4274      4C0640
 4275 1b55 C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rax], ymm9	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B]
 4275      4C0440
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4276              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1402
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4277              		.loc 1 408 11 discriminator 2 view .LVU1403
 409:sieve_extend.c **** 
 4278              		.loc 1 409 9 discriminator 2 view .LVU1404
 4279              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4280              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1405
 4281 1b5c C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 96[r14+rax]	# tmp1055, MEM[base: vectp.275_170, index: ivtmp.322_107, of
 4281      7C0660
 4282 1b63 C4C17E7F 		vmovdqu	YMMWORD PTR 96[r12+rax], ymm7	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B]
 4282      7C0460
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4283              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1406
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4284              		.loc 1 408 11 discriminator 2 view .LVU1407
 409:sieve_extend.c **** 
 4285              		.loc 1 409 9 discriminator 2 view .LVU1408
 4286              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4287              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1409
 4288 1b6a C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r14+rax]	# tmp1056, MEM[base: vectp.275_170, index: ivtmp.322_107, o
 4288      94068000 
 4288      0000
 4289 1b74 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r12+rax], ymm2	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B
 4289      94048000 
 4289      0000
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4290              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1410
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4291              		.loc 1 408 11 discriminator 2 view .LVU1411
 409:sieve_extend.c **** 
 4292              		.loc 1 409 9 discriminator 2 view .LVU1412
 4293              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4294              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1413
 4295 1b7e C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 160[r14+rax]	# tmp1057, MEM[base: vectp.275_170, index: ivtmp.322_107, o
 4295      B406A000 
 4295      0000
 4296 1b88 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r12+rax], ymm6	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B
 4296      B404A000 
 4296      0000
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4297              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1414
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4298              		.loc 1 408 11 discriminator 2 view .LVU1415
GAS LISTING /tmp/ccIyIA9Z.s 			page 122


 409:sieve_extend.c **** 
 4299              		.loc 1 409 9 discriminator 2 view .LVU1416
 4300              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4301              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1417
 4302 1b92 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 192[r14+rax]	# tmp1058, MEM[base: vectp.275_170, index: ivtmp.322_107, o
 4302      9C06C000 
 4302      0000
 4303 1b9c C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rax], ymm3	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0B
 4303      9C04C000 
 4303      0000
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4304              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1418
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4305              		.loc 1 408 11 discriminator 2 view .LVU1419
 409:sieve_extend.c **** 
 4306              		.loc 1 409 9 discriminator 2 view .LVU1420
 4307              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4308              		.loc 1 409 31 is_stmt 0 discriminator 2 view .LVU1421
 4309 1ba6 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 224[r14+rax]	# tmp1059, MEM[base: vectp.275_170, index: ivtmp.322_107, 
 4309      A406E000 
 4309      0000
 4310 1bb0 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rax], ymm12	# MEM[base: vectp.278_165, index: ivtmp.322_107, offset: 0
 4310      A404E000 
 4310      0000
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4311              		.loc 1 408 48 is_stmt 1 discriminator 2 view .LVU1422
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4312              		.loc 1 408 11 discriminator 2 view .LVU1423
 4313 1bba 48050001 		add	rax, 256	# ivtmp.322,
 4313      0000
 4314 1bc0 4C39D8   		cmp	rax, r11	# ivtmp.322, _133
 4315 1bc3 0F856BFF 		jne	.L260	#,
 4315      FFFF
 4316              	.L382:
 4317 1bc9 4C89EA   		mov	rdx, r13	# niters_vector_mult_vf.271, niters.269
 4318 1bcc 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.271,
 4319 1bd0 4901D7   		add	r15, rdx	# tmp.272, niters_vector_mult_vf.271
 4320 1bd3 4801D1   		add	rcx, rdx	# tmp.273, niters_vector_mult_vf.271
 4321 1bd6 4939D5   		cmp	r13, rdx	# niters.269, niters_vector_mult_vf.271
 4322 1bd9 7455     		je	.L402	#,
 4323              	.L259:
 4324              	.LVL204:
 409:sieve_extend.c **** 
 4325              		.loc 1 409 9 view .LVU1424
 4326              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4327              		.loc 1 409 43 is_stmt 0 view .LVU1425
 4328 1bdb 4E8B0CFB 		mov	r9, QWORD PTR [rbx+r15*8]	# _90, *_141
 4329              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4330              		.loc 1 408 5 view .LVU1426
 4331 1bdf 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 4331      58
 4332              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccIyIA9Z.s 			page 123


 4333              		.loc 1 408 57 view .LVU1427
 4334 1be4 4C8D5101 		lea	r10, 1[rcx]	# copy_word,
 4335              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4336              		.loc 1 409 31 view .LVU1428
 4337 1be8 4C890CCB 		mov	QWORD PTR [rbx+rcx*8], r9	# *_372, _90
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4338              		.loc 1 408 48 is_stmt 1 view .LVU1429
 4339              	.LVL205:
 4340              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4341              		.loc 1 408 71 is_stmt 0 view .LVU1430
 4342 1bec 49FFC7   		inc	r15	# source_word
 4343              	.LVL206:
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4344              		.loc 1 408 11 is_stmt 1 view .LVU1431
 4345              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4346              		.loc 1 408 5 is_stmt 0 view .LVU1432
 4347 1bef 4D39D0   		cmp	r8, r10	# destination_stop_word, copy_word
 4348 1bf2 723C     		jb	.L402	#,
 409:sieve_extend.c **** 
 4349              		.loc 1 409 9 is_stmt 1 view .LVU1433
 4350              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4351              		.loc 1 409 43 is_stmt 0 view .LVU1434
 4352 1bf4 4A8D3CFD 		lea	rdi, 0[0+r15*8]	# _96,
 4352      00000000 
 4353 1bfc 4E8B3CFB 		mov	r15, QWORD PTR [rbx+r15*8]	# _103, *_98
 4354              	.LVL207:
 4355              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4356              		.loc 1 408 57 view .LVU1435
 4357 1c00 4883C102 		add	rcx, 2	# copy_word,
 4358              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4359              		.loc 1 409 31 view .LVU1436
 4360 1c04 4E893CD3 		mov	QWORD PTR [rbx+r10*8], r15	# *_102, _103
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4361              		.loc 1 408 48 is_stmt 1 view .LVU1437
 4362              	.LVL208:
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4363              		.loc 1 408 11 view .LVU1438
 4364              	# sieve_extend.c:408:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4365              		.loc 1 408 5 is_stmt 0 view .LVU1439
 4366 1c08 4939C8   		cmp	r8, rcx	# destination_stop_word, copy_word
 4367 1c0b 7223     		jb	.L402	#,
 409:sieve_extend.c **** 
 4368              		.loc 1 409 9 is_stmt 1 view .LVU1440
 4369              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
 4370              		.loc 1 409 43 is_stmt 0 view .LVU1441
 4371 1c0d 4C8B6C3B 		mov	r13, QWORD PTR 8[rbx+rdi]	# _191, *_194
 4371      08
 4372              	# sieve_extend.c:409:         bitstorage[copy_word] = bitstorage[source_word];
 409:sieve_extend.c **** 
GAS LISTING /tmp/ccIyIA9Z.s 			page 124


 4373              		.loc 1 409 31 view .LVU1442
 4374 1c12 4C892CCB 		mov	QWORD PTR [rbx+rcx*8], r13	# *_192, _191
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4375              		.loc 1 408 48 is_stmt 1 view .LVU1443
 408:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 4376              		.loc 1 408 11 view .LVU1444
 4377 1c16 C5F877   		vzeroupper
 4378              	.L403:
 4379              	# sieve_extend.c:412:  }
 412:sieve_extend.c **** 
 4380              		.loc 1 412 2 is_stmt 0 view .LVU1445
 4381 1c19 488D65D8 		lea	rsp, -40[rbp]	#,
 4382              	.LVL209:
 412:sieve_extend.c **** 
 4383              		.loc 1 412 2 view .LVU1446
 4384 1c1d 5B       		pop	rbx	#
 4385 1c1e 415C     		pop	r12	#
 4386 1c20 415D     		pop	r13	#
 4387 1c22 415E     		pop	r14	#
 4388 1c24 415F     		pop	r15	#
 4389 1c26 5D       		pop	rbp	#
 4390              		.cfi_remember_state
 4391              		.cfi_def_cfa 7, 8
 4392              	.LVL210:
 412:sieve_extend.c **** 
 4393              		.loc 1 412 2 view .LVU1447
 4394 1c27 C3       		ret	
 4395              	.LVL211:
 4396 1c28 0F1F8400 		.p2align 4,,10
 4396      00000000 
 4397              		.p2align 3
 4398              	.L402:
 4399              		.cfi_restore_state
 412:sieve_extend.c **** 
 4400              		.loc 1 412 2 view .LVU1448
 4401 1c30 C5F877   		vzeroupper
 4402 1c33 488D65D8 		lea	rsp, -40[rbp]	#,
 4403              	.LVL212:
 412:sieve_extend.c **** 
 4404              		.loc 1 412 2 view .LVU1449
 4405 1c37 5B       		pop	rbx	#
 4406 1c38 415C     		pop	r12	#
 4407 1c3a 415D     		pop	r13	#
 4408 1c3c 415E     		pop	r14	#
 4409 1c3e 415F     		pop	r15	#
 4410 1c40 5D       		pop	rbp	#
 4411              		.cfi_remember_state
 4412              		.cfi_def_cfa 7, 8
 4413              	.LVL213:
 412:sieve_extend.c **** 
 4414              		.loc 1 412 2 view .LVU1450
 4415 1c41 C3       		ret	
 4416              	.LVL214:
 4417              		.p2align 4,,10
 4418 1c42 660F1F44 		.p2align 3
 4418      0000
 4419              	.L405:
GAS LISTING /tmp/ccIyIA9Z.s 			page 125


 4420              		.cfi_restore_state
 395:sieve_extend.c ****     }
 4421              		.loc 1 395 9 is_stmt 1 view .LVU1451
 4422              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4423              		.loc 1 395 60 is_stmt 0 view .LVU1452
 4424 1c48 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r15]	# tmp1070, MEM[base: vectp.285_32, index: ivtmp.335_516, offset: 0
 4424      1F
 4425              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4426              		.loc 1 395 100 view .LVU1453
 4427 1c4d C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8]	# tmp1071, MEM[base: vectp.289_1, index: ivtmp.335_516, offset: 0B]
 4427      20
 4428              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4429              		.loc 1 395 60 view .LVU1454
 4430 1c52 C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.287, tmp1070, _12
 4430      D2
 4431              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4432              		.loc 1 395 100 view .LVU1455
 4433 1c57 C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.291, tmp1071, _18
 4433      F3
 4434 1c5c BF200000 		mov	edi, 32	# ivtmp.335,
 4434      00
 4435              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4436              		.loc 1 395 70 view .LVU1456
 4437 1c61 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.292, vect__38.287, vect__43.291
 4438              	# sieve_extend.c:395:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 395:sieve_extend.c ****     }
 4439              		.loc 1 395 31 view .LVU1457
 4440 1c65 C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm12	# MEM[base: vectp.294_207, index: ivtmp.335_516, offset: 0B], vect
 4440      21
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4441              		.loc 1 394 43 is_stmt 1 view .LVU1458
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4442              		.loc 1 394 11 view .LVU1459
 4443 1c6a E9AFF9FF 		jmp	.L343	#
 4443      FF
 4444              	.LVL215:
 4445 1c6f 90       		.p2align 4,,10
 4446              		.p2align 3
 4447              	.L246:
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4448              		.loc 1 394 11 is_stmt 0 view .LVU1460
 4449 1c70 4801D9   		add	rcx, rbx	# ivtmp.350, bitstorage
 4450              	.LBB486:
 4451              	.LBB466:
 4452              	.LBB456:
 4453              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4454              		.loc 1 359 19 view .LVU1461
 4455 1c73 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _528, offset: 8B]
 4456              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4457              		.loc 1 360 44 view .LVU1462
GAS LISTING /tmp/ccIyIA9Z.s 			page 126


 4458 1c77 4489E8   		mov	eax, r13d	# tmp1012, _12
 4459              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4460              		.loc 1 360 65 view .LVU1463
 4461 1c7a 89D7     		mov	edi, edx	# tmp1013, _18
 4462              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4463              		.loc 1 360 44 view .LVU1464
 4464 1c7c C4E2FBF7 		shrx	rax, QWORD PTR [rcx], rax	# tmp557, MEM[base: _528, offset: 0B], tmp1012
 4464      01
 4465              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4466              		.loc 1 360 65 view .LVU1465
 4467 1c81 C4E2C1F7 		shlx	rdi, rsi, rdi	# tmp559, source1, tmp1013
 4467      FE
 4468              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4469              		.loc 1 360 54 view .LVU1466
 4470 1c86 4809F8   		or	rax, rdi	# tmp560, tmp559
 4471 1c89 4A8904E3 		mov	QWORD PTR [rbx+r12*8], rax	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4472 1c8d 4C8B7C24 		mov	r15, QWORD PTR 40[rsp]	# fast_loop_stop_word, %sfp
 4472      28
 4473 1c92 4D89E0   		mov	r8, r12	# tmp626, tmp.283
 4474 1c95 49F7D0   		not	r8	# tmp626
 4475              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4476              		.loc 1 360 65 view .LVU1467
 4477 1c98 4189D2   		mov	r10d, edx	# _18, shift_flipped
 4478 1c9b 4D01F8   		add	r8, r15	# tmp627, fast_loop_stop_word
 4479              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4480              		.loc 1 360 44 view .LVU1468
 4481 1c9e 4589E9   		mov	r9d, r13d	# _12, shift
 4482              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4483              		.loc 1 362 65 view .LVU1469
 4484 1ca1 C4E2A9F7 		shlx	rax, QWORD PTR 16[rcx], r10	# tmp561, MEM[base: _528, offset: 16B], tmp1014
 4484      4110
 4485 1ca7 49F7D6   		not	r14	# tmp611
 4486 1caa 49D1E8   		shr	r8	# tmp625
 4487              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4488              		.loc 1 363 19 view .LVU1470
 4489 1cad 498D7C24 		lea	rdi, 2[r12]	# copy_word,
 4489      02
 4490              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4491              		.loc 1 362 44 view .LVU1471
 4492 1cb2 C4E2B3F7 		shrx	rsi, rsi, r9	# tmp563, source1, tmp1015
 4492      F6
 4493              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4494              		.loc 1 362 54 view .LVU1472
 4495 1cb7 4809C6   		or	rsi, rax	# tmp564, tmp561
 4496 1cba 4A8974E3 		mov	QWORD PTR 8[rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offse
 4496      08
 4497 1cbf 4183E003 		and	r8d, 3	# tmp628,
GAS LISTING /tmp/ccIyIA9Z.s 			page 127


 4498              	.LVL216:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4499              		.loc 1 358 9 is_stmt 1 view .LVU1473
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4500              		.loc 1 359 9 view .LVU1474
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4501              		.loc 1 360 9 view .LVU1475
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4502              		.loc 1 361 9 view .LVU1476
 362:sieve_extend.c ****         copy_word += 2;
 4503              		.loc 1 362 9 view .LVU1477
 363:sieve_extend.c ****         source_word += 2;
 4504              		.loc 1 363 9 view .LVU1478
 364:sieve_extend.c ****         distance += 2;
 4505              		.loc 1 364 9 view .LVU1479
 365:sieve_extend.c ****     }
 4506              		.loc 1 365 9 view .LVU1480
 4507 1cc3 4D8D143E 		lea	r10, [r14+rdi]	# distance,
 365:sieve_extend.c ****     }
 4508              		.loc 1 365 9 is_stmt 0 view .LVU1481
 4509              	.LBE456:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4510              		.loc 1 357 11 is_stmt 1 view .LVU1482
 4511 1cc7 488D4110 		lea	rax, 16[rcx]	# ivtmp.350,
 4512 1ccb 4939FF   		cmp	r15, rdi	# fast_loop_stop_word, copy_word
 4513 1cce 0F86A9F8 		jbe	.L250	#,
 4513      FFFF
 4514 1cd4 4D85C0   		test	r8, r8	# tmp628
 4515 1cd7 0F849700 		je	.L396	#,
 4515      0000
 4516 1cdd 4983F801 		cmp	r8, 1	# tmp628,
 4517 1ce1 7446     		je	.L357	#,
 4518 1ce3 4983F802 		cmp	r8, 2	# tmp628,
 4519 1ce7 0F857B01 		jne	.L406	#,
 4519      0000
 4520              	.LVL217:
 4521              	.L358:
 4522              	.LBB457:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4523              		.loc 1 358 9 view .LVU1483
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4524              		.loc 1 359 9 view .LVU1484
 4525              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4526              		.loc 1 359 19 is_stmt 0 view .LVU1485
 4527 1ced 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4528              		.loc 1 360 9 is_stmt 1 view .LVU1486
 4529              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4530              		.loc 1 360 44 is_stmt 0 view .LVU1487
 4531 1cf1 4489E9   		mov	ecx, r13d	# tmp1088, _12
 4532              	.LVL218:
 4533              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4534              		.loc 1 360 65 view .LVU1488
 4535 1cf4 4189D0   		mov	r8d, edx	# tmp1089, _18
GAS LISTING /tmp/ccIyIA9Z.s 			page 128


 4536              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4537              		.loc 1 360 44 view .LVU1489
 4538 1cf7 C4E2F3F7 		shrx	rcx, QWORD PTR [rax], rcx	# tmp876, MEM[base: _528, offset: 0B], tmp1088
 4538      08
 4539              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4540              		.loc 1 360 65 view .LVU1490
 4541 1cfc C462B9F7 		shlx	r9, rsi, r8	# tmp877, source1, tmp1089
 4541      CE
 4542              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4543              		.loc 1 360 54 view .LVU1491
 4544 1d01 4C09C9   		or	rcx, r9	# tmp878, tmp877
 4545 1d04 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4546              	.LVL219:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4547              		.loc 1 361 9 is_stmt 1 view .LVU1492
 362:sieve_extend.c ****         copy_word += 2;
 4548              		.loc 1 362 9 view .LVU1493
 4549              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4550              		.loc 1 360 44 is_stmt 0 view .LVU1494
 4551 1d08 4589EA   		mov	r10d, r13d	# _12, shift
 4552              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4553              		.loc 1 360 65 view .LVU1495
 4554 1d0b 4189D7   		mov	r15d, edx	# _18, shift_flipped
 4555              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4556              		.loc 1 362 65 view .LVU1496
 4557 1d0e C4E281F7 		shlx	rcx, QWORD PTR 16[rax], r15	# tmp880, MEM[base: _528, offset: 16B], tmp1090
 4557      4810
 4558              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4559              		.loc 1 362 44 view .LVU1497
 4560 1d14 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp881, source1, tmp1091
 4560      F6
 4561              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4562              		.loc 1 362 54 view .LVU1498
 4563 1d19 4809CE   		or	rsi, rcx	# tmp882, tmp880
 4564 1d1c 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offse
 4564      08
 4565              	.LVL220:
 363:sieve_extend.c ****         source_word += 2;
 4566              		.loc 1 363 9 is_stmt 1 view .LVU1499
 4567 1d21 4883C010 		add	rax, 16	# ivtmp.350,
 4568              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4569              		.loc 1 363 19 is_stmt 0 view .LVU1500
 4570 1d25 4883C702 		add	rdi, 2	# copy_word,
 364:sieve_extend.c ****         distance += 2;
 4571              		.loc 1 364 9 is_stmt 1 view .LVU1501
 4572              	.LVL221:
 365:sieve_extend.c ****     }
 4573              		.loc 1 365 9 view .LVU1502
GAS LISTING /tmp/ccIyIA9Z.s 			page 129


 365:sieve_extend.c ****     }
 4574              		.loc 1 365 9 is_stmt 0 view .LVU1503
 4575              	.LBE457:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4576              		.loc 1 357 11 is_stmt 1 view .LVU1504
 4577              	.L357:
 4578              	.LBB458:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4579              		.loc 1 358 9 view .LVU1505
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4580              		.loc 1 359 9 view .LVU1506
 4581              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4582              		.loc 1 359 19 is_stmt 0 view .LVU1507
 4583 1d29 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4584              		.loc 1 360 9 is_stmt 1 view .LVU1508
 4585              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4586              		.loc 1 360 44 is_stmt 0 view .LVU1509
 4587 1d2d 4589E8   		mov	r8d, r13d	# tmp1092, _12
 4588              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4589              		.loc 1 360 65 view .LVU1510
 4590 1d30 4189D1   		mov	r9d, edx	# tmp1093, _18
 4591              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4592              		.loc 1 360 44 view .LVU1511
 4593 1d33 C4E2BBF7 		shrx	rcx, QWORD PTR [rax], r8	# tmp886, MEM[base: _528, offset: 0B], tmp1092
 4593      08
 4594              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4595              		.loc 1 360 65 view .LVU1512
 4596 1d38 C462B1F7 		shlx	r8, rsi, r9	# tmp887, source1, tmp1093
 4596      C6
 4597              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4598              		.loc 1 360 54 view .LVU1513
 4599 1d3d 4C09C1   		or	rcx, r8	# tmp888, tmp887
 4600 1d40 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4601              	.LVL222:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4602              		.loc 1 361 9 is_stmt 1 view .LVU1514
 362:sieve_extend.c ****         copy_word += 2;
 4603              		.loc 1 362 9 view .LVU1515
 4604              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4605              		.loc 1 360 44 is_stmt 0 view .LVU1516
 4606 1d44 4589EA   		mov	r10d, r13d	# _12, shift
 4607              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4608              		.loc 1 360 65 view .LVU1517
 4609 1d47 4189D7   		mov	r15d, edx	# _18, shift_flipped
 4610              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4611              		.loc 1 362 65 view .LVU1518
 4612 1d4a C4E281F7 		shlx	rcx, QWORD PTR 16[rax], r15	# tmp890, MEM[base: _528, offset: 16B], tmp1094
GAS LISTING /tmp/ccIyIA9Z.s 			page 130


 4612      4810
 4613              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4614              		.loc 1 362 44 view .LVU1519
 4615 1d50 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp891, source1, tmp1095
 4615      F6
 4616              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4617              		.loc 1 362 54 view .LVU1520
 4618 1d55 4809CE   		or	rsi, rcx	# tmp892, tmp890
 4619 1d58 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offse
 4619      08
 4620              	.LVL223:
 363:sieve_extend.c ****         source_word += 2;
 4621              		.loc 1 363 9 is_stmt 1 view .LVU1521
 4622              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4623              		.loc 1 363 19 is_stmt 0 view .LVU1522
 4624 1d5d 4883C702 		add	rdi, 2	# copy_word,
 364:sieve_extend.c ****         distance += 2;
 4625              		.loc 1 364 9 is_stmt 1 view .LVU1523
 4626              	.LVL224:
 365:sieve_extend.c ****     }
 4627              		.loc 1 365 9 view .LVU1524
 4628 1d61 4D8D143E 		lea	r10, [r14+rdi]	# distance,
 365:sieve_extend.c ****     }
 4629              		.loc 1 365 9 is_stmt 0 view .LVU1525
 4630              	.LBE458:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4631              		.loc 1 357 11 is_stmt 1 view .LVU1526
 4632 1d65 4883C010 		add	rax, 16	# ivtmp.350,
 4633 1d69 48397C24 		cmp	QWORD PTR 40[rsp], rdi	# %sfp, copy_word
 4633      28
 4634 1d6e 0F8609F8 		jbe	.L250	#,
 4634      FFFF
 4635              	.LVL225:
 4636              	.L396:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4637              		.loc 1 357 11 is_stmt 0 view .LVU1527
 4638 1d74 4C895C24 		mov	QWORD PTR 72[rsp], r11	# %sfp, tmp.282
 4638      48
 4639 1d79 4489E9   		mov	ecx, r13d	# _12, shift
 4640 1d7c 4189D0   		mov	r8d, edx	# _18, shift_flipped
 4641              	.LVL226:
 4642              	.L249:
 4643              	.LBB459:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4644              		.loc 1 358 9 is_stmt 1 view .LVU1528
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4645              		.loc 1 359 9 view .LVU1529
 4646              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4647              		.loc 1 359 19 is_stmt 0 view .LVU1530
 4648 1d7f 4C8B5808 		mov	r11, QWORD PTR 8[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4649              		.loc 1 360 9 is_stmt 1 view .LVU1531
 4650              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
GAS LISTING /tmp/ccIyIA9Z.s 			page 131


 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4651              		.loc 1 360 44 is_stmt 0 view .LVU1532
 4652 1d83 C462F3F7 		shrx	r9, QWORD PTR [rax], rcx	# tmp700, MEM[base: _528, offset: 0B], _12
 4652      08
 4653              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4654              		.loc 1 360 65 view .LVU1533
 4655 1d88 C442B9F7 		shlx	r15, r11, r8	# tmp701, source1, _18
 4655      FB
 4656              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4657              		.loc 1 360 54 view .LVU1534
 4658 1d8d 4D09F9   		or	r9, r15	# tmp702, tmp701
 4659 1d90 4C890CFB 		mov	QWORD PTR [rbx+rdi*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset:
 4660              	.LVL227:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4661              		.loc 1 361 9 is_stmt 1 view .LVU1535
 362:sieve_extend.c ****         copy_word += 2;
 4662              		.loc 1 362 9 view .LVU1536
 4663              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4664              		.loc 1 362 44 is_stmt 0 view .LVU1537
 4665 1d94 C442F3F7 		shrx	r10, r11, rcx	# tmp705, source1, _12
 4665      D3
 4666              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4667              		.loc 1 363 19 view .LVU1538
 4668 1d99 4C8D5F02 		lea	r11, 2[rdi]	# tmp629,
 4669              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4670              		.loc 1 362 65 view .LVU1539
 4671 1d9d C4E2B9F7 		shlx	rsi, QWORD PTR 16[rax], r8	# tmp704, MEM[base: _528, offset: 16B], _18
 4671      7010
 4672              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4673              		.loc 1 362 54 view .LVU1540
 4674 1da3 4C09D6   		or	rsi, r10	# tmp706, tmp705
 4675 1da6 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offse
 4675      08
 4676              	.LVL228:
 363:sieve_extend.c ****         source_word += 2;
 4677              		.loc 1 363 9 is_stmt 1 view .LVU1541
 364:sieve_extend.c ****         distance += 2;
 4678              		.loc 1 364 9 view .LVU1542
 365:sieve_extend.c ****     }
 4679              		.loc 1 365 9 view .LVU1543
 365:sieve_extend.c ****     }
 4680              		.loc 1 365 9 is_stmt 0 view .LVU1544
 4681              	.LBE459:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4682              		.loc 1 357 11 is_stmt 1 view .LVU1545
 4683              	.LBB460:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4684              		.loc 1 358 9 view .LVU1546
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4685              		.loc 1 359 9 view .LVU1547
 4686 1dab 4883C040 		add	rax, 64	# ivtmp.350,
GAS LISTING /tmp/ccIyIA9Z.s 			page 132


 4687              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4688              		.loc 1 359 19 is_stmt 0 view .LVU1548
 4689 1daf 4C8B48D8 		mov	r9, QWORD PTR -40[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4690              		.loc 1 360 9 is_stmt 1 view .LVU1549
 4691              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4692              		.loc 1 360 44 is_stmt 0 view .LVU1550
 4693 1db3 C4E2F3F7 		shrx	rsi, QWORD PTR -48[rax], rcx	# tmp712, MEM[base: _528, offset: 0B], _12
 4693      70D0
 4694              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4695              		.loc 1 360 65 view .LVU1551
 4696 1db9 C442B9F7 		shlx	r15, r9, r8	# tmp713, source1, _18
 4696      F9
 4697              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4698              		.loc 1 360 54 view .LVU1552
 4699 1dbe 4C09FE   		or	rsi, r15	# tmp714, tmp713
 4700 1dc1 4A8934DB 		mov	QWORD PTR [rbx+r11*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4701              	.LVL229:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4702              		.loc 1 361 9 is_stmt 1 view .LVU1553
 362:sieve_extend.c ****         copy_word += 2;
 4703              		.loc 1 362 9 view .LVU1554
 4704              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4705              		.loc 1 362 44 is_stmt 0 view .LVU1555
 4706 1dc5 C442F3F7 		shrx	r9, r9, rcx	# tmp717, source1, _12
 4706      C9
 4707              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4708              		.loc 1 362 65 view .LVU1556
 4709 1dca 4C8B50E0 		mov	r10, QWORD PTR -32[rax]	# MEM[base: _528, offset: 16B], MEM[base: _528, offset: 16B]
 4710 1dce C4C2B9F7 		shlx	rsi, r10, r8	# tmp716, MEM[base: _528, offset: 16B], _18
 4710      F2
 4711              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4712              		.loc 1 362 54 view .LVU1557
 4713 1dd3 4909F1   		or	r9, rsi	# tmp718, tmp716
 4714 1dd6 4E894CDB 		mov	QWORD PTR 8[rbx+r11*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4714      08
 4715              	.LVL230:
 363:sieve_extend.c ****         source_word += 2;
 4716              		.loc 1 363 9 is_stmt 1 view .LVU1558
 4717              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4718              		.loc 1 363 19 is_stmt 0 view .LVU1559
 4719 1ddb 4C8D5F04 		lea	r11, 4[rdi]	# copy_word,
 364:sieve_extend.c ****         distance += 2;
 4720              		.loc 1 364 9 is_stmt 1 view .LVU1560
 4721              	.LVL231:
 365:sieve_extend.c ****     }
 4722              		.loc 1 365 9 view .LVU1561
 365:sieve_extend.c ****     }
 4723              		.loc 1 365 9 is_stmt 0 view .LVU1562
GAS LISTING /tmp/ccIyIA9Z.s 			page 133


 4724              	.LBE460:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4725              		.loc 1 357 11 is_stmt 1 view .LVU1563
 4726              	.LBB461:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4727              		.loc 1 358 9 view .LVU1564
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4728              		.loc 1 359 9 view .LVU1565
 4729              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4730              		.loc 1 359 19 is_stmt 0 view .LVU1566
 4731 1ddf 4C8B50E8 		mov	r10, QWORD PTR -24[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4732              		.loc 1 360 9 is_stmt 1 view .LVU1567
 4733              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4734              		.loc 1 360 44 is_stmt 0 view .LVU1568
 4735 1de3 C4E2F3F7 		shrx	rsi, QWORD PTR -32[rax], rcx	# tmp724, MEM[base: _528, offset: 0B], _12
 4735      70E0
 4736              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4737              		.loc 1 360 65 view .LVU1569
 4738 1de9 C442B9F7 		shlx	r15, r10, r8	# tmp725, source1, _18
 4738      FA
 4739              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4740              		.loc 1 360 54 view .LVU1570
 4741 1dee 4C09FE   		or	rsi, r15	# tmp726, tmp725
 4742 1df1 4A8934DB 		mov	QWORD PTR [rbx+r11*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4743              	.LVL232:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4744              		.loc 1 361 9 is_stmt 1 view .LVU1571
 362:sieve_extend.c ****         copy_word += 2;
 4745              		.loc 1 362 9 view .LVU1572
 4746              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4747              		.loc 1 362 44 is_stmt 0 view .LVU1573
 4748 1df5 C442F3F7 		shrx	r10, r10, rcx	# tmp729, source1, _12
 4748      D2
 4749              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4750              		.loc 1 362 65 view .LVU1574
 4751 1dfa 4C8B48F0 		mov	r9, QWORD PTR -16[rax]	# MEM[base: _528, offset: 16B], MEM[base: _528, offset: 16B]
 4752 1dfe C4C2B9F7 		shlx	rsi, r9, r8	# tmp728, MEM[base: _528, offset: 16B], _18
 4752      F1
 4753              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4754              		.loc 1 362 54 view .LVU1575
 4755 1e03 4909F2   		or	r10, rsi	# tmp730, tmp728
 4756 1e06 4E8954DB 		mov	QWORD PTR 8[rbx+r11*8], r10	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offse
 4756      08
 4757              	.LVL233:
 363:sieve_extend.c ****         source_word += 2;
 4758              		.loc 1 363 9 is_stmt 1 view .LVU1576
 4759              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4760              		.loc 1 363 19 is_stmt 0 view .LVU1577
GAS LISTING /tmp/ccIyIA9Z.s 			page 134


 4761 1e0b 4C8D5F06 		lea	r11, 6[rdi]	# copy_word,
 364:sieve_extend.c ****         distance += 2;
 4762              		.loc 1 364 9 is_stmt 1 view .LVU1578
 4763              	.LVL234:
 365:sieve_extend.c ****     }
 4764              		.loc 1 365 9 view .LVU1579
 365:sieve_extend.c ****     }
 4765              		.loc 1 365 9 is_stmt 0 view .LVU1580
 4766              	.LBE461:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4767              		.loc 1 357 11 is_stmt 1 view .LVU1581
 4768              	.LBB462:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4769              		.loc 1 358 9 view .LVU1582
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4770              		.loc 1 359 9 view .LVU1583
 4771              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
 4772              		.loc 1 363 19 is_stmt 0 view .LVU1584
 4773 1e0f 4883C708 		add	rdi, 8	# copy_word,
 4774              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4775              		.loc 1 359 19 view .LVU1585
 4776 1e13 4C8B48F8 		mov	r9, QWORD PTR -8[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4777              		.loc 1 360 9 is_stmt 1 view .LVU1586
 4778              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4779              		.loc 1 360 44 is_stmt 0 view .LVU1587
 4780 1e17 C4E2F3F7 		shrx	rsi, QWORD PTR -16[rax], rcx	# tmp736, MEM[base: _528, offset: 0B], _12
 4780      70F0
 4781              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4782              		.loc 1 360 65 view .LVU1588
 4783 1e1d C442B9F7 		shlx	r15, r9, r8	# tmp737, source1, _18
 4783      F9
 4784              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4785              		.loc 1 360 54 view .LVU1589
 4786 1e22 4C09FE   		or	rsi, r15	# tmp738, tmp737
 4787 1e25 4A8934DB 		mov	QWORD PTR [rbx+r11*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4788              	.LVL235:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4789              		.loc 1 361 9 is_stmt 1 view .LVU1590
 362:sieve_extend.c ****         copy_word += 2;
 4790              		.loc 1 362 9 view .LVU1591
 4791              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4792              		.loc 1 362 44 is_stmt 0 view .LVU1592
 4793 1e29 C442F3F7 		shrx	r9, r9, rcx	# tmp741, source1, _12
 4793      C9
 4794              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4795              		.loc 1 362 65 view .LVU1593
 4796 1e2e 4C8B10   		mov	r10, QWORD PTR [rax]	# MEM[base: _528, offset: 16B], MEM[base: _528, offset: 16B]
 4797 1e31 C4C2B9F7 		shlx	rsi, r10, r8	# tmp740, MEM[base: _528, offset: 16B], _18
 4797      F2
GAS LISTING /tmp/ccIyIA9Z.s 			page 135


 4798              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4799              		.loc 1 362 54 view .LVU1594
 4800 1e36 4909F1   		or	r9, rsi	# tmp742, tmp740
 4801 1e39 4E894CDB 		mov	QWORD PTR 8[rbx+r11*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4801      08
 4802              	.LVL236:
 363:sieve_extend.c ****         source_word += 2;
 4803              		.loc 1 363 9 is_stmt 1 view .LVU1595
 364:sieve_extend.c ****         distance += 2;
 4804              		.loc 1 364 9 view .LVU1596
 365:sieve_extend.c ****     }
 4805              		.loc 1 365 9 view .LVU1597
 4806 1e3e 4D8D143E 		lea	r10, [r14+rdi]	# distance,
 365:sieve_extend.c ****     }
 4807              		.loc 1 365 9 is_stmt 0 view .LVU1598
 4808              	.LBE462:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4809              		.loc 1 357 11 is_stmt 1 view .LVU1599
 4810 1e42 48397C24 		cmp	QWORD PTR 40[rsp], rdi	# %sfp, copy_word
 4810      28
 4811 1e47 0F8732FF 		ja	.L249	#,
 4811      FFFF
 4812 1e4d 4C8B5C24 		mov	r11, QWORD PTR 72[rsp]	# tmp.282, %sfp
 4812      48
 4813 1e52 E926F7FF 		jmp	.L250	#
 4813      FF
 4814              	.LVL237:
 4815 1e57 660F1F84 		.p2align 4,,10
 4815      00000000 
 4815      00
 4816              		.p2align 3
 4817              	.L263:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4818              		.loc 1 357 11 is_stmt 0 view .LVU1600
 4819              	.LBE466:
 4820              	.LBE486:
 4821              	# sieve_extend.c:394:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 394:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 4822              		.loc 1 394 5 view .LVU1601
 4823 1e60 4C89E1   		mov	rcx, r12	# tmp.273, tmp.283
 4824 1e63 E95CFAFF 		jmp	.L251	#
 4824      FF
 4825              	.LVL238:
 4826              	.L406:
 4827              	.LBB487:
 4828              	.LBB467:
 4829              	.LBB463:
 358:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 4830              		.loc 1 358 9 is_stmt 1 view .LVU1602
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4831              		.loc 1 359 9 view .LVU1603
 4832              	# sieve_extend.c:359:         bitword_t source1 = bitstorage[source_word+1];
 359:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 4833              		.loc 1 359 19 is_stmt 0 view .LVU1604
 4834 1e68 4C8B4808 		mov	r9, QWORD PTR 8[rax]	# source1, MEM[base: _528, offset: 8B]
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
GAS LISTING /tmp/ccIyIA9Z.s 			page 136


 4835              		.loc 1 360 9 is_stmt 1 view .LVU1605
 4836              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4837              		.loc 1 360 44 is_stmt 0 view .LVU1606
 4838 1e6c 4589E8   		mov	r8d, r13d	# tmp1084, _12
 4839 1e6f C4E2BBF7 		shrx	rsi, QWORD PTR [rax], r8	# tmp866, MEM[base: _528, offset: 0B], tmp1084
 4839      30
 4840              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4841              		.loc 1 360 65 view .LVU1607
 4842 1e74 4189D0   		mov	r8d, edx	# tmp1085, _18
 4843 1e77 C442B9F7 		shlx	r8, r9, r8	# tmp867, source1, tmp1085
 4843      C1
 4844              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4845              		.loc 1 360 54 view .LVU1608
 4846 1e7c 4C09C6   		or	rsi, r8	# tmp868, tmp867
 4847 1e7f 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4848              	.LVL239:
 361:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 4849              		.loc 1 361 9 is_stmt 1 view .LVU1609
 362:sieve_extend.c ****         copy_word += 2;
 4850              		.loc 1 362 9 view .LVU1610
 4851              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4852              		.loc 1 360 44 is_stmt 0 view .LVU1611
 4853 1e83 4589EA   		mov	r10d, r13d	# _12, shift
 4854              	# sieve_extend.c:360:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 360:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 4855              		.loc 1 360 65 view .LVU1612
 4856 1e86 4189D7   		mov	r15d, edx	# _18, shift_flipped
 4857              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4858              		.loc 1 362 65 view .LVU1613
 4859 1e89 488B4010 		mov	rax, QWORD PTR 16[rax]	# MEM[base: _528, offset: 16B], MEM[base: _528, offset: 16B]
 4860              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4861              		.loc 1 362 44 view .LVU1614
 4862 1e8d C442ABF7 		shrx	r9, r9, r10	# tmp871, source1, tmp1087
 4862      C9
 4863              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4864              		.loc 1 362 65 view .LVU1615
 4865 1e92 C46281F7 		shlx	r8, rax, r15	# tmp870, MEM[base: _528, offset: 16B], tmp1086
 4865      C0
 4866              	# sieve_extend.c:362:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 362:sieve_extend.c ****         copy_word += 2;
 4867              		.loc 1 362 54 view .LVU1616
 4868 1e97 4D09C8   		or	r8, r9	# tmp872, tmp871
 4869 1e9a 4C8944FB 		mov	QWORD PTR 8[rbx+rdi*8], r8	# MEM[base: bitstorage_67(D), index: copy_word_295, step: 8, offset
 4869      08
 4870              	.LVL240:
 363:sieve_extend.c ****         source_word += 2;
 4871              		.loc 1 363 9 is_stmt 1 view .LVU1617
 4872 1e9f 488D4120 		lea	rax, 32[rcx]	# ivtmp.350,
 4873              	# sieve_extend.c:363:         copy_word += 2;
 363:sieve_extend.c ****         source_word += 2;
GAS LISTING /tmp/ccIyIA9Z.s 			page 137


 4874              		.loc 1 363 19 is_stmt 0 view .LVU1618
 4875 1ea3 498D7C24 		lea	rdi, 4[r12]	# copy_word,
 4875      04
 364:sieve_extend.c ****         distance += 2;
 4876              		.loc 1 364 9 is_stmt 1 view .LVU1619
 4877              	.LVL241:
 365:sieve_extend.c ****     }
 4878              		.loc 1 365 9 view .LVU1620
 365:sieve_extend.c ****     }
 4879              		.loc 1 365 9 is_stmt 0 view .LVU1621
 4880              	.LBE463:
 357:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 4881              		.loc 1 357 11 is_stmt 1 view .LVU1622
 4882 1ea8 E940FEFF 		jmp	.L358	#
 4882      FF
 4883              	.LBE467:
 4884              	.LBE487:
 4885              		.cfi_endproc
 4886              	.LFE63:
 4888              		.section	.rodata.str1.1,"aMS",@progbits,1
 4889              	.LC5:
 4890 0000 25336A75 		.string	"%3ju "
 4890      2000
 4891              	.LC6:
 4892 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 4892      6E642025 
 4892      6A752070 
 4892      72696D65 
 4892      7320756E 
 4893              		.text
 4894 1ead 0F1F00   		.p2align 4
 4896              	show_primes.isra.0:
 4897              	.LVL242:
 4898              	.LFB78:
 534:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 4899              		.loc 1 534 13 view -0
 4900              		.cfi_startproc
 4901              	.LBB488:
 536:sieve_extend.c ****         primeCount++;
 4902              		.loc 1 536 30 view .LVU1624
 4903              	.LBE488:
 4904              	# sieve_extend.c:534: static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 534:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 4905              		.loc 1 534 13 is_stmt 0 view .LVU1625
 4906 1eb0 4157     		push	r15	#
 4907              		.cfi_def_cfa_offset 16
 4908              		.cfi_offset 15, -16
 4909 1eb2 4156     		push	r14	#
 4910              		.cfi_def_cfa_offset 24
 4911              		.cfi_offset 14, -24
 4912 1eb4 4155     		push	r13	#
 4913              		.cfi_def_cfa_offset 32
 4914              		.cfi_offset 13, -32
 4915 1eb6 4154     		push	r12	#
 4916              		.cfi_def_cfa_offset 40
 4917              		.cfi_offset 12, -40
 4918 1eb8 55       		push	rbp	#
GAS LISTING /tmp/ccIyIA9Z.s 			page 138


 4919              		.cfi_def_cfa_offset 48
 4920              		.cfi_offset 6, -48
 4921 1eb9 4889F5   		mov	rbp, rsi	# ISRA.95, tmp168
 4922 1ebc 53       		push	rbx	#
 4923              		.cfi_def_cfa_offset 56
 4924              		.cfi_offset 3, -56
 4925 1ebd 4883EC08 		sub	rsp, 8	#,
 4926              		.cfi_def_cfa_offset 64
 4927              	.LBB505:
 4928              	# sieve_extend.c:536:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 536:sieve_extend.c ****         primeCount++;
 4929              		.loc 1 536 44 view .LVU1626
 4930 1ec1 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.95_32(D)
 4931              	# sieve_extend.c:536:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 536:sieve_extend.c ****         primeCount++;
 4932              		.loc 1 536 5 view .LVU1627
 4933 1ec4 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 4934 1ec8 0F867601 		jbe	.L414	#,
 4934      0000
 4935              	# sieve_extend.c:538:         if (factor < maxFactor/2) {
 538:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 4936              		.loc 1 538 31 view .LVU1628
 4937 1ece 48D1EA   		shr	rdx	# maxFactor
 4938              	.LVL243:
 538:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 4939              		.loc 1 538 31 view .LVU1629
 4940 1ed1 4989FC   		mov	r12, rdi	# ISRA.94, tmp167
 4941 1ed4 4989D7   		mov	r15, rdx	# _4, maxFactor
 4942              	# sieve_extend.c:536:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 536:sieve_extend.c ****         primeCount++;
 4943              		.loc 1 536 20 view .LVU1630
 4944 1ed7 BB010000 		mov	ebx, 1	# factor,
 4944      00
 4945              	.LBE505:
 4946              	# sieve_extend.c:535:     counter_t primeCount = 1;    // We already have 2
 535:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 4947              		.loc 1 535 15 view .LVU1631
 4948 1edc 41BE0100 		mov	r14d, 1	# primeCount,
 4948      0000
 4949              	.LBB506:
 4950              	.LBB489:
 4951              	.LBB490:
 4952              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 4953              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
GAS LISTING /tmp/ccIyIA9Z.s 			page 139


  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
GAS LISTING /tmp/ccIyIA9Z.s 			page 140


  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 4954              		.loc 3 107 10 view .LVU1632
 4955 1ee2 49BDCDCC 		movabs	r13, -3689348814741910323	# tmp136,
 4955      CCCCCCCC 
 4955      CCCC
 4956              	.LVL244:
 4957 1eec 0F1F4000 		.p2align 4,,10
 4958              		.p2align 3
 4959              	.L413:
 4960              		.loc 3 107 10 view .LVU1633
 4961              	.LBE490:
 4962              	.LBE489:
 537:sieve_extend.c ****         if (factor < maxFactor/2) {
 4963              		.loc 1 537 9 is_stmt 1 view .LVU1634
 4964              	# sieve_extend.c:537:         primeCount++;
 537:sieve_extend.c ****         if (factor < maxFactor/2) {
 4965              		.loc 1 537 19 is_stmt 0 view .LVU1635
 4966 1ef0 49FFC6   		inc	r14	# primeCount
 4967              	.LVL245:
 538:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 4968              		.loc 1 538 9 is_stmt 1 view .LVU1636
GAS LISTING /tmp/ccIyIA9Z.s 			page 141


 4969              	# sieve_extend.c:538:         if (factor < maxFactor/2) {
 538:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 4970              		.loc 1 538 12 is_stmt 0 view .LVU1637
 4971 1ef3 4939DF   		cmp	r15, rbx	# _4, factor
 4972 1ef6 0F87FC00 		ja	.L437	#,
 4972      0000
 4973              	.L409:
 536:sieve_extend.c ****         primeCount++;
 4974              		.loc 1 536 52 is_stmt 1 view .LVU1638
 4975              	.LVL246:
 4976              	# sieve_extend.c:536:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 536:sieve_extend.c ****         primeCount++;
 4977              		.loc 1 536 61 is_stmt 0 view .LVU1639
 4978 1efc 4D8B0424 		mov	r8, QWORD PTR [r12]	# _11, *ISRA.94_33(D)
 4979 1f00 48FFC3   		inc	rbx	# factor
 4980              	.LVL247:
 4981              	.L436:
 4982              	.LBB495:
 4983              	.LBI495:
 121:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 4984              		.loc 1 121 25 is_stmt 1 view .LVU1640
 4985              	.LBB496:
 122:sieve_extend.c ****     return index;
 4986              		.loc 1 122 5 view .LVU1641
 122:sieve_extend.c ****     return index;
 4987              		.loc 1 122 11 view .LVU1642
 4988              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 4989              		.loc 1 122 23 is_stmt 0 view .LVU1643
 4990 1f03 4889D9   		mov	rcx, rbx	# tmp124, factor
 4991 1f06 48C1E906 		shr	rcx, 6	# tmp124,
 4992              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 4993              		.loc 1 122 12 view .LVU1644
 4994 1f0a 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 4995              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 4996              		.loc 1 122 11 view .LVU1645
 4997 1f0e 490FA3D9 		bt	r9, rbx	# *_39, factor
 4998 1f12 0F83A800 		jnc	.L411	#,
 4998      0000
 122:sieve_extend.c ****     return index;
 4999              		.loc 1 122 60 is_stmt 1 view .LVU1646
 5000              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5001              		.loc 1 122 65 is_stmt 0 view .LVU1647
 5002 1f18 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 5003              	.LVL248:
 5004              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5005              		.loc 1 122 23 view .LVU1648
 5006 1f1c 4D89D3   		mov	r11, r10	# tmp129, factor
 5007 1f1f 49C1EB06 		shr	r11, 6	# tmp129,
 5008              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5009              		.loc 1 122 12 view .LVU1649
 5010 1f23 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
GAS LISTING /tmp/ccIyIA9Z.s 			page 142


 5011              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5012              		.loc 1 122 65 view .LVU1650
 5013 1f27 4C89D3   		mov	rbx, r10	# factor, tmp138
 122:sieve_extend.c ****     return index;
 5014              		.loc 1 122 11 is_stmt 1 view .LVU1651
 5015 1f2a 4C0FA3D0 		bt	rax, r10	# *_16, factor
 5016 1f2e 0F838C00 		jnc	.L411	#,
 5016      0000
 122:sieve_extend.c ****     return index;
 5017              		.loc 1 122 60 view .LVU1652
 5018              	.LVL249:
 5019              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5020              		.loc 1 122 65 is_stmt 0 view .LVU1653
 5021 1f34 48FFC3   		inc	rbx	# factor
 5022              	.LVL250:
 122:sieve_extend.c ****     return index;
 5023              		.loc 1 122 11 is_stmt 1 view .LVU1654
 5024              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5025              		.loc 1 122 23 is_stmt 0 view .LVU1655
 5026 1f37 4889DA   		mov	rdx, rbx	# tmp139, factor
 5027 1f3a 48C1EA06 		shr	rdx, 6	# tmp139,
 5028              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5029              		.loc 1 122 12 view .LVU1656
 5030 1f3e 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 5031              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5032              		.loc 1 122 11 view .LVU1657
 5033 1f42 480FA3DF 		bt	rdi, rbx	# *_16, factor
 5034 1f46 7378     		jnc	.L411	#,
 122:sieve_extend.c ****     return index;
 5035              		.loc 1 122 60 is_stmt 1 view .LVU1658
 5036              	.LVL251:
 5037              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5038              		.loc 1 122 65 is_stmt 0 view .LVU1659
 5039 1f48 498D5A02 		lea	rbx, 2[r10]	# factor,
 5040              	.LVL252:
 122:sieve_extend.c ****     return index;
 5041              		.loc 1 122 11 is_stmt 1 view .LVU1660
 5042              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5043              		.loc 1 122 23 is_stmt 0 view .LVU1661
 5044 1f4c 4889D9   		mov	rcx, rbx	# tmp143, factor
 5045 1f4f 48C1E906 		shr	rcx, 6	# tmp143,
 5046              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5047              		.loc 1 122 12 view .LVU1662
 5048 1f53 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 5049              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5050              		.loc 1 122 11 view .LVU1663
 5051 1f57 490FA3D9 		bt	r9, rbx	# *_16, factor
 5052 1f5b 7363     		jnc	.L411	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 143


 122:sieve_extend.c ****     return index;
 5053              		.loc 1 122 60 is_stmt 1 view .LVU1664
 5054              	.LVL253:
 5055              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5056              		.loc 1 122 65 is_stmt 0 view .LVU1665
 5057 1f5d 498D5A03 		lea	rbx, 3[r10]	# factor,
 5058              	.LVL254:
 122:sieve_extend.c ****     return index;
 5059              		.loc 1 122 11 is_stmt 1 view .LVU1666
 5060              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5061              		.loc 1 122 23 is_stmt 0 view .LVU1667
 5062 1f61 4989DB   		mov	r11, rbx	# tmp147, factor
 5063 1f64 49C1EB06 		shr	r11, 6	# tmp147,
 5064              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5065              		.loc 1 122 12 view .LVU1668
 5066 1f68 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 5067              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5068              		.loc 1 122 11 view .LVU1669
 5069 1f6c 480FA3D8 		bt	rax, rbx	# *_16, factor
 5070 1f70 734E     		jnc	.L411	#,
 122:sieve_extend.c ****     return index;
 5071              		.loc 1 122 60 is_stmt 1 view .LVU1670
 5072              	.LVL255:
 5073              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5074              		.loc 1 122 65 is_stmt 0 view .LVU1671
 5075 1f72 498D5A04 		lea	rbx, 4[r10]	# factor,
 5076              	.LVL256:
 122:sieve_extend.c ****     return index;
 5077              		.loc 1 122 11 is_stmt 1 view .LVU1672
 5078              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5079              		.loc 1 122 23 is_stmt 0 view .LVU1673
 5080 1f76 4889DA   		mov	rdx, rbx	# tmp151, factor
 5081 1f79 48C1EA06 		shr	rdx, 6	# tmp151,
 5082              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5083              		.loc 1 122 12 view .LVU1674
 5084 1f7d 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 5085              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5086              		.loc 1 122 11 view .LVU1675
 5087 1f81 480FA3DF 		bt	rdi, rbx	# *_16, factor
 5088 1f85 7339     		jnc	.L411	#,
 122:sieve_extend.c ****     return index;
 5089              		.loc 1 122 60 is_stmt 1 view .LVU1676
 5090              	.LVL257:
 5091              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5092              		.loc 1 122 65 is_stmt 0 view .LVU1677
 5093 1f87 498D5A05 		lea	rbx, 5[r10]	# factor,
 5094              	.LVL258:
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccIyIA9Z.s 			page 144


 5095              		.loc 1 122 11 is_stmt 1 view .LVU1678
 5096              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5097              		.loc 1 122 23 is_stmt 0 view .LVU1679
 5098 1f8b 4889D9   		mov	rcx, rbx	# tmp155, factor
 5099 1f8e 48C1E906 		shr	rcx, 6	# tmp155,
 5100              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5101              		.loc 1 122 12 view .LVU1680
 5102 1f92 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 5103              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5104              		.loc 1 122 11 view .LVU1681
 5105 1f96 490FA3D9 		bt	r9, rbx	# *_16, factor
 5106 1f9a 7324     		jnc	.L411	#,
 122:sieve_extend.c ****     return index;
 5107              		.loc 1 122 60 is_stmt 1 view .LVU1682
 5108              	.LVL259:
 5109              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5110              		.loc 1 122 65 is_stmt 0 view .LVU1683
 5111 1f9c 498D5A06 		lea	rbx, 6[r10]	# factor,
 5112              	.LVL260:
 122:sieve_extend.c ****     return index;
 5113              		.loc 1 122 11 is_stmt 1 view .LVU1684
 5114              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5115              		.loc 1 122 23 is_stmt 0 view .LVU1685
 5116 1fa0 4989DB   		mov	r11, rbx	# tmp159, factor
 5117 1fa3 49C1EB06 		shr	r11, 6	# tmp159,
 5118              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5119              		.loc 1 122 12 view .LVU1686
 5120 1fa7 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 5121              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5122              		.loc 1 122 11 view .LVU1687
 5123 1fab 480FA3D8 		bt	rax, rbx	# *_16, factor
 5124 1faf 730F     		jnc	.L411	#,
 122:sieve_extend.c ****     return index;
 5125              		.loc 1 122 60 is_stmt 1 view .LVU1688
 5126              	.LVL261:
 5127              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 5128              		.loc 1 122 65 is_stmt 0 view .LVU1689
 5129 1fb1 498D5A07 		lea	rbx, 7[r10]	# factor,
 5130              	.LVL262:
 122:sieve_extend.c ****     return index;
 5131              		.loc 1 122 11 is_stmt 1 view .LVU1690
 5132 1fb5 E949FFFF 		jmp	.L436	#
 5132      FF
 5133 1fba 660F1F44 		.p2align 4,,10
 5133      0000
 5134              		.p2align 3
 5135              	.L411:
 5136              	.LVL263:
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccIyIA9Z.s 			page 145


 5137              		.loc 1 122 11 is_stmt 0 view .LVU1691
 5138              	.LBE496:
 5139              	.LBE495:
 536:sieve_extend.c ****         primeCount++;
 5140              		.loc 1 536 30 is_stmt 1 view .LVU1692
 5141              	# sieve_extend.c:536:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 536:sieve_extend.c ****         primeCount++;
 5142              		.loc 1 536 5 is_stmt 0 view .LVU1693
 5143 1fc0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 5144 1fc3 0F8227FF 		jb	.L413	#,
 5144      FFFF
 5145              	.LVL264:
 5146              	.L408:
 536:sieve_extend.c ****         primeCount++;
 5147              		.loc 1 536 5 view .LVU1694
 5148              	.LBE506:
 543:sieve_extend.c **** }
 5149              		.loc 1 543 5 is_stmt 1 view .LVU1695
 5150              	.LBB507:
 5151              	.LBI507:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 5152              		.loc 3 105 1 view .LVU1696
 5153              	.LBB508:
 5154              		.loc 3 107 3 view .LVU1697
 5155              	.LBE508:
 5156              	.LBE507:
 5157              	# sieve_extend.c:544: }
 544:sieve_extend.c **** 
 5158              		.loc 1 544 1 is_stmt 0 view .LVU1698
 5159 1fc9 4883C408 		add	rsp, 8	#,
 5160              		.cfi_remember_state
 5161              		.cfi_def_cfa_offset 56
 5162 1fcd 5B       		pop	rbx	#
 5163              		.cfi_def_cfa_offset 48
 5164 1fce 5D       		pop	rbp	#
 5165              		.cfi_def_cfa_offset 40
 5166 1fcf 415C     		pop	r12	#
 5167              		.cfi_def_cfa_offset 32
 5168 1fd1 415D     		pop	r13	#
 5169              		.cfi_def_cfa_offset 24
 5170              	.LBB512:
 5171              	.LBB509:
 5172              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5173              		.loc 3 107 10 view .LVU1699
 5174 1fd3 4C89F2   		mov	rdx, r14	#, primeCount
 5175              	.LBE509:
 5176              	.LBE512:
 5177              	# sieve_extend.c:544: }
 544:sieve_extend.c **** 
 5178              		.loc 1 544 1 view .LVU1700
 5179 1fd6 415E     		pop	r14	#
 5180              		.cfi_def_cfa_offset 16
 5181              	# sieve_extend.c:543:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t
 543:sieve_extend.c **** }
 5182              		.loc 1 543 5 view .LVU1701
 5183 1fd8 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 5183      01
GAS LISTING /tmp/ccIyIA9Z.s 			page 146


 5184              	.LBB513:
 5185              	.LBB510:
 5186              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5187              		.loc 3 107 10 view .LVU1702
 5188 1fdd BF010000 		mov	edi, 1	#,
 5188      00
 5189 1fe2 488D3500 		lea	rsi, .LC6[rip]	#,
 5189      000000
 5190 1fe9 31C0     		xor	eax, eax	#
 5191              	.LBE510:
 5192              	.LBE513:
 5193              	# sieve_extend.c:544: }
 544:sieve_extend.c **** 
 5194              		.loc 1 544 1 view .LVU1703
 5195 1feb 415F     		pop	r15	#
 5196              		.cfi_def_cfa_offset 8
 5197              	.LBB514:
 5198              	.LBB511:
 5199              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5200              		.loc 3 107 10 view .LVU1704
 5201 1fed E9000000 		jmp	__printf_chk@PLT	#
 5201      00
 5202              	.LVL265:
 5203              		.p2align 4,,10
 5204 1ff2 660F1F44 		.p2align 3
 5204      0000
 5205              	.L437:
 5206              		.cfi_restore_state
 5207              		.loc 3 107 10 view .LVU1705
 5208              	.LBE511:
 5209              	.LBE514:
 5210              	.LBB515:
 539:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 5211              		.loc 1 539 13 is_stmt 1 view .LVU1706
 5212              	.LBB497:
 5213              	.LBI489:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 5214              		.loc 3 105 1 view .LVU1707
 5215              	.LBB491:
 5216              		.loc 3 107 3 view .LVU1708
 5217              	.LBE491:
 5218              	.LBE497:
 5219              	# sieve_extend.c:539:             printf("%3ju ",(uintmax_t)factor*2+1);
 539:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 5220              		.loc 1 539 13 is_stmt 0 view .LVU1709
 5221 1ff8 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 5221      01
 5222              	.LBB498:
 5223              	.LBB492:
 5224              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5225              		.loc 3 107 10 view .LVU1710
 5226 1ffd BF010000 		mov	edi, 1	#,
 5226      00
 5227 2002 488D3500 		lea	rsi, .LC5[rip]	#,
 5227      000000
 5228 2009 31C0     		xor	eax, eax	#
 5229 200b E8000000 		call	__printf_chk@PLT	#
GAS LISTING /tmp/ccIyIA9Z.s 			page 147


 5229      00
 5230              	.LVL266:
 5231              		.loc 3 107 10 view .LVU1711
 5232              	.LBE492:
 5233              	.LBE498:
 540:sieve_extend.c ****         }
 5234              		.loc 1 540 13 is_stmt 1 view .LVU1712
 5235              	.LBB499:
 5236              	.LBB493:
 5237              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5238              		.loc 3 107 10 is_stmt 0 view .LVU1713
 5239 2010 4C89F0   		mov	rax, r14	# tmp120, primeCount
 5240 2013 490FAFC5 		imul	rax, r13	# tmp120, tmp136
 5241              	.LBE493:
 5242              	.LBE499:
 5243              	# sieve_extend.c:540:             if (primeCount % 10 == 0) printf("\n");
 540:sieve_extend.c ****         }
 5244              		.loc 1 540 16 view .LVU1714
 5245 2017 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 5245      99999999 
 5245      9919
 5246              	.LBB500:
 5247              	.LBB494:
 5248              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5249              		.loc 3 107 10 view .LVU1715
 5250 2021 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 5250      D001
 5251              	.LBE494:
 5252              	.LBE500:
 5253              	# sieve_extend.c:540:             if (primeCount % 10 == 0) printf("\n");
 540:sieve_extend.c ****         }
 5254              		.loc 1 540 16 view .LVU1716
 5255 2027 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 5256 202a 760C     		jbe	.L410	#,
 5257              	.L435:
 5258 202c 488B7500 		mov	rsi, QWORD PTR 0[rbp]	# prephitmp_86, *ISRA.95_32(D)
 5259              	.LBB501:
 5260              	.LBB502:
 5261              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 5262              		.loc 3 107 10 view .LVU1717
 5263 2030 E9C7FEFF 		jmp	.L409	#
 5263      FF
 5264              		.p2align 4,,10
 5265 2035 0F1F00   		.p2align 3
 5266              	.L410:
 5267              	.LBE502:
 5268              	.LBE501:
 540:sieve_extend.c ****         }
 5269              		.loc 1 540 39 is_stmt 1 view .LVU1718
 5270              	.LVL267:
 5271              	.LBB504:
 5272              	.LBI501:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 5273              		.loc 3 105 1 view .LVU1719
 5274              	.LBB503:
 5275              		.loc 3 107 3 view .LVU1720
 5276              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccIyIA9Z.s 			page 148


 5277              		.loc 3 107 10 is_stmt 0 view .LVU1721
 5278 2038 BF0A0000 		mov	edi, 10	#,
 5278      00
 5279 203d E8000000 		call	putchar@PLT	#
 5279      00
 5280              	.LVL268:
 5281 2042 EBE8     		jmp	.L435	#
 5282              	.LVL269:
 5283              	.L414:
 5284              		.loc 3 107 10 view .LVU1722
 5285              	.LBE503:
 5286              	.LBE504:
 5287              	.LBE515:
 5288              	# sieve_extend.c:535:     counter_t primeCount = 1;    // We already have 2
 535:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 5289              		.loc 1 535 15 view .LVU1723
 5290 2044 41BE0100 		mov	r14d, 1	# primeCount,
 5290      0000
 5291 204a E97AFFFF 		jmp	.L408	#
 5291      FF
 5292              		.cfi_endproc
 5293              	.LFE78:
 5295 204f 90       		.p2align 4
 5297              	sieve_shake:
 5298              	.LVL270:
 5299              	.LFB67:
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 5300              		.loc 1 506 88 is_stmt 1 view -0
 5301              		.cfi_startproc
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 5302              		.loc 1 506 88 is_stmt 0 view .LVU1725
 5303 2050 55       		push	rbp	#
 5304              		.cfi_def_cfa_offset 16
 5305              		.cfi_offset 6, -16
 5306 2051 4889E5   		mov	rbp, rsp	#,
 5307              		.cfi_def_cfa_register 6
 5308 2054 4157     		push	r15	#
 5309 2056 4156     		push	r14	#
 5310 2058 4155     		push	r13	#
 5311 205a 4154     		push	r12	#
 5312 205c 53       		push	rbx	#
 5313              		.cfi_offset 15, -24
 5314              		.cfi_offset 14, -32
 5315              		.cfi_offset 13, -40
 5316              		.cfi_offset 12, -48
 5317              		.cfi_offset 3, -56
 5318 205d 4889FB   		mov	rbx, rdi	# maxints, tmp1135
 5319              	.LBB589:
 5320              	.LBB590:
 5321              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5322              		.loc 1 109 86 view .LVU1726
 5323 2060 4989DE   		mov	r14, rbx	# _2, maxints
 5324              	.LBE590:
 5325              	.LBE589:
 5326              	# sieve_extend.c:506: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
GAS LISTING /tmp/ccIyIA9Z.s 			page 149


 5327              		.loc 1 506 88 view .LVU1727
 5328 2063 4883E4E0 		and	rsp, -32	#,
 5329 2067 4881ECC0 		sub	rsp, 192	#,
 5329      000000
 5330              	# sieve_extend.c:506: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 5331              		.loc 1 506 88 view .LVU1728
 5332 206e 48897424 		mov	QWORD PTR 56[rsp], rsi	# %sfp, tmp1136
 5332      38
 5333              	.LBB594:
 5334              	.LBB591:
 5335              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5336              		.loc 1 109 86 view .LVU1729
 5337 2073 49D1EE   		shr	r14	# _2
 5338              	# sieve_extend.c:108:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5339              		.loc 1 108 29 view .LVU1730
 5340 2076 BE180000 		mov	esi, 24	#,
 5340      00
 5341              	.LVL271:
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5342              		.loc 1 108 29 view .LVU1731
 5343 207b BF080000 		mov	edi, 8	#,
 5343      00
 5344              	.LVL272:
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5345              		.loc 1 108 29 view .LVU1732
 5346              	.LBE591:
 5347              	.LBE594:
 5348              	# sieve_extend.c:506: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 5349              		.loc 1 506 88 view .LVU1733
 5350 2080 64488B04 		mov	rax, QWORD PTR fs:40	# tmp1488, MEM[(<address-space-1> long unsigned int *)40B]
 5350      25280000 
 5350      00
 5351 2089 48898424 		mov	QWORD PTR 184[rsp], rax	# D.7097, tmp1488
 5351      B8000000 
 5352 2091 31C0     		xor	eax, eax	# tmp1488
 507:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 5353              		.loc 1 507 5 is_stmt 1 view .LVU1734
 5354              	.LVL273:
 5355              	.LBB595:
 5356              	.LBI589:
 107:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 5357              		.loc 1 107 24 view .LVU1735
 5358              	.LBB592:
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5359              		.loc 1 108 5 view .LVU1736
 5360              	# sieve_extend.c:108:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5361              		.loc 1 108 29 is_stmt 0 view .LVU1737
 5362 2093 E8000000 		call	aligned_alloc@PLT	#
 5362      00
 5363              	.LVL274:
 5364              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
GAS LISTING /tmp/ccIyIA9Z.s 			page 150


 5365              		.loc 1 109 86 view .LVU1738
 5366 2098 498DB600 		lea	rsi, 1024[r14]	# tmp521,
 5366      040000
 5367              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5368              		.loc 1 109 78 view .LVU1739
 5369 209f 48C1EE0A 		shr	rsi, 10	# tmp522,
 5370              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5371              		.loc 1 109 25 view .LVU1740
 5372 20a3 48C1E607 		sal	rsi, 7	# tmp523,
 5373 20a7 BF800000 		mov	edi, 128	#,
 5373      00
 5374              	# sieve_extend.c:108:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 108:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 5375              		.loc 1 108 29 view .LVU1741
 5376 20ac 4989C5   		mov	r13, rax	# <retval>, tmp1137
 5377 20af 48894424 		mov	QWORD PTR 16[rsp], rax	# %sfp, <retval>
 5377      10
 5378              	.LVL275:
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5379              		.loc 1 109 5 is_stmt 1 view .LVU1742
 5380              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5381              		.loc 1 109 86 is_stmt 0 view .LVU1743
 5382 20b4 4C897424 		mov	QWORD PTR 112[rsp], r14	# %sfp, _2
 5382      70
 5383              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5384              		.loc 1 109 25 view .LVU1744
 5385 20b9 E8000000 		call	aligned_alloc@PLT	#
 5385      00
 5386              	.LVL276:
 5387              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5388              		.loc 1 109 23 view .LVU1745
 5389 20be 49894500 		mov	QWORD PTR 0[r13], rax	# sieve_96->bitstorage, _101
 110:sieve_extend.c ****     sieve->size     = size;
 5390              		.loc 1 110 5 is_stmt 1 view .LVU1746
 5391              	# sieve_extend.c:110:     sieve->bits     = size >> 1;
 110:sieve_extend.c ****     sieve->size     = size;
 5392              		.loc 1 110 21 is_stmt 0 view .LVU1747
 5393 20c2 4D897508 		mov	QWORD PTR 8[r13], r14	# sieve_96->bits, _2
 111:sieve_extend.c ****     return sieve;
 5394              		.loc 1 111 5 is_stmt 1 view .LVU1748
 5395              	# sieve_extend.c:111:     sieve->size     = size;
 111:sieve_extend.c ****     return sieve;
 5396              		.loc 1 111 21 is_stmt 0 view .LVU1749
 5397 20c6 49895D10 		mov	QWORD PTR 16[r13], rbx	# sieve_96->size, maxints
 112:sieve_extend.c **** }
 5398              		.loc 1 112 5 is_stmt 1 view .LVU1750
 5399              	.LVL277:
 112:sieve_extend.c **** }
 5400              		.loc 1 112 5 is_stmt 0 view .LVU1751
 5401              	.LBE592:
 5402              	.LBE595:
 508:sieve_extend.c **** 
GAS LISTING /tmp/ccIyIA9Z.s 			page 151


 5403              		.loc 1 508 5 is_stmt 1 view .LVU1752
 510:sieve_extend.c **** 
 5404              		.loc 1 510 5 view .LVU1753
 513:sieve_extend.c **** 
 5405              		.loc 1 513 5 view .LVU1754
 5406              	.LBB596:
 5407              	.LBI596:
 466:sieve_extend.c ****     bitword_t* bitstorage      = sieve->bitstorage;
 5408              		.loc 1 466 21 view .LVU1755
 5409              	.LBB597:
 467:sieve_extend.c ****     register counter_t prime   = 0;
 5410              		.loc 1 467 5 view .LVU1756
 468:sieve_extend.c ****     counter_t patternsize_bits = 1;
 5411              		.loc 1 468 5 view .LVU1757
 469:sieve_extend.c ****     counter_t pattern_start    = 0;
 5412              		.loc 1 469 5 view .LVU1758
 470:sieve_extend.c ****     counter_t range_stop       = block_start;
 5413              		.loc 1 470 5 view .LVU1759
 471:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 5414              		.loc 1 471 5 view .LVU1760
 472:sieve_extend.c **** 
 5415              		.loc 1 472 5 view .LVU1761
 474:sieve_extend.c ****     
 5416              		.loc 1 474 5 view .LVU1762
 5417              	# sieve_extend.c:474:     sieve->bitstorage[wordindex(block_start)] = SAFE_ZERO; // only the first 
 474:sieve_extend.c ****     
 5418              		.loc 1 474 47 is_stmt 0 view .LVU1763
 5419 20ca 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_101],
 5419      000000
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 5420              		.loc 1 476 5 is_stmt 1 view .LVU1764
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 5421              		.loc 1 476 11 view .LVU1765
 5422              	.LBE597:
 5423              	.LBE596:
 5424              	.LBB678:
 5425              	.LBB593:
 5426              	# sieve_extend.c:109:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 5427              		.loc 1 109 25 is_stmt 0 view .LVU1766
 5428 20d1 4989C7   		mov	r15, rax	# _101, tmp1138
 5429              	.LBE593:
 5430              	.LBE678:
 5431              	.LBB679:
 5432              	.LBB673:
 5433              	# sieve_extend.c:476:     for (;range_stop < block_stop;) {
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 5434              		.loc 1 476 5 view .LVU1767
 5435 20d4 4D85F6   		test	r14, r14	# _2
 5436 20d7 0F84C81C 		je	.L1075	#,
 5436      0000
 5437              	.LBB598:
 5438              	# sieve_extend.c:477:         prime = searchBitFalse(bitstorage, prime+1);
 477:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 5439              		.loc 1 477 17 view .LVU1768
 5440 20dd 48C74424 		mov	QWORD PTR 104[rsp], 1	# %sfp,
 5440      68010000 
GAS LISTING /tmp/ccIyIA9Z.s 			page 152


 5440      00
 5441              	.LBE598:
 5442              	# sieve_extend.c:470:     counter_t pattern_start    = 0;
 470:sieve_extend.c ****     counter_t range_stop       = block_start;
 5443              		.loc 1 470 15 view .LVU1769
 5444 20e6 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
 5444      60000000 
 5444      00
 5445              	# sieve_extend.c:469:     counter_t patternsize_bits = 1;
 469:sieve_extend.c ****     counter_t pattern_start    = 0;
 5446              		.loc 1 469 15 view .LVU1770
 5447 20ef 41BE0100 		mov	r14d, 1	# patternsize_bits,
 5447      0000
 5448              	.LVL278:
 469:sieve_extend.c ****     counter_t pattern_start    = 0;
 5449              		.loc 1 469 15 view .LVU1771
 5450 20f5 488B7424 		mov	rsi, QWORD PTR 104[rsp]	# index, %sfp
 5450      68
 5451              	# sieve_extend.c:472:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 472:sieve_extend.c **** 
 5452              		.loc 1 472 18 view .LVU1772
 5453 20fa 31C0     		xor	eax, eax	# block$pattern_size
 5454              	.LVL279:
 472:sieve_extend.c **** 
 5455              		.loc 1 472 18 view .LVU1773
 5456 20fc 31D2     		xor	edx, edx	# block$pattern_start
 5457              	# sieve_extend.c:468:     register counter_t prime   = 0;
 468:sieve_extend.c ****     counter_t patternsize_bits = 1;
 5458              		.loc 1 468 24 view .LVU1774
 5459 20fe 31C9     		xor	ecx, ecx	# prime
 5460              	.LVL280:
 5461              		.p2align 4,,10
 5462              		.p2align 3
 5463              	.L439:
 5464              	.LBB666:
 5465              	.LBB599:
 5466              	.LBB600:
 123:sieve_extend.c **** }
 5467              		.loc 1 123 5 is_stmt 1 view .LVU1775
 123:sieve_extend.c **** }
 5468              		.loc 1 123 5 is_stmt 0 view .LVU1776
 5469              	.LBE600:
 5470              	.LBE599:
 478:sieve_extend.c ****         if unlikely(start > block_stop) break;
 5471              		.loc 1 478 9 is_stmt 1 view .LVU1777
 5472              	# sieve_extend.c:478:         counter_t start = prime * prime * 2 + prime * 2;
 478:sieve_extend.c ****         if unlikely(start > block_stop) break;
 5473              		.loc 1 478 45 is_stmt 0 view .LVU1778
 5474 2100 4C8D6E01 		lea	r13, 1[rsi]	# index,
 5475 2104 4C8D2436 		lea	r12, [rsi+rsi]	# _888,
 5476              	# sieve_extend.c:478:         counter_t start = prime * prime * 2 + prime * 2;
 478:sieve_extend.c ****         if unlikely(start > block_stop) break;
 5477              		.loc 1 478 19 view .LVU1779
 5478 2108 4C89EB   		mov	rbx, r13	# index, index
 5479 210b 490FAFDC 		imul	rbx, r12	# index, _888
 5480              	.LVL281:
 479:sieve_extend.c **** 
GAS LISTING /tmp/ccIyIA9Z.s 			page 153


 5481              		.loc 1 479 9 is_stmt 1 view .LVU1780
 5482              	# sieve_extend.c:479:         if unlikely(start > block_stop) break;
 479:sieve_extend.c **** 
 5483              		.loc 1 479 12 is_stmt 0 view .LVU1781
 5484 210f 483B5C24 		cmp	rbx, QWORD PTR 112[rsp]	# index, %sfp
 5484      70
 5485 2114 0F87580C 		ja	.L536	#,
 5485      0000
 481:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 5486              		.loc 1 481 9 is_stmt 1 view .LVU1782
 5487              	# sieve_extend.c:481:         const counter_t step  = prime * 2 + 1;
 481:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 5488              		.loc 1 481 25 is_stmt 0 view .LVU1783
 5489 211a 49FFC4   		inc	r12	# step
 5490              	.LVL282:
 482:sieve_extend.c **** 
 5491              		.loc 1 482 9 is_stmt 1 view .LVU1784
 5492              	# sieve_extend.c:482:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 482:sieve_extend.c **** 
 5493              		.loc 1 482 12 is_stmt 0 view .LVU1785
 5494 211d 4D85ED   		test	r13, r13	# index
 5495 2120 7516     		jne	.L444	#,
 482:sieve_extend.c **** 
 5496              		.loc 1 482 41 is_stmt 1 view .LVU1786
 5497              	# sieve_extend.c:482:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 482:sieve_extend.c **** 
 5498              		.loc 1 482 102 is_stmt 0 view .LVU1787
 5499 2122 48C7C0FF 		mov	rax, -1	# tmp538,
 5499      FFFFFF
 5500 2129 31D2     		xor	edx, edx	# tmp537
 5501 212b 49F7F4   		div	r12	# step
 5502              	# sieve_extend.c:482:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 482:sieve_extend.c **** 
 5503              		.loc 1 482 47 view .LVU1788
 5504 212e 48C7C3FE 		mov	rbx, -2	# tmp539,
 5504      FFFFFF
 5505              	.LVL283:
 482:sieve_extend.c **** 
 5506              		.loc 1 482 47 view .LVU1789
 5507 2135 4829D3   		sub	rbx, rdx	# index, tmp537
 5508              	.LVL284:
 5509              	.L444:
 484:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 5510              		.loc 1 484 9 is_stmt 1 view .LVU1790
 5511              	# sieve_extend.c:484:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 484:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 5512              		.loc 1 484 53 is_stmt 0 view .LVU1791
 5513 2138 4C89F7   		mov	rdi, r14	# _69, patternsize_bits
 5514 213b 490FAFFC 		imul	rdi, r12	# _69, step
 5515 213f 48897C24 		mov	QWORD PTR 88[rsp], rdi	# %sfp, _69
 5515      58
 5516              	# sieve_extend.c:484:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 484:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 5517              		.loc 1 484 60 view .LVU1792
 5518 2144 4801FF   		add	rdi, rdi	# _70
 5519 2147 48897C24 		mov	QWORD PTR 120[rsp], rdi	# %sfp, _70
 5519      78
GAS LISTING /tmp/ccIyIA9Z.s 			page 154


 5520              	.LVL285:
 485:sieve_extend.c ****         block.pattern_start = pattern_start;
 5521              		.loc 1 485 9 is_stmt 1 view .LVU1793
 486:sieve_extend.c ****         if unlikely(range_stop > block_stop) break;//return block; //range_stop = block_stop;
 5522              		.loc 1 486 9 view .LVU1794
 487:sieve_extend.c **** 
 5523              		.loc 1 487 9 view .LVU1795
 5524              	# sieve_extend.c:487:         if unlikely(range_stop > block_stop) break;//return block; //range_st
 487:sieve_extend.c **** 
 5525              		.loc 1 487 12 is_stmt 0 view .LVU1796
 5526 214c 483B7C24 		cmp	rdi, QWORD PTR 112[rsp]	# _70, %sfp
 5526      70
 5527 2151 0F870219 		ja	.L923	#,
 5527      0000
 489:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 5528              		.loc 1 489 9 is_stmt 1 view .LVU1797
 5529              	# sieve_extend.c:489:         if likely(patternsize_bits>1) {
 489:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 5530              		.loc 1 489 12 is_stmt 0 view .LVU1798
 5531 2157 4983FE01 		cmp	r14, 1	# patternsize_bits,
 5532 215b 0F860219 		jbe	.L537	#,
 5532      0000
 490:sieve_extend.c ****             continuePattern(bitstorage, pattern_start, patternsize_bits, range_stop);
 5533              		.loc 1 490 13 is_stmt 1 view .LVU1799
 5534              	.LVL286:
 491:sieve_extend.c ****         }
 5535              		.loc 1 491 13 view .LVU1800
 5536              	.LBB602:
 5537              	.LBI602:
 419:sieve_extend.c ****     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorage, source_start, size,
 5538              		.loc 1 419 20 view .LVU1801
 5539              	.LBB603:
 420:sieve_extend.c **** 
 5540              		.loc 1 420 5 view .LVU1802
 5541              	# sieve_extend.c:420:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 420:sieve_extend.c **** 
 5542              		.loc 1 420 8 is_stmt 0 view .LVU1803
 5543 2161 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 5544 2165 0F86EF0A 		jbe	.L1076	#,
 5544      0000
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 5545              		.loc 1 422 5 is_stmt 1 view .LVU1804
 5546              	# sieve_extend.c:422:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 5547              		.loc 1 422 35 is_stmt 0 view .LVU1805
 5548 216b 4F8D0C36 		lea	r9, [r14+r14]	# tmp540,
 5549              	# sieve_extend.c:423:     const bitshift_t source_bit = bitindex_calc(source_start);
 423:sieve_extend.c **** 
 5550              		.loc 1 423 22 view .LVU1806
 5551 216f 4D89F2   		mov	r10, r14	# source_bit, patternsize_bits
 5552              	# sieve_extend.c:422:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 5553              		.loc 1 422 22 view .LVU1807
 5554 2172 4183E13F 		and	r9d, 63	# copy_bit,
 5555              	.LVL287:
 423:sieve_extend.c **** 
 5556              		.loc 1 423 5 is_stmt 1 view .LVU1808
GAS LISTING /tmp/ccIyIA9Z.s 			page 155


 5557              	# sieve_extend.c:423:     const bitshift_t source_bit = bitindex_calc(source_start);
 423:sieve_extend.c **** 
 5558              		.loc 1 423 22 is_stmt 0 view .LVU1809
 5559 2176 4183E23F 		and	r10d, 63	# source_bit,
 5560              	.LVL288:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 5561              		.loc 1 425 5 is_stmt 1 view .LVU1810
 5562              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 5563              		.loc 1 425 13 is_stmt 0 view .LVU1811
 5564 217a 4D39D1   		cmp	r9, r10	# copy_bit, source_bit
 5565              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 5566              		.loc 1 425 37 view .LVU1812
 5567 217d 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	#, %sfp
 5567      78
 5568 2182 4C89F2   		mov	rdx, r14	#, patternsize_bits
 5569 2185 4C89F6   		mov	rsi, r14	#, patternsize_bits
 5570 2188 4C89FF   		mov	rdi, r15	#, _101
 5571              	.LVL289:
 5572              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 5573              		.loc 1 425 13 view .LVU1813
 5574 218b 0F82B70A 		jb	.L1077	#,
 5574      0000
 5575              	.LVL290:
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 5576              		.loc 1 426 10 is_stmt 1 view .LVU1814
 5577              	# sieve_extend.c:426:     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, so
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 5578              		.loc 1 426 13 is_stmt 0 view .LVU1815
 5579 2191 0F86990A 		jbe	.L448	#,
 5579      0000
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 5580              		.loc 1 426 37 is_stmt 1 view .LVU1816
 5581 2197 C5F877   		vzeroupper
 5582 219a E8B1E3FF 		call	continuePattern_shiftright	#
 5582      FF
 5583              	.LVL291:
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 5584              		.loc 1 426 37 is_stmt 0 view .LVU1817
 5585 219f 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 5585      50
 5586              	.LVL292:
 5587              	.L445:
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 5588              		.loc 1 426 37 view .LVU1818
 5589              	.LBE603:
 5590              	.LBE602:
 493:sieve_extend.c **** 
 5591              		.loc 1 493 9 is_stmt 1 view .LVU1819
 495:sieve_extend.c ****         else if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bitstorage, start, step, r
 5592              		.loc 1 495 9 view .LVU1820
 5593              	# sieve_extend.c:495:         if (step < MEDIUMSTEP_FASTER)      setBitsTrue_mediumStep(bitstorage,
 495:sieve_extend.c ****         else if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bitstorage, start, step, r
 5594              		.loc 1 495 12 is_stmt 0 view .LVU1821
 5595 21a4 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
GAS LISTING /tmp/ccIyIA9Z.s 			page 156


 5595      000000
 5596 21ab 0F828707 		jb	.L1078	#,
 5596      0000
 496:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitstorage, start, step, range_st
 5597              		.loc 1 496 14 is_stmt 1 view .LVU1822
 5598              	# sieve_extend.c:496:         else if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bits
 496:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitstorage, start, step, range_st
 5599              		.loc 1 496 17 is_stmt 0 view .LVU1823
 5600 21b1 4C3B2500 		cmp	r12, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 5600      000000
 5601 21b8 0F834A05 		jnb	.L465	#,
 5601      0000
 496:sieve_extend.c ****         else                               setBitsTrue_largeRange(bitstorage, start, step, range_st
 5602              		.loc 1 496 44 is_stmt 1 view .LVU1824
 5603              	.LVL293:
 5604              	.LBB605:
 5605              	.LBI605:
 231:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 5606              		.loc 1 231 20 view .LVU1825
 5607              	.LBB606:
 232:sieve_extend.c **** 
 5608              		.loc 1 232 5 view .LVU1826
 234:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 5609              		.loc 1 234 5 view .LVU1827
 5610              	# sieve_extend.c:234:     counter_t range_start_atvector = vectorstart(range_start);
 234:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 5611              		.loc 1 234 15 is_stmt 0 view .LVU1828
 5612 21be 4989DA   		mov	r10, rbx	# range_start_atvector, index
 5613 21c1 4530D2   		xor	r10b, r10b	# range_start_atvector
 5614              	.LVL294:
 235:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 5615              		.loc 1 235 5 is_stmt 1 view .LVU1829
 5616              	# sieve_extend.c:235:     if likely(( range_start_atvector + step) < range_start) { // not the firs
 235:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 5617              		.loc 1 235 8 is_stmt 0 view .LVU1830
 5618 21c4 4B8D3C14 		lea	rdi, [r12+r10]	# tmp569,
 5619 21c8 4839FB   		cmp	rbx, rdi	# index, tmp569
 5620 21cb 0F86EF00 		jbe	.L466	#,
 5620      0000
 236:sieve_extend.c **** 
 5621              		.loc 1 236 9 is_stmt 1 view .LVU1831
 238:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 5622              		.loc 1 238 9 view .LVU1832
 5623              	# sieve_extend.c:238:         range_start_atvector += VECTOR_SIZE; // find next vector
 238:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 5624              		.loc 1 238 30 is_stmt 0 view .LVU1833
 5625 21d1 4981C200 		add	r10, 256	# range_start_atvector,
 5625      010000
 5626              	.LVL295:
 239:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 5627              		.loc 1 239 9 is_stmt 1 view .LVU1834
 5628              	# sieve_extend.c:239:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 239:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 5629              		.loc 1 239 12 is_stmt 0 view .LVU1835
 5630 21d8 4C395424 		cmp	QWORD PTR 120[rsp], r10	# %sfp, range_start_atvector
 5630      78
 5631 21dd 0F82CA1A 		jb	.L467	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 157


 5631      0000
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5632              		.loc 1 245 16 is_stmt 1 view .LVU1836
 5633              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5634              		.loc 1 246 56 is_stmt 0 view .LVU1837
 5635 21e3 BA010000 		mov	edx, 1	# tmp579,
 5635      00
 5636              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5637              		.loc 1 245 9 view .LVU1838
 5638 21e8 4C39D3   		cmp	rbx, r10	# index, range_start_atvector
 5639 21eb 0F87CF00 		ja	.L466	#,
 5639      0000
 5640              	.LVL296:
 5641              	.L468:
 246:sieve_extend.c ****     }
 5642              		.loc 1 246 13 is_stmt 1 view .LVU1839
 5643              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5644              		.loc 1 246 53 is_stmt 0 view .LVU1840
 5645 21f1 4989D8   		mov	r8, rbx	# tmp575, index
 5646              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5647              		.loc 1 246 56 view .LVU1841
 5648 21f4 C462E1F7 		shlx	r9, rdx, rbx	# tmp578, tmp579, index
 5648      CA
 5649              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5650              		.loc 1 246 53 view .LVU1842
 5651 21f9 49C1E806 		shr	r8, 6	# tmp575,
 5652              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5653              		.loc 1 245 65 view .LVU1843
 5654 21fd 4C01E3   		add	rbx, r12	# index, step
 5655              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5656              		.loc 1 246 53 view .LVU1844
 5657 2200 4F090CC7 		or	QWORD PTR [r15+r8*8], r9	# *_195, tmp578
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5658              		.loc 1 245 53 is_stmt 1 view .LVU1845
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5659              		.loc 1 245 16 view .LVU1846
 5660              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5661              		.loc 1 245 9 is_stmt 0 view .LVU1847
 5662 2204 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5663 2207 0F82B300 		jb	.L466	#,
 5663      0000
 246:sieve_extend.c ****     }
 5664              		.loc 1 246 13 is_stmt 1 view .LVU1848
 5665              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5666              		.loc 1 246 53 is_stmt 0 view .LVU1849
 5667 220d 4989DB   		mov	r11, rbx	# tmp1101, index
 5668              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 158


 5669              		.loc 1 246 56 view .LVU1850
 5670 2210 C4E2E1F7 		shlx	rcx, rdx, rbx	# tmp1104, tmp579, index
 5670      CA
 5671              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5672              		.loc 1 246 53 view .LVU1851
 5673 2215 49C1EB06 		shr	r11, 6	# tmp1101,
 5674              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5675              		.loc 1 245 65 view .LVU1852
 5676 2219 4C01E3   		add	rbx, r12	# index, step
 5677              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5678              		.loc 1 246 53 view .LVU1853
 5679 221c 4B090CDF 		or	QWORD PTR [r15+r11*8], rcx	# *_195, tmp1104
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5680              		.loc 1 245 53 is_stmt 1 view .LVU1854
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5681              		.loc 1 245 16 view .LVU1855
 5682              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5683              		.loc 1 245 9 is_stmt 0 view .LVU1856
 5684 2220 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5685 2223 0F829700 		jb	.L466	#,
 5685      0000
 246:sieve_extend.c ****     }
 5686              		.loc 1 246 13 is_stmt 1 view .LVU1857
 5687              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5688              		.loc 1 246 53 is_stmt 0 view .LVU1858
 5689 2229 4889D8   		mov	rax, rbx	# tmp1105, index
 5690              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5691              		.loc 1 246 56 view .LVU1859
 5692 222c C4E2E1F7 		shlx	rsi, rdx, rbx	# tmp1108, tmp579, index
 5692      F2
 5693              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5694              		.loc 1 246 53 view .LVU1860
 5695 2231 48C1E806 		shr	rax, 6	# tmp1105,
 5696              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5697              		.loc 1 245 65 view .LVU1861
 5698 2235 4C01E3   		add	rbx, r12	# index, step
 5699              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5700              		.loc 1 246 53 view .LVU1862
 5701 2238 490934C7 		or	QWORD PTR [r15+rax*8], rsi	# *_195, tmp1108
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5702              		.loc 1 245 53 is_stmt 1 view .LVU1863
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5703              		.loc 1 245 16 view .LVU1864
 5704              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5705              		.loc 1 245 9 is_stmt 0 view .LVU1865
 5706 223c 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5707 223f 727F     		jb	.L466	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 159


 246:sieve_extend.c ****     }
 5708              		.loc 1 246 13 is_stmt 1 view .LVU1866
 5709              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5710              		.loc 1 246 53 is_stmt 0 view .LVU1867
 5711 2241 4889DF   		mov	rdi, rbx	# tmp1109, index
 5712              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5713              		.loc 1 246 56 view .LVU1868
 5714 2244 C462E1F7 		shlx	r8, rdx, rbx	# tmp1112, tmp579, index
 5714      C2
 5715              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5716              		.loc 1 246 53 view .LVU1869
 5717 2249 48C1EF06 		shr	rdi, 6	# tmp1109,
 5718              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5719              		.loc 1 245 65 view .LVU1870
 5720 224d 4C01E3   		add	rbx, r12	# index, step
 5721              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5722              		.loc 1 246 53 view .LVU1871
 5723 2250 4D0904FF 		or	QWORD PTR [r15+rdi*8], r8	# *_195, tmp1112
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5724              		.loc 1 245 53 is_stmt 1 view .LVU1872
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5725              		.loc 1 245 16 view .LVU1873
 5726              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5727              		.loc 1 245 9 is_stmt 0 view .LVU1874
 5728 2254 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5729 2257 7267     		jb	.L466	#,
 246:sieve_extend.c ****     }
 5730              		.loc 1 246 13 is_stmt 1 view .LVU1875
 5731              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5732              		.loc 1 246 53 is_stmt 0 view .LVU1876
 5733 2259 4989D9   		mov	r9, rbx	# tmp1113, index
 5734              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5735              		.loc 1 246 56 view .LVU1877
 5736 225c C462E1F7 		shlx	r11, rdx, rbx	# tmp1116, tmp579, index
 5736      DA
 5737              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5738              		.loc 1 246 53 view .LVU1878
 5739 2261 49C1E906 		shr	r9, 6	# tmp1113,
 5740              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5741              		.loc 1 245 65 view .LVU1879
 5742 2265 4C01E3   		add	rbx, r12	# index, step
 5743              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5744              		.loc 1 246 53 view .LVU1880
 5745 2268 4F091CCF 		or	QWORD PTR [r15+r9*8], r11	# *_195, tmp1116
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5746              		.loc 1 245 53 is_stmt 1 view .LVU1881
GAS LISTING /tmp/ccIyIA9Z.s 			page 160


 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5747              		.loc 1 245 16 view .LVU1882
 5748              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5749              		.loc 1 245 9 is_stmt 0 view .LVU1883
 5750 226c 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5751 226f 724F     		jb	.L466	#,
 246:sieve_extend.c ****     }
 5752              		.loc 1 246 13 is_stmt 1 view .LVU1884
 5753              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5754              		.loc 1 246 53 is_stmt 0 view .LVU1885
 5755 2271 4889D9   		mov	rcx, rbx	# tmp1117, index
 5756              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5757              		.loc 1 246 56 view .LVU1886
 5758 2274 C4E2E1F7 		shlx	rax, rdx, rbx	# tmp1120, tmp579, index
 5758      C2
 5759              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5760              		.loc 1 246 53 view .LVU1887
 5761 2279 48C1E906 		shr	rcx, 6	# tmp1117,
 5762              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5763              		.loc 1 245 65 view .LVU1888
 5764 227d 4C01E3   		add	rbx, r12	# index, step
 5765              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5766              		.loc 1 246 53 view .LVU1889
 5767 2280 490904CF 		or	QWORD PTR [r15+rcx*8], rax	# *_195, tmp1120
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5768              		.loc 1 245 53 is_stmt 1 view .LVU1890
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5769              		.loc 1 245 16 view .LVU1891
 5770              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5771              		.loc 1 245 9 is_stmt 0 view .LVU1892
 5772 2284 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5773 2287 7237     		jb	.L466	#,
 246:sieve_extend.c ****     }
 5774              		.loc 1 246 13 is_stmt 1 view .LVU1893
 5775              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5776              		.loc 1 246 53 is_stmt 0 view .LVU1894
 5777 2289 4889DF   		mov	rdi, rbx	# tmp1121, index
 5778              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5779              		.loc 1 246 56 view .LVU1895
 5780 228c C4E2E1F7 		shlx	rsi, rdx, rbx	# tmp1124, tmp579, index
 5780      F2
 5781              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5782              		.loc 1 246 53 view .LVU1896
 5783 2291 48C1EF06 		shr	rdi, 6	# tmp1121,
 5784              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5785              		.loc 1 245 65 view .LVU1897
GAS LISTING /tmp/ccIyIA9Z.s 			page 161


 5786 2295 4C01E3   		add	rbx, r12	# index, step
 5787              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5788              		.loc 1 246 53 view .LVU1898
 5789 2298 490934FF 		or	QWORD PTR [r15+rdi*8], rsi	# *_195, tmp1124
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5790              		.loc 1 245 53 is_stmt 1 view .LVU1899
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5791              		.loc 1 245 16 view .LVU1900
 5792              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5793              		.loc 1 245 9 is_stmt 0 view .LVU1901
 5794 229c 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5795 229f 721F     		jb	.L466	#,
 246:sieve_extend.c ****     }
 5796              		.loc 1 246 13 is_stmt 1 view .LVU1902
 5797              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5798              		.loc 1 246 53 is_stmt 0 view .LVU1903
 5799 22a1 4989D8   		mov	r8, rbx	# tmp1125, index
 5800              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5801              		.loc 1 246 56 view .LVU1904
 5802 22a4 C462E1F7 		shlx	r9, rdx, rbx	# tmp1128, tmp579, index
 5802      CA
 5803              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5804              		.loc 1 246 53 view .LVU1905
 5805 22a9 49C1E806 		shr	r8, 6	# tmp1125,
 5806              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5807              		.loc 1 245 65 view .LVU1906
 5808 22ad 4C01E3   		add	rbx, r12	# index, step
 5809              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 5810              		.loc 1 246 53 view .LVU1907
 5811 22b0 4F090CC7 		or	QWORD PTR [r15+r8*8], r9	# *_195, tmp1128
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5812              		.loc 1 245 53 is_stmt 1 view .LVU1908
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5813              		.loc 1 245 16 view .LVU1909
 5814              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 5815              		.loc 1 245 9 is_stmt 0 view .LVU1910
 5816 22b4 4939DA   		cmp	r10, rbx	# range_start_atvector, index
 5817 22b7 0F8334FF 		jnb	.L468	#,
 5817      FFFF
 5818 22bd 0F1F00   		.p2align 4,,10
 5819              		.p2align 3
 5820              	.L466:
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 5821              		.loc 1 249 5 is_stmt 1 view .LVU1911
 5822              	# sieve_extend.c:249:     const counter_t range_stop_unique =  range_start + VECTOR_SIZE_counter * 
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 5823              		.loc 1 249 76 is_stmt 0 view .LVU1912
 5824 22c0 4D89E2   		mov	r10, r12	# tmp580, step
 5825              	.LVL297:
GAS LISTING /tmp/ccIyIA9Z.s 			page 162


 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 5826              		.loc 1 249 76 view .LVU1913
 5827 22c3 49C1E208 		sal	r10, 8	# tmp580,
 5828              	# sieve_extend.c:249:     const counter_t range_stop_unique =  range_start + VECTOR_SIZE_counter * 
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 5829              		.loc 1 249 21 view .LVU1914
 5830 22c7 4901DA   		add	r10, rbx	# range_stop_unique, index
 5831 22ca 4D89D3   		mov	r11, r10	# range_stop_unique, range_stop_unique
 5832              	.LVL298:
 250:sieve_extend.c ****         setBitsTrue_largeRange(bitstorage_word, range_start, step, range_stop);
 5833              		.loc 1 250 5 is_stmt 1 view .LVU1915
 5834              	# sieve_extend.c:250:     if (range_stop_unique >= range_stop) {
 250:sieve_extend.c ****         setBitsTrue_largeRange(bitstorage_word, range_start, step, range_stop);
 5835              		.loc 1 250 8 is_stmt 0 view .LVU1916
 5836 22cd 4C395424 		cmp	QWORD PTR 120[rsp], r10	# %sfp, range_stop_unique
 5836      78
 5837 22d2 0F86B417 		jbe	.L470	#,
 5837      0000
 5838              	.LVL299:
 5839              	.LBB607:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 5840              		.loc 1 256 41 is_stmt 1 view .LVU1917
 5841              	# sieve_extend.c:256:     for (counter_t index = range_start; index < range_stop_unique;) {
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 5842              		.loc 1 256 5 is_stmt 0 view .LVU1918
 5843 22d8 4C39D3   		cmp	rbx, r10	# index, range_stop_unique
 5844 22db 0F832A03 		jnb	.L455	#,
 5844      0000
 5845              	.LBB608:
 5846              	.LBB609:
 5847              	.LBB610:
 5848              	# sieve_extend.c:173:     const counter_t range_stop_vector = vectorindex(range_stop);
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 5849              		.loc 1 173 21 view .LVU1919
 5850 22e1 488B4424 		mov	rax, QWORD PTR 120[rsp]	# range_stop_vector, %sfp
 5850      78
 5851              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 5852              		.loc 1 175 117 view .LVU1920
 5853 22e6 4A8D0CA5 		lea	rcx, 0[0+r12*4]	# _292,
 5853      00000000 
 5854              	# sieve_extend.c:173:     const counter_t range_stop_vector = vectorindex(range_stop);
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 5855              		.loc 1 173 21 view .LVU1921
 5856 22ee 48C1E808 		shr	rax, 8	# range_stop_vector,
 5857              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 5858              		.loc 1 175 142 view .LVU1922
 5859 22f2 4889C7   		mov	rdi, rax	# tmp604, range_stop_vector
 5860 22f5 4829CF   		sub	rdi, rcx	# tmp604, _292
 5861              	# sieve_extend.c:185:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 185:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 5862              		.loc 1 185 97 view .LVU1923
 5863 22f8 4989C0   		mov	r8, rax	# tmp602, range_stop_vector
 5864 22fb 49C1E005 		sal	r8, 5	# tmp602,
 5865              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
GAS LISTING /tmp/ccIyIA9Z.s 			page 163


 5866              		.loc 1 175 92 view .LVU1924
 5867 22ff 48C1E705 		sal	rdi, 5	# tmp605,
 5868              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 5869              		.loc 1 179 38 view .LVU1925
 5870 2303 4C89E2   		mov	rdx, r12	# _301, step
 5871 2306 4C01FF   		add	rdi, r15	# tmp606, _101
 5872 2309 48C1E205 		sal	rdx, 5	# _301,
 5873 230d 4D01F8   		add	r8, r15	# _1121, _101
 5874 2310 4C89E6   		mov	rsi, r12	# _1155, step
 5875 2313 4839C8   		cmp	rax, rcx	# range_stop_vector, _292
 5876              	.LBE610:
 5877              	.LBE609:
 5878              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 5879              		.loc 1 265 31 view .LVU1926
 5880 2316 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, patternsize_bits
 5880      48
 5881 231b 490F46FF 		cmovbe	rdi, r15	# _101,, fast_loop_ptr
 5882 231f 4C89E1   		mov	rcx, r12	# _1158, step
 5883 2322 48C1E606 		sal	rsi, 6	# _1155,
 5884 2326 4C896C24 		mov	QWORD PTR 64[rsp], r13	# %sfp, index
 5884      40
 5885 232b 48C1E107 		sal	rcx, 7	# _1158,
 5886              	# sieve_extend.c:260:         register bitvector_t quadmask = { };
 260:sieve_extend.c **** 
 5887              		.loc 1 260 30 view .LVU1927
 5888 232f C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp608
 5889              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 5890              		.loc 1 265 31 view .LVU1928
 5891 2333 41BA0100 		mov	r10d, 1	# tmp611,
 5891      0000
 5892              	.LVL300:
 265:sieve_extend.c ****             index += step;
 5893              		.loc 1 265 31 view .LVU1929
 5894 2339 4989F5   		mov	r13, rsi	# _1155, _1155
 5895              	.LVL301:
 5896 233c 0F1F4000 		.p2align 4,,10
 5897              		.p2align 3
 5898              	.L482:
 257:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 5899              		.loc 1 257 9 is_stmt 1 view .LVU1930
 5900              	# sieve_extend.c:257:         const counter_t current_vector =  vectorindex(index);
 257:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 5901              		.loc 1 257 25 is_stmt 0 view .LVU1931
 5902 2340 4889D8   		mov	rax, rbx	# current_vector, index
 5903 2343 48C1E808 		shr	rax, 8	# current_vector,
 5904              	.LVL302:
 258:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 5905              		.loc 1 258 9 is_stmt 1 view .LVU1932
 5906              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 5907              		.loc 1 259 35 is_stmt 0 view .LVU1933
 5908 2347 4989D9   		mov	r9, rbx	# tmp607, index
 5909              	# sieve_extend.c:258:         const counter_t current_vector_start_word =  current_vector << (SHIFT
 258:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccIyIA9Z.s 			page 164


 5910              		.loc 1 258 25 view .LVU1934
 5911 234a 488D3485 		lea	rsi, 0[0+rax*4]	# current_vector_start_word,
 5911      00000000 
 5912              	.LVL303:
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 5913              		.loc 1 259 9 is_stmt 1 view .LVU1935
 5914              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 5915              		.loc 1 259 35 is_stmt 0 view .LVU1936
 5916 2352 49C1E906 		shr	r9, 6	# tmp607,
 5917              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 5918              		.loc 1 259 28 view .LVU1937
 5919 2356 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 5920              	.LVL304:
 260:sieve_extend.c **** 
 5921              		.loc 1 260 9 is_stmt 1 view .LVU1938
 5922              	# sieve_extend.c:260:         register bitvector_t quadmask = { };
 260:sieve_extend.c **** 
 5923              		.loc 1 260 30 is_stmt 0 view .LVU1939
 5924 2359 C5FD7F94 		vmovdqa	YMMWORD PTR 128[rsp], ymm2	# quadmask, tmp608
 5924      24800000 
 5924      00
 5925              	.L478:
 265:sieve_extend.c ****             index += step;
 5926              		.loc 1 265 13 is_stmt 1 view .LVU1940
 5927              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 5928              		.loc 1 265 31 is_stmt 0 view .LVU1941
 5929 2362 C442E1F7 		shlx	r14, r10, rbx	# tmp610, tmp611, index
 5929      F2
 5930              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 5931              		.loc 1 266 19 view .LVU1942
 5932 2367 4C01E3   		add	rbx, r12	# index, step
 5933              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 5934              		.loc 1 265 28 view .LVU1943
 5935 236a 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp610
 5935      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 5936              		.loc 1 266 13 is_stmt 1 view .LVU1944
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 5937              		.loc 1 267 13 view .LVU1945
 5938              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 5939              		.loc 1 267 20 is_stmt 0 view .LVU1946
 5940 2372 4989D9   		mov	r9, rbx	# tmp612, index
 5941              	.LVL305:
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 5942              		.loc 1 267 20 view .LVU1947
 5943 2375 49C1E906 		shr	r9, 6	# tmp612,
 5944              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 5945              		.loc 1 267 18 view .LVU1948
 5946 2379 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
GAS LISTING /tmp/ccIyIA9Z.s 			page 165


 5947              		.loc 1 268 17 is_stmt 1 view .LVU1949
 5948              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 5949              		.loc 1 268 9 is_stmt 0 view .LVU1950
 5950 237c 4983F903 		cmp	r9, 3	# word,
 5951 2380 0F87FA00 		ja	.L922	#,
 5951      0000
 265:sieve_extend.c ****             index += step;
 5952              		.loc 1 265 13 is_stmt 1 view .LVU1951
 5953              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 5954              		.loc 1 265 31 is_stmt 0 view .LVU1952
 5955 2386 C442E1F7 		shlx	r14, r10, rbx	# tmp1081, tmp611, index
 5955      F2
 5956              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 5957              		.loc 1 266 19 view .LVU1953
 5958 238b 4C01E3   		add	rbx, r12	# index, step
 5959              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 5960              		.loc 1 265 28 view .LVU1954
 5961 238e 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1081
 5961      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 5962              		.loc 1 266 13 is_stmt 1 view .LVU1955
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 5963              		.loc 1 267 13 view .LVU1956
 5964              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 5965              		.loc 1 267 20 is_stmt 0 view .LVU1957
 5966 2396 4989D9   		mov	r9, rbx	# tmp1082, index
 5967 2399 49C1E906 		shr	r9, 6	# tmp1082,
 5968              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 5969              		.loc 1 267 18 view .LVU1958
 5970 239d 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 5971              		.loc 1 268 17 is_stmt 1 view .LVU1959
 5972              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 5973              		.loc 1 268 9 is_stmt 0 view .LVU1960
 5974 23a0 4983F903 		cmp	r9, 3	# word,
 5975 23a4 0F87D600 		ja	.L922	#,
 5975      0000
 265:sieve_extend.c ****             index += step;
 5976              		.loc 1 265 13 is_stmt 1 view .LVU1961
 5977              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 5978              		.loc 1 265 31 is_stmt 0 view .LVU1962
 5979 23aa C442E1F7 		shlx	r14, r10, rbx	# tmp1084, tmp611, index
 5979      F2
 5980              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 5981              		.loc 1 266 19 view .LVU1963
 5982 23af 4C01E3   		add	rbx, r12	# index, step
 5983              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 166


 5984              		.loc 1 265 28 view .LVU1964
 5985 23b2 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1084
 5985      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 5986              		.loc 1 266 13 is_stmt 1 view .LVU1965
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 5987              		.loc 1 267 13 view .LVU1966
 5988              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 5989              		.loc 1 267 20 is_stmt 0 view .LVU1967
 5990 23ba 4989D9   		mov	r9, rbx	# tmp1085, index
 5991 23bd 49C1E906 		shr	r9, 6	# tmp1085,
 5992              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 5993              		.loc 1 267 18 view .LVU1968
 5994 23c1 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 5995              		.loc 1 268 17 is_stmt 1 view .LVU1969
 5996              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 5997              		.loc 1 268 9 is_stmt 0 view .LVU1970
 5998 23c4 4983F903 		cmp	r9, 3	# word,
 5999 23c8 0F87B200 		ja	.L922	#,
 5999      0000
 265:sieve_extend.c ****             index += step;
 6000              		.loc 1 265 13 is_stmt 1 view .LVU1971
 6001              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6002              		.loc 1 265 31 is_stmt 0 view .LVU1972
 6003 23ce C442E1F7 		shlx	r14, r10, rbx	# tmp1087, tmp611, index
 6003      F2
 6004              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6005              		.loc 1 266 19 view .LVU1973
 6006 23d3 4C01E3   		add	rbx, r12	# index, step
 6007              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6008              		.loc 1 265 28 view .LVU1974
 6009 23d6 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1087
 6009      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6010              		.loc 1 266 13 is_stmt 1 view .LVU1975
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6011              		.loc 1 267 13 view .LVU1976
 6012              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6013              		.loc 1 267 20 is_stmt 0 view .LVU1977
 6014 23de 4989D9   		mov	r9, rbx	# tmp1088, index
 6015 23e1 49C1E906 		shr	r9, 6	# tmp1088,
 6016              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6017              		.loc 1 267 18 view .LVU1978
 6018 23e5 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6019              		.loc 1 268 17 is_stmt 1 view .LVU1979
 6020              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
GAS LISTING /tmp/ccIyIA9Z.s 			page 167


 6021              		.loc 1 268 9 is_stmt 0 view .LVU1980
 6022 23e8 4983F903 		cmp	r9, 3	# word,
 6023 23ec 0F878E00 		ja	.L922	#,
 6023      0000
 265:sieve_extend.c ****             index += step;
 6024              		.loc 1 265 13 is_stmt 1 view .LVU1981
 6025              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6026              		.loc 1 265 31 is_stmt 0 view .LVU1982
 6027 23f2 C442E1F7 		shlx	r14, r10, rbx	# tmp1090, tmp611, index
 6027      F2
 6028              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6029              		.loc 1 266 19 view .LVU1983
 6030 23f7 4C01E3   		add	rbx, r12	# index, step
 6031              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6032              		.loc 1 265 28 view .LVU1984
 6033 23fa 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1090
 6033      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6034              		.loc 1 266 13 is_stmt 1 view .LVU1985
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6035              		.loc 1 267 13 view .LVU1986
 6036              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6037              		.loc 1 267 20 is_stmt 0 view .LVU1987
 6038 2402 4989D9   		mov	r9, rbx	# tmp1091, index
 6039 2405 49C1E906 		shr	r9, 6	# tmp1091,
 6040              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6041              		.loc 1 267 18 view .LVU1988
 6042 2409 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6043              		.loc 1 268 17 is_stmt 1 view .LVU1989
 6044              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6045              		.loc 1 268 9 is_stmt 0 view .LVU1990
 6046 240c 4983F903 		cmp	r9, 3	# word,
 6047 2410 776E     		ja	.L922	#,
 265:sieve_extend.c ****             index += step;
 6048              		.loc 1 265 13 is_stmt 1 view .LVU1991
 6049              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6050              		.loc 1 265 31 is_stmt 0 view .LVU1992
 6051 2412 C442E1F7 		shlx	r14, r10, rbx	# tmp1093, tmp611, index
 6051      F2
 6052              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6053              		.loc 1 266 19 view .LVU1993
 6054 2417 4C01E3   		add	rbx, r12	# index, step
 6055              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6056              		.loc 1 265 28 view .LVU1994
 6057 241a 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1093
 6057      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccIyIA9Z.s 			page 168


 6058              		.loc 1 266 13 is_stmt 1 view .LVU1995
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6059              		.loc 1 267 13 view .LVU1996
 6060              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6061              		.loc 1 267 20 is_stmt 0 view .LVU1997
 6062 2422 4989D9   		mov	r9, rbx	# tmp1094, index
 6063 2425 49C1E906 		shr	r9, 6	# tmp1094,
 6064              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6065              		.loc 1 267 18 view .LVU1998
 6066 2429 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6067              		.loc 1 268 17 is_stmt 1 view .LVU1999
 6068              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6069              		.loc 1 268 9 is_stmt 0 view .LVU2000
 6070 242c 4983F903 		cmp	r9, 3	# word,
 6071 2430 774E     		ja	.L922	#,
 265:sieve_extend.c ****             index += step;
 6072              		.loc 1 265 13 is_stmt 1 view .LVU2001
 6073              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6074              		.loc 1 265 31 is_stmt 0 view .LVU2002
 6075 2432 C442E1F7 		shlx	r14, r10, rbx	# tmp1096, tmp611, index
 6075      F2
 6076              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6077              		.loc 1 266 19 view .LVU2003
 6078 2437 4C01E3   		add	rbx, r12	# index, step
 6079              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6080              		.loc 1 265 28 view .LVU2004
 6081 243a 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1096
 6081      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6082              		.loc 1 266 13 is_stmt 1 view .LVU2005
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6083              		.loc 1 267 13 view .LVU2006
 6084              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6085              		.loc 1 267 20 is_stmt 0 view .LVU2007
 6086 2442 4989D9   		mov	r9, rbx	# tmp1097, index
 6087 2445 49C1E906 		shr	r9, 6	# tmp1097,
 6088              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6089              		.loc 1 267 18 view .LVU2008
 6090 2449 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 6091              		.loc 1 268 17 is_stmt 1 view .LVU2009
 6092              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6093              		.loc 1 268 9 is_stmt 0 view .LVU2010
 6094 244c 4983F903 		cmp	r9, 3	# word,
 6095 2450 772E     		ja	.L922	#,
 265:sieve_extend.c ****             index += step;
 6096              		.loc 1 265 13 is_stmt 1 view .LVU2011
GAS LISTING /tmp/ccIyIA9Z.s 			page 169


 6097              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6098              		.loc 1 265 31 is_stmt 0 view .LVU2012
 6099 2452 C442E1F7 		shlx	r14, r10, rbx	# tmp1099, tmp611, index
 6099      F2
 6100              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6101              		.loc 1 266 19 view .LVU2013
 6102 2457 4C01E3   		add	rbx, r12	# index, step
 6103              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 6104              		.loc 1 265 28 view .LVU2014
 6105 245a 4E09B4CC 		or	QWORD PTR 128[rsp+r9*8], r14	# quadmask, tmp1099
 6105      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 6106              		.loc 1 266 13 is_stmt 1 view .LVU2015
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6107              		.loc 1 267 13 view .LVU2016
 6108              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6109              		.loc 1 267 20 is_stmt 0 view .LVU2017
 6110 2462 4989D9   		mov	r9, rbx	# tmp1100, index
 6111 2465 49C1E906 		shr	r9, 6	# tmp1100,
 6112              	.LVL306:
 6113              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 6114              		.loc 1 267 18 view .LVU2018
 6115 2469 4929F1   		sub	r9, rsi	# word, current_vector_start_word
 6116              	.LVL307:
 268:sieve_extend.c **** 
 6117              		.loc 1 268 17 is_stmt 1 view .LVU2019
 6118              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 6119              		.loc 1 268 9 is_stmt 0 view .LVU2020
 6120 246c 4983F903 		cmp	r9, 3	# word,
 6121 2470 0F86ECFE 		jbe	.L478	#,
 6121      FFFF
 6122              	.LVL308:
 6123 2476 662E0F1F 		.p2align 4,,10
 6123      84000000 
 6123      0000
 6124              		.p2align 3
 6125              	.L922:
 272:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 6126              		.loc 1 272 9 is_stmt 1 view .LVU2021
 273:sieve_extend.c ****     }
 6127              		.loc 1 273 9 view .LVU2022
 6128              	.LBB613:
 6129              	.LBB611:
 6130              	# sieve_extend.c:174:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 6131              		.loc 1 174 92 is_stmt 0 view .LVU2023
 6132 2480 48C1E005 		sal	rax, 5	# tmp613,
 6133              	.LVL309:
 6134              	# sieve_extend.c:174:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 6135              		.loc 1 174 81 view .LVU2024
GAS LISTING /tmp/ccIyIA9Z.s 			page 170


 6136 2484 4C01F8   		add	rax, r15	# index_ptr, _101
 6137              	.LBE611:
 6138              	.LBE613:
 6139              	# sieve_extend.c:273:         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, curre
 273:sieve_extend.c ****     }
 6140              		.loc 1 273 9 view .LVU2025
 6141 2487 C5FD6F84 		vmovdqa	ymm0, YMMWORD PTR 128[rsp]	# quadmask.82_219, quadmask
 6141      24800000 
 6141      00
 6142              	.LVL310:
 6143              	.LBB614:
 6144              	.LBI609:
 172:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 6145              		.loc 1 172 20 is_stmt 1 view .LVU2026
 6146              	.LBB612:
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 6147              		.loc 1 173 5 view .LVU2027
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 6148              		.loc 1 174 5 view .LVU2028
 175:sieve_extend.c ****     
 6149              		.loc 1 175 5 view .LVU2029
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6150              		.loc 1 178 11 view .LVU2030
 6151 2490 4839F8   		cmp	rax, rdi	# index_ptr, fast_loop_ptr
 6152 2493 0F83CF00 		jnb	.L1073	#,
 6152      0000
 6153 2499 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.583,
 6154              	.LVL311:
 6155              	.L480:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6156              		.loc 1 179 9 view .LVU2031
 6157              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6158              		.loc 1 179 20 is_stmt 0 view .LVU2032
 6159 249d C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp614, quadmask.82_219, MEM[base: index_ptr_840, offset: 0B]
 6160 24a1 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_840, offset: 0B], tmp614
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6161              		.loc 1 179 29 is_stmt 1 view .LVU2033
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6162              		.loc 1 180 9 view .LVU2034
 6163              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6164              		.loc 1 180 20 is_stmt 0 view .LVU2035
 6165 24a5 C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rax+rdx]	# tmp615, quadmask.82_219, MEM[base: index_ptr_840, index: 
 6165      10
 6166 24aa C5FD7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm3	# MEM[base: index_ptr_840, index: _301, offset: 0B], tmp615
 6166      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6167              		.loc 1 180 29 is_stmt 1 view .LVU2036
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6168              		.loc 1 181 9 view .LVU2037
 6169              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6170              		.loc 1 181 20 is_stmt 0 view .LVU2038
 6171 24af C5FDEB26 		vpor	ymm4, ymm0, YMMWORD PTR [rsi]	# tmp616, quadmask.82_219, MEM[base: _1147, offset: 0B]
 6172 24b3 4801C8   		add	rax, rcx	# index_ptr, _1158
 6173 24b6 C5FD7F26 		vmovdqa	YMMWORD PTR [rsi], ymm4	# MEM[base: _1147, offset: 0B], tmp616
GAS LISTING /tmp/ccIyIA9Z.s 			page 171


 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6174              		.loc 1 181 29 is_stmt 1 view .LVU2039
 182:sieve_extend.c ****     }
 6175              		.loc 1 182 9 view .LVU2040
 6176              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 6177              		.loc 1 182 20 is_stmt 0 view .LVU2041
 6178 24ba C5FDEB2C 		vpor	ymm5, ymm0, YMMWORD PTR [rsi+rdx]	# tmp617, quadmask.82_219, MEM[base: _1147, index: _301, of
 6178      16
 6179 24bf C5FD7F2C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm5	# MEM[base: _1147, index: _301, offset: 0B], tmp617
 6179      16
 182:sieve_extend.c ****     }
 6180              		.loc 1 182 29 is_stmt 1 view .LVU2042
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6181              		.loc 1 178 11 view .LVU2043
 6182 24c4 4801CE   		add	rsi, rcx	# ivtmp.583, _1158
 6183 24c7 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 6184 24ca 0F869800 		jbe	.L1073	#,
 6184      0000
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6185              		.loc 1 179 9 view .LVU2044
 6186              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6187              		.loc 1 179 20 is_stmt 0 view .LVU2045
 6188 24d0 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp1067, quadmask.82_219, MEM[base: index_ptr_840, offset: 0B
 6189 24d4 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_840, offset: 0B], tmp1067
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6190              		.loc 1 179 29 is_stmt 1 view .LVU2046
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6191              		.loc 1 180 9 view .LVU2047
 6192              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6193              		.loc 1 180 20 is_stmt 0 view .LVU2048
 6194 24d8 C5FDEB3C 		vpor	ymm7, ymm0, YMMWORD PTR [rax+rdx]	# tmp1068, quadmask.82_219, MEM[base: index_ptr_840, index:
 6194      10
 6195 24dd C5FD7F3C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm7	# MEM[base: index_ptr_840, index: _301, offset: 0B], tmp1068
 6195      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6196              		.loc 1 180 29 is_stmt 1 view .LVU2049
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6197              		.loc 1 181 9 view .LVU2050
 6198              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6199              		.loc 1 181 20 is_stmt 0 view .LVU2051
 6200 24e2 C57DEB06 		vpor	ymm8, ymm0, YMMWORD PTR [rsi]	# tmp1069, quadmask.82_219, MEM[base: _1147, offset: 0B]
 6201 24e6 4801C8   		add	rax, rcx	# index_ptr, _1158
 6202 24e9 C57D7F06 		vmovdqa	YMMWORD PTR [rsi], ymm8	# MEM[base: _1147, offset: 0B], tmp1069
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6203              		.loc 1 181 29 is_stmt 1 view .LVU2052
 182:sieve_extend.c ****     }
 6204              		.loc 1 182 9 view .LVU2053
 6205              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 6206              		.loc 1 182 20 is_stmt 0 view .LVU2054
 6207 24ed C57DEB0C 		vpor	ymm9, ymm0, YMMWORD PTR [rsi+rdx]	# tmp1070, quadmask.82_219, MEM[base: _1147, index: _301, o
 6207      16
 6208 24f2 C57D7F0C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm9	# MEM[base: _1147, index: _301, offset: 0B], tmp1070
GAS LISTING /tmp/ccIyIA9Z.s 			page 172


 6208      16
 182:sieve_extend.c ****     }
 6209              		.loc 1 182 29 is_stmt 1 view .LVU2055
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6210              		.loc 1 178 11 view .LVU2056
 6211 24f7 4801CE   		add	rsi, rcx	# ivtmp.583, _1158
 6212 24fa 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 6213 24fd 7669     		jbe	.L1073	#,
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6214              		.loc 1 179 9 view .LVU2057
 6215              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6216              		.loc 1 179 20 is_stmt 0 view .LVU2058
 6217 24ff C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp1072, quadmask.82_219, MEM[base: index_ptr_840, offset: 0
 6218 2503 C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: index_ptr_840, offset: 0B], tmp1072
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6219              		.loc 1 179 29 is_stmt 1 view .LVU2059
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6220              		.loc 1 180 9 view .LVU2060
 6221              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6222              		.loc 1 180 20 is_stmt 0 view .LVU2061
 6223 2507 C57DEB1C 		vpor	ymm11, ymm0, YMMWORD PTR [rax+rdx]	# tmp1073, quadmask.82_219, MEM[base: index_ptr_840, index
 6223      10
 6224 250c C57D7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm11	# MEM[base: index_ptr_840, index: _301, offset: 0B], tmp1073
 6224      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6225              		.loc 1 180 29 is_stmt 1 view .LVU2062
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6226              		.loc 1 181 9 view .LVU2063
 6227              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6228              		.loc 1 181 20 is_stmt 0 view .LVU2064
 6229 2511 C57DEB26 		vpor	ymm12, ymm0, YMMWORD PTR [rsi]	# tmp1074, quadmask.82_219, MEM[base: _1147, offset: 0B]
 6230 2515 4801C8   		add	rax, rcx	# index_ptr, _1158
 6231 2518 C57D7F26 		vmovdqa	YMMWORD PTR [rsi], ymm12	# MEM[base: _1147, offset: 0B], tmp1074
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6232              		.loc 1 181 29 is_stmt 1 view .LVU2065
 182:sieve_extend.c ****     }
 6233              		.loc 1 182 9 view .LVU2066
 6234              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 6235              		.loc 1 182 20 is_stmt 0 view .LVU2067
 6236 251c C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rsi+rdx]	# tmp1075, quadmask.82_219, MEM[base: _1147, index: _301, 
 6236      16
 6237 2521 C57D7F2C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm13	# MEM[base: _1147, index: _301, offset: 0B], tmp1075
 6237      16
 182:sieve_extend.c ****     }
 6238              		.loc 1 182 29 is_stmt 1 view .LVU2068
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6239              		.loc 1 178 11 view .LVU2069
 6240 2526 4801CE   		add	rsi, rcx	# ivtmp.583, _1158
 6241 2529 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 6242 252c 763A     		jbe	.L1073	#,
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6243              		.loc 1 179 9 view .LVU2070
 6244              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 173


 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6245              		.loc 1 179 20 is_stmt 0 view .LVU2071
 6246 252e C57DEB30 		vpor	ymm14, ymm0, YMMWORD PTR [rax]	# tmp1077, quadmask.82_219, MEM[base: index_ptr_840, offset: 0
 6247 2532 C57D7F30 		vmovdqa	YMMWORD PTR [rax], ymm14	# MEM[base: index_ptr_840, offset: 0B], tmp1077
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6248              		.loc 1 179 29 is_stmt 1 view .LVU2072
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6249              		.loc 1 180 9 view .LVU2073
 6250              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6251              		.loc 1 180 20 is_stmt 0 view .LVU2074
 6252 2536 C57DEB3C 		vpor	ymm15, ymm0, YMMWORD PTR [rax+rdx]	# tmp1078, quadmask.82_219, MEM[base: index_ptr_840, index
 6252      10
 6253 253b C57D7F3C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm15	# MEM[base: index_ptr_840, index: _301, offset: 0B], tmp1078
 6253      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6254              		.loc 1 180 29 is_stmt 1 view .LVU2075
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6255              		.loc 1 181 9 view .LVU2076
 6256              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6257              		.loc 1 181 20 is_stmt 0 view .LVU2077
 6258 2540 C5FDEB0E 		vpor	ymm1, ymm0, YMMWORD PTR [rsi]	# tmp1079, quadmask.82_219, MEM[base: _1147, offset: 0B]
 6259 2544 4801C8   		add	rax, rcx	# index_ptr, _1158
 6260 2547 C5FD7F0E 		vmovdqa	YMMWORD PTR [rsi], ymm1	# MEM[base: _1147, offset: 0B], tmp1079
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6261              		.loc 1 181 29 is_stmt 1 view .LVU2078
 182:sieve_extend.c ****     }
 6262              		.loc 1 182 9 view .LVU2079
 6263              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 6264              		.loc 1 182 20 is_stmt 0 view .LVU2080
 6265 254b C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rsi+rdx]	# tmp1080, quadmask.82_219, MEM[base: _1147, index: _301, o
 6265      16
 6266 2550 C5FD7F1C 		vmovdqa	YMMWORD PTR [rsi+rdx], ymm3	# MEM[base: _1147, index: _301, offset: 0B], tmp1080
 6266      16
 182:sieve_extend.c ****     }
 6267              		.loc 1 182 29 is_stmt 1 view .LVU2081
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6268              		.loc 1 178 11 view .LVU2082
 6269 2555 4801CE   		add	rsi, rcx	# ivtmp.583, _1158
 6270 2558 4839C7   		cmp	rdi, rax	# fast_loop_ptr, index_ptr
 6271 255b 0F873CFF 		ja	.L480	#,
 6271      FFFF
 6272              		.p2align 4,,10
 6273 2561 0F1F8000 		.p2align 3
 6273      000000
 6274              	.L1073:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6275              		.loc 1 186 11 view .LVU2083
 6276 2568 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6277 256b 0F878700 		ja	.L483	#,
 6277      0000
 6278              	.L481:
 187:sieve_extend.c ****     }
 6279              		.loc 1 187 9 view .LVU2084
 6280              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 174


 187:sieve_extend.c ****     }
 6281              		.loc 1 187 20 is_stmt 0 view .LVU2085
 6282 2571 C5FDEB20 		vpor	ymm4, ymm0, YMMWORD PTR [rax]	# tmp618, quadmask.82_219, MEM[base: index_ptr_173, offset: 0B]
 6283 2575 C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: index_ptr_173, offset: 0B], tmp618
 187:sieve_extend.c ****     }
 6284              		.loc 1 187 29 is_stmt 1 view .LVU2086
 6285              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6286              		.loc 1 187 38 is_stmt 0 view .LVU2087
 6287 2579 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6288              		.loc 1 186 11 is_stmt 1 view .LVU2088
 6289 257c 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6290 257f 7777     		ja	.L483	#,
 187:sieve_extend.c ****     }
 6291              		.loc 1 187 9 view .LVU2089
 6292              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6293              		.loc 1 187 20 is_stmt 0 view .LVU2090
 6294 2581 C5FDEB28 		vpor	ymm5, ymm0, YMMWORD PTR [rax]	# tmp1054, quadmask.82_219, MEM[base: index_ptr_173, offset: 0B
 6295 2585 C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: index_ptr_173, offset: 0B], tmp1054
 187:sieve_extend.c ****     }
 6296              		.loc 1 187 29 is_stmt 1 view .LVU2091
 6297              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6298              		.loc 1 187 38 is_stmt 0 view .LVU2092
 6299 2589 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6300              		.loc 1 186 11 is_stmt 1 view .LVU2093
 6301 258c 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6302 258f 7767     		ja	.L483	#,
 187:sieve_extend.c ****     }
 6303              		.loc 1 187 9 view .LVU2094
 6304              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6305              		.loc 1 187 20 is_stmt 0 view .LVU2095
 6306 2591 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp1056, quadmask.82_219, MEM[base: index_ptr_173, offset: 0B
 6307 2595 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_173, offset: 0B], tmp1056
 187:sieve_extend.c ****     }
 6308              		.loc 1 187 29 is_stmt 1 view .LVU2096
 6309              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6310              		.loc 1 187 38 is_stmt 0 view .LVU2097
 6311 2599 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6312              		.loc 1 186 11 is_stmt 1 view .LVU2098
 6313 259c 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6314 259f 7757     		ja	.L483	#,
 187:sieve_extend.c ****     }
 6315              		.loc 1 187 9 view .LVU2099
 6316              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6317              		.loc 1 187 20 is_stmt 0 view .LVU2100
 6318 25a1 C5FDEB38 		vpor	ymm7, ymm0, YMMWORD PTR [rax]	# tmp1058, quadmask.82_219, MEM[base: index_ptr_173, offset: 0B
 6319 25a5 C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: index_ptr_173, offset: 0B], tmp1058
 187:sieve_extend.c ****     }
 6320              		.loc 1 187 29 is_stmt 1 view .LVU2101
GAS LISTING /tmp/ccIyIA9Z.s 			page 175


 6321              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6322              		.loc 1 187 38 is_stmt 0 view .LVU2102
 6323 25a9 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6324              		.loc 1 186 11 is_stmt 1 view .LVU2103
 6325 25ac 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6326 25af 7747     		ja	.L483	#,
 187:sieve_extend.c ****     }
 6327              		.loc 1 187 9 view .LVU2104
 6328              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6329              		.loc 1 187 20 is_stmt 0 view .LVU2105
 6330 25b1 C57DEB00 		vpor	ymm8, ymm0, YMMWORD PTR [rax]	# tmp1060, quadmask.82_219, MEM[base: index_ptr_173, offset: 0B
 6331 25b5 C57D7F00 		vmovdqa	YMMWORD PTR [rax], ymm8	# MEM[base: index_ptr_173, offset: 0B], tmp1060
 187:sieve_extend.c ****     }
 6332              		.loc 1 187 29 is_stmt 1 view .LVU2106
 6333              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6334              		.loc 1 187 38 is_stmt 0 view .LVU2107
 6335 25b9 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6336              		.loc 1 186 11 is_stmt 1 view .LVU2108
 6337 25bc 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6338 25bf 7737     		ja	.L483	#,
 187:sieve_extend.c ****     }
 6339              		.loc 1 187 9 view .LVU2109
 6340              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6341              		.loc 1 187 20 is_stmt 0 view .LVU2110
 6342 25c1 C57DEB08 		vpor	ymm9, ymm0, YMMWORD PTR [rax]	# tmp1062, quadmask.82_219, MEM[base: index_ptr_173, offset: 0B
 6343 25c5 C57D7F08 		vmovdqa	YMMWORD PTR [rax], ymm9	# MEM[base: index_ptr_173, offset: 0B], tmp1062
 187:sieve_extend.c ****     }
 6344              		.loc 1 187 29 is_stmt 1 view .LVU2111
 6345              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6346              		.loc 1 187 38 is_stmt 0 view .LVU2112
 6347 25c9 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6348              		.loc 1 186 11 is_stmt 1 view .LVU2113
 6349 25cc 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6350 25cf 7727     		ja	.L483	#,
 187:sieve_extend.c ****     }
 6351              		.loc 1 187 9 view .LVU2114
 6352              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6353              		.loc 1 187 20 is_stmt 0 view .LVU2115
 6354 25d1 C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp1064, quadmask.82_219, MEM[base: index_ptr_173, offset: 0
 6355 25d5 C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: index_ptr_173, offset: 0B], tmp1064
 187:sieve_extend.c ****     }
 6356              		.loc 1 187 29 is_stmt 1 view .LVU2116
 6357              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6358              		.loc 1 187 38 is_stmt 0 view .LVU2117
 6359 25d9 4801D0   		add	rax, rdx	# index_ptr, _301
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6360              		.loc 1 186 11 is_stmt 1 view .LVU2118
GAS LISTING /tmp/ccIyIA9Z.s 			page 176


 6361 25dc 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6362 25df 7717     		ja	.L483	#,
 187:sieve_extend.c ****     }
 6363              		.loc 1 187 9 view .LVU2119
 6364              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6365              		.loc 1 187 20 is_stmt 0 view .LVU2120
 6366 25e1 C57DEB18 		vpor	ymm11, ymm0, YMMWORD PTR [rax]	# tmp1066, quadmask.82_219, MEM[base: index_ptr_173, offset: 0
 6367 25e5 C57D7F18 		vmovdqa	YMMWORD PTR [rax], ymm11	# MEM[base: index_ptr_173, offset: 0B], tmp1066
 187:sieve_extend.c ****     }
 6368              		.loc 1 187 29 is_stmt 1 view .LVU2121
 6369              	.LVL312:
 6370              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 6371              		.loc 1 187 38 is_stmt 0 view .LVU2122
 6372 25e9 4801D0   		add	rax, rdx	# index_ptr, _301
 6373              	.LVL313:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6374              		.loc 1 186 11 is_stmt 1 view .LVU2123
 6375 25ec 4C39C0   		cmp	rax, r8	# index_ptr, _1121
 6376 25ef 7680     		jbe	.L481	#,
 6377              	.LVL314:
 6378              		.p2align 4,,10
 6379 25f1 0F1F8000 		.p2align 3
 6379      000000
 6380              	.L483:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 6381              		.loc 1 186 11 is_stmt 0 view .LVU2124
 6382              	.LBE612:
 6383              	.LBE614:
 6384              	.LBE608:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 6385              		.loc 1 256 41 is_stmt 1 view .LVU2125
 6386              	# sieve_extend.c:256:     for (counter_t index = range_start; index < range_stop_unique;) {
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 6387              		.loc 1 256 5 is_stmt 0 view .LVU2126
 6388 25f8 4939DB   		cmp	r11, rbx	# range_stop_unique, index
 6389 25fb 0F873FFD 		ja	.L482	#,
 6389      FFFF
 6390 2601 4C8B7424 		mov	r14, QWORD PTR 72[rsp]	# patternsize_bits, %sfp
 6390      48
 6391 2606 4C8B6C24 		mov	r13, QWORD PTR 64[rsp]	# index, %sfp
 6391      40
 6392              	.LVL315:
 6393              	.L455:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 6394              		.loc 1 256 5 view .LVU2127
 6395              	.LBE607:
 6396              	.LBE606:
 6397              	.LBE605:
 6398              	.LBE666:
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 6399              		.loc 1 476 11 is_stmt 1 view .LVU2128
 6400              	# sieve_extend.c:476:     for (;range_stop < block_stop;) {
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 6401              		.loc 1 476 5 is_stmt 0 view .LVU2129
 6402 260b 488B5C24 		mov	rbx, QWORD PTR 112[rsp]	# _2, %sfp
GAS LISTING /tmp/ccIyIA9Z.s 			page 177


 6402      70
 6403 2610 48395C24 		cmp	QWORD PTR 120[rsp], rbx	# %sfp, _2
 6403      78
 6404 2615 0F83F602 		jnb	.L1079	#,
 6404      0000
 6405              	.LVL316:
 6406              	.L454:
 6407              	.LBB667:
 477:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 6408              		.loc 1 477 9 is_stmt 1 view .LVU2130
 6409              	.LBB631:
 6410              	.LBI599:
 121:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 6411              		.loc 1 121 25 view .LVU2131
 6412              	.LBB601:
 122:sieve_extend.c ****     return index;
 6413              		.loc 1 122 5 view .LVU2132
 122:sieve_extend.c ****     return index;
 6414              		.loc 1 122 11 view .LVU2133
 6415              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6416              		.loc 1 122 23 is_stmt 0 view .LVU2134
 6417 261b 4D89EC   		mov	r12, r13	# tmp525, index
 6418 261e 49C1EC06 		shr	r12, 6	# tmp525,
 6419              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6420              		.loc 1 122 12 view .LVU2135
 6421 2622 4F8B1CE7 		mov	r11, QWORD PTR [r15+r12*8]	# *_873,* _101
 6422              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6423              		.loc 1 122 11 view .LVU2136
 6424 2626 4D0FA3EB 		bt	r11, r13	# *_873, index
 6425 262a 0F83A800 		jnc	.L441	#,
 6425      0000
 122:sieve_extend.c ****     return index;
 6426              		.loc 1 122 60 is_stmt 1 view .LVU2137
 6427              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6428              		.loc 1 122 65 is_stmt 0 view .LVU2138
 6429 2630 498D7D01 		lea	rdi, 1[r13]	# tmp760,
 6430              	.LVL317:
 6431              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6432              		.loc 1 122 23 view .LVU2139
 6433 2634 4889F9   		mov	rcx, rdi	# tmp530, index
 6434 2637 48C1E906 		shr	rcx, 6	# tmp530,
 6435              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6436              		.loc 1 122 12 view .LVU2140
 6437 263b 4D8B04CF 		mov	r8, QWORD PTR [r15+rcx*8]	# *_50, *_50
 6438              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6439              		.loc 1 122 65 view .LVU2141
 6440 263f 4989FD   		mov	r13, rdi	# index, tmp760
 122:sieve_extend.c ****     return index;
 6441              		.loc 1 122 11 is_stmt 1 view .LVU2142
 6442 2642 490FA3F8 		bt	r8, rdi	# *_50, index
GAS LISTING /tmp/ccIyIA9Z.s 			page 178


 6443 2646 0F838C00 		jnc	.L441	#,
 6443      0000
 122:sieve_extend.c ****     return index;
 6444              		.loc 1 122 60 view .LVU2143
 6445              	.LVL318:
 6446              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6447              		.loc 1 122 65 is_stmt 0 view .LVU2144
 6448 264c 49FFC5   		inc	r13	# index
 6449              	.LVL319:
 122:sieve_extend.c ****     return index;
 6450              		.loc 1 122 11 is_stmt 1 view .LVU2145
 6451              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6452              		.loc 1 122 23 is_stmt 0 view .LVU2146
 6453 264f 4D89EA   		mov	r10, r13	# tmp952, index
 6454 2652 49C1EA06 		shr	r10, 6	# tmp952,
 6455              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6456              		.loc 1 122 12 view .LVU2147
 6457 2656 4B8B14D7 		mov	rdx, QWORD PTR [r15+r10*8]	# *_50, *_50
 6458              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6459              		.loc 1 122 11 view .LVU2148
 6460 265a 4C0FA3EA 		bt	rdx, r13	# *_50, index
 6461 265e 7378     		jnc	.L441	#,
 122:sieve_extend.c ****     return index;
 6462              		.loc 1 122 60 is_stmt 1 view .LVU2149
 6463              	.LVL320:
 6464              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6465              		.loc 1 122 65 is_stmt 0 view .LVU2150
 6466 2660 4C8D6F02 		lea	r13, 2[rdi]	# index,
 6467              	.LVL321:
 122:sieve_extend.c ****     return index;
 6468              		.loc 1 122 11 is_stmt 1 view .LVU2151
 6469              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6470              		.loc 1 122 23 is_stmt 0 view .LVU2152
 6471 2664 4C89E8   		mov	rax, r13	# tmp956, index
 6472 2667 48C1E806 		shr	rax, 6	# tmp956,
 6473              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6474              		.loc 1 122 12 view .LVU2153
 6475 266b 498B34C7 		mov	rsi, QWORD PTR [r15+rax*8]	# *_50, *_50
 6476              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6477              		.loc 1 122 11 view .LVU2154
 6478 266f 4C0FA3EE 		bt	rsi, r13	# *_50, index
 6479 2673 7363     		jnc	.L441	#,
 122:sieve_extend.c ****     return index;
 6480              		.loc 1 122 60 is_stmt 1 view .LVU2155
 6481              	.LVL322:
 6482              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6483              		.loc 1 122 65 is_stmt 0 view .LVU2156
 6484 2675 4C8D6F03 		lea	r13, 3[rdi]	# index,
GAS LISTING /tmp/ccIyIA9Z.s 			page 179


 6485              	.LVL323:
 122:sieve_extend.c ****     return index;
 6486              		.loc 1 122 11 is_stmt 1 view .LVU2157
 6487              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6488              		.loc 1 122 23 is_stmt 0 view .LVU2158
 6489 2679 4D89E9   		mov	r9, r13	# tmp960, index
 6490 267c 49C1E906 		shr	r9, 6	# tmp960,
 6491              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6492              		.loc 1 122 12 view .LVU2159
 6493 2680 4B8B1CCF 		mov	rbx, QWORD PTR [r15+r9*8]	# *_50, *_50
 6494              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6495              		.loc 1 122 11 view .LVU2160
 6496 2684 4C0FA3EB 		bt	rbx, r13	# *_50, index
 6497 2688 734E     		jnc	.L441	#,
 122:sieve_extend.c ****     return index;
 6498              		.loc 1 122 60 is_stmt 1 view .LVU2161
 6499              	.LVL324:
 6500              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6501              		.loc 1 122 65 is_stmt 0 view .LVU2162
 6502 268a 4C8D6F04 		lea	r13, 4[rdi]	# index,
 6503              	.LVL325:
 122:sieve_extend.c ****     return index;
 6504              		.loc 1 122 11 is_stmt 1 view .LVU2163
 6505              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6506              		.loc 1 122 23 is_stmt 0 view .LVU2164
 6507 268e 4D89EC   		mov	r12, r13	# tmp964, index
 6508 2691 49C1EC06 		shr	r12, 6	# tmp964,
 6509              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6510              		.loc 1 122 12 view .LVU2165
 6511 2695 4F8B1CE7 		mov	r11, QWORD PTR [r15+r12*8]	# *_50, *_50
 6512              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6513              		.loc 1 122 11 view .LVU2166
 6514 2699 4D0FA3EB 		bt	r11, r13	# *_50, index
 6515 269d 7339     		jnc	.L441	#,
 122:sieve_extend.c ****     return index;
 6516              		.loc 1 122 60 is_stmt 1 view .LVU2167
 6517              	.LVL326:
 6518              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6519              		.loc 1 122 65 is_stmt 0 view .LVU2168
 6520 269f 4C8D6F05 		lea	r13, 5[rdi]	# index,
 6521              	.LVL327:
 122:sieve_extend.c ****     return index;
 6522              		.loc 1 122 11 is_stmt 1 view .LVU2169
 6523              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6524              		.loc 1 122 23 is_stmt 0 view .LVU2170
 6525 26a3 4C89E9   		mov	rcx, r13	# tmp968, index
 6526 26a6 48C1E906 		shr	rcx, 6	# tmp968,
 6527              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccIyIA9Z.s 			page 180


 122:sieve_extend.c ****     return index;
 6528              		.loc 1 122 12 view .LVU2171
 6529 26aa 4D8B04CF 		mov	r8, QWORD PTR [r15+rcx*8]	# *_50, *_50
 6530              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6531              		.loc 1 122 11 view .LVU2172
 6532 26ae 4D0FA3E8 		bt	r8, r13	# *_50, index
 6533 26b2 7324     		jnc	.L441	#,
 122:sieve_extend.c ****     return index;
 6534              		.loc 1 122 60 is_stmt 1 view .LVU2173
 6535              	.LVL328:
 6536              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6537              		.loc 1 122 65 is_stmt 0 view .LVU2174
 6538 26b4 4C8D6F06 		lea	r13, 6[rdi]	# index,
 6539              	.LVL329:
 122:sieve_extend.c ****     return index;
 6540              		.loc 1 122 11 is_stmt 1 view .LVU2175
 6541              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6542              		.loc 1 122 23 is_stmt 0 view .LVU2176
 6543 26b8 4D89EA   		mov	r10, r13	# tmp972, index
 6544 26bb 49C1EA06 		shr	r10, 6	# tmp972,
 6545              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6546              		.loc 1 122 12 view .LVU2177
 6547 26bf 4B8B14D7 		mov	rdx, QWORD PTR [r15+r10*8]	# *_50, *_50
 6548              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6549              		.loc 1 122 11 view .LVU2178
 6550 26c3 4C0FA3EA 		bt	rdx, r13	# *_50, index
 6551 26c7 730F     		jnc	.L441	#,
 122:sieve_extend.c ****     return index;
 6552              		.loc 1 122 60 is_stmt 1 view .LVU2179
 6553              	.LVL330:
 6554              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 6555              		.loc 1 122 65 is_stmt 0 view .LVU2180
 6556 26c9 4C8D6F07 		lea	r13, 7[rdi]	# index,
 6557              	.LVL331:
 122:sieve_extend.c ****     return index;
 6558              		.loc 1 122 11 is_stmt 1 view .LVU2181
 6559 26cd E949FFFF 		jmp	.L454	#
 6559      FF
 6560              	.LVL332:
 6561              		.p2align 4,,10
 6562 26d2 660F1F44 		.p2align 3
 6562      0000
 6563              	.L441:
 122:sieve_extend.c ****     return index;
 6564              		.loc 1 122 11 is_stmt 0 view .LVU2182
 6565              	.LBE601:
 6566              	.LBE631:
 6567              	.LBE667:
 6568              	.LBE673:
 6569              	.LBE679:
 6570              	# sieve_extend.c:506: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
GAS LISTING /tmp/ccIyIA9Z.s 			page 181


 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 6571              		.loc 1 506 88 view .LVU2183
 6572 26d8 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	# pattern_start, %sfp
 6572      50
 6573 26dd 488B5424 		mov	rdx, QWORD PTR 96[rsp]	# block$pattern_start, %sfp
 6573      60
 6574 26e2 488B4C24 		mov	rcx, QWORD PTR 104[rsp]	# prime, %sfp
 6574      68
 6575 26e7 4C89F0   		mov	rax, r14	# block$pattern_size, patternsize_bits
 6576 26ea 48897C24 		mov	QWORD PTR 96[rsp], rdi	# %sfp, pattern_start
 6576      60
 6577              	.LVL333:
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 6578              		.loc 1 506 88 view .LVU2184
 6579 26ef 4C896C24 		mov	QWORD PTR 104[rsp], r13	# %sfp, index
 6579      68
 6580              	.LVL334:
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 6581              		.loc 1 506 88 view .LVU2185
 6582 26f4 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# patternsize_bits, %sfp
 6582      58
 6583              	.LVL335:
 506:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 6584              		.loc 1 506 88 view .LVU2186
 6585 26f9 4C89EE   		mov	rsi, r13	# index, index
 6586 26fc E9FFF9FF 		jmp	.L439	#
 6586      FF
 6587              	.LVL336:
 6588              		.p2align 4,,10
 6589 2701 0F1F8000 		.p2align 3
 6589      000000
 6590              	.L465:
 6591              	.LBB680:
 6592              	.LBB674:
 6593              	.LBB668:
 497:sieve_extend.c ****         block.prime = prime;
 6594              		.loc 1 497 44 is_stmt 1 view .LVU2187
 6595              	.LBB632:
 6596              	.LBI632:
 221:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 6597              		.loc 1 221 20 view .LVU2188
 6598              	.LBB633:
 222:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 6599              		.loc 1 222 5 view .LVU2189
 223:sieve_extend.c **** 
 6600              		.loc 1 223 5 view .LVU2190
 6601              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 6602              		.loc 1 223 74 is_stmt 0 view .LVU2191
 6603 2708 4D89E2   		mov	r10, r12	# tmp619, step
 6604 270b 49C1E206 		sal	r10, 6	# tmp619,
 6605              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 6606              		.loc 1 223 21 view .LVU2192
 6607 270f 4901DA   		add	r10, rbx	# range_stop_unique, index
 6608              	.LVL337:
 6609              	.LBB634:
GAS LISTING /tmp/ccIyIA9Z.s 			page 182


 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 6610              		.loc 1 226 10 is_stmt 1 view .LVU2193
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 6611              		.loc 1 226 50 view .LVU2194
 6612              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 6613              		.loc 1 226 5 is_stmt 0 view .LVU2195
 6614 2712 4C39D3   		cmp	rbx, r10	# index, range_stop_unique
 6615 2715 0F83F0FE 		jnb	.L455	#,
 6615      FFFF
 6616              	.LBB635:
 6617              	.LBB636:
 6618              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 6619              		.loc 1 147 20 view .LVU2196
 6620 271b 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# _70, %sfp
 6620      78
 6621              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6622              		.loc 1 149 112 view .LVU2197
 6623 2720 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp622,
 6624              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 6625              		.loc 1 147 20 view .LVU2198
 6626 2724 4989CB   		mov	r11, rcx	# range_stop_word, _70
 6627 2727 49C1EB06 		shr	r11, 6	# range_stop_word,
 6628              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6629              		.loc 1 149 135 view .LVU2199
 6630 272b 4D89D9   		mov	r9, r11	# tmp628, range_stop_word
 6631              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 6632              		.loc 1 167 29 view .LVU2200
 6633 272e 89C8     		mov	eax, ecx	# tmp623, _70
 6634              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6635              		.loc 1 149 135 view .LVU2201
 6636 2730 4929F9   		sub	r9, rdi	# tmp628, tmp622
 6637              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 6638              		.loc 1 167 29 view .LVU2202
 6639 2733 F7D0     		not	eax	# tmp623
 6640 2735 48C7C6FF 		mov	rsi, -1	# tmp1562,
 6640      FFFFFF
 6641              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6642              		.loc 1 149 53 view .LVU2203
 6643 273c 4939FB   		cmp	r11, rdi	# range_stop_word, tmp622
 6644              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 6645              		.loc 1 167 29 view .LVU2204
 6646 273f C462FBF7 		shrx	r8, rsi, rax	# _380, tmp1562, tmp623
 6646      C6
 6647              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6648              		.loc 1 149 53 view .LVU2205
 6649 2744 4F8D0CCF 		lea	r9, [r15+r9*8]	# tmp630,
GAS LISTING /tmp/ccIyIA9Z.s 			page 183


 6650              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 6651              		.loc 1 167 29 view .LVU2206
 6652 2748 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _380
 6652      48
 6653              	# sieve_extend.c:161:    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_ali
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 6654              		.loc 1 161 83 view .LVU2207
 6655 274d 4F8D04DF 		lea	r8, [r15+r11*8]	# _365,
 6656 2751 4D89E3   		mov	r11, r12	# _1133, step
 6657              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 6658              		.loc 1 149 53 view .LVU2208
 6659 2754 4D0F46CF 		cmovbe	r9, r15	# _101,, fast_loop_ptr
 6660              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6661              		.loc 1 154 38 view .LVU2209
 6662 2758 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _347,
 6662      00000000 
 6663 2760 48C1E703 		sal	rdi, 3	# tmp634,
 6664 2764 49C1E304 		sal	r11, 4	# _1133,
 6665 2768 0F1F8400 		.p2align 4,,10
 6665      00000000 
 6666              		.p2align 3
 6667              	.L489:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6668              		.loc 1 154 38 view .LVU2210
 6669              	.LBE636:
 6670              	.LBE635:
 227:sieve_extend.c ****     }
 6671              		.loc 1 227 9 is_stmt 1 view .LVU2211
 6672 2770 4889D8   		mov	rax, rbx	# tmp637, index
 6673 2773 48C1E806 		shr	rax, 6	# tmp637,
 6674 2777 B9010000 		mov	ecx, 1	# tmp1565,
 6674      00
 6675              	.LBB640:
 6676              	.LBB637:
 6677              	# sieve_extend.c:148:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 6678              		.loc 1 148 78 is_stmt 0 view .LVU2212
 6679 277c 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 6680              	.LBE637:
 6681              	.LBE640:
 6682              	# sieve_extend.c:227:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 227:sieve_extend.c ****     }
 6683              		.loc 1 227 9 view .LVU2213
 6684 2780 C4E2E1F7 		shlx	rcx, rcx, rbx	# _332, tmp1565, index
 6684      C9
 6685              	.LVL338:
 6686              	.LBB641:
 6687              	.LBI635:
 146:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 6688              		.loc 1 146 20 is_stmt 1 view .LVU2214
 6689              	.LBB638:
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 6690              		.loc 1 147 4 view .LVU2215
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
GAS LISTING /tmp/ccIyIA9Z.s 			page 184


 6691              		.loc 1 148 4 view .LVU2216
 149:sieve_extend.c **** 
 6692              		.loc 1 149 4 view .LVU2217
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6693              		.loc 1 153 10 view .LVU2218
 6694 2785 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 6695 2788 0F830201 		jnb	.L484	#,
 6695      0000
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6696              		.loc 1 153 10 is_stmt 0 view .LVU2219
 6697 278e 4A8D3418 		lea	rsi, [rax+r11]	# ivtmp.610,
 6698              	.L485:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6699              		.loc 1 154 8 is_stmt 1 view .LVU2220
 6700              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6701              		.loc 1 154 19 is_stmt 0 view .LVU2221
 6702 2792 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6703              		.loc 1 154 29 is_stmt 1 view .LVU2222
 6704              	.LVL339:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6705              		.loc 1 155 8 view .LVU2223
 6706              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6707              		.loc 1 155 19 is_stmt 0 view .LVU2224
 6708 2795 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6709              		.loc 1 155 29 is_stmt 1 view .LVU2225
 6710              	.LVL340:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6711              		.loc 1 156 8 view .LVU2226
 6712              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6713              		.loc 1 156 19 is_stmt 0 view .LVU2227
 6714 2799 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6715              		.loc 1 156 29 is_stmt 1 view .LVU2228
 6716              	.LVL341:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6717              		.loc 1 157 8 view .LVU2229
 6718              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6719              		.loc 1 157 19 is_stmt 0 view .LVU2230
 6720 279c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6721              		.loc 1 157 29 is_stmt 1 view .LVU2231
 6722              	.LVL342:
 158:sieve_extend.c ****    }
 6723              		.loc 1 158 8 view .LVU2232
 6724 27a0 4801FE   		add	rsi, rdi	# ivtmp.610, tmp634
 6725              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6726              		.loc 1 158 19 is_stmt 0 view .LVU2233
 6727 27a3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6728              		.loc 1 158 29 is_stmt 1 view .LVU2234
GAS LISTING /tmp/ccIyIA9Z.s 			page 185


 6729 27a7 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6730              	.LVL343:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6731              		.loc 1 153 10 view .LVU2235
 6732 27aa 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 6733 27ad 0F86DD00 		jbe	.L484	#,
 6733      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6734              		.loc 1 154 8 view .LVU2236
 6735              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6736              		.loc 1 154 19 is_stmt 0 view .LVU2237
 6737 27b3 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6738              		.loc 1 154 29 is_stmt 1 view .LVU2238
 6739              	.LVL344:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6740              		.loc 1 155 8 view .LVU2239
 6741              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6742              		.loc 1 155 19 is_stmt 0 view .LVU2240
 6743 27b6 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6744              		.loc 1 155 29 is_stmt 1 view .LVU2241
 6745              	.LVL345:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6746              		.loc 1 156 8 view .LVU2242
 6747              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6748              		.loc 1 156 19 is_stmt 0 view .LVU2243
 6749 27ba 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6750              		.loc 1 156 29 is_stmt 1 view .LVU2244
 6751              	.LVL346:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6752              		.loc 1 157 8 view .LVU2245
 6753              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6754              		.loc 1 157 19 is_stmt 0 view .LVU2246
 6755 27bd 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6756              		.loc 1 157 29 is_stmt 1 view .LVU2247
 6757              	.LVL347:
 158:sieve_extend.c ****    }
 6758              		.loc 1 158 8 view .LVU2248
 6759 27c1 4801FE   		add	rsi, rdi	# ivtmp.610, tmp634
 6760              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6761              		.loc 1 158 19 is_stmt 0 view .LVU2249
 6762 27c4 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6763              		.loc 1 158 29 is_stmt 1 view .LVU2250
 6764 27c8 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6765              	.LVL348:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6766              		.loc 1 153 10 view .LVU2251
 6767 27cb 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
GAS LISTING /tmp/ccIyIA9Z.s 			page 186


 6768 27ce 0F86BC00 		jbe	.L484	#,
 6768      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6769              		.loc 1 154 8 view .LVU2252
 6770              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6771              		.loc 1 154 19 is_stmt 0 view .LVU2253
 6772 27d4 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6773              		.loc 1 154 29 is_stmt 1 view .LVU2254
 6774              	.LVL349:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6775              		.loc 1 155 8 view .LVU2255
 6776              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6777              		.loc 1 155 19 is_stmt 0 view .LVU2256
 6778 27d7 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6779              		.loc 1 155 29 is_stmt 1 view .LVU2257
 6780              	.LVL350:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6781              		.loc 1 156 8 view .LVU2258
 6782              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6783              		.loc 1 156 19 is_stmt 0 view .LVU2259
 6784 27db 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6785              		.loc 1 156 29 is_stmt 1 view .LVU2260
 6786              	.LVL351:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6787              		.loc 1 157 8 view .LVU2261
 6788              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6789              		.loc 1 157 19 is_stmt 0 view .LVU2262
 6790 27de 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6791              		.loc 1 157 29 is_stmt 1 view .LVU2263
 6792              	.LVL352:
 158:sieve_extend.c ****    }
 6793              		.loc 1 158 8 view .LVU2264
 6794 27e2 4801FE   		add	rsi, rdi	# ivtmp.610, tmp634
 6795              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6796              		.loc 1 158 19 is_stmt 0 view .LVU2265
 6797 27e5 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6798              		.loc 1 158 29 is_stmt 1 view .LVU2266
 6799 27e9 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6800              	.LVL353:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6801              		.loc 1 153 10 view .LVU2267
 6802 27ec 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 6803 27ef 0F869B00 		jbe	.L484	#,
 6803      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6804              		.loc 1 154 8 view .LVU2268
 6805              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 187


 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6806              		.loc 1 154 19 is_stmt 0 view .LVU2269
 6807 27f5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6808              		.loc 1 154 29 is_stmt 1 view .LVU2270
 6809              	.LVL354:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6810              		.loc 1 155 8 view .LVU2271
 6811              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6812              		.loc 1 155 19 is_stmt 0 view .LVU2272
 6813 27f8 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6814              		.loc 1 155 29 is_stmt 1 view .LVU2273
 6815              	.LVL355:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6816              		.loc 1 156 8 view .LVU2274
 6817              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6818              		.loc 1 156 19 is_stmt 0 view .LVU2275
 6819 27fc 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6820              		.loc 1 156 29 is_stmt 1 view .LVU2276
 6821              	.LVL356:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6822              		.loc 1 157 8 view .LVU2277
 6823              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6824              		.loc 1 157 19 is_stmt 0 view .LVU2278
 6825 27ff 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6826              		.loc 1 157 29 is_stmt 1 view .LVU2279
 6827              	.LVL357:
 158:sieve_extend.c ****    }
 6828              		.loc 1 158 8 view .LVU2280
 6829 2803 4801FE   		add	rsi, rdi	# ivtmp.610, tmp634
 6830              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6831              		.loc 1 158 19 is_stmt 0 view .LVU2281
 6832 2806 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6833              		.loc 1 158 29 is_stmt 1 view .LVU2282
 6834 280a 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6835              	.LVL358:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6836              		.loc 1 153 10 view .LVU2283
 6837 280d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 6838 2810 767E     		jbe	.L484	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6839              		.loc 1 154 8 view .LVU2284
 6840              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6841              		.loc 1 154 19 is_stmt 0 view .LVU2285
 6842 2812 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6843              		.loc 1 154 29 is_stmt 1 view .LVU2286
 6844              	.LVL359:
GAS LISTING /tmp/ccIyIA9Z.s 			page 188


 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6845              		.loc 1 155 8 view .LVU2287
 6846              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6847              		.loc 1 155 19 is_stmt 0 view .LVU2288
 6848 2815 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6849              		.loc 1 155 29 is_stmt 1 view .LVU2289
 6850              	.LVL360:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6851              		.loc 1 156 8 view .LVU2290
 6852              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6853              		.loc 1 156 19 is_stmt 0 view .LVU2291
 6854 2819 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6855              		.loc 1 156 29 is_stmt 1 view .LVU2292
 6856              	.LVL361:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6857              		.loc 1 157 8 view .LVU2293
 6858              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6859              		.loc 1 157 19 is_stmt 0 view .LVU2294
 6860 281c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6861              		.loc 1 157 29 is_stmt 1 view .LVU2295
 6862              	.LVL362:
 158:sieve_extend.c ****    }
 6863              		.loc 1 158 8 view .LVU2296
 6864 2820 4801FE   		add	rsi, rdi	# ivtmp.610, tmp634
 6865              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6866              		.loc 1 158 19 is_stmt 0 view .LVU2297
 6867 2823 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6868              		.loc 1 158 29 is_stmt 1 view .LVU2298
 6869 2827 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6870              	.LVL363:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6871              		.loc 1 153 10 view .LVU2299
 6872 282a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 6873 282d 7661     		jbe	.L484	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6874              		.loc 1 154 8 view .LVU2300
 6875              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6876              		.loc 1 154 19 is_stmt 0 view .LVU2301
 6877 282f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6878              		.loc 1 154 29 is_stmt 1 view .LVU2302
 6879              	.LVL364:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6880              		.loc 1 155 8 view .LVU2303
 6881              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6882              		.loc 1 155 19 is_stmt 0 view .LVU2304
 6883 2832 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
GAS LISTING /tmp/ccIyIA9Z.s 			page 189


 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6884              		.loc 1 155 29 is_stmt 1 view .LVU2305
 6885              	.LVL365:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6886              		.loc 1 156 8 view .LVU2306
 6887              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6888              		.loc 1 156 19 is_stmt 0 view .LVU2307
 6889 2836 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6890              		.loc 1 156 29 is_stmt 1 view .LVU2308
 6891              	.LVL366:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6892              		.loc 1 157 8 view .LVU2309
 6893              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6894              		.loc 1 157 19 is_stmt 0 view .LVU2310
 6895 2839 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6896              		.loc 1 157 29 is_stmt 1 view .LVU2311
 6897              	.LVL367:
 158:sieve_extend.c ****    }
 6898              		.loc 1 158 8 view .LVU2312
 6899 283d 4801FE   		add	rsi, rdi	# ivtmp.610, tmp634
 6900              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6901              		.loc 1 158 19 is_stmt 0 view .LVU2313
 6902 2840 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6903              		.loc 1 158 29 is_stmt 1 view .LVU2314
 6904 2844 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6905              	.LVL368:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6906              		.loc 1 153 10 view .LVU2315
 6907 2847 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 6908 284a 7644     		jbe	.L484	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6909              		.loc 1 154 8 view .LVU2316
 6910              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6911              		.loc 1 154 19 is_stmt 0 view .LVU2317
 6912 284c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6913              		.loc 1 154 29 is_stmt 1 view .LVU2318
 6914              	.LVL369:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6915              		.loc 1 155 8 view .LVU2319
 6916              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6917              		.loc 1 155 19 is_stmt 0 view .LVU2320
 6918 284f 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6919              		.loc 1 155 29 is_stmt 1 view .LVU2321
 6920              	.LVL370:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6921              		.loc 1 156 8 view .LVU2322
 6922              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 190


 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6923              		.loc 1 156 19 is_stmt 0 view .LVU2323
 6924 2853 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6925              		.loc 1 156 29 is_stmt 1 view .LVU2324
 6926              	.LVL371:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6927              		.loc 1 157 8 view .LVU2325
 6928              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6929              		.loc 1 157 19 is_stmt 0 view .LVU2326
 6930 2856 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6931              		.loc 1 157 29 is_stmt 1 view .LVU2327
 6932              	.LVL372:
 158:sieve_extend.c ****    }
 6933              		.loc 1 158 8 view .LVU2328
 6934 285a 4801FE   		add	rsi, rdi	# ivtmp.610, tmp634
 6935              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6936              		.loc 1 158 19 is_stmt 0 view .LVU2329
 6937 285d 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6938              		.loc 1 158 29 is_stmt 1 view .LVU2330
 6939 2861 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6940              	.LVL373:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6941              		.loc 1 153 10 view .LVU2331
 6942 2864 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 6943 2867 7627     		jbe	.L484	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6944              		.loc 1 154 8 view .LVU2332
 6945              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6946              		.loc 1 154 19 is_stmt 0 view .LVU2333
 6947 2869 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_93, offset: 0B], _332
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6948              		.loc 1 154 29 is_stmt 1 view .LVU2334
 6949              	.LVL374:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6950              		.loc 1 155 8 view .LVU2335
 6951              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6952              		.loc 1 155 19 is_stmt 0 view .LVU2336
 6953 286c 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_93, index: _347, offset: 0B], _332
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6954              		.loc 1 155 29 is_stmt 1 view .LVU2337
 6955              	.LVL375:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6956              		.loc 1 156 8 view .LVU2338
 6957              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6958              		.loc 1 156 19 is_stmt 0 view .LVU2339
 6959 2870 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1125, offset: 0B], _332
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6960              		.loc 1 156 29 is_stmt 1 view .LVU2340
 6961              	.LVL376:
GAS LISTING /tmp/ccIyIA9Z.s 			page 191


 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6962              		.loc 1 157 8 view .LVU2341
 6963              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6964              		.loc 1 157 19 is_stmt 0 view .LVU2342
 6965 2873 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1125, index: _347, offset: 0B], _332
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6966              		.loc 1 157 29 is_stmt 1 view .LVU2343
 6967              	.LVL377:
 158:sieve_extend.c ****    }
 6968              		.loc 1 158 8 view .LVU2344
 6969 2877 4801FE   		add	rsi, rdi	# ivtmp.610, tmp634
 6970              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 6971              		.loc 1 158 19 is_stmt 0 view .LVU2345
 6972 287a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_93, index: _347, step: 4, offset: 0B], _332
 158:sieve_extend.c ****    }
 6973              		.loc 1 158 29 is_stmt 1 view .LVU2346
 6974 287e 4801F8   		add	rax, rdi	# index_ptr, tmp634
 6975              	.LVL378:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6976              		.loc 1 153 10 view .LVU2347
 6977 2881 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 6978 2884 0F8708FF 		ja	.L485	#,
 6978      FFFF
 6979 288a 660F1F44 		.p2align 4,,10
 6979      0000
 6980              		.p2align 3
 6981              	.L484:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 6982              		.loc 1 161 4 view .LVU2348
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6983              		.loc 1 162 4 view .LVU2349
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6984              		.loc 1 162 10 view .LVU2350
 6985 2890 4C39C0   		cmp	rax, r8	# index_ptr, _365
 6986 2893 735B     		jnb	.L486	#,
 6987              	.L487:
 163:sieve_extend.c ****    }
 6988              		.loc 1 163 8 view .LVU2351
 6989              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 6990              		.loc 1 163 19 is_stmt 0 view .LVU2352
 6991 2895 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 6992              		.loc 1 163 29 is_stmt 1 view .LVU2353
 6993              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 6994              		.loc 1 163 38 is_stmt 0 view .LVU2354
 6995 2898 4801D0   		add	rax, rdx	# index_ptr, _347
 6996              	.LVL379:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 6997              		.loc 1 162 10 is_stmt 1 view .LVU2355
 6998 289b 4C39C0   		cmp	rax, r8	# index_ptr, _365
 6999 289e 7350     		jnb	.L486	#,
 163:sieve_extend.c ****    }
 7000              		.loc 1 163 8 view .LVU2356
GAS LISTING /tmp/ccIyIA9Z.s 			page 192


 7001              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7002              		.loc 1 163 19 is_stmt 0 view .LVU2357
 7003 28a0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7004              		.loc 1 163 29 is_stmt 1 view .LVU2358
 7005              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7006              		.loc 1 163 38 is_stmt 0 view .LVU2359
 7007 28a3 4801D0   		add	rax, rdx	# index_ptr, _347
 7008              	.LVL380:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7009              		.loc 1 162 10 is_stmt 1 view .LVU2360
 7010 28a6 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7011 28a9 7345     		jnb	.L486	#,
 163:sieve_extend.c ****    }
 7012              		.loc 1 163 8 view .LVU2361
 7013              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7014              		.loc 1 163 19 is_stmt 0 view .LVU2362
 7015 28ab 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7016              		.loc 1 163 29 is_stmt 1 view .LVU2363
 7017              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7018              		.loc 1 163 38 is_stmt 0 view .LVU2364
 7019 28ae 4801D0   		add	rax, rdx	# index_ptr, _347
 7020              	.LVL381:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7021              		.loc 1 162 10 is_stmt 1 view .LVU2365
 7022 28b1 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7023 28b4 733A     		jnb	.L486	#,
 163:sieve_extend.c ****    }
 7024              		.loc 1 163 8 view .LVU2366
 7025              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7026              		.loc 1 163 19 is_stmt 0 view .LVU2367
 7027 28b6 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7028              		.loc 1 163 29 is_stmt 1 view .LVU2368
 7029              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7030              		.loc 1 163 38 is_stmt 0 view .LVU2369
 7031 28b9 4801D0   		add	rax, rdx	# index_ptr, _347
 7032              	.LVL382:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7033              		.loc 1 162 10 is_stmt 1 view .LVU2370
 7034 28bc 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7035 28bf 732F     		jnb	.L486	#,
 163:sieve_extend.c ****    }
 7036              		.loc 1 163 8 view .LVU2371
 7037              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7038              		.loc 1 163 19 is_stmt 0 view .LVU2372
 7039 28c1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7040              		.loc 1 163 29 is_stmt 1 view .LVU2373
GAS LISTING /tmp/ccIyIA9Z.s 			page 193


 7041              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7042              		.loc 1 163 38 is_stmt 0 view .LVU2374
 7043 28c4 4801D0   		add	rax, rdx	# index_ptr, _347
 7044              	.LVL383:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7045              		.loc 1 162 10 is_stmt 1 view .LVU2375
 7046 28c7 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7047 28ca 7324     		jnb	.L486	#,
 163:sieve_extend.c ****    }
 7048              		.loc 1 163 8 view .LVU2376
 7049              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7050              		.loc 1 163 19 is_stmt 0 view .LVU2377
 7051 28cc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7052              		.loc 1 163 29 is_stmt 1 view .LVU2378
 7053              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7054              		.loc 1 163 38 is_stmt 0 view .LVU2379
 7055 28cf 4801D0   		add	rax, rdx	# index_ptr, _347
 7056              	.LVL384:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7057              		.loc 1 162 10 is_stmt 1 view .LVU2380
 7058 28d2 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7059 28d5 7319     		jnb	.L486	#,
 163:sieve_extend.c ****    }
 7060              		.loc 1 163 8 view .LVU2381
 7061              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7062              		.loc 1 163 19 is_stmt 0 view .LVU2382
 7063 28d7 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7064              		.loc 1 163 29 is_stmt 1 view .LVU2383
 7065              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7066              		.loc 1 163 38 is_stmt 0 view .LVU2384
 7067 28da 4801D0   		add	rax, rdx	# index_ptr, _347
 7068              	.LVL385:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7069              		.loc 1 162 10 is_stmt 1 view .LVU2385
 7070 28dd 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7071 28e0 730E     		jnb	.L486	#,
 163:sieve_extend.c ****    }
 7072              		.loc 1 163 8 view .LVU2386
 7073              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7074              		.loc 1 163 19 is_stmt 0 view .LVU2387
 7075 28e2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_85, offset: 0B], _332
 163:sieve_extend.c ****    }
 7076              		.loc 1 163 29 is_stmt 1 view .LVU2388
 7077              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7078              		.loc 1 163 38 is_stmt 0 view .LVU2389
 7079 28e5 4801D0   		add	rax, rdx	# index_ptr, _347
 7080              	.LVL386:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 194


 7081              		.loc 1 162 10 is_stmt 1 view .LVU2390
 7082 28e8 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7083 28eb 72A8     		jb	.L487	#,
 7084 28ed 0F1F00   		.p2align 4,,10
 7085              		.p2align 3
 7086              	.L486:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 7087              		.loc 1 166 4 view .LVU2391
 7088              	# sieve_extend.c:166:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 7089              		.loc 1 166 7 is_stmt 0 view .LVU2392
 7090 28f0 4C39C0   		cmp	rax, r8	# index_ptr, _365
 7091 28f3 7433     		je	.L1080	#,
 7092              	.LVL387:
 7093              	.L488:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 7094              		.loc 1 166 7 view .LVU2393
 7095              	.LBE638:
 7096              	.LBE641:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 7097              		.loc 1 226 77 is_stmt 1 view .LVU2394
 7098              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 7099              		.loc 1 226 83 is_stmt 0 view .LVU2395
 7100 28f5 4C01E3   		add	rbx, r12	# index, step
 7101              	.LVL388:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 7102              		.loc 1 226 50 is_stmt 1 view .LVU2396
 7103              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 7104              		.loc 1 226 5 is_stmt 0 view .LVU2397
 7105 28f8 4939DA   		cmp	r10, rbx	# range_stop_unique, index
 7106 28fb 0F876FFE 		ja	.L489	#,
 7106      FFFF
 7107              	.LVL389:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 7108              		.loc 1 226 5 view .LVU2398
 7109              	.LBE634:
 7110              	.LBE633:
 7111              	.LBE632:
 7112              	.LBE668:
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7113              		.loc 1 476 11 is_stmt 1 view .LVU2399
 7114              	# sieve_extend.c:476:     for (;range_stop < block_stop;) {
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7115              		.loc 1 476 5 is_stmt 0 view .LVU2400
 7116 2901 488B5C24 		mov	rbx, QWORD PTR 112[rsp]	# _2, %sfp
 7116      70
 7117              	.LVL390:
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7118              		.loc 1 476 5 view .LVU2401
 7119 2906 48395C24 		cmp	QWORD PTR 120[rsp], rbx	# %sfp, _2
 7119      78
 7120 290b 0F820AFD 		jb	.L454	#,
 7120      FFFF
 7121              	.LVL391:
 7122              	.L1079:
GAS LISTING /tmp/ccIyIA9Z.s 			page 195


 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 7123              		.loc 1 476 5 view .LVU2402
 7124 2911 488B5C24 		mov	rbx, QWORD PTR 104[rsp]	# index, %sfp
 7124      68
 7125 2916 48895C24 		mov	QWORD PTR 48[rsp], rbx	# %sfp, index
 7125      30
 7126 291b 4889D9   		mov	rcx, rbx	# prime, index
 7127 291e E95C0400 		jmp	.L443	#
 7127      00
 7128              	.LVL392:
 7129              		.p2align 4,,10
 7130 2923 0F1F4400 		.p2align 3
 7130      00
 7131              	.L1080:
 7132              	.LBB669:
 7133              	.LBB645:
 7134              	.LBB644:
 7135              	.LBB643:
 7136              	.LBB642:
 7137              	.LBB639:
 167:sieve_extend.c ****    }
 7138              		.loc 1 167 7 is_stmt 1 view .LVU2403
 7139              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 7140              		.loc 1 167 27 is_stmt 0 view .LVU2404
 7141 2928 48234C24 		and	rcx, QWORD PTR 72[rsp]	# tmp639, %sfp
 7141      48
 7142              	.LVL393:
 7143              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 7144              		.loc 1 167 18 view .LVU2405
 7145 292d 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_162, tmp639
 7146 2930 EBC3     		jmp	.L488	#
 7147              	.LVL394:
 7148              		.p2align 4,,10
 7149 2932 660F1F44 		.p2align 3
 7149      0000
 7150              	.L1078:
 167:sieve_extend.c ****    }
 7151              		.loc 1 167 18 view .LVU2406
 7152              	.LBE639:
 7153              	.LBE642:
 7154              	.LBE643:
 7155              	.LBE644:
 7156              	.LBE645:
 495:sieve_extend.c ****         else if (step < VECTORSTEP_FASTER) setBitsTrue_largeRange_vector(bitstorage, start, step, r
 7157              		.loc 1 495 44 is_stmt 1 view .LVU2407
 7158              	.LBB646:
 7159              	.LBI646:
 195:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 7160              		.loc 1 195 14 view .LVU2408
 7161              	.LBB647:
 196:sieve_extend.c **** 
 7162              		.loc 1 196 5 view .LVU2409
 7163              	# sieve_extend.c:196:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 196:sieve_extend.c **** 
 7164              		.loc 1 196 74 is_stmt 0 view .LVU2410
GAS LISTING /tmp/ccIyIA9Z.s 			page 196


 7165 2938 4D89E3   		mov	r11, r12	# tmp541, step
 7166 293b 49C1E306 		sal	r11, 6	# tmp541,
 7167 293f 31FF     		xor	edi, edi	# _252
 7168 2941 4901DB   		add	r11, rbx	# tmp542, index
 7169 2944 400F92C7 		setc	dil	#, _252
 7170              	.LVL395:
 198:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 7171              		.loc 1 198 5 is_stmt 1 view .LVU2411
 7172              	# sieve_extend.c:198:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 198:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 7173              		.loc 1 198 8 is_stmt 0 view .LVU2412
 7174 2948 4C395C24 		cmp	QWORD PTR 120[rsp], r11	# %sfp, tmp542
 7174      78
 7175 294d 0F822503 		jb	.L452	#,
 7175      0000
 7176              	.LVL396:
 7177              	.LBB648:
 211:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7178              		.loc 1 211 54 is_stmt 1 view .LVU2413
 7179              	# sieve_extend.c:211:         for (register counter_t index = range_start; index <= range_stop_uniq
 211:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7180              		.loc 1 211 9 is_stmt 0 view .LVU2414
 7181 2953 4885FF   		test	rdi, rdi	# _252
 7182 2956 0F85AFFC 		jne	.L455	#,
 7182      FFFF
 7183              	.LBB649:
 7184              	.LBB650:
 7185              	.LBB651:
 7186              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 7187              		.loc 1 147 20 view .LVU2415
 7188 295c 488B5424 		mov	rdx, QWORD PTR 120[rsp]	# _70, %sfp
 7188      78
 7189              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 7190              		.loc 1 149 112 view .LVU2416
 7191 2961 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp550,
 7192              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 7193              		.loc 1 147 20 view .LVU2417
 7194 2965 4989D2   		mov	r10, rdx	# range_stop_word, _70
 7195 2968 49C1EA06 		shr	r10, 6	# range_stop_word,
 7196              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 7197              		.loc 1 167 29 view .LVU2418
 7198 296c 4189D1   		mov	r9d, edx	# tmp551, _70
 7199              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 7200              		.loc 1 149 135 view .LVU2419
 7201 296f 4C89D6   		mov	rsi, r10	# tmp556, range_stop_word
 7202 2972 4829FE   		sub	rsi, rdi	# tmp556, tmp550
 7203              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 7204              		.loc 1 167 29 view .LVU2420
 7205 2975 41F7D1   		not	r9d	# tmp551
 7206 2978 48C7C0FF 		mov	rax, -1	# tmp1523,
 7206      FFFFFF
GAS LISTING /tmp/ccIyIA9Z.s 			page 197


 7207 297f 4939FA   		cmp	r10, rdi	# range_stop_word, tmp550
 7208 2982 C462B3F7 		shrx	r8, rax, r9	# _179, tmp1523, tmp551
 7208      C0
 7209 2987 4C89E2   		mov	rdx, r12	# _1193, step
 7210 298a 4D8D0CF7 		lea	r9, [r15+rsi*8]	# tmp558,
 7211 298e 4D0F46CF 		cmovbe	r9, r15	# _101,, fast_loop_ptr
 7212 2992 48C1E204 		sal	rdx, 4	# _1193,
 7213 2996 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _179
 7213      48
 7214              	.LBE651:
 7215              	.LBE650:
 7216              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7217              		.loc 1 214 74 view .LVU2421
 7218 299b 4C897424 		mov	QWORD PTR 64[rsp], r14	# %sfp, patternsize_bits
 7218      40
 7219              	.LBB655:
 7220              	.LBB652:
 7221              	# sieve_extend.c:161:    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_ali
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 7222              		.loc 1 161 83 view .LVU2422
 7223 29a0 4F8D04D7 		lea	r8, [r15+r10*8]	# _164,
 7224              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7225              		.loc 1 154 38 view .LVU2423
 7226 29a4 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _146,
 7226      00000000 
 7227 29ac 48C1E703 		sal	rdi, 3	# tmp562,
 7228              	.LBE652:
 7229              	.LBE655:
 7230              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7231              		.loc 1 214 74 view .LVU2424
 7232 29b0 41BA0100 		mov	r10d, 1	# tmp565,
 7232      0000
 7233 29b6 4989D6   		mov	r14, rdx	# _1193, _1193
 7234              	.LVL397:
 7235 29b9 0F1F8000 		.p2align 4,,10
 7235      000000
 7236              		.p2align 3
 7237              	.L464:
 212:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 7238              		.loc 1 212 13 is_stmt 1 view .LVU2425
 7239              	# sieve_extend.c:212:             register counter_t index_word = wordindex(index);
 212:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 7240              		.loc 1 212 32 is_stmt 0 view .LVU2426
 7241 29c0 4889D8   		mov	rax, rbx	# index_word, index
 7242 29c3 48C1E806 		shr	rax, 6	# index_word,
 7243              	.LVL398:
 213:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 7244              		.loc 1 213 13 is_stmt 1 view .LVU2427
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7245              		.loc 1 214 13 view .LVU2428
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7246              		.loc 1 214 19 view .LVU2429
 7247              	# sieve_extend.c:213:             register bitword_t mask = SAFE_ZERO;
 213:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
GAS LISTING /tmp/ccIyIA9Z.s 			page 198


 7248              		.loc 1 213 32 is_stmt 0 view .LVU2430
 7249 29c7 31D2     		xor	edx, edx	# mask
 7250              	.LVL399:
 7251              	.L458:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7252              		.loc 1 214 66 is_stmt 1 view .LVU2431
 7253              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7254              		.loc 1 214 74 is_stmt 0 view .LVU2432
 7255 29c9 C4C2E1F7 		shlx	rsi, r10, rbx	# tmp564, tmp565, index
 7255      F2
 7256              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7257              		.loc 1 214 57 view .LVU2433
 7258 29ce 4C01E3   		add	rbx, r12	# index, step
 7259              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7260              		.loc 1 214 71 view .LVU2434
 7261 29d1 4809F2   		or	rdx, rsi	# mask, tmp564
 7262              	.LVL400:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7263              		.loc 1 214 51 is_stmt 1 view .LVU2435
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7264              		.loc 1 214 19 view .LVU2436
 7265              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7266              		.loc 1 214 33 is_stmt 0 view .LVU2437
 7267 29d4 4889DE   		mov	rsi, rbx	# tmp566, index
 7268 29d7 48C1EE06 		shr	rsi, 6	# tmp566,
 7269              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7270              		.loc 1 214 13 view .LVU2438
 7271 29db 4839F0   		cmp	rax, rsi	# index_word, tmp566
 7272 29de 0F85AC00 		jne	.L921	#,
 7272      0000
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7273              		.loc 1 214 66 is_stmt 1 view .LVU2439
 7274              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7275              		.loc 1 214 74 is_stmt 0 view .LVU2440
 7276 29e4 C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1000, tmp565, index
 7276      F2
 7277              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7278              		.loc 1 214 57 view .LVU2441
 7279 29e9 4C01E3   		add	rbx, r12	# index, step
 7280              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7281              		.loc 1 214 71 view .LVU2442
 7282 29ec 4809F2   		or	rdx, rsi	# mask, tmp1000
 7283              	.LVL401:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7284              		.loc 1 214 51 is_stmt 1 view .LVU2443
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7285              		.loc 1 214 19 view .LVU2444
 7286              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
GAS LISTING /tmp/ccIyIA9Z.s 			page 199


 7287              		.loc 1 214 33 is_stmt 0 view .LVU2445
 7288 29ef 4889DE   		mov	rsi, rbx	# tmp1001, index
 7289 29f2 48C1EE06 		shr	rsi, 6	# tmp1001,
 7290              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7291              		.loc 1 214 13 view .LVU2446
 7292 29f6 4839F0   		cmp	rax, rsi	# index_word, tmp1001
 7293 29f9 0F859100 		jne	.L921	#,
 7293      0000
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7294              		.loc 1 214 66 is_stmt 1 view .LVU2447
 7295              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7296              		.loc 1 214 74 is_stmt 0 view .LVU2448
 7297 29ff C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1002, tmp565, index
 7297      F2
 7298              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7299              		.loc 1 214 57 view .LVU2449
 7300 2a04 4C01E3   		add	rbx, r12	# index, step
 7301              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7302              		.loc 1 214 71 view .LVU2450
 7303 2a07 4809F2   		or	rdx, rsi	# mask, tmp1002
 7304              	.LVL402:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7305              		.loc 1 214 51 is_stmt 1 view .LVU2451
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7306              		.loc 1 214 19 view .LVU2452
 7307              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7308              		.loc 1 214 33 is_stmt 0 view .LVU2453
 7309 2a0a 4889DE   		mov	rsi, rbx	# tmp1003, index
 7310 2a0d 48C1EE06 		shr	rsi, 6	# tmp1003,
 7311              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7312              		.loc 1 214 13 view .LVU2454
 7313 2a11 4839F0   		cmp	rax, rsi	# index_word, tmp1003
 7314 2a14 757A     		jne	.L921	#,
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7315              		.loc 1 214 66 is_stmt 1 view .LVU2455
 7316              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7317              		.loc 1 214 74 is_stmt 0 view .LVU2456
 7318 2a16 C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1004, tmp565, index
 7318      F2
 7319              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7320              		.loc 1 214 57 view .LVU2457
 7321 2a1b 4C01E3   		add	rbx, r12	# index, step
 7322              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7323              		.loc 1 214 71 view .LVU2458
 7324 2a1e 4809F2   		or	rdx, rsi	# mask, tmp1004
 7325              	.LVL403:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7326              		.loc 1 214 51 is_stmt 1 view .LVU2459
GAS LISTING /tmp/ccIyIA9Z.s 			page 200


 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7327              		.loc 1 214 19 view .LVU2460
 7328              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7329              		.loc 1 214 33 is_stmt 0 view .LVU2461
 7330 2a21 4889DE   		mov	rsi, rbx	# tmp1005, index
 7331 2a24 48C1EE06 		shr	rsi, 6	# tmp1005,
 7332              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7333              		.loc 1 214 13 view .LVU2462
 7334 2a28 4839F0   		cmp	rax, rsi	# index_word, tmp1005
 7335 2a2b 7563     		jne	.L921	#,
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7336              		.loc 1 214 66 is_stmt 1 view .LVU2463
 7337              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7338              		.loc 1 214 74 is_stmt 0 view .LVU2464
 7339 2a2d C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1006, tmp565, index
 7339      F2
 7340              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7341              		.loc 1 214 57 view .LVU2465
 7342 2a32 4C01E3   		add	rbx, r12	# index, step
 7343              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7344              		.loc 1 214 71 view .LVU2466
 7345 2a35 4809F2   		or	rdx, rsi	# mask, tmp1006
 7346              	.LVL404:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7347              		.loc 1 214 51 is_stmt 1 view .LVU2467
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7348              		.loc 1 214 19 view .LVU2468
 7349              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7350              		.loc 1 214 33 is_stmt 0 view .LVU2469
 7351 2a38 4889DE   		mov	rsi, rbx	# tmp1007, index
 7352 2a3b 48C1EE06 		shr	rsi, 6	# tmp1007,
 7353              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7354              		.loc 1 214 13 view .LVU2470
 7355 2a3f 4839F0   		cmp	rax, rsi	# index_word, tmp1007
 7356 2a42 754C     		jne	.L921	#,
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7357              		.loc 1 214 66 is_stmt 1 view .LVU2471
 7358              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7359              		.loc 1 214 74 is_stmt 0 view .LVU2472
 7360 2a44 C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1008, tmp565, index
 7360      F2
 7361              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7362              		.loc 1 214 57 view .LVU2473
 7363 2a49 4C01E3   		add	rbx, r12	# index, step
 7364              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7365              		.loc 1 214 71 view .LVU2474
 7366 2a4c 4809F2   		or	rdx, rsi	# mask, tmp1008
GAS LISTING /tmp/ccIyIA9Z.s 			page 201


 7367              	.LVL405:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7368              		.loc 1 214 51 is_stmt 1 view .LVU2475
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7369              		.loc 1 214 19 view .LVU2476
 7370              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7371              		.loc 1 214 33 is_stmt 0 view .LVU2477
 7372 2a4f 4889DE   		mov	rsi, rbx	# tmp1009, index
 7373 2a52 48C1EE06 		shr	rsi, 6	# tmp1009,
 7374              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7375              		.loc 1 214 13 view .LVU2478
 7376 2a56 4839F0   		cmp	rax, rsi	# index_word, tmp1009
 7377 2a59 7535     		jne	.L921	#,
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7378              		.loc 1 214 66 is_stmt 1 view .LVU2479
 7379              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7380              		.loc 1 214 74 is_stmt 0 view .LVU2480
 7381 2a5b C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1010, tmp565, index
 7381      F2
 7382              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7383              		.loc 1 214 57 view .LVU2481
 7384 2a60 4C01E3   		add	rbx, r12	# index, step
 7385              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7386              		.loc 1 214 71 view .LVU2482
 7387 2a63 4809F2   		or	rdx, rsi	# mask, tmp1010
 7388              	.LVL406:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7389              		.loc 1 214 51 is_stmt 1 view .LVU2483
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7390              		.loc 1 214 19 view .LVU2484
 7391              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7392              		.loc 1 214 33 is_stmt 0 view .LVU2485
 7393 2a66 4889DE   		mov	rsi, rbx	# tmp1011, index
 7394 2a69 48C1EE06 		shr	rsi, 6	# tmp1011,
 7395              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7396              		.loc 1 214 13 view .LVU2486
 7397 2a6d 4839F0   		cmp	rax, rsi	# index_word, tmp1011
 7398 2a70 751E     		jne	.L921	#,
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7399              		.loc 1 214 66 is_stmt 1 view .LVU2487
 7400              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7401              		.loc 1 214 74 is_stmt 0 view .LVU2488
 7402 2a72 C4C2E1F7 		shlx	rsi, r10, rbx	# tmp1012, tmp565, index
 7402      F2
 7403              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7404              		.loc 1 214 57 view .LVU2489
 7405 2a77 4C01E3   		add	rbx, r12	# index, step
 7406              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
GAS LISTING /tmp/ccIyIA9Z.s 			page 202


 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7407              		.loc 1 214 71 view .LVU2490
 7408 2a7a 4809F2   		or	rdx, rsi	# mask, tmp1012
 7409              	.LVL407:
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7410              		.loc 1 214 51 is_stmt 1 view .LVU2491
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7411              		.loc 1 214 19 view .LVU2492
 7412              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7413              		.loc 1 214 33 is_stmt 0 view .LVU2493
 7414 2a7d 4889DE   		mov	rsi, rbx	# tmp1013, index
 7415 2a80 48C1EE06 		shr	rsi, 6	# tmp1013,
 7416              	# sieve_extend.c:214:             for(; index_word == wordindex(index); index += step) mask |= mark
 214:sieve_extend.c ****             applyMask_word(bitstorage, step, range_stop, mask, index_word);
 7417              		.loc 1 214 13 view .LVU2494
 7418 2a84 4839F0   		cmp	rax, rsi	# index_word, tmp1013
 7419 2a87 0F843CFF 		je	.L458	#,
 7419      FFFF
 7420 2a8d 0F1F00   		.p2align 4,,10
 7421              		.p2align 3
 7422              	.L921:
 215:sieve_extend.c ****         }
 7423              		.loc 1 215 13 is_stmt 1 view .LVU2495
 7424              	.LVL408:
 7425              	.LBB656:
 7426              	.LBI650:
 146:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 7427              		.loc 1 146 20 view .LVU2496
 7428              	.LBB653:
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 7429              		.loc 1 147 4 view .LVU2497
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 7430              		.loc 1 148 4 view .LVU2498
 7431              	# sieve_extend.c:148:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 7432              		.loc 1 148 78 is_stmt 0 view .LVU2499
 7433 2a90 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 7434              	.LVL409:
 149:sieve_extend.c **** 
 7435              		.loc 1 149 4 is_stmt 1 view .LVU2500
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7436              		.loc 1 153 10 view .LVU2501
 7437 2a94 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 7438 2a97 0F830301 		jnb	.L459	#,
 7438      0000
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7439              		.loc 1 153 10 is_stmt 0 view .LVU2502
 7440 2a9d 4A8D3430 		lea	rsi, [rax+r14]	# ivtmp.534,
 7441              	.L460:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7442              		.loc 1 154 8 is_stmt 1 view .LVU2503
 7443              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7444              		.loc 1 154 19 is_stmt 0 view .LVU2504
 7445 2aa1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 203


 7446              		.loc 1 154 29 is_stmt 1 view .LVU2505
 7447              	.LVL410:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7448              		.loc 1 155 8 view .LVU2506
 7449              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7450              		.loc 1 155 19 is_stmt 0 view .LVU2507
 7451 2aa4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7452              		.loc 1 155 29 is_stmt 1 view .LVU2508
 7453              	.LVL411:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7454              		.loc 1 156 8 view .LVU2509
 7455              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7456              		.loc 1 156 19 is_stmt 0 view .LVU2510
 7457 2aa8 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7458              		.loc 1 156 29 is_stmt 1 view .LVU2511
 7459              	.LVL412:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7460              		.loc 1 157 8 view .LVU2512
 7461              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7462              		.loc 1 157 19 is_stmt 0 view .LVU2513
 7463 2aab 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7464              		.loc 1 157 29 is_stmt 1 view .LVU2514
 7465              	.LVL413:
 158:sieve_extend.c ****    }
 7466              		.loc 1 158 8 view .LVU2515
 7467 2aaf 4801FE   		add	rsi, rdi	# ivtmp.534, tmp562
 7468              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7469              		.loc 1 158 19 is_stmt 0 view .LVU2516
 7470 2ab2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7471              		.loc 1 158 29 is_stmt 1 view .LVU2517
 7472 2ab6 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7473              	.LVL414:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7474              		.loc 1 153 10 view .LVU2518
 7475 2ab9 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7476 2abc 0F86DE00 		jbe	.L459	#,
 7476      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7477              		.loc 1 154 8 view .LVU2519
 7478              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7479              		.loc 1 154 19 is_stmt 0 view .LVU2520
 7480 2ac2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7481              		.loc 1 154 29 is_stmt 1 view .LVU2521
 7482              	.LVL415:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7483              		.loc 1 155 8 view .LVU2522
 7484              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 204


 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7485              		.loc 1 155 19 is_stmt 0 view .LVU2523
 7486 2ac5 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7487              		.loc 1 155 29 is_stmt 1 view .LVU2524
 7488              	.LVL416:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7489              		.loc 1 156 8 view .LVU2525
 7490              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7491              		.loc 1 156 19 is_stmt 0 view .LVU2526
 7492 2ac9 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7493              		.loc 1 156 29 is_stmt 1 view .LVU2527
 7494              	.LVL417:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7495              		.loc 1 157 8 view .LVU2528
 7496              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7497              		.loc 1 157 19 is_stmt 0 view .LVU2529
 7498 2acc 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7499              		.loc 1 157 29 is_stmt 1 view .LVU2530
 7500              	.LVL418:
 158:sieve_extend.c ****    }
 7501              		.loc 1 158 8 view .LVU2531
 7502 2ad0 4801FE   		add	rsi, rdi	# ivtmp.534, tmp562
 7503              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7504              		.loc 1 158 19 is_stmt 0 view .LVU2532
 7505 2ad3 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7506              		.loc 1 158 29 is_stmt 1 view .LVU2533
 7507 2ad7 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7508              	.LVL419:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7509              		.loc 1 153 10 view .LVU2534
 7510 2ada 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7511 2add 0F86BD00 		jbe	.L459	#,
 7511      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7512              		.loc 1 154 8 view .LVU2535
 7513              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7514              		.loc 1 154 19 is_stmt 0 view .LVU2536
 7515 2ae3 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7516              		.loc 1 154 29 is_stmt 1 view .LVU2537
 7517              	.LVL420:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7518              		.loc 1 155 8 view .LVU2538
 7519              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7520              		.loc 1 155 19 is_stmt 0 view .LVU2539
 7521 2ae6 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7522              		.loc 1 155 29 is_stmt 1 view .LVU2540
GAS LISTING /tmp/ccIyIA9Z.s 			page 205


 7523              	.LVL421:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7524              		.loc 1 156 8 view .LVU2541
 7525              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7526              		.loc 1 156 19 is_stmt 0 view .LVU2542
 7527 2aea 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7528              		.loc 1 156 29 is_stmt 1 view .LVU2543
 7529              	.LVL422:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7530              		.loc 1 157 8 view .LVU2544
 7531              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7532              		.loc 1 157 19 is_stmt 0 view .LVU2545
 7533 2aed 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7534              		.loc 1 157 29 is_stmt 1 view .LVU2546
 7535              	.LVL423:
 158:sieve_extend.c ****    }
 7536              		.loc 1 158 8 view .LVU2547
 7537 2af1 4801FE   		add	rsi, rdi	# ivtmp.534, tmp562
 7538              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7539              		.loc 1 158 19 is_stmt 0 view .LVU2548
 7540 2af4 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7541              		.loc 1 158 29 is_stmt 1 view .LVU2549
 7542 2af8 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7543              	.LVL424:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7544              		.loc 1 153 10 view .LVU2550
 7545 2afb 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7546 2afe 0F869C00 		jbe	.L459	#,
 7546      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7547              		.loc 1 154 8 view .LVU2551
 7548              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7549              		.loc 1 154 19 is_stmt 0 view .LVU2552
 7550 2b04 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7551              		.loc 1 154 29 is_stmt 1 view .LVU2553
 7552              	.LVL425:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7553              		.loc 1 155 8 view .LVU2554
 7554              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7555              		.loc 1 155 19 is_stmt 0 view .LVU2555
 7556 2b07 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7557              		.loc 1 155 29 is_stmt 1 view .LVU2556
 7558              	.LVL426:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7559              		.loc 1 156 8 view .LVU2557
 7560              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 206


 7561              		.loc 1 156 19 is_stmt 0 view .LVU2558
 7562 2b0b 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7563              		.loc 1 156 29 is_stmt 1 view .LVU2559
 7564              	.LVL427:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7565              		.loc 1 157 8 view .LVU2560
 7566              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7567              		.loc 1 157 19 is_stmt 0 view .LVU2561
 7568 2b0e 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7569              		.loc 1 157 29 is_stmt 1 view .LVU2562
 7570              	.LVL428:
 158:sieve_extend.c ****    }
 7571              		.loc 1 158 8 view .LVU2563
 7572 2b12 4801FE   		add	rsi, rdi	# ivtmp.534, tmp562
 7573              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7574              		.loc 1 158 19 is_stmt 0 view .LVU2564
 7575 2b15 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7576              		.loc 1 158 29 is_stmt 1 view .LVU2565
 7577 2b19 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7578              	.LVL429:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7579              		.loc 1 153 10 view .LVU2566
 7580 2b1c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7581 2b1f 767F     		jbe	.L459	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7582              		.loc 1 154 8 view .LVU2567
 7583              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7584              		.loc 1 154 19 is_stmt 0 view .LVU2568
 7585 2b21 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7586              		.loc 1 154 29 is_stmt 1 view .LVU2569
 7587              	.LVL430:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7588              		.loc 1 155 8 view .LVU2570
 7589              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7590              		.loc 1 155 19 is_stmt 0 view .LVU2571
 7591 2b24 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7592              		.loc 1 155 29 is_stmt 1 view .LVU2572
 7593              	.LVL431:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7594              		.loc 1 156 8 view .LVU2573
 7595              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7596              		.loc 1 156 19 is_stmt 0 view .LVU2574
 7597 2b28 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7598              		.loc 1 156 29 is_stmt 1 view .LVU2575
 7599              	.LVL432:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 207


 7600              		.loc 1 157 8 view .LVU2576
 7601              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7602              		.loc 1 157 19 is_stmt 0 view .LVU2577
 7603 2b2b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7604              		.loc 1 157 29 is_stmt 1 view .LVU2578
 7605              	.LVL433:
 158:sieve_extend.c ****    }
 7606              		.loc 1 158 8 view .LVU2579
 7607 2b2f 4801FE   		add	rsi, rdi	# ivtmp.534, tmp562
 7608              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7609              		.loc 1 158 19 is_stmt 0 view .LVU2580
 7610 2b32 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7611              		.loc 1 158 29 is_stmt 1 view .LVU2581
 7612 2b36 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7613              	.LVL434:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7614              		.loc 1 153 10 view .LVU2582
 7615 2b39 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7616 2b3c 7662     		jbe	.L459	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7617              		.loc 1 154 8 view .LVU2583
 7618              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7619              		.loc 1 154 19 is_stmt 0 view .LVU2584
 7620 2b3e 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7621              		.loc 1 154 29 is_stmt 1 view .LVU2585
 7622              	.LVL435:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7623              		.loc 1 155 8 view .LVU2586
 7624              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7625              		.loc 1 155 19 is_stmt 0 view .LVU2587
 7626 2b41 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7627              		.loc 1 155 29 is_stmt 1 view .LVU2588
 7628              	.LVL436:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7629              		.loc 1 156 8 view .LVU2589
 7630              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7631              		.loc 1 156 19 is_stmt 0 view .LVU2590
 7632 2b45 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7633              		.loc 1 156 29 is_stmt 1 view .LVU2591
 7634              	.LVL437:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7635              		.loc 1 157 8 view .LVU2592
 7636              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7637              		.loc 1 157 19 is_stmt 0 view .LVU2593
 7638 2b48 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 208


 7639              		.loc 1 157 29 is_stmt 1 view .LVU2594
 7640              	.LVL438:
 158:sieve_extend.c ****    }
 7641              		.loc 1 158 8 view .LVU2595
 7642 2b4c 4801FE   		add	rsi, rdi	# ivtmp.534, tmp562
 7643              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7644              		.loc 1 158 19 is_stmt 0 view .LVU2596
 7645 2b4f 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7646              		.loc 1 158 29 is_stmt 1 view .LVU2597
 7647 2b53 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7648              	.LVL439:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7649              		.loc 1 153 10 view .LVU2598
 7650 2b56 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7651 2b59 7645     		jbe	.L459	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7652              		.loc 1 154 8 view .LVU2599
 7653              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7654              		.loc 1 154 19 is_stmt 0 view .LVU2600
 7655 2b5b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7656              		.loc 1 154 29 is_stmt 1 view .LVU2601
 7657              	.LVL440:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7658              		.loc 1 155 8 view .LVU2602
 7659              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7660              		.loc 1 155 19 is_stmt 0 view .LVU2603
 7661 2b5e 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7662              		.loc 1 155 29 is_stmt 1 view .LVU2604
 7663              	.LVL441:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7664              		.loc 1 156 8 view .LVU2605
 7665              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7666              		.loc 1 156 19 is_stmt 0 view .LVU2606
 7667 2b62 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7668              		.loc 1 156 29 is_stmt 1 view .LVU2607
 7669              	.LVL442:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7670              		.loc 1 157 8 view .LVU2608
 7671              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7672              		.loc 1 157 19 is_stmt 0 view .LVU2609
 7673 2b65 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7674              		.loc 1 157 29 is_stmt 1 view .LVU2610
 7675              	.LVL443:
 158:sieve_extend.c ****    }
 7676              		.loc 1 158 8 view .LVU2611
 7677 2b69 4801FE   		add	rsi, rdi	# ivtmp.534, tmp562
 7678              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 209


 158:sieve_extend.c ****    }
 7679              		.loc 1 158 19 is_stmt 0 view .LVU2612
 7680 2b6c 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7681              		.loc 1 158 29 is_stmt 1 view .LVU2613
 7682 2b70 4801F8   		add	rax, rdi	# index_ptr, tmp562
 7683              	.LVL444:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7684              		.loc 1 153 10 view .LVU2614
 7685 2b73 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7686 2b76 7628     		jbe	.L459	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7687              		.loc 1 154 8 view .LVU2615
 7688              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7689              		.loc 1 154 19 is_stmt 0 view .LVU2616
 7690 2b78 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_91, offset: 0B], mask
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7691              		.loc 1 154 29 is_stmt 1 view .LVU2617
 7692              	.LVL445:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7693              		.loc 1 155 8 view .LVU2618
 7694              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7695              		.loc 1 155 19 is_stmt 0 view .LVU2619
 7696 2b7b 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_91, index: _146, offset: 0B], mask
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7697              		.loc 1 155 29 is_stmt 1 view .LVU2620
 7698              	.LVL446:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7699              		.loc 1 156 8 view .LVU2621
 7700              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7701              		.loc 1 156 19 is_stmt 0 view .LVU2622
 7702 2b7f 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1187, offset: 0B], mask
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7703              		.loc 1 156 29 is_stmt 1 view .LVU2623
 7704              	.LVL447:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7705              		.loc 1 157 8 view .LVU2624
 7706              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7707              		.loc 1 157 19 is_stmt 0 view .LVU2625
 7708 2b82 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1187, index: _146, offset: 0B], mask
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7709              		.loc 1 157 29 is_stmt 1 view .LVU2626
 7710              	.LVL448:
 158:sieve_extend.c ****    }
 7711              		.loc 1 158 8 view .LVU2627
 7712 2b86 4801FE   		add	rsi, rdi	# ivtmp.534, tmp562
 7713              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 7714              		.loc 1 158 19 is_stmt 0 view .LVU2628
 7715 2b89 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_91, index: _146, step: 4, offset: 0B], mask
 158:sieve_extend.c ****    }
 7716              		.loc 1 158 29 is_stmt 1 view .LVU2629
 7717 2b8d 4801F8   		add	rax, rdi	# index_ptr, tmp562
GAS LISTING /tmp/ccIyIA9Z.s 			page 210


 7718              	.LVL449:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7719              		.loc 1 153 10 view .LVU2630
 7720 2b90 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 7721 2b93 0F8708FF 		ja	.L460	#,
 7721      FFFF
 7722 2b99 0F1F8000 		.p2align 4,,10
 7722      000000
 7723              		.p2align 3
 7724              	.L459:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 7725              		.loc 1 161 4 view .LVU2631
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7726              		.loc 1 162 4 view .LVU2632
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7727              		.loc 1 162 10 view .LVU2633
 7728 2ba0 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7729 2ba3 735B     		jnb	.L461	#,
 7730              	.L462:
 163:sieve_extend.c ****    }
 7731              		.loc 1 163 8 view .LVU2634
 7732              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7733              		.loc 1 163 19 is_stmt 0 view .LVU2635
 7734 2ba5 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7735              		.loc 1 163 29 is_stmt 1 view .LVU2636
 7736              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7737              		.loc 1 163 38 is_stmt 0 view .LVU2637
 7738 2ba8 4801C8   		add	rax, rcx	# index_ptr, _146
 7739              	.LVL450:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7740              		.loc 1 162 10 is_stmt 1 view .LVU2638
 7741 2bab 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7742 2bae 7350     		jnb	.L461	#,
 163:sieve_extend.c ****    }
 7743              		.loc 1 163 8 view .LVU2639
 7744              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7745              		.loc 1 163 19 is_stmt 0 view .LVU2640
 7746 2bb0 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7747              		.loc 1 163 29 is_stmt 1 view .LVU2641
 7748              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7749              		.loc 1 163 38 is_stmt 0 view .LVU2642
 7750 2bb3 4801C8   		add	rax, rcx	# index_ptr, _146
 7751              	.LVL451:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7752              		.loc 1 162 10 is_stmt 1 view .LVU2643
 7753 2bb6 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7754 2bb9 7345     		jnb	.L461	#,
 163:sieve_extend.c ****    }
 7755              		.loc 1 163 8 view .LVU2644
 7756              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
GAS LISTING /tmp/ccIyIA9Z.s 			page 211


 7757              		.loc 1 163 19 is_stmt 0 view .LVU2645
 7758 2bbb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7759              		.loc 1 163 29 is_stmt 1 view .LVU2646
 7760              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7761              		.loc 1 163 38 is_stmt 0 view .LVU2647
 7762 2bbe 4801C8   		add	rax, rcx	# index_ptr, _146
 7763              	.LVL452:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7764              		.loc 1 162 10 is_stmt 1 view .LVU2648
 7765 2bc1 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7766 2bc4 733A     		jnb	.L461	#,
 163:sieve_extend.c ****    }
 7767              		.loc 1 163 8 view .LVU2649
 7768              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7769              		.loc 1 163 19 is_stmt 0 view .LVU2650
 7770 2bc6 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7771              		.loc 1 163 29 is_stmt 1 view .LVU2651
 7772              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7773              		.loc 1 163 38 is_stmt 0 view .LVU2652
 7774 2bc9 4801C8   		add	rax, rcx	# index_ptr, _146
 7775              	.LVL453:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7776              		.loc 1 162 10 is_stmt 1 view .LVU2653
 7777 2bcc 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7778 2bcf 732F     		jnb	.L461	#,
 163:sieve_extend.c ****    }
 7779              		.loc 1 163 8 view .LVU2654
 7780              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7781              		.loc 1 163 19 is_stmt 0 view .LVU2655
 7782 2bd1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7783              		.loc 1 163 29 is_stmt 1 view .LVU2656
 7784              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7785              		.loc 1 163 38 is_stmt 0 view .LVU2657
 7786 2bd4 4801C8   		add	rax, rcx	# index_ptr, _146
 7787              	.LVL454:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7788              		.loc 1 162 10 is_stmt 1 view .LVU2658
 7789 2bd7 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7790 2bda 7324     		jnb	.L461	#,
 163:sieve_extend.c ****    }
 7791              		.loc 1 163 8 view .LVU2659
 7792              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7793              		.loc 1 163 19 is_stmt 0 view .LVU2660
 7794 2bdc 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7795              		.loc 1 163 29 is_stmt 1 view .LVU2661
 7796              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
GAS LISTING /tmp/ccIyIA9Z.s 			page 212


 7797              		.loc 1 163 38 is_stmt 0 view .LVU2662
 7798 2bdf 4801C8   		add	rax, rcx	# index_ptr, _146
 7799              	.LVL455:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7800              		.loc 1 162 10 is_stmt 1 view .LVU2663
 7801 2be2 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7802 2be5 7319     		jnb	.L461	#,
 163:sieve_extend.c ****    }
 7803              		.loc 1 163 8 view .LVU2664
 7804              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7805              		.loc 1 163 19 is_stmt 0 view .LVU2665
 7806 2be7 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7807              		.loc 1 163 29 is_stmt 1 view .LVU2666
 7808              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7809              		.loc 1 163 38 is_stmt 0 view .LVU2667
 7810 2bea 4801C8   		add	rax, rcx	# index_ptr, _146
 7811              	.LVL456:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7812              		.loc 1 162 10 is_stmt 1 view .LVU2668
 7813 2bed 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7814 2bf0 730E     		jnb	.L461	#,
 163:sieve_extend.c ****    }
 7815              		.loc 1 163 8 view .LVU2669
 7816              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7817              		.loc 1 163 19 is_stmt 0 view .LVU2670
 7818 2bf2 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_848, offset: 0B], mask
 163:sieve_extend.c ****    }
 7819              		.loc 1 163 29 is_stmt 1 view .LVU2671
 7820              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 7821              		.loc 1 163 38 is_stmt 0 view .LVU2672
 7822 2bf5 4801C8   		add	rax, rcx	# index_ptr, _146
 7823              	.LVL457:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 7824              		.loc 1 162 10 is_stmt 1 view .LVU2673
 7825 2bf8 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7826 2bfb 72A8     		jb	.L462	#,
 7827 2bfd 0F1F00   		.p2align 4,,10
 7828              		.p2align 3
 7829              	.L461:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 7830              		.loc 1 166 4 view .LVU2674
 7831              	# sieve_extend.c:166:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 7832              		.loc 1 166 7 is_stmt 0 view .LVU2675
 7833 2c00 4C39C0   		cmp	rax, r8	# index_ptr, _164
 7834 2c03 741B     		je	.L1081	#,
 7835              	.LVL458:
 7836              	.L463:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 7837              		.loc 1 166 7 view .LVU2676
 7838              	.LBE653:
 7839              	.LBE656:
GAS LISTING /tmp/ccIyIA9Z.s 			page 213


 7840              	.LBE649:
 211:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7841              		.loc 1 211 54 is_stmt 1 view .LVU2677
 7842              	# sieve_extend.c:211:         for (register counter_t index = range_start; index <= range_stop_uniq
 211:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7843              		.loc 1 211 9 is_stmt 0 view .LVU2678
 7844 2c05 4939DB   		cmp	r11, rbx	# tmp542, index
 7845 2c08 0F83B2FD 		jnb	.L464	#,
 7845      FFFF
 7846 2c0e 4C8B7424 		mov	r14, QWORD PTR 64[rsp]	# patternsize_bits, %sfp
 7846      40
 7847 2c13 E9F3F9FF 		jmp	.L455	#
 7847      FF
 7848              	.LVL459:
 7849 2c18 0F1F8400 		.p2align 4,,10
 7849      00000000 
 7850              		.p2align 3
 7851              	.L1081:
 7852              	.LBB658:
 7853              	.LBB657:
 7854              	.LBB654:
 167:sieve_extend.c ****    }
 7855              		.loc 1 167 7 is_stmt 1 view .LVU2679
 7856              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 7857              		.loc 1 167 27 is_stmt 0 view .LVU2680
 7858 2c20 48235424 		and	rdx, QWORD PTR 72[rsp]	# tmp568, %sfp
 7858      48
 7859              	.LVL460:
 7860              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 7861              		.loc 1 167 18 view .LVU2681
 7862 2c25 490910   		or	QWORD PTR [r8], rdx	# *index_ptr_846, tmp568
 7863 2c28 EBDB     		jmp	.L463	#
 7864              	.LVL461:
 7865 2c2a 660F1F44 		.p2align 4,,10
 7865      0000
 7866              		.p2align 3
 7867              	.L448:
 167:sieve_extend.c ****    }
 7868              		.loc 1 167 18 view .LVU2682
 7869              	.LBE654:
 7870              	.LBE657:
 7871              	.LBE658:
 7872              	.LBE648:
 7873              	.LBE647:
 7874              	.LBE646:
 7875              	.LBB662:
 7876              	.LBB604:
 427:sieve_extend.c **** }
 7877              		.loc 1 427 37 is_stmt 1 view .LVU2683
 7878 2c30 C5F877   		vzeroupper
 7879 2c33 E8D8DEFF 		call	continuePattern_aligned	#
 7879      FF
 7880              	.LVL462:
 427:sieve_extend.c **** }
 7881              		.loc 1 427 37 is_stmt 0 view .LVU2684
GAS LISTING /tmp/ccIyIA9Z.s 			page 214


 7882 2c38 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 7882      50
 7883 2c3d E962F5FF 		jmp	.L445	#
 7883      FF
 7884              	.LVL463:
 7885              		.p2align 4,,10
 7886 2c42 660F1F44 		.p2align 3
 7886      0000
 7887              	.L1077:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 7888              		.loc 1 425 37 is_stmt 1 view .LVU2685
 7889 2c48 C5F877   		vzeroupper
 7890 2c4b E8C0E3FF 		call	continuePattern_shiftleft	#
 7890      FF
 7891              	.LVL464:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 7892              		.loc 1 425 37 is_stmt 0 view .LVU2686
 7893 2c50 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 7893      50
 7894 2c55 E94AF5FF 		jmp	.L445	#
 7894      FF
 7895              	.LVL465:
 7896              	.L1076:
 420:sieve_extend.c **** 
 7897              		.loc 1 420 35 is_stmt 1 view .LVU2687
 7898              	# sieve_extend.c:420:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 420:sieve_extend.c **** 
 7899              		.loc 1 420 42 is_stmt 0 view .LVU2688
 7900 2c5a 4889F9   		mov	rcx, rdi	#, _70
 7901 2c5d 4C89F2   		mov	rdx, r14	#, patternsize_bits
 7902 2c60 4C89F6   		mov	rsi, r14	#, patternsize_bits
 7903 2c63 4C89FF   		mov	rdi, r15	#, _101
 7904              	.LVL466:
 420:sieve_extend.c **** 
 7905              		.loc 1 420 42 view .LVU2689
 7906 2c66 C5F877   		vzeroupper
 7907 2c69 E892D3FF 		call	continuePattern_smallSize	#
 7907      FF
 7908              	.LVL467:
 7909 2c6e 4C897424 		mov	QWORD PTR 80[rsp], r14	# %sfp, patternsize_bits
 7909      50
 7910 2c73 E92CF5FF 		jmp	.L445	#
 7910      FF
 7911              	.LVL468:
 7912              	.L452:
 420:sieve_extend.c **** 
 7913              		.loc 1 420 42 view .LVU2690
 7914              	.LBE604:
 7915              	.LBE662:
 7916              	.LBB663:
 7917              	.LBB661:
 7918              	.LBB659:
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7919              		.loc 1 201 54 is_stmt 1 view .LVU2691
 7920              	# sieve_extend.c:201:         for (register counter_t index = range_start; index <= range_stop;) {
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7921              		.loc 1 201 9 is_stmt 0 view .LVU2692
GAS LISTING /tmp/ccIyIA9Z.s 			page 215


 7922 2c78 4C8B5C24 		mov	r11, QWORD PTR 120[rsp]	# _70, %sfp
 7922      78
 7923              	.LVL469:
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 7924              		.loc 1 201 9 view .LVU2693
 7925 2c7d 4939DB   		cmp	r11, rbx	# _70, index
 7926 2c80 0F8285F9 		jb	.L455	#,
 7926      FFFF
 7927              	.LBB660:
 7928              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7929              		.loc 1 204 74 view .LVU2694
 7930 2c86 BF010000 		mov	edi, 1	# tmp545,
 7930      00
 7931              	.LVL470:
 7932 2c8b 0F1F4400 		.p2align 4,,10
 7932      00
 7933              		.p2align 3
 7934              	.L457:
 202:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 7935              		.loc 1 202 13 is_stmt 1 view .LVU2695
 7936              	# sieve_extend.c:202:             register counter_t index_word = wordindex(index);
 202:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 7937              		.loc 1 202 32 is_stmt 0 view .LVU2696
 7938 2c90 4889D9   		mov	rcx, rbx	# index_word, index
 7939 2c93 48C1E906 		shr	rcx, 6	# index_word,
 7940              	.LVL471:
 203:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 7941              		.loc 1 203 13 is_stmt 1 view .LVU2697
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7942              		.loc 1 204 13 view .LVU2698
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7943              		.loc 1 204 19 view .LVU2699
 7944              	# sieve_extend.c:203:             register bitword_t mask = SAFE_ZERO;
 203:sieve_extend.c ****             for(; index_word == wordindex(index); index += step) mask |= markmask(index);
 7945              		.loc 1 203 32 is_stmt 0 view .LVU2700
 7946 2c97 4531C0   		xor	r8d, r8d	# mask
 7947              	.LVL472:
 7948              	.L456:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7949              		.loc 1 204 66 is_stmt 1 view .LVU2701
 7950              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7951              		.loc 1 204 74 is_stmt 0 view .LVU2702
 7952 2c9a C462E1F7 		shlx	r9, rdi, rbx	# tmp544, tmp545, index
 7952      CF
 7953              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7954              		.loc 1 204 57 view .LVU2703
 7955 2c9f 4C01E3   		add	rbx, r12	# index, step
 7956              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7957              		.loc 1 204 33 view .LVU2704
 7958 2ca2 4989DA   		mov	r10, rbx	# tmp546, index
 7959 2ca5 49C1EA06 		shr	r10, 6	# tmp546,
 7960              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
GAS LISTING /tmp/ccIyIA9Z.s 			page 216


 7961              		.loc 1 204 71 view .LVU2705
 7962 2ca9 4D09C8   		or	r8, r9	# mask, tmp544
 7963              	.LVL473:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7964              		.loc 1 204 51 is_stmt 1 view .LVU2706
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7965              		.loc 1 204 19 view .LVU2707
 7966              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7967              		.loc 1 204 13 is_stmt 0 view .LVU2708
 7968 2cac 4C39D1   		cmp	rcx, r10	# index_word, tmp546
 7969 2caf 0F85AB00 		jne	.L920	#,
 7969      0000
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7970              		.loc 1 204 66 is_stmt 1 view .LVU2709
 7971              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7972              		.loc 1 204 74 is_stmt 0 view .LVU2710
 7973 2cb5 C4E2E1F7 		shlx	rdx, rdi, rbx	# tmp980, tmp545, index
 7973      D7
 7974              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7975              		.loc 1 204 57 view .LVU2711
 7976 2cba 4C01E3   		add	rbx, r12	# index, step
 7977              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7978              		.loc 1 204 33 view .LVU2712
 7979 2cbd 4889D8   		mov	rax, rbx	# tmp981, index
 7980 2cc0 48C1E806 		shr	rax, 6	# tmp981,
 7981              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7982              		.loc 1 204 71 view .LVU2713
 7983 2cc4 4909D0   		or	r8, rdx	# mask, tmp980
 7984              	.LVL474:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7985              		.loc 1 204 51 is_stmt 1 view .LVU2714
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7986              		.loc 1 204 19 view .LVU2715
 7987              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7988              		.loc 1 204 13 is_stmt 0 view .LVU2716
 7989 2cc7 4839C1   		cmp	rcx, rax	# index_word, tmp981
 7990 2cca 0F859000 		jne	.L920	#,
 7990      0000
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7991              		.loc 1 204 66 is_stmt 1 view .LVU2717
 7992              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7993              		.loc 1 204 74 is_stmt 0 view .LVU2718
 7994 2cd0 C4E2E1F7 		shlx	rsi, rdi, rbx	# tmp982, tmp545, index
 7994      F7
 7995              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 7996              		.loc 1 204 57 view .LVU2719
 7997 2cd5 4C01E3   		add	rbx, r12	# index, step
 7998              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
GAS LISTING /tmp/ccIyIA9Z.s 			page 217


 7999              		.loc 1 204 33 view .LVU2720
 8000 2cd8 4989D9   		mov	r9, rbx	# tmp983, index
 8001 2cdb 49C1E906 		shr	r9, 6	# tmp983,
 8002              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8003              		.loc 1 204 71 view .LVU2721
 8004 2cdf 4909F0   		or	r8, rsi	# mask, tmp982
 8005              	.LVL475:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8006              		.loc 1 204 51 is_stmt 1 view .LVU2722
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8007              		.loc 1 204 19 view .LVU2723
 8008              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8009              		.loc 1 204 13 is_stmt 0 view .LVU2724
 8010 2ce2 4C39C9   		cmp	rcx, r9	# index_word, tmp983
 8011 2ce5 7579     		jne	.L920	#,
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8012              		.loc 1 204 66 is_stmt 1 view .LVU2725
 8013              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8014              		.loc 1 204 74 is_stmt 0 view .LVU2726
 8015 2ce7 C462E1F7 		shlx	r10, rdi, rbx	# tmp984, tmp545, index
 8015      D7
 8016              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8017              		.loc 1 204 57 view .LVU2727
 8018 2cec 4C01E3   		add	rbx, r12	# index, step
 8019              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8020              		.loc 1 204 33 view .LVU2728
 8021 2cef 4889DA   		mov	rdx, rbx	# tmp985, index
 8022 2cf2 48C1EA06 		shr	rdx, 6	# tmp985,
 8023              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8024              		.loc 1 204 71 view .LVU2729
 8025 2cf6 4D09D0   		or	r8, r10	# mask, tmp984
 8026              	.LVL476:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8027              		.loc 1 204 51 is_stmt 1 view .LVU2730
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8028              		.loc 1 204 19 view .LVU2731
 8029              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8030              		.loc 1 204 13 is_stmt 0 view .LVU2732
 8031 2cf9 4839D1   		cmp	rcx, rdx	# index_word, tmp985
 8032 2cfc 7562     		jne	.L920	#,
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8033              		.loc 1 204 66 is_stmt 1 view .LVU2733
 8034              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8035              		.loc 1 204 74 is_stmt 0 view .LVU2734
 8036 2cfe C4E2E1F7 		shlx	rax, rdi, rbx	# tmp986, tmp545, index
 8036      C7
 8037              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8038              		.loc 1 204 57 view .LVU2735
GAS LISTING /tmp/ccIyIA9Z.s 			page 218


 8039 2d03 4C01E3   		add	rbx, r12	# index, step
 8040              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8041              		.loc 1 204 33 view .LVU2736
 8042 2d06 4889DE   		mov	rsi, rbx	# tmp987, index
 8043 2d09 48C1EE06 		shr	rsi, 6	# tmp987,
 8044              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8045              		.loc 1 204 71 view .LVU2737
 8046 2d0d 4909C0   		or	r8, rax	# mask, tmp986
 8047              	.LVL477:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8048              		.loc 1 204 51 is_stmt 1 view .LVU2738
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8049              		.loc 1 204 19 view .LVU2739
 8050              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8051              		.loc 1 204 13 is_stmt 0 view .LVU2740
 8052 2d10 4839F1   		cmp	rcx, rsi	# index_word, tmp987
 8053 2d13 754B     		jne	.L920	#,
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8054              		.loc 1 204 66 is_stmt 1 view .LVU2741
 8055              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8056              		.loc 1 204 74 is_stmt 0 view .LVU2742
 8057 2d15 C462E1F7 		shlx	r9, rdi, rbx	# tmp988, tmp545, index
 8057      CF
 8058              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8059              		.loc 1 204 57 view .LVU2743
 8060 2d1a 4C01E3   		add	rbx, r12	# index, step
 8061              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8062              		.loc 1 204 33 view .LVU2744
 8063 2d1d 4989DA   		mov	r10, rbx	# tmp989, index
 8064 2d20 49C1EA06 		shr	r10, 6	# tmp989,
 8065              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8066              		.loc 1 204 71 view .LVU2745
 8067 2d24 4D09C8   		or	r8, r9	# mask, tmp988
 8068              	.LVL478:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8069              		.loc 1 204 51 is_stmt 1 view .LVU2746
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8070              		.loc 1 204 19 view .LVU2747
 8071              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8072              		.loc 1 204 13 is_stmt 0 view .LVU2748
 8073 2d27 4C39D1   		cmp	rcx, r10	# index_word, tmp989
 8074 2d2a 7534     		jne	.L920	#,
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8075              		.loc 1 204 66 is_stmt 1 view .LVU2749
 8076              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8077              		.loc 1 204 74 is_stmt 0 view .LVU2750
 8078 2d2c C4E2E1F7 		shlx	rdx, rdi, rbx	# tmp990, tmp545, index
 8078      D7
GAS LISTING /tmp/ccIyIA9Z.s 			page 219


 8079              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8080              		.loc 1 204 57 view .LVU2751
 8081 2d31 4C01E3   		add	rbx, r12	# index, step
 8082              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8083              		.loc 1 204 33 view .LVU2752
 8084 2d34 4889D8   		mov	rax, rbx	# tmp991, index
 8085 2d37 48C1E806 		shr	rax, 6	# tmp991,
 8086              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8087              		.loc 1 204 71 view .LVU2753
 8088 2d3b 4909D0   		or	r8, rdx	# mask, tmp990
 8089              	.LVL479:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8090              		.loc 1 204 51 is_stmt 1 view .LVU2754
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8091              		.loc 1 204 19 view .LVU2755
 8092              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8093              		.loc 1 204 13 is_stmt 0 view .LVU2756
 8094 2d3e 4839C1   		cmp	rcx, rax	# index_word, tmp991
 8095 2d41 751D     		jne	.L920	#,
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8096              		.loc 1 204 66 is_stmt 1 view .LVU2757
 8097              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8098              		.loc 1 204 74 is_stmt 0 view .LVU2758
 8099 2d43 C4E2E1F7 		shlx	rsi, rdi, rbx	# tmp992, tmp545, index
 8099      F7
 8100              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8101              		.loc 1 204 57 view .LVU2759
 8102 2d48 4C01E3   		add	rbx, r12	# index, step
 8103              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8104              		.loc 1 204 33 view .LVU2760
 8105 2d4b 4989D9   		mov	r9, rbx	# tmp993, index
 8106 2d4e 49C1E906 		shr	r9, 6	# tmp993,
 8107              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8108              		.loc 1 204 71 view .LVU2761
 8109 2d52 4909F0   		or	r8, rsi	# mask, tmp992
 8110              	.LVL480:
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8111              		.loc 1 204 51 is_stmt 1 view .LVU2762
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8112              		.loc 1 204 19 view .LVU2763
 8113              	# sieve_extend.c:204:             for(; index_word == wordindex(index); index += step) mask |= mark
 204:sieve_extend.c ****             bitstorage[index_word] |= mask;
 8114              		.loc 1 204 13 is_stmt 0 view .LVU2764
 8115 2d55 4C39C9   		cmp	rcx, r9	# index_word, tmp993
 8116 2d58 0F843CFF 		je	.L456	#,
 8116      FFFF
 8117 2d5e 6690     		.p2align 4,,10
 8118              		.p2align 3
 8119              	.L920:
GAS LISTING /tmp/ccIyIA9Z.s 			page 220


 205:sieve_extend.c ****         }
 8120              		.loc 1 205 13 is_stmt 1 view .LVU2765
 8121              	# sieve_extend.c:205:             bitstorage[index_word] |= mask;
 205:sieve_extend.c ****         }
 8122              		.loc 1 205 36 is_stmt 0 view .LVU2766
 8123 2d60 4D0904CF 		or	QWORD PTR [r15+rcx*8], r8	# *_117, mask
 205:sieve_extend.c ****         }
 8124              		.loc 1 205 36 view .LVU2767
 8125              	.LBE660:
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8126              		.loc 1 201 54 is_stmt 1 view .LVU2768
 8127              	# sieve_extend.c:201:         for (register counter_t index = range_start; index <= range_stop;) {
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8128              		.loc 1 201 9 is_stmt 0 view .LVU2769
 8129 2d64 4939DB   		cmp	r11, rbx	# _70, index
 8130 2d67 0F8323FF 		jnb	.L457	#,
 8130      FFFF
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8131              		.loc 1 201 9 view .LVU2770
 8132 2d6d E999F8FF 		jmp	.L455	#
 8132      FF
 8133              	.LVL481:
 8134              	.L536:
 201:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 8135              		.loc 1 201 9 view .LVU2771
 8136 2d72 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, prime
 8136      30
 8137              	.LBE659:
 8138              	.LBE661:
 8139              	.LBE663:
 8140              	.LBE669:
 8141 2d77 48895424 		mov	QWORD PTR 96[rsp], rdx	# %sfp, block$pattern_start
 8141      60
 8142 2d7c 4989C6   		mov	r14, rax	# patternsize_bits, block$pattern_size
 8143              	.LVL482:
 8144              	.L443:
 501:sieve_extend.c **** }
 8145              		.loc 1 501 5 is_stmt 1 view .LVU2772
 501:sieve_extend.c **** }
 8146              		.loc 1 501 5 is_stmt 0 view .LVU2773
 8147              	.LBE674:
 8148              	.LBE680:
 516:sieve_extend.c **** 
 8149              		.loc 1 516 5 is_stmt 1 view .LVU2774
 519:sieve_extend.c **** 
 8150              		.loc 1 519 5 view .LVU2775
 8151 2d7f 488B4424 		mov	rax, QWORD PTR 16[rsp]	# <retval>, %sfp
 8151      10
 8152 2d84 4989C9   		mov	r9, rcx	# tmp640, prime
 8153 2d87 488B7008 		mov	rsi, QWORD PTR 8[rax]	# _2, sieve_96->bits
 8154 2d8b 49C1E906 		shr	r9, 6	# tmp640,
 8155 2d8f 4B8D1CCF 		lea	rbx, [r15+r9*8]	# _1263,
 8156 2d93 41BC0100 		mov	r12d, 1	# tmp643,
 8156      0000
 8157 2d99 C442F1F7 		shlx	r11, r12, rcx	# _1265, tmp643, tmp1573
 8157      DC
 8158 2d9e 48897424 		mov	QWORD PTR 112[rsp], rsi	# %sfp, _2
GAS LISTING /tmp/ccIyIA9Z.s 			page 221


 8158      70
 8159              	.LVL483:
 8160              	.LBB681:
 8161              	.LBI681:
 419:sieve_extend.c ****     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorage, source_start, size,
 8162              		.loc 1 419 20 view .LVU2776
 8163              	.LBB682:
 420:sieve_extend.c **** 
 8164              		.loc 1 420 5 view .LVU2777
 8165 2da3 48895C24 		mov	QWORD PTR 40[rsp], rbx	# %sfp, _1263
 8165      28
 8166 2da8 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, _1265
 8166      20
 8167              	# sieve_extend.c:420:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 420:sieve_extend.c **** 
 8168              		.loc 1 420 8 is_stmt 0 view .LVU2778
 8169 2dad 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 8170 2db1 0F86D90E 		jbe	.L1082	#,
 8170      0000
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8171              		.loc 1 422 5 is_stmt 1 view .LVU2779
 8172              	# sieve_extend.c:422:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8173              		.loc 1 422 35 is_stmt 0 view .LVU2780
 8174 2db7 488B5424 		mov	rdx, QWORD PTR 96[rsp]	# block$pattern_start, %sfp
 8174      60
 8175              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8176              		.loc 1 425 37 view .LVU2781
 8177 2dbc 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	#, %sfp
 8177      70
 8178              	# sieve_extend.c:422:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8179              		.loc 1 422 35 view .LVU2782
 8180 2dc1 4D8D0416 		lea	r8, [r14+rdx]	# tmp644,
 8181              	# sieve_extend.c:422:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 422:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 8182              		.loc 1 422 22 view .LVU2783
 8183 2dc5 4183E03F 		and	r8d, 63	# copy_bit,
 8184              	.LVL484:
 423:sieve_extend.c **** 
 8185              		.loc 1 423 5 is_stmt 1 view .LVU2784
 8186              	# sieve_extend.c:423:     const bitshift_t source_bit = bitindex_calc(source_start);
 423:sieve_extend.c **** 
 8187              		.loc 1 423 22 is_stmt 0 view .LVU2785
 8188 2dc9 83E23F   		and	edx, 63	# source_bit,
 8189              	.LVL485:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8190              		.loc 1 425 5 is_stmt 1 view .LVU2786
 8191              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8192              		.loc 1 425 13 is_stmt 0 view .LVU2787
 8193 2dcc 4939D0   		cmp	r8, rdx	# copy_bit, source_bit
 8194              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8195              		.loc 1 425 37 view .LVU2788
 8196 2dcf 488B7424 		mov	rsi, QWORD PTR 96[rsp]	#, %sfp
GAS LISTING /tmp/ccIyIA9Z.s 			page 222


 8196      60
 8197              	.LVL486:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8198              		.loc 1 425 37 view .LVU2789
 8199 2dd4 4C89F2   		mov	rdx, r14	#, patternsize_bits
 8200              	.LVL487:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8201              		.loc 1 425 37 view .LVU2790
 8202 2dd7 4C89FF   		mov	rdi, r15	#, _101
 8203              	# sieve_extend.c:425:     if      (source_bit > copy_bit) continuePattern_shiftleft (bitstorage, so
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 8204              		.loc 1 425 13 view .LVU2791
 8205 2dda 0F829F0C 		jb	.L1083	#,
 8205      0000
 8206              	.LVL488:
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 8207              		.loc 1 426 10 is_stmt 1 view .LVU2792
 8208              	# sieve_extend.c:426:     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, so
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 8209              		.loc 1 426 13 is_stmt 0 view .LVU2793
 8210 2de0 0F868C0C 		jbe	.L493	#,
 8210      0000
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 8211              		.loc 1 426 37 is_stmt 1 view .LVU2794
 8212 2de6 C5F877   		vzeroupper
 8213 2de9 E862D7FF 		call	continuePattern_shiftright	#
 8213      FF
 8214              	.LVL489:
 8215              	.L491:
 426:sieve_extend.c ****     else                            continuePattern_aligned   (bitstorage, source_start, size, dest
 8216              		.loc 1 426 37 is_stmt 0 view .LVU2795
 8217              	.LBE682:
 8218              	.LBE681:
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8219              		.loc 1 524 5 is_stmt 1 view .LVU2796
 8220              	.LBB685:
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8221              		.loc 1 524 10 view .LVU2797
 8222              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8223              		.loc 1 524 83 is_stmt 0 view .LVU2798
 8224 2dee 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# <retval>, %sfp
 8224      10
 8225              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8226              		.loc 1 524 38 view .LVU2799
 8227 2df3 488B5424 		mov	rdx, QWORD PTR 56[rsp]	# blocksize, %sfp
 8227      38
 8228              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8229              		.loc 1 524 83 view .LVU2800
 8230 2df8 4C8B6F08 		mov	r13, QWORD PTR 8[rdi]	# _383, sieve_96->bits
 8231              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8232              		.loc 1 524 20 view .LVU2801
 8233 2dfc 48C74424 		mov	QWORD PTR 104[rsp], 0	# %sfp,
 8233      68000000 
GAS LISTING /tmp/ccIyIA9Z.s 			page 223


 8233      00
 8234              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8235              		.loc 1 524 83 view .LVU2802
 8236 2e05 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, _383
 8236      48
 8237              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8238              		.loc 1 524 38 view .LVU2803
 8239 2e0a 48FFCA   		dec	rdx	# block_stop
 8240              	.LVL490:
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 8241              		.loc 1 524 63 is_stmt 1 view .LVU2804
 8242              	.LBB686:
 8243              	.LBB687:
 8244              	.LBB688:
 8245              	.LBB689:
 8246              	.LBB690:
 8247              	.LBB691:
 8248              	# sieve_extend.c:227:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 227:sieve_extend.c ****     }
 8249              		.loc 1 227 9 is_stmt 0 view .LVU2805
 8250 2e0d 41BD0100 		mov	r13d, 1	# tmp753,
 8250      0000
 8251              	.LBE691:
 8252              	.LBE690:
 8253              	.LBE689:
 8254              	.LBB720:
 8255              	.LBB721:
 8256              	.LBB722:
 8257              	.LBB723:
 8258              	# sieve_extend.c:260:         register bitvector_t quadmask = { };
 260:sieve_extend.c **** 
 8259              		.loc 1 260 30 view .LVU2806
 8260 2e13 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp756
 8261 2e17 4D89FE   		mov	r14, r15	# _101, _101
 8262              	.LVL491:
 8263 2e1a 660F1F44 		.p2align 4,,10
 8263      0000
 8264              		.p2align 3
 8265              	.L497:
 260:sieve_extend.c **** 
 8266              		.loc 1 260 30 view .LVU2807
 8267              	.LBE723:
 8268              	.LBE722:
 8269              	.LBE721:
 8270              	.LBE720:
 8271              	.LBE688:
 8272              	.LBE687:
 525:sieve_extend.c ****         counter_t prime = searchBitFalse(bitstorage, startprime);
 8273              		.loc 1 525 9 is_stmt 1 view .LVU2808
 8274 2e20 4C8B7C24 		mov	r15, QWORD PTR 72[rsp]	# _383, %sfp
 8274      48
 8275              	.LBB784:
 8276              	.LBB785:
 8277              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccIyIA9Z.s 			page 224


 8278              		.loc 1 122 11 is_stmt 0 view .LVU2809
 8279 2e25 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# _1263, %sfp
 8279      28
 8280 2e2a 4939D7   		cmp	r15, rdx	# _383, block_stop
 8281 2e2d 490F46D7 		cmovbe	rdx, r15	# _383,, block_stop
 8282              	.LVL492:
 122:sieve_extend.c ****     return index;
 8283              		.loc 1 122 11 view .LVU2810
 8284 2e31 488B4424 		mov	rax, QWORD PTR 32[rsp]	# _1265, %sfp
 8284      20
 8285 2e36 48895424 		mov	QWORD PTR 112[rsp], rdx	# %sfp, block_stop
 8285      70
 8286              	.LVL493:
 122:sieve_extend.c ****     return index;
 8287              		.loc 1 122 11 view .LVU2811
 8288              	.LBE785:
 8289              	.LBE784:
 526:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 8290              		.loc 1 526 9 is_stmt 1 view .LVU2812
 8291              	.LBB787:
 8292              	.LBI784:
 121:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 8293              		.loc 1 121 25 view .LVU2813
 8294              	.LBB786:
 122:sieve_extend.c ****     return index;
 8295              		.loc 1 122 5 view .LVU2814
 122:sieve_extend.c ****     return index;
 8296              		.loc 1 122 11 view .LVU2815
 8297 2e3b 488B5424 		mov	rdx, QWORD PTR 48[rsp]	# index, %sfp
 8297      30
 8298              	.LVL494:
 122:sieve_extend.c ****     return index;
 8299              		.loc 1 122 11 is_stmt 0 view .LVU2816
 8300 2e40 488501   		test	QWORD PTR [rcx], rax	# MEM[(uint64_t *)prephitmp_1266], _1265
 8301 2e43 0F84B700 		je	.L494	#,
 8301      0000
 8302              	.L495:
 8303              	.LVL495:
 122:sieve_extend.c ****     return index;
 8304              		.loc 1 122 60 is_stmt 1 view .LVU2817
 8305              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8306              		.loc 1 122 65 is_stmt 0 view .LVU2818
 8307 2e49 488D7201 		lea	rsi, 1[rdx]	# tmp759,
 8308              	.LVL496:
 8309              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8310              		.loc 1 122 23 view .LVU2819
 8311 2e4d 4989F1   		mov	r9, rsi	# tmp646, index
 8312 2e50 49C1E906 		shr	r9, 6	# tmp646,
 8313              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8314              		.loc 1 122 12 view .LVU2820
 8315 2e54 4B8B1CCE 		mov	rbx, QWORD PTR [r14+r9*8]	# *_32, *_32
 8316              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8317              		.loc 1 122 65 view .LVU2821
GAS LISTING /tmp/ccIyIA9Z.s 			page 225


 8318 2e58 4889F2   		mov	rdx, rsi	# index, tmp759
 122:sieve_extend.c ****     return index;
 8319              		.loc 1 122 11 is_stmt 1 view .LVU2822
 8320 2e5b 480FA3F3 		bt	rbx, rsi	# *_32, index
 8321 2e5f 0F839B00 		jnc	.L494	#,
 8321      0000
 122:sieve_extend.c ****     return index;
 8322              		.loc 1 122 60 view .LVU2823
 8323              	.LVL497:
 8324              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8325              		.loc 1 122 65 is_stmt 0 view .LVU2824
 8326 2e65 48FFC2   		inc	rdx	# index
 8327              	.LVL498:
 122:sieve_extend.c ****     return index;
 8328              		.loc 1 122 11 is_stmt 1 view .LVU2825
 8329              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8330              		.loc 1 122 23 is_stmt 0 view .LVU2826
 8331 2e68 4989D4   		mov	r12, rdx	# tmp924, index
 8332 2e6b 49C1EC06 		shr	r12, 6	# tmp924,
 8333              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8334              		.loc 1 122 12 view .LVU2827
 8335 2e6f 4F8B1CE6 		mov	r11, QWORD PTR [r14+r12*8]	# *_32, *_32
 8336              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8337              		.loc 1 122 11 view .LVU2828
 8338 2e73 490FA3D3 		bt	r11, rdx	# *_32, index
 8339 2e77 0F838300 		jnc	.L494	#,
 8339      0000
 122:sieve_extend.c ****     return index;
 8340              		.loc 1 122 60 is_stmt 1 view .LVU2829
 8341              	.LVL499:
 8342              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8343              		.loc 1 122 65 is_stmt 0 view .LVU2830
 8344 2e7d 488D5602 		lea	rdx, 2[rsi]	# index,
 8345              	.LVL500:
 122:sieve_extend.c ****     return index;
 8346              		.loc 1 122 11 is_stmt 1 view .LVU2831
 8347              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8348              		.loc 1 122 23 is_stmt 0 view .LVU2832
 8349 2e81 4989D0   		mov	r8, rdx	# tmp928, index
 8350 2e84 49C1E806 		shr	r8, 6	# tmp928,
 8351              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8352              		.loc 1 122 12 view .LVU2833
 8353 2e88 4F8B14C6 		mov	r10, QWORD PTR [r14+r8*8]	# *_32, *_32
 8354              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8355              		.loc 1 122 11 view .LVU2834
 8356 2e8c 490FA3D2 		bt	r10, rdx	# *_32, index
 8357 2e90 736E     		jnc	.L494	#,
 122:sieve_extend.c ****     return index;
 8358              		.loc 1 122 60 is_stmt 1 view .LVU2835
GAS LISTING /tmp/ccIyIA9Z.s 			page 226


 8359              	.LVL501:
 8360              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8361              		.loc 1 122 65 is_stmt 0 view .LVU2836
 8362 2e92 488D5603 		lea	rdx, 3[rsi]	# index,
 8363              	.LVL502:
 122:sieve_extend.c ****     return index;
 8364              		.loc 1 122 11 is_stmt 1 view .LVU2837
 8365              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8366              		.loc 1 122 23 is_stmt 0 view .LVU2838
 8367 2e96 4889D7   		mov	rdi, rdx	# tmp932, index
 8368 2e99 48C1EF06 		shr	rdi, 6	# tmp932,
 8369              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8370              		.loc 1 122 12 view .LVU2839
 8371 2e9d 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# *_32, *_32
 8372              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8373              		.loc 1 122 11 view .LVU2840
 8374 2ea1 490FA3D7 		bt	r15, rdx	# *_32, index
 8375 2ea5 7359     		jnc	.L494	#,
 122:sieve_extend.c ****     return index;
 8376              		.loc 1 122 60 is_stmt 1 view .LVU2841
 8377              	.LVL503:
 8378              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8379              		.loc 1 122 65 is_stmt 0 view .LVU2842
 8380 2ea7 488D5604 		lea	rdx, 4[rsi]	# index,
 8381              	.LVL504:
 122:sieve_extend.c ****     return index;
 8382              		.loc 1 122 11 is_stmt 1 view .LVU2843
 8383              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8384              		.loc 1 122 23 is_stmt 0 view .LVU2844
 8385 2eab 4889D1   		mov	rcx, rdx	# tmp936, index
 8386 2eae 48C1E906 		shr	rcx, 6	# tmp936,
 8387              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8388              		.loc 1 122 12 view .LVU2845
 8389 2eb2 498B04CE 		mov	rax, QWORD PTR [r14+rcx*8]	# *_32, *_32
 8390              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8391              		.loc 1 122 11 view .LVU2846
 8392 2eb6 480FA3D0 		bt	rax, rdx	# *_32, index
 8393 2eba 7344     		jnc	.L494	#,
 122:sieve_extend.c ****     return index;
 8394              		.loc 1 122 60 is_stmt 1 view .LVU2847
 8395              	.LVL505:
 8396              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8397              		.loc 1 122 65 is_stmt 0 view .LVU2848
 8398 2ebc 488D5605 		lea	rdx, 5[rsi]	# index,
 8399              	.LVL506:
 122:sieve_extend.c ****     return index;
 8400              		.loc 1 122 11 is_stmt 1 view .LVU2849
 8401              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccIyIA9Z.s 			page 227


 122:sieve_extend.c ****     return index;
 8402              		.loc 1 122 23 is_stmt 0 view .LVU2850
 8403 2ec0 4989D1   		mov	r9, rdx	# tmp940, index
 8404 2ec3 49C1E906 		shr	r9, 6	# tmp940,
 8405              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8406              		.loc 1 122 12 view .LVU2851
 8407 2ec7 4B8B1CCE 		mov	rbx, QWORD PTR [r14+r9*8]	# *_32, *_32
 8408              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8409              		.loc 1 122 11 view .LVU2852
 8410 2ecb 480FA3D3 		bt	rbx, rdx	# *_32, index
 8411 2ecf 732F     		jnc	.L494	#,
 122:sieve_extend.c ****     return index;
 8412              		.loc 1 122 60 is_stmt 1 view .LVU2853
 8413              	.LVL507:
 8414              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8415              		.loc 1 122 65 is_stmt 0 view .LVU2854
 8416 2ed1 488D5606 		lea	rdx, 6[rsi]	# index,
 8417              	.LVL508:
 122:sieve_extend.c ****     return index;
 8418              		.loc 1 122 11 is_stmt 1 view .LVU2855
 8419              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8420              		.loc 1 122 23 is_stmt 0 view .LVU2856
 8421 2ed5 4989D4   		mov	r12, rdx	# tmp944, index
 8422 2ed8 49C1EC06 		shr	r12, 6	# tmp944,
 8423              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8424              		.loc 1 122 12 view .LVU2857
 8425 2edc 4F8B1CE6 		mov	r11, QWORD PTR [r14+r12*8]	# *_32, *_32
 8426              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8427              		.loc 1 122 11 view .LVU2858
 8428 2ee0 490FA3D3 		bt	r11, rdx	# *_32, index
 8429 2ee4 731A     		jnc	.L494	#,
 122:sieve_extend.c ****     return index;
 8430              		.loc 1 122 60 is_stmt 1 view .LVU2859
 8431              	.LVL509:
 8432              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8433              		.loc 1 122 65 is_stmt 0 view .LVU2860
 8434 2ee6 488D5607 		lea	rdx, 7[rsi]	# index,
 8435              	.LVL510:
 122:sieve_extend.c ****     return index;
 8436              		.loc 1 122 11 is_stmt 1 view .LVU2861
 8437              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8438              		.loc 1 122 23 is_stmt 0 view .LVU2862
 8439 2eea 4889D6   		mov	rsi, rdx	# tmp948, index
 8440 2eed 48C1EE06 		shr	rsi, 6	# tmp948,
 8441              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 8442              		.loc 1 122 12 view .LVU2863
 8443 2ef1 4D8B04F6 		mov	r8, QWORD PTR [r14+rsi*8]	# *_32, *_32
 8444              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccIyIA9Z.s 			page 228


 122:sieve_extend.c ****     return index;
 8445              		.loc 1 122 11 view .LVU2864
 8446 2ef5 490FA3D0 		bt	r8, rdx	# *_32, index
 8447 2ef9 0F824AFF 		jc	.L495	#,
 8447      FFFF
 8448              	.LVL511:
 8449 2eff 90       		.p2align 4,,10
 8450              		.p2align 3
 8451              	.L494:
 123:sieve_extend.c **** }
 8452              		.loc 1 123 5 is_stmt 1 view .LVU2865
 123:sieve_extend.c **** }
 8453              		.loc 1 123 5 is_stmt 0 view .LVU2866
 8454              	.LBE786:
 8455              	.LBE787:
 527:sieve_extend.c ****     } 
 8456              		.loc 1 527 9 is_stmt 1 view .LVU2867
 8457              	.LBB788:
 8458              	.LBI687:
 430:sieve_extend.c ****     counter_t prime = prime_start;
 8459              		.loc 1 430 13 view .LVU2868
 8460              	.LBB782:
 431:sieve_extend.c ****     counter_t start = 0;
 8461              		.loc 1 431 5 view .LVU2869
 432:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 8462              		.loc 1 432 5 view .LVU2870
 433:sieve_extend.c **** 
 8463              		.loc 1 433 5 view .LVU2871
 8464              	# sieve_extend.c:433:     counter_t step  = prime * 2 + 1;
 433:sieve_extend.c **** 
 8465              		.loc 1 433 15 is_stmt 0 view .LVU2872
 8466 2f00 488D7412 		lea	rsi, 1[rdx+rdx]	# step,
 8466      01
 8467              	.LVL512:
 435:sieve_extend.c ****     
 8468              		.loc 1 435 5 is_stmt 1 view .LVU2873
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 8469              		.loc 1 437 5 view .LVU2874
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 8470              		.loc 1 437 11 view .LVU2875
 8471              	# sieve_extend.c:437:     while (prime*step <= block_stop) {
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 8472              		.loc 1 437 17 is_stmt 0 view .LVU2876
 8473 2f05 4989F2   		mov	r10, rsi	# tmp652, step
 8474 2f08 4C0FAFD2 		imul	r10, rdx	# tmp652, index
 8475              	# sieve_extend.c:437:     while (prime*step <= block_stop) {
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 8476              		.loc 1 437 11 view .LVU2877
 8477 2f0c 4C395424 		cmp	QWORD PTR 112[rsp], r10	# %sfp, tmp652
 8477      70
 8478 2f11 0F82B002 		jb	.L533	#,
 8478      0000
 8479              	.LBB763:
 8480              	.LBB714:
 8481              	.LBB708:
 8482              	.LBB692:
 8483              	.LBB693:
GAS LISTING /tmp/ccIyIA9Z.s 			page 229


 8484              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8485              		.loc 1 147 20 view .LVU2878
 8486 2f17 4C8B7C24 		mov	r15, QWORD PTR 112[rsp]	# block_stop, %sfp
 8486      70
 8487              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 8488              		.loc 1 167 29 view .LVU2879
 8489 2f1c 48C7C1FF 		mov	rcx, -1	# tmp1597,
 8489      FFFFFF
 8490 2f23 4489F8   		mov	eax, r15d	# tmp654, block_stop
 8491              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8492              		.loc 1 147 20 view .LVU2880
 8493 2f26 4C89FF   		mov	rdi, r15	# range_stop_word, block_stop
 8494              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 8495              		.loc 1 167 29 view .LVU2881
 8496 2f29 F7D0     		not	eax	# tmp654
 8497              	.LBE693:
 8498              	.LBE692:
 8499              	.LBE708:
 8500              	.LBE714:
 8501              	.LBE763:
 8502              	.LBB764:
 8503              	.LBB758:
 8504              	.LBB740:
 8505              	.LBB736:
 8506              	.LBB724:
 8507              	.LBB725:
 8508              	# sieve_extend.c:173:     const counter_t range_stop_vector = vectorindex(range_stop);
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 8509              		.loc 1 173 21 view .LVU2882
 8510 2f2b 49C1EF08 		shr	r15, 8	# range_stop_vector,
 8511 2f2f 488B1D00 		mov	rbx, QWORD PTR global_VECTORSTEP_FASTER[rip]	# pretmp_1166, global_VECTORSTEP_FASTER
 8511      000000
 8512              	# sieve_extend.c:185:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 185:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 8513              		.loc 1 185 97 view .LVU2883
 8514 2f36 4D89FC   		mov	r12, r15	# _549, range_stop_vector
 8515              	.LBE725:
 8516              	.LBE724:
 8517              	.LBE736:
 8518              	.LBE740:
 8519              	.LBE758:
 8520              	.LBE764:
 8521              	.LBB765:
 8522              	.LBB715:
 8523              	.LBB709:
 8524              	.LBB701:
 8525              	.LBB694:
 8526              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 8527              		.loc 1 167 29 view .LVU2884
 8528 2f39 C462FBF7 		shrx	r9, rcx, rax	# _641, tmp1597, tmp654
 8528      C9
 8529              	.LBE694:
GAS LISTING /tmp/ccIyIA9Z.s 			page 230


 8530              	.LBE701:
 8531              	.LBE709:
 8532              	.LBE715:
 8533              	.LBE765:
 8534              	.LBB766:
 8535              	.LBB759:
 8536              	.LBB741:
 8537              	.LBB737:
 8538              	.LBB731:
 8539              	.LBB726:
 8540              	# sieve_extend.c:173:     const counter_t range_stop_vector = vectorindex(range_stop);
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 8541              		.loc 1 173 21 view .LVU2885
 8542 2f3e 4C897C24 		mov	QWORD PTR 64[rsp], r15	# %sfp, range_stop_vector
 8542      40
 8543              	.LBE726:
 8544              	.LBE731:
 8545              	.LBE737:
 8546              	.LBE741:
 8547              	.LBE759:
 8548              	.LBE766:
 8549              	.LBB767:
 8550              	.LBB716:
 8551              	.LBB710:
 8552              	.LBB702:
 8553              	.LBB695:
 8554              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 8555              		.loc 1 167 29 view .LVU2886
 8556 2f43 4C894C24 		mov	QWORD PTR 96[rsp], r9	# %sfp, _641
 8556      60
 8557              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8558              		.loc 1 147 20 view .LVU2887
 8559 2f48 48C1EF06 		shr	rdi, 6	# range_stop_word,
 8560              	.LBE695:
 8561              	.LBE702:
 8562              	.LBE710:
 8563              	.LBE716:
 8564              	.LBE767:
 8565              	.LBB768:
 8566              	.LBB760:
 8567              	.LBB742:
 8568              	.LBB738:
 8569              	.LBB732:
 8570              	.LBB727:
 8571              	# sieve_extend.c:185:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 185:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 8572              		.loc 1 185 97 view .LVU2888
 8573 2f4c 49C1E405 		sal	r12, 5	# _549,
 8574              	.LBE727:
 8575              	.LBE732:
 8576              	.LBE738:
 8577              	.LBE742:
 8578              	.LBE760:
 8579              	.LBE768:
 8580              	.LBB769:
GAS LISTING /tmp/ccIyIA9Z.s 			page 231


 8581              	.LBB717:
 8582              	.LBB711:
 8583              	.LBB703:
 8584              	.LBB696:
 8585              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8586              		.loc 1 147 20 view .LVU2889
 8587 2f50 48897C24 		mov	QWORD PTR 80[rsp], rdi	# %sfp, range_stop_word
 8587      50
 8588 2f55 48895C24 		mov	QWORD PTR 88[rsp], rbx	# %sfp, pretmp_1166
 8588      58
 8589              	# sieve_extend.c:161:    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_ali
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8590              		.loc 1 161 83 view .LVU2890
 8591 2f5a 498D3CFE 		lea	rdi, [r14+rdi*8]	# _626,
 8592 2f5e 4B8D1C26 		lea	rbx, [r14+r12]	# _1234,
 8593              	.LVL513:
 8594              		.p2align 4,,10
 8595 2f62 660F1F44 		.p2align 3
 8595      0000
 8596              	.L532:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8597              		.loc 1 161 83 view .LVU2891
 8598              	.LBE696:
 8599              	.LBE703:
 8600              	.LBE711:
 8601              	.LBE717:
 8602              	.LBE769:
 438:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 8603              		.loc 1 438 9 is_stmt 1 view .LVU2892
 8604              	# sieve_extend.c:438:         if likely(block_start >= (prime + 1)) 
 438:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 8605              		.loc 1 438 12 is_stmt 0 view .LVU2893
 8606 2f68 488B4424 		mov	rax, QWORD PTR 104[rsp]	# block_start, %sfp
 8606      68
 8607 2f6d 4C8D7A01 		lea	r15, 1[rdx]	# _387,
 8608 2f71 4939C7   		cmp	r15, rax	# _387, block_start
 8609 2f74 0F87E607 		ja	.L499	#,
 8609      0000
 439:sieve_extend.c ****         else 
 8610              		.loc 1 439 13 is_stmt 1 view .LVU2894
 8611              	# sieve_extend.c:439:             start = block_start + prime + prime - ((block_start + prime) % st
 439:sieve_extend.c ****         else 
 8612              		.loc 1 439 33 is_stmt 0 view .LVU2895
 8613 2f7a 4801D0   		add	rax, rdx	# _391, index
 8614              	# sieve_extend.c:439:             start = block_start + prime + prime - ((block_start + prime) % st
 439:sieve_extend.c ****         else 
 8615              		.loc 1 439 41 view .LVU2896
 8616 2f7d 4C8D0C02 		lea	r9, [rdx+rax]	# tmp657,
 8617              	# sieve_extend.c:439:             start = block_start + prime + prime - ((block_start + prime) % st
 439:sieve_extend.c ****         else 
 8618              		.loc 1 439 74 view .LVU2897
 8619 2f81 31D2     		xor	edx, edx	# tmp659
 8620 2f83 48F7F6   		div	rsi	# step
 8621              	# sieve_extend.c:439:             start = block_start + prime + prime - ((block_start + prime) % st
 439:sieve_extend.c ****         else 
 8622              		.loc 1 439 19 view .LVU2898
GAS LISTING /tmp/ccIyIA9Z.s 			page 232


 8623 2f86 4929D1   		sub	r9, rdx	# index, tmp659
 8624              	.LVL514:
 8625              	.L500:
 443:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 8626              		.loc 1 443 9 is_stmt 1 view .LVU2899
 8627              	# sieve_extend.c:443:         if unlikely(step < VECTORSTEP_FASTER) {
 443:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 8628              		.loc 1 443 12 is_stmt 0 view .LVU2900
 8629 2f89 483B7424 		cmp	rsi, QWORD PTR 88[rsp]	# step, %sfp
 8629      58
 8630 2f8e 0F829C02 		jb	.L1084	#,
 8630      0000
 448:sieve_extend.c ****             prime = searchBitFalse_longRange(bitstorage, prime+1 );
 8631              		.loc 1 448 13 is_stmt 1 view .LVU2901
 8632              	.LVL515:
 8633              	.LBB770:
 8634              	.LBI689:
 221:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 8635              		.loc 1 221 20 view .LVU2902
 8636              	.LBB718:
 222:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 8637              		.loc 1 222 5 view .LVU2903
 223:sieve_extend.c **** 
 8638              		.loc 1 223 5 view .LVU2904
 8639              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 8640              		.loc 1 223 74 is_stmt 0 view .LVU2905
 8641 2f94 4989F4   		mov	r12, rsi	# tmp717, step
 8642 2f97 49C1E406 		sal	r12, 6	# tmp717,
 8643              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 8644              		.loc 1 223 21 view .LVU2906
 8645 2f9b 4D01CC   		add	r12, r9	# range_stop_unique, index
 8646              	.LVL516:
 8647              	.LBB712:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8648              		.loc 1 226 10 is_stmt 1 view .LVU2907
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8649              		.loc 1 226 50 view .LVU2908
 8650              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 8651              		.loc 1 226 5 is_stmt 0 view .LVU2909
 8652 2f9e 4D39E1   		cmp	r9, r12	# index, range_stop_unique
 8653 2fa1 0F83CE01 		jnb	.L531	#,
 8653      0000
 8654              	.LBB704:
 8655              	.LBB697:
 8656              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 8657              		.loc 1 149 135 view .LVU2910
 8658 2fa7 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# range_stop_word, %sfp
 8658      50
 8659              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 8660              		.loc 1 149 112 view .LVU2911
 8661 2fac 4C8D14B6 		lea	r10, [rsi+rsi*4]	# tmp727,
 8662              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
GAS LISTING /tmp/ccIyIA9Z.s 			page 233


 149:sieve_extend.c **** 
 8663              		.loc 1 149 135 view .LVU2912
 8664 2fb0 4D89C3   		mov	r11, r8	# tmp729, range_stop_word
 8665 2fb3 4D29D3   		sub	r11, r10	# tmp729, tmp727
 8666              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 8667              		.loc 1 149 53 view .LVU2913
 8668 2fb6 4F8D1CDE 		lea	r11, [r14+r11*8]	# tmp731,
 8669 2fba 4D39D0   		cmp	r8, r10	# range_stop_word, tmp727
 8670 2fbd 4889F1   		mov	rcx, rsi	# _1212, step
 8671 2fc0 4D0F46DE 		cmovbe	r11, r14	# _101,, fast_loop_ptr
 8672 2fc4 48C1E104 		sal	rcx, 4	# _1212,
 8673 2fc8 48894C24 		mov	QWORD PTR 120[rsp], rcx	# %sfp, _1212
 8673      78
 8674              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8675              		.loc 1 154 38 view .LVU2914
 8676 2fcd 488D14F5 		lea	rdx, 0[0+rsi*8]	# _608,
 8676      00000000 
 8677 2fd5 49C1E203 		sal	r10, 3	# tmp735,
 8678 2fd9 0F1F8000 		.p2align 4,,10
 8678      000000
 8679              		.p2align 3
 8680              	.L530:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8681              		.loc 1 154 38 view .LVU2915
 8682              	.LBE697:
 8683              	.LBE704:
 227:sieve_extend.c ****     }
 8684              		.loc 1 227 9 is_stmt 1 view .LVU2916
 8685 2fe0 4C89C8   		mov	rax, r9	# tmp738, index
 8686 2fe3 48C1E806 		shr	rax, 6	# tmp738,
 8687              	.LBB705:
 8688              	.LBB698:
 8689              	# sieve_extend.c:148:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 8690              		.loc 1 148 78 is_stmt 0 view .LVU2917
 8691 2fe7 498D04C6 		lea	rax, [r14+rax*8]	# index_ptr,
 8692              	.LBE698:
 8693              	.LBE705:
 8694              	# sieve_extend.c:227:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 227:sieve_extend.c ****     }
 8695              		.loc 1 227 9 view .LVU2918
 8696 2feb C4C2B1F7 		shlx	rcx, r13, r9	# _593, tmp753, index
 8696      CD
 8697              	.LVL517:
 8698              	.LBB706:
 8699              	.LBI692:
 146:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 8700              		.loc 1 146 20 is_stmt 1 view .LVU2919
 8701              	.LBB699:
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 8702              		.loc 1 147 4 view .LVU2920
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 8703              		.loc 1 148 4 view .LVU2921
 149:sieve_extend.c **** 
 8704              		.loc 1 149 4 view .LVU2922
GAS LISTING /tmp/ccIyIA9Z.s 			page 234


 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8705              		.loc 1 153 10 view .LVU2923
 8706 2ff0 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 8707 2ff3 0F830701 		jnb	.L525	#,
 8707      0000
 8708 2ff9 4C8B4424 		mov	r8, QWORD PTR 120[rsp]	# _1212, %sfp
 8708      78
 8709 2ffe 4901C0   		add	r8, rax	# ivtmp.491, index_ptr
 8710              	.L526:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8711              		.loc 1 154 8 view .LVU2924
 8712              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8713              		.loc 1 154 19 is_stmt 0 view .LVU2925
 8714 3001 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8715              		.loc 1 154 29 is_stmt 1 view .LVU2926
 8716              	.LVL518:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8717              		.loc 1 155 8 view .LVU2927
 8718              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8719              		.loc 1 155 19 is_stmt 0 view .LVU2928
 8720 3004 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8721              		.loc 1 155 29 is_stmt 1 view .LVU2929
 8722              	.LVL519:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8723              		.loc 1 156 8 view .LVU2930
 8724              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8725              		.loc 1 156 19 is_stmt 0 view .LVU2931
 8726 3008 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8727              		.loc 1 156 29 is_stmt 1 view .LVU2932
 8728              	.LVL520:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8729              		.loc 1 157 8 view .LVU2933
 8730              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8731              		.loc 1 157 19 is_stmt 0 view .LVU2934
 8732 300b 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8733              		.loc 1 157 29 is_stmt 1 view .LVU2935
 8734              	.LVL521:
 158:sieve_extend.c ****    }
 8735              		.loc 1 158 8 view .LVU2936
 8736 300f 4D01D0   		add	r8, r10	# ivtmp.491, tmp735
 8737              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8738              		.loc 1 158 19 is_stmt 0 view .LVU2937
 8739 3012 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8740              		.loc 1 158 29 is_stmt 1 view .LVU2938
 8741 3016 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8742              	.LVL522:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 235


 8743              		.loc 1 153 10 view .LVU2939
 8744 3019 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8745 301c 0F86DE00 		jbe	.L525	#,
 8745      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8746              		.loc 1 154 8 view .LVU2940
 8747              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8748              		.loc 1 154 19 is_stmt 0 view .LVU2941
 8749 3022 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8750              		.loc 1 154 29 is_stmt 1 view .LVU2942
 8751              	.LVL523:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8752              		.loc 1 155 8 view .LVU2943
 8753              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8754              		.loc 1 155 19 is_stmt 0 view .LVU2944
 8755 3025 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8756              		.loc 1 155 29 is_stmt 1 view .LVU2945
 8757              	.LVL524:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8758              		.loc 1 156 8 view .LVU2946
 8759              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8760              		.loc 1 156 19 is_stmt 0 view .LVU2947
 8761 3029 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8762              		.loc 1 156 29 is_stmt 1 view .LVU2948
 8763              	.LVL525:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8764              		.loc 1 157 8 view .LVU2949
 8765              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8766              		.loc 1 157 19 is_stmt 0 view .LVU2950
 8767 302c 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8768              		.loc 1 157 29 is_stmt 1 view .LVU2951
 8769              	.LVL526:
 158:sieve_extend.c ****    }
 8770              		.loc 1 158 8 view .LVU2952
 8771 3030 4D01D0   		add	r8, r10	# ivtmp.491, tmp735
 8772              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8773              		.loc 1 158 19 is_stmt 0 view .LVU2953
 8774 3033 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8775              		.loc 1 158 29 is_stmt 1 view .LVU2954
 8776 3037 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8777              	.LVL527:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8778              		.loc 1 153 10 view .LVU2955
 8779 303a 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8780 303d 0F86BD00 		jbe	.L525	#,
 8780      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 236


 8781              		.loc 1 154 8 view .LVU2956
 8782              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8783              		.loc 1 154 19 is_stmt 0 view .LVU2957
 8784 3043 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8785              		.loc 1 154 29 is_stmt 1 view .LVU2958
 8786              	.LVL528:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8787              		.loc 1 155 8 view .LVU2959
 8788              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8789              		.loc 1 155 19 is_stmt 0 view .LVU2960
 8790 3046 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8791              		.loc 1 155 29 is_stmt 1 view .LVU2961
 8792              	.LVL529:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8793              		.loc 1 156 8 view .LVU2962
 8794              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8795              		.loc 1 156 19 is_stmt 0 view .LVU2963
 8796 304a 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8797              		.loc 1 156 29 is_stmt 1 view .LVU2964
 8798              	.LVL530:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8799              		.loc 1 157 8 view .LVU2965
 8800              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8801              		.loc 1 157 19 is_stmt 0 view .LVU2966
 8802 304d 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8803              		.loc 1 157 29 is_stmt 1 view .LVU2967
 8804              	.LVL531:
 158:sieve_extend.c ****    }
 8805              		.loc 1 158 8 view .LVU2968
 8806 3051 4D01D0   		add	r8, r10	# ivtmp.491, tmp735
 8807              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8808              		.loc 1 158 19 is_stmt 0 view .LVU2969
 8809 3054 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8810              		.loc 1 158 29 is_stmt 1 view .LVU2970
 8811 3058 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8812              	.LVL532:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8813              		.loc 1 153 10 view .LVU2971
 8814 305b 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8815 305e 0F869C00 		jbe	.L525	#,
 8815      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8816              		.loc 1 154 8 view .LVU2972
 8817              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8818              		.loc 1 154 19 is_stmt 0 view .LVU2973
 8819 3064 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
GAS LISTING /tmp/ccIyIA9Z.s 			page 237


 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8820              		.loc 1 154 29 is_stmt 1 view .LVU2974
 8821              	.LVL533:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8822              		.loc 1 155 8 view .LVU2975
 8823              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8824              		.loc 1 155 19 is_stmt 0 view .LVU2976
 8825 3067 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8826              		.loc 1 155 29 is_stmt 1 view .LVU2977
 8827              	.LVL534:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8828              		.loc 1 156 8 view .LVU2978
 8829              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8830              		.loc 1 156 19 is_stmt 0 view .LVU2979
 8831 306b 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8832              		.loc 1 156 29 is_stmt 1 view .LVU2980
 8833              	.LVL535:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8834              		.loc 1 157 8 view .LVU2981
 8835              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8836              		.loc 1 157 19 is_stmt 0 view .LVU2982
 8837 306e 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8838              		.loc 1 157 29 is_stmt 1 view .LVU2983
 8839              	.LVL536:
 158:sieve_extend.c ****    }
 8840              		.loc 1 158 8 view .LVU2984
 8841 3072 4D01D0   		add	r8, r10	# ivtmp.491, tmp735
 8842              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8843              		.loc 1 158 19 is_stmt 0 view .LVU2985
 8844 3075 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8845              		.loc 1 158 29 is_stmt 1 view .LVU2986
 8846 3079 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8847              	.LVL537:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8848              		.loc 1 153 10 view .LVU2987
 8849 307c 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8850 307f 767F     		jbe	.L525	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8851              		.loc 1 154 8 view .LVU2988
 8852              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8853              		.loc 1 154 19 is_stmt 0 view .LVU2989
 8854 3081 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8855              		.loc 1 154 29 is_stmt 1 view .LVU2990
 8856              	.LVL538:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8857              		.loc 1 155 8 view .LVU2991
 8858              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 238


 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8859              		.loc 1 155 19 is_stmt 0 view .LVU2992
 8860 3084 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8861              		.loc 1 155 29 is_stmt 1 view .LVU2993
 8862              	.LVL539:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8863              		.loc 1 156 8 view .LVU2994
 8864              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8865              		.loc 1 156 19 is_stmt 0 view .LVU2995
 8866 3088 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8867              		.loc 1 156 29 is_stmt 1 view .LVU2996
 8868              	.LVL540:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8869              		.loc 1 157 8 view .LVU2997
 8870              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8871              		.loc 1 157 19 is_stmt 0 view .LVU2998
 8872 308b 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8873              		.loc 1 157 29 is_stmt 1 view .LVU2999
 8874              	.LVL541:
 158:sieve_extend.c ****    }
 8875              		.loc 1 158 8 view .LVU3000
 8876 308f 4D01D0   		add	r8, r10	# ivtmp.491, tmp735
 8877              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8878              		.loc 1 158 19 is_stmt 0 view .LVU3001
 8879 3092 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8880              		.loc 1 158 29 is_stmt 1 view .LVU3002
 8881 3096 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8882              	.LVL542:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8883              		.loc 1 153 10 view .LVU3003
 8884 3099 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8885 309c 7662     		jbe	.L525	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8886              		.loc 1 154 8 view .LVU3004
 8887              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8888              		.loc 1 154 19 is_stmt 0 view .LVU3005
 8889 309e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8890              		.loc 1 154 29 is_stmt 1 view .LVU3006
 8891              	.LVL543:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8892              		.loc 1 155 8 view .LVU3007
 8893              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8894              		.loc 1 155 19 is_stmt 0 view .LVU3008
 8895 30a1 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8896              		.loc 1 155 29 is_stmt 1 view .LVU3009
 8897              	.LVL544:
GAS LISTING /tmp/ccIyIA9Z.s 			page 239


 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8898              		.loc 1 156 8 view .LVU3010
 8899              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8900              		.loc 1 156 19 is_stmt 0 view .LVU3011
 8901 30a5 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8902              		.loc 1 156 29 is_stmt 1 view .LVU3012
 8903              	.LVL545:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8904              		.loc 1 157 8 view .LVU3013
 8905              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8906              		.loc 1 157 19 is_stmt 0 view .LVU3014
 8907 30a8 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8908              		.loc 1 157 29 is_stmt 1 view .LVU3015
 8909              	.LVL546:
 158:sieve_extend.c ****    }
 8910              		.loc 1 158 8 view .LVU3016
 8911 30ac 4D01D0   		add	r8, r10	# ivtmp.491, tmp735
 8912              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8913              		.loc 1 158 19 is_stmt 0 view .LVU3017
 8914 30af 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8915              		.loc 1 158 29 is_stmt 1 view .LVU3018
 8916 30b3 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8917              	.LVL547:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8918              		.loc 1 153 10 view .LVU3019
 8919 30b6 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8920 30b9 7645     		jbe	.L525	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8921              		.loc 1 154 8 view .LVU3020
 8922              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8923              		.loc 1 154 19 is_stmt 0 view .LVU3021
 8924 30bb 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8925              		.loc 1 154 29 is_stmt 1 view .LVU3022
 8926              	.LVL548:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8927              		.loc 1 155 8 view .LVU3023
 8928              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8929              		.loc 1 155 19 is_stmt 0 view .LVU3024
 8930 30be 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8931              		.loc 1 155 29 is_stmt 1 view .LVU3025
 8932              	.LVL549:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8933              		.loc 1 156 8 view .LVU3026
 8934              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8935              		.loc 1 156 19 is_stmt 0 view .LVU3027
 8936 30c2 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
GAS LISTING /tmp/ccIyIA9Z.s 			page 240


 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8937              		.loc 1 156 29 is_stmt 1 view .LVU3028
 8938              	.LVL550:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8939              		.loc 1 157 8 view .LVU3029
 8940              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8941              		.loc 1 157 19 is_stmt 0 view .LVU3030
 8942 30c5 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8943              		.loc 1 157 29 is_stmt 1 view .LVU3031
 8944              	.LVL551:
 158:sieve_extend.c ****    }
 8945              		.loc 1 158 8 view .LVU3032
 8946 30c9 4D01D0   		add	r8, r10	# ivtmp.491, tmp735
 8947              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8948              		.loc 1 158 19 is_stmt 0 view .LVU3033
 8949 30cc 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8950              		.loc 1 158 29 is_stmt 1 view .LVU3034
 8951 30d0 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8952              	.LVL552:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8953              		.loc 1 153 10 view .LVU3035
 8954 30d3 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8955 30d6 7628     		jbe	.L525	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8956              		.loc 1 154 8 view .LVU3036
 8957              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8958              		.loc 1 154 19 is_stmt 0 view .LVU3037
 8959 30d8 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_828, offset: 0B], _593
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8960              		.loc 1 154 29 is_stmt 1 view .LVU3038
 8961              	.LVL553:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8962              		.loc 1 155 8 view .LVU3039
 8963              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8964              		.loc 1 155 19 is_stmt 0 view .LVU3040
 8965 30db 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_828, index: _608, offset: 0B], _593
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8966              		.loc 1 155 29 is_stmt 1 view .LVU3041
 8967              	.LVL554:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8968              		.loc 1 156 8 view .LVU3042
 8969              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8970              		.loc 1 156 19 is_stmt 0 view .LVU3043
 8971 30df 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1206, offset: 0B], _593
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8972              		.loc 1 156 29 is_stmt 1 view .LVU3044
 8973              	.LVL555:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8974              		.loc 1 157 8 view .LVU3045
 8975              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 241


 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8976              		.loc 1 157 19 is_stmt 0 view .LVU3046
 8977 30e2 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1206, index: _608, offset: 0B], _593
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8978              		.loc 1 157 29 is_stmt 1 view .LVU3047
 8979              	.LVL556:
 158:sieve_extend.c ****    }
 8980              		.loc 1 158 8 view .LVU3048
 8981 30e6 4D01D0   		add	r8, r10	# ivtmp.491, tmp735
 8982              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 8983              		.loc 1 158 19 is_stmt 0 view .LVU3049
 8984 30e9 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_828, index: _608, step: 4, offset: 0B], _593
 158:sieve_extend.c ****    }
 8985              		.loc 1 158 29 is_stmt 1 view .LVU3050
 8986 30ed 4C01D0   		add	rax, r10	# index_ptr, tmp735
 8987              	.LVL557:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8988              		.loc 1 153 10 view .LVU3051
 8989 30f0 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 8990 30f3 0F8708FF 		ja	.L526	#,
 8990      FFFF
 8991 30f9 0F1F8000 		.p2align 4,,10
 8991      000000
 8992              		.p2align 3
 8993              	.L525:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 8994              		.loc 1 161 4 view .LVU3052
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8995              		.loc 1 162 4 view .LVU3053
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 8996              		.loc 1 162 10 view .LVU3054
 8997 3100 4839F8   		cmp	rax, rdi	# index_ptr, _626
 8998 3103 735B     		jnb	.L527	#,
 8999              	.L528:
 163:sieve_extend.c ****    }
 9000              		.loc 1 163 8 view .LVU3055
 9001              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9002              		.loc 1 163 19 is_stmt 0 view .LVU3056
 9003 3105 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9004              		.loc 1 163 29 is_stmt 1 view .LVU3057
 9005              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9006              		.loc 1 163 38 is_stmt 0 view .LVU3058
 9007 3108 4801D0   		add	rax, rdx	# index_ptr, _608
 9008              	.LVL558:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9009              		.loc 1 162 10 is_stmt 1 view .LVU3059
 9010 310b 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9011 310e 7350     		jnb	.L527	#,
 163:sieve_extend.c ****    }
 9012              		.loc 1 163 8 view .LVU3060
 9013              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9014              		.loc 1 163 19 is_stmt 0 view .LVU3061
GAS LISTING /tmp/ccIyIA9Z.s 			page 242


 9015 3110 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9016              		.loc 1 163 29 is_stmt 1 view .LVU3062
 9017              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9018              		.loc 1 163 38 is_stmt 0 view .LVU3063
 9019 3113 4801D0   		add	rax, rdx	# index_ptr, _608
 9020              	.LVL559:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9021              		.loc 1 162 10 is_stmt 1 view .LVU3064
 9022 3116 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9023 3119 7345     		jnb	.L527	#,
 163:sieve_extend.c ****    }
 9024              		.loc 1 163 8 view .LVU3065
 9025              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9026              		.loc 1 163 19 is_stmt 0 view .LVU3066
 9027 311b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9028              		.loc 1 163 29 is_stmt 1 view .LVU3067
 9029              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9030              		.loc 1 163 38 is_stmt 0 view .LVU3068
 9031 311e 4801D0   		add	rax, rdx	# index_ptr, _608
 9032              	.LVL560:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9033              		.loc 1 162 10 is_stmt 1 view .LVU3069
 9034 3121 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9035 3124 733A     		jnb	.L527	#,
 163:sieve_extend.c ****    }
 9036              		.loc 1 163 8 view .LVU3070
 9037              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9038              		.loc 1 163 19 is_stmt 0 view .LVU3071
 9039 3126 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9040              		.loc 1 163 29 is_stmt 1 view .LVU3072
 9041              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9042              		.loc 1 163 38 is_stmt 0 view .LVU3073
 9043 3129 4801D0   		add	rax, rdx	# index_ptr, _608
 9044              	.LVL561:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9045              		.loc 1 162 10 is_stmt 1 view .LVU3074
 9046 312c 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9047 312f 732F     		jnb	.L527	#,
 163:sieve_extend.c ****    }
 9048              		.loc 1 163 8 view .LVU3075
 9049              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9050              		.loc 1 163 19 is_stmt 0 view .LVU3076
 9051 3131 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9052              		.loc 1 163 29 is_stmt 1 view .LVU3077
 9053              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9054              		.loc 1 163 38 is_stmt 0 view .LVU3078
GAS LISTING /tmp/ccIyIA9Z.s 			page 243


 9055 3134 4801D0   		add	rax, rdx	# index_ptr, _608
 9056              	.LVL562:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9057              		.loc 1 162 10 is_stmt 1 view .LVU3079
 9058 3137 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9059 313a 7324     		jnb	.L527	#,
 163:sieve_extend.c ****    }
 9060              		.loc 1 163 8 view .LVU3080
 9061              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9062              		.loc 1 163 19 is_stmt 0 view .LVU3081
 9063 313c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9064              		.loc 1 163 29 is_stmt 1 view .LVU3082
 9065              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9066              		.loc 1 163 38 is_stmt 0 view .LVU3083
 9067 313f 4801D0   		add	rax, rdx	# index_ptr, _608
 9068              	.LVL563:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9069              		.loc 1 162 10 is_stmt 1 view .LVU3084
 9070 3142 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9071 3145 7319     		jnb	.L527	#,
 163:sieve_extend.c ****    }
 9072              		.loc 1 163 8 view .LVU3085
 9073              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9074              		.loc 1 163 19 is_stmt 0 view .LVU3086
 9075 3147 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9076              		.loc 1 163 29 is_stmt 1 view .LVU3087
 9077              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9078              		.loc 1 163 38 is_stmt 0 view .LVU3088
 9079 314a 4801D0   		add	rax, rdx	# index_ptr, _608
 9080              	.LVL564:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9081              		.loc 1 162 10 is_stmt 1 view .LVU3089
 9082 314d 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9083 3150 730E     		jnb	.L527	#,
 163:sieve_extend.c ****    }
 9084              		.loc 1 163 8 view .LVU3090
 9085              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9086              		.loc 1 163 19 is_stmt 0 view .LVU3091
 9087 3152 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_825, offset: 0B], _593
 163:sieve_extend.c ****    }
 9088              		.loc 1 163 29 is_stmt 1 view .LVU3092
 9089              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 9090              		.loc 1 163 38 is_stmt 0 view .LVU3093
 9091 3155 4801D0   		add	rax, rdx	# index_ptr, _608
 9092              	.LVL565:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 9093              		.loc 1 162 10 is_stmt 1 view .LVU3094
 9094 3158 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9095 315b 72A8     		jb	.L528	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 244


 9096 315d 0F1F00   		.p2align 4,,10
 9097              		.p2align 3
 9098              	.L527:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9099              		.loc 1 166 4 view .LVU3095
 9100              	# sieve_extend.c:166:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9101              		.loc 1 166 7 is_stmt 0 view .LVU3096
 9102 3160 4839F8   		cmp	rax, rdi	# index_ptr, _626
 9103 3163 0F84B700 		je	.L1085	#,
 9103      0000
 9104              	.LVL566:
 9105              	.L529:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9106              		.loc 1 166 7 view .LVU3097
 9107              	.LBE699:
 9108              	.LBE706:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9109              		.loc 1 226 77 is_stmt 1 view .LVU3098
 9110              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9111              		.loc 1 226 83 is_stmt 0 view .LVU3099
 9112 3169 4901F1   		add	r9, rsi	# index, step
 9113              	.LVL567:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9114              		.loc 1 226 50 is_stmt 1 view .LVU3100
 9115              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9116              		.loc 1 226 5 is_stmt 0 view .LVU3101
 9117 316c 4D39CC   		cmp	r12, r9	# range_stop_unique, index
 9118 316f 0F876BFE 		ja	.L530	#,
 9118      FFFF
 9119              	.LVL568:
 9120              	.L531:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 9121              		.loc 1 226 5 view .LVU3102
 9122              	.LBE712:
 9123              	.LBE718:
 9124              	.LBE770:
 449:sieve_extend.c ****         }
 9125              		.loc 1 449 13 is_stmt 1 view .LVU3103
 9126              	.LBB771:
 9127              	.LBI771:
 127:sieve_extend.c ****    const bitshift_t index_bit  = bitindex_calc(index);
 9128              		.loc 1 127 25 view .LVU3104
 9129              	.LBB772:
 128:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 9130              		.loc 1 128 4 view .LVU3105
 9131              	# sieve_extend.c:129:    register counter_t index_word = wordindex(index);
 129:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 9132              		.loc 1 129 23 is_stmt 0 view .LVU3106
 9133 3175 4D89FC   		mov	r12, r15	# index_word, _387
 9134 3178 49C1EC06 		shr	r12, 6	# index_word,
 9135              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9136              		.loc 1 130 90 view .LVU3107
 9137 317c 4F8B14E6 		mov	r10, QWORD PTR [r14+r12*8]	# *_564, *_564
GAS LISTING /tmp/ccIyIA9Z.s 			page 245


 9138              	# sieve_extend.c:128:    const bitshift_t index_bit  = bitindex_calc(index);
 128:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 9139              		.loc 1 128 21 view .LVU3108
 9140 3180 4D89F9   		mov	r9, r15	# index_bit, _387
 9141 3183 4183E13F 		and	r9d, 63	# index_bit,
 9142              	.LVL569:
 129:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 9143              		.loc 1 129 4 is_stmt 1 view .LVU3109
 130:sieve_extend.c ****    index += distance;
 9144              		.loc 1 130 4 view .LVU3110
 9145              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9146              		.loc 1 130 24 is_stmt 0 view .LVU3111
 9147 3187 4531DB   		xor	r11d, r11d	# distance
 9148              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9149              		.loc 1 130 90 view .LVU3112
 9150 318a C4C2B3F7 		shrx	rdx, r10, r9	# tmp720, *_564, index_bit
 9150      D2
 9151              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9152              		.loc 1 130 65 view .LVU3113
 9153 318f 48F7D2   		not	rdx	# tmp722
 9154              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9155              		.loc 1 130 24 view .LVU3114
 9156 3192 F34C0FBC 		tzcnt	r11, rdx	# distance, tmp722
 9156      DA
 9157              	.LVL570:
 131:sieve_extend.c ****    distance += index_bit;
 9158              		.loc 1 131 4 is_stmt 1 view .LVU3115
 9159              	# sieve_extend.c:131:    index += distance;
 131:sieve_extend.c ****    distance += index_bit;
 9160              		.loc 1 131 10 is_stmt 0 view .LVU3116
 9161 3197 4B8D141F 		lea	rdx, [r15+r11]	# index,
 9162              	.LVL571:
 132:sieve_extend.c **** 
 9163              		.loc 1 132 4 is_stmt 1 view .LVU3117
 134:sieve_extend.c ****        index_word++;
 9164              		.loc 1 134 4 view .LVU3118
 134:sieve_extend.c ****        index_word++;
 9165              		.loc 1 134 10 view .LVU3119
 9166              	# sieve_extend.c:132:    distance += index_bit;
 132:sieve_extend.c **** 
 9167              		.loc 1 132 13 is_stmt 0 view .LVU3120
 9168 319b 4D01CB   		add	r11, r9	# distance, index_bit
 9169              	.LVL572:
 9170              	# sieve_extend.c:130:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 130:sieve_extend.c ****    index += distance;
 9171              		.loc 1 130 77 view .LVU3121
 9172 319e 4A8D34E5 		lea	rsi, 0[0+r12*8]	# _563,
 9172      00000000 
 9173              	.LVL573:
 9174              	# sieve_extend.c:134:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 134:sieve_extend.c ****        index_word++;
 9175              		.loc 1 134 10 view .LVU3122
 9176 31a6 4983FB40 		cmp	r11, 64	# distance,
GAS LISTING /tmp/ccIyIA9Z.s 			page 246


 9177 31aa 0F849805 		je	.L1086	#,
 9177      0000
 9178              	.LVL574:
 9179              	.L507:
 134:sieve_extend.c ****        index_word++;
 9180              		.loc 1 134 10 view .LVU3123
 9181              	.LBE772:
 9182              	.LBE771:
 452:sieve_extend.c ****     }
 9183              		.loc 1 452 9 is_stmt 1 view .LVU3124
 9184              	# sieve_extend.c:452:         step  = prime * 2 + 1;
 452:sieve_extend.c ****     }
 9185              		.loc 1 452 15 is_stmt 0 view .LVU3125
 9186 31b0 488D7412 		lea	rsi, 1[rdx+rdx]	# step,
 9186      01
 9187              	.LVL575:
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9188              		.loc 1 437 11 is_stmt 1 view .LVU3126
 9189              	# sieve_extend.c:437:     while (prime*step <= block_stop) {
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9190              		.loc 1 437 17 is_stmt 0 view .LVU3127
 9191 31b5 4989D2   		mov	r10, rdx	# tmp746, index
 9192 31b8 4C0FAFD6 		imul	r10, rsi	# tmp746, step
 9193              	# sieve_extend.c:437:     while (prime*step <= block_stop) {
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9194              		.loc 1 437 11 view .LVU3128
 9195 31bc 4C395424 		cmp	QWORD PTR 112[rsp], r10	# %sfp, tmp746
 9195      70
 9196 31c1 0F83A1FD 		jnb	.L532	#,
 9196      FFFF
 9197              	.LVL576:
 9198              	.L533:
 437:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 9199              		.loc 1 437 11 view .LVU3129
 9200              	.LBE782:
 9201              	.LBE788:
 9202              	.LBE686:
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9203              		.loc 1 524 91 is_stmt 1 view .LVU3130
 9204              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9205              		.loc 1 524 103 is_stmt 0 view .LVU3131
 9206 31c7 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	# blocksize, %sfp
 9206      38
 9207              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9208              		.loc 1 524 128 view .LVU3132
 9209 31cc 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# block_stop, %sfp
 9209      70
 9210              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9211              		.loc 1 524 103 view .LVU3133
 9212 31d1 48017C24 		add	QWORD PTR 104[rsp], rdi	# %sfp, blocksize
 9212      68
 9213              	.LVL577:
 9214              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
GAS LISTING /tmp/ccIyIA9Z.s 			page 247


 9215              		.loc 1 524 128 view .LVU3134
 9216 31d6 4801FA   		add	rdx, rdi	# block_stop, blocksize
 9217              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9218              		.loc 1 524 103 view .LVU3135
 9219 31d9 488B5C24 		mov	rbx, QWORD PTR 104[rsp]	# block_start, %sfp
 9219      68
 9220              	.LVL578:
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9221              		.loc 1 524 63 is_stmt 1 view .LVU3136
 9222              	# sieve_extend.c:524:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 524:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 9223              		.loc 1 524 5 is_stmt 0 view .LVU3137
 9224 31de 483B5C24 		cmp	rbx, QWORD PTR 72[rsp]	# block_start, %sfp
 9224      48
 9225 31e3 0F8637FC 		jbe	.L497	#,
 9225      FFFF
 9226              	.LBE685:
 9227              	# sieve_extend.c:532: }
 532:sieve_extend.c **** 
 9228              		.loc 1 532 1 view .LVU3138
 9229 31e9 488B8424 		mov	rax, QWORD PTR 184[rsp]	# tmp1489, D.7097
 9229      B8000000 
 9230 31f1 64483304 		xor	rax, QWORD PTR fs:40	# tmp1489, MEM[(<address-space-1> long unsigned int *)40B]
 9230      25280000 
 9230      00
 9231 31fa 0F85CA0B 		jne	.L1087	#,
 9231      0000
 9232 3200 488B4424 		mov	rax, QWORD PTR 16[rsp]	#, %sfp
 9232      10
 9233 3205 C5F877   		vzeroupper
 9234 3208 488D65D8 		lea	rsp, -40[rbp]	#,
 9235              	.LVL579:
 532:sieve_extend.c **** 
 9236              		.loc 1 532 1 view .LVU3139
 9237 320c 5B       		pop	rbx	#
 9238              	.LVL580:
 532:sieve_extend.c **** 
 9239              		.loc 1 532 1 view .LVU3140
 9240 320d 415C     		pop	r12	#
 9241 320f 415D     		pop	r13	#
 9242 3211 415E     		pop	r14	#
 9243              	.LVL581:
 532:sieve_extend.c **** 
 9244              		.loc 1 532 1 view .LVU3141
 9245 3213 415F     		pop	r15	#
 9246 3215 5D       		pop	rbp	#
 9247              		.cfi_remember_state
 9248              		.cfi_def_cfa 7, 8
 9249              	.LVL582:
 532:sieve_extend.c **** 
 9250              		.loc 1 532 1 view .LVU3142
 9251 3216 C3       		ret	
 9252              	.LVL583:
 9253 3217 660F1F84 		.p2align 4,,10
 9253      00000000 
 9253      00
GAS LISTING /tmp/ccIyIA9Z.s 			page 248


 9254              		.p2align 3
 9255              	.L1085:
 9256              		.cfi_restore_state
 9257              	.LBB791:
 9258              	.LBB790:
 9259              	.LBB789:
 9260              	.LBB783:
 9261              	.LBB774:
 9262              	.LBB719:
 9263              	.LBB713:
 9264              	.LBB707:
 9265              	.LBB700:
 167:sieve_extend.c ****    }
 9266              		.loc 1 167 7 is_stmt 1 view .LVU3143
 9267              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 9268              		.loc 1 167 27 is_stmt 0 view .LVU3144
 9269 3220 48234C24 		and	rcx, QWORD PTR 96[rsp]	# tmp740, %sfp
 9269      60
 9270              	.LVL584:
 9271              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 9272              		.loc 1 167 18 view .LVU3145
 9273 3225 48090F   		or	QWORD PTR [rdi], rcx	# *index_ptr_823, tmp740
 9274 3228 E93CFFFF 		jmp	.L529	#
 9274      FF
 9275              	.LVL585:
 9276 322d 0F1F00   		.p2align 4,,10
 9277              		.p2align 3
 9278              	.L1084:
 167:sieve_extend.c ****    }
 9279              		.loc 1 167 18 view .LVU3146
 9280              	.LBE700:
 9281              	.LBE707:
 9282              	.LBE713:
 9283              	.LBE719:
 9284              	.LBE774:
 444:sieve_extend.c ****             prime = searchBitFalse(bitstorage, prime+1 );
 9285              		.loc 1 444 13 is_stmt 1 view .LVU3147
 9286              	.LBB775:
 9287              	.LBI720:
 231:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 9288              		.loc 1 231 20 view .LVU3148
 9289              	.LBB761:
 232:sieve_extend.c **** 
 9290              		.loc 1 232 5 view .LVU3149
 234:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 9291              		.loc 1 234 5 view .LVU3150
 9292              	# sieve_extend.c:234:     counter_t range_start_atvector = vectorstart(range_start);
 234:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 9293              		.loc 1 234 15 is_stmt 0 view .LVU3151
 9294 3230 4C89C8   		mov	rax, r9	# range_start_atvector, index
 9295 3233 30C0     		xor	al, al	# range_start_atvector
 9296              	.LVL586:
 235:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 9297              		.loc 1 235 5 is_stmt 1 view .LVU3152
 9298              	# sieve_extend.c:235:     if likely(( range_start_atvector + step) < range_start) { // not the firs
GAS LISTING /tmp/ccIyIA9Z.s 			page 249


 235:sieve_extend.c ****         debug printf("..Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 9299              		.loc 1 235 8 is_stmt 0 view .LVU3153
 9300 3235 4C8D0406 		lea	r8, [rsi+rax]	# tmp662,
 9301 3239 4D39C1   		cmp	r9, r8	# index, tmp662
 9302 323c 0F86EE00 		jbe	.L502	#,
 9302      0000
 236:sieve_extend.c **** 
 9303              		.loc 1 236 9 is_stmt 1 view .LVU3154
 238:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 9304              		.loc 1 238 9 view .LVU3155
 9305              	# sieve_extend.c:238:         range_start_atvector += VECTOR_SIZE; // find next vector
 238:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 9306              		.loc 1 238 30 is_stmt 0 view .LVU3156
 9307 3242 48050001 		add	rax, 256	# range_start_atvector,
 9307      0000
 9308              	.LVL587:
 239:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 9309              		.loc 1 239 9 is_stmt 1 view .LVU3157
 9310              	# sieve_extend.c:239:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 239:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 9311              		.loc 1 239 12 is_stmt 0 view .LVU3158
 9312 3248 48394424 		cmp	QWORD PTR 112[rsp], rax	# %sfp, range_start_atvector
 9312      70
 9313 324d 0F820F07 		jb	.L503	#,
 9313      0000
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9314              		.loc 1 245 16 is_stmt 1 view .LVU3159
 9315              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9316              		.loc 1 245 9 is_stmt 0 view .LVU3160
 9317 3253 4939C1   		cmp	r9, rax	# index, range_start_atvector
 9318 3256 0F87D400 		ja	.L502	#,
 9318      0000
 9319              	.L504:
 246:sieve_extend.c ****     }
 9320              		.loc 1 246 13 is_stmt 1 view .LVU3161
 9321              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9322              		.loc 1 246 53 is_stmt 0 view .LVU3162
 9323 325c 4D89CC   		mov	r12, r9	# tmp673, index
 9324              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9325              		.loc 1 246 56 view .LVU3163
 9326 325f C442B1F7 		shlx	r10, r13, r9	# tmp676, tmp753, index
 9326      D5
 9327              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9328              		.loc 1 246 53 view .LVU3164
 9329 3264 49C1EC06 		shr	r12, 6	# tmp673,
 9330              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9331              		.loc 1 245 65 view .LVU3165
 9332 3268 4901F1   		add	r9, rsi	# index, step
 9333              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9334              		.loc 1 246 53 view .LVU3166
 9335 326b 4F0914E6 		or	QWORD PTR [r14+r12*8], r10	# *_429, tmp676
GAS LISTING /tmp/ccIyIA9Z.s 			page 250


 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9336              		.loc 1 245 53 is_stmt 1 view .LVU3167
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9337              		.loc 1 245 16 view .LVU3168
 9338              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9339              		.loc 1 245 9 is_stmt 0 view .LVU3169
 9340 326f 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9341 3272 0F82B800 		jb	.L502	#,
 9341      0000
 246:sieve_extend.c ****     }
 9342              		.loc 1 246 13 is_stmt 1 view .LVU3170
 9343              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9344              		.loc 1 246 53 is_stmt 0 view .LVU3171
 9345 3278 4C89CA   		mov	rdx, r9	# tmp890, index
 9346              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9347              		.loc 1 246 56 view .LVU3172
 9348 327b C442B1F7 		shlx	r11, r13, r9	# tmp893, tmp753, index
 9348      DD
 9349              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9350              		.loc 1 246 53 view .LVU3173
 9351 3280 48C1EA06 		shr	rdx, 6	# tmp890,
 9352              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9353              		.loc 1 245 65 view .LVU3174
 9354 3284 4901F1   		add	r9, rsi	# index, step
 9355              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9356              		.loc 1 246 53 view .LVU3175
 9357 3287 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_429, tmp893
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9358              		.loc 1 245 53 is_stmt 1 view .LVU3176
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9359              		.loc 1 245 16 view .LVU3177
 9360              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9361              		.loc 1 245 9 is_stmt 0 view .LVU3178
 9362 328b 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9363 328e 0F829C00 		jb	.L502	#,
 9363      0000
 246:sieve_extend.c ****     }
 9364              		.loc 1 246 13 is_stmt 1 view .LVU3179
 9365              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9366              		.loc 1 246 53 is_stmt 0 view .LVU3180
 9367 3294 4D89C8   		mov	r8, r9	# tmp894, index
 9368              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9369              		.loc 1 246 56 view .LVU3181
 9370 3297 C4C2B1F7 		shlx	rcx, r13, r9	# tmp897, tmp753, index
 9370      CD
 9371              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9372              		.loc 1 246 53 view .LVU3182
GAS LISTING /tmp/ccIyIA9Z.s 			page 251


 9373 329c 49C1E806 		shr	r8, 6	# tmp894,
 9374              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9375              		.loc 1 245 65 view .LVU3183
 9376 32a0 4901F1   		add	r9, rsi	# index, step
 9377              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9378              		.loc 1 246 53 view .LVU3184
 9379 32a3 4B090CC6 		or	QWORD PTR [r14+r8*8], rcx	# *_429, tmp897
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9380              		.loc 1 245 53 is_stmt 1 view .LVU3185
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9381              		.loc 1 245 16 view .LVU3186
 9382              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9383              		.loc 1 245 9 is_stmt 0 view .LVU3187
 9384 32a7 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9385 32aa 0F828000 		jb	.L502	#,
 9385      0000
 246:sieve_extend.c ****     }
 9386              		.loc 1 246 13 is_stmt 1 view .LVU3188
 9387              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9388              		.loc 1 246 53 is_stmt 0 view .LVU3189
 9389 32b0 4D89CC   		mov	r12, r9	# tmp898, index
 9390              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9391              		.loc 1 246 56 view .LVU3190
 9392 32b3 C442B1F7 		shlx	r10, r13, r9	# tmp901, tmp753, index
 9392      D5
 9393              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9394              		.loc 1 246 53 view .LVU3191
 9395 32b8 49C1EC06 		shr	r12, 6	# tmp898,
 9396              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9397              		.loc 1 245 65 view .LVU3192
 9398 32bc 4901F1   		add	r9, rsi	# index, step
 9399              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9400              		.loc 1 246 53 view .LVU3193
 9401 32bf 4F0914E6 		or	QWORD PTR [r14+r12*8], r10	# *_429, tmp901
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9402              		.loc 1 245 53 is_stmt 1 view .LVU3194
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9403              		.loc 1 245 16 view .LVU3195
 9404              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9405              		.loc 1 245 9 is_stmt 0 view .LVU3196
 9406 32c3 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9407 32c6 7268     		jb	.L502	#,
 246:sieve_extend.c ****     }
 9408              		.loc 1 246 13 is_stmt 1 view .LVU3197
 9409              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9410              		.loc 1 246 53 is_stmt 0 view .LVU3198
 9411 32c8 4C89CA   		mov	rdx, r9	# tmp902, index
GAS LISTING /tmp/ccIyIA9Z.s 			page 252


 9412              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9413              		.loc 1 246 56 view .LVU3199
 9414 32cb C442B1F7 		shlx	r11, r13, r9	# tmp905, tmp753, index
 9414      DD
 9415              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9416              		.loc 1 246 53 view .LVU3200
 9417 32d0 48C1EA06 		shr	rdx, 6	# tmp902,
 9418              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9419              		.loc 1 245 65 view .LVU3201
 9420 32d4 4901F1   		add	r9, rsi	# index, step
 9421              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9422              		.loc 1 246 53 view .LVU3202
 9423 32d7 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_429, tmp905
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9424              		.loc 1 245 53 is_stmt 1 view .LVU3203
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9425              		.loc 1 245 16 view .LVU3204
 9426              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9427              		.loc 1 245 9 is_stmt 0 view .LVU3205
 9428 32db 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9429 32de 7250     		jb	.L502	#,
 246:sieve_extend.c ****     }
 9430              		.loc 1 246 13 is_stmt 1 view .LVU3206
 9431              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9432              		.loc 1 246 53 is_stmt 0 view .LVU3207
 9433 32e0 4D89C8   		mov	r8, r9	# tmp906, index
 9434              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9435              		.loc 1 246 56 view .LVU3208
 9436 32e3 C4C2B1F7 		shlx	rcx, r13, r9	# tmp909, tmp753, index
 9436      CD
 9437              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9438              		.loc 1 246 53 view .LVU3209
 9439 32e8 49C1E806 		shr	r8, 6	# tmp906,
 9440              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9441              		.loc 1 245 65 view .LVU3210
 9442 32ec 4901F1   		add	r9, rsi	# index, step
 9443              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9444              		.loc 1 246 53 view .LVU3211
 9445 32ef 4B090CC6 		or	QWORD PTR [r14+r8*8], rcx	# *_429, tmp909
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9446              		.loc 1 245 53 is_stmt 1 view .LVU3212
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9447              		.loc 1 245 16 view .LVU3213
 9448              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9449              		.loc 1 245 9 is_stmt 0 view .LVU3214
 9450 32f3 4C39C8   		cmp	rax, r9	# range_start_atvector, index
GAS LISTING /tmp/ccIyIA9Z.s 			page 253


 9451 32f6 7238     		jb	.L502	#,
 246:sieve_extend.c ****     }
 9452              		.loc 1 246 13 is_stmt 1 view .LVU3215
 9453              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9454              		.loc 1 246 53 is_stmt 0 view .LVU3216
 9455 32f8 4D89CC   		mov	r12, r9	# tmp910, index
 9456              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9457              		.loc 1 246 56 view .LVU3217
 9458 32fb C442B1F7 		shlx	r10, r13, r9	# tmp913, tmp753, index
 9458      D5
 9459              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9460              		.loc 1 246 53 view .LVU3218
 9461 3300 49C1EC06 		shr	r12, 6	# tmp910,
 9462              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9463              		.loc 1 245 65 view .LVU3219
 9464 3304 4901F1   		add	r9, rsi	# index, step
 9465              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9466              		.loc 1 246 53 view .LVU3220
 9467 3307 4F0914E6 		or	QWORD PTR [r14+r12*8], r10	# *_429, tmp913
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9468              		.loc 1 245 53 is_stmt 1 view .LVU3221
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9469              		.loc 1 245 16 view .LVU3222
 9470              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9471              		.loc 1 245 9 is_stmt 0 view .LVU3223
 9472 330b 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9473 330e 7220     		jb	.L502	#,
 246:sieve_extend.c ****     }
 9474              		.loc 1 246 13 is_stmt 1 view .LVU3224
 9475              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9476              		.loc 1 246 53 is_stmt 0 view .LVU3225
 9477 3310 4C89CA   		mov	rdx, r9	# tmp914, index
 9478              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9479              		.loc 1 246 56 view .LVU3226
 9480 3313 C442B1F7 		shlx	r11, r13, r9	# tmp917, tmp753, index
 9480      DD
 9481              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9482              		.loc 1 246 53 view .LVU3227
 9483 3318 48C1EA06 		shr	rdx, 6	# tmp914,
 9484              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9485              		.loc 1 245 65 view .LVU3228
 9486 331c 4901F1   		add	r9, rsi	# index, step
 9487              	# sieve_extend.c:246:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 246:sieve_extend.c ****     }
 9488              		.loc 1 246 53 view .LVU3229
 9489 331f 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_429, tmp917
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
GAS LISTING /tmp/ccIyIA9Z.s 			page 254


 9490              		.loc 1 245 53 is_stmt 1 view .LVU3230
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9491              		.loc 1 245 16 view .LVU3231
 9492              	# sieve_extend.c:245:         for (; range_start <= range_start_atvector; range_start += step) 
 245:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 9493              		.loc 1 245 9 is_stmt 0 view .LVU3232
 9494 3323 4C39C8   		cmp	rax, r9	# range_start_atvector, index
 9495 3326 0F8330FF 		jnb	.L504	#,
 9495      FFFF
 9496 332c 0F1F4000 		.p2align 4,,10
 9497              		.p2align 3
 9498              	.L502:
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 9499              		.loc 1 249 5 is_stmt 1 view .LVU3233
 9500              	# sieve_extend.c:249:     const counter_t range_stop_unique =  range_start + VECTOR_SIZE_counter * 
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 9501              		.loc 1 249 76 is_stmt 0 view .LVU3234
 9502 3330 4889F0   		mov	rax, rsi	# tmp678, step
 9503              	.LVL588:
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 9504              		.loc 1 249 76 view .LVU3235
 9505 3333 48C1E008 		sal	rax, 8	# tmp678,
 9506              	# sieve_extend.c:249:     const counter_t range_stop_unique =  range_start + VECTOR_SIZE_counter * 
 249:sieve_extend.c ****     if (range_stop_unique >= range_stop) {
 9507              		.loc 1 249 21 view .LVU3236
 9508 3337 4C01C8   		add	rax, r9	# range_stop_unique, index
 9509 333a 4989C2   		mov	r10, rax	# range_stop_unique, range_stop_unique
 9510              	.LVL589:
 250:sieve_extend.c ****         setBitsTrue_largeRange(bitstorage_word, range_start, step, range_stop);
 9511              		.loc 1 250 5 is_stmt 1 view .LVU3237
 9512              	# sieve_extend.c:250:     if (range_stop_unique >= range_stop) {
 250:sieve_extend.c ****         setBitsTrue_largeRange(bitstorage_word, range_start, step, range_stop);
 9513              		.loc 1 250 8 is_stmt 0 view .LVU3238
 9514 333d 48394424 		cmp	QWORD PTR 112[rsp], rax	# %sfp, range_stop_unique
 9514      70
 9515 3342 0F862804 		jbe	.L509	#,
 9515      0000
 9516              	.LVL590:
 9517              	.LBB743:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 9518              		.loc 1 256 41 is_stmt 1 view .LVU3239
 9519              	# sieve_extend.c:256:     for (counter_t index = range_start; index < range_stop_unique;) {
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 9520              		.loc 1 256 5 is_stmt 0 view .LVU3240
 9521 3348 4939C1   		cmp	r9, rax	# index, range_stop_unique
 9522 334b 0F830A03 		jnb	.L508	#,
 9522      0000
 9523              	.LBB739:
 9524              	.LBB733:
 9525              	.LBB728:
 9526              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 9527              		.loc 1 175 142 view .LVU3241
 9528 3351 488B4C24 		mov	rcx, QWORD PTR 64[rsp]	# range_stop_vector, %sfp
 9528      40
 9529              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
GAS LISTING /tmp/ccIyIA9Z.s 			page 255


 9530              		.loc 1 175 117 view .LVU3242
 9531 3356 4C8D04B5 		lea	r8, 0[0+rsi*4]	# _526,
 9531      00000000 
 9532              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 9533              		.loc 1 175 142 view .LVU3243
 9534 335e 4989CB   		mov	r11, rcx	# tmp697, range_stop_vector
 9535 3361 4D29C3   		sub	r11, r8	# tmp697, _526
 9536              	# sieve_extend.c:175:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 175:sieve_extend.c ****     
 9537              		.loc 1 175 92 view .LVU3244
 9538 3364 49C1E305 		sal	r11, 5	# tmp698,
 9539              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9540              		.loc 1 179 38 view .LVU3245
 9541 3368 4889F2   		mov	rdx, rsi	# _535, step
 9542 336b 4C897C24 		mov	QWORD PTR 120[rsp], r15	# %sfp, _387
 9542      78
 9543 3370 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, _626
 9543      18
 9544 3375 4D01F3   		add	r11, r14	# tmp699, _101
 9545 3378 48C1E205 		sal	rdx, 5	# _535,
 9546 337c 4989F4   		mov	r12, rsi	# _1238, step
 9547 337f 4C39C1   		cmp	rcx, r8	# range_stop_vector, _526
 9548 3382 4889F1   		mov	rcx, rsi	# _1242, step
 9549 3385 4D0F46DE 		cmovbe	r11, r14	# _101,, fast_loop_ptr
 9550 3389 48C1E107 		sal	rcx, 7	# _1242,
 9551 338d 49C1E406 		sal	r12, 6	# _1238,
 9552              	.LVL591:
 9553              		.p2align 4,,10
 9554 3391 0F1F8000 		.p2align 3
 9554      000000
 9555              	.L521:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9556              		.loc 1 179 38 view .LVU3246
 9557              	.LBE728:
 9558              	.LBE733:
 257:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 9559              		.loc 1 257 9 is_stmt 1 view .LVU3247
 9560              	# sieve_extend.c:257:         const counter_t current_vector =  vectorindex(index);
 257:sieve_extend.c ****         const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD);
 9561              		.loc 1 257 25 is_stmt 0 view .LVU3248
 9562 3398 4C89C8   		mov	rax, r9	# current_vector, index
 9563 339b 48C1E808 		shr	rax, 8	# current_vector,
 9564              	.LVL592:
 258:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 9565              		.loc 1 258 9 is_stmt 1 view .LVU3249
 9566              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 9567              		.loc 1 259 35 is_stmt 0 view .LVU3250
 9568 339f 4D89C8   		mov	r8, r9	# tmp700, index
 9569              	# sieve_extend.c:258:         const counter_t current_vector_start_word =  current_vector << (SHIFT
 258:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 9570              		.loc 1 258 25 view .LVU3251
 9571 33a2 488D3C85 		lea	rdi, 0[0+rax*4]	# current_vector_start_word,
 9571      00000000 
 9572              	.LVL593:
GAS LISTING /tmp/ccIyIA9Z.s 			page 256


 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 9573              		.loc 1 259 9 is_stmt 1 view .LVU3252
 9574              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 9575              		.loc 1 259 35 is_stmt 0 view .LVU3253
 9576 33aa 49C1E806 		shr	r8, 6	# tmp700,
 9577              	# sieve_extend.c:259:         register counter_t word = wordindex(index) - current_vector_start_wor
 259:sieve_extend.c ****         register bitvector_t quadmask = { };
 9578              		.loc 1 259 28 view .LVU3254
 9579 33ae 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 9580              	.LVL594:
 260:sieve_extend.c **** 
 9581              		.loc 1 260 9 is_stmt 1 view .LVU3255
 9582              	# sieve_extend.c:260:         register bitvector_t quadmask = { };
 260:sieve_extend.c **** 
 9583              		.loc 1 260 30 is_stmt 0 view .LVU3256
 9584 33b1 C5FD7F94 		vmovdqa	YMMWORD PTR 128[rsp], ymm2	# quadmask, tmp756
 9584      24800000 
 9584      00
 9585              	.L517:
 265:sieve_extend.c ****             index += step;
 9586              		.loc 1 265 13 is_stmt 1 view .LVU3257
 9587              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9588              		.loc 1 265 31 is_stmt 0 view .LVU3258
 9589 33ba C442B1F7 		shlx	r15, r13, r9	# tmp703, tmp753, index
 9589      FD
 9590              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9591              		.loc 1 266 19 view .LVU3259
 9592 33bf 4901F1   		add	r9, rsi	# index, step
 9593              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9594              		.loc 1 265 28 view .LVU3260
 9595 33c2 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp703
 9595      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9596              		.loc 1 266 13 is_stmt 1 view .LVU3261
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9597              		.loc 1 267 13 view .LVU3262
 9598              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9599              		.loc 1 267 20 is_stmt 0 view .LVU3263
 9600 33ca 4D89C8   		mov	r8, r9	# tmp705, index
 9601              	.LVL595:
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9602              		.loc 1 267 20 view .LVU3264
 9603 33cd 49C1E806 		shr	r8, 6	# tmp705,
 9604              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9605              		.loc 1 267 18 view .LVU3265
 9606 33d1 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9607              		.loc 1 268 17 is_stmt 1 view .LVU3266
 9608              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9609              		.loc 1 268 9 is_stmt 0 view .LVU3267
GAS LISTING /tmp/ccIyIA9Z.s 			page 257


 9610 33d4 4983F803 		cmp	r8, 3	# word,
 9611 33d8 0F87F200 		ja	.L919	#,
 9611      0000
 265:sieve_extend.c ****             index += step;
 9612              		.loc 1 265 13 is_stmt 1 view .LVU3268
 9613              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9614              		.loc 1 265 31 is_stmt 0 view .LVU3269
 9615 33de C442B1F7 		shlx	r15, r13, r9	# tmp870, tmp753, index
 9615      FD
 9616              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9617              		.loc 1 266 19 view .LVU3270
 9618 33e3 4901F1   		add	r9, rsi	# index, step
 9619              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9620              		.loc 1 265 28 view .LVU3271
 9621 33e6 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp870
 9621      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9622              		.loc 1 266 13 is_stmt 1 view .LVU3272
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9623              		.loc 1 267 13 view .LVU3273
 9624              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9625              		.loc 1 267 20 is_stmt 0 view .LVU3274
 9626 33ee 4D89C8   		mov	r8, r9	# tmp871, index
 9627 33f1 49C1E806 		shr	r8, 6	# tmp871,
 9628              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9629              		.loc 1 267 18 view .LVU3275
 9630 33f5 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9631              		.loc 1 268 17 is_stmt 1 view .LVU3276
 9632              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9633              		.loc 1 268 9 is_stmt 0 view .LVU3277
 9634 33f8 4983F803 		cmp	r8, 3	# word,
 9635 33fc 0F87CE00 		ja	.L919	#,
 9635      0000
 265:sieve_extend.c ****             index += step;
 9636              		.loc 1 265 13 is_stmt 1 view .LVU3278
 9637              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9638              		.loc 1 265 31 is_stmt 0 view .LVU3279
 9639 3402 C442B1F7 		shlx	r15, r13, r9	# tmp873, tmp753, index
 9639      FD
 9640              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9641              		.loc 1 266 19 view .LVU3280
 9642 3407 4901F1   		add	r9, rsi	# index, step
 9643              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9644              		.loc 1 265 28 view .LVU3281
 9645 340a 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp873
 9645      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccIyIA9Z.s 			page 258


 9646              		.loc 1 266 13 is_stmt 1 view .LVU3282
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9647              		.loc 1 267 13 view .LVU3283
 9648              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9649              		.loc 1 267 20 is_stmt 0 view .LVU3284
 9650 3412 4D89C8   		mov	r8, r9	# tmp874, index
 9651 3415 49C1E806 		shr	r8, 6	# tmp874,
 9652              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9653              		.loc 1 267 18 view .LVU3285
 9654 3419 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9655              		.loc 1 268 17 is_stmt 1 view .LVU3286
 9656              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9657              		.loc 1 268 9 is_stmt 0 view .LVU3287
 9658 341c 4983F803 		cmp	r8, 3	# word,
 9659 3420 0F87AA00 		ja	.L919	#,
 9659      0000
 265:sieve_extend.c ****             index += step;
 9660              		.loc 1 265 13 is_stmt 1 view .LVU3288
 9661              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9662              		.loc 1 265 31 is_stmt 0 view .LVU3289
 9663 3426 C442B1F7 		shlx	r15, r13, r9	# tmp876, tmp753, index
 9663      FD
 9664              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9665              		.loc 1 266 19 view .LVU3290
 9666 342b 4901F1   		add	r9, rsi	# index, step
 9667              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9668              		.loc 1 265 28 view .LVU3291
 9669 342e 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp876
 9669      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9670              		.loc 1 266 13 is_stmt 1 view .LVU3292
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9671              		.loc 1 267 13 view .LVU3293
 9672              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9673              		.loc 1 267 20 is_stmt 0 view .LVU3294
 9674 3436 4D89C8   		mov	r8, r9	# tmp877, index
 9675 3439 49C1E806 		shr	r8, 6	# tmp877,
 9676              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9677              		.loc 1 267 18 view .LVU3295
 9678 343d 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9679              		.loc 1 268 17 is_stmt 1 view .LVU3296
 9680              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9681              		.loc 1 268 9 is_stmt 0 view .LVU3297
 9682 3440 4983F803 		cmp	r8, 3	# word,
 9683 3444 0F878600 		ja	.L919	#,
 9683      0000
GAS LISTING /tmp/ccIyIA9Z.s 			page 259


 265:sieve_extend.c ****             index += step;
 9684              		.loc 1 265 13 is_stmt 1 view .LVU3298
 9685              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9686              		.loc 1 265 31 is_stmt 0 view .LVU3299
 9687 344a C442B1F7 		shlx	r15, r13, r9	# tmp879, tmp753, index
 9687      FD
 9688              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9689              		.loc 1 266 19 view .LVU3300
 9690 344f 4901F1   		add	r9, rsi	# index, step
 9691              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9692              		.loc 1 265 28 view .LVU3301
 9693 3452 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp879
 9693      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9694              		.loc 1 266 13 is_stmt 1 view .LVU3302
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9695              		.loc 1 267 13 view .LVU3303
 9696              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9697              		.loc 1 267 20 is_stmt 0 view .LVU3304
 9698 345a 4D89C8   		mov	r8, r9	# tmp880, index
 9699 345d 49C1E806 		shr	r8, 6	# tmp880,
 9700              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9701              		.loc 1 267 18 view .LVU3305
 9702 3461 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9703              		.loc 1 268 17 is_stmt 1 view .LVU3306
 9704              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9705              		.loc 1 268 9 is_stmt 0 view .LVU3307
 9706 3464 4983F803 		cmp	r8, 3	# word,
 9707 3468 7766     		ja	.L919	#,
 265:sieve_extend.c ****             index += step;
 9708              		.loc 1 265 13 is_stmt 1 view .LVU3308
 9709              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9710              		.loc 1 265 31 is_stmt 0 view .LVU3309
 9711 346a C442B1F7 		shlx	r15, r13, r9	# tmp882, tmp753, index
 9711      FD
 9712              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9713              		.loc 1 266 19 view .LVU3310
 9714 346f 4901F1   		add	r9, rsi	# index, step
 9715              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9716              		.loc 1 265 28 view .LVU3311
 9717 3472 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp882
 9717      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9718              		.loc 1 266 13 is_stmt 1 view .LVU3312
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9719              		.loc 1 267 13 view .LVU3313
 9720              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccIyIA9Z.s 			page 260


 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9721              		.loc 1 267 20 is_stmt 0 view .LVU3314
 9722 347a 4D89C8   		mov	r8, r9	# tmp883, index
 9723 347d 49C1E806 		shr	r8, 6	# tmp883,
 9724              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9725              		.loc 1 267 18 view .LVU3315
 9726 3481 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9727              		.loc 1 268 17 is_stmt 1 view .LVU3316
 9728              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9729              		.loc 1 268 9 is_stmt 0 view .LVU3317
 9730 3484 4983F803 		cmp	r8, 3	# word,
 9731 3488 7746     		ja	.L919	#,
 265:sieve_extend.c ****             index += step;
 9732              		.loc 1 265 13 is_stmt 1 view .LVU3318
 9733              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9734              		.loc 1 265 31 is_stmt 0 view .LVU3319
 9735 348a C442B1F7 		shlx	r15, r13, r9	# tmp885, tmp753, index
 9735      FD
 9736              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9737              		.loc 1 266 19 view .LVU3320
 9738 348f 4901F1   		add	r9, rsi	# index, step
 9739              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9740              		.loc 1 265 28 view .LVU3321
 9741 3492 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp885
 9741      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9742              		.loc 1 266 13 is_stmt 1 view .LVU3322
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9743              		.loc 1 267 13 view .LVU3323
 9744              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9745              		.loc 1 267 20 is_stmt 0 view .LVU3324
 9746 349a 4D89C8   		mov	r8, r9	# tmp886, index
 9747 349d 49C1E806 		shr	r8, 6	# tmp886,
 9748              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9749              		.loc 1 267 18 view .LVU3325
 9750 34a1 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 268:sieve_extend.c **** 
 9751              		.loc 1 268 17 is_stmt 1 view .LVU3326
 9752              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9753              		.loc 1 268 9 is_stmt 0 view .LVU3327
 9754 34a4 4983F803 		cmp	r8, 3	# word,
 9755 34a8 7726     		ja	.L919	#,
 265:sieve_extend.c ****             index += step;
 9756              		.loc 1 265 13 is_stmt 1 view .LVU3328
 9757              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9758              		.loc 1 265 31 is_stmt 0 view .LVU3329
 9759 34aa C442B1F7 		shlx	r15, r13, r9	# tmp888, tmp753, index
GAS LISTING /tmp/ccIyIA9Z.s 			page 261


 9759      FD
 9760              	# sieve_extend.c:266:             index += step;
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9761              		.loc 1 266 19 view .LVU3330
 9762 34af 4901F1   		add	r9, rsi	# index, step
 9763              	# sieve_extend.c:265:             quadmask[word] |= markmask(index);
 265:sieve_extend.c ****             index += step;
 9764              		.loc 1 265 28 view .LVU3331
 9765 34b2 4E09BCC4 		or	QWORD PTR 128[rsp+r8*8], r15	# quadmask, tmp888
 9765      80000000 
 266:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 9766              		.loc 1 266 13 is_stmt 1 view .LVU3332
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9767              		.loc 1 267 13 view .LVU3333
 9768              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9769              		.loc 1 267 20 is_stmt 0 view .LVU3334
 9770 34ba 4D89C8   		mov	r8, r9	# tmp889, index
 9771 34bd 49C1E806 		shr	r8, 6	# tmp889,
 9772              	.LVL596:
 9773              	# sieve_extend.c:267:             word = wordindex(index) - current_vector_start_word;
 267:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 9774              		.loc 1 267 18 view .LVU3335
 9775 34c1 4929F8   		sub	r8, rdi	# word, current_vector_start_word
 9776              	.LVL597:
 268:sieve_extend.c **** 
 9777              		.loc 1 268 17 is_stmt 1 view .LVU3336
 9778              	# sieve_extend.c:268:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 268:sieve_extend.c **** 
 9779              		.loc 1 268 9 is_stmt 0 view .LVU3337
 9780 34c4 4983F803 		cmp	r8, 3	# word,
 9781 34c8 0F86ECFE 		jbe	.L517	#,
 9781      FFFF
 9782              	.LVL598:
 9783 34ce 6690     		.p2align 4,,10
 9784              		.p2align 3
 9785              	.L919:
 272:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 9786              		.loc 1 272 9 is_stmt 1 view .LVU3338
 273:sieve_extend.c ****     }
 9787              		.loc 1 273 9 view .LVU3339
 9788              	.LBB734:
 9789              	.LBB729:
 9790              	# sieve_extend.c:174:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 9791              		.loc 1 174 92 is_stmt 0 view .LVU3340
 9792 34d0 48C1E005 		sal	rax, 5	# tmp706,
 9793              	.LVL599:
 9794              	# sieve_extend.c:174:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 9795              		.loc 1 174 81 view .LVU3341
 9796 34d4 4C01F0   		add	rax, r14	# index_ptr, _101
 9797              	.LBE729:
 9798              	.LBE734:
 9799              	# sieve_extend.c:273:         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, curre
 273:sieve_extend.c ****     }
 9800              		.loc 1 273 9 view .LVU3342
GAS LISTING /tmp/ccIyIA9Z.s 			page 262


 9801 34d7 C5FD6F84 		vmovdqa	ymm0, YMMWORD PTR 128[rsp]	# quadmask.82_453, quadmask
 9801      24800000 
 9801      00
 9802              	.LVL600:
 9803              	.LBB735:
 9804              	.LBI724:
 172:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 9805              		.loc 1 172 20 is_stmt 1 view .LVU3343
 9806              	.LBB730:
 173:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 9807              		.loc 1 173 5 view .LVU3344
 174:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 9808              		.loc 1 174 5 view .LVU3345
 175:sieve_extend.c ****     
 9809              		.loc 1 175 5 view .LVU3346
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9810              		.loc 1 178 11 view .LVU3347
 9811 34e0 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 9812 34e3 0F83CF00 		jnb	.L1074	#,
 9812      0000
 9813 34e9 4A8D3C20 		lea	rdi, [rax+r12]	# ivtmp.464,
 9814              	.LVL601:
 9815              	.L519:
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9816              		.loc 1 179 9 view .LVU3348
 9817              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9818              		.loc 1 179 20 is_stmt 0 view .LVU3349
 9819 34ed C57DEB20 		vpor	ymm12, ymm0, YMMWORD PTR [rax]	# tmp707, quadmask.82_453, MEM[base: index_ptr_834, offset: 0B
 9820 34f1 C57D7F20 		vmovdqa	YMMWORD PTR [rax], ymm12	# MEM[base: index_ptr_834, offset: 0B], tmp707
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9821              		.loc 1 179 29 is_stmt 1 view .LVU3350
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9822              		.loc 1 180 9 view .LVU3351
 9823              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9824              		.loc 1 180 20 is_stmt 0 view .LVU3352
 9825 34f5 C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rax+rdx]	# tmp708, quadmask.82_453, MEM[base: index_ptr_834, index:
 9825      10
 9826 34fa C57D7F2C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm13	# MEM[base: index_ptr_834, index: _535, offset: 0B], tmp708
 9826      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9827              		.loc 1 180 29 is_stmt 1 view .LVU3353
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9828              		.loc 1 181 9 view .LVU3354
 9829              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9830              		.loc 1 181 20 is_stmt 0 view .LVU3355
 9831 34ff C57DEB37 		vpor	ymm14, ymm0, YMMWORD PTR [rdi]	# tmp709, quadmask.82_453, MEM[base: _1226, offset: 0B]
 9832 3503 4801C8   		add	rax, rcx	# index_ptr, _1242
 9833 3506 C57D7F37 		vmovdqa	YMMWORD PTR [rdi], ymm14	# MEM[base: _1226, offset: 0B], tmp709
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9834              		.loc 1 181 29 is_stmt 1 view .LVU3356
 182:sieve_extend.c ****     }
 9835              		.loc 1 182 9 view .LVU3357
 9836              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 263


 9837              		.loc 1 182 20 is_stmt 0 view .LVU3358
 9838 350a C57DEB3C 		vpor	ymm15, ymm0, YMMWORD PTR [rdi+rdx]	# tmp710, quadmask.82_453, MEM[base: _1226, index: _535, o
 9838      17
 9839 350f C57D7F3C 		vmovdqa	YMMWORD PTR [rdi+rdx], ymm15	# MEM[base: _1226, index: _535, offset: 0B], tmp710
 9839      17
 182:sieve_extend.c ****     }
 9840              		.loc 1 182 29 is_stmt 1 view .LVU3359
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9841              		.loc 1 178 11 view .LVU3360
 9842 3514 4801CF   		add	rdi, rcx	# ivtmp.464, _1242
 9843 3517 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9844 351a 0F869800 		jbe	.L1074	#,
 9844      0000
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9845              		.loc 1 179 9 view .LVU3361
 9846              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9847              		.loc 1 179 20 is_stmt 0 view .LVU3362
 9848 3520 C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp856, quadmask.82_453, MEM[base: index_ptr_834, offset: 0B]
 9849 3524 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_834, offset: 0B], tmp856
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9850              		.loc 1 179 29 is_stmt 1 view .LVU3363
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9851              		.loc 1 180 9 view .LVU3364
 9852              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9853              		.loc 1 180 20 is_stmt 0 view .LVU3365
 9854 3528 C5FDEB1C 		vpor	ymm3, ymm0, YMMWORD PTR [rax+rdx]	# tmp857, quadmask.82_453, MEM[base: index_ptr_834, index: 
 9854      10
 9855 352d C5FD7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm3	# MEM[base: index_ptr_834, index: _535, offset: 0B], tmp857
 9855      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9856              		.loc 1 180 29 is_stmt 1 view .LVU3366
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9857              		.loc 1 181 9 view .LVU3367
 9858              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9859              		.loc 1 181 20 is_stmt 0 view .LVU3368
 9860 3532 C5FDEB27 		vpor	ymm4, ymm0, YMMWORD PTR [rdi]	# tmp858, quadmask.82_453, MEM[base: _1226, offset: 0B]
 9861 3536 4801C8   		add	rax, rcx	# index_ptr, _1242
 9862 3539 C5FD7F27 		vmovdqa	YMMWORD PTR [rdi], ymm4	# MEM[base: _1226, offset: 0B], tmp858
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9863              		.loc 1 181 29 is_stmt 1 view .LVU3369
 182:sieve_extend.c ****     }
 9864              		.loc 1 182 9 view .LVU3370
 9865              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 9866              		.loc 1 182 20 is_stmt 0 view .LVU3371
 9867 353d C5FDEB2C 		vpor	ymm5, ymm0, YMMWORD PTR [rdi+rdx]	# tmp859, quadmask.82_453, MEM[base: _1226, index: _535, of
 9867      17
 9868 3542 C5FD7F2C 		vmovdqa	YMMWORD PTR [rdi+rdx], ymm5	# MEM[base: _1226, index: _535, offset: 0B], tmp859
 9868      17
 182:sieve_extend.c ****     }
 9869              		.loc 1 182 29 is_stmt 1 view .LVU3372
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9870              		.loc 1 178 11 view .LVU3373
 9871 3547 4801CF   		add	rdi, rcx	# ivtmp.464, _1242
GAS LISTING /tmp/ccIyIA9Z.s 			page 264


 9872 354a 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9873 354d 7669     		jbe	.L1074	#,
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9874              		.loc 1 179 9 view .LVU3374
 9875              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9876              		.loc 1 179 20 is_stmt 0 view .LVU3375
 9877 354f C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp861, quadmask.82_453, MEM[base: index_ptr_834, offset: 0B]
 9878 3553 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_834, offset: 0B], tmp861
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9879              		.loc 1 179 29 is_stmt 1 view .LVU3376
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9880              		.loc 1 180 9 view .LVU3377
 9881              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9882              		.loc 1 180 20 is_stmt 0 view .LVU3378
 9883 3557 C5FDEB3C 		vpor	ymm7, ymm0, YMMWORD PTR [rax+rdx]	# tmp862, quadmask.82_453, MEM[base: index_ptr_834, index: 
 9883      10
 9884 355c C5FD7F3C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm7	# MEM[base: index_ptr_834, index: _535, offset: 0B], tmp862
 9884      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9885              		.loc 1 180 29 is_stmt 1 view .LVU3379
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9886              		.loc 1 181 9 view .LVU3380
 9887              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9888              		.loc 1 181 20 is_stmt 0 view .LVU3381
 9889 3561 C57DEB07 		vpor	ymm8, ymm0, YMMWORD PTR [rdi]	# tmp863, quadmask.82_453, MEM[base: _1226, offset: 0B]
 9890 3565 4801C8   		add	rax, rcx	# index_ptr, _1242
 9891 3568 C57D7F07 		vmovdqa	YMMWORD PTR [rdi], ymm8	# MEM[base: _1226, offset: 0B], tmp863
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9892              		.loc 1 181 29 is_stmt 1 view .LVU3382
 182:sieve_extend.c ****     }
 9893              		.loc 1 182 9 view .LVU3383
 9894              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 9895              		.loc 1 182 20 is_stmt 0 view .LVU3384
 9896 356c C57DEB0C 		vpor	ymm9, ymm0, YMMWORD PTR [rdi+rdx]	# tmp864, quadmask.82_453, MEM[base: _1226, index: _535, of
 9896      17
 9897 3571 C57D7F0C 		vmovdqa	YMMWORD PTR [rdi+rdx], ymm9	# MEM[base: _1226, index: _535, offset: 0B], tmp864
 9897      17
 182:sieve_extend.c ****     }
 9898              		.loc 1 182 29 is_stmt 1 view .LVU3385
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9899              		.loc 1 178 11 view .LVU3386
 9900 3576 4801CF   		add	rdi, rcx	# ivtmp.464, _1242
 9901 3579 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9902 357c 763A     		jbe	.L1074	#,
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9903              		.loc 1 179 9 view .LVU3387
 9904              	# sieve_extend.c:179:         *index_ptr |= mask; index_ptr+=step;
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9905              		.loc 1 179 20 is_stmt 0 view .LVU3388
 9906 357e C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp866, quadmask.82_453, MEM[base: index_ptr_834, offset: 0B
 9907 3582 C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: index_ptr_834, offset: 0B], tmp866
 179:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9908              		.loc 1 179 29 is_stmt 1 view .LVU3389
GAS LISTING /tmp/ccIyIA9Z.s 			page 265


 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9909              		.loc 1 180 9 view .LVU3390
 9910              	# sieve_extend.c:180:         *index_ptr |= mask; index_ptr+=step;
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9911              		.loc 1 180 20 is_stmt 0 view .LVU3391
 9912 3586 C57DEB1C 		vpor	ymm11, ymm0, YMMWORD PTR [rax+rdx]	# tmp867, quadmask.82_453, MEM[base: index_ptr_834, index:
 9912      10
 9913 358b C57D7F1C 		vmovdqa	YMMWORD PTR [rax+rdx], ymm11	# MEM[base: index_ptr_834, index: _535, offset: 0B], tmp867
 9913      10
 180:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9914              		.loc 1 180 29 is_stmt 1 view .LVU3392
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9915              		.loc 1 181 9 view .LVU3393
 9916              	# sieve_extend.c:181:         *index_ptr |= mask; index_ptr+=step;
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9917              		.loc 1 181 20 is_stmt 0 view .LVU3394
 9918 3590 C57DEB27 		vpor	ymm12, ymm0, YMMWORD PTR [rdi]	# tmp868, quadmask.82_453, MEM[base: _1226, offset: 0B]
 9919 3594 4801C8   		add	rax, rcx	# index_ptr, _1242
 9920 3597 C57D7F27 		vmovdqa	YMMWORD PTR [rdi], ymm12	# MEM[base: _1226, offset: 0B], tmp868
 181:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9921              		.loc 1 181 29 is_stmt 1 view .LVU3395
 182:sieve_extend.c ****     }
 9922              		.loc 1 182 9 view .LVU3396
 9923              	# sieve_extend.c:182:         *index_ptr |= mask; index_ptr+=step;
 182:sieve_extend.c ****     }
 9924              		.loc 1 182 20 is_stmt 0 view .LVU3397
 9925 359b C57DEB2C 		vpor	ymm13, ymm0, YMMWORD PTR [rdi+rdx]	# tmp869, quadmask.82_453, MEM[base: _1226, index: _535, o
 9925      17
 9926 35a0 C57D7F2C 		vmovdqa	YMMWORD PTR [rdi+rdx], ymm13	# MEM[base: _1226, index: _535, offset: 0B], tmp869
 9926      17
 182:sieve_extend.c ****     }
 9927              		.loc 1 182 29 is_stmt 1 view .LVU3398
 178:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9928              		.loc 1 178 11 view .LVU3399
 9929 35a5 4801CF   		add	rdi, rcx	# ivtmp.464, _1242
 9930 35a8 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 9931 35ab 0F873CFF 		ja	.L519	#,
 9931      FFFF
 9932              		.p2align 4,,10
 9933 35b1 0F1F8000 		.p2align 3
 9933      000000
 9934              	.L1074:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9935              		.loc 1 186 11 view .LVU3400
 9936 35b8 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 9937 35bb 0F878700 		ja	.L522	#,
 9937      0000
 9938              	.L520:
 187:sieve_extend.c ****     }
 9939              		.loc 1 187 9 view .LVU3401
 9940              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 9941              		.loc 1 187 20 is_stmt 0 view .LVU3402
 9942 35c1 C57DEB30 		vpor	ymm14, ymm0, YMMWORD PTR [rax]	# tmp711, quadmask.82_453, MEM[base: index_ptr_832, offset: 0B
 9943 35c5 C57D7F30 		vmovdqa	YMMWORD PTR [rax], ymm14	# MEM[base: index_ptr_832, offset: 0B], tmp711
 187:sieve_extend.c ****     }
 9944              		.loc 1 187 29 is_stmt 1 view .LVU3403
GAS LISTING /tmp/ccIyIA9Z.s 			page 266


 9945              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 9946              		.loc 1 187 38 is_stmt 0 view .LVU3404
 9947 35c9 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9948              		.loc 1 186 11 is_stmt 1 view .LVU3405
 9949 35cc 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 9950 35cf 7777     		ja	.L522	#,
 187:sieve_extend.c ****     }
 9951              		.loc 1 187 9 view .LVU3406
 9952              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 9953              		.loc 1 187 20 is_stmt 0 view .LVU3407
 9954 35d1 C57DEB38 		vpor	ymm15, ymm0, YMMWORD PTR [rax]	# tmp843, quadmask.82_453, MEM[base: index_ptr_832, offset: 0B
 9955 35d5 C57D7F38 		vmovdqa	YMMWORD PTR [rax], ymm15	# MEM[base: index_ptr_832, offset: 0B], tmp843
 187:sieve_extend.c ****     }
 9956              		.loc 1 187 29 is_stmt 1 view .LVU3408
 9957              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 9958              		.loc 1 187 38 is_stmt 0 view .LVU3409
 9959 35d9 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9960              		.loc 1 186 11 is_stmt 1 view .LVU3410
 9961 35dc 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 9962 35df 7767     		ja	.L522	#,
 187:sieve_extend.c ****     }
 9963              		.loc 1 187 9 view .LVU3411
 9964              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 9965              		.loc 1 187 20 is_stmt 0 view .LVU3412
 9966 35e1 C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp845, quadmask.82_453, MEM[base: index_ptr_832, offset: 0B]
 9967 35e5 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_832, offset: 0B], tmp845
 187:sieve_extend.c ****     }
 9968              		.loc 1 187 29 is_stmt 1 view .LVU3413
 9969              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 9970              		.loc 1 187 38 is_stmt 0 view .LVU3414
 9971 35e9 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9972              		.loc 1 186 11 is_stmt 1 view .LVU3415
 9973 35ec 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 9974 35ef 7757     		ja	.L522	#,
 187:sieve_extend.c ****     }
 9975              		.loc 1 187 9 view .LVU3416
 9976              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 9977              		.loc 1 187 20 is_stmt 0 view .LVU3417
 9978 35f1 C5FDEB18 		vpor	ymm3, ymm0, YMMWORD PTR [rax]	# tmp847, quadmask.82_453, MEM[base: index_ptr_832, offset: 0B]
 9979 35f5 C5FD7F18 		vmovdqa	YMMWORD PTR [rax], ymm3	# MEM[base: index_ptr_832, offset: 0B], tmp847
 187:sieve_extend.c ****     }
 9980              		.loc 1 187 29 is_stmt 1 view .LVU3418
 9981              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 9982              		.loc 1 187 38 is_stmt 0 view .LVU3419
 9983 35f9 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9984              		.loc 1 186 11 is_stmt 1 view .LVU3420
GAS LISTING /tmp/ccIyIA9Z.s 			page 267


 9985 35fc 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 9986 35ff 7747     		ja	.L522	#,
 187:sieve_extend.c ****     }
 9987              		.loc 1 187 9 view .LVU3421
 9988              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 9989              		.loc 1 187 20 is_stmt 0 view .LVU3422
 9990 3601 C5FDEB20 		vpor	ymm4, ymm0, YMMWORD PTR [rax]	# tmp849, quadmask.82_453, MEM[base: index_ptr_832, offset: 0B]
 9991 3605 C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: index_ptr_832, offset: 0B], tmp849
 187:sieve_extend.c ****     }
 9992              		.loc 1 187 29 is_stmt 1 view .LVU3423
 9993              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 9994              		.loc 1 187 38 is_stmt 0 view .LVU3424
 9995 3609 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 9996              		.loc 1 186 11 is_stmt 1 view .LVU3425
 9997 360c 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 9998 360f 7737     		ja	.L522	#,
 187:sieve_extend.c ****     }
 9999              		.loc 1 187 9 view .LVU3426
 10000              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10001              		.loc 1 187 20 is_stmt 0 view .LVU3427
 10002 3611 C5FDEB28 		vpor	ymm5, ymm0, YMMWORD PTR [rax]	# tmp851, quadmask.82_453, MEM[base: index_ptr_832, offset: 0B]
 10003 3615 C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: index_ptr_832, offset: 0B], tmp851
 187:sieve_extend.c ****     }
 10004              		.loc 1 187 29 is_stmt 1 view .LVU3428
 10005              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10006              		.loc 1 187 38 is_stmt 0 view .LVU3429
 10007 3619 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10008              		.loc 1 186 11 is_stmt 1 view .LVU3430
 10009 361c 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10010 361f 7727     		ja	.L522	#,
 187:sieve_extend.c ****     }
 10011              		.loc 1 187 9 view .LVU3431
 10012              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10013              		.loc 1 187 20 is_stmt 0 view .LVU3432
 10014 3621 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp853, quadmask.82_453, MEM[base: index_ptr_832, offset: 0B]
 10015 3625 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_832, offset: 0B], tmp853
 187:sieve_extend.c ****     }
 10016              		.loc 1 187 29 is_stmt 1 view .LVU3433
 10017              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10018              		.loc 1 187 38 is_stmt 0 view .LVU3434
 10019 3629 4801D0   		add	rax, rdx	# index_ptr, _535
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10020              		.loc 1 186 11 is_stmt 1 view .LVU3435
 10021 362c 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10022 362f 7717     		ja	.L522	#,
 187:sieve_extend.c ****     }
 10023              		.loc 1 187 9 view .LVU3436
 10024              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 268


 10025              		.loc 1 187 20 is_stmt 0 view .LVU3437
 10026 3631 C5FDEB38 		vpor	ymm7, ymm0, YMMWORD PTR [rax]	# tmp855, quadmask.82_453, MEM[base: index_ptr_832, offset: 0B]
 10027 3635 C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: index_ptr_832, offset: 0B], tmp855
 187:sieve_extend.c ****     }
 10028              		.loc 1 187 29 is_stmt 1 view .LVU3438
 10029              	.LVL602:
 10030              	# sieve_extend.c:187:         *index_ptr |= mask; index_ptr+=step;
 187:sieve_extend.c ****     }
 10031              		.loc 1 187 38 is_stmt 0 view .LVU3439
 10032 3639 4801D0   		add	rax, rdx	# index_ptr, _535
 10033              	.LVL603:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10034              		.loc 1 186 11 is_stmt 1 view .LVU3440
 10035 363c 4839D8   		cmp	rax, rbx	# index_ptr, _1234
 10036 363f 7680     		jbe	.L520	#,
 10037              	.LVL604:
 10038              		.p2align 4,,10
 10039 3641 0F1F8000 		.p2align 3
 10039      000000
 10040              	.L522:
 186:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 10041              		.loc 1 186 11 is_stmt 0 view .LVU3441
 10042              	.LBE730:
 10043              	.LBE735:
 10044              	.LBE739:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10045              		.loc 1 256 41 is_stmt 1 view .LVU3442
 10046              	# sieve_extend.c:256:     for (counter_t index = range_start; index < range_stop_unique;) {
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10047              		.loc 1 256 5 is_stmt 0 view .LVU3443
 10048 3648 4D39CA   		cmp	r10, r9	# range_stop_unique, index
 10049 364b 0F8747FD 		ja	.L521	#,
 10049      FFFF
 10050 3651 4C8B7C24 		mov	r15, QWORD PTR 120[rsp]	# _387, %sfp
 10050      78
 10051 3656 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _626, %sfp
 10051      18
 10052              	.LVL605:
 10053              	.L508:
 256:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 10054              		.loc 1 256 5 view .LVU3444
 10055              	.LBE743:
 10056              	.LBE761:
 10057              	.LBE775:
 445:sieve_extend.c ****         }
 10058              		.loc 1 445 13 is_stmt 1 view .LVU3445
 10059              	.LBB776:
 10060              	.LBI776:
 121:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 10061              		.loc 1 121 25 view .LVU3446
 10062              	.LBB777:
 122:sieve_extend.c ****     return index;
 10063              		.loc 1 122 5 view .LVU3447
 122:sieve_extend.c ****     return index;
 10064              		.loc 1 122 11 view .LVU3448
 10065              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccIyIA9Z.s 			page 269


 10066              		.loc 1 122 23 is_stmt 0 view .LVU3449
 10067 365b 4C89FE   		mov	rsi, r15	# tmp663, _387
 10068              	.LVL606:
 122:sieve_extend.c ****     return index;
 10069              		.loc 1 122 23 view .LVU3450
 10070 365e 48C1EE06 		shr	rsi, 6	# tmp663,
 10071              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10072              		.loc 1 122 12 view .LVU3451
 10073 3662 4D8B14F6 		mov	r10, QWORD PTR [r14+rsi*8]	# *_647, *_647
 10074              	.LBE777:
 10075              	.LBE776:
 10076              	# sieve_extend.c:438:         if likely(block_start >= (prime + 1)) 
 438:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 10077              		.loc 1 438 12 view .LVU3452
 10078 3666 4C89FA   		mov	rdx, r15	# index, _387
 10079              	.LBB779:
 10080              	.LBB778:
 10081              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10082              		.loc 1 122 11 view .LVU3453
 10083 3669 4D0FA3FA 		bt	r10, r15	# *_647, _387
 10084 366d 0F833DFB 		jnc	.L507	#,
 10084      FFFF
 10085              	.LVL607:
 10086              	.L506:
 122:sieve_extend.c ****     return index;
 10087              		.loc 1 122 60 is_stmt 1 view .LVU3454
 10088              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10089              		.loc 1 122 65 is_stmt 0 view .LVU3455
 10090 3673 4C8D7A01 		lea	r15, 1[rdx]	# tmp758,
 10091              	.LVL608:
 10092              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10093              		.loc 1 122 23 view .LVU3456
 10094 3677 4C89F8   		mov	rax, r15	# tmp712, index
 10095 367a 48C1E806 		shr	rax, 6	# tmp712,
 10096              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10097              		.loc 1 122 12 view .LVU3457
 10098 367e 4D8B04C6 		mov	r8, QWORD PTR [r14+rax*8]	# *_407, *_407
 10099              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10100              		.loc 1 122 65 view .LVU3458
 10101 3682 4C89FA   		mov	rdx, r15	# index, tmp758
 122:sieve_extend.c ****     return index;
 10102              		.loc 1 122 11 is_stmt 1 view .LVU3459
 10103 3685 4D0FA3F8 		bt	r8, r15	# *_407, index
 10104 3689 0F8321FB 		jnc	.L507	#,
 10104      FFFF
 122:sieve_extend.c ****     return index;
 10105              		.loc 1 122 60 view .LVU3460
 10106              	.LVL609:
 10107              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10108              		.loc 1 122 65 is_stmt 0 view .LVU3461
GAS LISTING /tmp/ccIyIA9Z.s 			page 270


 10109 368f 48FFC2   		inc	rdx	# index
 10110              	.LVL610:
 122:sieve_extend.c ****     return index;
 10111              		.loc 1 122 11 is_stmt 1 view .LVU3462
 10112              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10113              		.loc 1 122 23 is_stmt 0 view .LVU3463
 10114 3692 4989D3   		mov	r11, rdx	# tmp775, index
 10115 3695 49C1EB06 		shr	r11, 6	# tmp775,
 10116              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10117              		.loc 1 122 12 view .LVU3464
 10118 3699 4F8B24DE 		mov	r12, QWORD PTR [r14+r11*8]	# *_407, *_407
 10119              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10120              		.loc 1 122 11 view .LVU3465
 10121 369d 490FA3D4 		bt	r12, rdx	# *_407, index
 10122 36a1 0F8309FB 		jnc	.L507	#,
 10122      FFFF
 122:sieve_extend.c ****     return index;
 10123              		.loc 1 122 60 is_stmt 1 view .LVU3466
 10124              	.LVL611:
 10125              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10126              		.loc 1 122 65 is_stmt 0 view .LVU3467
 10127 36a7 498D5702 		lea	rdx, 2[r15]	# index,
 10128              	.LVL612:
 122:sieve_extend.c ****     return index;
 10129              		.loc 1 122 11 is_stmt 1 view .LVU3468
 10130              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10131              		.loc 1 122 23 is_stmt 0 view .LVU3469
 10132 36ab 4889D1   		mov	rcx, rdx	# tmp779, index
 10133 36ae 48C1E906 		shr	rcx, 6	# tmp779,
 10134              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10135              		.loc 1 122 12 view .LVU3470
 10136 36b2 4D8B0CCE 		mov	r9, QWORD PTR [r14+rcx*8]	# *_407, *_407
 10137              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10138              		.loc 1 122 11 view .LVU3471
 10139 36b6 490FA3D1 		bt	r9, rdx	# *_407, index
 10140 36ba 0F83F0FA 		jnc	.L507	#,
 10140      FFFF
 122:sieve_extend.c ****     return index;
 10141              		.loc 1 122 60 is_stmt 1 view .LVU3472
 10142              	.LVL613:
 10143              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10144              		.loc 1 122 65 is_stmt 0 view .LVU3473
 10145 36c0 498D5703 		lea	rdx, 3[r15]	# index,
 10146              	.LVL614:
 122:sieve_extend.c ****     return index;
 10147              		.loc 1 122 11 is_stmt 1 view .LVU3474
 10148              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10149              		.loc 1 122 23 is_stmt 0 view .LVU3475
GAS LISTING /tmp/ccIyIA9Z.s 			page 271


 10150 36c4 4889D6   		mov	rsi, rdx	# tmp783, index
 10151 36c7 48C1EE06 		shr	rsi, 6	# tmp783,
 10152              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10153              		.loc 1 122 12 view .LVU3476
 10154 36cb 4D8B14F6 		mov	r10, QWORD PTR [r14+rsi*8]	# *_407, *_407
 10155              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10156              		.loc 1 122 11 view .LVU3477
 10157 36cf 490FA3D2 		bt	r10, rdx	# *_407, index
 10158 36d3 0F83D7FA 		jnc	.L507	#,
 10158      FFFF
 122:sieve_extend.c ****     return index;
 10159              		.loc 1 122 60 is_stmt 1 view .LVU3478
 10160              	.LVL615:
 10161              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10162              		.loc 1 122 65 is_stmt 0 view .LVU3479
 10163 36d9 498D5704 		lea	rdx, 4[r15]	# index,
 10164              	.LVL616:
 122:sieve_extend.c ****     return index;
 10165              		.loc 1 122 11 is_stmt 1 view .LVU3480
 10166              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10167              		.loc 1 122 23 is_stmt 0 view .LVU3481
 10168 36dd 4889D0   		mov	rax, rdx	# tmp787, index
 10169 36e0 48C1E806 		shr	rax, 6	# tmp787,
 10170              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10171              		.loc 1 122 12 view .LVU3482
 10172 36e4 4D8B04C6 		mov	r8, QWORD PTR [r14+rax*8]	# *_407, *_407
 10173              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10174              		.loc 1 122 11 view .LVU3483
 10175 36e8 490FA3D0 		bt	r8, rdx	# *_407, index
 10176 36ec 0F83BEFA 		jnc	.L507	#,
 10176      FFFF
 122:sieve_extend.c ****     return index;
 10177              		.loc 1 122 60 is_stmt 1 view .LVU3484
 10178              	.LVL617:
 10179              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10180              		.loc 1 122 65 is_stmt 0 view .LVU3485
 10181 36f2 498D5705 		lea	rdx, 5[r15]	# index,
 10182              	.LVL618:
 122:sieve_extend.c ****     return index;
 10183              		.loc 1 122 11 is_stmt 1 view .LVU3486
 10184              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10185              		.loc 1 122 23 is_stmt 0 view .LVU3487
 10186 36f6 4989D3   		mov	r11, rdx	# tmp791, index
 10187 36f9 49C1EB06 		shr	r11, 6	# tmp791,
 10188              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10189              		.loc 1 122 12 view .LVU3488
 10190 36fd 4F8B24DE 		mov	r12, QWORD PTR [r14+r11*8]	# *_407, *_407
 10191              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccIyIA9Z.s 			page 272


 122:sieve_extend.c ****     return index;
 10192              		.loc 1 122 11 view .LVU3489
 10193 3701 490FA3D4 		bt	r12, rdx	# *_407, index
 10194 3705 0F83A5FA 		jnc	.L507	#,
 10194      FFFF
 122:sieve_extend.c ****     return index;
 10195              		.loc 1 122 60 is_stmt 1 view .LVU3490
 10196              	.LVL619:
 10197              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10198              		.loc 1 122 65 is_stmt 0 view .LVU3491
 10199 370b 498D5706 		lea	rdx, 6[r15]	# index,
 10200              	.LVL620:
 122:sieve_extend.c ****     return index;
 10201              		.loc 1 122 11 is_stmt 1 view .LVU3492
 10202              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10203              		.loc 1 122 23 is_stmt 0 view .LVU3493
 10204 370f 4889D1   		mov	rcx, rdx	# tmp795, index
 10205 3712 48C1E906 		shr	rcx, 6	# tmp795,
 10206              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10207              		.loc 1 122 12 view .LVU3494
 10208 3716 4D8B0CCE 		mov	r9, QWORD PTR [r14+rcx*8]	# *_407, *_407
 10209              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10210              		.loc 1 122 11 view .LVU3495
 10211 371a 490FA3D1 		bt	r9, rdx	# *_407, index
 10212 371e 0F838CFA 		jnc	.L507	#,
 10212      FFFF
 122:sieve_extend.c ****     return index;
 10213              		.loc 1 122 60 is_stmt 1 view .LVU3496
 10214              	.LVL621:
 10215              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10216              		.loc 1 122 65 is_stmt 0 view .LVU3497
 10217 3724 498D5707 		lea	rdx, 7[r15]	# index,
 10218              	.LVL622:
 122:sieve_extend.c ****     return index;
 10219              		.loc 1 122 11 is_stmt 1 view .LVU3498
 10220              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10221              		.loc 1 122 23 is_stmt 0 view .LVU3499
 10222 3728 4989D7   		mov	r15, rdx	# tmp799, index
 10223 372b 49C1EF06 		shr	r15, 6	# tmp799,
 10224              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10225              		.loc 1 122 12 view .LVU3500
 10226 372f 4B8B34FE 		mov	rsi, QWORD PTR [r14+r15*8]	# *_407, *_407
 10227              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 10228              		.loc 1 122 11 view .LVU3501
 10229 3733 480FA3D6 		bt	rsi, rdx	# *_407, index
 10230 3737 0F8236FF 		jc	.L506	#,
 10230      FFFF
 10231 373d E96EFAFF 		jmp	.L507	#
 10231      FF
GAS LISTING /tmp/ccIyIA9Z.s 			page 273


 10232              	.LVL623:
 10233              		.p2align 4,,10
 10234 3742 660F1F44 		.p2align 3
 10234      0000
 10235              	.L1086:
 122:sieve_extend.c ****     return index;
 10236              		.loc 1 122 11 view .LVU3502
 10237              	.LBE778:
 10238              	.LBE779:
 10239              	.LBB780:
 10240              	.LBB773:
 135:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 10241              		.loc 1 135 8 is_stmt 1 view .LVU3503
 136:sieve_extend.c ****        index += distance;
 10242              		.loc 1 136 8 view .LVU3504
 10243              	# sieve_extend.c:136:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 136:sieve_extend.c ****        index += distance;
 10244              		.loc 1 136 48 is_stmt 0 view .LVU3505
 10245 3748 4D8B7C36 		mov	r15, QWORD PTR 8[r14+rsi]	# *_576, *_576
 10245      08
 10246              	# sieve_extend.c:136:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 136:sieve_extend.c ****        index += distance;
 10247              		.loc 1 136 17 view .LVU3506
 10248 374d 31C9     		xor	ecx, ecx	# distance
 10249              	# sieve_extend.c:136:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 136:sieve_extend.c ****        index += distance;
 10250              		.loc 1 136 48 view .LVU3507
 10251 374f 49F7D7   		not	r15	# tmp741
 10252              	.LVL624:
 137:sieve_extend.c ****    }
 10253              		.loc 1 137 8 is_stmt 1 view .LVU3508
 10254              	# sieve_extend.c:136:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 136:sieve_extend.c ****        index += distance;
 10255              		.loc 1 136 17 is_stmt 0 view .LVU3509
 10256 3752 F3490FBC 		tzcnt	rcx, r15	# distance, tmp741
 10256      CF
 10257              	.LVL625:
 10258              	# sieve_extend.c:137:        index += distance;
 137:sieve_extend.c ****    }
 10259              		.loc 1 137 14 view .LVU3510
 10260 3757 4801CA   		add	rdx, rcx	# index, distance
 10261              	.LVL626:
 134:sieve_extend.c ****        index_word++;
 10262              		.loc 1 134 10 is_stmt 1 view .LVU3511
 10263 375a E951FAFF 		jmp	.L507	#
 10263      FF
 10264              	.LVL627:
 10265 375f 90       		.p2align 4,,10
 10266              		.p2align 3
 10267              	.L499:
 134:sieve_extend.c ****        index_word++;
 10268              		.loc 1 134 10 is_stmt 0 view .LVU3512
 10269              	.LBE773:
 10270              	.LBE780:
 441:sieve_extend.c **** 
 10271              		.loc 1 441 13 is_stmt 1 view .LVU3513
 10272              	# sieve_extend.c:441:             start = prime * prime * 2 + prime * 2;
GAS LISTING /tmp/ccIyIA9Z.s 			page 274


 441:sieve_extend.c **** 
 10273              		.loc 1 441 19 is_stmt 0 view .LVU3514
 10274 3760 490FAFD7 		imul	rdx, r15	# tmp661, _387
 10275 3764 4C8D0C12 		lea	r9, [rdx+rdx]	# index,
 10276              	.LVL628:
 441:sieve_extend.c **** 
 10277              		.loc 1 441 19 view .LVU3515
 10278 3768 E91CF8FF 		jmp	.L500	#
 10278      FF
 10279              	.LVL629:
 10280 376d 0F1F00   		.p2align 4,,10
 10281              		.p2align 3
 10282              	.L509:
 10283              	.LBB781:
 10284              	.LBB762:
 251:sieve_extend.c ****         return;
 10285              		.loc 1 251 9 is_stmt 1 view .LVU3516
 10286              	.LBB744:
 10287              	.LBI744:
 221:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 10288              		.loc 1 221 20 view .LVU3517
 10289              	.LBB745:
 222:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10290              		.loc 1 222 5 view .LVU3518
 223:sieve_extend.c **** 
 10291              		.loc 1 223 5 view .LVU3519
 10292              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 10293              		.loc 1 223 74 is_stmt 0 view .LVU3520
 10294 3770 4989F0   		mov	r8, rsi	# tmp679, step
 10295 3773 49C1E006 		sal	r8, 6	# tmp679,
 10296              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 10297              		.loc 1 223 21 view .LVU3521
 10298 3777 4F8D0408 		lea	r8, [r8+r9]	# range_stop_unique,
 10299              	.LVL630:
 10300              	.LBB746:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10301              		.loc 1 226 10 is_stmt 1 view .LVU3522
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10302              		.loc 1 226 50 view .LVU3523
 10303              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10304              		.loc 1 226 5 is_stmt 0 view .LVU3524
 10305 377b 4D39C1   		cmp	r9, r8	# index, range_stop_unique
 10306 377e 0F83D7FE 		jnb	.L508	#,
 10306      FFFF
 10307              	.LBB747:
 10308              	.LBB748:
 10309              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 10310              		.loc 1 149 135 view .LVU3525
 10311 3784 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# range_stop_word, %sfp
 10311      50
 10312              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 10313              		.loc 1 149 112 view .LVU3526
GAS LISTING /tmp/ccIyIA9Z.s 			page 275


 10314 3789 4C8D14B6 		lea	r10, [rsi+rsi*4]	# tmp682,
 10315              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 10316              		.loc 1 149 135 view .LVU3527
 10317 378d 4889C8   		mov	rax, rcx	# tmp684, range_stop_word
 10318              	.LVL631:
 149:sieve_extend.c **** 
 10319              		.loc 1 149 135 view .LVU3528
 10320 3790 4C29D0   		sub	rax, r10	# tmp684, tmp682
 10321              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 10322              		.loc 1 149 53 view .LVU3529
 10323 3793 4D8D1CC6 		lea	r11, [r14+rax*8]	# tmp686,
 10324 3797 4939CA   		cmp	r10, rcx	# tmp682, range_stop_word
 10325 379a 4989F4   		mov	r12, rsi	# _782, step
 10326 379d 4D0F43DE 		cmovnb	r11, r14	# _101,, fast_loop_ptr
 10327 37a1 4C897C24 		mov	QWORD PTR 120[rsp], r15	# %sfp, _387
 10327      78
 10328              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10329              		.loc 1 154 38 view .LVU3530
 10330 37a6 488D14F5 		lea	rdx, 0[0+rsi*8]	# _485,
 10330      00000000 
 10331 37ae 49C1E203 		sal	r10, 3	# tmp690,
 10332 37b2 49C1E404 		sal	r12, 4	# _782,
 10333 37b6 4D89C7   		mov	r15, r8	# range_stop_unique, range_stop_unique
 10334              	.LVL632:
 10335 37b9 0F1F8000 		.p2align 4,,10
 10335      000000
 10336              		.p2align 3
 10337              	.L516:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10338              		.loc 1 154 38 view .LVU3531
 10339              	.LBE748:
 10340              	.LBE747:
 227:sieve_extend.c ****     }
 10341              		.loc 1 227 9 is_stmt 1 view .LVU3532
 10342 37c0 4D89C8   		mov	r8, r9	# tmp693, index
 10343 37c3 49C1E806 		shr	r8, 6	# tmp693,
 10344              	.LBB752:
 10345              	.LBB749:
 10346              	# sieve_extend.c:148:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 10347              		.loc 1 148 78 is_stmt 0 view .LVU3533
 10348 37c7 4B8D04C6 		lea	rax, [r14+r8*8]	# index_ptr,
 10349              	.LBE749:
 10350              	.LBE752:
 10351              	# sieve_extend.c:227:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 227:sieve_extend.c ****     }
 10352              		.loc 1 227 9 view .LVU3534
 10353 37cb C4C2B1F7 		shlx	rcx, r13, r9	# _470, tmp753, index
 10353      CD
 10354              	.LVL633:
 10355              	.LBB753:
 10356              	.LBI747:
 146:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 10357              		.loc 1 146 20 is_stmt 1 view .LVU3535
GAS LISTING /tmp/ccIyIA9Z.s 			page 276


 10358              	.LBB750:
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 10359              		.loc 1 147 4 view .LVU3536
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 10360              		.loc 1 148 4 view .LVU3537
 149:sieve_extend.c **** 
 10361              		.loc 1 149 4 view .LVU3538
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10362              		.loc 1 153 10 view .LVU3539
 10363 37d0 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 10364 37d3 0F83FF00 		jnb	.L511	#,
 10364      0000
 10365 37d9 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.443,
 10366              	.L512:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10367              		.loc 1 154 8 view .LVU3540
 10368              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10369              		.loc 1 154 19 is_stmt 0 view .LVU3541
 10370 37dd 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10371              		.loc 1 154 29 is_stmt 1 view .LVU3542
 10372              	.LVL634:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10373              		.loc 1 155 8 view .LVU3543
 10374              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10375              		.loc 1 155 19 is_stmt 0 view .LVU3544
 10376 37e0 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10377              		.loc 1 155 29 is_stmt 1 view .LVU3545
 10378              	.LVL635:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10379              		.loc 1 156 8 view .LVU3546
 10380              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10381              		.loc 1 156 19 is_stmt 0 view .LVU3547
 10382 37e4 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10383              		.loc 1 156 29 is_stmt 1 view .LVU3548
 10384              	.LVL636:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10385              		.loc 1 157 8 view .LVU3549
 10386              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10387              		.loc 1 157 19 is_stmt 0 view .LVU3550
 10388 37e7 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10389              		.loc 1 157 29 is_stmt 1 view .LVU3551
 10390              	.LVL637:
 158:sieve_extend.c ****    }
 10391              		.loc 1 158 8 view .LVU3552
 10392 37eb 4D01D0   		add	r8, r10	# ivtmp.443, tmp690
 10393              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10394              		.loc 1 158 19 is_stmt 0 view .LVU3553
 10395 37ee 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
GAS LISTING /tmp/ccIyIA9Z.s 			page 277


 158:sieve_extend.c ****    }
 10396              		.loc 1 158 29 is_stmt 1 view .LVU3554
 10397 37f2 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10398              	.LVL638:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10399              		.loc 1 153 10 view .LVU3555
 10400 37f5 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10401 37f8 0F86DA00 		jbe	.L511	#,
 10401      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10402              		.loc 1 154 8 view .LVU3556
 10403              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10404              		.loc 1 154 19 is_stmt 0 view .LVU3557
 10405 37fe 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10406              		.loc 1 154 29 is_stmt 1 view .LVU3558
 10407              	.LVL639:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10408              		.loc 1 155 8 view .LVU3559
 10409              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10410              		.loc 1 155 19 is_stmt 0 view .LVU3560
 10411 3801 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10412              		.loc 1 155 29 is_stmt 1 view .LVU3561
 10413              	.LVL640:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10414              		.loc 1 156 8 view .LVU3562
 10415              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10416              		.loc 1 156 19 is_stmt 0 view .LVU3563
 10417 3805 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10418              		.loc 1 156 29 is_stmt 1 view .LVU3564
 10419              	.LVL641:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10420              		.loc 1 157 8 view .LVU3565
 10421              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10422              		.loc 1 157 19 is_stmt 0 view .LVU3566
 10423 3808 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10424              		.loc 1 157 29 is_stmt 1 view .LVU3567
 10425              	.LVL642:
 158:sieve_extend.c ****    }
 10426              		.loc 1 158 8 view .LVU3568
 10427 380c 4D01D0   		add	r8, r10	# ivtmp.443, tmp690
 10428              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10429              		.loc 1 158 19 is_stmt 0 view .LVU3569
 10430 380f 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10431              		.loc 1 158 29 is_stmt 1 view .LVU3570
 10432 3813 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10433              	.LVL643:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 278


 10434              		.loc 1 153 10 view .LVU3571
 10435 3816 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10436 3819 0F86B900 		jbe	.L511	#,
 10436      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10437              		.loc 1 154 8 view .LVU3572
 10438              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10439              		.loc 1 154 19 is_stmt 0 view .LVU3573
 10440 381f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10441              		.loc 1 154 29 is_stmt 1 view .LVU3574
 10442              	.LVL644:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10443              		.loc 1 155 8 view .LVU3575
 10444              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10445              		.loc 1 155 19 is_stmt 0 view .LVU3576
 10446 3822 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10447              		.loc 1 155 29 is_stmt 1 view .LVU3577
 10448              	.LVL645:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10449              		.loc 1 156 8 view .LVU3578
 10450              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10451              		.loc 1 156 19 is_stmt 0 view .LVU3579
 10452 3826 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10453              		.loc 1 156 29 is_stmt 1 view .LVU3580
 10454              	.LVL646:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10455              		.loc 1 157 8 view .LVU3581
 10456              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10457              		.loc 1 157 19 is_stmt 0 view .LVU3582
 10458 3829 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10459              		.loc 1 157 29 is_stmt 1 view .LVU3583
 10460              	.LVL647:
 158:sieve_extend.c ****    }
 10461              		.loc 1 158 8 view .LVU3584
 10462 382d 4D01D0   		add	r8, r10	# ivtmp.443, tmp690
 10463              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10464              		.loc 1 158 19 is_stmt 0 view .LVU3585
 10465 3830 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10466              		.loc 1 158 29 is_stmt 1 view .LVU3586
 10467 3834 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10468              	.LVL648:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10469              		.loc 1 153 10 view .LVU3587
 10470 3837 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10471 383a 0F869800 		jbe	.L511	#,
 10471      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 279


 10472              		.loc 1 154 8 view .LVU3588
 10473              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10474              		.loc 1 154 19 is_stmt 0 view .LVU3589
 10475 3840 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10476              		.loc 1 154 29 is_stmt 1 view .LVU3590
 10477              	.LVL649:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10478              		.loc 1 155 8 view .LVU3591
 10479              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10480              		.loc 1 155 19 is_stmt 0 view .LVU3592
 10481 3843 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10482              		.loc 1 155 29 is_stmt 1 view .LVU3593
 10483              	.LVL650:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10484              		.loc 1 156 8 view .LVU3594
 10485              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10486              		.loc 1 156 19 is_stmt 0 view .LVU3595
 10487 3847 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10488              		.loc 1 156 29 is_stmt 1 view .LVU3596
 10489              	.LVL651:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10490              		.loc 1 157 8 view .LVU3597
 10491              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10492              		.loc 1 157 19 is_stmt 0 view .LVU3598
 10493 384a 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10494              		.loc 1 157 29 is_stmt 1 view .LVU3599
 10495              	.LVL652:
 158:sieve_extend.c ****    }
 10496              		.loc 1 158 8 view .LVU3600
 10497 384e 4D01D0   		add	r8, r10	# ivtmp.443, tmp690
 10498              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10499              		.loc 1 158 19 is_stmt 0 view .LVU3601
 10500 3851 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10501              		.loc 1 158 29 is_stmt 1 view .LVU3602
 10502 3855 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10503              	.LVL653:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10504              		.loc 1 153 10 view .LVU3603
 10505 3858 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10506 385b 767B     		jbe	.L511	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10507              		.loc 1 154 8 view .LVU3604
 10508              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10509              		.loc 1 154 19 is_stmt 0 view .LVU3605
 10510 385d 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 280


 10511              		.loc 1 154 29 is_stmt 1 view .LVU3606
 10512              	.LVL654:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10513              		.loc 1 155 8 view .LVU3607
 10514              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10515              		.loc 1 155 19 is_stmt 0 view .LVU3608
 10516 3860 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10517              		.loc 1 155 29 is_stmt 1 view .LVU3609
 10518              	.LVL655:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10519              		.loc 1 156 8 view .LVU3610
 10520              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10521              		.loc 1 156 19 is_stmt 0 view .LVU3611
 10522 3864 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10523              		.loc 1 156 29 is_stmt 1 view .LVU3612
 10524              	.LVL656:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10525              		.loc 1 157 8 view .LVU3613
 10526              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10527              		.loc 1 157 19 is_stmt 0 view .LVU3614
 10528 3867 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10529              		.loc 1 157 29 is_stmt 1 view .LVU3615
 10530              	.LVL657:
 158:sieve_extend.c ****    }
 10531              		.loc 1 158 8 view .LVU3616
 10532 386b 4D01D0   		add	r8, r10	# ivtmp.443, tmp690
 10533              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10534              		.loc 1 158 19 is_stmt 0 view .LVU3617
 10535 386e 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10536              		.loc 1 158 29 is_stmt 1 view .LVU3618
 10537 3872 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10538              	.LVL658:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10539              		.loc 1 153 10 view .LVU3619
 10540 3875 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10541 3878 765E     		jbe	.L511	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10542              		.loc 1 154 8 view .LVU3620
 10543              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10544              		.loc 1 154 19 is_stmt 0 view .LVU3621
 10545 387a 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10546              		.loc 1 154 29 is_stmt 1 view .LVU3622
 10547              	.LVL659:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10548              		.loc 1 155 8 view .LVU3623
 10549              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 281


 10550              		.loc 1 155 19 is_stmt 0 view .LVU3624
 10551 387d 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10552              		.loc 1 155 29 is_stmt 1 view .LVU3625
 10553              	.LVL660:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10554              		.loc 1 156 8 view .LVU3626
 10555              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10556              		.loc 1 156 19 is_stmt 0 view .LVU3627
 10557 3881 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10558              		.loc 1 156 29 is_stmt 1 view .LVU3628
 10559              	.LVL661:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10560              		.loc 1 157 8 view .LVU3629
 10561              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10562              		.loc 1 157 19 is_stmt 0 view .LVU3630
 10563 3884 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10564              		.loc 1 157 29 is_stmt 1 view .LVU3631
 10565              	.LVL662:
 158:sieve_extend.c ****    }
 10566              		.loc 1 158 8 view .LVU3632
 10567 3888 4D01D0   		add	r8, r10	# ivtmp.443, tmp690
 10568              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10569              		.loc 1 158 19 is_stmt 0 view .LVU3633
 10570 388b 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10571              		.loc 1 158 29 is_stmt 1 view .LVU3634
 10572 388f 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10573              	.LVL663:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10574              		.loc 1 153 10 view .LVU3635
 10575 3892 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10576 3895 7641     		jbe	.L511	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10577              		.loc 1 154 8 view .LVU3636
 10578              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10579              		.loc 1 154 19 is_stmt 0 view .LVU3637
 10580 3897 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10581              		.loc 1 154 29 is_stmt 1 view .LVU3638
 10582              	.LVL664:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10583              		.loc 1 155 8 view .LVU3639
 10584              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10585              		.loc 1 155 19 is_stmt 0 view .LVU3640
 10586 389a 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10587              		.loc 1 155 29 is_stmt 1 view .LVU3641
 10588              	.LVL665:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 282


 10589              		.loc 1 156 8 view .LVU3642
 10590              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10591              		.loc 1 156 19 is_stmt 0 view .LVU3643
 10592 389e 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10593              		.loc 1 156 29 is_stmt 1 view .LVU3644
 10594              	.LVL666:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10595              		.loc 1 157 8 view .LVU3645
 10596              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10597              		.loc 1 157 19 is_stmt 0 view .LVU3646
 10598 38a1 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10599              		.loc 1 157 29 is_stmt 1 view .LVU3647
 10600              	.LVL667:
 158:sieve_extend.c ****    }
 10601              		.loc 1 158 8 view .LVU3648
 10602 38a5 4D01D0   		add	r8, r10	# ivtmp.443, tmp690
 10603              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10604              		.loc 1 158 19 is_stmt 0 view .LVU3649
 10605 38a8 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10606              		.loc 1 158 29 is_stmt 1 view .LVU3650
 10607 38ac 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10608              	.LVL668:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10609              		.loc 1 153 10 view .LVU3651
 10610 38af 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10611 38b2 7624     		jbe	.L511	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10612              		.loc 1 154 8 view .LVU3652
 10613              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10614              		.loc 1 154 19 is_stmt 0 view .LVU3653
 10615 38b4 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_818, offset: 0B], _470
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10616              		.loc 1 154 29 is_stmt 1 view .LVU3654
 10617              	.LVL669:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10618              		.loc 1 155 8 view .LVU3655
 10619              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10620              		.loc 1 155 19 is_stmt 0 view .LVU3656
 10621 38b7 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_818, index: _485, offset: 0B], _470
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10622              		.loc 1 155 29 is_stmt 1 view .LVU3657
 10623              	.LVL670:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10624              		.loc 1 156 8 view .LVU3658
 10625              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10626              		.loc 1 156 19 is_stmt 0 view .LVU3659
 10627 38bb 490908   		or	QWORD PTR [r8], rcx	# MEM[base: _1249, offset: 0B], _470
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 283


 10628              		.loc 1 156 29 is_stmt 1 view .LVU3660
 10629              	.LVL671:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10630              		.loc 1 157 8 view .LVU3661
 10631              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10632              		.loc 1 157 19 is_stmt 0 view .LVU3662
 10633 38be 49090C10 		or	QWORD PTR [r8+rdx], rcx	# MEM[base: _1249, index: _485, offset: 0B], _470
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10634              		.loc 1 157 29 is_stmt 1 view .LVU3663
 10635              	.LVL672:
 158:sieve_extend.c ****    }
 10636              		.loc 1 158 8 view .LVU3664
 10637 38c2 4D01D0   		add	r8, r10	# ivtmp.443, tmp690
 10638              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 10639              		.loc 1 158 19 is_stmt 0 view .LVU3665
 10640 38c5 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_818, index: _485, step: 4, offset: 0B], _470
 158:sieve_extend.c ****    }
 10641              		.loc 1 158 29 is_stmt 1 view .LVU3666
 10642 38c9 4C01D0   		add	rax, r10	# index_ptr, tmp690
 10643              	.LVL673:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10644              		.loc 1 153 10 view .LVU3667
 10645 38cc 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 10646 38cf 0F8708FF 		ja	.L512	#,
 10646      FFFF
 10647              		.p2align 4,,10
 10648 38d5 0F1F00   		.p2align 3
 10649              	.L511:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10650              		.loc 1 161 4 view .LVU3668
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10651              		.loc 1 162 4 view .LVU3669
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10652              		.loc 1 162 10 view .LVU3670
 10653 38d8 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10654 38db 735B     		jnb	.L513	#,
 10655              	.L514:
 163:sieve_extend.c ****    }
 10656              		.loc 1 163 8 view .LVU3671
 10657              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10658              		.loc 1 163 19 is_stmt 0 view .LVU3672
 10659 38dd 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10660              		.loc 1 163 29 is_stmt 1 view .LVU3673
 10661              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10662              		.loc 1 163 38 is_stmt 0 view .LVU3674
 10663 38e0 4801D0   		add	rax, rdx	# index_ptr, _485
 10664              	.LVL674:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10665              		.loc 1 162 10 is_stmt 1 view .LVU3675
 10666 38e3 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10667 38e6 7350     		jnb	.L513	#,
 163:sieve_extend.c ****    }
GAS LISTING /tmp/ccIyIA9Z.s 			page 284


 10668              		.loc 1 163 8 view .LVU3676
 10669              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10670              		.loc 1 163 19 is_stmt 0 view .LVU3677
 10671 38e8 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10672              		.loc 1 163 29 is_stmt 1 view .LVU3678
 10673              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10674              		.loc 1 163 38 is_stmt 0 view .LVU3679
 10675 38eb 4801D0   		add	rax, rdx	# index_ptr, _485
 10676              	.LVL675:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10677              		.loc 1 162 10 is_stmt 1 view .LVU3680
 10678 38ee 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10679 38f1 7345     		jnb	.L513	#,
 163:sieve_extend.c ****    }
 10680              		.loc 1 163 8 view .LVU3681
 10681              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10682              		.loc 1 163 19 is_stmt 0 view .LVU3682
 10683 38f3 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10684              		.loc 1 163 29 is_stmt 1 view .LVU3683
 10685              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10686              		.loc 1 163 38 is_stmt 0 view .LVU3684
 10687 38f6 4801D0   		add	rax, rdx	# index_ptr, _485
 10688              	.LVL676:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10689              		.loc 1 162 10 is_stmt 1 view .LVU3685
 10690 38f9 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10691 38fc 733A     		jnb	.L513	#,
 163:sieve_extend.c ****    }
 10692              		.loc 1 163 8 view .LVU3686
 10693              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10694              		.loc 1 163 19 is_stmt 0 view .LVU3687
 10695 38fe 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10696              		.loc 1 163 29 is_stmt 1 view .LVU3688
 10697              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10698              		.loc 1 163 38 is_stmt 0 view .LVU3689
 10699 3901 4801D0   		add	rax, rdx	# index_ptr, _485
 10700              	.LVL677:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10701              		.loc 1 162 10 is_stmt 1 view .LVU3690
 10702 3904 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10703 3907 732F     		jnb	.L513	#,
 163:sieve_extend.c ****    }
 10704              		.loc 1 163 8 view .LVU3691
 10705              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10706              		.loc 1 163 19 is_stmt 0 view .LVU3692
 10707 3909 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
GAS LISTING /tmp/ccIyIA9Z.s 			page 285


 10708              		.loc 1 163 29 is_stmt 1 view .LVU3693
 10709              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10710              		.loc 1 163 38 is_stmt 0 view .LVU3694
 10711 390c 4801D0   		add	rax, rdx	# index_ptr, _485
 10712              	.LVL678:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10713              		.loc 1 162 10 is_stmt 1 view .LVU3695
 10714 390f 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10715 3912 7324     		jnb	.L513	#,
 163:sieve_extend.c ****    }
 10716              		.loc 1 163 8 view .LVU3696
 10717              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10718              		.loc 1 163 19 is_stmt 0 view .LVU3697
 10719 3914 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10720              		.loc 1 163 29 is_stmt 1 view .LVU3698
 10721              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10722              		.loc 1 163 38 is_stmt 0 view .LVU3699
 10723 3917 4801D0   		add	rax, rdx	# index_ptr, _485
 10724              	.LVL679:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10725              		.loc 1 162 10 is_stmt 1 view .LVU3700
 10726 391a 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10727 391d 7319     		jnb	.L513	#,
 163:sieve_extend.c ****    }
 10728              		.loc 1 163 8 view .LVU3701
 10729              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10730              		.loc 1 163 19 is_stmt 0 view .LVU3702
 10731 391f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10732              		.loc 1 163 29 is_stmt 1 view .LVU3703
 10733              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10734              		.loc 1 163 38 is_stmt 0 view .LVU3704
 10735 3922 4801D0   		add	rax, rdx	# index_ptr, _485
 10736              	.LVL680:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10737              		.loc 1 162 10 is_stmt 1 view .LVU3705
 10738 3925 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10739 3928 730E     		jnb	.L513	#,
 163:sieve_extend.c ****    }
 10740              		.loc 1 163 8 view .LVU3706
 10741              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10742              		.loc 1 163 19 is_stmt 0 view .LVU3707
 10743 392a 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_833, offset: 0B], _470
 163:sieve_extend.c ****    }
 10744              		.loc 1 163 29 is_stmt 1 view .LVU3708
 10745              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 10746              		.loc 1 163 38 is_stmt 0 view .LVU3709
 10747 392d 4801D0   		add	rax, rdx	# index_ptr, _485
 10748              	.LVL681:
GAS LISTING /tmp/ccIyIA9Z.s 			page 286


 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 10749              		.loc 1 162 10 is_stmt 1 view .LVU3710
 10750 3930 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10751 3933 72A8     		jb	.L514	#,
 10752              		.p2align 4,,10
 10753 3935 0F1F00   		.p2align 3
 10754              	.L513:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10755              		.loc 1 166 4 view .LVU3711
 10756              	# sieve_extend.c:166:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10757              		.loc 1 166 7 is_stmt 0 view .LVU3712
 10758 3938 4839F8   		cmp	rax, rdi	# index_ptr, _626
 10759 393b 741B     		je	.L1088	#,
 10760              	.LVL682:
 10761              	.L515:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10762              		.loc 1 166 7 view .LVU3713
 10763              	.LBE750:
 10764              	.LBE753:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10765              		.loc 1 226 77 is_stmt 1 view .LVU3714
 10766              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10767              		.loc 1 226 83 is_stmt 0 view .LVU3715
 10768 393d 4901F1   		add	r9, rsi	# index, step
 10769              	.LVL683:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10770              		.loc 1 226 50 is_stmt 1 view .LVU3716
 10771              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10772              		.loc 1 226 5 is_stmt 0 view .LVU3717
 10773 3940 4D39CF   		cmp	r15, r9	# range_stop_unique, index
 10774 3943 0F8777FE 		ja	.L516	#,
 10774      FFFF
 10775 3949 4C8B7C24 		mov	r15, QWORD PTR 120[rsp]	# _387, %sfp
 10775      78
 10776              	.LVL684:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 10777              		.loc 1 226 5 view .LVU3718
 10778 394e E908FDFF 		jmp	.L508	#
 10778      FF
 10779              	.LVL685:
 10780              		.p2align 4,,10
 10781 3953 0F1F4400 		.p2align 3
 10781      00
 10782              	.L1088:
 10783              	.LBB754:
 10784              	.LBB751:
 167:sieve_extend.c ****    }
 10785              		.loc 1 167 7 is_stmt 1 view .LVU3719
 10786              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 10787              		.loc 1 167 27 is_stmt 0 view .LVU3720
 10788 3958 48234C24 		and	rcx, QWORD PTR 96[rsp]	# tmp695, %sfp
 10788      60
 10789              	.LVL686:
GAS LISTING /tmp/ccIyIA9Z.s 			page 287


 10790              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 10791              		.loc 1 167 18 view .LVU3721
 10792 395d 48090F   		or	QWORD PTR [rdi], rcx	# *index_ptr_836, tmp695
 10793 3960 EBDB     		jmp	.L515	#
 10794              	.LVL687:
 10795              	.L503:
 167:sieve_extend.c ****    }
 10796              		.loc 1 167 18 view .LVU3722
 10797              	.LBE751:
 10798              	.LBE754:
 10799              	.LBE746:
 10800              	.LBE745:
 10801              	.LBE744:
 10802              	.LBB755:
 10803              	.LBB756:
 10804              	.LBB757:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10805              		.loc 1 240 49 is_stmt 1 view .LVU3723
 10806 3962 4C8B5424 		mov	r10, QWORD PTR 112[rsp]	# block_stop, %sfp
 10806      70
 10807              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10808              		.loc 1 240 13 is_stmt 0 view .LVU3724
 10809 3967 4C394C24 		cmp	QWORD PTR 112[rsp], r9	# %sfp, index
 10809      70
 10810 396c 0F82E9FC 		jb	.L508	#,
 10810      FFFF
 10811              	.LVL688:
 10812              	.L505:
 241:sieve_extend.c ****             return;
 10813              		.loc 1 241 17 is_stmt 1 view .LVU3725
 10814              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10815              		.loc 1 241 51 is_stmt 0 view .LVU3726
 10816 3972 4C89CA   		mov	rdx, r9	# tmp668, index
 10817              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10818              		.loc 1 241 54 view .LVU3727
 10819 3975 C442B1F7 		shlx	r11, r13, r9	# tmp671, tmp753, index
 10819      DD
 10820              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10821              		.loc 1 241 51 view .LVU3728
 10822 397a 48C1EA06 		shr	rdx, 6	# tmp668,
 10823              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10824              		.loc 1 240 76 view .LVU3729
 10825 397e 4D8D0C31 		lea	r9, [r9+rsi]	# index,
 10826              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10827              		.loc 1 241 51 view .LVU3730
 10828 3982 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_459, tmp671
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10829              		.loc 1 240 70 is_stmt 1 view .LVU3731
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10830              		.loc 1 240 49 view .LVU3732
GAS LISTING /tmp/ccIyIA9Z.s 			page 288


 10831              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10832              		.loc 1 240 13 is_stmt 0 view .LVU3733
 10833 3986 4D39CA   		cmp	r10, r9	# block_stop, index
 10834 3989 0F82CCFC 		jb	.L508	#,
 10834      FFFF
 241:sieve_extend.c ****             return;
 10835              		.loc 1 241 17 is_stmt 1 view .LVU3734
 10836              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10837              		.loc 1 241 51 is_stmt 0 view .LVU3735
 10838 398f 4D89CC   		mov	r12, r9	# tmp803, index
 10839              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10840              		.loc 1 241 54 view .LVU3736
 10841 3992 C4C2B1F7 		shlx	rcx, r13, r9	# tmp806, tmp753, index
 10841      CD
 10842              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10843              		.loc 1 241 51 view .LVU3737
 10844 3997 49C1EC06 		shr	r12, 6	# tmp803,
 10845              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10846              		.loc 1 240 76 view .LVU3738
 10847 399b 4901F1   		add	r9, rsi	# index, step
 10848              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10849              		.loc 1 241 51 view .LVU3739
 10850 399e 4B090CE6 		or	QWORD PTR [r14+r12*8], rcx	# *_459, tmp806
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10851              		.loc 1 240 70 is_stmt 1 view .LVU3740
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10852              		.loc 1 240 49 view .LVU3741
 10853              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10854              		.loc 1 240 13 is_stmt 0 view .LVU3742
 10855 39a2 4D39CA   		cmp	r10, r9	# block_stop, index
 10856 39a5 0F82B0FC 		jb	.L508	#,
 10856      FFFF
 241:sieve_extend.c ****             return;
 10857              		.loc 1 241 17 is_stmt 1 view .LVU3743
 10858              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10859              		.loc 1 241 51 is_stmt 0 view .LVU3744
 10860 39ab 4C89C8   		mov	rax, r9	# tmp808, index
 10861              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10862              		.loc 1 241 54 view .LVU3745
 10863 39ae C442B1F7 		shlx	r8, r13, r9	# tmp811, tmp753, index
 10863      C5
 10864              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10865              		.loc 1 241 51 view .LVU3746
 10866 39b3 48C1E806 		shr	rax, 6	# tmp808,
 10867              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10868              		.loc 1 240 76 view .LVU3747
GAS LISTING /tmp/ccIyIA9Z.s 			page 289


 10869 39b7 4901F1   		add	r9, rsi	# index, step
 10870              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10871              		.loc 1 241 51 view .LVU3748
 10872 39ba 4D0904C6 		or	QWORD PTR [r14+rax*8], r8	# *_459, tmp811
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10873              		.loc 1 240 70 is_stmt 1 view .LVU3749
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10874              		.loc 1 240 49 view .LVU3750
 10875              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10876              		.loc 1 240 13 is_stmt 0 view .LVU3751
 10877 39be 4D39CA   		cmp	r10, r9	# block_stop, index
 10878 39c1 0F8294FC 		jb	.L508	#,
 10878      FFFF
 241:sieve_extend.c ****             return;
 10879              		.loc 1 241 17 is_stmt 1 view .LVU3752
 10880              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10881              		.loc 1 241 51 is_stmt 0 view .LVU3753
 10882 39c7 4C89CA   		mov	rdx, r9	# tmp813, index
 10883              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10884              		.loc 1 241 54 view .LVU3754
 10885 39ca C442B1F7 		shlx	r11, r13, r9	# tmp816, tmp753, index
 10885      DD
 10886              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10887              		.loc 1 241 51 view .LVU3755
 10888 39cf 48C1EA06 		shr	rdx, 6	# tmp813,
 10889              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10890              		.loc 1 240 76 view .LVU3756
 10891 39d3 4901F1   		add	r9, rsi	# index, step
 10892              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10893              		.loc 1 241 51 view .LVU3757
 10894 39d6 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_459, tmp816
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10895              		.loc 1 240 70 is_stmt 1 view .LVU3758
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10896              		.loc 1 240 49 view .LVU3759
 10897              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10898              		.loc 1 240 13 is_stmt 0 view .LVU3760
 10899 39da 4D39CA   		cmp	r10, r9	# block_stop, index
 10900 39dd 0F8278FC 		jb	.L508	#,
 10900      FFFF
 241:sieve_extend.c ****             return;
 10901              		.loc 1 241 17 is_stmt 1 view .LVU3761
 10902              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10903              		.loc 1 241 51 is_stmt 0 view .LVU3762
 10904 39e3 4D89CC   		mov	r12, r9	# tmp818, index
 10905              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10906              		.loc 1 241 54 view .LVU3763
GAS LISTING /tmp/ccIyIA9Z.s 			page 290


 10907 39e6 C4C2B1F7 		shlx	rcx, r13, r9	# tmp821, tmp753, index
 10907      CD
 10908              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10909              		.loc 1 241 51 view .LVU3764
 10910 39eb 49C1EC06 		shr	r12, 6	# tmp818,
 10911              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10912              		.loc 1 240 76 view .LVU3765
 10913 39ef 4901F1   		add	r9, rsi	# index, step
 10914              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10915              		.loc 1 241 51 view .LVU3766
 10916 39f2 4B090CE6 		or	QWORD PTR [r14+r12*8], rcx	# *_459, tmp821
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10917              		.loc 1 240 70 is_stmt 1 view .LVU3767
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10918              		.loc 1 240 49 view .LVU3768
 10919              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10920              		.loc 1 240 13 is_stmt 0 view .LVU3769
 10921 39f6 4D39CA   		cmp	r10, r9	# block_stop, index
 10922 39f9 0F825CFC 		jb	.L508	#,
 10922      FFFF
 241:sieve_extend.c ****             return;
 10923              		.loc 1 241 17 is_stmt 1 view .LVU3770
 10924              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10925              		.loc 1 241 51 is_stmt 0 view .LVU3771
 10926 39ff 4C89C8   		mov	rax, r9	# tmp823, index
 10927              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10928              		.loc 1 241 54 view .LVU3772
 10929 3a02 C442B1F7 		shlx	r8, r13, r9	# tmp826, tmp753, index
 10929      C5
 10930              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10931              		.loc 1 241 51 view .LVU3773
 10932 3a07 48C1E806 		shr	rax, 6	# tmp823,
 10933              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10934              		.loc 1 240 76 view .LVU3774
 10935 3a0b 4901F1   		add	r9, rsi	# index, step
 10936              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10937              		.loc 1 241 51 view .LVU3775
 10938 3a0e 4D0904C6 		or	QWORD PTR [r14+rax*8], r8	# *_459, tmp826
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10939              		.loc 1 240 70 is_stmt 1 view .LVU3776
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10940              		.loc 1 240 49 view .LVU3777
 10941              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10942              		.loc 1 240 13 is_stmt 0 view .LVU3778
 10943 3a12 4D39CA   		cmp	r10, r9	# block_stop, index
 10944 3a15 0F8240FC 		jb	.L508	#,
 10944      FFFF
GAS LISTING /tmp/ccIyIA9Z.s 			page 291


 241:sieve_extend.c ****             return;
 10945              		.loc 1 241 17 is_stmt 1 view .LVU3779
 10946              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10947              		.loc 1 241 51 is_stmt 0 view .LVU3780
 10948 3a1b 4C89CA   		mov	rdx, r9	# tmp828, index
 10949              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10950              		.loc 1 241 54 view .LVU3781
 10951 3a1e C442B1F7 		shlx	r11, r13, r9	# tmp831, tmp753, index
 10951      DD
 10952              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10953              		.loc 1 241 51 view .LVU3782
 10954 3a23 48C1EA06 		shr	rdx, 6	# tmp828,
 10955              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10956              		.loc 1 240 76 view .LVU3783
 10957 3a27 4901F1   		add	r9, rsi	# index, step
 10958              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10959              		.loc 1 241 51 view .LVU3784
 10960 3a2a 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_459, tmp831
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10961              		.loc 1 240 70 is_stmt 1 view .LVU3785
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10962              		.loc 1 240 49 view .LVU3786
 10963              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10964              		.loc 1 240 13 is_stmt 0 view .LVU3787
 10965 3a2e 4D39CA   		cmp	r10, r9	# block_stop, index
 10966 3a31 0F8224FC 		jb	.L508	#,
 10966      FFFF
 241:sieve_extend.c ****             return;
 10967              		.loc 1 241 17 is_stmt 1 view .LVU3788
 10968              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10969              		.loc 1 241 51 is_stmt 0 view .LVU3789
 10970 3a37 4D89CC   		mov	r12, r9	# tmp833, index
 10971              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10972              		.loc 1 241 54 view .LVU3790
 10973 3a3a C4C2B1F7 		shlx	rcx, r13, r9	# tmp836, tmp753, index
 10973      CD
 10974              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10975              		.loc 1 241 51 view .LVU3791
 10976 3a3f 49C1EC06 		shr	r12, 6	# tmp833,
 10977              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10978              		.loc 1 240 76 view .LVU3792
 10979 3a43 4D8D0C31 		lea	r9, [r9+rsi]	# index,
 10980              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 10981              		.loc 1 241 51 view .LVU3793
 10982 3a47 4B090CE6 		or	QWORD PTR [r14+r12*8], rcx	# *_459, tmp836
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccIyIA9Z.s 			page 292


 10983              		.loc 1 240 70 is_stmt 1 view .LVU3794
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10984              		.loc 1 240 49 view .LVU3795
 10985              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10986              		.loc 1 240 13 is_stmt 0 view .LVU3796
 10987 3a4b 4D39CA   		cmp	r10, r9	# block_stop, index
 10988 3a4e 0F831EFF 		jnb	.L505	#,
 10988      FFFF
 10989 3a54 E902FCFF 		jmp	.L508	#
 10989      FF
 10990              	.LVL689:
 10991              	.L923:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10992              		.loc 1 240 13 view .LVU3797
 10993 3a59 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, prime
 10993      30
 10994 3a5e E91CF3FF 		jmp	.L443	#
 10994      FF
 10995              	.L537:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 10996              		.loc 1 240 13 view .LVU3798
 10997              	.LBE757:
 10998              	.LBE756:
 10999              	.LBE755:
 11000              	.LBE762:
 11001              	.LBE781:
 11002              	.LBE783:
 11003              	.LBE789:
 11004              	.LBE790:
 11005              	.LBE791:
 11006              	.LBB792:
 11007              	.LBB675:
 11008              	.LBB670:
 11009 3a63 4C8B4424 		mov	r8, QWORD PTR 96[rsp]	# block$pattern_start, %sfp
 11009      60
 11010 3a68 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, block$pattern_start
 11010      50
 11011 3a6d E932E7FF 		jmp	.L445	#
 11011      FF
 11012              	.LVL690:
 11013              	.L493:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11014              		.loc 1 240 13 view .LVU3799
 11015              	.LBE670:
 11016              	.LBE675:
 11017              	.LBE792:
 11018              	.LBB793:
 11019              	.LBB683:
 427:sieve_extend.c **** }
 11020              		.loc 1 427 37 is_stmt 1 view .LVU3800
 11021 3a72 C5F877   		vzeroupper
 11022 3a75 E896D0FF 		call	continuePattern_aligned	#
 11022      FF
 11023              	.LVL691:
 427:sieve_extend.c **** }
 11024              		.loc 1 427 37 is_stmt 0 view .LVU3801
GAS LISTING /tmp/ccIyIA9Z.s 			page 293


 11025 3a7a E96FF3FF 		jmp	.L491	#
 11025      FF
 11026              	.LVL692:
 11027              	.L1083:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 11028              		.loc 1 425 37 is_stmt 1 view .LVU3802
 11029 3a7f C5F877   		vzeroupper
 11030 3a82 E889D5FF 		call	continuePattern_shiftleft	#
 11030      FF
 11031              	.LVL693:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 11032              		.loc 1 425 37 is_stmt 0 view .LVU3803
 11033 3a87 E962F3FF 		jmp	.L491	#
 11033      FF
 11034              	.LVL694:
 11035              	.L470:
 425:sieve_extend.c ****     else if (source_bit < copy_bit) continuePattern_shiftright(bitstorage, source_start, size, dest
 11036              		.loc 1 425 37 view .LVU3804
 11037              	.LBE683:
 11038              	.LBE793:
 11039              	.LBB794:
 11040              	.LBB676:
 11041              	.LBB671:
 11042              	.LBB664:
 11043              	.LBB629:
 251:sieve_extend.c ****         return;
 11044              		.loc 1 251 9 is_stmt 1 view .LVU3805
 11045              	.LBB615:
 11046              	.LBI615:
 221:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 11047              		.loc 1 221 20 view .LVU3806
 11048              	.LBB616:
 222:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11049              		.loc 1 222 5 view .LVU3807
 223:sieve_extend.c **** 
 11050              		.loc 1 223 5 view .LVU3808
 11051              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 11052              		.loc 1 223 74 is_stmt 0 view .LVU3809
 11053 3a8c 4D89E3   		mov	r11, r12	# tmp581, step
 11054 3a8f 49C1E306 		sal	r11, 6	# tmp581,
 11055              	# sieve_extend.c:223:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 223:sieve_extend.c **** 
 11056              		.loc 1 223 21 view .LVU3810
 11057 3a93 4901DB   		add	r11, rbx	# range_stop_unique, index
 11058              	.LVL695:
 11059              	.LBB617:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11060              		.loc 1 226 10 is_stmt 1 view .LVU3811
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11061              		.loc 1 226 50 view .LVU3812
 11062              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11063              		.loc 1 226 5 is_stmt 0 view .LVU3813
 11064 3a96 4C39DB   		cmp	rbx, r11	# index, range_stop_unique
 11065 3a99 0F836CEB 		jnb	.L455	#,
 11065      FFFF
GAS LISTING /tmp/ccIyIA9Z.s 			page 294


 11066              	.LBB618:
 11067              	.LBB619:
 11068              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11069              		.loc 1 147 20 view .LVU3814
 11070 3a9f 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# _70, %sfp
 11070      78
 11071              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 11072              		.loc 1 149 112 view .LVU3815
 11073 3aa4 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp584,
 11074              	# sieve_extend.c:147:    const counter_t range_stop_word = wordindex(range_stop);
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11075              		.loc 1 147 20 view .LVU3816
 11076 3aa8 4889C8   		mov	rax, rcx	# range_stop_word, _70
 11077 3aab 48C1E806 		shr	rax, 6	# range_stop_word,
 11078              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11079              		.loc 1 167 29 view .LVU3817
 11080 3aaf 4189C9   		mov	r9d, ecx	# tmp585, _70
 11081              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 11082              		.loc 1 149 135 view .LVU3818
 11083 3ab2 4989C2   		mov	r10, rax	# tmp590, range_stop_word
 11084              	.LVL696:
 149:sieve_extend.c **** 
 11085              		.loc 1 149 135 view .LVU3819
 11086 3ab5 4929FA   		sub	r10, rdi	# tmp590, tmp584
 11087              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11088              		.loc 1 167 29 view .LVU3820
 11089 3ab8 41F7D1   		not	r9d	# tmp585
 11090 3abb 48C7C6FF 		mov	rsi, -1	# tmp1543,
 11090      FFFFFF
 11091              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 11092              		.loc 1 149 53 view .LVU3821
 11093 3ac2 4839F8   		cmp	rax, rdi	# range_stop_word, tmp584
 11094              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11095              		.loc 1 167 29 view .LVU3822
 11096 3ac5 C462B3F7 		shrx	r8, rsi, r9	# _284, tmp1543, tmp585
 11096      C6
 11097              	# sieve_extend.c:149:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 149:sieve_extend.c **** 
 11098              		.loc 1 149 53 view .LVU3823
 11099 3aca 4F8D0CD7 		lea	r9, [r15+r10*8]	# tmp592,
 11100 3ace 4D89E2   		mov	r10, r12	# _1173, step
 11101 3ad1 4D0F46CF 		cmovbe	r9, r15	# _101,, fast_loop_ptr
 11102              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11103              		.loc 1 167 29 view .LVU3824
 11104 3ad5 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _284
 11104      48
 11105              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11106              		.loc 1 154 38 view .LVU3825
GAS LISTING /tmp/ccIyIA9Z.s 			page 295


 11107 3ada 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _251,
 11107      00000000 
 11108              	# sieve_extend.c:161:    register const bitword_t* __restrict range_stop_ptr = __builtin_assume_ali
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11109              		.loc 1 161 83 view .LVU3826
 11110 3ae2 4D8D04C7 		lea	r8, [r15+rax*8]	# _269,
 11111 3ae6 48C1E703 		sal	rdi, 3	# tmp596,
 11112 3aea 49C1E204 		sal	r10, 4	# _1173,
 11113              	.LVL697:
 11114 3aee 6690     		.p2align 4,,10
 11115              		.p2align 3
 11116              	.L477:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11117              		.loc 1 161 83 view .LVU3827
 11118              	.LBE619:
 11119              	.LBE618:
 227:sieve_extend.c ****     }
 11120              		.loc 1 227 9 is_stmt 1 view .LVU3828
 11121 3af0 4889D8   		mov	rax, rbx	# tmp599, index
 11122 3af3 48C1E806 		shr	rax, 6	# tmp599,
 11123 3af7 B9010000 		mov	ecx, 1	# tmp1546,
 11123      00
 11124              	.LBB623:
 11125              	.LBB620:
 11126              	# sieve_extend.c:148:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 11127              		.loc 1 148 78 is_stmt 0 view .LVU3829
 11128 3afc 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 11129              	.LBE620:
 11130              	.LBE623:
 11131              	# sieve_extend.c:227:         applyMask_word(bitstorage, step, range_stop, markmask(index), wordind
 227:sieve_extend.c ****     }
 11132              		.loc 1 227 9 view .LVU3830
 11133 3b00 C4E2E1F7 		shlx	rcx, rcx, rbx	# _236, tmp1546, index
 11133      C9
 11134              	.LVL698:
 11135              	.LBB624:
 11136              	.LBI618:
 146:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 11137              		.loc 1 146 20 is_stmt 1 view .LVU3831
 11138              	.LBB621:
 147:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11139              		.loc 1 147 4 view .LVU3832
 148:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 11140              		.loc 1 148 4 view .LVU3833
 149:sieve_extend.c **** 
 11141              		.loc 1 149 4 view .LVU3834
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11142              		.loc 1 153 10 view .LVU3835
 11143 3b05 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 11144 3b08 0F830201 		jnb	.L472	#,
 11144      0000
 11145 3b0e 4A8D3410 		lea	rsi, [rax+r10]	# ivtmp.562,
 11146              	.L473:
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11147              		.loc 1 154 8 view .LVU3836
 11148              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 296


 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11149              		.loc 1 154 19 is_stmt 0 view .LVU3837
 11150 3b12 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11151              		.loc 1 154 29 is_stmt 1 view .LVU3838
 11152              	.LVL699:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11153              		.loc 1 155 8 view .LVU3839
 11154              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11155              		.loc 1 155 19 is_stmt 0 view .LVU3840
 11156 3b15 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11157              		.loc 1 155 29 is_stmt 1 view .LVU3841
 11158              	.LVL700:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11159              		.loc 1 156 8 view .LVU3842
 11160              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11161              		.loc 1 156 19 is_stmt 0 view .LVU3843
 11162 3b19 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11163              		.loc 1 156 29 is_stmt 1 view .LVU3844
 11164              	.LVL701:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11165              		.loc 1 157 8 view .LVU3845
 11166              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11167              		.loc 1 157 19 is_stmt 0 view .LVU3846
 11168 3b1c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11169              		.loc 1 157 29 is_stmt 1 view .LVU3847
 11170              	.LVL702:
 158:sieve_extend.c ****    }
 11171              		.loc 1 158 8 view .LVU3848
 11172 3b20 4801FE   		add	rsi, rdi	# ivtmp.562, tmp596
 11173              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11174              		.loc 1 158 19 is_stmt 0 view .LVU3849
 11175 3b23 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11176              		.loc 1 158 29 is_stmt 1 view .LVU3850
 11177 3b27 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11178              	.LVL703:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11179              		.loc 1 153 10 view .LVU3851
 11180 3b2a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11181 3b2d 0F86DD00 		jbe	.L472	#,
 11181      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11182              		.loc 1 154 8 view .LVU3852
 11183              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11184              		.loc 1 154 19 is_stmt 0 view .LVU3853
 11185 3b33 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11186              		.loc 1 154 29 is_stmt 1 view .LVU3854
GAS LISTING /tmp/ccIyIA9Z.s 			page 297


 11187              	.LVL704:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11188              		.loc 1 155 8 view .LVU3855
 11189              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11190              		.loc 1 155 19 is_stmt 0 view .LVU3856
 11191 3b36 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11192              		.loc 1 155 29 is_stmt 1 view .LVU3857
 11193              	.LVL705:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11194              		.loc 1 156 8 view .LVU3858
 11195              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11196              		.loc 1 156 19 is_stmt 0 view .LVU3859
 11197 3b3a 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11198              		.loc 1 156 29 is_stmt 1 view .LVU3860
 11199              	.LVL706:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11200              		.loc 1 157 8 view .LVU3861
 11201              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11202              		.loc 1 157 19 is_stmt 0 view .LVU3862
 11203 3b3d 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11204              		.loc 1 157 29 is_stmt 1 view .LVU3863
 11205              	.LVL707:
 158:sieve_extend.c ****    }
 11206              		.loc 1 158 8 view .LVU3864
 11207 3b41 4801FE   		add	rsi, rdi	# ivtmp.562, tmp596
 11208              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11209              		.loc 1 158 19 is_stmt 0 view .LVU3865
 11210 3b44 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11211              		.loc 1 158 29 is_stmt 1 view .LVU3866
 11212 3b48 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11213              	.LVL708:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11214              		.loc 1 153 10 view .LVU3867
 11215 3b4b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11216 3b4e 0F86BC00 		jbe	.L472	#,
 11216      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11217              		.loc 1 154 8 view .LVU3868
 11218              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11219              		.loc 1 154 19 is_stmt 0 view .LVU3869
 11220 3b54 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11221              		.loc 1 154 29 is_stmt 1 view .LVU3870
 11222              	.LVL709:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11223              		.loc 1 155 8 view .LVU3871
 11224              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 298


 11225              		.loc 1 155 19 is_stmt 0 view .LVU3872
 11226 3b57 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11227              		.loc 1 155 29 is_stmt 1 view .LVU3873
 11228              	.LVL710:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11229              		.loc 1 156 8 view .LVU3874
 11230              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11231              		.loc 1 156 19 is_stmt 0 view .LVU3875
 11232 3b5b 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11233              		.loc 1 156 29 is_stmt 1 view .LVU3876
 11234              	.LVL711:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11235              		.loc 1 157 8 view .LVU3877
 11236              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11237              		.loc 1 157 19 is_stmt 0 view .LVU3878
 11238 3b5e 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11239              		.loc 1 157 29 is_stmt 1 view .LVU3879
 11240              	.LVL712:
 158:sieve_extend.c ****    }
 11241              		.loc 1 158 8 view .LVU3880
 11242 3b62 4801FE   		add	rsi, rdi	# ivtmp.562, tmp596
 11243              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11244              		.loc 1 158 19 is_stmt 0 view .LVU3881
 11245 3b65 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11246              		.loc 1 158 29 is_stmt 1 view .LVU3882
 11247 3b69 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11248              	.LVL713:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11249              		.loc 1 153 10 view .LVU3883
 11250 3b6c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11251 3b6f 0F869B00 		jbe	.L472	#,
 11251      0000
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11252              		.loc 1 154 8 view .LVU3884
 11253              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11254              		.loc 1 154 19 is_stmt 0 view .LVU3885
 11255 3b75 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11256              		.loc 1 154 29 is_stmt 1 view .LVU3886
 11257              	.LVL714:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11258              		.loc 1 155 8 view .LVU3887
 11259              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11260              		.loc 1 155 19 is_stmt 0 view .LVU3888
 11261 3b78 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11262              		.loc 1 155 29 is_stmt 1 view .LVU3889
 11263              	.LVL715:
GAS LISTING /tmp/ccIyIA9Z.s 			page 299


 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11264              		.loc 1 156 8 view .LVU3890
 11265              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11266              		.loc 1 156 19 is_stmt 0 view .LVU3891
 11267 3b7c 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11268              		.loc 1 156 29 is_stmt 1 view .LVU3892
 11269              	.LVL716:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11270              		.loc 1 157 8 view .LVU3893
 11271              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11272              		.loc 1 157 19 is_stmt 0 view .LVU3894
 11273 3b7f 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11274              		.loc 1 157 29 is_stmt 1 view .LVU3895
 11275              	.LVL717:
 158:sieve_extend.c ****    }
 11276              		.loc 1 158 8 view .LVU3896
 11277 3b83 4801FE   		add	rsi, rdi	# ivtmp.562, tmp596
 11278              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11279              		.loc 1 158 19 is_stmt 0 view .LVU3897
 11280 3b86 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11281              		.loc 1 158 29 is_stmt 1 view .LVU3898
 11282 3b8a 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11283              	.LVL718:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11284              		.loc 1 153 10 view .LVU3899
 11285 3b8d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11286 3b90 767E     		jbe	.L472	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11287              		.loc 1 154 8 view .LVU3900
 11288              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11289              		.loc 1 154 19 is_stmt 0 view .LVU3901
 11290 3b92 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11291              		.loc 1 154 29 is_stmt 1 view .LVU3902
 11292              	.LVL719:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11293              		.loc 1 155 8 view .LVU3903
 11294              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11295              		.loc 1 155 19 is_stmt 0 view .LVU3904
 11296 3b95 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11297              		.loc 1 155 29 is_stmt 1 view .LVU3905
 11298              	.LVL720:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11299              		.loc 1 156 8 view .LVU3906
 11300              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11301              		.loc 1 156 19 is_stmt 0 view .LVU3907
 11302 3b99 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
GAS LISTING /tmp/ccIyIA9Z.s 			page 300


 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11303              		.loc 1 156 29 is_stmt 1 view .LVU3908
 11304              	.LVL721:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11305              		.loc 1 157 8 view .LVU3909
 11306              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11307              		.loc 1 157 19 is_stmt 0 view .LVU3910
 11308 3b9c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11309              		.loc 1 157 29 is_stmt 1 view .LVU3911
 11310              	.LVL722:
 158:sieve_extend.c ****    }
 11311              		.loc 1 158 8 view .LVU3912
 11312 3ba0 4801FE   		add	rsi, rdi	# ivtmp.562, tmp596
 11313              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11314              		.loc 1 158 19 is_stmt 0 view .LVU3913
 11315 3ba3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11316              		.loc 1 158 29 is_stmt 1 view .LVU3914
 11317 3ba7 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11318              	.LVL723:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11319              		.loc 1 153 10 view .LVU3915
 11320 3baa 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11321 3bad 7661     		jbe	.L472	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11322              		.loc 1 154 8 view .LVU3916
 11323              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11324              		.loc 1 154 19 is_stmt 0 view .LVU3917
 11325 3baf 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11326              		.loc 1 154 29 is_stmt 1 view .LVU3918
 11327              	.LVL724:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11328              		.loc 1 155 8 view .LVU3919
 11329              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11330              		.loc 1 155 19 is_stmt 0 view .LVU3920
 11331 3bb2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11332              		.loc 1 155 29 is_stmt 1 view .LVU3921
 11333              	.LVL725:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11334              		.loc 1 156 8 view .LVU3922
 11335              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11336              		.loc 1 156 19 is_stmt 0 view .LVU3923
 11337 3bb6 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11338              		.loc 1 156 29 is_stmt 1 view .LVU3924
 11339              	.LVL726:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11340              		.loc 1 157 8 view .LVU3925
 11341              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
GAS LISTING /tmp/ccIyIA9Z.s 			page 301


 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11342              		.loc 1 157 19 is_stmt 0 view .LVU3926
 11343 3bb9 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11344              		.loc 1 157 29 is_stmt 1 view .LVU3927
 11345              	.LVL727:
 158:sieve_extend.c ****    }
 11346              		.loc 1 158 8 view .LVU3928
 11347 3bbd 4801FE   		add	rsi, rdi	# ivtmp.562, tmp596
 11348              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11349              		.loc 1 158 19 is_stmt 0 view .LVU3929
 11350 3bc0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11351              		.loc 1 158 29 is_stmt 1 view .LVU3930
 11352 3bc4 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11353              	.LVL728:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11354              		.loc 1 153 10 view .LVU3931
 11355 3bc7 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11356 3bca 7644     		jbe	.L472	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11357              		.loc 1 154 8 view .LVU3932
 11358              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11359              		.loc 1 154 19 is_stmt 0 view .LVU3933
 11360 3bcc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11361              		.loc 1 154 29 is_stmt 1 view .LVU3934
 11362              	.LVL729:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11363              		.loc 1 155 8 view .LVU3935
 11364              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11365              		.loc 1 155 19 is_stmt 0 view .LVU3936
 11366 3bcf 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11367              		.loc 1 155 29 is_stmt 1 view .LVU3937
 11368              	.LVL730:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11369              		.loc 1 156 8 view .LVU3938
 11370              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11371              		.loc 1 156 19 is_stmt 0 view .LVU3939
 11372 3bd3 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11373              		.loc 1 156 29 is_stmt 1 view .LVU3940
 11374              	.LVL731:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11375              		.loc 1 157 8 view .LVU3941
 11376              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11377              		.loc 1 157 19 is_stmt 0 view .LVU3942
 11378 3bd6 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11379              		.loc 1 157 29 is_stmt 1 view .LVU3943
 11380              	.LVL732:
GAS LISTING /tmp/ccIyIA9Z.s 			page 302


 158:sieve_extend.c ****    }
 11381              		.loc 1 158 8 view .LVU3944
 11382 3bda 4801FE   		add	rsi, rdi	# ivtmp.562, tmp596
 11383              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11384              		.loc 1 158 19 is_stmt 0 view .LVU3945
 11385 3bdd 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11386              		.loc 1 158 29 is_stmt 1 view .LVU3946
 11387 3be1 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11388              	.LVL733:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11389              		.loc 1 153 10 view .LVU3947
 11390 3be4 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11391 3be7 7627     		jbe	.L472	#,
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11392              		.loc 1 154 8 view .LVU3948
 11393              	# sieve_extend.c:154:        *index_ptr |= mask;  index_ptr+=step;
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11394              		.loc 1 154 19 is_stmt 0 view .LVU3949
 11395 3be9 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_92, offset: 0B], _236
 154:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11396              		.loc 1 154 29 is_stmt 1 view .LVU3950
 11397              	.LVL734:
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11398              		.loc 1 155 8 view .LVU3951
 11399              	# sieve_extend.c:155:        *index_ptr |= mask;  index_ptr+=step;
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11400              		.loc 1 155 19 is_stmt 0 view .LVU3952
 11401 3bec 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_92, index: _251, offset: 0B], _236
 155:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11402              		.loc 1 155 29 is_stmt 1 view .LVU3953
 11403              	.LVL735:
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11404              		.loc 1 156 8 view .LVU3954
 11405              	# sieve_extend.c:156:        *index_ptr |= mask;  index_ptr+=step;
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11406              		.loc 1 156 19 is_stmt 0 view .LVU3955
 11407 3bf0 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1165, offset: 0B], _236
 156:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11408              		.loc 1 156 29 is_stmt 1 view .LVU3956
 11409              	.LVL736:
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11410              		.loc 1 157 8 view .LVU3957
 11411              	# sieve_extend.c:157:        *index_ptr |= mask;  index_ptr+=step;
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11412              		.loc 1 157 19 is_stmt 0 view .LVU3958
 11413 3bf3 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1165, index: _251, offset: 0B], _236
 157:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11414              		.loc 1 157 29 is_stmt 1 view .LVU3959
 11415              	.LVL737:
 158:sieve_extend.c ****    }
 11416              		.loc 1 158 8 view .LVU3960
 11417 3bf7 4801FE   		add	rsi, rdi	# ivtmp.562, tmp596
 11418              	# sieve_extend.c:158:        *index_ptr |= mask;  index_ptr+=step;
 158:sieve_extend.c ****    }
 11419              		.loc 1 158 19 is_stmt 0 view .LVU3961
GAS LISTING /tmp/ccIyIA9Z.s 			page 303


 11420 3bfa 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_92, index: _251, step: 4, offset: 0B], _236
 158:sieve_extend.c ****    }
 11421              		.loc 1 158 29 is_stmt 1 view .LVU3962
 11422 3bfe 4801F8   		add	rax, rdi	# index_ptr, tmp596
 11423              	.LVL738:
 153:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11424              		.loc 1 153 10 view .LVU3963
 11425 3c01 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11426 3c04 0F8708FF 		ja	.L473	#,
 11426      FFFF
 11427 3c0a 660F1F44 		.p2align 4,,10
 11427      0000
 11428              		.p2align 3
 11429              	.L472:
 161:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11430              		.loc 1 161 4 view .LVU3964
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11431              		.loc 1 162 4 view .LVU3965
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11432              		.loc 1 162 10 view .LVU3966
 11433 3c10 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11434 3c13 735B     		jnb	.L474	#,
 11435              	.L475:
 163:sieve_extend.c ****    }
 11436              		.loc 1 163 8 view .LVU3967
 11437              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11438              		.loc 1 163 19 is_stmt 0 view .LVU3968
 11439 3c15 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11440              		.loc 1 163 29 is_stmt 1 view .LVU3969
 11441              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11442              		.loc 1 163 38 is_stmt 0 view .LVU3970
 11443 3c18 4801D0   		add	rax, rdx	# index_ptr, _251
 11444              	.LVL739:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11445              		.loc 1 162 10 is_stmt 1 view .LVU3971
 11446 3c1b 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11447 3c1e 7350     		jnb	.L474	#,
 163:sieve_extend.c ****    }
 11448              		.loc 1 163 8 view .LVU3972
 11449              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11450              		.loc 1 163 19 is_stmt 0 view .LVU3973
 11451 3c20 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11452              		.loc 1 163 29 is_stmt 1 view .LVU3974
 11453              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11454              		.loc 1 163 38 is_stmt 0 view .LVU3975
 11455 3c23 4801D0   		add	rax, rdx	# index_ptr, _251
 11456              	.LVL740:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11457              		.loc 1 162 10 is_stmt 1 view .LVU3976
 11458 3c26 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11459 3c29 7345     		jnb	.L474	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 304


 163:sieve_extend.c ****    }
 11460              		.loc 1 163 8 view .LVU3977
 11461              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11462              		.loc 1 163 19 is_stmt 0 view .LVU3978
 11463 3c2b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11464              		.loc 1 163 29 is_stmt 1 view .LVU3979
 11465              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11466              		.loc 1 163 38 is_stmt 0 view .LVU3980
 11467 3c2e 4801D0   		add	rax, rdx	# index_ptr, _251
 11468              	.LVL741:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11469              		.loc 1 162 10 is_stmt 1 view .LVU3981
 11470 3c31 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11471 3c34 733A     		jnb	.L474	#,
 163:sieve_extend.c ****    }
 11472              		.loc 1 163 8 view .LVU3982
 11473              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11474              		.loc 1 163 19 is_stmt 0 view .LVU3983
 11475 3c36 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11476              		.loc 1 163 29 is_stmt 1 view .LVU3984
 11477              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11478              		.loc 1 163 38 is_stmt 0 view .LVU3985
 11479 3c39 4801D0   		add	rax, rdx	# index_ptr, _251
 11480              	.LVL742:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11481              		.loc 1 162 10 is_stmt 1 view .LVU3986
 11482 3c3c 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11483 3c3f 732F     		jnb	.L474	#,
 163:sieve_extend.c ****    }
 11484              		.loc 1 163 8 view .LVU3987
 11485              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11486              		.loc 1 163 19 is_stmt 0 view .LVU3988
 11487 3c41 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11488              		.loc 1 163 29 is_stmt 1 view .LVU3989
 11489              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11490              		.loc 1 163 38 is_stmt 0 view .LVU3990
 11491 3c44 4801D0   		add	rax, rdx	# index_ptr, _251
 11492              	.LVL743:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11493              		.loc 1 162 10 is_stmt 1 view .LVU3991
 11494 3c47 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11495 3c4a 7324     		jnb	.L474	#,
 163:sieve_extend.c ****    }
 11496              		.loc 1 163 8 view .LVU3992
 11497              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11498              		.loc 1 163 19 is_stmt 0 view .LVU3993
 11499 3c4c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
GAS LISTING /tmp/ccIyIA9Z.s 			page 305


 163:sieve_extend.c ****    }
 11500              		.loc 1 163 29 is_stmt 1 view .LVU3994
 11501              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11502              		.loc 1 163 38 is_stmt 0 view .LVU3995
 11503 3c4f 4801D0   		add	rax, rdx	# index_ptr, _251
 11504              	.LVL744:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11505              		.loc 1 162 10 is_stmt 1 view .LVU3996
 11506 3c52 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11507 3c55 7319     		jnb	.L474	#,
 163:sieve_extend.c ****    }
 11508              		.loc 1 163 8 view .LVU3997
 11509              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11510              		.loc 1 163 19 is_stmt 0 view .LVU3998
 11511 3c57 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11512              		.loc 1 163 29 is_stmt 1 view .LVU3999
 11513              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11514              		.loc 1 163 38 is_stmt 0 view .LVU4000
 11515 3c5a 4801D0   		add	rax, rdx	# index_ptr, _251
 11516              	.LVL745:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11517              		.loc 1 162 10 is_stmt 1 view .LVU4001
 11518 3c5d 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11519 3c60 730E     		jnb	.L474	#,
 163:sieve_extend.c ****    }
 11520              		.loc 1 163 8 view .LVU4002
 11521              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11522              		.loc 1 163 19 is_stmt 0 view .LVU4003
 11523 3c62 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_844, offset: 0B], _236
 163:sieve_extend.c ****    }
 11524              		.loc 1 163 29 is_stmt 1 view .LVU4004
 11525              	# sieve_extend.c:163:        *index_ptr |= mask;  index_ptr+=step;
 163:sieve_extend.c ****    }
 11526              		.loc 1 163 38 is_stmt 0 view .LVU4005
 11527 3c65 4801D0   		add	rax, rdx	# index_ptr, _251
 11528              	.LVL746:
 162:sieve_extend.c ****        *index_ptr |= mask;  index_ptr+=step;
 11529              		.loc 1 162 10 is_stmt 1 view .LVU4006
 11530 3c68 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11531 3c6b 72A8     		jb	.L475	#,
 11532 3c6d 0F1F00   		.p2align 4,,10
 11533              		.p2align 3
 11534              	.L474:
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11535              		.loc 1 166 4 view .LVU4007
 11536              	# sieve_extend.c:166:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11537              		.loc 1 166 7 is_stmt 0 view .LVU4008
 11538 3c70 4C39C0   		cmp	rax, r8	# index_ptr, _269
 11539 3c73 7411     		je	.L1089	#,
 11540              	.LVL747:
 11541              	.L476:
GAS LISTING /tmp/ccIyIA9Z.s 			page 306


 166:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11542              		.loc 1 166 7 view .LVU4009
 11543              	.LBE621:
 11544              	.LBE624:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11545              		.loc 1 226 77 is_stmt 1 view .LVU4010
 11546              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11547              		.loc 1 226 83 is_stmt 0 view .LVU4011
 11548 3c75 4C01E3   		add	rbx, r12	# index, step
 11549              	.LVL748:
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11550              		.loc 1 226 50 is_stmt 1 view .LVU4012
 11551              	# sieve_extend.c:226:     for (register counter_t index = range_start; index < range_stop_unique; i
 226:sieve_extend.c ****         applyMask_word(bitstorage, step, range_stop, markmask(index), wordindex(index));
 11552              		.loc 1 226 5 is_stmt 0 view .LVU4013
 11553 3c78 4939DB   		cmp	r11, rbx	# range_stop_unique, index
 11554 3c7b 0F876FFE 		ja	.L477	#,
 11554      FFFF
 11555 3c81 E985E9FF 		jmp	.L455	#
 11555      FF
 11556              	.LVL749:
 11557              	.L1089:
 11558              	.LBB625:
 11559              	.LBB622:
 167:sieve_extend.c ****    }
 11560              		.loc 1 167 7 is_stmt 1 view .LVU4014
 11561              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11562              		.loc 1 167 27 is_stmt 0 view .LVU4015
 11563 3c86 48234C24 		and	rcx, QWORD PTR 72[rsp]	# tmp601, %sfp
 11563      48
 11564              	.LVL750:
 11565              	# sieve_extend.c:167:       *index_ptr |= (mask & chopmask(range_stop));
 167:sieve_extend.c ****    }
 11566              		.loc 1 167 18 view .LVU4016
 11567 3c8b 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_841, tmp601
 11568 3c8e EBE5     		jmp	.L476	#
 11569              	.LVL751:
 11570              	.L1082:
 167:sieve_extend.c ****    }
 11571              		.loc 1 167 18 view .LVU4017
 11572 3c90 C5F877   		vzeroupper
 11573              	.LVL752:
 11574              	.L440:
 167:sieve_extend.c ****    }
 11575              		.loc 1 167 18 view .LVU4018
 11576              	.LBE622:
 11577              	.LBE625:
 11578              	.LBE617:
 11579              	.LBE616:
 11580              	.LBE615:
 11581              	.LBE629:
 11582              	.LBE664:
 11583              	.LBE671:
 11584              	.LBE676:
 11585              	.LBE794:
GAS LISTING /tmp/ccIyIA9Z.s 			page 307


 11586              	.LBB795:
 11587              	.LBB684:
 420:sieve_extend.c **** 
 11588              		.loc 1 420 35 is_stmt 1 view .LVU4019
 11589              	# sieve_extend.c:420:     if (size < WORD_SIZE_counter) return continuePattern_smallSize (bitstorag
 420:sieve_extend.c **** 
 11590              		.loc 1 420 42 is_stmt 0 view .LVU4020
 11591 3c93 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	#, %sfp
 11591      70
 11592 3c98 488B7424 		mov	rsi, QWORD PTR 96[rsp]	#, %sfp
 11592      60
 11593 3c9d 4C89F2   		mov	rdx, r14	#, patternsize_bits
 11594 3ca0 4C89FF   		mov	rdi, r15	#, _101
 11595 3ca3 E858C3FF 		call	continuePattern_smallSize	#
 11595      FF
 11596              	.LVL753:
 11597 3ca8 E941F1FF 		jmp	.L491	#
 11597      FF
 11598              	.LVL754:
 11599              	.L467:
 420:sieve_extend.c **** 
 11600              		.loc 1 420 42 view .LVU4021
 11601              	.LBE684:
 11602              	.LBE795:
 11603              	.LBB796:
 11604              	.LBB677:
 11605              	.LBB672:
 11606              	.LBB665:
 11607              	.LBB630:
 11608              	.LBB626:
 11609              	.LBB627:
 11610              	.LBB628:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11611              		.loc 1 240 49 is_stmt 1 view .LVU4022
 11612              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11613              		.loc 1 240 13 is_stmt 0 view .LVU4023
 11614 3cad 4C8B5C24 		mov	r11, QWORD PTR 120[rsp]	# _70, %sfp
 11614      78
 11615 3cb2 4939DB   		cmp	r11, rbx	# _70, index
 11616 3cb5 0F8250E9 		jb	.L455	#,
 11616      FFFF
 11617              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11618              		.loc 1 241 54 view .LVU4024
 11619 3cbb BF010000 		mov	edi, 1	# tmp574,
 11619      00
 11620              	.LVL755:
 11621              	.L469:
 241:sieve_extend.c ****             return;
 11622              		.loc 1 241 17 is_stmt 1 view .LVU4025
 11623              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11624              		.loc 1 241 51 is_stmt 0 view .LVU4026
 11625 3cc0 4889DA   		mov	rdx, rbx	# tmp570, index
 11626              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
GAS LISTING /tmp/ccIyIA9Z.s 			page 308


 11627              		.loc 1 241 54 view .LVU4027
 11628 3cc3 C462E1F7 		shlx	r8, rdi, rbx	# tmp573, tmp574, index
 11628      C7
 11629              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11630              		.loc 1 241 51 view .LVU4028
 11631 3cc8 48C1EA06 		shr	rdx, 6	# tmp570,
 11632              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11633              		.loc 1 240 76 view .LVU4029
 11634 3ccc 4C01E3   		add	rbx, r12	# index, step
 11635              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11636              		.loc 1 241 51 view .LVU4030
 11637 3ccf 4D0904D7 		or	QWORD PTR [r15+rdx*8], r8	# *_225, tmp573
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11638              		.loc 1 240 70 is_stmt 1 view .LVU4031
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11639              		.loc 1 240 49 view .LVU4032
 11640              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11641              		.loc 1 240 13 is_stmt 0 view .LVU4033
 11642 3cd3 4939DB   		cmp	r11, rbx	# _70, index
 11643 3cd6 0F822FE9 		jb	.L455	#,
 11643      FFFF
 241:sieve_extend.c ****             return;
 11644              		.loc 1 241 17 is_stmt 1 view .LVU4034
 11645              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11646              		.loc 1 241 51 is_stmt 0 view .LVU4035
 11647 3cdc 4989D9   		mov	r9, rbx	# tmp1014, index
 11648              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11649              		.loc 1 241 54 view .LVU4036
 11650 3cdf C462E1F7 		shlx	r10, rdi, rbx	# tmp1017, tmp574, index
 11650      D7
 11651              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11652              		.loc 1 241 51 view .LVU4037
 11653 3ce4 49C1E906 		shr	r9, 6	# tmp1014,
 11654              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11655              		.loc 1 240 76 view .LVU4038
 11656 3ce8 4C01E3   		add	rbx, r12	# index, step
 11657              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11658              		.loc 1 241 51 view .LVU4039
 11659 3ceb 4F0914CF 		or	QWORD PTR [r15+r9*8], r10	# *_225, tmp1017
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11660              		.loc 1 240 70 is_stmt 1 view .LVU4040
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11661              		.loc 1 240 49 view .LVU4041
 11662              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11663              		.loc 1 240 13 is_stmt 0 view .LVU4042
 11664 3cef 4939DB   		cmp	r11, rbx	# _70, index
 11665 3cf2 0F8213E9 		jb	.L455	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 309


 11665      FFFF
 241:sieve_extend.c ****             return;
 11666              		.loc 1 241 17 is_stmt 1 view .LVU4043
 11667              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11668              		.loc 1 241 51 is_stmt 0 view .LVU4044
 11669 3cf8 4889D9   		mov	rcx, rbx	# tmp1019, index
 11670              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11671              		.loc 1 241 54 view .LVU4045
 11672 3cfb C4E2E1F7 		shlx	rax, rdi, rbx	# tmp1022, tmp574, index
 11672      C7
 11673              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11674              		.loc 1 241 51 view .LVU4046
 11675 3d00 48C1E906 		shr	rcx, 6	# tmp1019,
 11676              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11677              		.loc 1 240 76 view .LVU4047
 11678 3d04 4C01E3   		add	rbx, r12	# index, step
 11679              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11680              		.loc 1 241 51 view .LVU4048
 11681 3d07 490904CF 		or	QWORD PTR [r15+rcx*8], rax	# *_225, tmp1022
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11682              		.loc 1 240 70 is_stmt 1 view .LVU4049
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11683              		.loc 1 240 49 view .LVU4050
 11684              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11685              		.loc 1 240 13 is_stmt 0 view .LVU4051
 11686 3d0b 4939DB   		cmp	r11, rbx	# _70, index
 11687 3d0e 0F82F7E8 		jb	.L455	#,
 11687      FFFF
 241:sieve_extend.c ****             return;
 11688              		.loc 1 241 17 is_stmt 1 view .LVU4052
 11689              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11690              		.loc 1 241 51 is_stmt 0 view .LVU4053
 11691 3d14 4889DA   		mov	rdx, rbx	# tmp1024, index
 11692              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11693              		.loc 1 241 54 view .LVU4054
 11694 3d17 C4E2E1F7 		shlx	rsi, rdi, rbx	# tmp1027, tmp574, index
 11694      F7
 11695              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11696              		.loc 1 241 51 view .LVU4055
 11697 3d1c 48C1EA06 		shr	rdx, 6	# tmp1024,
 11698              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11699              		.loc 1 240 76 view .LVU4056
 11700 3d20 4C01E3   		add	rbx, r12	# index, step
 11701              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11702              		.loc 1 241 51 view .LVU4057
 11703 3d23 490934D7 		or	QWORD PTR [r15+rdx*8], rsi	# *_225, tmp1027
GAS LISTING /tmp/ccIyIA9Z.s 			page 310


 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11704              		.loc 1 240 70 is_stmt 1 view .LVU4058
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11705              		.loc 1 240 49 view .LVU4059
 11706              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11707              		.loc 1 240 13 is_stmt 0 view .LVU4060
 11708 3d27 4939DB   		cmp	r11, rbx	# _70, index
 11709 3d2a 0F82DBE8 		jb	.L455	#,
 11709      FFFF
 241:sieve_extend.c ****             return;
 11710              		.loc 1 241 17 is_stmt 1 view .LVU4061
 11711              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11712              		.loc 1 241 51 is_stmt 0 view .LVU4062
 11713 3d30 4989D8   		mov	r8, rbx	# tmp1029, index
 11714              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11715              		.loc 1 241 54 view .LVU4063
 11716 3d33 C462E1F7 		shlx	r9, rdi, rbx	# tmp1032, tmp574, index
 11716      CF
 11717              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11718              		.loc 1 241 51 view .LVU4064
 11719 3d38 49C1E806 		shr	r8, 6	# tmp1029,
 11720              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11721              		.loc 1 240 76 view .LVU4065
 11722 3d3c 4C01E3   		add	rbx, r12	# index, step
 11723              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11724              		.loc 1 241 51 view .LVU4066
 11725 3d3f 4F090CC7 		or	QWORD PTR [r15+r8*8], r9	# *_225, tmp1032
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11726              		.loc 1 240 70 is_stmt 1 view .LVU4067
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11727              		.loc 1 240 49 view .LVU4068
 11728              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11729              		.loc 1 240 13 is_stmt 0 view .LVU4069
 11730 3d43 4939DB   		cmp	r11, rbx	# _70, index
 11731 3d46 0F82BFE8 		jb	.L455	#,
 11731      FFFF
 241:sieve_extend.c ****             return;
 11732              		.loc 1 241 17 is_stmt 1 view .LVU4070
 11733              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11734              		.loc 1 241 51 is_stmt 0 view .LVU4071
 11735 3d4c 4989DA   		mov	r10, rbx	# tmp1034, index
 11736              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11737              		.loc 1 241 54 view .LVU4072
 11738 3d4f C4E2E1F7 		shlx	rcx, rdi, rbx	# tmp1037, tmp574, index
 11738      CF
 11739              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11740              		.loc 1 241 51 view .LVU4073
GAS LISTING /tmp/ccIyIA9Z.s 			page 311


 11741 3d54 49C1EA06 		shr	r10, 6	# tmp1034,
 11742              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11743              		.loc 1 240 76 view .LVU4074
 11744 3d58 4C01E3   		add	rbx, r12	# index, step
 11745              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11746              		.loc 1 241 51 view .LVU4075
 11747 3d5b 4B090CD7 		or	QWORD PTR [r15+r10*8], rcx	# *_225, tmp1037
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11748              		.loc 1 240 70 is_stmt 1 view .LVU4076
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11749              		.loc 1 240 49 view .LVU4077
 11750              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11751              		.loc 1 240 13 is_stmt 0 view .LVU4078
 11752 3d5f 4939DB   		cmp	r11, rbx	# _70, index
 11753 3d62 0F82A3E8 		jb	.L455	#,
 11753      FFFF
 241:sieve_extend.c ****             return;
 11754              		.loc 1 241 17 is_stmt 1 view .LVU4079
 11755              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11756              		.loc 1 241 51 is_stmt 0 view .LVU4080
 11757 3d68 4889D8   		mov	rax, rbx	# tmp1039, index
 11758              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11759              		.loc 1 241 54 view .LVU4081
 11760 3d6b C4E2E1F7 		shlx	rdx, rdi, rbx	# tmp1042, tmp574, index
 11760      D7
 11761              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11762              		.loc 1 241 51 view .LVU4082
 11763 3d70 48C1E806 		shr	rax, 6	# tmp1039,
 11764              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11765              		.loc 1 240 76 view .LVU4083
 11766 3d74 4C01E3   		add	rbx, r12	# index, step
 11767              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11768              		.loc 1 241 51 view .LVU4084
 11769 3d77 490914C7 		or	QWORD PTR [r15+rax*8], rdx	# *_225, tmp1042
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11770              		.loc 1 240 70 is_stmt 1 view .LVU4085
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11771              		.loc 1 240 49 view .LVU4086
 11772              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11773              		.loc 1 240 13 is_stmt 0 view .LVU4087
 11774 3d7b 4939DB   		cmp	r11, rbx	# _70, index
 11775 3d7e 0F8287E8 		jb	.L455	#,
 11775      FFFF
 241:sieve_extend.c ****             return;
 11776              		.loc 1 241 17 is_stmt 1 view .LVU4088
 11777              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11778              		.loc 1 241 51 is_stmt 0 view .LVU4089
GAS LISTING /tmp/ccIyIA9Z.s 			page 312


 11779 3d84 4989D8   		mov	r8, rbx	# tmp1044, index
 11780              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11781              		.loc 1 241 54 view .LVU4090
 11782 3d87 C4E2E1F7 		shlx	rsi, rdi, rbx	# tmp1047, tmp574, index
 11782      F7
 11783              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11784              		.loc 1 241 51 view .LVU4091
 11785 3d8c 49C1E806 		shr	r8, 6	# tmp1044,
 11786              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11787              		.loc 1 240 76 view .LVU4092
 11788 3d90 4C01E3   		add	rbx, r12	# index, step
 11789              	# sieve_extend.c:241:                 bitstorage_word[wordindex(index)] |= markmask(index);
 241:sieve_extend.c ****             return;
 11790              		.loc 1 241 51 view .LVU4093
 11791 3d93 4B0934C7 		or	QWORD PTR [r15+r8*8], rsi	# *_225, tmp1047
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11792              		.loc 1 240 70 is_stmt 1 view .LVU4094
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11793              		.loc 1 240 49 view .LVU4095
 11794              	# sieve_extend.c:240:             for (counter_t index = range_start; index <= range_stop; index +=
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11795              		.loc 1 240 13 is_stmt 0 view .LVU4096
 11796 3d97 4939DB   		cmp	r11, rbx	# _70, index
 11797 3d9a 0F8320FF 		jnb	.L469	#,
 11797      FFFF
 11798 3da0 E966E8FF 		jmp	.L455	#
 11798      FF
 11799              	.LVL756:
 11800              	.L1075:
 240:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 11801              		.loc 1 240 13 view .LVU4097
 11802              	.LBE628:
 11803              	.LBE627:
 11804              	.LBE626:
 11805              	.LBE630:
 11806              	.LBE665:
 11807              	.LBE672:
 11808              	# sieve_extend.c:476:     for (;range_stop < block_stop;) {
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 11809              		.loc 1 476 5 view .LVU4098
 11810 3da5 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, _101
 11810      28
 11811              	# sieve_extend.c:468:     register counter_t prime   = 0;
 468:sieve_extend.c ****     counter_t patternsize_bits = 1;
 11812              		.loc 1 468 24 view .LVU4099
 11813 3daa 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 11813      30000000 
 11813      00
 11814              	# sieve_extend.c:472:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 472:sieve_extend.c **** 
 11815              		.loc 1 472 18 view .LVU4100
 11816 3db3 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
 11816      60000000 
 11816      00
GAS LISTING /tmp/ccIyIA9Z.s 			page 313


 11817              	# sieve_extend.c:476:     for (;range_stop < block_stop;) {
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 11818              		.loc 1 476 5 view .LVU4101
 11819 3dbc 48C74424 		mov	QWORD PTR 32[rsp], 1	# %sfp,
 11819      20010000 
 11819      00
 11820 3dc5 E9C9FEFF 		jmp	.L440	#
 11820      FF
 11821              	.LVL757:
 11822              	.L1087:
 476:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 11823              		.loc 1 476 5 view .LVU4102
 11824              	.LBE677:
 11825              	.LBE796:
 11826              	# sieve_extend.c:532: }
 532:sieve_extend.c **** 
 11827              		.loc 1 532 1 view .LVU4103
 11828 3dca C5F877   		vzeroupper
 11829 3dcd E8000000 		call	__stack_chk_fail@PLT	#
 11829      00
 11830              	.LVL758:
 532:sieve_extend.c **** 
 11831              		.loc 1 532 1 view .LVU4104
 11832              		.cfi_endproc
 11833              	.LFE67:
 11835 3dd2 66662E0F 		.p2align 4
 11835      1F840000 
 11835      0000000F 
 11835      1F00
 11837              	tune_benchmark:
 11838              	.LVL759:
 11839              	.LFB74:
 645:sieve_extend.c **** 
 646:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 11840              		.loc 1 646 94 is_stmt 1 view -0
 11841              		.cfi_startproc
 11842              		.loc 1 646 94 is_stmt 0 view .LVU4106
 11843 3de0 4154     		push	r12	#
 11844              		.cfi_def_cfa_offset 16
 11845              		.cfi_offset 12, -16
 11846              	# sieve_extend.c:652:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 647:sieve_extend.c ****     counter_t passes = 0;
 648:sieve_extend.c ****     double elapsed_time = 0;
 649:sieve_extend.c ****     struct timespec start_time,end_time;
 650:sieve_extend.c ****     struct sieve_t *sieve;
 651:sieve_extend.c **** 
 652:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 11847              		.loc 1 652 44 view .LVU4107
 11848 3de2 486BF668 		imul	rsi, rsi, 104	# tmp113, tmp149,
 11849              	.LVL760:
 11850              	# sieve_extend.c:647:     counter_t passes = 0;
 647:sieve_extend.c ****     counter_t passes = 0;
 11851              		.loc 1 647 15 view .LVU4108
 11852 3de6 4531E4   		xor	r12d, r12d	# passes
 11853              	# sieve_extend.c:646: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 646:sieve_extend.c ****     counter_t passes = 0;
 11854              		.loc 1 646 94 view .LVU4109
GAS LISTING /tmp/ccIyIA9Z.s 			page 314


 11855 3de9 55       		push	rbp	#
 11856              		.cfi_def_cfa_offset 24
 11857              		.cfi_offset 6, -24
 11858 3dea 53       		push	rbx	#
 11859              		.cfi_def_cfa_offset 32
 11860              		.cfi_offset 3, -32
 11861              	# sieve_extend.c:652:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 11862              		.loc 1 652 44 view .LVU4110
 11863 3deb 488D1C37 		lea	rbx, [rdi+rsi]	# _2,
 11864              	# sieve_extend.c:656:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 653:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 654:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 655:sieve_extend.c **** 
 656:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11865              		.loc 1 656 5 view .LVU4111
 11866 3def BF010000 		mov	edi, 1	#,
 11866      00
 11867              	.LVL761:
 11868              	# sieve_extend.c:646: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 646:sieve_extend.c ****     counter_t passes = 0;
 11869              		.loc 1 646 94 view .LVU4112
 11870 3df4 4883EC30 		sub	rsp, 48	#,
 11871              		.cfi_def_cfa_offset 80
 11872              	# sieve_extend.c:646: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 646:sieve_extend.c ****     counter_t passes = 0;
 11873              		.loc 1 646 94 view .LVU4113
 11874 3df8 64488B04 		mov	rax, QWORD PTR fs:40	# tmp164, MEM[(<address-space-1> long unsigned int *)40B]
 11874      25280000 
 11874      00
 11875 3e01 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7107, tmp164
 11875      28
 11876 3e06 31C0     		xor	eax, eax	# tmp164
 647:sieve_extend.c ****     double elapsed_time = 0;
 11877              		.loc 1 647 5 is_stmt 1 view .LVU4114
 11878              	.LVL762:
 648:sieve_extend.c ****     struct timespec start_time,end_time;
 11879              		.loc 1 648 5 view .LVU4115
 649:sieve_extend.c ****     struct sieve_t *sieve;
 11880              		.loc 1 649 5 view .LVU4116
 650:sieve_extend.c **** 
 11881              		.loc 1 650 5 view .LVU4117
 652:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11882              		.loc 1 652 5 view .LVU4118
 11883              	# sieve_extend.c:653:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_
 653:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11884              		.loc 1 653 30 is_stmt 0 view .LVU4119
 11885 3e08 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 11886              	# sieve_extend.c:652:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 652:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11887              		.loc 1 652 29 view .LVU4120
 11888 3e0c 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 11889              	# sieve_extend.c:654:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_
 654:sieve_extend.c **** 
 11890              		.loc 1 654 30 view .LVU4121
 11891 3e10 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 11892              	# sieve_extend.c:656:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11893              		.loc 1 656 5 view .LVU4122
GAS LISTING /tmp/ccIyIA9Z.s 			page 315


 11894 3e14 4889E6   		mov	rsi, rsp	# tmp117,
 11895              	# sieve_extend.c:652:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 652:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11896              		.loc 1 652 29 view .LVU4123
 11897 3e17 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 11897      000000
 653:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11898              		.loc 1 653 5 is_stmt 1 view .LVU4124
 11899              	# sieve_extend.c:653:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_
 653:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11900              		.loc 1 653 30 is_stmt 0 view .LVU4125
 11901 3e1e 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 11901      000000
 654:sieve_extend.c **** 
 11902              		.loc 1 654 5 is_stmt 1 view .LVU4126
 11903              	# sieve_extend.c:654:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_
 654:sieve_extend.c **** 
 11904              		.loc 1 654 30 is_stmt 0 view .LVU4127
 11905 3e25 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 11905      000000
 11906              		.loc 1 656 5 is_stmt 1 view .LVU4128
 11907 3e2c E8000000 		call	clock_gettime@PLT	#
 11907      00
 11908              	.LVL763:
 657:sieve_extend.c ****     #ifdef _OPENMP
 658:sieve_extend.c ****     omp_set_num_threads(tuning_result[tuning_result_index].threads);
 659:sieve_extend.c ****     #pragma omp parallel reduction(+:passes)
 660:sieve_extend.c ****     #endif
 661:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 11909              		.loc 1 661 5 view .LVU4129
 11910              		.loc 1 661 11 view .LVU4130
 11911 3e31 C5F957C0 		vxorpd	xmm0, xmm0, xmm0	# elapsed_time
 11912 3e35 C5F92F43 		vcomisd	xmm0, QWORD PTR 72[rbx]	# elapsed_time, _2->sample_duration
 11912      48
 11913 3e3a C57B1015 		vmovsd	xmm10, QWORD PTR .LC8[rip]	# _58,
 11913      00000000 
 11914 3e42 0F878D00 		ja	.L1092	#,
 11914      0000
 11915 3e48 C5E057DB 		vxorps	xmm3, xmm3, xmm3	# tmp151
 11916 3e4c EB73     		jmp	.L1091	#
 11917              	.LVL764:
 11918 3e4e 6690     		.p2align 4,,10
 11919              		.p2align 3
 11920              	.L1095:
 662:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11921              		.loc 1 662 9 view .LVU4131
 11922              	# sieve_extend.c:662:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 11923              		.loc 1 662 17 is_stmt 0 view .LVU4132
 11924 3e50 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 11925 3e54 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 11926              	# sieve_extend.c:664:         passes++;
 663:sieve_extend.c ****         sieve_delete(sieve);
 664:sieve_extend.c ****         passes++;
 11927              		.loc 1 664 15 view .LVU4133
 11928 3e57 49FFC4   		inc	r12	# passes
 11929              	.LVL765:
 11930              	# sieve_extend.c:662:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
GAS LISTING /tmp/ccIyIA9Z.s 			page 316


 662:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11931              		.loc 1 662 17 view .LVU4134
 11932 3e5a E8F1E1FF 		call	sieve_shake	#
 11932      FF
 11933              	.LVL766:
 11934              	.LBB797:
 11935              	.LBB798:
 11936              	# sieve_extend.c:116:     free(sieve->bitstorage);
 116:sieve_extend.c ****     free(sieve);
 11937              		.loc 1 116 5 view .LVU4135
 11938 3e5f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_37->bitstorage
 11939              	.LBE798:
 11940              	.LBE797:
 11941              	# sieve_extend.c:662:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 662:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11942              		.loc 1 662 17 view .LVU4136
 11943 3e62 4889C5   		mov	rbp, rax	# sieve, tmp150
 11944              	.LVL767:
 663:sieve_extend.c ****         sieve_delete(sieve);
 11945              		.loc 1 663 9 is_stmt 1 view .LVU4137
 11946              	.LBB800:
 11947              	.LBI797:
 115:sieve_extend.c ****     free(sieve->bitstorage);
 11948              		.loc 1 115 13 view .LVU4138
 11949              	.LBB799:
 116:sieve_extend.c ****     free(sieve);
 11950              		.loc 1 116 5 view .LVU4139
 11951 3e65 E8000000 		call	free@PLT	#
 11951      00
 11952              	.LVL768:
 117:sieve_extend.c **** }
 11953              		.loc 1 117 5 view .LVU4140
 11954 3e6a 4889EF   		mov	rdi, rbp	#, sieve
 11955 3e6d E8000000 		call	free@PLT	#
 11955      00
 11956              	.LVL769:
 117:sieve_extend.c **** }
 11957              		.loc 1 117 5 is_stmt 0 view .LVU4141
 11958              	.LBE799:
 11959              	.LBE800:
 11960              		.loc 1 664 9 is_stmt 1 view .LVU4142
 665:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 11961              		.loc 1 665 9 view .LVU4143
 11962 3e72 488D7424 		lea	rsi, 16[rsp]	# tmp120,
 11962      10
 11963 3e77 BF010000 		mov	edi, 1	#,
 11963      00
 11964 3e7c E8000000 		call	clock_gettime@PLT	#
 11964      00
 11965              	.LVL770:
 666:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 11966              		.loc 1 666 9 view .LVU4144
 11967              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11968              		.loc 1 666 58 is_stmt 0 view .LVU4145
 11969 3e81 C5E057DB 		vxorps	xmm3, xmm3, xmm3	# tmp151
 11970 3e85 C4E1E32A 		vcvtsi2sd	xmm2, xmm3, QWORD PTR 24[rsp]	# tmp152, tmp151, end_time.tv_nsec
 11970      542418
GAS LISTING /tmp/ccIyIA9Z.s 			page 317


 11971              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11972              		.loc 1 666 64 view .LVU4146
 11973 3e8c C4E1E32A 		vcvtsi2sd	xmm4, xmm3, QWORD PTR [rsp]	# tmp153, tmp151, start_time.tv_sec
 11973      2424
 11974              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11975              		.loc 1 666 40 view .LVU4147
 11976 3e92 C4E1E32A 		vcvtsi2sd	xmm7, xmm3, QWORD PTR 16[rsp]	# tmp155, tmp151, end_time.tv_sec
 11976      7C2410
 11977              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11978              		.loc 1 666 58 view .LVU4148
 11979 3e99 C5F928CA 		vmovapd	xmm1, xmm2	# tmp121, tmp152
 11980              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11981              		.loc 1 666 104 view .LVU4149
 11982 3e9d C4E1E32A 		vcvtsi2sd	xmm2, xmm3, QWORD PTR 8[rsp]	# tmp154, tmp151, start_time.tv_nsec
 11982      542408
 11983 3ea4 C4E2D99B 		vfmsub132sd	xmm1, xmm4, QWORD PTR .LC9[rip]	# tmp121, tmp122,
 11983      0D000000 
 11983      00
 11984 3ead C4E2E9BD 		vfnmadd231sd	xmm7, xmm2, QWORD PTR .LC9[rip]	# _63, tmp124,
 11984      3D000000 
 11984      00
 11985              	# sieve_extend.c:666:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 11986              		.loc 1 666 22 view .LVU4150
 11987 3eb6 C5F358C7 		vaddsd	xmm0, xmm1, xmm7	# elapsed_time, _62, _63
 11988              	.LVL771:
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11989              		.loc 1 661 11 is_stmt 1 view .LVU4151
 11990 3eba C5F92F43 		vcomisd	xmm0, QWORD PTR 72[rbx]	# elapsed_time, _2->sample_duration
 11990      48
 11991 3ebf 7706     		ja	.L1107	#,
 11992              	.LVL772:
 11993              	.L1091:
 11994              	# sieve_extend.c:661:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11995              		.loc 1 661 79 is_stmt 0 discriminator 1 view .LVU4152
 11996 3ec1 4C396340 		cmp	QWORD PTR 64[rbx], r12	# _2->sample_max, passes
 11997 3ec5 7789     		ja	.L1095	#,
 11998              	.L1107:
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 11999              		.loc 1 661 79 discriminator 1 view .LVU4153
 12000 3ec7 4D85E4   		test	r12, r12	# passes
 12001 3eca 7834     		js	.L1096	#,
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12002              		.loc 1 661 79 discriminator 1 view .LVU4154
 12003 3ecc C441E32A 		vcvtsi2sd	xmm9, xmm3, r12	# tmp158, tmp151, passes
 12003      CC
 12004              	.L1097:
 661:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12005              		.loc 1 661 79 discriminator 1 view .LVU4155
 12006 3ed1 C5335ED0 		vdivsd	xmm10, xmm9, xmm0	# _58, tmp131, elapsed_time
 12007              	.LVL773:
 12008              	.L1092:
 667:sieve_extend.c ****     }
 668:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 12009              		.loc 1 668 5 is_stmt 1 view .LVU4156
 12010              	# sieve_extend.c:668:     tuning_result[tuning_result_index].passes = passes;
 12011              		.loc 1 668 47 is_stmt 0 view .LVU4157
GAS LISTING /tmp/ccIyIA9Z.s 			page 318


 12012 3ed5 4C896350 		mov	QWORD PTR 80[rbx], r12	# _2->passes, passes
 669:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 12013              		.loc 1 669 5 is_stmt 1 view .LVU4158
 670:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 12014              		.loc 1 670 5 view .LVU4159
 12015              	# sieve_extend.c:669:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 669:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 12016              		.loc 1 669 53 is_stmt 0 view .LVU4160
 12017 3ed9 C4417914 		vunpcklpd	xmm11, xmm0, xmm10	# tmp135, elapsed_time, _58
 12017      DA
 12018 3ede C578115B 		vmovups	XMMWORD PTR 88[rbx], xmm11	# MEM[(double *)_2 + 88B], tmp135
 12018      58
 12019              	# sieve_extend.c:671: }
 671:sieve_extend.c **** }
 12020              		.loc 1 671 1 view .LVU4161
 12021 3ee3 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp165, D.7107
 12021      28
 12022 3ee8 64483304 		xor	rax, QWORD PTR fs:40	# tmp165, MEM[(<address-space-1> long unsigned int *)40B]
 12022      25280000 
 12022      00
 12023 3ef1 7529     		jne	.L1108	#,
 12024 3ef3 4883C430 		add	rsp, 48	#,
 12025              		.cfi_remember_state
 12026              		.cfi_def_cfa_offset 32
 12027 3ef7 5B       		pop	rbx	#
 12028              		.cfi_def_cfa_offset 24
 12029 3ef8 5D       		pop	rbp	#
 12030              		.cfi_def_cfa_offset 16
 12031 3ef9 415C     		pop	r12	#
 12032              		.cfi_def_cfa_offset 8
 12033 3efb C3       		ret	
 12034              	.LVL774:
 12035 3efc 0F1F4000 		.p2align 4,,10
 12036              		.p2align 3
 12037              	.L1096:
 12038              		.cfi_restore_state
 12039              		.loc 1 671 1 view .LVU4162
 12040 3f00 4C89E7   		mov	rdi, r12	# tmp133, passes
 12041 3f03 4D89E0   		mov	r8, r12	# tmp134, passes
 12042 3f06 48D1EF   		shr	rdi	# tmp133
 12043 3f09 4183E001 		and	r8d, 1	# tmp134,
 12044 3f0d 4C09C7   		or	rdi, r8	# tmp147, tmp134
 12045 3f10 C461E32A 		vcvtsi2sd	xmm8, xmm3, rdi	# tmp159, tmp151, tmp147
 12045      C7
 12046 3f15 C4413B58 		vaddsd	xmm9, xmm8, xmm8	# tmp131, tmp132, tmp132
 12046      C8
 12047 3f1a EBB5     		jmp	.L1097	#
 12048              	.LVL775:
 12049              	.L1108:
 12050              		.loc 1 671 1 view .LVU4163
 12051 3f1c E8000000 		call	__stack_chk_fail@PLT	#
 12051      00
 12052              	.LVL776:
 12053              		.cfi_endproc
 12054              	.LFE74:
 12056              		.section	.rodata.str1.8,"aMS",@progbits,1
 12057              		.align 8
GAS LISTING /tmp/ccIyIA9Z.s 			page 319


 12058              	.LC10:
 12059 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 12059      6C743A20 
 12059      53696576 
 12059      6573697A 
 12059      6520256A 
 12060 0055 000000   		.align 8
 12061              	.LC11:
 12062 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 12062      616C6964 
 12062      20726573 
 12062      756C742E 
 12062      20536965 
 12063              		.section	.rodata.str1.1
 12064              	.LC12:
 12065 0023 44656570 		.string	"DeepAnalyzing"
 12065      416E616C 
 12065      797A696E 
 12065      6700
 12066              		.section	.rodata.str1.8
 12067 00bb 00000000 		.align 8
 12067      00
 12068              	.LC13:
 12069 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 12069      65722025 
 12069      6A752028 
 12069      256A7529 
 12069      20776173 
 12070              		.align 8
 12071              	.LC14:
 12072 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 12072      65722025 
 12072      6A752028 
 12072      256A7529 
 12072      20776173 
 12073              		.text
 12074 3f21 66662E0F 		.p2align 4
 12074      1F840000 
 12074      0000000F 
 12074      1F4000
 12075              		.globl	validatePrimeCount
 12077              	validatePrimeCount:
 12078              	.LVL777:
 12079              	.LFB71:
 575:sieve_extend.c **** 
 12080              		.loc 1 575 72 is_stmt 1 view -0
 12081              		.cfi_startproc
 575:sieve_extend.c **** 
 12082              		.loc 1 575 72 is_stmt 0 view .LVU4165
 12083 3f30 F30F1EFA 		endbr64	
 577:sieve_extend.c ****     counter_t valid_primes = 0;
 12084              		.loc 1 577 5 is_stmt 1 view .LVU4166
 12085              	# sieve_extend.c:575: int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 575:sieve_extend.c **** 
 12086              		.loc 1 575 72 is_stmt 0 view .LVU4167
 12087 3f34 4157     		push	r15	#
 12088              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccIyIA9Z.s 			page 320


 12089              		.cfi_offset 15, -16
 12090 3f36 4156     		push	r14	#
 12091              		.cfi_def_cfa_offset 24
 12092              		.cfi_offset 14, -24
 12093 3f38 4155     		push	r13	#
 12094              		.cfi_def_cfa_offset 32
 12095              		.cfi_offset 13, -32
 12096 3f3a 4154     		push	r12	#
 12097              		.cfi_def_cfa_offset 40
 12098              		.cfi_offset 12, -40
 12099 3f3c 55       		push	rbp	#
 12100              		.cfi_def_cfa_offset 48
 12101              		.cfi_offset 6, -48
 12102 3f3d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 12103 3f40 53       		push	rbx	#
 12104              		.cfi_def_cfa_offset 56
 12105              		.cfi_offset 3, -56
 12106 3f41 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 12107 3f43 4883EC28 		sub	rsp, 40	#,
 12108              		.cfi_def_cfa_offset 96
 12109              	# sieve_extend.c:577:     counter_t primecount = count_primes(sieve);
 577:sieve_extend.c ****     counter_t valid_primes = 0;
 12110              		.loc 1 577 28 view .LVU4168
 12111 3f47 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 12112 3f4a 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 12113              	.LVL778:
 12114              	.LBB822:
 12115              	.LBI822:
 546:sieve_extend.c ****     counter_t primeCount = 1;
 12116              		.loc 1 546 18 is_stmt 1 view .LVU4169
 12117              	.LBB823:
 12118              	.LBB824:
 548:sieve_extend.c ****     return primeCount;
 12119              		.loc 1 548 30 view .LVU4170
 12120 3f4e 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_201, sieve_18(D)->size
 12121              	# sieve_extend.c:548:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 548:sieve_extend.c ****     return primeCount;
 12122              		.loc 1 548 5 is_stmt 0 view .LVU4171
 12123 3f52 4883FF01 		cmp	rdi, 1	# _25,
 12124 3f56 0F861705 		jbe	.L1110	#,
 12124      0000
 12125              	# sieve_extend.c:548:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 548:sieve_extend.c ****     return primeCount;
 12126              		.loc 1 548 20 view .LVU4172
 12127 3f5c B8010000 		mov	eax, 1	# factor,
 12127      00
 12128              	.LBE824:
 12129              	# sieve_extend.c:547:     counter_t primeCount = 1;
 547:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 12130              		.loc 1 547 15 view .LVU4173
 12131 3f61 41B80100 		mov	r8d, 1	# primeCount,
 12131      0000
 12132              	.LVL779:
 12133 3f67 660F1F84 		.p2align 4,,10
 12133      00000000 
 12133      00
 12134              		.p2align 3
GAS LISTING /tmp/ccIyIA9Z.s 			page 321


 12135              	.L1113:
 12136              	.LBB827:
 548:sieve_extend.c ****     return primeCount;
 12137              		.loc 1 548 106 is_stmt 1 view .LVU4174
 12138              	# sieve_extend.c:548:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 548:sieve_extend.c ****     return primeCount;
 12139              		.loc 1 548 116 is_stmt 0 view .LVU4175
 12140 3f70 49FFC0   		inc	r8	# primeCount
 12141              	.LVL780:
 548:sieve_extend.c ****     return primeCount;
 12142              		.loc 1 548 52 is_stmt 1 view .LVU4176
 12143              	# sieve_extend.c:548:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 548:sieve_extend.c ****     return primeCount;
 12144              		.loc 1 548 61 is_stmt 0 view .LVU4177
 12145 3f73 48FFC0   		inc	rax	# factor
 12146              	.LVL781:
 12147              	.L1257:
 12148              	.LBB825:
 12149              	.LBI825:
 121:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 12150              		.loc 1 121 25 is_stmt 1 view .LVU4178
 12151              	.LBB826:
 122:sieve_extend.c ****     return index;
 12152              		.loc 1 122 5 view .LVU4179
 122:sieve_extend.c ****     return index;
 12153              		.loc 1 122 11 view .LVU4180
 12154              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12155              		.loc 1 122 23 is_stmt 0 view .LVU4181
 12156 3f76 4889C1   		mov	rcx, rax	# tmp162, factor
 12157 3f79 48C1E906 		shr	rcx, 6	# tmp162,
 12158              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12159              		.loc 1 122 12 view .LVU4182
 12160 3f7d 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 12161              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12162              		.loc 1 122 11 view .LVU4183
 12163 3f81 490FA3C3 		bt	r11, rax	# *_106, factor
 12164 3f85 0F83A500 		jnc	.L1111	#,
 12164      0000
 122:sieve_extend.c ****     return index;
 12165              		.loc 1 122 60 is_stmt 1 view .LVU4184
 12166              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12167              		.loc 1 122 65 is_stmt 0 view .LVU4185
 12168 3f8b 4C8D6801 		lea	r13, 1[rax]	# tmp235,
 12169              	.LVL782:
 12170              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12171              		.loc 1 122 23 view .LVU4186
 12172 3f8f 4D89EE   		mov	r14, r13	# tmp167, factor
 12173 3f92 49C1EE06 		shr	r14, 6	# tmp167,
 12174              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12175              		.loc 1 122 12 view .LVU4187
 12176 3f96 4E8B3CF2 		mov	r15, QWORD PTR [rdx+r14*8]	# *_35, *_35
GAS LISTING /tmp/ccIyIA9Z.s 			page 322


 12177              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12178              		.loc 1 122 65 view .LVU4188
 12179 3f9a 4C89E8   		mov	rax, r13	# factor, tmp235
 122:sieve_extend.c ****     return index;
 12180              		.loc 1 122 11 is_stmt 1 view .LVU4189
 12181 3f9d 4D0FA3EF 		bt	r15, r13	# *_35, factor
 12182 3fa1 0F838900 		jnc	.L1111	#,
 12182      0000
 122:sieve_extend.c ****     return index;
 12183              		.loc 1 122 60 view .LVU4190
 12184              	.LVL783:
 12185              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12186              		.loc 1 122 65 is_stmt 0 view .LVU4191
 12187 3fa7 48FFC0   		inc	rax	# factor
 12188              	.LVL784:
 122:sieve_extend.c ****     return index;
 12189              		.loc 1 122 11 is_stmt 1 view .LVU4192
 12190              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12191              		.loc 1 122 23 is_stmt 0 view .LVU4193
 12192 3faa 4989C4   		mov	r12, rax	# tmp279, factor
 12193 3fad 49C1EC06 		shr	r12, 6	# tmp279,
 12194              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12195              		.loc 1 122 12 view .LVU4194
 12196 3fb1 4A8B34E2 		mov	rsi, QWORD PTR [rdx+r12*8]	# *_35, *_35
 12197              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12198              		.loc 1 122 11 view .LVU4195
 12199 3fb5 480FA3C6 		bt	rsi, rax	# *_35, factor
 12200 3fb9 7375     		jnc	.L1111	#,
 122:sieve_extend.c ****     return index;
 12201              		.loc 1 122 60 is_stmt 1 view .LVU4196
 12202              	.LVL785:
 12203              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12204              		.loc 1 122 65 is_stmt 0 view .LVU4197
 12205 3fbb 498D4502 		lea	rax, 2[r13]	# factor,
 12206              	.LVL786:
 122:sieve_extend.c ****     return index;
 12207              		.loc 1 122 11 is_stmt 1 view .LVU4198
 12208              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12209              		.loc 1 122 23 is_stmt 0 view .LVU4199
 12210 3fbf 4989C2   		mov	r10, rax	# tmp283, factor
 12211 3fc2 49C1EA06 		shr	r10, 6	# tmp283,
 12212              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12213              		.loc 1 122 12 view .LVU4200
 12214 3fc6 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 12215              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12216              		.loc 1 122 11 view .LVU4201
 12217 3fca 480FA3C1 		bt	rcx, rax	# *_35, factor
 12218 3fce 7360     		jnc	.L1111	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 323


 122:sieve_extend.c ****     return index;
 12219              		.loc 1 122 60 is_stmt 1 view .LVU4202
 12220              	.LVL787:
 12221              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12222              		.loc 1 122 65 is_stmt 0 view .LVU4203
 12223 3fd0 498D4503 		lea	rax, 3[r13]	# factor,
 12224              	.LVL788:
 122:sieve_extend.c ****     return index;
 12225              		.loc 1 122 11 is_stmt 1 view .LVU4204
 12226              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12227              		.loc 1 122 23 is_stmt 0 view .LVU4205
 12228 3fd4 4989C3   		mov	r11, rax	# tmp287, factor
 12229 3fd7 49C1EB06 		shr	r11, 6	# tmp287,
 12230              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12231              		.loc 1 122 12 view .LVU4206
 12232 3fdb 4E8B34DA 		mov	r14, QWORD PTR [rdx+r11*8]	# *_35, *_35
 12233              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12234              		.loc 1 122 11 view .LVU4207
 12235 3fdf 490FA3C6 		bt	r14, rax	# *_35, factor
 12236 3fe3 734B     		jnc	.L1111	#,
 122:sieve_extend.c ****     return index;
 12237              		.loc 1 122 60 is_stmt 1 view .LVU4208
 12238              	.LVL789:
 12239              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12240              		.loc 1 122 65 is_stmt 0 view .LVU4209
 12241 3fe5 498D4504 		lea	rax, 4[r13]	# factor,
 12242              	.LVL790:
 122:sieve_extend.c ****     return index;
 12243              		.loc 1 122 11 is_stmt 1 view .LVU4210
 12244              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12245              		.loc 1 122 23 is_stmt 0 view .LVU4211
 12246 3fe9 4989C7   		mov	r15, rax	# tmp291, factor
 12247 3fec 49C1EF06 		shr	r15, 6	# tmp291,
 12248              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12249              		.loc 1 122 12 view .LVU4212
 12250 3ff0 4E8B24FA 		mov	r12, QWORD PTR [rdx+r15*8]	# *_35, *_35
 12251              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12252              		.loc 1 122 11 view .LVU4213
 12253 3ff4 490FA3C4 		bt	r12, rax	# *_35, factor
 12254 3ff8 7336     		jnc	.L1111	#,
 122:sieve_extend.c ****     return index;
 12255              		.loc 1 122 60 is_stmt 1 view .LVU4214
 12256              	.LVL791:
 12257              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12258              		.loc 1 122 65 is_stmt 0 view .LVU4215
 12259 3ffa 498D4505 		lea	rax, 5[r13]	# factor,
 12260              	.LVL792:
 122:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccIyIA9Z.s 			page 324


 12261              		.loc 1 122 11 is_stmt 1 view .LVU4216
 12262              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12263              		.loc 1 122 23 is_stmt 0 view .LVU4217
 12264 3ffe 4889C6   		mov	rsi, rax	# tmp295, factor
 12265 4001 48C1EE06 		shr	rsi, 6	# tmp295,
 12266              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12267              		.loc 1 122 12 view .LVU4218
 12268 4005 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 12269              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12270              		.loc 1 122 11 view .LVU4219
 12271 4009 490FA3C2 		bt	r10, rax	# *_35, factor
 12272 400d 7321     		jnc	.L1111	#,
 122:sieve_extend.c ****     return index;
 12273              		.loc 1 122 60 is_stmt 1 view .LVU4220
 12274              	.LVL793:
 12275              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12276              		.loc 1 122 65 is_stmt 0 view .LVU4221
 12277 400f 498D4506 		lea	rax, 6[r13]	# factor,
 12278              	.LVL794:
 122:sieve_extend.c ****     return index;
 12279              		.loc 1 122 11 is_stmt 1 view .LVU4222
 12280              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12281              		.loc 1 122 23 is_stmt 0 view .LVU4223
 12282 4013 4889C1   		mov	rcx, rax	# tmp299, factor
 12283 4016 48C1E906 		shr	rcx, 6	# tmp299,
 12284              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12285              		.loc 1 122 12 view .LVU4224
 12286 401a 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 12287              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12288              		.loc 1 122 11 view .LVU4225
 12289 401e 490FA3C3 		bt	r11, rax	# *_35, factor
 12290 4022 730C     		jnc	.L1111	#,
 122:sieve_extend.c ****     return index;
 12291              		.loc 1 122 60 is_stmt 1 view .LVU4226
 12292              	.LVL795:
 12293              	# sieve_extend.c:122:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 122:sieve_extend.c ****     return index;
 12294              		.loc 1 122 65 is_stmt 0 view .LVU4227
 12295 4024 498D4507 		lea	rax, 7[r13]	# factor,
 12296              	.LVL796:
 122:sieve_extend.c ****     return index;
 12297              		.loc 1 122 11 is_stmt 1 view .LVU4228
 12298 4028 E949FFFF 		jmp	.L1257	#
 12298      FF
 12299 402d 0F1F00   		.p2align 4,,10
 12300              		.p2align 3
 12301              	.L1111:
 12302              	.LVL797:
 122:sieve_extend.c ****     return index;
 12303              		.loc 1 122 11 is_stmt 0 view .LVU4229
GAS LISTING /tmp/ccIyIA9Z.s 			page 325


 12304              	.LBE826:
 12305              	.LBE825:
 548:sieve_extend.c ****     return primeCount;
 12306              		.loc 1 548 30 is_stmt 1 view .LVU4230
 12307              	# sieve_extend.c:548:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 548:sieve_extend.c ****     return primeCount;
 12308              		.loc 1 548 5 is_stmt 0 view .LVU4231
 12309 4030 4839C7   		cmp	rdi, rax	# _25, factor
 12310 4033 0F8737FF 		ja	.L1113	#,
 12310      FFFF
 548:sieve_extend.c ****     return primeCount;
 12311              		.loc 1 548 5 view .LVU4232
 12312              	.LBE827:
 549:sieve_extend.c **** }
 12313              		.loc 1 549 5 is_stmt 1 view .LVU4233
 12314              	.LVL798:
 549:sieve_extend.c **** }
 12315              		.loc 1 549 5 is_stmt 0 view .LVU4234
 12316              	.LBE823:
 12317              	.LBE822:
 578:sieve_extend.c ****     switch(sieve->size) {
 12318              		.loc 1 578 5 is_stmt 1 view .LVU4235
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12319              		.loc 1 579 5 view .LVU4236
 12320 4039 83FB03   		cmp	ebx, 3	# option_verboselevel,
 12321 403c 0F9FC2   		setg	dl	#, tmp172
 12322 403f 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 12322      860100
 12323 4046 0F843F06 		je	.L1114	#,
 12323      0000
 12324 404c 0F86D202 		jbe	.L1258	#,
 12324      0000
 12325 4052 4981F900 		cmp	r9, 100000000	# pretmp_201,
 12325      E1F505
 12326 4059 0F84EB05 		je	.L1122	#,
 12326      0000
 12327 405f 0F863B03 		jbe	.L1259	#,
 12327      0000
 12328 4065 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 12328      CA9A3B
 12329 406c 0F85FD05 		jne	.L1120	#,
 12329      0000
 12330 4072 4981F82E 		cmp	r8, 50847534	# primeCount,
 12330      DF0703
 12331 4079 410F94C5 		sete	r13b	#, tmp189
 12332 407d 4421EA   		and	edx, r13d	# _253, tmp189
 12333 4080 4981F82E 		cmp	r8, 50847534	# primeCount,
 12333      DF0703
 12334 4087 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp189
 12335 408b 410F95C4 		setne	r12b	#, _135
 588:sieve_extend.c ****         default:            valid_primes= 0;
 12336              		.loc 1 588 29 view .LVU4237
 12337              	.LVL799:
 588:sieve_extend.c ****         default:            valid_primes= 0;
 12338              		.loc 1 588 54 view .LVU4238
 12339              	# sieve_extend.c:588:         case 1000000000:    valid_primes = 50847534; break;
 588:sieve_extend.c ****         default:            valid_primes= 0;
GAS LISTING /tmp/ccIyIA9Z.s 			page 326


 12340              		.loc 1 588 42 is_stmt 0 view .LVU4239
 12341 408f B92EDF07 		mov	ecx, 50847534	# valid_primes,
 12341      03
 12342              	.LVL800:
 12343              		.p2align 4,,10
 12344 4094 0F1F4000 		.p2align 3
 12345              	.L1127:
 592:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 12346              		.loc 1 592 5 is_stmt 1 view .LVU4240
 593:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 12347              		.loc 1 593 5 view .LVU4241
 12348              	# sieve_extend.c:593:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is 
 593:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 12349              		.loc 1 593 8 is_stmt 0 view .LVU4242
 12350 4098 84D2     		test	dl, dl	# _253
 12351 409a 0F842A04 		je	.L1128	#,
 12351      0000
 593:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 12352              		.loc 1 593 45 is_stmt 1 discriminator 1 view .LVU4243
 12353              	.LVL801:
 12354              	.LBB829:
 12355              	.LBI829:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 12356              		.loc 3 105 1 discriminator 1 view .LVU4244
 12357              	.LBB830:
 12358              		.loc 3 107 3 discriminator 1 view .LVU4245
 12359              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12360              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4246
 12361 40a0 4C89CA   		mov	rdx, r9	#, pretmp_201
 12362 40a3 488D3500 		lea	rsi, .LC10[rip]	#,
 12362      000000
 12363 40aa BF010000 		mov	edi, 1	#,
 12363      00
 12364 40af 31C0     		xor	eax, eax	#
 12365 40b1 E8000000 		call	__printf_chk@PLT	#
 12365      00
 12366              	.LVL802:
 12367              		.loc 3 107 10 discriminator 1 view .LVU4247
 12368              	.LBE830:
 12369              	.LBE829:
 594:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 12370              		.loc 1 594 5 is_stmt 1 discriminator 1 view .LVU4248
 12371              	.L1129:
 598:sieve_extend.c ****     return (valid);
 12372              		.loc 1 598 5 view .LVU4249
 12373              	# sieve_extend.c:598:     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
 598:sieve_extend.c ****     return (valid);
 12374              		.loc 1 598 8 is_stmt 0 view .LVU4250
 12375 40b6 83FB01   		cmp	ebx, 1	# option_verboselevel,
 12376 40b9 0F8E5302 		jle	.L1109	#,
 12376      0000
 12377 40bf 4584E4   		test	r12b, r12b	# _135
 12378 40c2 0F844A02 		je	.L1109	#,
 12378      0000
 12379              	.L1131:
 598:sieve_extend.c ****     return (valid);
 12380              		.loc 1 598 45 is_stmt 1 discriminator 1 view .LVU4251
GAS LISTING /tmp/ccIyIA9Z.s 			page 327


 12381              	.LBB831:
 12382              	.LBI831:
 552:sieve_extend.c ****     printf("DeepAnalyzing\n");
 12383              		.loc 1 552 13 discriminator 1 view .LVU4252
 12384              	.LVL803:
 12385              	.LBB832:
 553:sieve_extend.c ****     counter_t warn_prime = 0;
 12386              		.loc 1 553 5 discriminator 1 view .LVU4253
 12387              	.LBB833:
 12388              	.LBI833:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 12389              		.loc 3 105 1 discriminator 1 view .LVU4254
 12390              	.LBB834:
 12391              		.loc 3 107 3 discriminator 1 view .LVU4255
 12392              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12393              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4256
 12394 40c8 488D3D00 		lea	rdi, .LC12[rip]	#,
 12394      000000
 12395 40cf E8000000 		call	puts@PLT	#
 12395      00
 12396              	.LVL804:
 12397              		.loc 3 107 10 discriminator 1 view .LVU4257
 12398              	.LBE834:
 12399              	.LBE833:
 554:sieve_extend.c ****     counter_t warn_nonprime = 0;
 12400              		.loc 1 554 5 is_stmt 1 discriminator 1 view .LVU4258
 555:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 12401              		.loc 1 555 5 discriminator 1 view .LVU4259
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12402              		.loc 1 556 5 discriminator 1 view .LVU4260
 12403              	.LBB835:
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12404              		.loc 1 556 10 discriminator 1 view .LVU4261
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12405              		.loc 1 556 31 discriminator 1 view .LVU4262
 12406              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12407              		.loc 1 556 44 is_stmt 0 discriminator 1 view .LVU4263
 12408 40d4 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 12409              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12410              		.loc 1 556 5 discriminator 1 view .LVU4264
 12411 40d8 4883FF01 		cmp	rdi, 1	# _137,
 12412 40dc 0F863002 		jbe	.L1109	#,
 12412      0000
 12413              	.LBE835:
 12414              	# sieve_extend.c:555:     counter_t warn_nonprime = 0;
 555:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 12415              		.loc 1 555 15 view .LVU4265
 12416 40e2 48C74424 		mov	QWORD PTR 8[rsp], 0	# %sfp,
 12416      08000000 
 12416      00
 12417              	.LBB857:
 12418              	.LBB836:
 12419              	.LBB837:
 12420              	.LBB838:
 12421              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccIyIA9Z.s 			page 328


 12422              		.loc 3 107 10 view .LVU4266
 12423 40eb 44896C24 		mov	DWORD PTR 20[rsp], r13d	# %sfp, <retval>
 12423      14
 12424              	.LBE838:
 12425              	.LBE837:
 12426              	.LBE836:
 12427              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12428              		.loc 1 556 5 view .LVU4267
 12429 40f0 41BF0200 		mov	r15d, 2	# ivtmp.656,
 12429      0000
 12430 40f6 41BC0300 		mov	r12d, 3	# ivtmp.654,
 12430      0000
 12431              	.LBE857:
 12432              	# sieve_extend.c:554:     counter_t warn_prime = 0;
 554:sieve_extend.c ****     counter_t warn_nonprime = 0;
 12433              		.loc 1 554 15 view .LVU4268
 12434 40fc 4531C0   		xor	r8d, r8d	# warn_prime
 12435              	.LBB858:
 12436              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12437              		.loc 1 556 20 view .LVU4269
 12438 40ff 41BE0100 		mov	r14d, 1	# prime,
 12438      0000
 12439              	.LBB845:
 12440              	.LBB842:
 12441              	.LBB839:
 12442              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12443              		.loc 3 107 10 view .LVU4270
 12444 4105 4989ED   		mov	r13, rbp	# sieve, sieve
 12445              	.LVL805:
 12446 4108 0F1F8400 		.p2align 4,,10
 12446      00000000 
 12447              		.p2align 3
 12448              	.L1140:
 12449              		.loc 3 107 10 view .LVU4271
 12450              	.LBE839:
 12451              	.LBE842:
 12452              	.LBE845:
 557:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12453              		.loc 1 557 9 is_stmt 1 view .LVU4272
 12454              	# sieve_extend.c:557:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 557:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12455              		.loc 1 557 31 is_stmt 0 view .LVU4273
 12456 4110 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 12457              	# sieve_extend.c:557:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 557:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12458              		.loc 1 557 32 view .LVU4274
 12459 4114 4C89F3   		mov	rbx, r14	# tmp198, prime
 12460 4117 48C1EB06 		shr	rbx, 6	# tmp198,
 12461              	# sieve_extend.c:557:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 557:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12462              		.loc 1 557 73 view .LVU4275
 12463 411b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 12463      00
 12464 4120 C4C28BF7 		shrx	rcx, r9, r14	# tmp201, *_47, prime
 12464      C9
GAS LISTING /tmp/ccIyIA9Z.s 			page 329


 12465              	# sieve_extend.c:557:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 557:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12466              		.loc 1 557 12 view .LVU4276
 12467 4125 83E101   		and	ecx, 1	# c,
 12468 4128 0F84BA02 		je	.L1132	#,
 12468      0000
 12469              	.LVL806:
 12470              	.LBB846:
 12471              	.LBB847:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12472              		.loc 1 566 32 is_stmt 1 view .LVU4277
 12473              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12474              		.loc 1 566 13 is_stmt 0 view .LVU4278
 12475 412e BE030000 		mov	esi, 3	# ivtmp.646,
 12475      00
 12476              	.LBE847:
 12477              	# sieve_extend.c:565:             counter_t c_prime = 0;
 565:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 12478              		.loc 1 565 23 view .LVU4279
 12479 4133 31ED     		xor	ebp, ebp	# c_prime
 12480              	.LBB848:
 12481              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12482              		.loc 1 566 13 view .LVU4280
 12483 4135 4885FF   		test	rdi, rdi	# _137
 12484 4138 0F84EB03 		je	.L1247	#,
 12484      0000
 12485 413e 4989FB   		mov	r11, rdi	# tmp231, _137
 12486 4141 4929CB   		sub	r11, rcx	# tmp231, c
 12487 4144 4183E303 		and	r11d, 3	# tmp231,
 12488 4148 4D89DA   		mov	r10, r11	# tmp232, tmp231
 12489 414b 0F84B700 		je	.L1133	#,
 12489      0000
 12490              	.LVL807:
 567:sieve_extend.c ****             }
 12491              		.loc 1 567 17 is_stmt 1 view .LVU4281
 12492              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12493              		.loc 1 567 48 is_stmt 0 view .LVU4282
 12494 4151 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 12495 4155 4C39F8   		cmp	rax, r15	# tmp239, ivtmp.656
 12496 4158 7411     		je	.L1187	#,
 12497              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12498              		.loc 1 567 33 view .LVU4283
 12499 415a 31D2     		xor	edx, edx	# tmp241
 12500 415c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.654
 12501 415f 48F7F6   		div	rsi	# ivtmp.646
 12502              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12503              		.loc 1 567 82 view .LVU4284
 12504 4162 31ED     		xor	ebp, ebp	# c_prime
 567:sieve_extend.c ****             }
 12505              		.loc 1 567 82 view .LVU4285
 12506 4164 4885D2   		test	rdx, rdx	# tmp241
 12507 4167 400F94C5 		sete	bpl	#, c_prime
GAS LISTING /tmp/ccIyIA9Z.s 			page 330


 12508              	.LVL808:
 12509              	.L1187:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12510              		.loc 1 566 68 is_stmt 1 view .LVU4286
 12511              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12512              		.loc 1 566 69 is_stmt 0 view .LVU4287
 12513 416b 48FFC1   		inc	rcx	# c
 12514              	.LVL809:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12515              		.loc 1 566 32 is_stmt 1 view .LVU4288
 12516              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12517              		.loc 1 566 13 is_stmt 0 view .LVU4289
 12518 416e 4839F9   		cmp	rcx, rdi	# c, _137
 12519 4171 0F877901 		ja	.L1139	#,
 12519      0000
 12520              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12521              		.loc 1 566 51 view .LVU4290
 12522 4177 4989C9   		mov	r9, rcx	# tmp244, c
 12523 417a 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 12524 417e BE050000 		mov	esi, 5	# ivtmp.646,
 12524      00
 12525              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12526              		.loc 1 566 47 view .LVU4291
 12527 4183 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.654
 12528 4186 0F876401 		ja	.L1139	#,
 12528      0000
 12529 418c 4983FA01 		cmp	r10, 1	# tmp232,
 12530 4190 7476     		je	.L1133	#,
 12531 4192 4983FA02 		cmp	r10, 2	# tmp232,
 12532 4196 7437     		je	.L1218	#,
 567:sieve_extend.c ****             }
 12533              		.loc 1 567 17 is_stmt 1 view .LVU4292
 12534              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12535              		.loc 1 567 48 is_stmt 0 view .LVU4293
 12536 4198 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 12537 419c 4C39FB   		cmp	rbx, r15	# tmp245, ivtmp.656
 12538 419f 7417     		je	.L1189	#,
 12539              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12540              		.loc 1 567 33 view .LVU4294
 12541 41a1 31D2     		xor	edx, edx	# tmp247
 12542 41a3 4C89E0   		mov	rax, r12	# tmp248, ivtmp.654
 12543 41a6 48F7F6   		div	rsi	# ivtmp.646
 12544              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12545              		.loc 1 567 20 view .LVU4295
 12546 41a9 4885D2   		test	rdx, rdx	# tmp247
 12547 41ac 410F94C3 		sete	r11b	#, tmp249
 12548              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12549              		.loc 1 567 82 view .LVU4296
 12550 41b0 4180FB01 		cmp	r11b, 1	# tmp249,
GAS LISTING /tmp/ccIyIA9Z.s 			page 331


 12551 41b4 4883DDFF 		sbb	rbp, -1	# c_prime,
 12552              	.LVL810:
 12553              	.L1189:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12554              		.loc 1 566 68 is_stmt 1 view .LVU4297
 12555              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12556              		.loc 1 566 69 is_stmt 0 view .LVU4298
 12557 41b8 48FFC1   		inc	rcx	# c
 12558              	.LVL811:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12559              		.loc 1 566 32 is_stmt 1 view .LVU4299
 12560              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12561              		.loc 1 566 51 is_stmt 0 view .LVU4300
 12562 41bb 4989CA   		mov	r10, rcx	# tmp250, c
 12563 41be 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 12564 41c2 4883C602 		add	rsi, 2	# ivtmp.646,
 12565              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12566              		.loc 1 566 47 view .LVU4301
 12567 41c6 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.654
 12568 41c9 0F872101 		ja	.L1139	#,
 12568      0000
 12569              	.L1218:
 567:sieve_extend.c ****             }
 12570              		.loc 1 567 17 is_stmt 1 view .LVU4302
 12571              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12572              		.loc 1 567 48 is_stmt 0 view .LVU4303
 12573 41cf 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 12574 41d3 4D39F9   		cmp	r9, r15	# tmp251, ivtmp.656
 12575 41d6 7415     		je	.L1192	#,
 12576              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12577              		.loc 1 567 33 view .LVU4304
 12578 41d8 31D2     		xor	edx, edx	# tmp253
 12579 41da 4C89E0   		mov	rax, r12	# tmp254, ivtmp.654
 12580 41dd 48F7F6   		div	rsi	# ivtmp.646
 12581              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12582              		.loc 1 567 20 view .LVU4305
 12583 41e0 4885D2   		test	rdx, rdx	# tmp253
 12584 41e3 0F94C3   		sete	bl	#, tmp255
 12585              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12586              		.loc 1 567 82 view .LVU4306
 12587 41e6 80FB01   		cmp	bl, 1	# tmp255,
 12588 41e9 4883DDFF 		sbb	rbp, -1	# c_prime,
 12589              	.LVL812:
 12590              	.L1192:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12591              		.loc 1 566 68 is_stmt 1 view .LVU4307
 12592              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12593              		.loc 1 566 69 is_stmt 0 view .LVU4308
 12594 41ed 48FFC1   		inc	rcx	# c
GAS LISTING /tmp/ccIyIA9Z.s 			page 332


 12595              	.LVL813:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12596              		.loc 1 566 32 is_stmt 1 view .LVU4309
 12597              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12598              		.loc 1 566 51 is_stmt 0 view .LVU4310
 12599 41f0 4989CB   		mov	r11, rcx	# tmp256, c
 12600 41f3 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 12601 41f7 4883C602 		add	rsi, 2	# ivtmp.646,
 12602              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12603              		.loc 1 566 47 view .LVU4311
 12604 41fb 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.654
 12605 41fe 0F87EC00 		ja	.L1139	#,
 12605      0000
 12606              	.LVL814:
 12607              		.p2align 4,,10
 12608 4204 0F1F4000 		.p2align 3
 12609              	.L1133:
 567:sieve_extend.c ****             }
 12610              		.loc 1 567 17 is_stmt 1 view .LVU4312
 12611              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12612              		.loc 1 567 48 is_stmt 0 view .LVU4313
 12613 4208 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 12614 420c 4D39FA   		cmp	r10, r15	# tmp210, ivtmp.656
 12615 420f 7417     		je	.L1138	#,
 12616              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12617              		.loc 1 567 33 view .LVU4314
 12618 4211 31D2     		xor	edx, edx	# tmp214
 12619 4213 4C89E0   		mov	rax, r12	# tmp215, ivtmp.654
 12620 4216 48F7F6   		div	rsi	# ivtmp.646
 12621              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12622              		.loc 1 567 20 view .LVU4315
 12623 4219 4885D2   		test	rdx, rdx	# tmp214
 12624 421c 410F94C1 		sete	r9b	#, tmp217
 12625              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12626              		.loc 1 567 82 view .LVU4316
 12627 4220 4180F901 		cmp	r9b, 1	# tmp217,
 12628 4224 4883DDFF 		sbb	rbp, -1	# c_prime,
 12629              	.LVL815:
 12630              	.L1138:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12631              		.loc 1 566 68 is_stmt 1 view .LVU4317
 12632              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12633              		.loc 1 566 69 is_stmt 0 view .LVU4318
 12634 4228 48FFC1   		inc	rcx	# tmp234
 12635              	.LVL816:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12636              		.loc 1 566 32 is_stmt 1 view .LVU4319
 12637              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12638              		.loc 1 566 13 is_stmt 0 view .LVU4320
GAS LISTING /tmp/ccIyIA9Z.s 			page 333


 12639 422b 4839F9   		cmp	rcx, rdi	# tmp234, _137
 12640 422e 0F87BC00 		ja	.L1139	#,
 12640      0000
 12641              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12642              		.loc 1 566 51 view .LVU4321
 12643 4234 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 12644 4237 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 12645 423b 4883C602 		add	rsi, 2	# tmp233,
 12646              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12647              		.loc 1 566 47 view .LVU4322
 12648 423f 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.654
 12649 4242 0F87A800 		ja	.L1139	#,
 12649      0000
 567:sieve_extend.c ****             }
 12650              		.loc 1 567 17 is_stmt 1 view .LVU4323
 12651              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12652              		.loc 1 567 48 is_stmt 0 view .LVU4324
 12653 4248 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 12654 424c 4D39FB   		cmp	r11, r15	# tmp257, ivtmp.656
 12655 424f 7417     		je	.L1196	#,
 12656              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12657              		.loc 1 567 33 view .LVU4325
 12658 4251 31D2     		xor	edx, edx	# tmp259
 12659 4253 4C89E0   		mov	rax, r12	# tmp260, ivtmp.654
 12660 4256 48F7F6   		div	rsi	# tmp233
 12661              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12662              		.loc 1 567 20 view .LVU4326
 12663 4259 4885D2   		test	rdx, rdx	# tmp259
 12664 425c 410F94C2 		sete	r10b	#, tmp261
 12665              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12666              		.loc 1 567 82 view .LVU4327
 12667 4260 4180FA01 		cmp	r10b, 1	# tmp261,
 12668 4264 4883DDFF 		sbb	rbp, -1	# c_prime,
 12669              	.LVL817:
 12670              	.L1196:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12671              		.loc 1 566 68 is_stmt 1 view .LVU4328
 12672              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12673              		.loc 1 566 69 is_stmt 0 view .LVU4329
 12674 4268 4C8D4901 		lea	r9, 1[rcx]	# c,
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12675              		.loc 1 566 32 is_stmt 1 view .LVU4330
 12676              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12677              		.loc 1 566 51 is_stmt 0 view .LVU4331
 12678 426c 4D89CB   		mov	r11, r9	# tmp264, c
 12679 426f 4D0FAFD9 		imul	r11, r9	# tmp264, c
 12680 4273 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.646,
 12681              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
GAS LISTING /tmp/ccIyIA9Z.s 			page 334


 12682              		.loc 1 566 47 view .LVU4332
 12683 4277 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.654
 12684 427a 7774     		ja	.L1139	#,
 567:sieve_extend.c ****             }
 12685              		.loc 1 567 17 is_stmt 1 view .LVU4333
 12686              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12687              		.loc 1 567 48 is_stmt 0 view .LVU4334
 12688 427c 4D01C9   		add	r9, r9	# tmp265
 12689 427f 4D39F9   		cmp	r9, r15	# tmp265, ivtmp.656
 12690 4282 7417     		je	.L1198	#,
 12691              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12692              		.loc 1 567 33 view .LVU4335
 12693 4284 31D2     		xor	edx, edx	# tmp267
 12694 4286 4C89E0   		mov	rax, r12	# tmp268, ivtmp.654
 12695 4289 48F7F3   		div	rbx	# ivtmp.646
 12696              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12697              		.loc 1 567 20 view .LVU4336
 12698 428c 4885D2   		test	rdx, rdx	# tmp267
 12699 428f 410F94C2 		sete	r10b	#, tmp269
 12700              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12701              		.loc 1 567 82 view .LVU4337
 12702 4293 4180FA01 		cmp	r10b, 1	# tmp269,
 12703 4297 4883DDFF 		sbb	rbp, -1	# c_prime,
 12704              	.LVL818:
 12705              	.L1198:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12706              		.loc 1 566 68 is_stmt 1 view .LVU4338
 12707              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12708              		.loc 1 566 69 is_stmt 0 view .LVU4339
 12709 429b 4C8D4902 		lea	r9, 2[rcx]	# c,
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12710              		.loc 1 566 32 is_stmt 1 view .LVU4340
 12711              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12712              		.loc 1 566 51 is_stmt 0 view .LVU4341
 12713 429f 4D89CB   		mov	r11, r9	# tmp272, c
 12714 42a2 4D0FAFD9 		imul	r11, r9	# tmp272, c
 12715 42a6 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.646,
 12716              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12717              		.loc 1 566 47 view .LVU4342
 12718 42aa 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.654
 12719 42ad 7741     		ja	.L1139	#,
 567:sieve_extend.c ****             }
 12720              		.loc 1 567 17 is_stmt 1 view .LVU4343
 12721              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12722              		.loc 1 567 48 is_stmt 0 view .LVU4344
 12723 42af 4D01C9   		add	r9, r9	# tmp273
 12724 42b2 4D39F9   		cmp	r9, r15	# tmp273, ivtmp.656
 12725 42b5 7417     		je	.L1200	#,
 12726              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
GAS LISTING /tmp/ccIyIA9Z.s 			page 335


 567:sieve_extend.c ****             }
 12727              		.loc 1 567 33 view .LVU4345
 12728 42b7 31D2     		xor	edx, edx	# tmp275
 12729 42b9 4C89E0   		mov	rax, r12	# tmp276, ivtmp.654
 12730 42bc 48F7F3   		div	rbx	# ivtmp.646
 12731              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12732              		.loc 1 567 20 view .LVU4346
 12733 42bf 4885D2   		test	rdx, rdx	# tmp275
 12734 42c2 410F94C2 		sete	r10b	#, tmp277
 12735              	# sieve_extend.c:567:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 567:sieve_extend.c ****             }
 12736              		.loc 1 567 82 view .LVU4347
 12737 42c6 4180FA01 		cmp	r10b, 1	# tmp277,
 12738 42ca 4883DDFF 		sbb	rbp, -1	# c_prime,
 12739              	.LVL819:
 12740              	.L1200:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12741              		.loc 1 566 68 is_stmt 1 view .LVU4348
 12742              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12743              		.loc 1 566 69 is_stmt 0 view .LVU4349
 12744 42ce 4883C103 		add	rcx, 3	# c,
 12745              	.LVL820:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12746              		.loc 1 566 32 is_stmt 1 view .LVU4350
 12747              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12748              		.loc 1 566 51 is_stmt 0 view .LVU4351
 12749 42d2 4989C9   		mov	r9, rcx	# tmp278, c
 12750 42d5 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 12751 42d9 4883C606 		add	rsi, 6	# ivtmp.646,
 12752              	# sieve_extend.c:566:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12753              		.loc 1 566 47 view .LVU4352
 12754 42dd 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.654
 12755 42e0 0F8622FF 		jbe	.L1133	#,
 12755      FFFF
 12756              	.LVL821:
 12757 42e6 662E0F1F 		.p2align 4,,10
 12757      84000000 
 12757      0000
 12758              		.p2align 3
 12759              	.L1139:
 566:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 12760              		.loc 1 566 47 view .LVU4353
 12761              	.LBE848:
 569:sieve_extend.c ****         }
 12762              		.loc 1 569 13 is_stmt 1 view .LVU4354
 12763              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 12764              		.loc 1 569 16 is_stmt 0 view .LVU4355
 12765 42f0 4885ED   		test	rbp, rbp	# c_prime
 12766 42f3 0F841702 		je	.L1260	#,
 12766      0000
 12767              	.LVL822:
 12768              	.L1136:
GAS LISTING /tmp/ccIyIA9Z.s 			page 336


 569:sieve_extend.c ****         }
 12769              		.loc 1 569 16 view .LVU4356
 12770              	.LBE846:
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12771              		.loc 1 556 52 is_stmt 1 view .LVU4357
 12772              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12773              		.loc 1 556 57 is_stmt 0 view .LVU4358
 12774 42f9 49FFC6   		inc	r14	# prime
 12775              	.LVL823:
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12776              		.loc 1 556 31 is_stmt 1 view .LVU4359
 12777 42fc 4983C402 		add	r12, 2	# ivtmp.654,
 12778 4300 4983C702 		add	r15, 2	# ivtmp.656,
 12779              	# sieve_extend.c:556:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12780              		.loc 1 556 5 is_stmt 0 view .LVU4360
 12781 4304 4939FE   		cmp	r14, rdi	# prime, _137
 12782 4307 0F8203FE 		jb	.L1140	#,
 12782      FFFF
 12783              	.LVL824:
 12784              	.L1249:
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12785              		.loc 1 556 5 view .LVU4361
 12786 430d 448B6C24 		mov	r13d, DWORD PTR 20[rsp]	# <retval>, %sfp
 12786      14
 12787              	.LVL825:
 12788              	.L1109:
 556:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 12789              		.loc 1 556 5 view .LVU4362
 12790              	.LBE858:
 12791              	.LBE832:
 12792              	.LBE831:
 12793              	# sieve_extend.c:600: }
 600:sieve_extend.c **** 
 12794              		.loc 1 600 1 view .LVU4363
 12795 4312 4883C428 		add	rsp, 40	#,
 12796              		.cfi_remember_state
 12797              		.cfi_def_cfa_offset 56
 12798 4316 5B       		pop	rbx	#
 12799              		.cfi_def_cfa_offset 48
 12800 4317 5D       		pop	rbp	#
 12801              		.cfi_def_cfa_offset 40
 12802 4318 415C     		pop	r12	#
 12803              		.cfi_def_cfa_offset 32
 12804 431a 4489E8   		mov	eax, r13d	#, <retval>
 12805 431d 415D     		pop	r13	#
 12806              		.cfi_def_cfa_offset 24
 12807 431f 415E     		pop	r14	#
 12808              		.cfi_def_cfa_offset 16
 12809 4321 415F     		pop	r15	#
 12810              		.cfi_def_cfa_offset 8
 12811 4323 C3       		ret	
 12812              	.LVL826:
 12813              	.L1258:
 12814              		.cfi_restore_state
 12815              	# sieve_extend.c:579:     switch(sieve->size) {
GAS LISTING /tmp/ccIyIA9Z.s 			page 337


 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12816              		.loc 1 579 5 view .LVU4364
 12817 4324 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 12817      030000
 12818 432b 0F84F202 		je	.L1116	#,
 12818      0000
 12819 4331 7633     		jbe	.L1261	#,
 12820 4333 4981F910 		cmp	r9, 10000	# pretmp_201,
 12820      270000
 12821 433a 0F852F03 		jne	.L1120	#,
 12821      0000
 12822 4340 4981F8CD 		cmp	r8, 1229	# primeCount,
 12822      040000
 12823 4347 400F94C6 		sete	sil	#, tmp179
 12824 434b 21F2     		and	edx, esi	# _253, tmp179
 12825 434d 4981F8CD 		cmp	r8, 1229	# primeCount,
 12825      040000
 12826 4354 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 12827 4358 410F95C4 		setne	r12b	#, _135
 583:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 12828              		.loc 1 583 29 is_stmt 1 view .LVU4365
 12829              	.LVL827:
 583:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 12830              		.loc 1 583 54 view .LVU4366
 12831              	# sieve_extend.c:583:         case 10000:         valid_primes = 1229;     break;
 583:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 12832              		.loc 1 583 42 is_stmt 0 view .LVU4367
 12833 435c B9CD0400 		mov	ecx, 1229	# valid_primes,
 12833      00
 12834              	# sieve_extend.c:583:         case 10000:         valid_primes = 1229;     break;
 583:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 12835              		.loc 1 583 9 view .LVU4368
 12836 4361 E932FDFF 		jmp	.L1127	#
 12836      FF
 12837              	.LVL828:
 12838              	.L1261:
 12839              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12840              		.loc 1 579 5 view .LVU4369
 12841 4366 4983F90A 		cmp	r9, 10	# pretmp_201,
 12842 436a 0F842602 		je	.L1118	#,
 12842      0000
 12843 4370 4983F964 		cmp	r9, 100	# pretmp_201,
 12844 4374 0F85F502 		jne	.L1120	#,
 12844      0000
 12845 437a 4983F819 		cmp	r8, 25	# primeCount,
 12846 437e 0F94C1   		sete	cl	#, tmp173
 12847 4381 21CA     		and	edx, ecx	# _253, tmp173
 12848 4383 4983F819 		cmp	r8, 25	# primeCount,
 12849 4387 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 12850 438b 410F95C4 		setne	r12b	#, _135
 12851              	# sieve_extend.c:581:         case 100:           valid_primes = 25;       break;
 581:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 12852              		.loc 1 581 42 view .LVU4370
 12853 438f B9190000 		mov	ecx, 25	# valid_primes,
 12853      00
 12854 4394 E9FFFCFF 		jmp	.L1127	#
GAS LISTING /tmp/ccIyIA9Z.s 			page 338


 12854      FF
 12855 4399 0F1F8000 		.p2align 4,,10
 12855      000000
 12856              		.p2align 3
 12857              	.L1259:
 12858              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 12859              		.loc 1 579 5 view .LVU4371
 12860 43a0 4981F940 		cmp	r9, 1000000	# pretmp_201,
 12860      420F00
 12861 43a7 0F84C201 		je	.L1124	#,
 12861      0000
 12862 43ad 4981F980 		cmp	r9, 10000000	# pretmp_201,
 12862      969800
 12863 43b4 0F85B502 		jne	.L1120	#,
 12863      0000
 12864 43ba 4981F803 		cmp	r8, 664579	# primeCount,
 12864      240A00
 12865 43c1 410F94C7 		sete	r15b	#, tmp185
 12866 43c5 4421FA   		and	edx, r15d	# _253, tmp185
 12867 43c8 4981F803 		cmp	r8, 664579	# primeCount,
 12867      240A00
 12868 43cf 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 12869 43d3 410F95C4 		setne	r12b	#, _135
 586:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 12870              		.loc 1 586 29 is_stmt 1 view .LVU4372
 12871              	.LVL829:
 586:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 12872              		.loc 1 586 54 view .LVU4373
 12873              	# sieve_extend.c:586:         case 10000000:      valid_primes = 664579;   break;
 586:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 12874              		.loc 1 586 42 is_stmt 0 view .LVU4374
 12875 43d7 B903240A 		mov	ecx, 664579	# valid_primes,
 12875      00
 12876              	# sieve_extend.c:586:         case 10000000:      valid_primes = 664579;   break;
 586:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 12877              		.loc 1 586 9 view .LVU4375
 12878 43dc E9B7FCFF 		jmp	.L1127	#
 12878      FF
 12879              	.LVL830:
 12880              		.p2align 4,,10
 12881 43e1 0F1F8000 		.p2align 3
 12881      000000
 12882              	.L1132:
 12883              	.LBB863:
 12884              	.LBB861:
 12885              	.LBB859:
 12886              	.LBB855:
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12887              		.loc 1 558 32 is_stmt 1 view .LVU4376
 12888              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12889              		.loc 1 558 13 is_stmt 0 view .LVU4377
 12890 43e8 4885FF   		test	rdi, rdi	# _137
 12891 43eb 0F841CFF 		je	.L1249	#,
 12891      FFFF
 12892              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccIyIA9Z.s 			page 339


 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12893              		.loc 1 558 27 view .LVU4378
 12894 43f1 BB010000 		mov	ebx, 1	# c,
 12894      00
 12895 43f6 EB27     		jmp	.L1137	#
 12896              	.LVL831:
 12897 43f8 0F1F8400 		.p2align 4,,10
 12897      00000000 
 12898              		.p2align 3
 12899              	.L1146:
 12900              	# sieve_extend.c:560:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 560:sieve_extend.c ****                 }
 12901              		.loc 1 560 35 view .LVU4379
 12902 4400 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 12903              	.LVL832:
 12904              	.L1135:
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12905              		.loc 1 558 68 is_stmt 1 view .LVU4380
 12906              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12907              		.loc 1 558 69 is_stmt 0 view .LVU4381
 12908 4403 48FFC3   		inc	rbx	# c
 12909              	.LVL833:
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12910              		.loc 1 558 32 is_stmt 1 view .LVU4382
 12911              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12912              		.loc 1 558 13 is_stmt 0 view .LVU4383
 12913 4406 4839FB   		cmp	rbx, rdi	# c, _137
 12914 4409 0F87EAFE 		ja	.L1136	#,
 12914      FFFF
 12915              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12916              		.loc 1 558 51 view .LVU4384
 12917 440f 4989DB   		mov	r11, rbx	# tmp209, c
 12918 4412 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 12919              	# sieve_extend.c:558:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 558:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 12920              		.loc 1 558 47 view .LVU4385
 12921 4416 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.654
 12922 4419 0F87DAFE 		ja	.L1136	#,
 12922      FFFF
 12923              	.LVL834:
 12924              	.L1137:
 559:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 12925              		.loc 1 559 17 is_stmt 1 view .LVU4386
 12926 441f 488D2C1B 		lea	rbp, [rbx+rbx]	# _218,
 12927              	# sieve_extend.c:559:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 559:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 12928              		.loc 1 559 39 is_stmt 0 view .LVU4387
 12929 4423 488D7501 		lea	rsi, 1[rbp]	# _55,
 12930 4427 4C89E0   		mov	rax, r12	# tmp203, ivtmp.654
 12931 442a 31D2     		xor	edx, edx	# tmp204
 12932 442c 48F7F6   		div	rsi	# _55
 12933              	# sieve_extend.c:559:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 559:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 12934              		.loc 1 559 48 view .LVU4388
GAS LISTING /tmp/ccIyIA9Z.s 			page 340


 12935 442f 4885D2   		test	rdx, rdx	# tmp204
 12936 4432 75CF     		jne	.L1135	#,
 559:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 12937              		.loc 1 559 48 view .LVU4389
 12938 4434 4939EF   		cmp	r15, rbp	# ivtmp.656, _218
 12939 4437 74CA     		je	.L1135	#,
 560:sieve_extend.c ****                 }
 12940              		.loc 1 560 21 is_stmt 1 view .LVU4390
 12941              	# sieve_extend.c:560:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 560:sieve_extend.c ****                 }
 12942              		.loc 1 560 35 is_stmt 0 view .LVU4391
 12943 4439 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 12944              	.LVL835:
 12945              	# sieve_extend.c:560:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 560:sieve_extend.c ****                 }
 12946              		.loc 1 560 24 view .LVU4392
 12947 443d 4983F81D 		cmp	r8, 29	# warn_prime,
 12948 4441 77BD     		ja	.L1146	#,
 560:sieve_extend.c ****                 }
 12949              		.loc 1 560 44 is_stmt 1 view .LVU4393
 12950              	.LVL836:
 12951              	.LBB843:
 12952              	.LBI837:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 12953              		.loc 3 105 1 view .LVU4394
 12954              	.LBB840:
 12955              		.loc 3 107 3 view .LVU4395
 12956              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12957              		.loc 3 107 10 is_stmt 0 view .LVU4396
 12958 4443 4883EC08 		sub	rsp, 8	#,
 12959              		.cfi_def_cfa_offset 104
 12960 4447 4154     		push	r12	# ivtmp.654
 12961              		.cfi_def_cfa_offset 112
 12962 4449 4989F0   		mov	r8, rsi	#, _55
 12963 444c 4989C1   		mov	r9, rax	#, tmp203
 12964 444f 4C89E2   		mov	rdx, r12	#, ivtmp.654
 12965 4452 BF010000 		mov	edi, 1	#,
 12965      00
 12966 4457 4C89F1   		mov	rcx, r14	#, prime
 12967 445a 488D3500 		lea	rsi, .LC13[rip]	#,
 12967      000000
 12968 4461 31C0     		xor	eax, eax	#
 12969 4463 E8000000 		call	__printf_chk@PLT	#
 12969      00
 12970              	.LVL837:
 12971 4468 58       		pop	rax	#
 12972              		.cfi_def_cfa_offset 104
 12973 4469 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 12974 446d 5A       		pop	rdx	#
 12975              		.cfi_def_cfa_offset 96
 12976              	.LBE840:
 12977              	.LBE843:
 12978              	# sieve_extend.c:560:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 560:sieve_extend.c ****                 }
 12979              		.loc 1 560 35 view .LVU4397
 12980 446e 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 12981              	.LBB844:
GAS LISTING /tmp/ccIyIA9Z.s 			page 341


 12982              	.LBB841:
 12983              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 12984              		.loc 3 107 10 view .LVU4398
 12985 4471 EB90     		jmp	.L1135	#
 12986              	.LVL838:
 12987              	.L1110:
 12988              		.loc 3 107 10 view .LVU4399
 12989              	.LBE841:
 12990              	.LBE844:
 12991              	.LBE855:
 12992              	.LBE859:
 12993              	.LBE861:
 12994              	.LBE863:
 12995              	.LBB864:
 12996              	.LBB828:
 549:sieve_extend.c **** }
 12997              		.loc 1 549 5 is_stmt 1 view .LVU4400
 549:sieve_extend.c **** }
 12998              		.loc 1 549 5 is_stmt 0 view .LVU4401
 12999              	.LBE828:
 13000              	.LBE864:
 578:sieve_extend.c ****     switch(sieve->size) {
 13001              		.loc 1 578 5 is_stmt 1 view .LVU4402
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13002              		.loc 1 579 5 view .LVU4403
 13003 4473 41BC0100 		mov	r12d, 1	# _135,
 13003      0000
 13004 4479 41B80100 		mov	r8d, 1	# primeCount,
 13004      0000
 13005 447f 4531ED   		xor	r13d, r13d	# <retval>
 13006 4482 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 13006      860100
 13007 4489 0F842202 		je	.L1149	#,
 13007      0000
 13008 448f 0F872201 		ja	.L1141	#,
 13008      0000
 13009 4495 B9190000 		mov	ecx, 25	# valid_primes,
 13009      00
 13010 449a 4983F964 		cmp	r9, 100	# pretmp_201,
 13011 449e 742A     		je	.L1128	#,
 13012 44a0 0F863F01 		jbe	.L1262	#,
 13012      0000
 13013              	# sieve_extend.c:582:         case 1000:          valid_primes = 168;      break;
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13014              		.loc 1 582 42 is_stmt 0 view .LVU4404
 13015 44a6 B9A80000 		mov	ecx, 168	# valid_primes,
 13015      00
 13016              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13017              		.loc 1 579 5 view .LVU4405
 13018 44ab 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 13018      030000
 13019 44b2 7416     		je	.L1128	#,
 13020 44b4 4981F910 		cmp	r9, 10000	# pretmp_201,
 13020      270000
 13021 44bb B9CD0400 		mov	ecx, 1229	# tmp223,
 13021      00
GAS LISTING /tmp/ccIyIA9Z.s 			page 342


 13022 44c0 41BA0000 		mov	r10d, 0	# tmp224,
 13022      0000
 13023 44c6 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 13024              	.LVL839:
 13025              	.L1128:
 594:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13026              		.loc 1 594 5 is_stmt 1 view .LVU4406
 13027              	# sieve_extend.c:594:     if (!valid && option_verboselevel >= 1) {
 594:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13028              		.loc 1 594 8 is_stmt 0 view .LVU4407
 13029 44ca 85DB     		test	ebx, ebx	# option_verboselevel
 13030 44cc 0F8EE4FB 		jle	.L1129	#,
 13030      FFFF
 13031 44d2 4584E4   		test	r12b, r12b	# _135
 13032 44d5 0F84DBFB 		je	.L1129	#,
 13032      FFFF
 595:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 13033              		.loc 1 595 9 is_stmt 1 view .LVU4408
 13034              	.LVL840:
 13035              	.LBB865:
 13036              	.LBI865:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13037              		.loc 3 105 1 view .LVU4409
 13038              	.LBB866:
 13039              		.loc 3 107 3 view .LVU4410
 13040              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13041              		.loc 3 107 10 is_stmt 0 view .LVU4411
 13042 44db 31C0     		xor	eax, eax	#
 13043 44dd 4C89CA   		mov	rdx, r9	#, pretmp_201
 13044 44e0 488D3500 		lea	rsi, .LC11[rip]	#,
 13044      000000
 13045 44e7 BF010000 		mov	edi, 1	#,
 13045      00
 13046 44ec E8000000 		call	__printf_chk@PLT	#
 13046      00
 13047              	.LVL841:
 13048              		.loc 3 107 10 view .LVU4412
 13049              	.LBE866:
 13050              	.LBE865:
 596:sieve_extend.c ****     }
 13051              		.loc 1 596 9 is_stmt 1 view .LVU4413
 13052              	# sieve_extend.c:596:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_sh
 596:sieve_extend.c ****     }
 13053              		.loc 1 596 12 is_stmt 0 view .LVU4414
 13054 44f1 83FB01   		cmp	ebx, 1	# option_verboselevel,
 13055 44f4 0F8418FE 		je	.L1109	#,
 13055      FFFF
 596:sieve_extend.c ****     }
 13056              		.loc 1 596 49 is_stmt 1 discriminator 1 view .LVU4415
 13057 44fa 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 13058 44fe BA640000 		mov	edx, 100	#,
 13058      00
 13059 4503 4889EF   		mov	rdi, rbp	#, sieve
 13060 4506 E8A5D9FF 		call	show_primes.isra.0	#
 13060      FF
 13061              	.LVL842:
 598:sieve_extend.c ****     return (valid);
GAS LISTING /tmp/ccIyIA9Z.s 			page 343


 13062              		.loc 1 598 5 discriminator 1 view .LVU4416
 13063 450b E9B8FBFF 		jmp	.L1131	#
 13063      FF
 13064              	.LVL843:
 13065              	.L1260:
 13066              	.LBB867:
 13067              	.LBB862:
 13068              	.LBB860:
 13069              	.LBB856:
 13070              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13071              		.loc 1 569 44 is_stmt 0 view .LVU4417
 13072 4510 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	# warn_nonprime, %sfp
 13072      08
 13073 4515 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 13074              	.LVL844:
 13075              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13076              		.loc 1 569 28 view .LVU4418
 13077 4519 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 13078 451d 761D     		jbe	.L1144	#,
 13079              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13080              		.loc 1 569 44 view .LVU4419
 13081 451f 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, warn_nonprime
 13081      08
 13082 4524 E9D0FDFF 		jmp	.L1136	#
 13082      FF
 13083              	.LVL845:
 13084              	.L1247:
 569:sieve_extend.c ****         }
 13085              		.loc 1 569 44 view .LVU4420
 13086 4529 488B5424 		mov	rdx, QWORD PTR 8[rsp]	# warn_nonprime, %sfp
 13086      08
 13087 452e 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 13088              	.LVL846:
 13089              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13090              		.loc 1 569 28 view .LVU4421
 13091 4532 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 13092 4536 0F87D1FD 		ja	.L1249	#,
 13092      FFFF
 13093              	.LVL847:
 13094              	.L1144:
 13095              	.LBB849:
 13096              	.LBB850:
 13097              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13098              		.loc 3 107 10 view .LVU4422
 13099 453c BF010000 		mov	edi, 1	#,
 13099      00
 13100              	.LBE850:
 13101              	.LBE849:
 13102              	# sieve_extend.c:569:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 569:sieve_extend.c ****         }
 13103              		.loc 1 569 53 view .LVU4423
 13104 4541 4B8D5436 		lea	rdx, 1[r14+r14]	# tmp220,
 13104      01
GAS LISTING /tmp/ccIyIA9Z.s 			page 344


 13105              	.LBB853:
 13106              	.LBB851:
 13107              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13108              		.loc 3 107 10 view .LVU4424
 13109 4546 4C89F1   		mov	rcx, r14	#, prime
 13110 4549 488D3500 		lea	rsi, .LC14[rip]	#,
 13110      000000
 13111 4550 31C0     		xor	eax, eax	#
 13112 4552 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, warn_prime
 13112      18
 13113              	.LBE851:
 13114              	.LBE853:
 569:sieve_extend.c ****         }
 13115              		.loc 1 569 53 is_stmt 1 view .LVU4425
 13116              	.LVL848:
 13117              	.LBB854:
 13118              	.LBI849:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13119              		.loc 3 105 1 view .LVU4426
 13120              	.LBB852:
 13121              		.loc 3 107 3 view .LVU4427
 13122              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13123              		.loc 3 107 10 is_stmt 0 view .LVU4428
 13124 4557 E8000000 		call	__printf_chk@PLT	#
 13124      00
 13125              	.LVL849:
 13126              		.loc 3 107 10 view .LVU4429
 13127 455c 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, warn_nonprime
 13127      08
 13128 4561 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13129 4565 4C8B4424 		mov	r8, QWORD PTR 24[rsp]	# warn_prime, %sfp
 13129      18
 13130 456a E98AFDFF 		jmp	.L1136	#
 13130      FF
 13131              	.LVL850:
 13132              	.L1124:
 13133              		.loc 3 107 10 view .LVU4430
 13134 456f 4981F8A2 		cmp	r8, 78498	# primeCount,
 13134      320100
 13135 4576 410F94C6 		sete	r14b	#, tmp183
 13136 457a 4421F2   		and	edx, r14d	# _253, tmp183
 13137 457d 4981F8A2 		cmp	r8, 78498	# primeCount,
 13137      320100
 13138 4584 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp183
 13139 4588 410F95C4 		setne	r12b	#, _135
 13140              	.LBE852:
 13141              	.LBE854:
 13142              	.LBE856:
 13143              	.LBE860:
 13144              	.LBE862:
 13145              	.LBE867:
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13146              		.loc 1 585 29 is_stmt 1 view .LVU4431
 13147              	.LVL851:
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13148              		.loc 1 585 54 view .LVU4432
 13149              	# sieve_extend.c:585:         case 1000000:       valid_primes = 78498;    break;
GAS LISTING /tmp/ccIyIA9Z.s 			page 345


 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13150              		.loc 1 585 42 is_stmt 0 view .LVU4433
 13151 458c B9A23201 		mov	ecx, 78498	# valid_primes,
 13151      00
 13152              	# sieve_extend.c:585:         case 1000000:       valid_primes = 78498;    break;
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13153              		.loc 1 585 9 view .LVU4434
 13154 4591 E902FBFF 		jmp	.L1127	#
 13154      FF
 13155              	.LVL852:
 13156              	.L1118:
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13157              		.loc 1 585 9 view .LVU4435
 13158 4596 4983F804 		cmp	r8, 4	# primeCount,
 13159 459a 410F94C2 		sete	r10b	#, tmp175
 13160 459e 4421D2   		and	edx, r10d	# _253, tmp175
 13161 45a1 4983F804 		cmp	r8, 4	# primeCount,
 13162 45a5 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 13163 45a9 410F95C4 		setne	r12b	#, _135
 13164              	# sieve_extend.c:580:         case 10:            valid_primes = 4;        break;
 580:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 13165              		.loc 1 580 42 view .LVU4436
 13166 45ad B9040000 		mov	ecx, 4	# valid_primes,
 13166      00
 13167 45b2 E9E1FAFF 		jmp	.L1127	#
 13167      FF
 13168              	.LVL853:
 13169              	.L1141:
 13170              	# sieve_extend.c:587:         case 100000000:     valid_primes = 5761455;  break;
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13171              		.loc 1 587 42 view .LVU4437
 13172 45b7 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 13172      00
 13173              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13174              		.loc 1 579 5 view .LVU4438
 13175 45bc 4981F900 		cmp	r9, 100000000	# pretmp_201,
 13175      E1F505
 13176 45c3 0F8401FF 		je	.L1128	#,
 13176      FFFF
 13177 45c9 762C     		jbe	.L1263	#,
 13178 45cb 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 13178      CA9A3B
 13179 45d2 B92EDF07 		mov	ecx, 50847534	# tmp227,
 13179      03
 13180 45d7 B8000000 		mov	eax, 0	# tmp228,
 13180      00
 13181 45dc 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 13182 45e0 E9E5FEFF 		jmp	.L1128	#
 13182      FF
 13183              	.L1262:
 13184 45e5 31C9     		xor	ecx, ecx	# valid_primes
 13185 45e7 4983F90A 		cmp	r9, 10	# pretmp_201,
 13186 45eb 0F94C1   		sete	cl	#, valid_primes
 13187 45ee 48C1E102 		sal	rcx, 2	# valid_primes,
 13188 45f2 E9D3FEFF 		jmp	.L1128	#
 13188      FF
GAS LISTING /tmp/ccIyIA9Z.s 			page 346


 13189              	.L1263:
 13190              	# sieve_extend.c:585:         case 1000000:       valid_primes = 78498;    break;
 585:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 13191              		.loc 1 585 42 view .LVU4439
 13192 45f7 B9A23201 		mov	ecx, 78498	# valid_primes,
 13192      00
 13193              	# sieve_extend.c:579:     switch(sieve->size) {
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13194              		.loc 1 579 5 view .LVU4440
 13195 45fc 4981F940 		cmp	r9, 1000000	# pretmp_201,
 13195      420F00
 13196 4603 0F84C1FE 		je	.L1128	#,
 13196      FFFF
 13197 4609 4981F980 		cmp	r9, 10000000	# pretmp_201,
 13197      969800
 13198 4610 B903240A 		mov	ecx, 664579	# tmp225,
 13198      00
 13199 4615 BE000000 		mov	esi, 0	# tmp226,
 13199      00
 13200 461a 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 13201 461e E9A7FEFF 		jmp	.L1128	#
 13201      FF
 13202              	.LVL854:
 13203              	.L1116:
 579:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13204              		.loc 1 579 5 view .LVU4441
 13205 4623 4981F8A8 		cmp	r8, 168	# primeCount,
 13205      000000
 13206 462a 410F94C4 		sete	r12b	#, tmp177
 13207 462e 4421E2   		and	edx, r12d	# _253, tmp177
 13208 4631 4981F8A8 		cmp	r8, 168	# primeCount,
 13208      000000
 13209 4638 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp177
 13210              	# sieve_extend.c:582:         case 1000:          valid_primes = 168;      break;
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13211              		.loc 1 582 42 view .LVU4442
 13212 463c B9A80000 		mov	ecx, 168	# valid_primes,
 13212      00
 13213 4641 410F95C4 		setne	r12b	#, _135
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13214              		.loc 1 582 29 is_stmt 1 view .LVU4443
 13215              	.LVL855:
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13216              		.loc 1 582 54 view .LVU4444
 13217              	# sieve_extend.c:582:         case 1000:          valid_primes = 168;      break;
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13218              		.loc 1 582 9 is_stmt 0 view .LVU4445
 13219 4645 E94EFAFF 		jmp	.L1127	#
 13219      FF
 13220              	.LVL856:
 13221              	.L1122:
 582:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 13222              		.loc 1 582 9 view .LVU4446
 13223 464a 4981F8AF 		cmp	r8, 5761455	# primeCount,
 13223      E95700
 13224 4651 0F94C0   		sete	al	#, tmp187
 13225 4654 21C2     		and	edx, eax	# _253, tmp187
GAS LISTING /tmp/ccIyIA9Z.s 			page 347


 13226 4656 4981F8AF 		cmp	r8, 5761455	# primeCount,
 13226      E95700
 13227 465d 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 13228 4661 410F95C4 		setne	r12b	#, _135
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13229              		.loc 1 587 29 is_stmt 1 view .LVU4447
 13230              	.LVL857:
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13231              		.loc 1 587 54 view .LVU4448
 13232              	# sieve_extend.c:587:         case 100000000:     valid_primes = 5761455;  break;
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13233              		.loc 1 587 42 is_stmt 0 view .LVU4449
 13234 4665 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 13234      00
 13235              	# sieve_extend.c:587:         case 100000000:     valid_primes = 5761455;  break;
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13236              		.loc 1 587 9 view .LVU4450
 13237 466a E929FAFF 		jmp	.L1127	#
 13237      FF
 13238              	.LVL858:
 13239              	.L1120:
 587:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 13240              		.loc 1 587 9 view .LVU4451
 13241 466f 4D85C0   		test	r8, r8	# primeCount
 13242 4672 410F94C3 		sete	r11b	#, tmp191
 13243 4676 4421DA   		and	edx, r11d	# _253, tmp191
 13244 4679 4D85C0   		test	r8, r8	# primeCount
 13245 467c 410F95C4 		setne	r12b	#, _135
 589:sieve_extend.c ****     }
 13246              		.loc 1 589 29 is_stmt 1 view .LVU4452
 589:sieve_extend.c ****     }
 13247              		.loc 1 589 29 is_stmt 0 view .LVU4453
 13248 4680 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 13249              	# sieve_extend.c:589:         default:            valid_primes= 0;
 589:sieve_extend.c ****     }
 13250              		.loc 1 589 41 view .LVU4454
 13251 4684 31C9     		xor	ecx, ecx	# valid_primes
 13252 4686 E90DFAFF 		jmp	.L1127	#
 13252      FF
 13253              	.L1114:
 589:sieve_extend.c ****     }
 13254              		.loc 1 589 41 view .LVU4455
 13255 468b 4981F878 		cmp	r8, 9592	# primeCount,
 13255      250000
 13256 4692 400F94C7 		sete	dil	#, tmp181
 13257 4696 21FA     		and	edx, edi	# _253, tmp181
 13258 4698 4981F878 		cmp	r8, 9592	# primeCount,
 13258      250000
 13259 469f 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 13260 46a3 410F95C4 		setne	r12b	#, _135
 584:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13261              		.loc 1 584 29 is_stmt 1 view .LVU4456
 13262              	.LVL859:
 584:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13263              		.loc 1 584 54 view .LVU4457
 13264              	# sieve_extend.c:584:         case 100000:        valid_primes = 9592;     break;
 584:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
GAS LISTING /tmp/ccIyIA9Z.s 			page 348


 13265              		.loc 1 584 42 is_stmt 0 view .LVU4458
 13266 46a7 B9782500 		mov	ecx, 9592	# valid_primes,
 13266      00
 13267              	# sieve_extend.c:584:         case 100000:        valid_primes = 9592;     break;
 584:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13268              		.loc 1 584 9 view .LVU4459
 13269 46ac E9E7F9FF 		jmp	.L1127	#
 13269      FF
 13270              	.LVL860:
 13271              	.L1149:
 13272              	# sieve_extend.c:584:         case 100000:        valid_primes = 9592;     break;
 584:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 13273              		.loc 1 584 42 view .LVU4460
 13274 46b1 B9782500 		mov	ecx, 9592	# valid_primes,
 13274      00
 13275 46b6 E90FFEFF 		jmp	.L1128	#
 13275      FF
 13276              		.cfi_endproc
 13277              	.LFE71:
 13279              		.section	.rodata.str1.8
 13280 0145 000000   		.align 8
 13281              	.LC15:
 13282 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 13282      653A2025 
 13282      73205B6F 
 13282      7074696F 
 13282      6E735D20 
 13283              		.section	.rodata.str1.1
 13284              	.LC16:
 13285 0031 4F707469 		.string	"Options:\n"
 13285      6F6E733A 
 13285      0A00
 13286              		.section	.rodata.str1.8
 13287 0167 00       		.align 8
 13288              	.LC17:
 13289 0168 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 13289      63686563 
 13289      6B202020 
 13289      20202020 
 13289      20202020 
 13290 01a5 000000   		.align 8
 13291              	.LC18:
 13292 01a8 20202D2D 		.string	"  --help             This help function\n"
 13292      68656C70 
 13292      20202020 
 13292      20202020 
 13292      20202020 
 13293 01d1 00000000 		.align 8
 13293      000000
 13294              	.LC19:
 13295 01d8 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 13295      73686F77 
 13295      203C6D61 
 13295      78696D75 
 13295      6D3E2020 
 13296 0216 0000     		.align 8
 13297              	.LC20:
GAS LISTING /tmp/ccIyIA9Z.s 			page 349


 13298 0218 20202D2D 		.string	"  --time  <seconds>  The maximum time (in seconds) to run passes of the sieve algorithm\n
 13298      74696D65 
 13298      20203C73 
 13298      65636F6E 
 13298      64733E20 
 13299 0271 00000000 		.align 8
 13299      000000
 13300              	.LC21:
 13301 0278 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 13301      74756E65 
 13301      20203C6C 
 13301      6576656C 
 13301      3E202020 
 13302 02c5 000000   		.align 8
 13303              	.LC22:
 13304 02c8 20202020 		.string	"                     1 - fast tuning\n"
 13304      20202020 
 13304      20202020 
 13304      20202020 
 13304      20202020 
 13305 02ee 0000     		.align 8
 13306              	.LC23:
 13307 02f0 20202020 		.string	"                     2 - refined tuning\n"
 13307      20202020 
 13307      20202020 
 13307      20202020 
 13307      20202020 
 13308 0319 00000000 		.align 8
 13308      000000
 13309              	.LC24:
 13310 0320 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 13310      20202020 
 13310      20202020 
 13310      20202020 
 13310      20202020 
 13311 0356 0000     		.align 8
 13312              	.LC25:
 13313 0358 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 13313      76657262 
 13313      6F736520 
 13313      3C6C6576 
 13313      656C3E20 
 13314 0393 00000000 		.align 8
 13314      00
 13315              	.LC26:
 13316 0398 20202020 		.string	"                     1 - show phase progress\n"
 13316      20202020 
 13316      20202020 
 13316      20202020 
 13316      20202020 
 13317 03c6 0000     		.align 8
 13318              	.LC27:
 13319 03c8 20202020 		.string	"                     2 - show general progress within the phase\n"
 13319      20202020 
 13319      20202020 
 13319      20202020 
 13319      20202020 
GAS LISTING /tmp/ccIyIA9Z.s 			page 350


 13320 0409 00000000 		.align 8
 13320      000000
 13321              	.LC28:
 13322 0410 20202020 		.string	"                     3 - show actual work\n"
 13322      20202020 
 13322      20202020 
 13322      20202020 
 13322      20202020 
 13323              		.text
 13324 46bb 0F1F4400 		.p2align 4
 13324      00
 13325              		.globl	usage
 13327              	usage:
 13328              	.LVL861:
 13329              	.LFB72:
 602:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13330              		.loc 1 602 24 is_stmt 1 view -0
 13331              		.cfi_startproc
 602:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13332              		.loc 1 602 24 is_stmt 0 view .LVU4462
 13333 46c0 F30F1EFA 		endbr64	
 13334 46c4 50       		push	rax	#
 13335              		.cfi_def_cfa_offset 16
 13336 46c5 58       		pop	rax	#
 13337              		.cfi_def_cfa_offset 8
 603:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 13338              		.loc 1 603 5 is_stmt 1 view .LVU4463
 13339              	.LVL862:
 13340              	.LBB868:
 13341              	.LBI868:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13342              		.loc 3 98 1 view .LVU4464
 13343              	.LBB869:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13344              		.loc 3 100 3 view .LVU4465
 13345              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13346              		.loc 3 100 10 is_stmt 0 view .LVU4466
 13347 46c6 488D1500 		lea	rdx, .LC15[rip]	#,
 13347      000000
 13348 46cd BE010000 		mov	esi, 1	#,
 13348      00
 13349 46d2 31C0     		xor	eax, eax	#
 13350              	.LBE869:
 13351              	.LBE868:
 13352              	# sieve_extend.c:602: void usage(char *name) {
 602:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13353              		.loc 1 602 24 view .LVU4467
 13354 46d4 4883EC08 		sub	rsp, 8	#,
 13355              		.cfi_def_cfa_offset 16
 13356              	# sieve_extend.c:602: void usage(char *name) {
 602:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 13357              		.loc 1 602 24 view .LVU4468
 13358 46d8 4889F9   		mov	rcx, rdi	# name, tmp111
 13359              	.LBB871:
 13360              	.LBB870:
 13361              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
GAS LISTING /tmp/ccIyIA9Z.s 			page 351


 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13362              		.loc 3 100 10 view .LVU4469
 13363 46db 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 13363      000000
 13364              	.LVL863:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13365              		.loc 3 100 10 view .LVU4470
 13366 46e2 E8000000 		call	__fprintf_chk@PLT	#
 13366      00
 13367              	.LVL864:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13368              		.loc 3 100 10 view .LVU4471
 13369              	.LBE870:
 13370              	.LBE871:
 604:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 13371              		.loc 1 604 5 is_stmt 1 view .LVU4472
 13372              	.LBB872:
 13373              	.LBI872:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13374              		.loc 3 98 1 view .LVU4473
 13375              	.LBB873:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13376              		.loc 3 100 3 view .LVU4474
 13377              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13378              		.loc 3 100 10 is_stmt 0 view .LVU4475
 13379 46e7 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13379      000000
 13380 46ee BA090000 		mov	edx, 9	#,
 13380      00
 13381 46f3 BE010000 		mov	esi, 1	#,
 13381      00
 13382 46f8 488D3D00 		lea	rdi, .LC16[rip]	#,
 13382      000000
 13383 46ff E8000000 		call	fwrite@PLT	#
 13383      00
 13384              	.LVL865:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13385              		.loc 3 100 10 view .LVU4476
 13386              	.LBE873:
 13387              	.LBE872:
 605:sieve_extend.c ****     fprintf(stderr, "  --help             This help function\n");
 13388              		.loc 1 605 5 is_stmt 1 view .LVU4477
 13389              	.LBB874:
 13390              	.LBI874:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13391              		.loc 3 98 1 view .LVU4478
 13392              	.LBB875:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13393              		.loc 3 100 3 view .LVU4479
 13394              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13395              		.loc 3 100 10 is_stmt 0 view .LVU4480
 13396 4704 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13396      000000
 13397 470b BA3C0000 		mov	edx, 60	#,
 13397      00
GAS LISTING /tmp/ccIyIA9Z.s 			page 352


 13398 4710 BE010000 		mov	esi, 1	#,
 13398      00
 13399 4715 488D3D00 		lea	rdi, .LC17[rip]	#,
 13399      000000
 13400 471c E8000000 		call	fwrite@PLT	#
 13400      00
 13401              	.LVL866:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13402              		.loc 3 100 10 view .LVU4481
 13403              	.LBE875:
 13404              	.LBE874:
 606:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 13405              		.loc 1 606 5 is_stmt 1 view .LVU4482
 13406              	.LBB876:
 13407              	.LBI876:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13408              		.loc 3 98 1 view .LVU4483
 13409              	.LBB877:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13410              		.loc 3 100 3 view .LVU4484
 13411              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13412              		.loc 3 100 10 is_stmt 0 view .LVU4485
 13413 4721 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13413      000000
 13414 4728 BA280000 		mov	edx, 40	#,
 13414      00
 13415 472d BE010000 		mov	esi, 1	#,
 13415      00
 13416 4732 488D3D00 		lea	rdi, .LC18[rip]	#,
 13416      000000
 13417 4739 E8000000 		call	fwrite@PLT	#
 13417      00
 13418              	.LVL867:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13419              		.loc 3 100 10 view .LVU4486
 13420              	.LBE877:
 13421              	.LBE876:
 607:sieve_extend.c ****     #ifdef _OPENMP
 13422              		.loc 1 607 5 is_stmt 1 view .LVU4487
 13423              	.LBB878:
 13424              	.LBI878:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13425              		.loc 3 98 1 view .LVU4488
 13426              	.LBB879:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13427              		.loc 3 100 3 view .LVU4489
 13428              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13429              		.loc 3 100 10 is_stmt 0 view .LVU4490
 13430 473e 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13430      000000
 13431 4745 BA3D0000 		mov	edx, 61	#,
 13431      00
 13432 474a BE010000 		mov	esi, 1	#,
 13432      00
 13433 474f 488D3D00 		lea	rdi, .LC19[rip]	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 353


 13433      000000
 13434 4756 E8000000 		call	fwrite@PLT	#
 13434      00
 13435              	.LVL868:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13436              		.loc 3 100 10 view .LVU4491
 13437              	.LBE879:
 13438              	.LBE878:
 612:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 13439              		.loc 1 612 5 is_stmt 1 view .LVU4492
 13440              	.LBB880:
 13441              	.LBI880:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13442              		.loc 3 98 1 view .LVU4493
 13443              	.LBB881:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13444              		.loc 3 100 3 view .LVU4494
 13445              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13446              		.loc 3 100 10 is_stmt 0 view .LVU4495
 13447 475b 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13447      000000
 13448 4762 BA580000 		mov	edx, 88	#,
 13448      00
 13449 4767 BE010000 		mov	esi, 1	#,
 13449      00
 13450 476c 488D3D00 		lea	rdi, .LC20[rip]	#,
 13450      000000
 13451 4773 E8000000 		call	fwrite@PLT	#
 13451      00
 13452              	.LVL869:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13453              		.loc 3 100 10 view .LVU4496
 13454              	.LBE881:
 13455              	.LBE880:
 613:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 13456              		.loc 1 613 5 is_stmt 1 view .LVU4497
 13457              	.LBB882:
 13458              	.LBI882:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13459              		.loc 3 98 1 view .LVU4498
 13460              	.LBB883:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13461              		.loc 3 100 3 view .LVU4499
 13462              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13463              		.loc 3 100 10 is_stmt 0 view .LVU4500
 13464 4778 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13464      000000
 13465 477f BA4C0000 		mov	edx, 76	#,
 13465      00
 13466 4784 BE010000 		mov	esi, 1	#,
 13466      00
 13467 4789 488D3D00 		lea	rdi, .LC21[rip]	#,
 13467      000000
 13468 4790 E8000000 		call	fwrite@PLT	#
 13468      00
GAS LISTING /tmp/ccIyIA9Z.s 			page 354


 13469              	.LVL870:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13470              		.loc 3 100 10 view .LVU4501
 13471              	.LBE883:
 13472              	.LBE882:
 614:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 13473              		.loc 1 614 5 is_stmt 1 view .LVU4502
 13474              	.LBB884:
 13475              	.LBI884:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13476              		.loc 3 98 1 view .LVU4503
 13477              	.LBB885:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13478              		.loc 3 100 3 view .LVU4504
 13479              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13480              		.loc 3 100 10 is_stmt 0 view .LVU4505
 13481 4795 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13481      000000
 13482 479c BA250000 		mov	edx, 37	#,
 13482      00
 13483 47a1 BE010000 		mov	esi, 1	#,
 13483      00
 13484 47a6 488D3D00 		lea	rdi, .LC22[rip]	#,
 13484      000000
 13485 47ad E8000000 		call	fwrite@PLT	#
 13485      00
 13486              	.LVL871:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13487              		.loc 3 100 10 view .LVU4506
 13488              	.LBE885:
 13489              	.LBE884:
 615:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 13490              		.loc 1 615 5 is_stmt 1 view .LVU4507
 13491              	.LBB886:
 13492              	.LBI886:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13493              		.loc 3 98 1 view .LVU4508
 13494              	.LBB887:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13495              		.loc 3 100 3 view .LVU4509
 13496              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13497              		.loc 3 100 10 is_stmt 0 view .LVU4510
 13498 47b2 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13498      000000
 13499 47b9 BA280000 		mov	edx, 40	#,
 13499      00
 13500 47be BE010000 		mov	esi, 1	#,
 13500      00
 13501 47c3 488D3D00 		lea	rdi, .LC23[rip]	#,
 13501      000000
 13502 47ca E8000000 		call	fwrite@PLT	#
 13502      00
 13503              	.LVL872:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13504              		.loc 3 100 10 view .LVU4511
GAS LISTING /tmp/ccIyIA9Z.s 			page 355


 13505              	.LBE887:
 13506              	.LBE886:
 616:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 13507              		.loc 1 616 5 is_stmt 1 view .LVU4512
 13508              	.LBB888:
 13509              	.LBI888:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13510              		.loc 3 98 1 view .LVU4513
 13511              	.LBB889:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13512              		.loc 3 100 3 view .LVU4514
 13513              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13514              		.loc 3 100 10 is_stmt 0 view .LVU4515
 13515 47cf 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13515      000000
 13516 47d6 BA350000 		mov	edx, 53	#,
 13516      00
 13517 47db BE010000 		mov	esi, 1	#,
 13517      00
 13518 47e0 488D3D00 		lea	rdi, .LC24[rip]	#,
 13518      000000
 13519 47e7 E8000000 		call	fwrite@PLT	#
 13519      00
 13520              	.LVL873:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13521              		.loc 3 100 10 view .LVU4516
 13522              	.LBE889:
 13523              	.LBE888:
 617:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 13524              		.loc 1 617 5 is_stmt 1 view .LVU4517
 13525              	.LBB890:
 13526              	.LBI890:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13527              		.loc 3 98 1 view .LVU4518
 13528              	.LBB891:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13529              		.loc 3 100 3 view .LVU4519
 13530              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13531              		.loc 3 100 10 is_stmt 0 view .LVU4520
 13532 47ec 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13532      000000
 13533 47f3 BA3A0000 		mov	edx, 58	#,
 13533      00
 13534 47f8 BE010000 		mov	esi, 1	#,
 13534      00
 13535 47fd 488D3D00 		lea	rdi, .LC25[rip]	#,
 13535      000000
 13536 4804 E8000000 		call	fwrite@PLT	#
 13536      00
 13537              	.LVL874:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13538              		.loc 3 100 10 view .LVU4521
 13539              	.LBE891:
 13540              	.LBE890:
 618:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
GAS LISTING /tmp/ccIyIA9Z.s 			page 356


 13541              		.loc 1 618 5 is_stmt 1 view .LVU4522
 13542              	.LBB892:
 13543              	.LBI892:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13544              		.loc 3 98 1 view .LVU4523
 13545              	.LBB893:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13546              		.loc 3 100 3 view .LVU4524
 13547              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13548              		.loc 3 100 10 is_stmt 0 view .LVU4525
 13549 4809 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13549      000000
 13550 4810 BA2D0000 		mov	edx, 45	#,
 13550      00
 13551 4815 BE010000 		mov	esi, 1	#,
 13551      00
 13552 481a 488D3D00 		lea	rdi, .LC26[rip]	#,
 13552      000000
 13553 4821 E8000000 		call	fwrite@PLT	#
 13553      00
 13554              	.LVL875:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13555              		.loc 3 100 10 view .LVU4526
 13556              	.LBE893:
 13557              	.LBE892:
 619:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 13558              		.loc 1 619 5 is_stmt 1 view .LVU4527
 13559              	.LBB894:
 13560              	.LBI894:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13561              		.loc 3 98 1 view .LVU4528
 13562              	.LBB895:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13563              		.loc 3 100 3 view .LVU4529
 13564              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13565              		.loc 3 100 10 is_stmt 0 view .LVU4530
 13566 4826 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13566      000000
 13567 482d BA400000 		mov	edx, 64	#,
 13567      00
 13568 4832 BE010000 		mov	esi, 1	#,
 13568      00
 13569 4837 488D3D00 		lea	rdi, .LC27[rip]	#,
 13569      000000
 13570 483e E8000000 		call	fwrite@PLT	#
 13570      00
 13571              	.LVL876:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13572              		.loc 3 100 10 view .LVU4531
 13573              	.LBE895:
 13574              	.LBE894:
 620:sieve_extend.c ****     exit(1);
 13575              		.loc 1 620 5 is_stmt 1 view .LVU4532
 13576              	.LBB896:
 13577              	.LBI896:
GAS LISTING /tmp/ccIyIA9Z.s 			page 357


  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13578              		.loc 3 98 1 view .LVU4533
 13579              	.LBB897:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13580              		.loc 3 100 3 view .LVU4534
 13581              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13582              		.loc 3 100 10 is_stmt 0 view .LVU4535
 13583 4843 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 13583      000000
 13584 484a 488D3D00 		lea	rdi, .LC28[rip]	#,
 13584      000000
 13585 4851 BA2A0000 		mov	edx, 42	#,
 13585      00
 13586 4856 BE010000 		mov	esi, 1	#,
 13586      00
 13587 485b E8000000 		call	fwrite@PLT	#
 13587      00
 13588              	.LVL877:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 13589              		.loc 3 100 10 view .LVU4536
 13590              	.LBE897:
 13591              	.LBE896:
 621:sieve_extend.c **** }
 13592              		.loc 1 621 5 is_stmt 1 view .LVU4537
 13593 4860 BF010000 		mov	edi, 1	#,
 13593      00
 13594 4865 E8000000 		call	exit@PLT	#
 13594      00
 13595              	.LVL878:
 13596              		.cfi_endproc
 13597              	.LFE72:
 13599              		.section	.rodata.str1.1
 13600              	.LC31:
 13601 003b 2D2D6865 		.string	"--help"
 13601      6C7000
 13602              	.LC32:
 13603 0042 2D2D7665 		.string	"--verbose"
 13603      72626F73 
 13603      6500
 13604              	.LC33:
 13605 004c 4E6F2076 		.string	"No verbose level specified\n"
 13605      6572626F 
 13605      7365206C 
 13605      6576656C 
 13605      20737065 
 13606              	.LC34:
 13607 0068 256400   		.string	"%d"
 13608              		.section	.rodata.str1.8
 13609 043b 00000000 		.align 8
 13609      00
 13610              	.LC35:
 13611 0440 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 13611      723A2049 
 13611      6E76616C 
 13611      6964206D 
 13611      65617375 
GAS LISTING /tmp/ccIyIA9Z.s 			page 358


 13612              		.section	.rodata.str1.1
 13613              	.LC36:
 13614 006b 56657262 		.string	"Verbose level set to %d\n"
 13614      6F736520 
 13614      6C657665 
 13614      6C207365 
 13614      7420746F 
 13615              	.LC37:
 13616 0084 2D2D6368 		.string	"--check"
 13616      65636B00 
 13617              	.LC38:
 13618 008c 2D2D7475 		.string	"--tune"
 13618      6E6500
 13619              	.LC39:
 13620 0093 4E6F2074 		.string	"No tune level specified\n"
 13620      756E6520 
 13620      6C657665 
 13620      6C207370 
 13620      65636966 
 13621              		.section	.rodata.str1.8
 13622 0465 000000   		.align 8
 13623              	.LC40:
 13624 0468 4572726F 		.string	"Error: Invalid tune level: %s\n"
 13624      723A2049 
 13624      6E76616C 
 13624      69642074 
 13624      756E6520 
 13625              		.section	.rodata.str1.1
 13626              	.LC41:
 13627 00ac 54756E65 		.string	"Tune level set to %d\n"
 13627      206C6576 
 13627      656C2073 
 13627      65742074 
 13627      6F202564 
 13628              	.LC42:
 13629 00c2 2D2D7469 		.string	"--time"
 13629      6D6500
 13630              	.LC43:
 13631 00c9 4E6F2074 		.string	"No time specified\n"
 13631      696D6520 
 13631      73706563 
 13631      69666965 
 13631      640A00
 13632              	.LC44:
 13633 00dc 256C6600 		.string	"%lf"
 13634              	.LC45:
 13635 00e0 4572726F 		.string	"Error: Invalid max time: %s\n"
 13635      723A2049 
 13635      6E76616C 
 13635      6964206D 
 13635      61782074 
 13636              		.section	.rodata.str1.8
 13637 0487 00       		.align 8
 13638              	.LC46:
 13639 0488 4D617820 		.string	"Max time is set to %d seconds\n"
 13639      74696D65 
 13639      20697320 
GAS LISTING /tmp/ccIyIA9Z.s 			page 359


 13639      73657420 
 13639      746F2025 
 13640              		.section	.rodata.str1.1
 13641              	.LC47:
 13642 00fd 2D2D7368 		.string	"--show"
 13642      6F7700
 13643              	.LC48:
 13644 0104 4E6F2073 		.string	"No show maximum specified\n"
 13644      686F7720 
 13644      6D617869 
 13644      6D756D20 
 13644      73706563 
 13645              	.LC49:
 13646 011f 256A7500 		.string	"%ju"
 13647              		.section	.rodata.str1.8
 13648 04a7 00       		.align 8
 13649              	.LC50:
 13650 04a8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 13650      723A2049 
 13650      6E76616C 
 13650      69642073 
 13650      686F7720 
 13651              		.section	.rodata.str1.1
 13652              	.LC51:
 13653 0123 53686F77 		.string	"Show maximum set to %ju\n"
 13653      206D6178 
 13653      696D756D 
 13653      20736574 
 13653      20746F20 
 13654              	.LC52:
 13655 013c 2D2D7468 		.string	"--threads"
 13655      72656164 
 13655      7300
 13656              	.LC53:
 13657 0146 4E6F2074 		.string	"No thread maximum specified\n"
 13657      68726561 
 13657      64206D61 
 13657      78696D75 
 13657      6D207370 
 13658              		.section	.rodata.str1.8
 13659 04c9 00000000 		.align 8
 13659      000000
 13660              	.LC54:
 13661 04d0 54686973 		.string	"This is the version without multithreading - ignoring threads"
 13661      20697320 
 13661      74686520 
 13661      76657273 
 13661      696F6E20 
 13662              		.section	.rodata.str1.1
 13663              	.LC55:
 13664 0163 496E7661 		.string	"Invalid size %s\n"
 13664      6C696420 
 13664      73697A65 
 13664      2025730A 
 13664      00
 13665              	.LC56:
 13666 0174 56616C69 		.string	"Validating..."
GAS LISTING /tmp/ccIyIA9Z.s 			page 360


 13666      64617469 
 13666      6E672E2E 
 13666      2E00
 13667              	.LC57:
 13668 0182 2E2E2E43 		.string	"...Checking size %ju ..."
 13668      6865636B 
 13668      696E6720 
 13668      73697A65 
 13668      20256A75 
 13669              	.LC58:
 13670 019b 2E626C6F 		.string	".blocksize %ju-"
 13670      636B7369 
 13670      7A652025 
 13670      6A752D00 
 13671              	.LC59:
 13672 01ab 76616C69 		.string	"valid;"
 13672      643B00
 13673              	.LC60:
 13674 01b2 76616C69 		.string	"valid"
 13674      6400
 13675              	.LC61:
 13676 01b8 76616C69 		.string	"valid algorithm"
 13676      6420616C 
 13676      676F7269 
 13676      74686D00 
 13677              	.LC62:
 13678 01c8 54756E69 		.string	"Tuning..."
 13678      6E672E2E 
 13678      2E00
 13679              	.LC63:
 13680 01d2 2E283E29 		.string	".(>)"
 13680      00
 13681              		.section	.rodata.str1.8
 13682 050e 0000     		.align 8
 13683              	.LC64:
 13684 0510 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 13684      6B73697A 
 13684      655F6269 
 13684      74732025 
 13684      31306A75 
 13685              		.section	.rodata.str1.1
 13686              	.LC65:
 13687 01d7 2E2E2E2E 		.string	"...."
 13687      00
 13688              		.section	.rodata.str1.8
 13689 0597 00       		.align 8
 13690              	.LC66:
 13691 0598 0D54756E 		.string	"\rTuning...tuning %ju options.."
 13691      696E672E 
 13691      2E2E7475 
 13691      6E696E67 
 13691      20256A75 
 13692              		.section	.rodata.str1.1
 13693              	.LC67:
 13694 01dc 0D54756E 		.string	"\rTuning...tuned %ju options.."
 13694      696E672E 
 13694      2E2E7475 
GAS LISTING /tmp/ccIyIA9Z.s 			page 361


 13694      6E656420 
 13694      256A7520 
 13695              	.LC68:
 13696 01fa 54756E69 		.string	"Tuning...tuned %ju options..\n"
 13696      6E672E2E 
 13696      2E74756E 
 13696      65642025 
 13696      6A75206F 
 13697              		.section	.rodata.str1.8
 13698 05b7 00       		.align 8
 13699              	.LC69:
 13700 05b8 256A7520 		.string	"%ju options. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; best ve
 13700      6F707469 
 13700      6F6E732E 
 13700      20496E69 
 13700      74616C20 
 13701              		.section	.rodata.str1.1
 13702              	.LC70:
 13703 0218 42657374 		.string	"Best options"
 13703      206F7074 
 13703      696F6E73 
 13703      00
 13704              	.LC71:
 13705 0225 28256A75 		.string	"(%ju) "
 13705      292000
 13706              	.LC72:
 13707 022c 2E2E2E00 		.string	"..."
 13708              		.section	.rodata.str1.8
 13709 061f 00       		.align 8
 13710              	.LC74:
 13711 0620 0D54756E 		.string	"\rTuning...found %ju options..benchmarking step %ju - tuning %3ju options"
 13711      696E672E 
 13711      2E2E666F 
 13711      756E6420 
 13711      256A7520 
 13712              		.section	.rodata.str1.1
 13713              	.LC75:
 13714 0230 2E426573 		.string	".Best result:"
 13714      74207265 
 13714      73756C74 
 13714      3A00
 13715              		.section	.rodata.str1.8
 13716 0669 00000000 		.align 8
 13716      000000
 13717              	.LC76:
 13718 0670 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju and %ju threads for %.1f seconds - 
 13718      686D6172 
 13718      6B696E67 
 13718      2E2E2E20 
 13718      77697468 
 13719 06d3 00000000 		.align 8
 13719      00
 13720              	.LC77:
 13721 06d8 726F6769 		.string	"rogiervandam_extend;%ju;%f;%ju;algorithm=other,faithful=yes,bits=1\n"
 13721      65727661 
 13721      6E64616D 
 13721      5F657874 
GAS LISTING /tmp/ccIyIA9Z.s 			page 362


 13721      656E643B 
 13722 071c 00000000 		.align 8
 13723              	.LC78:
 13724 0720 1B5B303B 		.string	"\033[0;32m(Passes - per %.1f seconds: %f - per second \033[1;33m%.1f\033[0;32m)\033[0m\n"
 13724      33326D28 
 13724      50617373 
 13724      6573202D 
 13724      20706572 
 13725              		.section	.rodata.str1.1
 13726              	.LC79:
 13727 023e 53686F77 		.string	"Show result set:"
 13727      20726573 
 13727      756C7420 
 13727      7365743A 
 13727      00
 13728              		.section	.text.startup,"ax",@progbits
 13729              		.p2align 4
 13730              		.globl	main
 13732              	main:
 13733              	.LVL879:
 13734              	.LFB77:
 672:sieve_extend.c **** 
 673:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
 674:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 675:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 676:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
 677:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
 678:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
 679:sieve_extend.c **** }
 680:sieve_extend.c **** 
 681:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, counter_t threads, int option_ver
 682:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 683:sieve_extend.c **** 
 684:sieve_extend.c ****     double best_avg = 0;
 685:sieve_extend.c ****     best_blocksize_bits = 0;
 686:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 687:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 688:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 689:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 690:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 691:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 692:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 693:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 694:sieve_extend.c ****     double sample_duration = default_sample_duration;
 695:sieve_extend.c **** 
 696:sieve_extend.c ****     // determines the size of the resultset
 697:sieve_extend.c ****     switch (tune_level) {
 698:sieve_extend.c ****         case 1:
 699:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
 700:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
 701:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
 702:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
 703:sieve_extend.c ****             sample_max = 16;
 704:sieve_extend.c ****             sample_duration = 0.1;
 705:sieve_extend.c ****             break;
 706:sieve_extend.c ****         case 2:
 707:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
GAS LISTING /tmp/ccIyIA9Z.s 			page 363


 708:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
 709:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
 710:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
 711:sieve_extend.c ****             sample_max = 16;
 712:sieve_extend.c ****             sample_duration = 0.2;
 713:sieve_extend.c ****             break;
 714:sieve_extend.c ****         case 3:
 715:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
 716:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
 717:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
 718:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
 719:sieve_extend.c ****             sample_max = 16;
 720:sieve_extend.c ****             sample_duration = 0.2;
 721:sieve_extend.c ****             break;
 722:sieve_extend.c ****     }
 723:sieve_extend.c ****     
 724:sieve_extend.c ****     verbose(2) printf("\n");
 725:sieve_extend.c ****     verbose_at(1) { printf("Tuning..."); fflush(stdout); }
 726:sieve_extend.c ****     verbose(2) printf("\n");
 727:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 728:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 729:sieve_extend.c ****     counter_t tuning_results=0;
 730:sieve_extend.c ****     counter_t tuning_result_index=0;
 731:sieve_extend.c ****     
 732:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= 0; smallstep_faster += smallstep_faste
 733:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 734:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 735:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 736:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 737:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 738:sieve_extend.c **** 
 739:sieve_extend.c ****                         // set variables
 740:sieve_extend.c ****                         tuning_results++;
 741:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 742:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 743:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 744:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 745:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 746:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 747:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 748:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 749:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 750:sieve_extend.c ****                         tuning_result[tuning_result_index].threads = threads;
 751:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 752:sieve_extend.c **** 
 753:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
 754:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 755:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 756:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 757:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 758:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 759:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 760:sieve_extend.c ****                         }
 761:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
 762:sieve_extend.c ****                         tuning_result_index++;
 763:sieve_extend.c ****                         verbose_at(1) { printf("\rTuning...tuning %ju options..",(uintmax_t)tuning_
 764:sieve_extend.c ****                     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 364


 765:sieve_extend.c ****                 }
 766:sieve_extend.c ****             }
 767:sieve_extend.c ****         }
 768:sieve_extend.c ****     }
 769:sieve_extend.c ****     verbose_at(1) { printf("\rTuning...tuned %ju options..",(uintmax_t)tuning_results); }
 770:sieve_extend.c ****     verbose(2) { printf("Tuning...tuned %ju options..\n",(uintmax_t)tuning_results); }
 771:sieve_extend.c ****     verbose(2) {
 772:sieve_extend.c ****         printf("%ju options. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 773:sieve_extend.c ****         printf("Best options\n");
 774:sieve_extend.c ****     }
 775:sieve_extend.c **** 
 776:sieve_extend.c ****     counter_t step=0;
 777:sieve_extend.c ****     counter_t tuning_results_max = tuning_results;
 778:sieve_extend.c ****     while (tuning_results>4) {
 779:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 780:sieve_extend.c ****         step++;
 781:sieve_extend.c ****         verbose(2) {
 782:sieve_extend.c ****             tuning_result_index = 0;
 783:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 784:sieve_extend.c ****             fflush(stdout);
 785:sieve_extend.c ****             verbose(3) {
 786:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(40,tuning_results); t
 787:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 788:sieve_extend.c ****                 }
 789:sieve_extend.c ****             }
 790:sieve_extend.c ****         }
 791:sieve_extend.c **** 
 792:sieve_extend.c ****         tuning_results = tuning_results / 2;
 793:sieve_extend.c **** 
 794:sieve_extend.c ****         verbose(2) printf("\n");
 795:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
 796:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 797:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 798:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 799:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 800:sieve_extend.c ****         }
 801:sieve_extend.c ****         verbose(2) printf("\n");
 802:sieve_extend.c ****         
 803:sieve_extend.c ****     }
 804:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
 805:sieve_extend.c ****     verbose(2) {
 806:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(best_result);
 807:sieve_extend.c ****     }
 808:sieve_extend.c ****     verbose(1) printf("\n");
 809:sieve_extend.c **** 
 810:sieve_extend.c ****     free(tuning_result);
 811:sieve_extend.c ****     return best_result;
 812:sieve_extend.c **** }
 813:sieve_extend.c **** 
 814:sieve_extend.c **** 
 815:sieve_extend.c **** int main(int argc, char *argv[]) {
 13735              		.loc 1 815 34 view -0
 13736              		.cfi_startproc
 13737              		.loc 1 815 34 is_stmt 0 view .LVU4539
 13738 0000 F30F1EFA 		endbr64	
 13739 0004 4157     		push	r15	#
 13740              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccIyIA9Z.s 			page 365


 13741              		.cfi_offset 15, -16
 13742 0006 4156     		push	r14	#
 13743              		.cfi_def_cfa_offset 24
 13744              		.cfi_offset 14, -24
 13745 0008 4155     		push	r13	#
 13746              		.cfi_def_cfa_offset 32
 13747              		.cfi_offset 13, -32
 13748 000a 4154     		push	r12	#
 13749              		.cfi_def_cfa_offset 40
 13750              		.cfi_offset 12, -40
 13751 000c 55       		push	rbp	#
 13752              		.cfi_def_cfa_offset 48
 13753              		.cfi_offset 6, -48
 13754 000d 53       		push	rbx	#
 13755              		.cfi_def_cfa_offset 56
 13756              		.cfi_offset 3, -56
 13757 000e 4881ECD8 		sub	rsp, 216	#,
 13757      000000
 13758              		.cfi_def_cfa_offset 272
 13759              	# sieve_extend.c:815: int main(int argc, char *argv[]) {
 13760              		.loc 1 815 34 view .LVU4540
 13761 0015 64488B04 		mov	rax, QWORD PTR fs:40	# tmp671, MEM[(<address-space-1> long unsigned int *)40B]
 13761      25280000 
 13761      00
 13762 001e 48898424 		mov	QWORD PTR 200[rsp], rax	# D.7358, tmp671
 13762      C8000000 
 13763 0026 31C0     		xor	eax, eax	# tmp671
 816:sieve_extend.c ****     
 817:sieve_extend.c ****     // initialize options
 818:sieve_extend.c ****     double option_max_time = default_max_time;
 13764              		.loc 1 818 5 is_stmt 1 view .LVU4541
 13765              	# sieve_extend.c:818:     double option_max_time = default_max_time;
 13766              		.loc 1 818 12 is_stmt 0 view .LVU4542
 13767 0028 488B0500 		mov	rax, QWORD PTR .LC30[rip]	# tmp673,
 13767      000000
 13768              	# sieve_extend.c:819:     counter_t option_maxFactor  = default_sieve_limit;
 819:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 13769              		.loc 1 819 15 view .LVU4543
 13770 002f 48C78424 		mov	QWORD PTR 144[rsp], 1000000	# option_maxFactor,
 13770      90000000 
 13770      40420F00 
 13771              	# sieve_extend.c:818:     double option_max_time = default_max_time;
 818:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 13772              		.loc 1 818 12 view .LVU4544
 13773 003b 48898424 		mov	QWORD PTR 136[rsp], rax	# option_max_time, tmp673
 13773      88000000 
 13774              		.loc 1 819 5 is_stmt 1 view .LVU4545
 820:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 13775              		.loc 1 820 5 view .LVU4546
 13776              	# sieve_extend.c:820:     counter_t option_showMaxFactor = default_showMaxFactor;
 13777              		.loc 1 820 15 is_stmt 0 view .LVU4547
 13778 0043 48C78424 		mov	QWORD PTR 152[rsp], 0	# option_showMaxFactor,
 13778      98000000 
 13778      00000000 
 821:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 13779              		.loc 1 821 5 is_stmt 1 view .LVU4548
 13780              	# sieve_extend.c:821:     int option_verboselevel = default_verbose_level;
GAS LISTING /tmp/ccIyIA9Z.s 			page 366


 13781              		.loc 1 821 9 is_stmt 0 view .LVU4549
 13782 004f C7842480 		mov	DWORD PTR 128[rsp], 0	# option_verboselevel,
 13782      00000000 
 13782      000000
 822:sieve_extend.c ****     int option_check = default_check_level;
 13783              		.loc 1 822 5 is_stmt 1 view .LVU4550
 13784              	.LVL880:
 823:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 13785              		.loc 1 823 5 view .LVU4551
 13786              	# sieve_extend.c:823:     int option_tunelevel = default_tune_level;
 13787              		.loc 1 823 9 is_stmt 0 view .LVU4552
 13788 005a C7842484 		mov	DWORD PTR 132[rsp], 1	# option_tunelevel,
 13788      00000001 
 13788      000000
 824:sieve_extend.c ****     int option_threads = 1;
 13789              		.loc 1 824 5 is_stmt 1 view .LVU4553
 13790              	.LVL881:
 825:sieve_extend.c ****     #ifdef _OPENMP
 826:sieve_extend.c ****     int max_threads = omp_get_max_threads();
 827:sieve_extend.c ****     option_threads = max_threads;
 828:sieve_extend.c ****     #endif
 829:sieve_extend.c **** 
 830:sieve_extend.c ****     // processing command line changes to options
 831:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 13791              		.loc 1 831 5 view .LVU4554
 13792              	.LBB1029:
 13793              		.loc 1 831 10 view .LVU4555
 13794              		.loc 1 831 21 view .LVU4556
 13795              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 13796              		.loc 1 831 5 is_stmt 0 view .LVU4557
 13797 0065 83FF01   		cmp	edi, 1	# argc,
 13798 0068 0F8E9101 		jle	.L1268	#,
 13798      0000
 13799 006e 89FD     		mov	ebp, edi	# argc, tmp598
 13800 0070 4989F4   		mov	r12, rsi	# argv, tmp599
 13801              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 13802              		.loc 1 831 14 view .LVU4558
 13803 0073 BB010000 		mov	ebx, 1	# arg,
 13803      00
 13804 0078 4C8D2D00 		lea	r13, .LC31[rip]	# tmp512,
 13804      000000
 13805              	# sieve_extend.c:833:         else if (strcmp(argv[arg], "--verbose")==0) {
 832:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 833:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13806              		.loc 1 833 18 view .LVU4559
 13807 007f 4C8D3500 		lea	r14, .LC32[rip]	# tmp524,
 13807      000000
 13808 0086 EB6A     		jmp	.L1267	#
 13809              	.LVL882:
 13810 0088 0F1F8400 		.p2align 4,,10
 13810      00000000 
 13811              		.p2align 3
 13812              	.L1402:
 834:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 13813              		.loc 1 834 13 is_stmt 1 view .LVU4560
 13814              	# sieve_extend.c:834:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\
 13815              		.loc 1 834 16 is_stmt 0 view .LVU4561
GAS LISTING /tmp/ccIyIA9Z.s 			page 367


 13816 0090 FFC3     		inc	ebx	# arg
 13817              	.LVL883:
 13818              		.loc 1 834 16 view .LVU4562
 13819 0092 39DD     		cmp	ebp, ebx	# argc, arg
 13820 0094 0F8E8911 		jle	.L1400	#,
 13820      0000
 835:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 13821              		.loc 1 835 13 is_stmt 1 view .LVU4563
 13822              	# sieve_extend.c:835:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 13823              		.loc 1 835 28 is_stmt 0 view .LVU4564
 13824 009a 4F8D7C1C 		lea	r15, 8[r12+r11]	# _16,
 13824      08
 13825              	# sieve_extend.c:835:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 13826              		.loc 1 835 17 view .LVU4565
 13827 009f 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 13828 00a2 31C0     		xor	eax, eax	#
 13829 00a4 488D9424 		lea	rdx, 128[rsp]	# tmp338,
 13829      80000000 
 13830 00ac 488D3500 		lea	rsi, .LC34[rip]	#,
 13830      000000
 13831 00b3 E8000000 		call	__isoc99_sscanf@PLT	#
 13831      00
 13832              	.LVL884:
 13833              	# sieve_extend.c:835:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 13834              		.loc 1 835 16 view .LVU4566
 13835 00b8 83F801   		cmp	eax, 1	# tmp600,
 13836 00bb 0F857306 		jne	.L1272	#,
 13836      0000
 13837              	# sieve_extend.c:835:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 13838              		.loc 1 835 91 discriminator 1 view .LVU4567
 13839 00c1 8B942480 		mov	edx, DWORD PTR 128[rsp]	# option_verboselevel.18_19, option_verboselevel
 13839      000000
 13840              	# sieve_extend.c:835:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_
 13841              		.loc 1 835 68 discriminator 1 view .LVU4568
 13842 00c8 83FA04   		cmp	edx, 4	# option_verboselevel.18_19,
 13843 00cb 0F8F6306 		jg	.L1272	#,
 13843      0000
 836:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
 837:sieve_extend.c ****             }
 838:sieve_extend.c ****             verbose(1) printf("Verbose level set to %d\n",option_verboselevel);
 13844              		.loc 1 838 13 is_stmt 1 view .LVU4569
 13845 00d1 85D2     		test	edx, edx	# option_verboselevel.18_19
 13846 00d3 7E13     		jle	.L1274	#,
 13847              		.loc 1 838 24 discriminator 1 view .LVU4570
 13848              	.LVL885:
 13849              	.LBB1030:
 13850              	.LBI1030:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13851              		.loc 3 105 1 discriminator 1 view .LVU4571
 13852              	.LBB1031:
 13853              		.loc 3 107 3 discriminator 1 view .LVU4572
 13854              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13855              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4573
 13856 00d5 488D3500 		lea	rsi, .LC36[rip]	#,
 13856      000000
 13857 00dc BF010000 		mov	edi, 1	#,
 13857      00
GAS LISTING /tmp/ccIyIA9Z.s 			page 368


 13858 00e1 31C0     		xor	eax, eax	#
 13859 00e3 E8000000 		call	__printf_chk@PLT	#
 13859      00
 13860              	.LVL886:
 13861              	.L1274:
 13862              		.loc 3 107 10 discriminator 1 view .LVU4574
 13863              	.LBE1031:
 13864              	.LBE1030:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13865              		.loc 1 831 33 is_stmt 1 discriminator 2 view .LVU4575
 13866              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13867              		.loc 1 831 36 is_stmt 0 discriminator 2 view .LVU4576
 13868 00e8 FFC3     		inc	ebx	# arg
 13869              	.LVL887:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13870              		.loc 1 831 21 is_stmt 1 discriminator 2 view .LVU4577
 13871              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13872              		.loc 1 831 5 is_stmt 0 discriminator 2 view .LVU4578
 13873 00ea 39DD     		cmp	ebp, ebx	# argc, arg
 13874 00ec 0F8EFE00 		jle	.L1401	#,
 13874      0000
 13875              	.LVL888:
 13876              	.L1267:
 832:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13877              		.loc 1 832 9 is_stmt 1 view .LVU4579
 13878              	# sieve_extend.c:832:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 832:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13879              		.loc 1 832 24 is_stmt 0 view .LVU4580
 13880 00f2 4C63DB   		movsx	r11, ebx	# arg, arg
 13881 00f5 49C1E303 		sal	r11, 3	# _2,
 13882 00f9 4F8D3C1C 		lea	r15, [r12+r11]	# _3,
 13883              	# sieve_extend.c:832:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 832:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13884              		.loc 1 832 13 view .LVU4581
 13885 00fd 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 13886 0100 41B90700 		mov	r9d, 7	# tmp327,
 13886      0000
 13887 0106 4C89C6   		mov	rsi, r8	# _4, _4
 13888 0109 4C89EF   		mov	rdi, r13	# tmp326, tmp512
 13889 010c 4C89C9   		mov	rcx, r9	# tmp539, tmp327
 13890 010f F3A6     		repz cmpsb
 13891 0111 0F97C2   		seta	dl	#, tmp328
 13892 0114 80DA00   		sbb	dl, 0	# _5
 13893              	# sieve_extend.c:832:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 832:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 13894              		.loc 1 832 12 view .LVU4582
 13895 0117 84D2     		test	dl, dl	# _5
 13896 0119 0F843206 		je	.L1399	#,
 13896      0000
 833:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 13897              		.loc 1 833 14 is_stmt 1 view .LVU4583
 13898              	# sieve_extend.c:833:         else if (strcmp(argv[arg], "--verbose")==0) {
 833:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 13899              		.loc 1 833 18 is_stmt 0 view .LVU4584
 13900 011f 41BA0A00 		mov	r10d, 10	# tmp333,
GAS LISTING /tmp/ccIyIA9Z.s 			page 369


 13900      0000
 13901 0125 4C89C6   		mov	rsi, r8	# _4, _4
 13902 0128 4C89F7   		mov	rdi, r14	# tmp332, tmp524
 13903 012b 4C89D1   		mov	rcx, r10	# tmp541, tmp333
 13904 012e F3A6     		repz cmpsb
 13905 0130 0F97C0   		seta	al	#, tmp334
 13906 0133 1C00     		sbb	al, 0	# _11
 13907              	# sieve_extend.c:833:         else if (strcmp(argv[arg], "--verbose")==0) {
 833:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 13908              		.loc 1 833 17 view .LVU4585
 13909 0135 84C0     		test	al, al	# _11
 13910 0137 0F8453FF 		je	.L1402	#,
 13910      FFFF
 839:sieve_extend.c ****         } 
 840:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 13911              		.loc 1 840 14 is_stmt 1 view .LVU4586
 13912              	# sieve_extend.c:840:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 13913              		.loc 1 840 18 is_stmt 0 view .LVU4587
 13914 013d B9080000 		mov	ecx, 8	# tmp343,
 13914      00
 13915 0142 4C89C6   		mov	rsi, r8	# _4, _4
 13916 0145 488D3D00 		lea	rdi, .LC37[rip]	# tmp342,
 13916      000000
 13917 014c F3A6     		repz cmpsb
 13918 014e 0F97C2   		seta	dl	#, tmp344
 13919 0151 80DA00   		sbb	dl, 0	# _24
 13920              	# sieve_extend.c:840:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 13921              		.loc 1 840 17 view .LVU4588
 13922 0154 84D2     		test	dl, dl	# _24
 13923 0156 7490     		je	.L1274	#,
 841:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 13924              		.loc 1 841 14 is_stmt 1 view .LVU4589
 13925              	# sieve_extend.c:841:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 13926              		.loc 1 841 18 is_stmt 0 view .LVU4590
 13927 0158 4C89C6   		mov	rsi, r8	# _4, _4
 13928 015b 488D3D00 		lea	rdi, .LC38[rip]	# tmp348,
 13928      000000
 13929 0162 4C89C9   		mov	rcx, r9	# tmp545, tmp327
 13930 0165 F3A6     		repz cmpsb
 13931 0167 0F97C0   		seta	al	#, tmp350
 13932 016a 1C00     		sbb	al, 0	# _25
 13933              	# sieve_extend.c:841:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 13934              		.loc 1 841 17 view .LVU4591
 13935 016c 84C0     		test	al, al	# _25
 13936 016e 0F856C01 		jne	.L1275	#,
 13936      0000
 13937              		.loc 1 841 52 is_stmt 1 discriminator 1 view .LVU4592
 13938              	# sieve_extend.c:842:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n")
 842:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 13939              		.loc 1 842 16 is_stmt 0 discriminator 1 view .LVU4593
 13940 0174 FFC3     		inc	ebx	# arg
 13941              	.LVL889:
 13942              	# sieve_extend.c:841:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 841:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 13943              		.loc 1 841 68 discriminator 1 view .LVU4594
 13944 0176 C7842484 		mov	DWORD PTR 132[rsp], 0	# option_tunelevel,
 13944      00000000 
GAS LISTING /tmp/ccIyIA9Z.s 			page 370


 13944      000000
 13945              		.loc 1 842 13 is_stmt 1 discriminator 1 view .LVU4595
 13946              	.LVL890:
 13947              	# sieve_extend.c:842:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n")
 13948              		.loc 1 842 16 is_stmt 0 discriminator 1 view .LVU4596
 13949 0181 39DD     		cmp	ebp, ebx	# argc, arg
 13950 0183 0F8EE610 		jle	.L1403	#,
 13950      0000
 843:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 13951              		.loc 1 843 13 is_stmt 1 view .LVU4597
 13952              	# sieve_extend.c:843:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 13953              		.loc 1 843 28 is_stmt 0 view .LVU4598
 13954 0189 4F8D7C1C 		lea	r15, 8[r12+r11]	# _30,
 13954      08
 13955              	# sieve_extend.c:843:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 13956              		.loc 1 843 17 view .LVU4599
 13957 018e 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_30
 13958 0191 31C0     		xor	eax, eax	#
 13959 0193 488D9424 		lea	rdx, 132[rsp]	# tmp354,
 13959      84000000 
 13960 019b 488D3500 		lea	rsi, .LC34[rip]	#,
 13960      000000
 13961 01a2 E8000000 		call	__isoc99_sscanf@PLT	#
 13961      00
 13962              	.LVL891:
 13963              	# sieve_extend.c:843:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 13964              		.loc 1 843 16 view .LVU4600
 13965 01a7 83F801   		cmp	eax, 1	# tmp601,
 13966 01aa 0F859510 		jne	.L1277	#,
 13966      0000
 13967              	# sieve_extend.c:843:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 13968              		.loc 1 843 85 discriminator 1 view .LVU4601
 13969 01b0 8B942484 		mov	edx, DWORD PTR 132[rsp]	# option_tunelevel.23_33, option_tunelevel
 13969      000000
 13970              	# sieve_extend.c:843:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tun
 13971              		.loc 1 843 65 discriminator 1 view .LVU4602
 13972 01b7 83FA04   		cmp	edx, 4	# option_tunelevel.23_33,
 13973 01ba 0F8F8510 		jg	.L1277	#,
 13973      0000
 844:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
 845:sieve_extend.c ****             }
 846:sieve_extend.c ****             verbose(1) printf("Tune level set to %d\n",option_tunelevel);
 13974              		.loc 1 846 13 is_stmt 1 view .LVU4603
 13975 01c0 8B842480 		mov	eax, DWORD PTR 128[rsp]	#, option_verboselevel
 13975      000000
 13976 01c7 85C0     		test	eax, eax	#
 13977 01c9 0F8E19FF 		jle	.L1274	#,
 13977      FFFF
 13978              		.loc 1 846 24 discriminator 1 view .LVU4604
 13979              	.LVL892:
 13980              	.LBB1032:
 13981              	.LBI1032:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13982              		.loc 3 105 1 discriminator 1 view .LVU4605
 13983              	.LBB1033:
 13984              		.loc 3 107 3 discriminator 1 view .LVU4606
 13985              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccIyIA9Z.s 			page 371


 13986              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4607
 13987 01cf 488D3500 		lea	rsi, .LC41[rip]	#,
 13987      000000
 13988 01d6 BF010000 		mov	edi, 1	#,
 13988      00
 13989 01db 31C0     		xor	eax, eax	#
 13990              	.LBE1033:
 13991              	.LBE1032:
 13992              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 13993              		.loc 1 831 36 discriminator 1 view .LVU4608
 13994 01dd FFC3     		inc	ebx	# arg
 13995              	.LVL893:
 13996              	.LBB1035:
 13997              	.LBB1034:
 13998              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13999              		.loc 3 107 10 discriminator 1 view .LVU4609
 14000 01df E8000000 		call	__printf_chk@PLT	#
 14000      00
 14001              	.LVL894:
 14002              		.loc 3 107 10 discriminator 1 view .LVU4610
 14003              	.LBE1034:
 14004              	.LBE1035:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14005              		.loc 1 831 33 is_stmt 1 discriminator 1 view .LVU4611
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14006              		.loc 1 831 21 discriminator 1 view .LVU4612
 14007              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14008              		.loc 1 831 5 is_stmt 0 discriminator 1 view .LVU4613
 14009 01e4 39DD     		cmp	ebp, ebx	# argc, arg
 14010 01e6 0F8F06FF 		jg	.L1267	#,
 14010      FFFF
 14011 01ec 0F1F4000 		.p2align 4,,10
 14012              		.p2align 3
 14013              	.L1401:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14014              		.loc 1 831 5 discriminator 1 view .LVU4614
 14015              	.LBE1029:
 847:sieve_extend.c ****         }
 848:sieve_extend.c ****         else if (strcmp(argv[arg], "--time")==0) { option_max_time=0;
 849:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 850:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 851:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid max time: %s\n", argv[arg]); usage(argv[0]);
 852:sieve_extend.c ****             }
 853:sieve_extend.c ****             verbose(1) printf("Max time is set to %d seconds\n",option_tunelevel);
 854:sieve_extend.c ****         }
 855:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 856:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 857:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 858:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 859:sieve_extend.c ****             }
 860:sieve_extend.c ****             verbose(1) printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
 861:sieve_extend.c ****         }
 862:sieve_extend.c ****         else if (strcmp(argv[arg], "--threads")==0) { 
 863:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No thread maximum specified\n"); usage(argv[0]); 
 864:sieve_extend.c ****         #ifdef _OPENMP
GAS LISTING /tmp/ccIyIA9Z.s 			page 372


 865:sieve_extend.c ****             if (strcmp(argv[arg], "all")==0) option_threads = max_threads;
 866:sieve_extend.c ****             else if (strcmp(argv[arg], "half")==0) option_threads = max_threads>>1;
 867:sieve_extend.c ****             else if (sscanf(argv[arg], "%d", &option_threads) != 1 ) { fprintf(stderr, "Error: Inva
 868:sieve_extend.c ****             if (option_threads <1)  option_threads = 1;
 869:sieve_extend.c ****             if (option_threads > max_threads)  option_threads = max_threads;
 870:sieve_extend.c ****             verbose(1) printf("Thread maximum set to %ju\n",(uintmax_t)option_threads);
 871:sieve_extend.c ****         #else
 872:sieve_extend.c ****             verbose(1) printf("This is the version without multithreading - ignoring threads\n");
 873:sieve_extend.c ****         #endif
 874:sieve_extend.c ****         }
 875:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
 876:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 877:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 878:sieve_extend.c ****         }
 879:sieve_extend.c ****     }
 880:sieve_extend.c **** 
 881:sieve_extend.c ****     // for debugging
 882:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 14016              		.loc 1 882 5 is_stmt 1 view .LVU4615
 883:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, default_blocksize);
 884:sieve_extend.c ****         printf("\nResult set:\n");
 885:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 886:sieve_extend.c ****         int valid = validatePrimeCount(sieve,3);
 887:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
 888:sieve_extend.c ****         else printf("The sieve is VALID\n");
 889:sieve_extend.c ****         sieve_delete(sieve);
 890:sieve_extend.c ****         exit(0);
 891:sieve_extend.c ****     }
 892:sieve_extend.c ****         
 893:sieve_extend.c ****     // if --check is needed
 894:sieve_extend.c ****     if (option_check) {
 14017              		.loc 1 894 5 view .LVU4616
 895:sieve_extend.c ****         // Count the number of primes and validate the result
 896:sieve_extend.c ****         verbose(1) { printf("Validating..."); fflush(stdout); }
 14018              		.loc 1 896 9 view .LVU4617
 14019 01f0 8BAC2480 		mov	ebp, DWORD PTR 128[rsp]	#, option_verboselevel
 14019      000000
 14020              	.LVL895:
 14021              		.loc 1 896 9 is_stmt 0 view .LVU4618
 14022 01f7 85ED     		test	ebp, ebp	#
 14023 01f9 0F8FE404 		jg	.L1404	#,
 14023      0000
 14024              	.LVL896:
 14025              	.L1268:
 897:sieve_extend.c ****         verbose(2) printf("\n");
 14026              		.loc 1 897 9 is_stmt 1 view .LVU4619
 14027 01ff 83BC2480 		cmp	DWORD PTR 128[rsp], 1	# option_verboselevel,
 14027      00000001 
 14028 0207 7E0A     		jle	.L1289	#,
 14029              		.loc 1 897 20 view .LVU4620
 14030              	.LVL897:
 14031              	.LBB1064:
 14032              	.LBI1064:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14033              		.loc 3 105 1 view .LVU4621
 14034              	.LBB1065:
 14035              		.loc 3 107 3 view .LVU4622
GAS LISTING /tmp/ccIyIA9Z.s 			page 373


 14036              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14037              		.loc 3 107 10 is_stmt 0 view .LVU4623
 14038 0209 BF0A0000 		mov	edi, 10	#,
 14038      00
 14039 020e E8000000 		call	putchar@PLT	#
 14039      00
 14040              	.LVL898:
 14041              	.L1289:
 14042              		.loc 3 107 10 view .LVU4624
 14043              	.LBE1065:
 14044              	.LBE1064:
 14045              	.LBB1066:
 14046              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14047              		.loc 1 831 14 view .LVU4625
 14048 0213 C7442408 		mov	DWORD PTR 8[rsp], 6	# %sfp,
 14048      06000000 
 14049 021b 41BC6400 		mov	r12d, 100	# sieveSize_check,
 14049      0000
 14050              	.LBE1066:
 14051              	.LBB1067:
 14052              	.LBB1068:
 14053              	.LBB1069:
 14054              	.LBB1070:
 14055              	.LBB1071:
 14056              	.LBB1072:
 14057              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14058              		.loc 3 107 10 view .LVU4626
 14059 0221 4C8D2D00 		lea	r13, .LC58[rip]	# tmp523,
 14059      000000
 14060              	.L1296:
 14061              	.LVL899:
 14062              		.loc 3 107 10 view .LVU4627
 14063              	.LBE1072:
 14064              	.LBE1071:
 14065              	.LBE1070:
 14066              	.LBE1069:
 898:sieve_extend.c **** 
 899:sieve_extend.c ****         // validate algorithm - run one time for all sizes
 900:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 10000000; sieveSize_check *=10) {
 901:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14067              		.loc 1 901 13 is_stmt 1 view .LVU4628
 14068 0228 8B942480 		mov	edx, DWORD PTR 128[rsp]	# prephitmp_265, option_verboselevel
 14068      000000
 14069 022f 83FA01   		cmp	edx, 1	# prephitmp_265,
 14070 0232 7E29     		jle	.L1290	#,
 14071              		.loc 1 901 26 view .LVU4629
 14072              	.LVL900:
 14073              	.LBB1085:
 14074              	.LBI1085:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14075              		.loc 3 105 1 view .LVU4630
 14076              	.LBB1086:
 14077              		.loc 3 107 3 view .LVU4631
 14078              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14079              		.loc 3 107 10 is_stmt 0 view .LVU4632
 14080 0234 4C89E2   		mov	rdx, r12	#, sieveSize_check
GAS LISTING /tmp/ccIyIA9Z.s 			page 374


 14081 0237 488D3500 		lea	rsi, .LC57[rip]	#,
 14081      000000
 14082 023e BF010000 		mov	edi, 1	#,
 14082      00
 14083 0243 31C0     		xor	eax, eax	#
 14084 0245 E8000000 		call	__printf_chk@PLT	#
 14084      00
 14085              	.LVL901:
 14086              		.loc 3 107 10 view .LVU4633
 14087              	.LBE1086:
 14088              	.LBE1085:
 14089              		.loc 1 901 89 is_stmt 1 view .LVU4634
 14090 024a 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 14090      000000
 14091 0251 E8000000 		call	fflush@PLT	#
 14091      00
 14092              	.LVL902:
 14093 0256 8B942480 		mov	edx, DWORD PTR 128[rsp]	# prephitmp_265, option_verboselevel
 14093      000000
 14094              	.L1290:
 14095              	.LBE1068:
 14096              	.LBE1067:
 14097              	.LBB1095:
 14098              	# sieve_extend.c:831:     for (int arg=1; arg < argc; arg++) {
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14099              		.loc 1 831 14 is_stmt 0 view .LVU4635
 14100 025d BB050000 		mov	ebx, 5	# ivtmp_89,
 14100      00
 14101 0262 41BE0004 		mov	r14d, 1024	# blocksize_bits,
 14101      0000
 14102 0268 EB5B     		jmp	.L1294	#
 14103              	.LVL903:
 14104 026a 660F1F44 		.p2align 4,,10
 14104      0000
 14105              		.p2align 3
 14106              	.L1291:
 831:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 14107              		.loc 1 831 14 view .LVU4636
 14108              	.LBE1095:
 14109              	.LBB1096:
 14110              	.LBB1092:
 14111              	.LBB1087:
 14112              	.LBB1081:
 902:sieve_extend.c ****             struct sieve_t *sieve_check;
 903:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
 904:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 905:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 14113              		.loc 1 905 17 is_stmt 1 view .LVU4637
 14114              	# sieve_extend.c:905:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 14115              		.loc 1 905 31 is_stmt 0 view .LVU4638
 14116 0270 4C89F6   		mov	rsi, r14	#, blocksize_bits
 14117 0273 4C89E7   		mov	rdi, r12	#, sieveSize_check
 14118 0276 E8000000 		call	sieve_shake	#
 14118      00
 14119              	.LVL904:
 14120              	# sieve_extend.c:906:                 int valid = validatePrimeCount(sieve_check,option_verboseleve
 906:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
GAS LISTING /tmp/ccIyIA9Z.s 			page 375


 14121              		.loc 1 906 29 view .LVU4639
 14122 027b 8BB42480 		mov	esi, DWORD PTR 128[rsp]	#, option_verboselevel
 14122      000000
 14123              	# sieve_extend.c:905:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 905:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 14124              		.loc 1 905 31 view .LVU4640
 14125 0282 4889C5   		mov	rbp, rax	# sieve_check, tmp605
 14126              	.LVL905:
 14127              		.loc 1 906 17 is_stmt 1 view .LVU4641
 14128              	# sieve_extend.c:906:                 int valid = validatePrimeCount(sieve_check,option_verboseleve
 14129              		.loc 1 906 29 is_stmt 0 view .LVU4642
 14130 0285 4889C7   		mov	rdi, rax	#, sieve_check
 14131 0288 E8000000 		call	validatePrimeCount	#
 14131      00
 14132              	.LVL906:
 14133              	.LBB1074:
 14134              	.LBB1075:
 14135              	# sieve_extend.c:116:     free(sieve->bitstorage);
 116:sieve_extend.c ****     free(sieve);
 14136              		.loc 1 116 5 view .LVU4643
 14137 028d 488B7D00 		mov	rdi, QWORD PTR 0[rbp]	#, sieve_check_158->bitstorage
 14138              	.LBE1075:
 14139              	.LBE1074:
 14140              	# sieve_extend.c:906:                 int valid = validatePrimeCount(sieve_check,option_verboseleve
 14141              		.loc 1 906 29 view .LVU4644
 14142 0291 4189C7   		mov	r15d, eax	# valid, tmp606
 14143              	.LVL907:
 907:sieve_extend.c ****                 sieve_delete(sieve_check);
 14144              		.loc 1 907 17 is_stmt 1 view .LVU4645
 14145              	.LBB1077:
 14146              	.LBI1074:
 115:sieve_extend.c ****     free(sieve->bitstorage);
 14147              		.loc 1 115 13 view .LVU4646
 14148              	.LBB1076:
 116:sieve_extend.c ****     free(sieve);
 14149              		.loc 1 116 5 view .LVU4647
 14150 0294 E8000000 		call	free@PLT	#
 14150      00
 14151              	.LVL908:
 117:sieve_extend.c **** }
 14152              		.loc 1 117 5 view .LVU4648
 14153 0299 4889EF   		mov	rdi, rbp	#, sieve_check
 14154 029c E8000000 		call	free@PLT	#
 14154      00
 14155              	.LVL909:
 117:sieve_extend.c **** }
 14156              		.loc 1 117 5 is_stmt 0 view .LVU4649
 14157              	.LBE1076:
 14158              	.LBE1077:
 908:sieve_extend.c ****                 if (!valid) return 0; else verbose(3) printf("valid;");
 14159              		.loc 1 908 17 is_stmt 1 view .LVU4650
 14160              	# sieve_extend.c:908:                 if (!valid) return 0; else verbose(3) printf("valid;");
 14161              		.loc 1 908 20 is_stmt 0 view .LVU4651
 14162 02a1 4585FF   		test	r15d, r15d	# valid
 14163 02a4 0F840E04 		je	.L1338	#,
 14163      0000
 14164              		.loc 1 908 44 is_stmt 1 discriminator 2 view .LVU4652
GAS LISTING /tmp/ccIyIA9Z.s 			page 376


 14165 02aa 8B942480 		mov	edx, DWORD PTR 128[rsp]	# prephitmp_265, option_verboselevel
 14165      000000
 14166 02b1 83FA02   		cmp	edx, 2	# prephitmp_265,
 14167 02b4 0F8FA601 		jg	.L1405	#,
 14167      0000
 14168              	.LBE1081:
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14169              		.loc 1 903 75 discriminator 2 view .LVU4653
 14170              	# sieve_extend.c:903:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14171              		.loc 1 903 90 is_stmt 0 discriminator 2 view .LVU4654
 14172 02ba 4D01F6   		add	r14, r14	# blocksize_bits
 14173              	.LVL910:
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14174              		.loc 1 903 49 is_stmt 1 discriminator 2 view .LVU4655
 14175              	# sieve_extend.c:903:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14176              		.loc 1 903 13 is_stmt 0 discriminator 2 view .LVU4656
 14177 02bd FFCB     		dec	ebx	# ivtmp_89
 14178 02bf 0F84C001 		je	.L1406	#,
 14178      0000
 14179              	.LVL911:
 14180              	.L1294:
 14181              	.LBB1082:
 904:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 14182              		.loc 1 904 17 is_stmt 1 view .LVU4657
 14183 02c5 83FA02   		cmp	edx, 2	# prephitmp_265,
 14184 02c8 7EA6     		jle	.L1291	#,
 904:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 14185              		.loc 1 904 28 view .LVU4658
 14186              	.LVL912:
 14187              	.LBB1078:
 14188              	.LBI1071:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14189              		.loc 3 105 1 view .LVU4659
 14190              	.LBB1073:
 14191              		.loc 3 107 3 view .LVU4660
 14192              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14193              		.loc 3 107 10 is_stmt 0 view .LVU4661
 14194 02ca 4C89F2   		mov	rdx, r14	#, blocksize_bits
 14195 02cd 4C89EE   		mov	rsi, r13	#, tmp523
 14196 02d0 BF010000 		mov	edi, 1	#,
 14196      00
 14197 02d5 31C0     		xor	eax, eax	#
 14198 02d7 E8000000 		call	__printf_chk@PLT	#
 14198      00
 14199              	.LVL913:
 14200 02dc EB92     		jmp	.L1291	#
 14201              	.LVL914:
 14202 02de 6690     		.p2align 4,,10
 14203              		.p2align 3
 14204              	.L1275:
 14205              		.loc 3 107 10 view .LVU4662
 14206              	.LBE1073:
 14207              	.LBE1078:
 14208              	.LBE1082:
 14209              	.LBE1087:
GAS LISTING /tmp/ccIyIA9Z.s 			page 377


 14210              	.LBE1092:
 14211              	.LBE1096:
 14212              	.LBB1097:
 848:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 14213              		.loc 1 848 14 is_stmt 1 view .LVU4663
 14214              	# sieve_extend.c:848:         else if (strcmp(argv[arg], "--time")==0) { option_max_time=0;
 848:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 14215              		.loc 1 848 18 is_stmt 0 view .LVU4664
 14216 02e0 4C89C6   		mov	rsi, r8	# _4, _4
 14217 02e3 488D3D00 		lea	rdi, .LC42[rip]	# tmp358,
 14217      000000
 14218 02ea 4C89C9   		mov	rcx, r9	# tmp547, tmp327
 14219 02ed F3A6     		repz cmpsb
 14220 02ef 0F97C2   		seta	dl	#, tmp360
 14221 02f2 80DA00   		sbb	dl, 0	# _38
 14222              	# sieve_extend.c:848:         else if (strcmp(argv[arg], "--time")==0) { option_max_time=0;
 848:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 14223              		.loc 1 848 17 view .LVU4665
 14224 02f5 84D2     		test	dl, dl	# _38
 14225 02f7 7577     		jne	.L1279	#,
 848:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 14226              		.loc 1 848 52 is_stmt 1 discriminator 1 view .LVU4666
 14227              	# sieve_extend.c:849:             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usag
 849:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 14228              		.loc 1 849 16 is_stmt 0 discriminator 1 view .LVU4667
 14229 02f9 FFC3     		inc	ebx	# arg
 14230              	.LVL915:
 14231              	# sieve_extend.c:848:         else if (strcmp(argv[arg], "--time")==0) { option_max_time=0;
 848:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usage(argv[0]); }
 14232              		.loc 1 848 67 discriminator 1 view .LVU4668
 14233 02fb 48C78424 		mov	QWORD PTR 136[rsp], 0x000000000	# option_max_time,
 14233      88000000 
 14233      00000000 
 849:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 14234              		.loc 1 849 13 is_stmt 1 discriminator 1 view .LVU4669
 14235              	.LVL916:
 14236              	# sieve_extend.c:849:             if (++arg >= argc) { fprintf(stderr, "No time specified\n"); usag
 849:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 14237              		.loc 1 849 16 is_stmt 0 discriminator 1 view .LVU4670
 14238 0307 39DD     		cmp	ebp, ebx	# argc, arg
 14239 0309 0F8EF50F 		jle	.L1407	#,
 14239      0000
 850:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid max time: %s\n", argv[arg]); usage(argv[0]);
 14240              		.loc 1 850 13 is_stmt 1 view .LVU4671
 14241              	# sieve_extend.c:850:             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 850:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid max time: %s\n", argv[arg]); usage(argv[0]);
 14242              		.loc 1 850 28 is_stmt 0 view .LVU4672
 14243 030f 4F8D7C1C 		lea	r15, 8[r12+r11]	# _43,
 14243      08
 14244              	# sieve_extend.c:850:             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 850:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid max time: %s\n", argv[arg]); usage(argv[0]);
 14245              		.loc 1 850 17 view .LVU4673
 14246 0314 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_43
 14247 0317 31C0     		xor	eax, eax	#
 14248 0319 488D9424 		lea	rdx, 136[rsp]	# tmp365,
 14248      88000000 
 14249 0321 488D3500 		lea	rsi, .LC44[rip]	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 378


 14249      000000
 14250 0328 E8000000 		call	__isoc99_sscanf@PLT	#
 14250      00
 14251              	.LVL917:
 14252              	# sieve_extend.c:850:             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 850:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid max time: %s\n", argv[arg]); usage(argv[0]);
 14253              		.loc 1 850 16 view .LVU4674
 14254 032d 83F801   		cmp	eax, 1	# tmp602,
 14255 0330 0F85BF0F 		jne	.L1408	#,
 14255      0000
 853:sieve_extend.c ****         }
 14256              		.loc 1 853 13 is_stmt 1 view .LVU4675
 14257 0336 448B9424 		mov	r10d, DWORD PTR 128[rsp]	#, option_verboselevel
 14257      80000000 
 14258 033e 4585D2   		test	r10d, r10d	#
 14259 0341 0F8EA1FD 		jle	.L1274	#,
 14259      FFFF
 853:sieve_extend.c ****         }
 14260              		.loc 1 853 24 discriminator 1 view .LVU4676
 14261              	.LVL918:
 14262              	.LBB1036:
 14263              	.LBI1036:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14264              		.loc 3 105 1 discriminator 1 view .LVU4677
 14265              	.LBB1037:
 14266              		.loc 3 107 3 discriminator 1 view .LVU4678
 14267              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14268              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4679
 14269 0347 8B942484 		mov	edx, DWORD PTR 132[rsp]	#, option_tunelevel
 14269      000000
 14270 034e 488D3500 		lea	rsi, .LC46[rip]	#,
 14270      000000
 14271 0355 BF010000 		mov	edi, 1	#,
 14271      00
 14272 035a 31C0     		xor	eax, eax	#
 14273 035c E8000000 		call	__printf_chk@PLT	#
 14273      00
 14274              	.LVL919:
 14275 0361 E982FDFF 		jmp	.L1274	#
 14275      FF
 14276              	.LVL920:
 14277 0366 662E0F1F 		.p2align 4,,10
 14277      84000000 
 14277      0000
 14278              		.p2align 3
 14279              	.L1279:
 14280              		.loc 3 107 10 discriminator 1 view .LVU4680
 14281              	.LBE1037:
 14282              	.LBE1036:
 855:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14283              		.loc 1 855 14 is_stmt 1 view .LVU4681
 14284              	# sieve_extend.c:855:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 855:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14285              		.loc 1 855 18 is_stmt 0 view .LVU4682
 14286 0370 4C89C9   		mov	rcx, r9	# tmp327, tmp327
 14287 0373 488D3D00 		lea	rdi, .LC47[rip]	# tmp368,
 14287      000000
GAS LISTING /tmp/ccIyIA9Z.s 			page 379


 14288 037a 4C89C6   		mov	rsi, r8	# _4, _4
 14289 037d F3A6     		repz cmpsb
 14290 037f 410F97C1 		seta	r9b	#, tmp372
 14291 0383 4180D900 		sbb	r9b, 0	# _51
 14292              	# sieve_extend.c:855:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 855:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14293              		.loc 1 855 17 view .LVU4683
 14294 0387 4584C9   		test	r9b, r9b	# _51
 14295 038a 0F858000 		jne	.L1282	#,
 14295      0000
 855:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14296              		.loc 1 855 52 is_stmt 1 discriminator 1 view .LVU4684
 14297              	# sieve_extend.c:856:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n
 856:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 14298              		.loc 1 856 16 is_stmt 0 discriminator 1 view .LVU4685
 14299 0390 FFC3     		inc	ebx	# arg
 14300              	.LVL921:
 14301              	# sieve_extend.c:855:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
 855:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 14302              		.loc 1 855 72 discriminator 1 view .LVU4686
 14303 0392 48C78424 		mov	QWORD PTR 152[rsp], 0	# option_showMaxFactor,
 14303      98000000 
 14303      00000000 
 856:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 14304              		.loc 1 856 13 is_stmt 1 discriminator 1 view .LVU4687
 14305              	.LVL922:
 14306              	# sieve_extend.c:856:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n
 856:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 14307              		.loc 1 856 16 is_stmt 0 discriminator 1 view .LVU4688
 14308 039e 39DD     		cmp	ebp, ebx	# argc, arg
 14309 03a0 0F8E290F 		jle	.L1409	#,
 14309      0000
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14310              		.loc 1 857 13 is_stmt 1 view .LVU4689
 14311              	# sieve_extend.c:857:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14312              		.loc 1 857 28 is_stmt 0 view .LVU4690
 14313 03a6 4F8D7C1C 		lea	r15, 8[r12+r11]	# _56,
 14313      08
 14314              	# sieve_extend.c:857:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14315              		.loc 1 857 17 view .LVU4691
 14316 03ab 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_56
 14317 03ae 31C0     		xor	eax, eax	#
 14318 03b0 488D9424 		lea	rdx, 152[rsp]	# tmp376,
 14318      98000000 
 14319 03b8 488D3500 		lea	rsi, .LC49[rip]	#,
 14319      000000
 14320 03bf E8000000 		call	__isoc99_sscanf@PLT	#
 14320      00
 14321              	.LVL923:
 14322              	# sieve_extend.c:857:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14323              		.loc 1 857 16 view .LVU4692
 14324 03c4 83F801   		cmp	eax, 1	# tmp603,
 14325 03c7 0F85C80E 		jne	.L1284	#,
 14325      0000
GAS LISTING /tmp/ccIyIA9Z.s 			page 380


 14326              	# sieve_extend.c:857:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14327              		.loc 1 857 106 discriminator 1 view .LVU4693
 14328 03cd 488B9424 		mov	rdx, QWORD PTR 152[rsp]	# option_showMaxFactor.32_59, option_showMaxFactor
 14328      98000000 
 14329              	# sieve_extend.c:857:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) !
 857:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 14330              		.loc 1 857 82 discriminator 1 view .LVU4694
 14331 03d5 483B9424 		cmp	rdx, QWORD PTR 144[rsp]	# option_showMaxFactor.32_59, option_maxFactor
 14331      90000000 
 14332 03dd 0F87B20E 		ja	.L1284	#,
 14332      0000
 860:sieve_extend.c ****         }
 14333              		.loc 1 860 13 is_stmt 1 view .LVU4695
 14334 03e3 448B8424 		mov	r8d, DWORD PTR 128[rsp]	#, option_verboselevel
 14334      80000000 
 14335 03eb 4585C0   		test	r8d, r8d	#
 14336 03ee 0F8EF4FC 		jle	.L1274	#,
 14336      FFFF
 860:sieve_extend.c ****         }
 14337              		.loc 1 860 24 discriminator 1 view .LVU4696
 14338              	.LVL924:
 14339              	.LBB1038:
 14340              	.LBI1038:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14341              		.loc 3 105 1 discriminator 1 view .LVU4697
 14342              	.LBB1039:
 14343              		.loc 3 107 3 discriminator 1 view .LVU4698
 14344              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14345              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4699
 14346 03f4 488D3500 		lea	rsi, .LC51[rip]	#,
 14346      000000
 14347 03fb BF010000 		mov	edi, 1	#,
 14347      00
 14348 0400 31C0     		xor	eax, eax	#
 14349 0402 E8000000 		call	__printf_chk@PLT	#
 14349      00
 14350              	.LVL925:
 14351 0407 E9DCFCFF 		jmp	.L1274	#
 14351      FF
 14352              	.LVL926:
 14353 040c 0F1F4000 		.p2align 4,,10
 14354              		.p2align 3
 14355              	.L1282:
 14356              		.loc 3 107 10 discriminator 1 view .LVU4700
 14357              	.LBE1039:
 14358              	.LBE1038:
 862:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No thread maximum specified\n"); usage(argv[0]); 
 14359              		.loc 1 862 14 is_stmt 1 view .LVU4701
 14360              	# sieve_extend.c:862:         else if (strcmp(argv[arg], "--threads")==0) { 
 862:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No thread maximum specified\n"); usage(argv[0]); 
 14361              		.loc 1 862 18 is_stmt 0 view .LVU4702
 14362 0410 488D3D00 		lea	rdi, .LC52[rip]	# tmp378,
 14362      000000
 14363 0417 4C89C6   		mov	rsi, r8	# _4, _4
 14364 041a 4C89D1   		mov	rcx, r10	# tmp333, tmp333
 14365 041d F3A6     		repz cmpsb
GAS LISTING /tmp/ccIyIA9Z.s 			page 381


 14366 041f 410F97C3 		seta	r11b	#, tmp382
 14367 0423 4180DB00 		sbb	r11b, 0	# _65
 14368              	# sieve_extend.c:862:         else if (strcmp(argv[arg], "--threads")==0) { 
 862:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No thread maximum specified\n"); usage(argv[0]); 
 14369              		.loc 1 862 17 view .LVU4703
 14370 0427 4584DB   		test	r11b, r11b	# _65
 14371 042a 0F85D702 		jne	.L1286	#,
 14371      0000
 863:sieve_extend.c ****         #ifdef _OPENMP
 14372              		.loc 1 863 13 is_stmt 1 view .LVU4704
 14373              	# sieve_extend.c:863:             if (++arg >= argc) { fprintf(stderr, "No thread maximum specified
 863:sieve_extend.c ****         #ifdef _OPENMP
 14374              		.loc 1 863 16 is_stmt 0 view .LVU4705
 14375 0430 FFC3     		inc	ebx	# arg
 14376              	.LVL927:
 863:sieve_extend.c ****         #ifdef _OPENMP
 14377              		.loc 1 863 16 view .LVU4706
 14378 0432 39DD     		cmp	ebp, ebx	# argc, arg
 14379 0434 0F8E6F0E 		jle	.L1410	#,
 14379      0000
 872:sieve_extend.c ****         #endif
 14380              		.loc 1 872 13 is_stmt 1 view .LVU4707
 14381 043a 448BBC24 		mov	r15d, DWORD PTR 128[rsp]	#, option_verboselevel
 14381      80000000 
 14382 0442 4585FF   		test	r15d, r15d	#
 14383 0445 0F8E9DFC 		jle	.L1274	#,
 14383      FFFF
 872:sieve_extend.c ****         #endif
 14384              		.loc 1 872 24 view .LVU4708
 14385              	.LVL928:
 14386              	.LBB1040:
 14387              	.LBI1040:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14388              		.loc 3 105 1 view .LVU4709
 14389              	.LBB1041:
 14390              		.loc 3 107 3 view .LVU4710
 14391              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14392              		.loc 3 107 10 is_stmt 0 view .LVU4711
 14393 044b 488D3D00 		lea	rdi, .LC54[rip]	#,
 14393      000000
 14394 0452 E8000000 		call	puts@PLT	#
 14394      00
 14395              	.LVL929:
 14396 0457 E98CFCFF 		jmp	.L1274	#
 14396      FF
 14397              	.LVL930:
 14398 045c 0F1F4000 		.p2align 4,,10
 14399              		.p2align 3
 14400              	.L1405:
 14401              		.loc 3 107 10 view .LVU4712
 14402              	.LBE1041:
 14403              	.LBE1040:
 14404              	.LBE1097:
 14405              	.LBB1098:
 14406              	.LBB1093:
 14407              	.LBB1088:
 14408              	.LBB1083:
GAS LISTING /tmp/ccIyIA9Z.s 			page 382


 14409              		.loc 1 908 55 is_stmt 1 view .LVU4713
 14410              	.LBB1079:
 14411              	.LBI1079:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14412              		.loc 3 105 1 view .LVU4714
 14413              	.LBB1080:
 14414              		.loc 3 107 3 view .LVU4715
 14415              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14416              		.loc 3 107 10 is_stmt 0 view .LVU4716
 14417 0460 488D3500 		lea	rsi, .LC59[rip]	#,
 14417      000000
 14418 0467 BF010000 		mov	edi, 1	#,
 14418      00
 14419 046c 31C0     		xor	eax, eax	#
 14420 046e E8000000 		call	__printf_chk@PLT	#
 14420      00
 14421              	.LVL931:
 14422              	.LBE1080:
 14423              	.LBE1079:
 14424              	.LBE1083:
 14425              	# sieve_extend.c:903:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14426              		.loc 1 903 90 view .LVU4717
 14427 0473 4D01F6   		add	r14, r14	# blocksize_bits
 14428              	.LVL932:
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14429              		.loc 1 903 90 view .LVU4718
 14430 0476 8B942480 		mov	edx, DWORD PTR 128[rsp]	# prephitmp_265, option_verboselevel
 14430      000000
 14431              	.LVL933:
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14432              		.loc 1 903 75 is_stmt 1 view .LVU4719
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14433              		.loc 1 903 49 view .LVU4720
 14434              	# sieve_extend.c:903:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blo
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14435              		.loc 1 903 13 is_stmt 0 view .LVU4721
 14436 047d FFCB     		dec	ebx	# ivtmp_89
 14437 047f 0F8540FE 		jne	.L1294	#,
 14437      FFFF
 14438              	.L1406:
 903:sieve_extend.c ****                 verbose(3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 14439              		.loc 1 903 13 view .LVU4722
 14440              	.LBE1088:
 909:sieve_extend.c ****             }
 910:sieve_extend.c ****             verbose(2) printf("valid\n");
 14441              		.loc 1 910 13 is_stmt 1 view .LVU4723
 14442 0485 83FA01   		cmp	edx, 1	# prephitmp_265,
 14443 0488 7E0C     		jle	.L1295	#,
 14444              		.loc 1 910 24 view .LVU4724
 14445              	.LVL934:
 14446              	.LBB1089:
 14447              	.LBI1089:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14448              		.loc 3 105 1 view .LVU4725
 14449              	.LBB1090:
 14450              		.loc 3 107 3 view .LVU4726
GAS LISTING /tmp/ccIyIA9Z.s 			page 383


 14451              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14452              		.loc 3 107 10 is_stmt 0 view .LVU4727
 14453 048a 488D3D00 		lea	rdi, .LC60[rip]	#,
 14453      000000
 14454 0491 E8000000 		call	puts@PLT	#
 14454      00
 14455              	.LVL935:
 14456              	.L1295:
 14457              		.loc 3 107 10 view .LVU4728
 14458              	.LBE1090:
 14459              	.LBE1089:
 14460              	.LBE1093:
 900:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14461              		.loc 1 900 76 is_stmt 1 discriminator 2 view .LVU4729
 14462              	# sieve_extend.c:900:         for (counter_t sieveSize_check = 100; sieveSize_check <= 10000000; si
 900:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14463              		.loc 1 900 92 is_stmt 0 discriminator 2 view .LVU4730
 14464 0496 4F8D24A4 		lea	r12, [r12+r12*4]	# tmp393,
 14465              	.LVL936:
 900:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14466              		.loc 1 900 92 discriminator 2 view .LVU4731
 14467 049a 4D01E4   		add	r12, r12	# sieveSize_check
 14468              	.LVL937:
 900:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14469              		.loc 1 900 47 is_stmt 1 discriminator 2 view .LVU4732
 14470              	# sieve_extend.c:900:         for (counter_t sieveSize_check = 100; sieveSize_check <= 10000000; si
 900:sieve_extend.c ****             verbose(2) { printf("...Checking size %ju ...",(uintmax_t)sieveSize_check); fflush(stdo
 14471              		.loc 1 900 9 is_stmt 0 discriminator 2 view .LVU4733
 14472 049d FF4C2408 		dec	DWORD PTR 8[rsp]	# %sfp
 14473 04a1 0F8581FD 		jne	.L1296	#,
 14473      FFFF
 14474              	.LBE1098:
 911:sieve_extend.c ****         }
 912:sieve_extend.c ****         verbose(1) printf("valid algorithm\n");
 14475              		.loc 1 912 9 is_stmt 1 view .LVU4734
 14476 04a7 83BC2480 		cmp	DWORD PTR 128[rsp], 0	# option_verboselevel,
 14476      00000000 
 14477 04af 7E0C     		jle	.L1297	#,
 14478              		.loc 1 912 20 view .LVU4735
 14479              	.LVL938:
 14480              	.LBB1099:
 14481              	.LBI1099:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14482              		.loc 3 105 1 view .LVU4736
 14483              	.LBB1100:
 14484              		.loc 3 107 3 view .LVU4737
 14485              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14486              		.loc 3 107 10 is_stmt 0 view .LVU4738
 14487 04b1 488D3D00 		lea	rdi, .LC61[rip]	#,
 14487      000000
 14488 04b8 E8000000 		call	puts@PLT	#
 14488      00
 14489              	.LVL939:
 14490              	.L1297:
 14491              		.loc 3 107 10 view .LVU4739
 14492              	.LBE1100:
 14493              	.LBE1099:
GAS LISTING /tmp/ccIyIA9Z.s 			page 384


 913:sieve_extend.c ****     }
 914:sieve_extend.c ****     
 915:sieve_extend.c ****     // tuning - try combinations of different settings and apply these
 916:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 14494              		.loc 1 916 5 is_stmt 1 view .LVU4740
 917:sieve_extend.c ****     if (option_tunelevel) {
 14495              		.loc 1 917 5 view .LVU4741
 14496              	# sieve_extend.c:917:     if (option_tunelevel) {
 14497              		.loc 1 917 9 is_stmt 0 view .LVU4742
 14498 04bd 448B8C24 		mov	r9d, DWORD PTR 132[rsp]	# option_tunelevel.53_83, option_tunelevel
 14498      84000000 
 14499              	# sieve_extend.c:917:     if (option_tunelevel) {
 14500              		.loc 1 917 8 view .LVU4743
 14501 04c5 4585C9   		test	r9d, r9d	# option_tunelevel.53_83
 14502 04c8 0F851C03 		jne	.L1411	#,
 14502      0000
 14503 04ce C5C957F6 		vxorpd	xmm6, xmm6, xmm6	# tmp508
 14504              	# sieve_extend.c:916:     counter_t best_blocksize_bits = default_blocksize;
 916:sieve_extend.c ****     if (option_tunelevel) {
 14505              		.loc 1 916 15 view .LVU4744
 14506 04d2 41BC0000 		mov	r12d, 262144	# best_result$8,
 14506      0400
 14507              	.LVL940:
 916:sieve_extend.c ****     if (option_tunelevel) {
 14508              		.loc 1 916 15 view .LVU4745
 14509 04d8 C5FB1174 		vmovsd	QWORD PTR 120[rsp], xmm6	# %sfp, tmp508
 14509      2478
 14510              	.LVL941:
 14511              	.L1298:
 918:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_threads,
 919:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 920:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 921:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 922:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 923:sieve_extend.c ****     }
 924:sieve_extend.c **** 
 925:sieve_extend.c ****     // time the algorithm using the best settings
 926:sieve_extend.c ****     struct timespec start_time,end_time;
 14512              		.loc 1 926 5 is_stmt 1 view .LVU4746
 927:sieve_extend.c ****     counter_t used_threads = 1;
 14513              		.loc 1 927 5 view .LVU4747
 928:sieve_extend.c **** 
 929:sieve_extend.c ****     // this section will only by linked in if the -fopenmp option is used.
 930:sieve_extend.c ****     // will default to max threads and then device by 2 for a non-hyperthreading option
 931:sieve_extend.c ****     #ifdef _OPENMP
 932:sieve_extend.c ****     counter_t max_tries = 4;
 933:sieve_extend.c ****     for(counter_t threads=option_threads; threads>=1; threads= (threads>>1)  ) {
 934:sieve_extend.c ****         omp_set_num_threads(threads);
 935:sieve_extend.c ****         used_threads=threads;
 936:sieve_extend.c ****         if (--max_tries ==1) threads = 2;
 937:sieve_extend.c ****     #endif
 938:sieve_extend.c ****         verbose(2) printf("\n");
 14514              		.loc 1 938 9 view .LVU4748
 14515 04de 83BC2480 		cmp	DWORD PTR 128[rsp], 1	# option_verboselevel,
 14515      00000001 
 14516 04e6 7E0A     		jle	.L1330	#,
 14517              		.loc 1 938 20 view .LVU4749
GAS LISTING /tmp/ccIyIA9Z.s 			page 385


 14518              	.LVL942:
 14519              	.LBB1101:
 14520              	.LBI1101:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14521              		.loc 3 105 1 view .LVU4750
 14522              	.LBB1102:
 14523              		.loc 3 107 3 view .LVU4751
 14524              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14525              		.loc 3 107 10 is_stmt 0 view .LVU4752
 14526 04e8 BF0A0000 		mov	edi, 10	#,
 14526      00
 14527 04ed E8000000 		call	putchar@PLT	#
 14527      00
 14528              	.LVL943:
 14529              	.L1330:
 14530              		.loc 3 107 10 view .LVU4753
 14531              	.LBE1102:
 14532              	.LBE1101:
 939:sieve_extend.c ****         verbose(1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju and %ju threads fo
 14533              		.loc 1 939 9 is_stmt 1 view .LVU4754
 14534 04f2 83BC2480 		cmp	DWORD PTR 128[rsp], 0	# option_verboselevel,
 14534      00000000 
 14535 04fa 7E3C     		jle	.L1331	#,
 14536              		.loc 1 939 20 discriminator 1 view .LVU4755
 14537              	.LVL944:
 14538              	.LBB1103:
 14539              	.LBI1103:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14540              		.loc 3 105 1 discriminator 1 view .LVU4756
 14541              	.LBB1104:
 14542              		.loc 3 107 3 discriminator 1 view .LVU4757
 14543              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14544              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4758
 14545 04fc 50       		push	rax	#
 14546              		.cfi_def_cfa_offset 280
 14547 04fd 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 14547      000000
 14548 0504 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 14548      000000
 14549 050b 6A01     		push	1	#
 14550              		.cfi_def_cfa_offset 288
 14551 050d 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 14551      000000
 14552 0514 4C89E2   		mov	rdx, r12	#, best_result$8
 14553 0517 C5FB1084 		vmovsd	xmm0, QWORD PTR 152[rsp]	#, option_max_time
 14553      24980000 
 14553      00
 14554 0520 488D3500 		lea	rsi, .LC76[rip]	#,
 14554      000000
 14555 0527 BF010000 		mov	edi, 1	#,
 14555      00
 14556 052c B8010000 		mov	eax, 1	#,
 14556      00
 14557 0531 E8000000 		call	__printf_chk@PLT	#
 14557      00
 14558              	.LVL945:
 14559 0536 5A       		pop	rdx	#
GAS LISTING /tmp/ccIyIA9Z.s 			page 386


 14560              		.cfi_def_cfa_offset 280
 14561 0537 59       		pop	rcx	#
 14562              		.cfi_def_cfa_offset 272
 14563              	.LVL946:
 14564              	.L1331:
 14565              		.loc 3 107 10 discriminator 1 view .LVU4759
 14566              	.LBE1104:
 14567              	.LBE1103:
 940:sieve_extend.c ****         counter_t passes = 0;
 14568              		.loc 1 940 9 is_stmt 1 view .LVU4760
 941:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 14569              		.loc 1 941 9 view .LVU4761
 942:sieve_extend.c ****         double elapsed_time = 0;
 14570              		.loc 1 942 9 view .LVU4762
 943:sieve_extend.c ****         struct sieve_t *sieve;
 14571              		.loc 1 943 9 view .LVU4763
 944:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 14572              		.loc 1 944 9 view .LVU4764
 14573 0538 488DB424 		lea	rsi, 160[rsp]	# tmp489,
 14573      A0000000 
 14574 0540 BF010000 		mov	edi, 1	#,
 14574      00
 14575 0545 E8000000 		call	clock_gettime@PLT	#
 14575      00
 14576              	.LVL947:
 945:sieve_extend.c ****         #ifdef _OPENMP
 946:sieve_extend.c ****         #pragma omp parallel reduction(+:passes)
 947:sieve_extend.c ****         #endif
 948:sieve_extend.c ****         for (;elapsed_time <= option_max_time;) {
 14577              		.loc 1 948 9 view .LVU4765
 14578              		.loc 1 948 15 view .LVU4766
 14579              	# sieve_extend.c:948:         for (;elapsed_time <= option_max_time;) {
 14580              		.loc 1 948 9 is_stmt 0 view .LVU4767
 14581 054a C57B104C 		vmovsd	xmm9, QWORD PTR 120[rsp]	# tmp508, %sfp
 14581      2478
 14582 0550 C5792F8C 		vcomisd	xmm9, QWORD PTR 136[rsp]	# tmp508, option_max_time
 14582      24880000 
 14582      00
 14583 0559 0F87B90C 		ja	.L1391	#,
 14583      0000
 14584              	# sieve_extend.c:940:         counter_t passes = 0;
 940:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 14585              		.loc 1 940 19 view .LVU4768
 14586 055f 31DB     		xor	ebx, ebx	# passes
 14587 0561 4C8DAC24 		lea	r13, 176[rsp]	# tmp511,
 14587      B0000000 
 14588              	.LVL948:
 14589              	.L1334:
 949:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14590              		.loc 1 949 13 is_stmt 1 view .LVU4769
 14591              	# sieve_extend.c:949:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 14592              		.loc 1 949 21 is_stmt 0 view .LVU4770
 14593 0569 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	#, option_maxFactor
 14593      90000000 
 14594 0571 4C89E6   		mov	rsi, r12	#, best_result$8
 14595 0574 E8000000 		call	sieve_shake	#
 14595      00
GAS LISTING /tmp/ccIyIA9Z.s 			page 387


 14596              	.LVL949:
 14597              	.LBB1105:
 14598              	.LBB1106:
 14599              	# sieve_extend.c:116:     free(sieve->bitstorage);
 116:sieve_extend.c ****     free(sieve);
 14600              		.loc 1 116 5 view .LVU4771
 14601 0579 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_187->bitstorage
 14602              	.LBE1106:
 14603              	.LBE1105:
 14604              	# sieve_extend.c:949:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 14605              		.loc 1 949 21 view .LVU4772
 14606 057c 4889C5   		mov	rbp, rax	# sieve, tmp608
 14607              	.LVL950:
 950:sieve_extend.c ****             sieve_delete(sieve);
 14608              		.loc 1 950 13 is_stmt 1 view .LVU4773
 14609              	.LBB1110:
 14610              	.LBI1105:
 115:sieve_extend.c ****     free(sieve->bitstorage);
 14611              		.loc 1 115 13 view .LVU4774
 14612              	.LBB1107:
 116:sieve_extend.c ****     free(sieve);
 14613              		.loc 1 116 5 view .LVU4775
 14614 057f E8000000 		call	free@PLT	#
 14614      00
 14615              	.LVL951:
 117:sieve_extend.c **** }
 14616              		.loc 1 117 5 view .LVU4776
 14617 0584 4889EF   		mov	rdi, rbp	#, sieve
 14618 0587 E8000000 		call	free@PLT	#
 14618      00
 14619              	.LVL952:
 117:sieve_extend.c **** }
 14620              		.loc 1 117 5 is_stmt 0 view .LVU4777
 14621              	.LBE1107:
 14622              	.LBE1110:
 951:sieve_extend.c ****             passes++;
 14623              		.loc 1 951 13 is_stmt 1 view .LVU4778
 14624              	# sieve_extend.c:952:             clock_gettime(CLOCK_MONOTONIC,&end_time);
 952:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 14625              		.loc 1 952 13 is_stmt 0 view .LVU4779
 14626 058c 4C89EE   		mov	rsi, r13	#, tmp511
 14627 058f BF010000 		mov	edi, 1	#,
 14627      00
 14628 0594 E8000000 		call	clock_gettime@PLT	#
 14628      00
 14629              	.LVL953:
 14630              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 953:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 14631              		.loc 1 953 62 view .LVU4780
 14632 0599 C4412857 		vxorps	xmm10, xmm10, xmm10	# tmp611
 14632      D2
 14633 059e C4E1AB2A 		vcvtsi2sd	xmm1, xmm10, QWORD PTR 184[rsp]	# tmp612, tmp611, end_time.tv_nsec
 14633      8C24B800 
 14633      0000
 14634              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14635              		.loc 1 953 68 view .LVU4781
 14636 05a8 C461AB2A 		vcvtsi2sd	xmm12, xmm10, QWORD PTR 160[rsp]	# tmp613, tmp611, start_time.tv_sec
GAS LISTING /tmp/ccIyIA9Z.s 			page 388


 14636      A424A000 
 14636      0000
 14637              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14638              		.loc 1 953 108 view .LVU4782
 14639 05b2 C4E1AB2A 		vcvtsi2sd	xmm3, xmm10, QWORD PTR 168[rsp]	# tmp614, tmp611, start_time.tv_nsec
 14639      9C24A800 
 14639      0000
 14640              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14641              		.loc 1 953 44 view .LVU4783
 14642 05bc C461AB2A 		vcvtsi2sd	xmm14, xmm10, QWORD PTR 176[rsp]	# tmp615, tmp611, end_time.tv_sec
 14642      B424B000 
 14642      0000
 14643              	# sieve_extend.c:951:             passes++;
 951:sieve_extend.c ****             passes++;
 14644              		.loc 1 951 19 view .LVU4784
 14645 05c6 48FFC3   		inc	rbx	# passes
 14646              	.LVL954:
 952:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 14647              		.loc 1 952 13 is_stmt 1 view .LVU4785
 14648              		.loc 1 953 13 view .LVU4786
 14649 05c9 C462F1BB 		vfmsub231sd	xmm12, xmm1, QWORD PTR .LC9[rip]	# _295, tmp493,
 14649      25000000 
 14649      00
 14650 05d2 C462E1BD 		vfnmadd231sd	xmm14, xmm3, QWORD PTR .LC9[rip]	# _296, tmp496,
 14650      35000000 
 14650      00
 14651              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14652              		.loc 1 953 26 is_stmt 0 view .LVU4787
 14653 05db C4C11B58 		vaddsd	xmm0, xmm12, xmm14	# elapsed_time, _295, _296
 14653      C6
 14654              	.LVL955:
 948:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14655              		.loc 1 948 15 is_stmt 1 view .LVU4788
 14656              	# sieve_extend.c:948:         for (;elapsed_time <= option_max_time;) {
 948:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14657              		.loc 1 948 9 is_stmt 0 view .LVU4789
 14658 05e0 C5F92F84 		vcomisd	xmm0, QWORD PTR 136[rsp]	# elapsed_time, option_max_time
 14658      24880000 
 14658      00
 14659 05e9 0F878500 		ja	.L1332	#,
 14659      0000
 14660              	.LVL956:
 949:sieve_extend.c ****             sieve_delete(sieve);
 14661              		.loc 1 949 13 is_stmt 1 view .LVU4790
 14662              	# sieve_extend.c:949:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 949:sieve_extend.c ****             sieve_delete(sieve);
 14663              		.loc 1 949 21 is_stmt 0 view .LVU4791
 14664 05ef 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	#, option_maxFactor
 14664      90000000 
 14665 05f7 4C89E6   		mov	rsi, r12	#, best_result$8
 14666 05fa E8000000 		call	sieve_shake	#
 14666      00
 14667              	.LVL957:
 14668              	.LBB1111:
 14669              	.LBB1108:
 14670              	# sieve_extend.c:116:     free(sieve->bitstorage);
 116:sieve_extend.c ****     free(sieve);
GAS LISTING /tmp/ccIyIA9Z.s 			page 389


 14671              		.loc 1 116 5 view .LVU4792
 14672 05ff 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_187->bitstorage
 14673              	.LBE1108:
 14674              	.LBE1111:
 14675              	# sieve_extend.c:949:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize
 949:sieve_extend.c ****             sieve_delete(sieve);
 14676              		.loc 1 949 21 view .LVU4793
 14677 0602 4989C6   		mov	r14, rax	# sieve, tmp610
 950:sieve_extend.c ****             passes++;
 14678              		.loc 1 950 13 is_stmt 1 view .LVU4794
 14679              	.LVL958:
 14680              	.LBB1112:
 115:sieve_extend.c ****     free(sieve->bitstorage);
 14681              		.loc 1 115 13 view .LVU4795
 14682              	.LBB1109:
 116:sieve_extend.c ****     free(sieve);
 14683              		.loc 1 116 5 view .LVU4796
 14684 0605 E8000000 		call	free@PLT	#
 14684      00
 14685              	.LVL959:
 117:sieve_extend.c **** }
 14686              		.loc 1 117 5 view .LVU4797
 14687 060a 4C89F7   		mov	rdi, r14	#, sieve
 14688 060d E8000000 		call	free@PLT	#
 14688      00
 14689              	.LVL960:
 117:sieve_extend.c **** }
 14690              		.loc 1 117 5 is_stmt 0 view .LVU4798
 14691              	.LBE1109:
 14692              	.LBE1112:
 951:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 14693              		.loc 1 951 13 is_stmt 1 view .LVU4799
 14694              	# sieve_extend.c:952:             clock_gettime(CLOCK_MONOTONIC,&end_time);
 952:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 14695              		.loc 1 952 13 is_stmt 0 view .LVU4800
 14696 0612 4C89EE   		mov	rsi, r13	#, tmp511
 14697 0615 BF010000 		mov	edi, 1	#,
 14697      00
 14698 061a E8000000 		call	clock_gettime@PLT	#
 14698      00
 14699              	.LVL961:
 14700              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14701              		.loc 1 953 62 view .LVU4801
 14702 061f C4410057 		vxorps	xmm15, xmm15, xmm15	# tmp611
 14702      FF
 14703 0624 C4E1832A 		vcvtsi2sd	xmm1, xmm15, QWORD PTR 184[rsp]	# tmp618, tmp611, end_time.tv_nsec
 14703      8C24B800 
 14703      0000
 14704              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14705              		.loc 1 953 68 view .LVU4802
 14706 062e C4E1832A 		vcvtsi2sd	xmm0, xmm15, QWORD PTR 160[rsp]	# tmp619, tmp611, start_time.tv_sec
 14706      8424A000 
 14706      0000
 14707              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14708              		.loc 1 953 108 view .LVU4803
 14709 0638 C4E1832A 		vcvtsi2sd	xmm3, xmm15, QWORD PTR 168[rsp]	# tmp620, tmp611, start_time.tv_nsec
 14709      9C24A800 
GAS LISTING /tmp/ccIyIA9Z.s 			page 390


 14709      0000
 14710              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14711              		.loc 1 953 44 view .LVU4804
 14712 0642 C4E1832A 		vcvtsi2sd	xmm4, xmm15, QWORD PTR 176[rsp]	# tmp621, tmp611, end_time.tv_sec
 14712      A424B000 
 14712      0000
 14713              	# sieve_extend.c:951:             passes++;
 951:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 14714              		.loc 1 951 19 view .LVU4805
 14715 064c 48FFC3   		inc	rbx	# passes
 14716              	.LVL962:
 952:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 14717              		.loc 1 952 13 is_stmt 1 view .LVU4806
 14718              		.loc 1 953 13 view .LVU4807
 14719 064f C4E2F1BB 		vfmsub231sd	xmm0, xmm1, QWORD PTR .LC9[rip]	# _295, tmp583,
 14719      05000000 
 14719      00
 14720 0658 C4E2E1BD 		vfnmadd231sd	xmm4, xmm3, QWORD PTR .LC9[rip]	# _296, tmp586,
 14720      25000000 
 14720      00
 14721              	# sieve_extend.c:953:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_ti
 14722              		.loc 1 953 26 is_stmt 0 view .LVU4808
 14723 0661 C5FB58C4 		vaddsd	xmm0, xmm0, xmm4	# elapsed_time, _295, _296
 14724              	.LVL963:
 948:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14725              		.loc 1 948 15 is_stmt 1 view .LVU4809
 14726              	# sieve_extend.c:948:         for (;elapsed_time <= option_max_time;) {
 948:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 14727              		.loc 1 948 9 is_stmt 0 view .LVU4810
 14728 0665 C5F92F84 		vcomisd	xmm0, QWORD PTR 136[rsp]	# elapsed_time, option_max_time
 14728      24880000 
 14728      00
 14729 066e 0F86F5FE 		jbe	.L1334	#,
 14729      FFFF
 14730              	.LVL964:
 14731              	.L1332:
 954:sieve_extend.c ****         }
 955:sieve_extend.c ****         #ifdef _OPENMP
 956:sieve_extend.c ****         printf("rogiervandam_extend_epar;%ju;%f;%ju;algorithm=other,faithful=yes,bits=1\n", (uintma
 957:sieve_extend.c ****         #else
 958:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;%ju;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)p
 14732              		.loc 1 958 9 is_stmt 1 view .LVU4811
 14733              	.LBB1113:
 14734              	.LBI1113:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14735              		.loc 3 105 1 view .LVU4812
 14736              	.LBB1114:
 14737              		.loc 3 107 3 view .LVU4813
 14738              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14739              		.loc 3 107 10 is_stmt 0 view .LVU4814
 14740 0674 B9010000 		mov	ecx, 1	#,
 14740      00
 14741 0679 4889DA   		mov	rdx, rbx	#, passes
 14742 067c 488D3500 		lea	rsi, .LC77[rip]	#,
 14742      000000
 14743 0683 BF010000 		mov	edi, 1	#,
 14743      00
GAS LISTING /tmp/ccIyIA9Z.s 			page 391


 14744 0688 B8010000 		mov	eax, 1	#,
 14744      00
 14745 068d C5FB1144 		vmovsd	QWORD PTR 8[rsp], xmm0	# %sfp, elapsed_time
 14745      2408
 14746 0693 E8000000 		call	__printf_chk@PLT	#
 14746      00
 14747              	.LVL965:
 14748              		.loc 3 107 10 view .LVU4815
 14749              	.LBE1114:
 14750              	.LBE1113:
 959:sieve_extend.c ****         #endif
 960:sieve_extend.c ****         verbose(1) printf("\033[0;32m(Passes - per %.1f seconds: %f - per second \033[1;33m%.1f\033
 14751              		.loc 1 960 9 is_stmt 1 view .LVU4816
 14752 0698 83BC2480 		cmp	DWORD PTR 128[rsp], 0	# option_verboselevel,
 14752      00000000 
 14753 06a0 0F8FFC00 		jg	.L1412	#,
 14753      0000
 14754              	.LVL966:
 14755              	.L1335:
 961:sieve_extend.c ****         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (total %ju) - per %.1f 
 14756              		.loc 1 961 9 view .LVU4817
 962:sieve_extend.c ****     #ifdef _OPENMP
 963:sieve_extend.c ****     }
 964:sieve_extend.c ****     #endif
 965:sieve_extend.c **** 
 966:sieve_extend.c ****     // show results for --show command line option
 967:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 14757              		.loc 1 967 5 view .LVU4818
 14758              	# sieve_extend.c:967:     if (option_showMaxFactor > 0) {
 14759              		.loc 1 967 8 is_stmt 0 view .LVU4819
 14760 06a6 4883BC24 		cmp	QWORD PTR 152[rsp], 0	# option_showMaxFactor,
 14760      98000000 
 14760      00
 14761 06af 0F85A500 		jne	.L1413	#,
 14761      0000
 14762              	.LVL967:
 14763              		.p2align 4,,10
 14764 06b5 0F1F00   		.p2align 3
 14765              	.L1338:
 14766              	.LBB1115:
 14767              	.LBB1094:
 14768              	.LBB1091:
 14769              	.LBB1084:
 908:sieve_extend.c ****             }
 14770              		.loc 1 908 29 is_stmt 1 discriminator 1 view .LVU4820
 14771              	.LBE1084:
 14772              	.LBE1091:
 14773              	.LBE1094:
 14774              	.LBE1115:
 14775              	# sieve_extend.c:973: }
 968:sieve_extend.c ****         printf("Show result set:\n");
 969:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
 970:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 971:sieve_extend.c ****         sieve_delete(sieve);
 972:sieve_extend.c ****     }
 973:sieve_extend.c **** }
 14776              		.loc 1 973 1 is_stmt 0 discriminator 1 view .LVU4821
GAS LISTING /tmp/ccIyIA9Z.s 			page 392


 14777 06b8 488B8424 		mov	rax, QWORD PTR 200[rsp]	# tmp672, D.7358
 14777      C8000000 
 14778 06c0 64483304 		xor	rax, QWORD PTR fs:40	# tmp672, MEM[(<address-space-1> long unsigned int *)40B]
 14778      25280000 
 14778      00
 14779 06c9 0F85D50B 		jne	.L1414	#,
 14779      0000
 14780              	# sieve_extend.c:973: }
 14781              		.loc 1 973 1 view .LVU4822
 14782 06cf 4881C4D8 		add	rsp, 216	#,
 14782      000000
 14783              		.cfi_remember_state
 14784              		.cfi_def_cfa_offset 56
 14785 06d6 5B       		pop	rbx	#
 14786              		.cfi_def_cfa_offset 48
 14787 06d7 5D       		pop	rbp	#
 14788              		.cfi_def_cfa_offset 40
 14789 06d8 415C     		pop	r12	#
 14790              		.cfi_def_cfa_offset 32
 14791 06da 415D     		pop	r13	#
 14792              		.cfi_def_cfa_offset 24
 14793 06dc 415E     		pop	r14	#
 14794              		.cfi_def_cfa_offset 16
 14795 06de 31C0     		xor	eax, eax	#
 14796 06e0 415F     		pop	r15	#
 14797              		.cfi_def_cfa_offset 8
 14798 06e2 C3       		ret	
 14799              	.LVL968:
 14800              	.L1404:
 14801              		.cfi_restore_state
 896:sieve_extend.c ****         verbose(2) printf("\n");
 14802              		.loc 1 896 22 is_stmt 1 view .LVU4823
 14803              	.LBB1116:
 14804              	.LBI1116:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14805              		.loc 3 105 1 view .LVU4824
 14806              	.LBB1117:
 14807              		.loc 3 107 3 view .LVU4825
 14808              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14809              		.loc 3 107 10 is_stmt 0 view .LVU4826
 14810 06e3 488D3500 		lea	rsi, .LC56[rip]	#,
 14810      000000
 14811 06ea BF010000 		mov	edi, 1	#,
 14811      00
 14812 06ef 31C0     		xor	eax, eax	#
 14813 06f1 E8000000 		call	__printf_chk@PLT	#
 14813      00
 14814              	.LVL969:
 14815              		.loc 3 107 10 view .LVU4827
 14816              	.LBE1117:
 14817              	.LBE1116:
 896:sieve_extend.c ****         verbose(2) printf("\n");
 14818              		.loc 1 896 47 is_stmt 1 view .LVU4828
 14819 06f6 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 14819      000000
 14820 06fd E8000000 		call	fflush@PLT	#
 14820      00
GAS LISTING /tmp/ccIyIA9Z.s 			page 393


 14821              	.LVL970:
 14822 0702 E9F8FAFF 		jmp	.L1268	#
 14822      FF
 14823              	.LVL971:
 14824              	.L1286:
 14825              	.LBB1118:
 875:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 14826              		.loc 1 875 14 view .LVU4829
 14827              	# sieve_extend.c:875:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1
 875:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 14828              		.loc 1 875 18 is_stmt 0 view .LVU4830
 14829 0707 31C0     		xor	eax, eax	#
 14830 0709 488D9424 		lea	rdx, 144[rsp]	# tmp385,
 14830      90000000 
 14831 0711 488D3500 		lea	rsi, .LC49[rip]	#,
 14831      000000
 14832 0718 4C89C7   		mov	rdi, r8	#, _4
 14833 071b E8000000 		call	__isoc99_sscanf@PLT	#
 14833      00
 14834              	.LVL972:
 14835              	# sieve_extend.c:875:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1
 875:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 14836              		.loc 1 875 17 view .LVU4831
 14837 0720 FFC8     		dec	eax	# tmp604
 14838 0722 0F84C0F9 		je	.L1274	#,
 14838      FFFF
 876:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 14839              		.loc 1 876 13 is_stmt 1 view .LVU4832
 14840              	.LVL973:
 14841              	.LBB1042:
 14842              	.LBI1042:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14843              		.loc 3 98 1 view .LVU4833
 14844              	.LBB1043:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14845              		.loc 3 100 3 view .LVU4834
 14846              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14847              		.loc 3 100 10 is_stmt 0 view .LVU4835
 14848 0728 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 14849 072b 488D1500 		lea	rdx, .LC55[rip]	#,
 14849      000000
 14850 0732 EB0A     		jmp	.L1398	#
 14851              	.LVL974:
 14852              	.L1272:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14853              		.loc 3 100 10 view .LVU4836
 14854              	.LBE1043:
 14855              	.LBE1042:
 836:sieve_extend.c ****             }
 14856              		.loc 1 836 17 is_stmt 1 view .LVU4837
 14857              	.LBB1044:
 14858              	.LBI1044:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14859              		.loc 3 98 1 view .LVU4838
 14860              	.LBB1045:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccIyIA9Z.s 			page 394


 14861              		.loc 3 100 3 view .LVU4839
 14862              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14863              		.loc 3 100 10 is_stmt 0 view .LVU4840
 14864 0734 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 14865 0737 488D1500 		lea	rdx, .LC35[rip]	#,
 14865      000000
 14866              	.LVL975:
 14867              	.L1398:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14868              		.loc 3 100 10 view .LVU4841
 14869              	.LBE1045:
 14870              	.LBE1044:
 14871              	.LBB1046:
 14872              	.LBB1047:
 14873 073e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 14873      000000
 14874 0745 BE010000 		mov	esi, 1	#,
 14874      00
 14875 074a 31C0     		xor	eax, eax	#
 14876 074c E8000000 		call	__fprintf_chk@PLT	#
 14876      00
 14877              	.LVL976:
 14878              	.L1399:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14879              		.loc 3 100 10 view .LVU4842
 14880              	.LBE1047:
 14881              	.LBE1046:
 844:sieve_extend.c ****             }
 14882              		.loc 1 844 80 is_stmt 1 view .LVU4843
 14883 0751 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_191(D)
 14884 0755 E8000000 		call	usage	#
 14884      00
 14885              	.LVL977:
 14886              	.L1413:
 844:sieve_extend.c ****             }
 14887              		.loc 1 844 80 is_stmt 0 view .LVU4844
 14888              	.LBE1118:
 14889              	.LBB1119:
 968:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
 14890              		.loc 1 968 9 is_stmt 1 view .LVU4845
 14891              	.LBB1120:
 14892              	.LBI1120:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14893              		.loc 3 105 1 view .LVU4846
 14894              	.LBB1121:
 14895              		.loc 3 107 3 view .LVU4847
 14896              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14897              		.loc 3 107 10 is_stmt 0 view .LVU4848
 14898 075a 488D3D00 		lea	rdi, .LC79[rip]	#,
 14898      000000
 14899 0761 E8000000 		call	puts@PLT	#
 14899      00
 14900              	.LVL978:
 14901              		.loc 3 107 10 view .LVU4849
 14902              	.LBE1121:
 14903              	.LBE1120:
GAS LISTING /tmp/ccIyIA9Z.s 			page 395


 969:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 14904              		.loc 1 969 9 is_stmt 1 view .LVU4850
 14905              	# sieve_extend.c:969:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFacto
 969:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 14906              		.loc 1 969 33 is_stmt 0 view .LVU4851
 14907 0766 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	# option_maxFactor.72_119, option_maxFactor
 14907      90000000 
 14908 076e 4889FE   		mov	rsi, rdi	#, option_maxFactor.72_119
 14909 0771 E8000000 		call	sieve_shake	#
 14909      00
 14910              	.LVL979:
 14911              	# sieve_extend.c:970:         show_primes(sieve, option_showMaxFactor);
 970:sieve_extend.c ****         sieve_delete(sieve);
 14912              		.loc 1 970 9 view .LVU4852
 14913 0776 488B9424 		mov	rdx, QWORD PTR 152[rsp]	#, option_showMaxFactor
 14913      98000000 
 14914              	# sieve_extend.c:969:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFacto
 969:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 14915              		.loc 1 969 33 view .LVU4853
 14916 077e 4989C7   		mov	r15, rax	# sieve, tmp609
 14917              	.LVL980:
 970:sieve_extend.c ****         sieve_delete(sieve);
 14918              		.loc 1 970 9 is_stmt 1 view .LVU4854
 14919 0781 4889C7   		mov	rdi, rax	#, sieve
 14920 0784 488D7008 		lea	rsi, 8[rax]	# tmp506,
 14921 0788 E8000000 		call	show_primes.isra.0	#
 14921      00
 14922              	.LVL981:
 971:sieve_extend.c ****     }
 14923              		.loc 1 971 9 view .LVU4855
 14924              	.LBB1122:
 14925              	.LBI1122:
 115:sieve_extend.c ****     free(sieve->bitstorage);
 14926              		.loc 1 115 13 view .LVU4856
 14927              	.LBB1123:
 116:sieve_extend.c ****     free(sieve);
 14928              		.loc 1 116 5 view .LVU4857
 14929 078d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_177->bitstorage
 14930 0790 E8000000 		call	free@PLT	#
 14930      00
 14931              	.LVL982:
 117:sieve_extend.c **** }
 14932              		.loc 1 117 5 view .LVU4858
 14933 0795 4C89FF   		mov	rdi, r15	#, sieve
 14934 0798 E8000000 		call	free@PLT	#
 14934      00
 14935              	.LVL983:
 14936              	# sieve_extend.c:118: }
 118:sieve_extend.c **** 
 14937              		.loc 1 118 1 is_stmt 0 view .LVU4859
 14938 079d E916FFFF 		jmp	.L1338	#
 14938      FF
 14939              	.LVL984:
 14940              	.L1412:
 118:sieve_extend.c **** 
 14941              		.loc 1 118 1 view .LVU4860
 14942              	.LBE1123:
GAS LISTING /tmp/ccIyIA9Z.s 			page 396


 14943              	.LBE1122:
 14944              	.LBE1119:
 960:sieve_extend.c ****         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (total %ju) - per %.1f 
 14945              		.loc 1 960 20 is_stmt 1 discriminator 1 view .LVU4861
 14946 07a2 4885DB   		test	rbx, rbx	# passes
 14947 07a5 C5FB106C 		vmovsd	xmm5, QWORD PTR 8[rsp]	# elapsed_time, %sfp
 14947      2408
 14948 07ab C5E857D2 		vxorps	xmm2, xmm2, xmm2	# tmp611
 14949 07af 0F888809 		js	.L1336	#,
 14949      0000
 14950 07b5 C461EB2A 		vcvtsi2sd	xmm9, xmm2, rbx	# tmp616, tmp611, passes
 14950      CB
 14951              	.LVL985:
 14952              	.L1337:
 14953              	# sieve_extend.c:960:         verbose(1) printf("\033[0;32m(Passes - per %.1f seconds: %f - per sec
 960:sieve_extend.c ****         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (total %ju) - per %.1f 
 14954              		.loc 1 960 151 is_stmt 0 discriminator 1 view .LVU4862
 14955 07ba C5FB1084 		vmovsd	xmm0, QWORD PTR 136[rsp]	# option_max_time.66_114, option_max_time
 14955      24880000 
 14955      00
 14956              	.LVL986:
 14957              	.LBB1124:
 14958              	.LBI1124:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14959              		.loc 3 105 1 is_stmt 1 discriminator 1 view .LVU4863
 14960              	.LBB1125:
 14961              		.loc 3 107 3 discriminator 1 view .LVU4864
 14962              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14963              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4865
 14964 07c3 C5B35ED5 		vdivsd	xmm2, xmm9, xmm5	#, _111, elapsed_time
 14965              	.LBE1125:
 14966              	.LBE1124:
 14967              	# sieve_extend.c:960:         verbose(1) printf("\033[0;32m(Passes - per %.1f seconds: %f - per sec
 960:sieve_extend.c ****         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (total %ju) - per %.1f 
 14968              		.loc 1 960 151 discriminator 1 view .LVU4866
 14969 07c7 C53359D0 		vmulsd	xmm10, xmm9, xmm0	# tmp503, _111, option_max_time.66_114
 14970              	.LBB1127:
 14971              	.LBB1126:
 14972              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14973              		.loc 3 107 10 discriminator 1 view .LVU4867
 14974 07cb 488D3500 		lea	rsi, .LC78[rip]	#,
 14974      000000
 14975 07d2 BF010000 		mov	edi, 1	#,
 14975      00
 14976 07d7 B8030000 		mov	eax, 3	#,
 14976      00
 14977 07dc C5AB5ECD 		vdivsd	xmm1, xmm10, xmm5	#, tmp503, elapsed_time
 14978 07e0 E8000000 		call	__printf_chk@PLT	#
 14978      00
 14979              	.LVL987:
 14980 07e5 E9BCFEFF 		jmp	.L1335	#
 14980      FF
 14981              	.LVL988:
 14982              	.L1411:
 14983              		.loc 3 107 10 discriminator 1 view .LVU4868
 14984              	.LBE1126:
 14985              	.LBE1127:
GAS LISTING /tmp/ccIyIA9Z.s 			page 397


 14986              	.LBB1128:
 918:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 14987              		.loc 1 918 9 is_stmt 1 view .LVU4869
 14988              	# sieve_extend.c:918:         tuning_result_type tuning_result = tune(option_tunelevel, option_maxF
 918:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 14989              		.loc 1 918 44 is_stmt 0 view .LVU4870
 14990 07ea 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	# option_maxFactor.55_85, option_maxFactor
 14990      90000000 
 14991 07f2 41FFC9   		dec	r9d	#
 14992 07f5 48897C24 		mov	QWORD PTR 96[rsp], rdi	# %sfp, option_maxFactor.55_85
 14992      60
 14993              	.LVL989:
 14994              	.LBB1129:
 14995              	.LBI1129:
 681:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 14996              		.loc 1 681 27 is_stmt 1 view .LVU4871
 14997              	.LBB1130:
 682:sieve_extend.c **** 
 14998              		.loc 1 682 5 view .LVU4872
 684:sieve_extend.c ****     best_blocksize_bits = 0;
 14999              		.loc 1 684 5 view .LVU4873
 685:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 15000              		.loc 1 685 5 view .LVU4874
 686:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 15001              		.loc 1 686 5 view .LVU4875
 687:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 15002              		.loc 1 687 5 view .LVU4876
 688:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 15003              		.loc 1 688 5 view .LVU4877
 689:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 15004              		.loc 1 689 5 view .LVU4878
 690:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 15005              		.loc 1 690 5 view .LVU4879
 691:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 15006              		.loc 1 691 5 view .LVU4880
 692:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 15007              		.loc 1 692 5 view .LVU4881
 693:sieve_extend.c ****     double sample_duration = default_sample_duration;
 15008              		.loc 1 693 5 view .LVU4882
 694:sieve_extend.c **** 
 15009              		.loc 1 694 5 view .LVU4883
 697:sieve_extend.c ****         case 1:
 15010              		.loc 1 697 5 view .LVU4884
 15011 07fa 4183F902 		cmp	r9d, 2	# _255,
 15012 07fe 0F87FD08 		ja	.L1342	#,
 15012      0000
 15013 0804 488D0D00 		lea	rcx, CSWTCH.148[rip]	# tmp397,
 15013      000000
 15014 080b 4C8D0500 		lea	r8, CSWTCH.149[rip]	# tmp399,
 15014      000000
 15015 0812 488D0500 		lea	rax, CSWTCH.150[rip]	# tmp401,
 15015      000000
 15016 0819 4E8B1CC9 		mov	r11, QWORD PTR [rcx+r9*8]	# mediumstep_faster_steps, CSWTCH.148
 15017 081d 4F8B14C8 		mov	r10, QWORD PTR [r8+r9*8]	# vectorstep_faster_steps, CSWTCH.149
 15018 0821 4E8B2CC8 		mov	r13, QWORD PTR [rax+r9*8]	# freebits_steps, CSWTCH.150
 15019 0825 4C8D3500 		lea	r14, CSWTCH.151[rip]	# tmp403,
 15019      000000
GAS LISTING /tmp/ccIyIA9Z.s 			page 398


 15020              	.LVL990:
 697:sieve_extend.c ****         case 1:
 15021              		.loc 1 697 5 is_stmt 0 view .LVU4885
 15022 082c C4817B10 		vmovsd	xmm0, QWORD PTR [r14+r9*8]	# sample_duration, CSWTCH.151
 15022      04CE
 15023 0832 488D3500 		lea	rsi, CSWTCH.147[rip]	# tmp395,
 15023      000000
 15024 0839 4C895C24 		mov	QWORD PTR 112[rsp], r11	# %sfp, mediumstep_faster_steps
 15024      70
 15025 083e 4C895424 		mov	QWORD PTR 104[rsp], r10	# %sfp, vectorstep_faster_steps
 15025      68
 15026 0843 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, freebits_steps
 15026      48
 15027 0848 48C74424 		mov	QWORD PTR 80[rsp], 16	# %sfp,
 15027      50100000 
 15027      00
 15028 0851 4A8B1CCE 		mov	rbx, QWORD PTR [rsi+r9*8]	# smallstep_faster_steps, CSWTCH.147
 15029 0855 C5FB1144 		vmovsd	QWORD PTR 88[rsp], xmm0	# %sfp, sample_duration
 15029      2458
 15030              	.L1299:
 15031 085b 8BAC2480 		mov	ebp, DWORD PTR 128[rsp]	# pretmp_470, option_verboselevel
 15031      000000
 15032              	.LVL991:
 697:sieve_extend.c ****         case 1:
 15033              		.loc 1 697 5 view .LVU4886
 15034 0862 896C2410 		mov	DWORD PTR 16[rsp], ebp	# %sfp, pretmp_470
 15035              	.LVL992:
 724:sieve_extend.c ****     verbose_at(1) { printf("Tuning..."); fflush(stdout); }
 15036              		.loc 1 724 5 is_stmt 1 view .LVU4887
 15037 0866 FFCD     		dec	ebp	# pretmp_470
 15038 0868 0F8FEA08 		jg	.L1415	#,
 15038      0000
 725:sieve_extend.c ****     verbose(2) printf("\n");
 15039              		.loc 1 725 5 view .LVU4888
 15040 086e 751F     		jne	.L1301	#,
 725:sieve_extend.c ****     verbose(2) printf("\n");
 15041              		.loc 1 725 21 view .LVU4889
 15042              	.LVL993:
 15043              	.LBB1131:
 15044              	.LBI1131:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15045              		.loc 3 105 1 view .LVU4890
 15046              	.LBB1132:
 15047              		.loc 3 107 3 view .LVU4891
 15048              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15049              		.loc 3 107 10 is_stmt 0 view .LVU4892
 15050 0870 BF010000 		mov	edi, 1	#,
 15050      00
 15051              	.LVL994:
 15052              		.loc 3 107 10 view .LVU4893
 15053 0875 488D3500 		lea	rsi, .LC62[rip]	#,
 15053      000000
 15054 087c 31C0     		xor	eax, eax	#
 15055 087e E8000000 		call	__printf_chk@PLT	#
 15055      00
 15056              	.LVL995:
 15057              		.loc 3 107 10 view .LVU4894
GAS LISTING /tmp/ccIyIA9Z.s 			page 399


 15058              	.LBE1132:
 15059              	.LBE1131:
 725:sieve_extend.c ****     verbose(2) printf("\n");
 15060              		.loc 1 725 42 is_stmt 1 view .LVU4895
 15061 0883 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 15061      000000
 15062 088a E8000000 		call	fflush@PLT	#
 15062      00
 15063              	.LVL996:
 726:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 15064              		.loc 1 726 5 view .LVU4896
 15065              	.L1301:
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15066              		.loc 1 727 5 view .LVU4897
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15067              		.loc 1 728 5 view .LVU4898
 15068              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15069              		.loc 1 727 33 is_stmt 0 view .LVU4899
 15070 088f 41BF4000 		mov	r15d, 64	# tmp409,
 15070      0000
 15071              	.LVL997:
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15072              		.loc 1 727 33 view .LVU4900
 15073 0895 4C89F8   		mov	rax, r15	# tmp407, tmp409
 15074 0898 31D2     		xor	edx, edx	# tmp408
 15075 089a 48F7F3   		div	rbx	# smallstep_faster_steps
 15076              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15077              		.loc 1 727 254 view .LVU4901
 15078 089d 31D2     		xor	edx, edx	# tmp417
 15079              	# sieve_extend.c:728:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15080              		.loc 1 728 41 view .LVU4902
 15081 089f 31ED     		xor	ebp, ebp	# tuning_results
 15082              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15083              		.loc 1 727 83 view .LVU4903
 15084 08a1 488D7801 		lea	rdi, 1[rax]	# tmp414,
 15085              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15086              		.loc 1 727 254 view .LVU4904
 15087 08a5 B8001000 		mov	eax, 4096	# tmp418,
 15087      00
 15088 08aa 48F77424 		div	QWORD PTR 72[rsp]	# %sfp
 15088      48
 15089              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15090              		.loc 1 727 90 view .LVU4905
 15091 08af 31D2     		xor	edx, edx	# tmp426
 15092              	# sieve_extend.c:728:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15093              		.loc 1 728 41 view .LVU4906
 15094 08b1 480FAFF8 		imul	rdi, rax	# tmp423, tmp416
 15095              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15096              		.loc 1 727 90 view .LVU4907
GAS LISTING /tmp/ccIyIA9Z.s 			page 400


 15097 08b5 4C89F8   		mov	rax, r15	# tmp409, tmp409
 15098 08b8 48F77424 		div	QWORD PTR 112[rsp]	# %sfp
 15098      70
 15099              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15100              		.loc 1 727 148 view .LVU4908
 15101 08bd 31D2     		xor	edx, edx	# tmp436
 15102              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15103              		.loc 1 727 141 view .LVU4909
 15104 08bf 48FFC0   		inc	rax	# tmp432
 15105              	# sieve_extend.c:728:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15106              		.loc 1 728 41 view .LVU4910
 15107 08c2 480FAFF8 		imul	rdi, rax	# tmp433, tmp432
 15108              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15109              		.loc 1 727 148 view .LVU4911
 15110 08c6 B8000100 		mov	eax, 256	# tmp437,
 15110      00
 15111 08cb 48F77424 		div	QWORD PTR 104[rsp]	# %sfp
 15111      68
 15112              	# sieve_extend.c:727:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 727:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 15113              		.loc 1 727 201 view .LVU4912
 15114 08d0 48FFC0   		inc	rax	# tmp442
 15115              	# sieve_extend.c:728:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15116              		.loc 1 728 41 view .LVU4913
 15117 08d3 480FAFF8 		imul	rdi, rax	# tmp443, tmp442
 15118 08d7 48C1E708 		sal	rdi, 8	# tmp443,
 15119 08db E8000000 		call	malloc@PLT	#
 15119      00
 15120              	.LVL998:
 15121 08e0 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp607
 15121      20
 15122              	.LVL999:
 729:sieve_extend.c ****     counter_t tuning_result_index=0;
 15123              		.loc 1 729 5 is_stmt 1 view .LVU4914
 730:sieve_extend.c ****     
 15124              		.loc 1 730 5 view .LVU4915
 732:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 15125              		.loc 1 732 5 view .LVU4916
 15126              	.LBB1133:
 732:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 15127              		.loc 1 732 10 view .LVU4917
 732:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 15128              		.loc 1 732 42 view .LVU4918
 15129              	.LBB1134:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15130              		.loc 1 733 62 view .LVU4919
 15131              	.LBE1134:
 15132              	.LBE1133:
 15133              	# sieve_extend.c:728:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 728:sieve_extend.c ****     counter_t tuning_results=0;
 15134              		.loc 1 728 41 is_stmt 0 view .LVU4920
 15135 08e5 48C74424 		mov	QWORD PTR 56[rsp], 0	# %sfp,
GAS LISTING /tmp/ccIyIA9Z.s 			page 401


 15135      38000000 
 15135      00
 15136 08ee 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 15136      30000000 
 15136      00
 15137 08f7 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 15137      28000000 
 15137      00
 15138 0900 48C74424 		mov	QWORD PTR 8[rsp], 0	# %sfp,
 15138      08000000 
 15138      00
 15139 0909 C5C157FF 		vxorpd	xmm7, xmm7, xmm7	# tmp508
 15140 090d C5FB117C 		vmovsd	QWORD PTR 120[rsp], xmm7	# %sfp, tmp508
 15140      2478
 15141 0913 C5FB117C 		vmovsd	QWORD PTR 24[rsp], xmm7	# %sfp, tmp508
 15141      2418
 15142              	.LVL1000:
 15143 0919 0F1F8000 		.p2align 4,,10
 15143      000000
 15144              		.p2align 3
 15145              	.L1302:
 15146              	.LBB1174:
 15147              	.LBB1171:
 15148              	.LBB1135:
 734:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15149              		.loc 1 734 67 is_stmt 1 view .LVU4921
 15150              	.LBB1136:
 15151              	# sieve_extend.c:735:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15152              		.loc 1 735 32 is_stmt 0 view .LVU4922
 15153 0920 4C8B7424 		mov	r14, QWORD PTR 8[rsp]	# vectorstep_faster, %sfp
 15153      08
 15154              	.LVL1001:
 15155              		.p2align 4,,10
 15156 0925 0F1F00   		.p2align 3
 15157              	.L1315:
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15158              		.loc 1 735 50 is_stmt 1 view .LVU4923
 15159              	.LBB1137:
 15160              	# sieve_extend.c:736:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15161              		.loc 1 736 36 is_stmt 0 view .LVU4924
 15162 0928 C7442444 		mov	DWORD PTR 68[rsp], 6	# %sfp,
 15162      06000000 
 15163              	.LBE1137:
 15164              	# sieve_extend.c:735:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15165              		.loc 1 735 32 view .LVU4925
 15166 0930 41BD0001 		mov	r13d, 256	# blocksize_kb,
 15166      0000
 15167              	.LVL1002:
 15168 0936 662E0F1F 		.p2align 4,,10
 15168      84000000 
 15168      0000
 15169              		.p2align 3
 15170              	.L1313:
 15171              	.LBB1164:
GAS LISTING /tmp/ccIyIA9Z.s 			page 402


 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15172              		.loc 1 736 49 is_stmt 1 view .LVU4926
 15173 0940 4C6BCD68 		imul	r9, rbp, 104	# tmp461, tuning_results,
 15174 0944 4C8B6424 		mov	r12, QWORD PTR 32[rsp]	# tuning_result, %sfp
 15174      20
 15175              	# sieve_extend.c:736:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15176              		.loc 1 736 134 is_stmt 0 view .LVU4927
 15177 0949 4C89EB   		mov	rbx, r13	# ivtmp.706, blocksize_kb
 15178 094c 4F8D3C0C 		lea	r15, [r12+r9]	# ivtmp.705,
 15179 0950 48C1E30D 		sal	rbx, 13	# ivtmp.706,
 15180              	# sieve_extend.c:736:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15181              		.loc 1 736 36 view .LVU4928
 15182 0954 4531E4   		xor	r12d, r12d	# free_bits
 15183 0957 EB53     		jmp	.L1311	#
 15184              	.LVL1003:
 15185 0959 0F1F8000 		.p2align 4,,10
 15185      000000
 15186              		.p2align 3
 15187              	.L1308:
 15188              	.LBB1138:
 754:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 15189              		.loc 1 754 29 is_stmt 1 view .LVU4929
 755:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 15190              		.loc 1 755 29 view .LVU4930
 756:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 15191              		.loc 1 756 29 view .LVU4931
 757:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 15192              		.loc 1 757 29 view .LVU4932
 758:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 15193              		.loc 1 758 29 view .LVU4933
 759:sieve_extend.c ****                         }
 15194              		.loc 1 759 29 view .LVU4934
 15195              	# sieve_extend.c:759:                             if (option_verboselevel >=2) { printf(".(>)"); tu
 759:sieve_extend.c ****                         }
 15196              		.loc 1 759 32 is_stmt 0 view .LVU4935
 15197 0960 837C2410 		cmp	DWORD PTR 16[rsp], 1	# %sfp,
 15197      01
 15198 0965 0F8F0504 		jg	.L1416	#,
 15198      0000
 759:sieve_extend.c ****                         }
 15199              		.loc 1 759 32 view .LVU4936
 15200 096b 488B7424 		mov	rsi, QWORD PTR 8[rsp]	# mediumstep_faster, %sfp
 15200      08
 15201 0970 4C897424 		mov	QWORD PTR 56[rsp], r14	# %sfp, vectorstep_faster
 15201      38
 15202 0975 48897424 		mov	QWORD PTR 48[rsp], rsi	# %sfp, mediumstep_faster
 15202      30
 15203              	# sieve_extend.c:755:                             best_blocksize_bits = blocksize_bits;
 755:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 15204              		.loc 1 755 49 view .LVU4937
 15205 097a 48895C24 		mov	QWORD PTR 40[rsp], rbx	# %sfp, ivtmp.706
 15205      28
 15206              	# sieve_extend.c:754:                             best_avg = tuning_result[tuning_result_index].avg
 754:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 15207              		.loc 1 754 38 view .LVU4938
GAS LISTING /tmp/ccIyIA9Z.s 			page 403


 15208 097f C5FB115C 		vmovsd	QWORD PTR 24[rsp], xmm3	# %sfp, _302
 15208      2418
 15209              	.LVL1004:
 15210              	.L1303:
 762:sieve_extend.c ****                         verbose_at(1) { printf("\rTuning...tuning %ju options..",(uintmax_t)tuning_
 15211              		.loc 1 762 25 is_stmt 1 view .LVU4939
 763:sieve_extend.c ****                     }
 15212              		.loc 1 763 25 view .LVU4940
 15213 0985 837C2410 		cmp	DWORD PTR 16[rsp], 1	# %sfp,
 15213      01
 15214 098a 0F84B003 		je	.L1417	#,
 15214      0000
 15215              	.L1306:
 763:sieve_extend.c ****                     }
 15216              		.loc 1 763 25 is_stmt 0 view .LVU4941
 15217              	.LBE1138:
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15218              		.loc 1 736 141 is_stmt 1 view .LVU4942
 15219              	# sieve_extend.c:736:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15220              		.loc 1 736 151 is_stmt 0 view .LVU4943
 15221 0990 488B7C24 		mov	rdi, QWORD PTR 72[rsp]	# freebits_steps, %sfp
 15221      48
 15222 0995 4983C768 		add	r15, 104	# ivtmp.705,
 15223 0999 4901FC   		add	r12, rdi	# free_bits, freebits_steps
 15224              	.LVL1005:
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15225              		.loc 1 736 49 is_stmt 1 view .LVU4944
 15226 099c 4829FB   		sub	rbx, rdi	# ivtmp.706, freebits_steps
 15227              	.LVL1006:
 15228              	# sieve_extend.c:736:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 736:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 15229              		.loc 1 736 21 is_stmt 0 view .LVU4945
 15230 099f 4981FCFF 		cmp	r12, 4095	# free_bits,
 15230      0F0000
 15231 09a6 0F87DC00 		ja	.L1307	#,
 15231      0000
 15232              	.LVL1007:
 15233              	.L1311:
 15234              	.LBB1161:
 737:sieve_extend.c **** 
 15235              		.loc 1 737 25 is_stmt 1 view .LVU4946
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 15236              		.loc 1 740 25 view .LVU4947
 15237              	# sieve_extend.c:741:                         tuning_result[tuning_result_index].maxints = maxints;
 741:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 15238              		.loc 1 741 68 is_stmt 0 view .LVU4948
 15239 09ac 488B4C24 		mov	rcx, QWORD PTR 96[rsp]	# option_maxFactor.55_85, %sfp
 15239      60
 15240              	# sieve_extend.c:743:                         tuning_result[tuning_result_index].sample_max = sampl
 743:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 15241              		.loc 1 743 71 view .LVU4949
 15242 09b1 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# sample_max, %sfp
 15242      50
 15243              	# sieve_extend.c:748:                         tuning_result[tuning_result_index].mediumstep_faster 
 748:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 15244              		.loc 1 748 78 view .LVU4950
GAS LISTING /tmp/ccIyIA9Z.s 			page 404


 15245 09b6 4C8B4424 		mov	r8, QWORD PTR 8[rsp]	# mediumstep_faster, %sfp
 15245      08
 15246              	# sieve_extend.c:742:                         tuning_result[tuning_result_index].sample_duration = 
 742:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 15247              		.loc 1 742 76 view .LVU4951
 15248 09bb C5FB1064 		vmovsd	xmm4, QWORD PTR 88[rsp]	# sample_duration, %sfp
 15248      2458
 15249              	# sieve_extend.c:741:                         tuning_result[tuning_result_index].maxints = maxints;
 741:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 15250              		.loc 1 741 68 view .LVU4952
 15251 09c1 49890F   		mov	QWORD PTR [r15], rcx	# MEM[base: _579, offset: 0B], option_maxFactor.55_85
 15252              	# sieve_extend.c:743:                         tuning_result[tuning_result_index].sample_max = sampl
 743:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 15253              		.loc 1 743 71 view .LVU4953
 15254 09c4 4D895F40 		mov	QWORD PTR 64[r15], r11	# MEM[base: _579, offset: 64B], sample_max
 15255              	# sieve_extend.c:744:                         tuning_result[tuning_result_index].blocksize_kb = blo
 744:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 15256              		.loc 1 744 73 view .LVU4954
 15257 09c8 4D896F10 		mov	QWORD PTR 16[r15], r13	# MEM[base: _579, offset: 16B], blocksize_kb
 15258              	# sieve_extend.c:745:                         tuning_result[tuning_result_index].free_bits = free_b
 745:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 15259              		.loc 1 745 70 view .LVU4955
 15260 09cc 4D896718 		mov	QWORD PTR 24[r15], r12	# MEM[base: _579, offset: 24B], free_bits
 15261              	# sieve_extend.c:746:                         tuning_result[tuning_result_index].blocksize_bits = b
 746:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 15262              		.loc 1 746 75 view .LVU4956
 15263 09d0 49895F08 		mov	QWORD PTR 8[r15], rbx	# MEM[base: _579, offset: 8B], ivtmp.706
 15264              	# sieve_extend.c:747:                         tuning_result[tuning_result_index].smallstep_faster =
 747:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 15265              		.loc 1 747 77 view .LVU4957
 15266 09d4 49C74720 		mov	QWORD PTR 32[r15], 0	# MEM[base: _579, offset: 32B],
 15266      00000000 
 15267              	# sieve_extend.c:748:                         tuning_result[tuning_result_index].mediumstep_faster 
 748:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 15268              		.loc 1 748 78 view .LVU4958
 15269 09dc 4D894728 		mov	QWORD PTR 40[r15], r8	# MEM[base: _579, offset: 40B], mediumstep_faster
 15270              	# sieve_extend.c:749:                         tuning_result[tuning_result_index].vectorstep_faster 
 749:sieve_extend.c ****                         tuning_result[tuning_result_index].threads = threads;
 15271              		.loc 1 749 78 view .LVU4959
 15272 09e0 4D897730 		mov	QWORD PTR 48[r15], r14	# MEM[base: _579, offset: 48B], vectorstep_faster
 15273              	# sieve_extend.c:750:                         tuning_result[tuning_result_index].threads = threads;
 750:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 15274              		.loc 1 750 68 view .LVU4960
 15275 09e4 49C74738 		mov	QWORD PTR 56[r15], 1	# MEM[base: _579, offset: 56B],
 15275      01000000 
 15276              	# sieve_extend.c:751:                         tune_benchmark(tuning_result, tuning_result_index);
 751:sieve_extend.c **** 
 15277              		.loc 1 751 25 view .LVU4961
 15278 09ec 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	#, %sfp
 15278      20
 15279 09f1 4889EE   		mov	rsi, rbp	# tuning_results, tuning_results
 15280              	# sieve_extend.c:742:                         tuning_result[tuning_result_index].sample_duration = 
 742:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 15281              		.loc 1 742 76 view .LVU4962
 15282 09f4 C4C17B11 		vmovsd	QWORD PTR 72[r15], xmm4	# MEM[base: _579, offset: 72B], sample_duration
 15282      6748
 15283              	# sieve_extend.c:751:                         tune_benchmark(tuning_result, tuning_result_index);
GAS LISTING /tmp/ccIyIA9Z.s 			page 405


 751:sieve_extend.c **** 
 15284              		.loc 1 751 25 view .LVU4963
 15285 09fa E8000000 		call	tune_benchmark	#
 15285      00
 15286              	.LVL1008:
 15287              	# sieve_extend.c:753:                         if ( tuning_result[tuning_result_index].avg > best_av
 753:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 15288              		.loc 1 753 64 view .LVU4964
 15289 09ff C4C17B10 		vmovsd	xmm3, QWORD PTR 96[r15]	# _302, MEM[base: _579, offset: 96B]
 15289      5F60
 15290              	# sieve_extend.c:740:                         tuning_results++;
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 15291              		.loc 1 740 39 view .LVU4965
 15292 0a05 48FFC5   		inc	rbp	# tuning_results
 15293              	.LVL1009:
 741:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 15294              		.loc 1 741 25 is_stmt 1 view .LVU4966
 742:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 15295              		.loc 1 742 25 view .LVU4967
 743:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 15296              		.loc 1 743 25 view .LVU4968
 744:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 15297              		.loc 1 744 25 view .LVU4969
 745:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 15298              		.loc 1 745 25 view .LVU4970
 746:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 15299              		.loc 1 746 25 view .LVU4971
 747:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 15300              		.loc 1 747 25 view .LVU4972
 748:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 15301              		.loc 1 748 25 view .LVU4973
 749:sieve_extend.c ****                         tuning_result[tuning_result_index].threads = threads;
 15302              		.loc 1 749 25 view .LVU4974
 750:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 15303              		.loc 1 750 25 view .LVU4975
 751:sieve_extend.c **** 
 15304              		.loc 1 751 25 view .LVU4976
 753:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 15305              		.loc 1 753 25 view .LVU4977
 15306              	# sieve_extend.c:753:                         if ( tuning_result[tuning_result_index].avg > best_av
 753:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 15307              		.loc 1 753 28 is_stmt 0 view .LVU4978
 15308 0a08 C5F92F5C 		vcomisd	xmm3, QWORD PTR 24[rsp]	# _302, %sfp
 15308      2418
 15309 0a0e 0F874CFF 		ja	.L1308	#,
 15309      FFFF
 15310              	.L1309:
 761:sieve_extend.c ****                         tuning_result_index++;
 15311              		.loc 1 761 25 is_stmt 1 view .LVU4979
 15312              	# sieve_extend.c:761:                         if (option_verboselevel >= 3) { printf("...."); tunin
 761:sieve_extend.c ****                         tuning_result_index++;
 15313              		.loc 1 761 28 is_stmt 0 view .LVU4980
 15314 0a14 837C2410 		cmp	DWORD PTR 16[rsp], 2	# %sfp,
 15314      02
 15315 0a19 0F8E66FF 		jle	.L1303	#,
 15315      FFFF
 761:sieve_extend.c ****                         tuning_result_index++;
GAS LISTING /tmp/ccIyIA9Z.s 			page 406


 15316              		.loc 1 761 57 is_stmt 1 view .LVU4981
 15317              	.LVL1010:
 15318              	.LBB1139:
 15319              	.LBI1139:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15320              		.loc 3 105 1 view .LVU4982
 15321              	.LBB1140:
 15322              		.loc 3 107 3 view .LVU4983
 15323              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15324              		.loc 3 107 10 is_stmt 0 view .LVU4984
 15325 0a1f 488D3500 		lea	rsi, .LC65[rip]	#,
 15325      000000
 15326 0a26 BF010000 		mov	edi, 1	#,
 15326      00
 15327 0a2b 31C0     		xor	eax, eax	#
 15328 0a2d E8000000 		call	__printf_chk@PLT	#
 15328      00
 15329              	.LVL1011:
 15330              		.loc 3 107 10 view .LVU4985
 15331              	.LBE1140:
 15332              	.LBE1139:
 761:sieve_extend.c ****                         tuning_result_index++;
 15333              		.loc 1 761 73 is_stmt 1 view .LVU4986
 15334              	.LBB1141:
 15335              	.LBI1141:
 673:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 15336              		.loc 1 673 20 view .LVU4987
 15337              	.LBB1142:
 674:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 15338              		.loc 1 674 5 view .LVU4988
 15339              	.LBB1143:
 15340              	.LBI1143:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15341              		.loc 3 105 1 view .LVU4989
 15342              	.LBB1144:
 15343              		.loc 3 107 3 view .LVU4990
 15344              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15345              		.loc 3 107 10 is_stmt 0 view .LVU4991
 15346 0a32 C4C17B10 		vmovsd	xmm0, QWORD PTR 88[r15]	# MEM[base: _579, offset: 88B], MEM[base: _579, offset: 88B]
 15346      4758
 15347 0a38 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _579, offset: 16B], MEM[base: _579, offset: 16B]
 15348 0a3c 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _579, offset: 8B], MEM[base: _579, offset: 8B]
 15349 0a40 41FF7740 		push	QWORD PTR 64[r15]	# MEM[base: _579, offset: 64B]
 15350              		.cfi_def_cfa_offset 280
 15351 0a44 488D3500 		lea	rsi, .LC64[rip]	#,
 15351      000000
 15352 0a4b BF010000 		mov	edi, 1	#,
 15352      00
 15353 0a50 41FF7750 		push	QWORD PTR 80[r15]	# MEM[base: _579, offset: 80B]
 15354              		.cfi_def_cfa_offset 288
 15355 0a54 B8030000 		mov	eax, 3	#,
 15355      00
 15356 0a59 41FF7730 		push	QWORD PTR 48[r15]	# MEM[base: _579, offset: 48B]
 15357              		.cfi_def_cfa_offset 296
 15358 0a5d 41FF7728 		push	QWORD PTR 40[r15]	# MEM[base: _579, offset: 40B]
 15359              		.cfi_def_cfa_offset 304
 15360 0a61 C4C17B10 		vmovsd	xmm2, QWORD PTR 96[r15]	#, MEM[base: _579, offset: 96B]
GAS LISTING /tmp/ccIyIA9Z.s 			page 407


 15360      5760
 15361 0a67 C4C17B10 		vmovsd	xmm1, QWORD PTR 72[r15]	#, MEM[base: _579, offset: 72B]
 15361      4F48
 15362 0a6d 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _579, offset: 32B]
 15363 0a71 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _579, offset: 24B]
 15364 0a75 E8000000 		call	__printf_chk@PLT	#
 15364      00
 15365              	.LVL1012:
 15366              		.loc 3 107 10 view .LVU4992
 15367              	.LBE1144:
 15368              	.LBE1143:
 15369              	.LBE1142:
 15370              	.LBE1141:
 762:sieve_extend.c ****                         verbose_at(1) { printf("\rTuning...tuning %ju options..",(uintmax_t)tuning_
 15371              		.loc 1 762 25 is_stmt 1 view .LVU4993
 763:sieve_extend.c ****                     }
 15372              		.loc 1 763 25 view .LVU4994
 15373              	.LBB1148:
 15374              	.LBB1147:
 15375              	.LBB1146:
 15376              	.LBB1145:
 15377              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15378              		.loc 3 107 10 is_stmt 0 view .LVU4995
 15379 0a7a 4883C420 		add	rsp, 32	#,
 15380              		.cfi_def_cfa_offset 272
 15381 0a7e E90DFFFF 		jmp	.L1306	#
 15381      FF
 15382              	.LVL1013:
 15383              		.p2align 4,,10
 15384 0a83 0F1F4400 		.p2align 3
 15384      00
 15385              	.L1307:
 15386              		.loc 3 107 10 view .LVU4996
 15387              	.LBE1145:
 15388              	.LBE1146:
 15389              	.LBE1147:
 15390              	.LBE1148:
 15391              	.LBE1161:
 15392              	.LBE1164:
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15393              		.loc 1 735 67 is_stmt 1 view .LVU4997
 15394              	# sieve_extend.c:735:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15395              		.loc 1 735 80 is_stmt 0 view .LVU4998
 15396 0a88 49D1ED   		shr	r13	# blocksize_kb
 15397              	.LVL1014:
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15398              		.loc 1 735 50 is_stmt 1 view .LVU4999
 15399              	# sieve_extend.c:735:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 735:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 15400              		.loc 1 735 17 is_stmt 0 view .LVU5000
 15401 0a8b FF4C2444 		dec	DWORD PTR 68[rsp]	# %sfp
 15402 0a8f 0F85ABFE 		jne	.L1313	#,
 15402      FFFF
 15403              	.LBE1136:
 734:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15404              		.loc 1 734 109 is_stmt 1 view .LVU5001
GAS LISTING /tmp/ccIyIA9Z.s 			page 408


 15405              	# sieve_extend.c:734:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_
 734:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15406              		.loc 1 734 127 is_stmt 0 view .LVU5002
 15407 0a95 4C037424 		add	r14, QWORD PTR 104[rsp]	# vectorstep_faster, %sfp
 15407      68
 15408              	.LVL1015:
 734:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15409              		.loc 1 734 67 is_stmt 1 view .LVU5003
 15410              	# sieve_extend.c:734:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_
 734:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 15411              		.loc 1 734 13 is_stmt 0 view .LVU5004
 15412 0a9a 4981FE00 		cmp	r14, 256	# vectorstep_faster,
 15412      010000
 15413 0aa1 0F8681FE 		jbe	.L1315	#,
 15413      FFFF
 15414              	.LBE1135:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15415              		.loc 1 733 102 is_stmt 1 view .LVU5005
 15416              	# sieve_extend.c:733:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faste
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15417              		.loc 1 733 120 is_stmt 0 view .LVU5006
 15418 0aa7 488B4424 		mov	rax, QWORD PTR 112[rsp]	# mediumstep_faster_steps, %sfp
 15418      70
 15419 0aac 48014424 		add	QWORD PTR 8[rsp], rax	# %sfp, mediumstep_faster_steps
 15419      08
 15420              	.LVL1016:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15421              		.loc 1 733 120 view .LVU5007
 15422 0ab1 488B5424 		mov	rdx, QWORD PTR 8[rsp]	# mediumstep_faster, %sfp
 15422      08
 15423              	.LVL1017:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15424              		.loc 1 733 62 is_stmt 1 view .LVU5008
 15425              	# sieve_extend.c:733:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faste
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15426              		.loc 1 733 9 is_stmt 0 view .LVU5009
 15427 0ab6 4883FA40 		cmp	rdx, 64	# mediumstep_faster,
 15428 0aba 0F8660FE 		jbe	.L1302	#,
 15428      FFFF
 15429              	.LVL1018:
 733:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 15430              		.loc 1 733 9 view .LVU5010
 15431              	.LBE1171:
 732:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 15432              		.loc 1 732 42 is_stmt 1 view .LVU5011
 15433              	.LBE1174:
 769:sieve_extend.c ****     verbose(2) { printf("Tuning...tuned %ju options..\n",(uintmax_t)tuning_results); }
 15434              		.loc 1 769 5 view .LVU5012
 15435 0ac0 837C2410 		cmp	DWORD PTR 16[rsp], 1	# %sfp,
 15435      01
 15436 0ac5 0F848907 		je	.L1418	#,
 15436      0000
 770:sieve_extend.c ****     verbose(2) {
 15437              		.loc 1 770 5 view .LVU5013
 15438 0acb 7E4D     		jle	.L1317	#,
 770:sieve_extend.c ****     verbose(2) {
 15439              		.loc 1 770 18 view .LVU5014
GAS LISTING /tmp/ccIyIA9Z.s 			page 409


 15440              	.LVL1019:
 15441              	.LBB1175:
 15442              	.LBI1175:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15443              		.loc 3 105 1 view .LVU5015
 15444              	.LBB1176:
 15445              		.loc 3 107 3 view .LVU5016
 15446              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15447              		.loc 3 107 10 is_stmt 0 view .LVU5017
 15448 0acd 488D3500 		lea	rsi, .LC68[rip]	#,
 15448      000000
 15449 0ad4 4889EA   		mov	rdx, rbp	#, tuning_results
 15450              	.LVL1020:
 15451              		.loc 3 107 10 view .LVU5018
 15452 0ad7 BF010000 		mov	edi, 1	#,
 15452      00
 15453 0adc 31C0     		xor	eax, eax	#
 15454 0ade E8000000 		call	__printf_chk@PLT	#
 15454      00
 15455              	.LVL1021:
 15456              		.loc 3 107 10 view .LVU5019
 15457              	.LBE1176:
 15458              	.LBE1175:
 771:sieve_extend.c ****         printf("%ju options. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 15459              		.loc 1 771 5 is_stmt 1 view .LVU5020
 772:sieve_extend.c ****         printf("Best options\n");
 15460              		.loc 1 772 9 view .LVU5021
 15461              	.LBB1177:
 15462              	.LBI1177:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15463              		.loc 3 105 1 view .LVU5022
 15464              	.LBB1178:
 15465              		.loc 3 107 3 view .LVU5023
 15466              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15467              		.loc 3 107 10 is_stmt 0 view .LVU5024
 15468 0ae3 56       		push	rsi	#
 15469              		.cfi_def_cfa_offset 280
 15470 0ae4 4531C0   		xor	r8d, r8d	#
 15471 0ae7 4889EA   		mov	rdx, rbp	#, tuning_results
 15472 0aea FF742440 		push	QWORD PTR 64[rsp]	# %sfp
 15473              		.cfi_def_cfa_offset 288
 15474 0aee 488D3500 		lea	rsi, .LC69[rip]	#,
 15474      000000
 15475 0af5 BF010000 		mov	edi, 1	#,
 15475      00
 15476 0afa 4C8B4C24 		mov	r9, QWORD PTR 64[rsp]	#, %sfp
 15476      40
 15477 0aff 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	#, %sfp
 15477      38
 15478 0b04 31C0     		xor	eax, eax	#
 15479 0b06 E8000000 		call	__printf_chk@PLT	#
 15479      00
 15480              	.LVL1022:
 15481              		.loc 3 107 10 view .LVU5025
 15482              	.LBE1178:
 15483              	.LBE1177:
 773:sieve_extend.c ****     }
GAS LISTING /tmp/ccIyIA9Z.s 			page 410


 15484              		.loc 1 773 9 is_stmt 1 view .LVU5026
 15485              	.LBB1179:
 15486              	.LBI1179:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15487              		.loc 3 105 1 view .LVU5027
 15488              	.LBB1180:
 15489              		.loc 3 107 3 view .LVU5028
 15490              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15491              		.loc 3 107 10 is_stmt 0 view .LVU5029
 15492 0b0b 488D3D00 		lea	rdi, .LC70[rip]	#,
 15492      000000
 15493 0b12 E8000000 		call	puts@PLT	#
 15493      00
 15494              	.LVL1023:
 15495 0b17 5F       		pop	rdi	#
 15496              		.cfi_def_cfa_offset 280
 15497 0b18 4158     		pop	r8	#
 15498              		.cfi_def_cfa_offset 272
 15499              	.LVL1024:
 15500              	.L1317:
 15501              		.loc 3 107 10 view .LVU5030
 15502 0b1a 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# tuning_result, %sfp
 15502      20
 15503              	.LVL1025:
 15504              		.loc 3 107 10 view .LVU5031
 15505 0b1f 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# sample_max, %sfp
 15505      50
 15506              	.LBE1180:
 15507              	.LBE1179:
 15508              	.LBB1181:
 15509              	.LBB1172:
 15510              	.LBB1169:
 15511              	.LBB1167:
 15512              	.LBB1165:
 15513              	.LBB1162:
 15514              	# sieve_extend.c:740:                         tuning_results++;
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 15515              		.loc 1 740 39 view .LVU5032
 15516 0b24 4989ED   		mov	r13, rbp	# tuning_results, tuning_results
 15517              	.LVL1026:
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 15518              		.loc 1 740 39 view .LVU5033
 15519 0b27 4531E4   		xor	r12d, r12d	# step
 15520              	.LVL1027:
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 15521              		.loc 1 740 39 view .LVU5034
 15522 0b2a 4889E8   		mov	rax, rbp	# tuning_results, tuning_results
 15523              	.LVL1028:
 15524              	.L1318:
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 15525              		.loc 1 740 39 view .LVU5035
 15526              	.LBE1162:
 15527              	.LBE1165:
 15528              	.LBE1167:
 15529              	.LBE1169:
 15530              	.LBE1172:
 15531              	.LBE1181:
GAS LISTING /tmp/ccIyIA9Z.s 			page 411


 778:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 15532              		.loc 1 778 11 is_stmt 1 view .LVU5036
 15533 0b2d 4883F804 		cmp	rax, 4	# tuning_results,
 15534 0b31 0F868005 		jbe	.L1419	#,
 15534      0000
 779:sieve_extend.c ****         step++;
 15535              		.loc 1 779 9 view .LVU5037
 15536 0b37 4C89F7   		mov	rdi, r14	#, tuning_result
 15537 0b3a 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 15537      000000
 15538 0b41 BA680000 		mov	edx, 104	#,
 15538      00
 15539 0b46 4889C6   		mov	rsi, rax	#, tuning_results
 15540 0b49 48894424 		mov	QWORD PTR 8[rsp], rax	# %sfp, tuning_results
 15540      08
 15541 0b4e E8000000 		call	qsort@PLT	#
 15541      00
 15542              	.LVL1029:
 780:sieve_extend.c ****         verbose(2) {
 15543              		.loc 1 780 9 view .LVU5038
 15544 0b53 4C8B5424 		mov	r10, QWORD PTR 8[rsp]	# tuning_results, %sfp
 15544      08
 15545              	# sieve_extend.c:781:         verbose(2) {
 781:sieve_extend.c ****             tuning_result_index = 0;
 15546              		.loc 1 781 9 is_stmt 0 view .LVU5039
 15547 0b58 8B5C2410 		mov	ebx, DWORD PTR 16[rsp]	# pretmp_470, %sfp
 15548 0b5c 4C89D7   		mov	rdi, r10	# _386, tuning_results
 15549 0b5f 48D1EF   		shr	rdi	# _386
 15550 0b62 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tuning_results
 15550      18
 15551 0b67 48897C24 		mov	QWORD PTR 8[rsp], rdi	# %sfp, _386
 15551      08
 15552              	.LVL1030:
 15553              	# sieve_extend.c:780:         step++;
 780:sieve_extend.c ****         verbose(2) {
 15554              		.loc 1 780 13 view .LVU5040
 15555 0b6c 49FFC4   		inc	r12	# step
 15556              	.LVL1031:
 781:sieve_extend.c ****             tuning_result_index = 0;
 15557              		.loc 1 781 9 is_stmt 1 view .LVU5041
 15558 0b6f 83FB01   		cmp	ebx, 1	# pretmp_470,
 15559 0b72 0F8F7602 		jg	.L1420	#,
 15559      0000
 15560              	.LVL1032:
 15561              	.LBB1182:
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15562              		.loc 1 795 29 view .LVU5042
 15563 0b78 0F84F102 		je	.L1322	#,
 15563      0000
 15564 0b7e 488B4424 		mov	rax, QWORD PTR 8[rsp]	# _386, %sfp
 15564      08
 15565              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15566              		.loc 1 797 13 is_stmt 0 view .LVU5043
 15567 0b83 31F6     		xor	esi, esi	#
 15568 0b85 488D50FF 		lea	rdx, -1[rax]	# tmp534,
 15569 0b89 83E203   		and	edx, 3	# tmp536,
GAS LISTING /tmp/ccIyIA9Z.s 			page 412


 15570 0b8c 4C89F7   		mov	rdi, r14	#, tuning_result
 15571 0b8f 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, tmp536
 15571      18
 15572 0b94 E8000000 		call	tune_benchmark	#
 15572      00
 15573              	.LVL1033:
 15574              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15575              		.loc 1 799 46 view .LVU5044
 15576 0b99 C57B101D 		vmovsd	xmm11, QWORD PTR .LC73[rip]	# tmp734,
 15576      00000000 
 15577 0ba1 498D6E40 		lea	rbp, 64[r14]	# ivtmp.679,
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15578              		.loc 1 796 13 is_stmt 1 view .LVU5045
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15579              		.loc 1 797 13 view .LVU5046
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15580              		.loc 1 798 13 view .LVU5047
 15581              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15582              		.loc 1 799 46 is_stmt 0 view .LVU5048
 15583 0ba5 C5235865 		vaddsd	xmm12, xmm11, QWORD PTR 8[rbp]	# tmp478, tmp734, MEM[base: _81, offset: 8B]
 15583      08
 15584              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15585              		.loc 1 798 41 view .LVU5049
 15586 0baa 4C017D00 		add	QWORD PTR 0[rbp], r15	# MEM[base: _81, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 15587              		.loc 1 799 13 is_stmt 1 view .LVU5050
 15588              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15589              		.loc 1 795 9 is_stmt 0 view .LVU5051
 15590 0bae 48837C24 		cmp	QWORD PTR 8[rsp], 1	# %sfp,
 15590      0801
 15591              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15592              		.loc 1 799 46 view .LVU5052
 15593 0bb4 C57B1165 		vmovsd	QWORD PTR 8[rbp], xmm12	# MEM[base: _81, offset: 8B], tmp478
 15593      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15594              		.loc 1 795 47 is_stmt 1 view .LVU5053
 15595              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15596              		.loc 1 795 9 is_stmt 0 view .LVU5054
 15597 0bb9 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# tmp536, %sfp
 15597      18
 15598              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15599              		.loc 1 795 48 view .LVU5055
 15600 0bbe BD010000 		mov	ebp, 1	# i,
 15600      00
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15601              		.loc 1 795 29 is_stmt 1 view .LVU5056
 15602 0bc3 498D9EA8 		lea	rbx, 168[r14]	# ivtmp.679,
 15602      000000
 15603              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
GAS LISTING /tmp/ccIyIA9Z.s 			page 413


 15604              		.loc 1 795 9 is_stmt 0 view .LVU5057
 15605 0bca 0F866001 		jbe	.L1324	#,
 15605      0000
 15606 0bd0 4D85C9   		test	r9, r9	# tmp536
 15607 0bd3 0F849300 		je	.L1395	#,
 15607      0000
 15608 0bd9 4983F901 		cmp	r9, 1	# tmp536,
 15609 0bdd 745B     		je	.L1379	#,
 15610 0bdf 4983F902 		cmp	r9, 2	# tmp536,
 15611 0be3 742E     		je	.L1380	#,
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15612              		.loc 1 796 13 is_stmt 1 view .LVU5058
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15613              		.loc 1 797 13 view .LVU5059
 15614 0be5 BE010000 		mov	esi, 1	#,
 15614      00
 15615 0bea 4C89F7   		mov	rdi, r14	#, tuning_result
 15616 0bed E8000000 		call	tune_benchmark	#
 15616      00
 15617              	.LVL1034:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15618              		.loc 1 798 13 view .LVU5060
 15619              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15620              		.loc 1 799 46 is_stmt 0 view .LVU5061
 15621 0bf2 C57B102D 		vmovsd	xmm13, QWORD PTR .LC73[rip]	# tmp765,
 15621      00000000 
 15622              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15623              		.loc 1 798 41 view .LVU5062
 15624 0bfa 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _81, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 15625              		.loc 1 799 13 is_stmt 1 view .LVU5063
 15626              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15627              		.loc 1 799 46 is_stmt 0 view .LVU5064
 15628 0bfd C5135873 		vaddsd	xmm14, xmm13, QWORD PTR 8[rbx]	# tmp593, tmp765, MEM[base: _81, offset: 8B]
 15628      08
 15629              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15630              		.loc 1 795 48 view .LVU5065
 15631 0c02 BD020000 		mov	ebp, 2	# i,
 15631      00
 15632              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15633              		.loc 1 799 46 view .LVU5066
 15634 0c07 C57B1173 		vmovsd	QWORD PTR 8[rbx], xmm14	# MEM[base: _81, offset: 8B], tmp593
 15634      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15635              		.loc 1 795 47 is_stmt 1 view .LVU5067
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15636              		.loc 1 795 29 view .LVU5068
 15637 0c0c 498D9E10 		lea	rbx, 272[r14]	# ivtmp.679,
 15637      010000
 15638              	.L1380:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15639              		.loc 1 796 13 view .LVU5069
GAS LISTING /tmp/ccIyIA9Z.s 			page 414


 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15640              		.loc 1 797 13 view .LVU5070
 15641 0c13 4889EE   		mov	rsi, rbp	#, i
 15642 0c16 4C89F7   		mov	rdi, r14	#, tuning_result
 15643 0c19 E8000000 		call	tune_benchmark	#
 15643      00
 15644              	.LVL1035:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15645              		.loc 1 798 13 view .LVU5071
 15646              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15647              		.loc 1 799 46 is_stmt 0 view .LVU5072
 15648 0c1e C57B103D 		vmovsd	xmm15, QWORD PTR .LC73[rip]	# tmp766,
 15648      00000000 
 15649              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15650              		.loc 1 798 41 view .LVU5073
 15651 0c26 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _81, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 15652              		.loc 1 799 13 is_stmt 1 view .LVU5074
 15653              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15654              		.loc 1 799 46 is_stmt 0 view .LVU5075
 15655 0c29 C583584B 		vaddsd	xmm1, xmm15, QWORD PTR 8[rbx]	# tmp595, tmp766, MEM[base: _81, offset: 8B]
 15655      08
 15656              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15657              		.loc 1 795 48 view .LVU5076
 15658 0c2e 48FFC5   		inc	rbp	# i
 15659 0c31 4883C368 		add	rbx, 104	# ivtmp.679,
 15660              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15661              		.loc 1 799 46 view .LVU5077
 15662 0c35 C5FB114B 		vmovsd	QWORD PTR -96[rbx], xmm1	# MEM[base: _81, offset: 8B], tmp595
 15662      A0
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15663              		.loc 1 795 47 is_stmt 1 view .LVU5078
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15664              		.loc 1 795 29 view .LVU5079
 15665              	.L1379:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15666              		.loc 1 796 13 view .LVU5080
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15667              		.loc 1 797 13 view .LVU5081
 15668 0c3a 4889EE   		mov	rsi, rbp	#, i
 15669 0c3d 4C89F7   		mov	rdi, r14	#, tuning_result
 15670 0c40 E8000000 		call	tune_benchmark	#
 15670      00
 15671              	.LVL1036:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15672              		.loc 1 798 13 view .LVU5082
 15673              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15674              		.loc 1 799 46 is_stmt 0 view .LVU5083
 15675 0c45 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC73[rip]	# tmp767,
 15675      00000000 
 15676              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
GAS LISTING /tmp/ccIyIA9Z.s 			page 415


 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15677              		.loc 1 795 48 view .LVU5084
 15678 0c4d 48FFC5   		inc	rbp	# i
 15679              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15680              		.loc 1 799 46 view .LVU5085
 15681 0c50 C5CB585B 		vaddsd	xmm3, xmm6, QWORD PTR 8[rbx]	# tmp597, tmp767, MEM[base: _81, offset: 8B]
 15681      08
 15682              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15683              		.loc 1 798 41 view .LVU5086
 15684 0c55 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _81, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 15685              		.loc 1 799 13 is_stmt 1 view .LVU5087
 15686 0c58 4883C368 		add	rbx, 104	# ivtmp.679,
 15687              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15688              		.loc 1 799 46 is_stmt 0 view .LVU5088
 15689 0c5c C5FB115B 		vmovsd	QWORD PTR -96[rbx], xmm3	# MEM[base: _81, offset: 8B], tmp597
 15689      A0
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15690              		.loc 1 795 47 is_stmt 1 view .LVU5089
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15691              		.loc 1 795 29 view .LVU5090
 15692              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15693              		.loc 1 795 9 is_stmt 0 view .LVU5091
 15694 0c61 48396C24 		cmp	QWORD PTR 8[rsp], rbp	# %sfp, i
 15694      08
 15695 0c66 0F86C400 		jbe	.L1324	#,
 15695      0000
 15696              	.L1395:
 15697 0c6c 4C896424 		mov	QWORD PTR 24[rsp], r12	# %sfp, step
 15697      18
 15698              	.LVL1037:
 15699              	.L1323:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15700              		.loc 1 796 13 is_stmt 1 view .LVU5092
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15701              		.loc 1 797 13 view .LVU5093
 15702 0c71 4889EE   		mov	rsi, rbp	#, i
 15703 0c74 4C89F7   		mov	rdi, r14	#, tuning_result
 15704 0c77 E8000000 		call	tune_benchmark	#
 15704      00
 15705              	.LVL1038:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15706              		.loc 1 798 13 view .LVU5094
 15707              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15708              		.loc 1 799 46 is_stmt 0 view .LVU5095
 15709 0c7c C5FB103D 		vmovsd	xmm7, QWORD PTR .LC73[rip]	# tmp736,
 15709      00000000 
 15710              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15711              		.loc 1 798 41 view .LVU5096
 15712 0c84 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _81, offset: 0B], sample_max
 799:sieve_extend.c ****         }
GAS LISTING /tmp/ccIyIA9Z.s 			page 416


 15713              		.loc 1 799 13 is_stmt 1 view .LVU5097
 15714              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15715              		.loc 1 799 46 is_stmt 0 view .LVU5098
 15716 0c87 C5C35863 		vaddsd	xmm4, xmm7, QWORD PTR 8[rbx]	# tmp556, tmp736, MEM[base: _81, offset: 8B]
 15716      08
 15717              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15718              		.loc 1 795 48 view .LVU5099
 15719 0c8c 488D7501 		lea	rsi, 1[rbp]	# tmp537,
 15720              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15721              		.loc 1 797 13 view .LVU5100
 15722 0c90 4C89F7   		mov	rdi, r14	#, tuning_result
 15723              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15724              		.loc 1 799 46 view .LVU5101
 15725 0c93 C5FB1163 		vmovsd	QWORD PTR 8[rbx], xmm4	# MEM[base: _81, offset: 8B], tmp556
 15725      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15726              		.loc 1 795 47 is_stmt 1 view .LVU5102
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15727              		.loc 1 795 29 view .LVU5103
 15728              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15729              		.loc 1 797 13 is_stmt 0 view .LVU5104
 15730 0c98 E8000000 		call	tune_benchmark	#
 15730      00
 15731              	.LVL1039:
 15732              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15733              		.loc 1 799 46 view .LVU5105
 15734 0c9d C5FB102D 		vmovsd	xmm5, QWORD PTR .LC73[rip]	# tmp737,
 15734      00000000 
 15735 0ca5 4C8D6368 		lea	r12, 104[rbx]	# tmp538,
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15736              		.loc 1 796 13 is_stmt 1 view .LVU5106
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15737              		.loc 1 797 13 view .LVU5107
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15738              		.loc 1 798 13 view .LVU5108
 15739              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15740              		.loc 1 799 46 is_stmt 0 view .LVU5109
 15741 0ca9 C4C15358 		vaddsd	xmm2, xmm5, QWORD PTR 8[r12]	# tmp560, tmp737, MEM[base: _81, offset: 8B]
 15741      542408
 15742              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15743              		.loc 1 798 41 view .LVU5110
 15744 0cb0 4D013C24 		add	QWORD PTR [r12], r15	# MEM[base: _81, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 15745              		.loc 1 799 13 is_stmt 1 view .LVU5111
 15746              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15747              		.loc 1 795 48 is_stmt 0 view .LVU5112
 15748 0cb4 488D7502 		lea	rsi, 2[rbp]	# i,
 15749              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
GAS LISTING /tmp/ccIyIA9Z.s 			page 417


 799:sieve_extend.c ****         }
 15750              		.loc 1 799 46 view .LVU5113
 15751 0cb8 C4C17B11 		vmovsd	QWORD PTR 8[r12], xmm2	# MEM[base: _81, offset: 8B], tmp560
 15751      542408
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15752              		.loc 1 795 47 is_stmt 1 view .LVU5114
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15753              		.loc 1 795 29 view .LVU5115
 15754              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15755              		.loc 1 797 13 is_stmt 0 view .LVU5116
 15756 0cbf 4C89F7   		mov	rdi, r14	#, tuning_result
 15757 0cc2 E8000000 		call	tune_benchmark	#
 15757      00
 15758              	.LVL1040:
 15759              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15760              		.loc 1 799 46 view .LVU5117
 15761 0cc7 C57B1005 		vmovsd	xmm8, QWORD PTR .LC73[rip]	# tmp738,
 15761      00000000 
 15762 0ccf 4C8DA3D0 		lea	r12, 208[rbx]	# ivtmp.679,
 15762      000000
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15763              		.loc 1 796 13 is_stmt 1 view .LVU5118
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15764              		.loc 1 797 13 view .LVU5119
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15765              		.loc 1 798 13 view .LVU5120
 15766              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15767              		.loc 1 799 46 is_stmt 0 view .LVU5121
 15768 0cd6 C4413B58 		vaddsd	xmm9, xmm8, QWORD PTR 8[r12]	# tmp564, tmp738, MEM[base: _81, offset: 8B]
 15768      4C2408
 15769              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15770              		.loc 1 798 41 view .LVU5122
 15771 0cdd 4D013C24 		add	QWORD PTR [r12], r15	# MEM[base: _81, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 15772              		.loc 1 799 13 is_stmt 1 view .LVU5123
 15773              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15774              		.loc 1 795 48 is_stmt 0 view .LVU5124
 15775 0ce1 488D7503 		lea	rsi, 3[rbp]	# i,
 15776              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15777              		.loc 1 799 46 view .LVU5125
 15778 0ce5 C4417B11 		vmovsd	QWORD PTR 8[r12], xmm9	# MEM[base: _81, offset: 8B], tmp564
 15778      4C2408
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15779              		.loc 1 795 47 is_stmt 1 view .LVU5126
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15780              		.loc 1 795 29 view .LVU5127
 15781              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15782              		.loc 1 797 13 is_stmt 0 view .LVU5128
 15783 0cec 4C89F7   		mov	rdi, r14	#, tuning_result
 15784 0cef E8000000 		call	tune_benchmark	#
GAS LISTING /tmp/ccIyIA9Z.s 			page 418


 15784      00
 15785              	.LVL1041:
 15786              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15787              		.loc 1 799 46 view .LVU5129
 15788 0cf4 C5FB1005 		vmovsd	xmm0, QWORD PTR .LC73[rip]	# tmp739,
 15788      00000000 
 15789 0cfc 4C8DA338 		lea	r12, 312[rbx]	# ivtmp.679,
 15789      010000
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 15790              		.loc 1 796 13 is_stmt 1 view .LVU5130
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 15791              		.loc 1 797 13 view .LVU5131
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15792              		.loc 1 798 13 view .LVU5132
 15793              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15794              		.loc 1 799 46 is_stmt 0 view .LVU5133
 15795 0d03 C4417B58 		vaddsd	xmm10, xmm0, QWORD PTR 8[r12]	# tmp568, tmp739, MEM[base: _81, offset: 8B]
 15795      542408
 15796              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15797              		.loc 1 795 48 view .LVU5134
 15798 0d0a 4883C504 		add	rbp, 4	# i,
 15799              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 15800              		.loc 1 798 41 view .LVU5135
 15801 0d0e 4D013C24 		add	QWORD PTR [r12], r15	# MEM[base: _81, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 15802              		.loc 1 799 13 is_stmt 1 view .LVU5136
 15803              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 15804              		.loc 1 799 46 is_stmt 0 view .LVU5137
 15805 0d12 C4417B11 		vmovsd	QWORD PTR 8[r12], xmm10	# MEM[base: _81, offset: 8B], tmp568
 15805      542408
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15806              		.loc 1 795 47 is_stmt 1 view .LVU5138
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15807              		.loc 1 795 29 view .LVU5139
 15808 0d19 4881C3A0 		add	rbx, 416	# ivtmp.679,
 15808      010000
 15809              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15810              		.loc 1 795 9 is_stmt 0 view .LVU5140
 15811 0d20 48396C24 		cmp	QWORD PTR 8[rsp], rbp	# %sfp, i
 15811      08
 15812 0d25 0F8746FF 		ja	.L1323	#,
 15812      FFFF
 15813 0d2b 4C8B6424 		mov	r12, QWORD PTR 24[rsp]	# step, %sfp
 15813      18
 15814              	.LVL1042:
 15815              	.L1324:
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 15816              		.loc 1 795 9 view .LVU5141
 15817              	.LBE1182:
 15818              	.LBB1197:
 15819              	.LBB1173:
GAS LISTING /tmp/ccIyIA9Z.s 			page 419


 15820              	.LBB1170:
 15821              	.LBB1168:
 15822              	.LBB1166:
 15823              	.LBB1163:
 15824              	# sieve_extend.c:740:                         tuning_results++;
 740:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 15825              		.loc 1 740 39 view .LVU5142
 15826 0d30 488B4424 		mov	rax, QWORD PTR 8[rsp]	# tuning_results, %sfp
 15826      08
 15827 0d35 E9F3FDFF 		jmp	.L1318	#
 15827      FF
 15828              	.LVL1043:
 15829 0d3a 660F1F44 		.p2align 4,,10
 15829      0000
 15830              		.p2align 3
 15831              	.L1417:
 763:sieve_extend.c ****                     }
 15832              		.loc 1 763 41 is_stmt 1 view .LVU5143
 15833              	.LBB1149:
 15834              	.LBI1149:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15835              		.loc 3 105 1 view .LVU5144
 15836              	.LBB1150:
 15837              		.loc 3 107 3 view .LVU5145
 15838              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15839              		.loc 3 107 10 is_stmt 0 view .LVU5146
 15840 0d40 4889EA   		mov	rdx, rbp	#, tuning_results
 15841 0d43 488D3500 		lea	rsi, .LC66[rip]	#,
 15841      000000
 15842 0d4a BF010000 		mov	edi, 1	#,
 15842      00
 15843 0d4f 31C0     		xor	eax, eax	#
 15844 0d51 E8000000 		call	__printf_chk@PLT	#
 15844      00
 15845              	.LVL1044:
 15846              		.loc 3 107 10 view .LVU5147
 15847              	.LBE1150:
 15848              	.LBE1149:
 763:sieve_extend.c ****                     }
 15849              		.loc 1 763 110 is_stmt 1 view .LVU5148
 15850 0d56 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 15850      000000
 15851 0d5d E8000000 		call	fflush@PLT	#
 15851      00
 15852              	.LVL1045:
 15853 0d62 E929FCFF 		jmp	.L1306	#
 15853      FF
 15854              	.LVL1046:
 15855 0d67 660F1F84 		.p2align 4,,10
 15855      00000000 
 15855      00
 15856              		.p2align 3
 15857              	.L1416:
 15858              	.LBB1151:
 15859              	.LBB1152:
 15860              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15861              		.loc 3 107 10 is_stmt 0 view .LVU5149
GAS LISTING /tmp/ccIyIA9Z.s 			page 420


 15862 0d70 488D3500 		lea	rsi, .LC63[rip]	#,
 15862      000000
 15863 0d77 BF010000 		mov	edi, 1	#,
 15863      00
 15864 0d7c 31C0     		xor	eax, eax	#
 15865 0d7e C5FB115C 		vmovsd	QWORD PTR 24[rsp], xmm3	# %sfp, _302
 15865      2418
 15866              	.LBE1152:
 15867              	.LBE1151:
 759:sieve_extend.c ****                         }
 15868              		.loc 1 759 60 is_stmt 1 view .LVU5150
 15869              	.LVL1047:
 15870              	.LBB1154:
 15871              	.LBI1151:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15872              		.loc 3 105 1 view .LVU5151
 15873              	.LBB1153:
 15874              		.loc 3 107 3 view .LVU5152
 15875              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15876              		.loc 3 107 10 is_stmt 0 view .LVU5153
 15877 0d84 E8000000 		call	__printf_chk@PLT	#
 15877      00
 15878              	.LVL1048:
 15879              		.loc 3 107 10 view .LVU5154
 15880              	.LBE1153:
 15881              	.LBE1154:
 759:sieve_extend.c ****                         }
 15882              		.loc 1 759 76 is_stmt 1 view .LVU5155
 15883              	.LBB1155:
 15884              	.LBI1155:
 673:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 15885              		.loc 1 673 20 view .LVU5156
 15886              	.LBB1156:
 674:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 15887              		.loc 1 674 5 view .LVU5157
 15888              	.LBB1157:
 15889              	.LBI1157:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15890              		.loc 3 105 1 view .LVU5158
 15891              	.LBB1158:
 15892              		.loc 3 107 3 view .LVU5159
 15893              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15894              		.loc 3 107 10 is_stmt 0 view .LVU5160
 15895 0d89 C4C17B10 		vmovsd	xmm0, QWORD PTR 88[r15]	# MEM[base: _579, offset: 88B], MEM[base: _579, offset: 88B]
 15895      4758
 15896 0d8f 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _579, offset: 16B], MEM[base: _579, offset: 16B]
 15897 0d93 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _579, offset: 8B], MEM[base: _579, offset: 8B]
 15898 0d97 41FF7740 		push	QWORD PTR 64[r15]	# MEM[base: _579, offset: 64B]
 15899              		.cfi_def_cfa_offset 280
 15900 0d9b 488D3500 		lea	rsi, .LC64[rip]	#,
 15900      000000
 15901 0da2 BF010000 		mov	edi, 1	#,
 15901      00
 15902 0da7 41FF7750 		push	QWORD PTR 80[r15]	# MEM[base: _579, offset: 80B]
 15903              		.cfi_def_cfa_offset 288
 15904 0dab B8030000 		mov	eax, 3	#,
 15904      00
GAS LISTING /tmp/ccIyIA9Z.s 			page 421


 15905 0db0 41FF7730 		push	QWORD PTR 48[r15]	# MEM[base: _579, offset: 48B]
 15906              		.cfi_def_cfa_offset 296
 15907 0db4 41FF7728 		push	QWORD PTR 40[r15]	# MEM[base: _579, offset: 40B]
 15908              		.cfi_def_cfa_offset 304
 15909 0db8 C4C17B10 		vmovsd	xmm2, QWORD PTR 96[r15]	#, MEM[base: _579, offset: 96B]
 15909      5760
 15910 0dbe C4C17B10 		vmovsd	xmm1, QWORD PTR 72[r15]	#, MEM[base: _579, offset: 72B]
 15910      4F48
 15911 0dc4 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _579, offset: 32B]
 15912 0dc8 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _579, offset: 24B]
 15913 0dcc E8000000 		call	__printf_chk@PLT	#
 15913      00
 15914              	.LVL1049:
 15915              		.loc 3 107 10 view .LVU5161
 15916              	.LBE1158:
 15917              	.LBE1157:
 15918              	# sieve_extend.c:679: }
 679:sieve_extend.c **** 
 15919              		.loc 1 679 1 view .LVU5162
 15920 0dd1 4C8B5424 		mov	r10, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 15920      28
 15921 0dd6 4883C420 		add	rsp, 32	#,
 15922              		.cfi_def_cfa_offset 272
 15923 0dda 4C897424 		mov	QWORD PTR 56[rsp], r14	# %sfp, vectorstep_faster
 15923      38
 15924 0ddf 4C895424 		mov	QWORD PTR 48[rsp], r10	# %sfp, mediumstep_faster
 15924      30
 15925              	.LBE1156:
 15926              	.LBE1155:
 15927              	# sieve_extend.c:755:                             best_blocksize_bits = blocksize_bits;
 755:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 15928              		.loc 1 755 49 view .LVU5163
 15929 0de4 48895C24 		mov	QWORD PTR 40[rsp], rbx	# %sfp, ivtmp.706
 15929      28
 15930              	.LBB1160:
 15931              	.LBB1159:
 15932              	# sieve_extend.c:679: }
 679:sieve_extend.c **** 
 15933              		.loc 1 679 1 view .LVU5164
 15934 0de9 E926FCFF 		jmp	.L1309	#
 15934      FF
 15935              	.LVL1050:
 15936              	.L1420:
 679:sieve_extend.c **** 
 15937              		.loc 1 679 1 view .LVU5165
 15938              	.LBE1159:
 15939              	.LBE1160:
 15940              	.LBE1163:
 15941              	.LBE1166:
 15942              	.LBE1168:
 15943              	.LBE1170:
 15944              	.LBE1173:
 15945              	.LBE1197:
 782:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 15946              		.loc 1 782 13 is_stmt 1 view .LVU5166
 783:sieve_extend.c ****             fflush(stdout);
 15947              		.loc 1 783 13 view .LVU5167
GAS LISTING /tmp/ccIyIA9Z.s 			page 422


 15948              	.LBB1198:
 15949              	.LBI1198:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15950              		.loc 3 105 1 view .LVU5168
 15951              	.LBB1199:
 15952              		.loc 3 107 3 view .LVU5169
 15953              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15954              		.loc 3 107 10 is_stmt 0 view .LVU5170
 15955 0dee 4C89E2   		mov	rdx, r12	#, step
 15956 0df1 488D3500 		lea	rsi, .LC71[rip]	#,
 15956      000000
 15957 0df8 BF010000 		mov	edi, 1	#,
 15957      00
 15958 0dfd 31C0     		xor	eax, eax	#
 15959 0dff E8000000 		call	__printf_chk@PLT	#
 15959      00
 15960              	.LVL1051:
 15961              		.loc 3 107 10 view .LVU5171
 15962              	.LBE1199:
 15963              	.LBE1198:
 783:sieve_extend.c ****             fflush(stdout);
 15964              		.loc 1 783 47 is_stmt 1 view .LVU5172
 15965              	.LBB1200:
 15966              	.LBI1200:
 673:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 15967              		.loc 1 673 20 view .LVU5173
 15968              	.LBB1201:
 674:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 15969              		.loc 1 674 5 view .LVU5174
 15970              	.LBB1202:
 15971              	.LBI1202:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15972              		.loc 3 105 1 view .LVU5175
 15973              	.LBB1203:
 15974              		.loc 3 107 3 view .LVU5176
 15975              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15976              		.loc 3 107 10 is_stmt 0 view .LVU5177
 15977 0e04 C4C17B10 		vmovsd	xmm0, QWORD PTR 88[r14]	# MEM[(struct tuning_result_type *)tuning_result_289 + 88B], MEM[(s
 15977      4658
 15978 0e0a 498B4E10 		mov	rcx, QWORD PTR 16[r14]	# MEM[(struct tuning_result_type *)tuning_result_289 + 16B], MEM[(struc
 15979 0e0e 498B5608 		mov	rdx, QWORD PTR 8[r14]	# MEM[(struct tuning_result_type *)tuning_result_289 + 8B], MEM[(struct 
 15980 0e12 41FF7640 		push	QWORD PTR 64[r14]	# MEM[(struct tuning_result_type *)tuning_result_289 + 64B]
 15981              		.cfi_def_cfa_offset 280
 15982 0e16 BF010000 		mov	edi, 1	#,
 15982      00
 15983 0e1b 488D3500 		lea	rsi, .LC64[rip]	#,
 15983      000000
 15984 0e22 41FF7650 		push	QWORD PTR 80[r14]	# MEM[(struct tuning_result_type *)tuning_result_289 + 80B]
 15985              		.cfi_def_cfa_offset 288
 15986 0e26 B8030000 		mov	eax, 3	#,
 15986      00
 15987 0e2b 41FF7630 		push	QWORD PTR 48[r14]	# MEM[(struct tuning_result_type *)tuning_result_289 + 48B]
 15988              		.cfi_def_cfa_offset 296
 15989 0e2f 41FF7628 		push	QWORD PTR 40[r14]	# MEM[(struct tuning_result_type *)tuning_result_289 + 40B]
 15990              		.cfi_def_cfa_offset 304
 15991 0e33 C4C17B10 		vmovsd	xmm2, QWORD PTR 96[r14]	#, MEM[(struct tuning_result_type *)tuning_result_289 + 96B]
 15991      5660
GAS LISTING /tmp/ccIyIA9Z.s 			page 423


 15992 0e39 C4C17B10 		vmovsd	xmm1, QWORD PTR 72[r14]	#, MEM[(struct tuning_result_type *)tuning_result_289 + 72B]
 15992      4E48
 15993 0e3f 4D8B4E20 		mov	r9, QWORD PTR 32[r14]	#, MEM[(struct tuning_result_type *)tuning_result_289 + 32B]
 15994 0e43 4D8B4618 		mov	r8, QWORD PTR 24[r14]	#, MEM[(struct tuning_result_type *)tuning_result_289 + 24B]
 15995 0e47 E8000000 		call	__printf_chk@PLT	#
 15995      00
 15996              	.LVL1052:
 15997              		.loc 3 107 10 view .LVU5178
 15998              	.LBE1203:
 15999              	.LBE1202:
 16000              	.LBE1201:
 16001              	.LBE1200:
 784:sieve_extend.c ****             verbose(3) {
 16002              		.loc 1 784 13 is_stmt 1 view .LVU5179
 16003 0e4c 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16003      000000
 16004 0e53 4883C420 		add	rsp, 32	#,
 16005              		.cfi_def_cfa_offset 272
 16006 0e57 E8000000 		call	fflush@PLT	#
 16006      00
 16007              	.LVL1053:
 785:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(40,tuning_results); t
 16008              		.loc 1 785 13 view .LVU5180
 16009 0e5c 83FB02   		cmp	ebx, 2	# pretmp_470,
 16010 0e5f 0F85C701 		jne	.L1421	#,
 16010      0000
 16011              	.LVL1054:
 16012              	.L1320:
 792:sieve_extend.c **** 
 16013              		.loc 1 792 9 view .LVU5181
 794:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
 16014              		.loc 1 794 9 view .LVU5182
 794:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
 16015              		.loc 1 794 20 view .LVU5183
 16016              	.LBB1204:
 16017              	.LBI1204:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16018              		.loc 3 105 1 view .LVU5184
 16019              	.LBB1205:
 16020              		.loc 3 107 3 view .LVU5185
 16021              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16022              		.loc 3 107 10 is_stmt 0 view .LVU5186
 16023 0e65 BF0A0000 		mov	edi, 10	#,
 16023      00
 16024 0e6a E8000000 		call	putchar@PLT	#
 16024      00
 16025              	.LVL1055:
 16026              		.loc 3 107 10 view .LVU5187
 16027              	.LBE1205:
 16028              	.LBE1204:
 16029              	.LBB1206:
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16030              		.loc 1 795 29 is_stmt 1 view .LVU5188
 16031              	.L1322:
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16032              		.loc 1 795 29 is_stmt 0 view .LVU5189
 16033 0e6f 4C8B5C24 		mov	r11, QWORD PTR 8[rsp]	# _386, %sfp
GAS LISTING /tmp/ccIyIA9Z.s 			page 424


 16033      08
 16034              	.LBB1183:
 16035              	.LBB1184:
 16036              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16037              		.loc 3 107 10 view .LVU5190
 16038 0e74 4531C0   		xor	r8d, r8d	#
 16039 0e77 4C89E1   		mov	rcx, r12	#, step
 16040 0e7a 4C89EA   		mov	rdx, r13	#, tuning_results
 16041 0e7d 488D3500 		lea	rsi, .LC74[rip]	#,
 16041      000000
 16042 0e84 BF010000 		mov	edi, 1	#,
 16042      00
 16043 0e89 31C0     		xor	eax, eax	#
 16044 0e8b 498D5BFF 		lea	rbx, -1[r11]	# tmp529,
 16045 0e8f E8000000 		call	__printf_chk@PLT	#
 16045      00
 16046              	.LVL1056:
 16047              	.LBE1184:
 16048              	.LBE1183:
 16049              	# sieve_extend.c:796:             verbose(1) { printf("\rTuning...found %ju options..benchmarking s
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16050              		.loc 1 796 159 view .LVU5191
 16051 0e94 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16051      000000
 16052 0e9b 498D6E40 		lea	rbp, 64[r14]	# ivtmp.686,
 16053 0e9f E8000000 		call	fflush@PLT	#
 16053      00
 16054              	.LVL1057:
 16055              	# sieve_extend.c:797:             tune_benchmark(tuning_result, i);
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16056              		.loc 1 797 13 view .LVU5192
 16057 0ea4 31F6     		xor	esi, esi	#
 16058 0ea6 4C89F7   		mov	rdi, r14	#, tuning_result
 16059 0ea9 E8000000 		call	tune_benchmark	#
 16059      00
 16060              	.LVL1058:
 16061              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16062              		.loc 1 799 46 view .LVU5193
 16063 0eae C57B101D 		vmovsd	xmm11, QWORD PTR .LC73[rip]	# tmp742,
 16063      00000000 
 16064              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16065              		.loc 1 798 41 view .LVU5194
 16066 0eb6 4C017D00 		add	QWORD PTR 0[rbp], r15	# MEM[base: _495, offset: 0B], sample_max
 16067              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16068              		.loc 1 799 46 view .LVU5195
 16069 0eba C5235865 		vaddsd	xmm12, xmm11, QWORD PTR 8[rbp]	# tmp482, tmp742, MEM[base: _495, offset: 8B]
 16069      08
 16070 0ebf 83E301   		and	ebx, 1	# tmp531,
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16071              		.loc 1 796 13 is_stmt 1 view .LVU5196
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16072              		.loc 1 796 26 view .LVU5197
 16073              	.LVL1059:
 16074              	.LBB1191:
GAS LISTING /tmp/ccIyIA9Z.s 			page 425


 16075              	.LBI1183:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16076              		.loc 3 105 1 view .LVU5198
 16077              	.LBB1185:
 16078              		.loc 3 107 3 view .LVU5199
 16079              		.loc 3 107 3 is_stmt 0 view .LVU5200
 16080              	.LBE1185:
 16081              	.LBE1191:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16082              		.loc 1 796 159 is_stmt 1 view .LVU5201
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16083              		.loc 1 797 13 view .LVU5202
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16084              		.loc 1 798 13 view .LVU5203
 799:sieve_extend.c ****         }
 16085              		.loc 1 799 13 view .LVU5204
 16086 0ec2 498DB6A8 		lea	rsi, 168[r14]	# ivtmp.686,
 16086      000000
 16087              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16088              		.loc 1 799 46 is_stmt 0 view .LVU5205
 16089 0ec9 C57B1165 		vmovsd	QWORD PTR 8[rbp], xmm12	# MEM[base: _495, offset: 8B], tmp482
 16089      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16090              		.loc 1 795 47 is_stmt 1 view .LVU5206
 16091              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16092              		.loc 1 795 48 is_stmt 0 view .LVU5207
 16093 0ece BD010000 		mov	ebp, 1	# i,
 16093      00
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16094              		.loc 1 795 29 is_stmt 1 view .LVU5208
 16095              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16096              		.loc 1 795 9 is_stmt 0 view .LVU5209
 16097 0ed3 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# i, %sfp
 16097      08
 16098 0ed8 0F833401 		jnb	.L1390	#,
 16098      0000
 16099 0ede 4885DB   		test	rbx, rbx	# tmp531
 16100 0ee1 7470     		je	.L1393	#,
 16101              	.LBB1192:
 16102              	.LBB1186:
 16103              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16104              		.loc 3 107 10 view .LVU5210
 16105 0ee3 41B80100 		mov	r8d, 1	#,
 16105      0000
 16106 0ee9 4C89E1   		mov	rcx, r12	#, step
 16107 0eec 4C89EA   		mov	rdx, r13	#, tuning_results
 16108 0eef 48897424 		mov	QWORD PTR 24[rsp], rsi	# %sfp, ivtmp.686
 16108      18
 16109              		.loc 3 107 10 view .LVU5211
 16110              	.LBE1186:
 16111              	.LBE1192:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16112              		.loc 1 796 13 is_stmt 1 view .LVU5212
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccIyIA9Z.s 			page 426


 16113              		.loc 1 796 26 view .LVU5213
 16114              	.LVL1060:
 16115              	.LBB1193:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16116              		.loc 3 105 1 view .LVU5214
 16117              	.LBB1187:
 16118              		.loc 3 107 3 view .LVU5215
 16119              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16120              		.loc 3 107 10 is_stmt 0 view .LVU5216
 16121 0ef4 BF010000 		mov	edi, 1	#,
 16121      00
 16122 0ef9 488D3500 		lea	rsi, .LC74[rip]	#,
 16122      000000
 16123 0f00 31C0     		xor	eax, eax	#
 16124 0f02 E8000000 		call	__printf_chk@PLT	#
 16124      00
 16125              	.LVL1061:
 16126              		.loc 3 107 10 view .LVU5217
 16127              	.LBE1187:
 16128              	.LBE1193:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16129              		.loc 1 796 159 is_stmt 1 view .LVU5218
 16130 0f07 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16130      000000
 16131              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16132              		.loc 1 795 48 is_stmt 0 view .LVU5219
 16133 0f0e BD020000 		mov	ebp, 2	# i,
 16133      00
 16134              	# sieve_extend.c:796:             verbose(1) { printf("\rTuning...found %ju options..benchmarking s
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16135              		.loc 1 796 159 view .LVU5220
 16136 0f13 E8000000 		call	fflush@PLT	#
 16136      00
 16137              	.LVL1062:
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16138              		.loc 1 797 13 is_stmt 1 view .LVU5221
 16139 0f18 BE010000 		mov	esi, 1	#,
 16139      00
 16140 0f1d 4C89F7   		mov	rdi, r14	#, tuning_result
 16141 0f20 E8000000 		call	tune_benchmark	#
 16141      00
 16142              	.LVL1063:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16143              		.loc 1 798 13 view .LVU5222
 16144              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16145              		.loc 1 798 41 is_stmt 0 view .LVU5223
 16146 0f25 4C8B4424 		mov	r8, QWORD PTR 24[rsp]	# ivtmp.686, %sfp
 16146      18
 16147              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16148              		.loc 1 799 46 view .LVU5224
 16149 0f2a C57B102D 		vmovsd	xmm13, QWORD PTR .LC73[rip]	# tmp763,
 16149      00000000 
 16150              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
GAS LISTING /tmp/ccIyIA9Z.s 			page 427


 16151              		.loc 1 798 41 view .LVU5225
 16152 0f32 4D0138   		add	QWORD PTR [r8], r15	# MEM[base: _495, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16153              		.loc 1 799 13 is_stmt 1 view .LVU5226
 16154              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16155              		.loc 1 799 46 is_stmt 0 view .LVU5227
 16156 0f35 C4411358 		vaddsd	xmm14, xmm13, QWORD PTR 8[r8]	# tmp591, tmp763, MEM[base: _495, offset: 8B]
 16156      7008
 16157 0f3b 498DB610 		lea	rsi, 272[r14]	# ivtmp.686,
 16157      010000
 16158 0f42 C4417B11 		vmovsd	QWORD PTR 8[r8], xmm14	# MEM[base: _495, offset: 8B], tmp591
 16158      7008
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16159              		.loc 1 795 47 is_stmt 1 view .LVU5228
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16160              		.loc 1 795 29 view .LVU5229
 16161              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16162              		.loc 1 795 9 is_stmt 0 view .LVU5230
 16163 0f48 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# i, %sfp
 16163      08
 16164 0f4d 0F83BF00 		jnb	.L1390	#,
 16164      0000
 16165              	.L1393:
 16166 0f53 4889F3   		mov	rbx, rsi	# ivtmp.686, ivtmp.686
 16167              	.L1325:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16168              		.loc 1 796 13 is_stmt 1 view .LVU5231
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16169              		.loc 1 796 26 view .LVU5232
 16170              	.LVL1064:
 16171              	.LBB1194:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16172              		.loc 3 105 1 view .LVU5233
 16173              	.LBB1188:
 16174              		.loc 3 107 3 view .LVU5234
 16175              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16176              		.loc 3 107 10 is_stmt 0 view .LVU5235
 16177 0f56 4989E8   		mov	r8, rbp	#, i
 16178 0f59 4C89E1   		mov	rcx, r12	#, step
 16179 0f5c 4C89EA   		mov	rdx, r13	#, tuning_results
 16180 0f5f 488D3500 		lea	rsi, .LC74[rip]	#,
 16180      000000
 16181 0f66 BF010000 		mov	edi, 1	#,
 16181      00
 16182 0f6b 31C0     		xor	eax, eax	#
 16183 0f6d E8000000 		call	__printf_chk@PLT	#
 16183      00
 16184              	.LVL1065:
 16185              		.loc 3 107 10 view .LVU5236
 16186              	.LBE1188:
 16187              	.LBE1194:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16188              		.loc 1 796 159 is_stmt 1 view .LVU5237
 16189 0f72 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16189      000000
GAS LISTING /tmp/ccIyIA9Z.s 			page 428


 16190 0f79 E8000000 		call	fflush@PLT	#
 16190      00
 16191              	.LVL1066:
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16192              		.loc 1 797 13 view .LVU5238
 16193 0f7e 4889EE   		mov	rsi, rbp	#, i
 16194 0f81 4C89F7   		mov	rdi, r14	#, tuning_result
 16195 0f84 E8000000 		call	tune_benchmark	#
 16195      00
 16196              	.LVL1067:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16197              		.loc 1 798 13 view .LVU5239
 16198              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16199              		.loc 1 799 46 is_stmt 0 view .LVU5240
 16200 0f89 C57B103D 		vmovsd	xmm15, QWORD PTR .LC73[rip]	# tmp744,
 16200      00000000 
 16201              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16202              		.loc 1 798 41 view .LVU5241
 16203 0f91 4C013B   		add	QWORD PTR [rbx], r15	# MEM[base: _495, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16204              		.loc 1 799 13 is_stmt 1 view .LVU5242
 16205              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16206              		.loc 1 799 46 is_stmt 0 view .LVU5243
 16207 0f94 C583584B 		vaddsd	xmm1, xmm15, QWORD PTR 8[rbx]	# tmp574, tmp744, MEM[base: _495, offset: 8B]
 16207      08
 16208              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16209              		.loc 1 795 48 view .LVU5244
 16210 0f99 4C8D4501 		lea	r8, 1[rbp]	# tmp532,
 16211 0f9d 4C8D5368 		lea	r10, 104[rbx]	# tmp533,
 16212              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16213              		.loc 1 799 46 view .LVU5245
 16214 0fa1 C5FB114B 		vmovsd	QWORD PTR 8[rbx], xmm1	# MEM[base: _495, offset: 8B], tmp574
 16214      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16215              		.loc 1 795 47 is_stmt 1 view .LVU5246
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16216              		.loc 1 795 29 view .LVU5247
 16217              	.LBB1195:
 16218              	.LBB1189:
 16219              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16220              		.loc 3 107 10 is_stmt 0 view .LVU5248
 16221 0fa6 4C89E1   		mov	rcx, r12	#, step
 16222 0fa9 4C89EA   		mov	rdx, r13	#, tuning_results
 16223 0fac 488D3500 		lea	rsi, .LC74[rip]	#,
 16223      000000
 16224 0fb3 BF010000 		mov	edi, 1	#,
 16224      00
 16225 0fb8 31C0     		xor	eax, eax	#
 16226 0fba 4C895424 		mov	QWORD PTR 40[rsp], r10	# %sfp, tmp533
 16226      28
 16227              		.loc 3 107 10 view .LVU5249
 16228              	.LBE1189:
GAS LISTING /tmp/ccIyIA9Z.s 			page 429


 16229              	.LBE1195:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16230              		.loc 1 796 13 is_stmt 1 view .LVU5250
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16231              		.loc 1 796 26 view .LVU5251
 16232              	.LVL1068:
 16233              	.LBB1196:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16234              		.loc 3 105 1 view .LVU5252
 16235              	.LBB1190:
 16236              		.loc 3 107 3 view .LVU5253
 16237              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16238              		.loc 3 107 10 is_stmt 0 view .LVU5254
 16239 0fbf 4C894424 		mov	QWORD PTR 24[rsp], r8	# %sfp, tmp532
 16239      18
 16240 0fc4 E8000000 		call	__printf_chk@PLT	#
 16240      00
 16241              	.LVL1069:
 16242              		.loc 3 107 10 view .LVU5255
 16243              	.LBE1190:
 16244              	.LBE1196:
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16245              		.loc 1 796 159 is_stmt 1 view .LVU5256
 16246 0fc9 488B3D00 		mov	rdi, QWORD PTR stdout[rip]	#, stdout
 16246      000000
 16247              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16248              		.loc 1 795 48 is_stmt 0 view .LVU5257
 16249 0fd0 4883C502 		add	rbp, 2	# i,
 16250              	# sieve_extend.c:796:             verbose(1) { printf("\rTuning...found %ju options..benchmarking s
 796:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 16251              		.loc 1 796 159 view .LVU5258
 16252 0fd4 E8000000 		call	fflush@PLT	#
 16252      00
 16253              	.LVL1070:
 797:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 16254              		.loc 1 797 13 is_stmt 1 view .LVU5259
 16255 0fd9 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# tmp532, %sfp
 16255      18
 16256 0fde 4C89F7   		mov	rdi, r14	#, tuning_result
 16257 0fe1 E8000000 		call	tune_benchmark	#
 16257      00
 16258              	.LVL1071:
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16259              		.loc 1 798 13 view .LVU5260
 16260              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
 16261              		.loc 1 798 41 is_stmt 0 view .LVU5261
 16262 0fe6 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# tmp533, %sfp
 16262      28
 16263              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16264              		.loc 1 799 46 view .LVU5262
 16265 0feb C5FB1035 		vmovsd	xmm6, QWORD PTR .LC73[rip]	# tmp745,
 16265      00000000 
 16266              	# sieve_extend.c:798:             tuning_result[i].sample_max += sample_max;
 798:sieve_extend.c ****             tuning_result[i].sample_duration += 0.05;
GAS LISTING /tmp/ccIyIA9Z.s 			page 430


 16267              		.loc 1 798 41 view .LVU5263
 16268 0ff3 4C013F   		add	QWORD PTR [rdi], r15	# MEM[base: _495, offset: 0B], sample_max
 799:sieve_extend.c ****         }
 16269              		.loc 1 799 13 is_stmt 1 view .LVU5264
 16270              	# sieve_extend.c:799:             tuning_result[i].sample_duration += 0.05;
 799:sieve_extend.c ****         }
 16271              		.loc 1 799 46 is_stmt 0 view .LVU5265
 16272 0ff6 C5CB585F 		vaddsd	xmm3, xmm6, QWORD PTR 8[rdi]	# tmp579, tmp745, MEM[base: _495, offset: 8B]
 16272      08
 16273 0ffb 4881C3D0 		add	rbx, 208	# ivtmp.686,
 16273      000000
 16274 1002 C5FB115F 		vmovsd	QWORD PTR 8[rdi], xmm3	# MEM[base: _495, offset: 8B], tmp579
 16274      08
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16275              		.loc 1 795 47 is_stmt 1 view .LVU5266
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16276              		.loc 1 795 29 view .LVU5267
 16277              	# sieve_extend.c:795:         for (counter_t i=0; i<tuning_results; i++) {
 795:sieve_extend.c ****             verbose(1) { printf("\rTuning...found %ju options..benchmarking step %ju - tuning %3ju 
 16278              		.loc 1 795 9 is_stmt 0 view .LVU5268
 16279 1007 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# i, %sfp
 16279      08
 16280 100c 0F8244FF 		jb	.L1325	#,
 16280      FFFF
 16281              	.L1390:
 16282              	.LBE1206:
 801:sieve_extend.c ****         
 16283              		.loc 1 801 9 is_stmt 1 view .LVU5269
 16284 1012 837C2410 		cmp	DWORD PTR 16[rsp], 1	# %sfp,
 16284      01
 16285 1017 0F8E13FD 		jle	.L1324	#,
 16285      FFFF
 801:sieve_extend.c ****         
 16286              		.loc 1 801 20 view .LVU5270
 16287              	.LVL1072:
 16288              	.LBB1207:
 16289              	.LBI1207:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16290              		.loc 3 105 1 view .LVU5271
 16291              	.LBB1208:
 16292              		.loc 3 107 3 view .LVU5272
 16293              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16294              		.loc 3 107 10 is_stmt 0 view .LVU5273
 16295 101d BF0A0000 		mov	edi, 10	#,
 16295      00
 16296 1022 E8000000 		call	putchar@PLT	#
 16296      00
 16297              	.LVL1073:
 16298 1027 E904FDFF 		jmp	.L1324	#
 16298      FF
 16299              	.LVL1074:
 16300              	.L1421:
 16301              		.loc 3 107 10 view .LVU5274
 16302              	.LBE1208:
 16303              	.LBE1207:
 16304              	.LBB1209:
 16305              	# sieve_extend.c:786:                 for (counter_t tuning_result_index=0; tuning_result_index<min
GAS LISTING /tmp/ccIyIA9Z.s 			page 431


 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16306              		.loc 1 786 32 view .LVU5275
 16307 102c 4C896424 		mov	QWORD PTR 40[rsp], r12	# %sfp, step
 16307      28
 16308 1031 4C8B6424 		mov	r12, QWORD PTR 24[rsp]	# tuning_results, %sfp
 16308      18
 16309              	.LVL1075:
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16310              		.loc 1 786 32 view .LVU5276
 16311 1036 498D5E08 		lea	rbx, 8[r14]	# ivtmp.693,
 16312 103a 31ED     		xor	ebp, ebp	# tuning_result_index
 16313              	.L1321:
 16314              	.LVL1076:
 787:sieve_extend.c ****                 }
 16315              		.loc 1 787 21 is_stmt 1 view .LVU5277
 16316              	.LBB1210:
 16317              	.LBI1210:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16318              		.loc 3 105 1 view .LVU5278
 16319              	.LBB1211:
 16320              		.loc 3 107 3 view .LVU5279
 16321              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16322              		.loc 3 107 10 is_stmt 0 view .LVU5280
 16323 103c 488D3500 		lea	rsi, .LC72[rip]	#,
 16323      000000
 16324 1043 BF010000 		mov	edi, 1	#,
 16324      00
 16325 1048 31C0     		xor	eax, eax	#
 16326 104a E8000000 		call	__printf_chk@PLT	#
 16326      00
 16327              	.LVL1077:
 16328              		.loc 3 107 10 view .LVU5281
 16329              	.LBE1211:
 16330              	.LBE1210:
 787:sieve_extend.c ****                 }
 16331              		.loc 1 787 36 is_stmt 1 view .LVU5282
 16332              	.LBB1212:
 16333              	.LBI1212:
 673:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 16334              		.loc 1 673 20 view .LVU5283
 16335              	.LBB1213:
 674:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 16336              		.loc 1 674 5 view .LVU5284
 16337              	.LBB1214:
 16338              	.LBI1214:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16339              		.loc 3 105 1 view .LVU5285
 16340              	.LBB1215:
 16341              		.loc 3 107 3 view .LVU5286
 16342              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16343              		.loc 3 107 10 is_stmt 0 view .LVU5287
 16344 104f 488B4B08 		mov	rcx, QWORD PTR 8[rbx]	# MEM[base: _567, offset: 8B], MEM[base: _567, offset: 8B]
 16345 1053 C5FB1043 		vmovsd	xmm0, QWORD PTR 80[rbx]	# MEM[base: _567, offset: 80B], MEM[base: _567, offset: 80B]
 16345      50
 16346 1058 FF7338   		push	QWORD PTR 56[rbx]	# MEM[base: _567, offset: 56B]
 16347              		.cfi_def_cfa_offset 280
 16348 105b 488D3500 		lea	rsi, .LC64[rip]	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 432


 16348      000000
 16349 1062 BF010000 		mov	edi, 1	#,
 16349      00
 16350 1067 FF7348   		push	QWORD PTR 72[rbx]	# MEM[base: _567, offset: 72B]
 16351              		.cfi_def_cfa_offset 288
 16352 106a B8030000 		mov	eax, 3	#,
 16352      00
 16353              	.LBE1215:
 16354              	.LBE1214:
 16355              	.LBE1213:
 16356              	.LBE1212:
 16357              	# sieve_extend.c:786:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16358              		.loc 1 786 118 view .LVU5288
 16359 106f 48FFC5   		inc	rbp	# tuning_result_index
 16360              	.LVL1078:
 16361              	.LBB1219:
 16362              	.LBB1218:
 16363              	.LBB1217:
 16364              	.LBB1216:
 16365              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16366              		.loc 3 107 10 view .LVU5289
 16367 1072 FF7328   		push	QWORD PTR 40[rbx]	# MEM[base: _567, offset: 40B]
 16368              		.cfi_def_cfa_offset 296
 16369 1075 4883C368 		add	rbx, 104	# ivtmp.693,
 16370 1079 FF73B8   		push	QWORD PTR -72[rbx]	# MEM[base: _567, offset: 32B]
 16371              		.cfi_def_cfa_offset 304
 16372 107c C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _567, offset: 88B]
 16372      F0
 16373 1081 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _567, offset: 64B]
 16373      D8
 16374 1086 4C8B4BB0 		mov	r9, QWORD PTR -80[rbx]	#, MEM[base: _567, offset: 24B]
 16375 108a 4C8B43A8 		mov	r8, QWORD PTR -88[rbx]	#, MEM[base: _567, offset: 16B]
 16376 108e 488B5398 		mov	rdx, QWORD PTR -104[rbx]	#, MEM[base: _567, offset: 0B]
 16377 1092 E8000000 		call	__printf_chk@PLT	#
 16377      00
 16378              	.LVL1079:
 16379              		.loc 3 107 10 view .LVU5290
 16380              	.LBE1216:
 16381              	.LBE1217:
 16382              	.LBE1218:
 16383              	.LBE1219:
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16384              		.loc 1 786 99 is_stmt 1 view .LVU5291
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16385              		.loc 1 786 55 view .LVU5292
 16386              	# sieve_extend.c:786:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16387              		.loc 1 786 75 is_stmt 0 view .LVU5293
 16388 1097 4883C420 		add	rsp, 32	#,
 16389              		.cfi_def_cfa_offset 272
 16390 109b B9280000 		mov	ecx, 40	# tmp476,
 16390      00
 16391 10a0 4983FC28 		cmp	r12, 40	# tuning_results,
 16392 10a4 490F46CC 		cmovbe	rcx, r12	# tuning_results,, tmp476
 16393              	# sieve_extend.c:786:                 for (counter_t tuning_result_index=0; tuning_result_index<min
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
GAS LISTING /tmp/ccIyIA9Z.s 			page 433


 16394              		.loc 1 786 17 view .LVU5294
 16395 10a8 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp476
 16396 10ab 728F     		jb	.L1321	#,
 16397 10ad 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# step, %sfp
 16397      28
 16398 10b2 E9AEFDFF 		jmp	.L1320	#
 16398      FF
 16399              	.LVL1080:
 16400              	.L1419:
 786:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 16401              		.loc 1 786 17 view .LVU5295
 16402              	.LBE1209:
 804:sieve_extend.c ****     verbose(2) {
 16403              		.loc 1 804 5 is_stmt 1 view .LVU5296
 16404              	# sieve_extend.c:804:     tuning_result_type best_result = tuning_result[0];
 804:sieve_extend.c ****     verbose(2) {
 16405              		.loc 1 804 24 is_stmt 0 view .LVU5297
 16406 10b7 4C8B4C24 		mov	r9, QWORD PTR 32[rsp]	# tuning_result, %sfp
 16406      20
 16407              	# sieve_extend.c:805:     verbose(2) {
 805:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(best_result);
 16408              		.loc 1 805 5 view .LVU5298
 16409 10bc 837C2410 		cmp	DWORD PTR 16[rsp], 1	# %sfp,
 16409      01
 16410              	# sieve_extend.c:804:     tuning_result_type best_result = tuning_result[0];
 804:sieve_extend.c ****     verbose(2) {
 16411              		.loc 1 804 24 view .LVU5299
 16412 10c1 4D8B6108 		mov	r12, QWORD PTR 8[r9]	# best_result$8, MEM[(struct tuning_result_type *)tuning_result_289 + 8B]
 16413              	.LVL1081:
 804:sieve_extend.c ****     verbose(2) {
 16414              		.loc 1 804 24 view .LVU5300
 16415 10c5 4D8B6920 		mov	r13, QWORD PTR 32[r9]	# best_result$32, MEM[(struct tuning_result_type *)tuning_result_289 + 3
 16416 10c9 498B6928 		mov	rbp, QWORD PTR 40[r9]	# best_result$40, MEM[(struct tuning_result_type *)tuning_result_289 + 4
 16417 10cd 498B5930 		mov	rbx, QWORD PTR 48[r9]	# best_result$48, MEM[(struct tuning_result_type *)tuning_result_289 + 4
 805:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(best_result);
 16418              		.loc 1 805 5 is_stmt 1 view .LVU5301
 16419 10d1 0F8F9A00 		jg	.L1422	#,
 16419      0000
 808:sieve_extend.c **** 
 16420              		.loc 1 808 5 view .LVU5302
 16421 10d7 0F842C01 		je	.L1328	#,
 16421      0000
 16422              	.LVL1082:
 16423              	.L1329:
 810:sieve_extend.c ****     return best_result;
 16424              		.loc 1 810 5 view .LVU5303
 16425 10dd 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	#, %sfp
 16425      20
 16426 10e2 E8000000 		call	free@PLT	#
 16426      00
 16427              	.LVL1083:
 811:sieve_extend.c **** }
 16428              		.loc 1 811 5 view .LVU5304
 811:sieve_extend.c **** }
 16429              		.loc 1 811 5 is_stmt 0 view .LVU5305
 16430              	.LBE1130:
 16431              	.LBE1129:
GAS LISTING /tmp/ccIyIA9Z.s 			page 434


 919:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 16432              		.loc 1 919 9 is_stmt 1 view .LVU5306
 16433              	# sieve_extend.c:919:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 919:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 16434              		.loc 1 919 33 is_stmt 0 view .LVU5307
 16435 10e7 4C892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r13	# global_SMALLSTEP_FASTER, best_result$32
 16435      000000
 920:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 16436              		.loc 1 920 9 is_stmt 1 view .LVU5308
 16437              	# sieve_extend.c:920:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 920:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 16438              		.loc 1 920 34 is_stmt 0 view .LVU5309
 16439 10ee 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$40
 16439      000000
 921:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 16440              		.loc 1 921 9 is_stmt 1 view .LVU5310
 16441              	# sieve_extend.c:921:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 921:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 16442              		.loc 1 921 34 is_stmt 0 view .LVU5311
 16443 10f5 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$48
 16443      000000
 922:sieve_extend.c ****     }
 16444              		.loc 1 922 9 is_stmt 1 view .LVU5312
 16445              	.LVL1084:
 922:sieve_extend.c ****     }
 16446              		.loc 1 922 9 is_stmt 0 view .LVU5313
 16447 10fc E9DDF3FF 		jmp	.L1298	#
 16447      FF
 16448              	.LVL1085:
 16449              	.L1342:
 16450              	.LBB1245:
 16451              	.LBB1242:
 16452              	# sieve_extend.c:697:     switch (tune_level) {
 697:sieve_extend.c ****         case 1:
 16453              		.loc 1 697 5 view .LVU5314
 16454 1101 C5FB100D 		vmovsd	xmm1, QWORD PTR .LC29[rip]	# sample_duration,
 16454      00000000 
 16455 1109 48C74424 		mov	QWORD PTR 80[rsp], 5	# %sfp,
 16455      50050000 
 16455      00
 16456 1112 48C74424 		mov	QWORD PTR 72[rsp], 128	# %sfp,
 16456      48800000 
 16456      00
 16457 111b 48C74424 		mov	QWORD PTR 104[rsp], 32	# %sfp,
 16457      68200000 
 16457      00
 16458 1124 48C74424 		mov	QWORD PTR 112[rsp], 4	# %sfp,
 16458      70040000 
 16458      00
 16459 112d C5FB114C 		vmovsd	QWORD PTR 88[rsp], xmm1	# %sfp, sample_duration
 16459      2458
 16460 1133 BB040000 		mov	ebx, 4	# smallstep_faster_steps,
 16460      00
 16461 1138 E91EF7FF 		jmp	.L1299	#
 16461      FF
 16462              	.LVL1086:
 16463              	.L1336:
GAS LISTING /tmp/ccIyIA9Z.s 			page 435


 697:sieve_extend.c ****         case 1:
 16464              		.loc 1 697 5 view .LVU5315
 16465              	.LBE1242:
 16466              	.LBE1245:
 16467              	.LBE1128:
 16468              	# sieve_extend.c:960:         verbose(1) printf("\033[0;32m(Passes - per %.1f seconds: %f - per sec
 960:sieve_extend.c ****         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (total %ju) - per %.1f 
 16469              		.loc 1 960 20 discriminator 1 view .LVU5316
 16470 113d 4989DC   		mov	r12, rbx	# tmp500, passes
 16471              	.LVL1087:
 960:sieve_extend.c ****         verbose(1) if (used_threads>1) printf("\033[0;32m(Passes per thread (total %ju) - per %.1f 
 16472              		.loc 1 960 20 discriminator 1 view .LVU5317
 16473 1140 49D1EC   		shr	r12	# tmp500
 16474 1143 83E301   		and	ebx, 1	# tmp501,
 16475 1146 4909DC   		or	r12, rbx	# tmp580, tmp501
 16476 1149 C441EB2A 		vcvtsi2sd	xmm8, xmm2, r12	# tmp617, tmp611, tmp580
 16476      C4
 16477 114e C4413B58 		vaddsd	xmm9, xmm8, xmm8	# _111, tmp499, tmp499
 16477      C8
 16478 1153 E962F6FF 		jmp	.L1337	#
 16478      FF
 16479              	.LVL1088:
 16480              	.L1415:
 16481              	.LBB1248:
 16482              	.LBB1246:
 16483              	.LBB1243:
 724:sieve_extend.c ****     verbose_at(1) { printf("Tuning..."); fflush(stdout); }
 16484              		.loc 1 724 16 is_stmt 1 view .LVU5318
 16485              	.LBB1220:
 16486              	.LBI1220:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16487              		.loc 3 105 1 view .LVU5319
 16488              	.LBB1221:
 16489              		.loc 3 107 3 view .LVU5320
 16490              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16491              		.loc 3 107 10 is_stmt 0 view .LVU5321
 16492 1158 BF0A0000 		mov	edi, 10	#,
 16492      00
 16493              	.LVL1089:
 16494              		.loc 3 107 10 view .LVU5322
 16495 115d E8000000 		call	putchar@PLT	#
 16495      00
 16496              	.LVL1090:
 16497              		.loc 3 107 10 view .LVU5323
 16498              	.LBE1221:
 16499              	.LBE1220:
 725:sieve_extend.c ****     verbose(2) printf("\n");
 16500              		.loc 1 725 5 is_stmt 1 view .LVU5324
 726:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16501              		.loc 1 726 5 view .LVU5325
 726:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 16502              		.loc 1 726 16 view .LVU5326
 16503              	.LBB1222:
 16504              	.LBI1222:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16505              		.loc 3 105 1 view .LVU5327
 16506              	.LBB1223:
GAS LISTING /tmp/ccIyIA9Z.s 			page 436


 16507              		.loc 3 107 3 view .LVU5328
 16508              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16509              		.loc 3 107 10 is_stmt 0 view .LVU5329
 16510 1162 BF0A0000 		mov	edi, 10	#,
 16510      00
 16511 1167 E8000000 		call	putchar@PLT	#
 16511      00
 16512              	.LVL1091:
 16513 116c E91EF7FF 		jmp	.L1301	#
 16513      FF
 16514              	.LVL1092:
 16515              	.L1422:
 16516              		.loc 3 107 10 view .LVU5330
 16517              	.LBE1223:
 16518              	.LBE1222:
 16519              	# sieve_extend.c:804:     tuning_result_type best_result = tuning_result[0];
 804:sieve_extend.c ****     verbose(2) {
 16520              		.loc 1 804 24 view .LVU5331
 16521 1171 498B4940 		mov	rcx, QWORD PTR 64[r9]	# best_result$64, MEM[(struct tuning_result_type *)tuning_result_289 + 6
 16522 1175 C4C17B10 		vmovsd	xmm2, QWORD PTR 72[r9]	# best_result$72, MEM[(struct tuning_result_type *)tuning_result_289
 16522      5148
 16523 117b 4D8B5950 		mov	r11, QWORD PTR 80[r9]	# best_result$80, MEM[(struct tuning_result_type *)tuning_result_289 + 8
 16524 117f C4C17B10 		vmovsd	xmm5, QWORD PTR 88[r9]	# best_result$88, MEM[(struct tuning_result_type *)tuning_result_289
 16524      6958
 16525 1185 C4417B10 		vmovsd	xmm8, QWORD PTR 96[r9]	# best_result$96, MEM[(struct tuning_result_type *)tuning_result_289
 16525      4160
 16526              	.LBB1224:
 16527              	.LBB1225:
 16528              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16529              		.loc 3 107 10 view .LVU5332
 16530 118b 488D3500 		lea	rsi, .LC75[rip]	#,
 16530      000000
 16531 1192 BF010000 		mov	edi, 1	#,
 16531      00
 16532 1197 31C0     		xor	eax, eax	#
 16533              	.LVL1093:
 16534              		.loc 3 107 10 view .LVU5333
 16535              	.LBE1225:
 16536              	.LBE1224:
 16537              	# sieve_extend.c:804:     tuning_result_type best_result = tuning_result[0];
 804:sieve_extend.c ****     verbose(2) {
 16538              		.loc 1 804 24 view .LVU5334
 16539 1199 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, best_result$64
 16539      30
 16540              	.LVL1094:
 804:sieve_extend.c ****     verbose(2) {
 16541              		.loc 1 804 24 view .LVU5335
 16542 119e 4C895C24 		mov	QWORD PTR 24[rsp], r11	# %sfp, best_result$80
 16542      18
 16543 11a3 C5FB1154 		vmovsd	QWORD PTR 40[rsp], xmm2	# %sfp, best_result$72
 16543      2428
 16544 11a9 C5FB116C 		vmovsd	QWORD PTR 16[rsp], xmm5	# %sfp, best_result$88
 16544      2410
 16545 11af C57B1144 		vmovsd	QWORD PTR 8[rsp], xmm8	# %sfp, best_result$96
 16545      2408
 806:sieve_extend.c ****     }
 16546              		.loc 1 806 9 is_stmt 1 view .LVU5336
GAS LISTING /tmp/ccIyIA9Z.s 			page 437


 16547              	.LVL1095:
 16548              	.LBB1228:
 16549              	.LBI1224:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16550              		.loc 3 105 1 view .LVU5337
 16551              	.LBB1226:
 16552              		.loc 3 107 3 view .LVU5338
 16553              	.LBE1226:
 16554              	.LBE1228:
 16555              	# sieve_extend.c:804:     tuning_result_type best_result = tuning_result[0];
 804:sieve_extend.c ****     verbose(2) {
 16556              		.loc 1 804 24 is_stmt 0 view .LVU5339
 16557 11b5 4D8B7110 		mov	r14, QWORD PTR 16[r9]	# best_result$16, MEM[(struct tuning_result_type *)tuning_result_289 + 1
 16558 11b9 4D8B7918 		mov	r15, QWORD PTR 24[r9]	# best_result$24, MEM[(struct tuning_result_type *)tuning_result_289 + 2
 16559              	.LBB1229:
 16560              	.LBB1227:
 16561              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16562              		.loc 3 107 10 view .LVU5340
 16563 11bd E8000000 		call	__printf_chk@PLT	#
 16563      00
 16564              	.LVL1096:
 16565              		.loc 3 107 10 view .LVU5341
 16566              	.LBE1227:
 16567              	.LBE1229:
 806:sieve_extend.c ****     }
 16568              		.loc 1 806 34 is_stmt 1 view .LVU5342
 16569              	.LBB1230:
 16570              	.LBI1230:
 673:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 16571              		.loc 1 673 20 view .LVU5343
 16572              	.LBB1231:
 674:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 16573              		.loc 1 674 5 view .LVU5344
 16574              	.LBB1232:
 16575              	.LBI1232:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16576              		.loc 3 105 1 view .LVU5345
 16577              	.LBB1233:
 16578              		.loc 3 107 3 view .LVU5346
 16579              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16580              		.loc 3 107 10 is_stmt 0 view .LVU5347
 16581 11c2 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# best_result$64, %sfp
 16581      30
 16582 11c7 4D89E9   		mov	r9, r13	#, best_result$32
 16583 11ca 4150     		push	r8	# best_result$64
 16584              		.cfi_def_cfa_offset 280
 16585 11cc 4C89F1   		mov	rcx, r14	#, best_result$16
 16586 11cf 4D89F8   		mov	r8, r15	#, best_result$24
 16587 11d2 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# best_result$80, %sfp
 16587      20
 16588 11d7 4C89E2   		mov	rdx, r12	#, best_result$8
 16589 11da 56       		push	rsi	# best_result$80
 16590              		.cfi_def_cfa_offset 288
 16591 11db BF010000 		mov	edi, 1	#,
 16591      00
 16592 11e0 488D3500 		lea	rsi, .LC64[rip]	#,
 16592      000000
GAS LISTING /tmp/ccIyIA9Z.s 			page 438


 16593 11e7 53       		push	rbx	# best_result$48
 16594              		.cfi_def_cfa_offset 296
 16595 11e8 B8030000 		mov	eax, 3	#,
 16595      00
 16596 11ed 55       		push	rbp	# best_result$40
 16597              		.cfi_def_cfa_offset 304
 16598 11ee C5FB1054 		vmovsd	xmm2, QWORD PTR 40[rsp]	# best_result$96, %sfp
 16598      2428
 16599 11f4 C5FB104C 		vmovsd	xmm1, QWORD PTR 72[rsp]	# best_result$72, %sfp
 16599      2448
 16600 11fa C5FB1044 		vmovsd	xmm0, QWORD PTR 48[rsp]	# best_result$88, %sfp
 16600      2430
 16601 1200 E8000000 		call	__printf_chk@PLT	#
 16601      00
 16602              	.LVL1097:
 16603              		.loc 3 107 10 view .LVU5348
 16604              	.LBE1233:
 16605              	.LBE1232:
 16606              	.LBE1231:
 16607              	.LBE1230:
 808:sieve_extend.c **** 
 16608              		.loc 1 808 5 is_stmt 1 view .LVU5349
 16609              	.LBB1237:
 16610              	.LBB1236:
 16611              	.LBB1235:
 16612              	.LBB1234:
 16613              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16614              		.loc 3 107 10 is_stmt 0 view .LVU5350
 16615 1205 4883C420 		add	rsp, 32	#,
 16616              		.cfi_def_cfa_offset 272
 16617              	.L1328:
 16618              		.loc 3 107 10 view .LVU5351
 16619              	.LBE1234:
 16620              	.LBE1235:
 16621              	.LBE1236:
 16622              	.LBE1237:
 808:sieve_extend.c **** 
 16623              		.loc 1 808 16 is_stmt 1 view .LVU5352
 16624              	.LVL1098:
 16625              	.LBB1238:
 16626              	.LBI1238:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16627              		.loc 3 105 1 view .LVU5353
 16628              	.LBB1239:
 16629              		.loc 3 107 3 view .LVU5354
 16630              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16631              		.loc 3 107 10 is_stmt 0 view .LVU5355
 16632 1209 BF0A0000 		mov	edi, 10	#,
 16632      00
 16633 120e E8000000 		call	putchar@PLT	#
 16633      00
 16634              	.LVL1099:
 16635 1213 E9C5FEFF 		jmp	.L1329	#
 16635      FF
 16636              	.LVL1100:
 16637              	.L1391:
 16638              		.loc 3 107 10 view .LVU5356
GAS LISTING /tmp/ccIyIA9Z.s 			page 439


 16639              	.LBE1239:
 16640              	.LBE1238:
 16641              	.LBE1243:
 16642              	.LBE1246:
 16643              	.LBE1248:
 16644              	# sieve_extend.c:942:         double elapsed_time = 0;
 942:sieve_extend.c ****         struct sieve_t *sieve;
 16645              		.loc 1 942 16 view .LVU5357
 16646 1218 C5F957C0 		vxorpd	xmm0, xmm0, xmm0	# elapsed_time
 16647              	# sieve_extend.c:940:         counter_t passes = 0;
 940:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 16648              		.loc 1 940 19 view .LVU5358
 16649 121c 31DB     		xor	ebx, ebx	# passes
 16650 121e E951F4FF 		jmp	.L1332	#
 16650      FF
 16651              	.LVL1101:
 16652              	.L1400:
 16653              	.LBB1249:
 834:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 16654              		.loc 1 834 34 is_stmt 1 discriminator 1 view .LVU5359
 16655              	.LBB1049:
 16656              	.LBI1049:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16657              		.loc 3 98 1 discriminator 1 view .LVU5360
 16658              	.LBB1050:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16659              		.loc 3 100 3 discriminator 1 view .LVU5361
 16660              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16661              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5362
 16662 1223 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16662      000000
 16663 122a BA1B0000 		mov	edx, 27	#,
 16663      00
 16664 122f BE010000 		mov	esi, 1	#,
 16664      00
 16665 1234 488D3D00 		lea	rdi, .LC33[rip]	#,
 16665      000000
 16666 123b E8000000 		call	fwrite@PLT	#
 16666      00
 16667              	.LVL1102:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16668              		.loc 3 100 10 discriminator 1 view .LVU5363
 16669              	.LBE1050:
 16670              	.LBE1049:
 834:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 16671              		.loc 1 834 83 is_stmt 1 discriminator 1 view .LVU5364
 16672 1240 E90CF5FF 		jmp	.L1399	#
 16672      FF
 16673              	.L1277:
 844:sieve_extend.c ****             }
 16674              		.loc 1 844 17 view .LVU5365
 16675              	.LVL1103:
 16676              	.LBB1051:
 16677              	.LBI1046:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16678              		.loc 3 98 1 view .LVU5366
GAS LISTING /tmp/ccIyIA9Z.s 			page 440


 16679              	.LBB1048:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16680              		.loc 3 100 3 view .LVU5367
 16681              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16682              		.loc 3 100 10 is_stmt 0 view .LVU5368
 16683 1245 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_30
 16684 1248 488D1500 		lea	rdx, .LC40[rip]	#,
 16684      000000
 16685 124f E9EAF4FF 		jmp	.L1398	#
 16685      FF
 16686              	.LVL1104:
 16687              	.L1418:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16688              		.loc 3 100 10 view .LVU5369
 16689              	.LBE1048:
 16690              	.LBE1051:
 16691              	.LBE1249:
 16692              	.LBB1250:
 16693              	.LBB1247:
 16694              	.LBB1244:
 769:sieve_extend.c ****     verbose(2) { printf("Tuning...tuned %ju options..\n",(uintmax_t)tuning_results); }
 16695              		.loc 1 769 21 is_stmt 1 view .LVU5370
 16696              	.LBB1240:
 16697              	.LBI1240:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16698              		.loc 3 105 1 view .LVU5371
 16699              	.LBB1241:
 16700              		.loc 3 107 3 view .LVU5372
 16701              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16702              		.loc 3 107 10 is_stmt 0 view .LVU5373
 16703 1254 4889EA   		mov	rdx, rbp	#, tuning_results
 16704              	.LVL1105:
 16705              		.loc 3 107 10 view .LVU5374
 16706 1257 488D3500 		lea	rsi, .LC67[rip]	#,
 16706      000000
 16707 125e BF010000 		mov	edi, 1	#,
 16707      00
 16708 1263 31C0     		xor	eax, eax	#
 16709 1265 E8000000 		call	__printf_chk@PLT	#
 16709      00
 16710              	.LVL1106:
 16711              		.loc 3 107 10 view .LVU5375
 16712              	.LBE1241:
 16713              	.LBE1240:
 770:sieve_extend.c ****     verbose(2) {
 16714              		.loc 1 770 5 is_stmt 1 view .LVU5376
 16715 126a E9ABF8FF 		jmp	.L1317	#
 16715      FF
 16716              	.LVL1107:
 16717              	.L1403:
 770:sieve_extend.c ****     verbose(2) {
 16718              		.loc 1 770 5 is_stmt 0 view .LVU5377
 16719              	.LBE1244:
 16720              	.LBE1247:
 16721              	.LBE1250:
 16722              	.LBB1251:
GAS LISTING /tmp/ccIyIA9Z.s 			page 441


 842:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 16723              		.loc 1 842 34 is_stmt 1 discriminator 1 view .LVU5378
 16724              	.LBB1052:
 16725              	.LBI1052:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16726              		.loc 3 98 1 discriminator 1 view .LVU5379
 16727              	.LBB1053:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16728              		.loc 3 100 3 discriminator 1 view .LVU5380
 16729              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16730              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5381
 16731 126f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16731      000000
 16732 1276 488D3D00 		lea	rdi, .LC39[rip]	#,
 16732      000000
 16733 127d BA180000 		mov	edx, 24	#,
 16733      00
 16734 1282 BE010000 		mov	esi, 1	#,
 16734      00
 16735 1287 E8000000 		call	fwrite@PLT	#
 16735      00
 16736              	.LVL1108:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16737              		.loc 3 100 10 discriminator 1 view .LVU5382
 16738              	.LBE1053:
 16739              	.LBE1052:
 842:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 16740              		.loc 1 842 80 is_stmt 1 discriminator 1 view .LVU5383
 16741 128c 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_191(D)
 16742 1290 E8000000 		call	usage	#
 16742      00
 16743              	.LVL1109:
 16744              	.L1284:
 858:sieve_extend.c ****             }
 16745              		.loc 1 858 17 view .LVU5384
 16746              	.LBB1054:
 16747              	.LBI1054:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16748              		.loc 3 98 1 view .LVU5385
 16749              	.LBB1055:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16750              		.loc 3 100 3 view .LVU5386
 16751              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16752              		.loc 3 100 10 is_stmt 0 view .LVU5387
 16753 1295 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_56
 16754 1298 488D1500 		lea	rdx, .LC50[rip]	#,
 16754      000000
 16755 129f E99AF4FF 		jmp	.L1398	#
 16755      FF
 16756              	.LVL1110:
 16757              	.L1414:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16758              		.loc 3 100 10 view .LVU5388
 16759              	.LBE1055:
 16760              	.LBE1054:
GAS LISTING /tmp/ccIyIA9Z.s 			page 442


 16761              	.LBE1251:
 16762              	# sieve_extend.c:973: }
 16763              		.loc 1 973 1 view .LVU5389
 16764 12a4 E8000000 		call	__stack_chk_fail@PLT	#
 16764      00
 16765              	.LVL1111:
 16766              	.L1410:
 16767              	.LBB1252:
 863:sieve_extend.c ****         #ifdef _OPENMP
 16768              		.loc 1 863 34 is_stmt 1 discriminator 1 view .LVU5390
 16769              	.LBB1056:
 16770              	.LBI1056:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16771              		.loc 3 98 1 discriminator 1 view .LVU5391
 16772              	.LBB1057:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16773              		.loc 3 100 3 discriminator 1 view .LVU5392
 16774              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16775              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5393
 16776 12a9 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16776      000000
 16777 12b0 488D3D00 		lea	rdi, .LC53[rip]	#,
 16777      000000
 16778 12b7 BA1C0000 		mov	edx, 28	#,
 16778      00
 16779 12bc BE010000 		mov	esi, 1	#,
 16779      00
 16780 12c1 E8000000 		call	fwrite@PLT	#
 16780      00
 16781              	.LVL1112:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16782              		.loc 3 100 10 discriminator 1 view .LVU5394
 16783              	.LBE1057:
 16784              	.LBE1056:
 863:sieve_extend.c ****         #ifdef _OPENMP
 16785              		.loc 1 863 84 is_stmt 1 discriminator 1 view .LVU5395
 16786 12c6 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_191(D)
 16787 12ca E8000000 		call	usage	#
 16787      00
 16788              	.LVL1113:
 16789              	.L1409:
 856:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 16790              		.loc 1 856 34 discriminator 1 view .LVU5396
 16791              	.LBB1058:
 16792              	.LBI1058:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16793              		.loc 3 98 1 discriminator 1 view .LVU5397
 16794              	.LBB1059:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16795              		.loc 3 100 3 discriminator 1 view .LVU5398
 16796              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16797              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5399
 16798 12cf 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16798      000000
 16799 12d6 488D3D00 		lea	rdi, .LC48[rip]	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 443


 16799      000000
 16800 12dd BA1A0000 		mov	edx, 26	#,
 16800      00
 16801 12e2 BE010000 		mov	esi, 1	#,
 16801      00
 16802 12e7 E8000000 		call	fwrite@PLT	#
 16802      00
 16803              	.LVL1114:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16804              		.loc 3 100 10 discriminator 1 view .LVU5400
 16805              	.LBE1059:
 16806              	.LBE1058:
 856:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 16807              		.loc 1 856 82 is_stmt 1 discriminator 1 view .LVU5401
 16808 12ec 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_191(D)
 16809 12f0 E8000000 		call	usage	#
 16809      00
 16810              	.LVL1115:
 16811              	.L1408:
 851:sieve_extend.c ****             }
 16812              		.loc 1 851 17 view .LVU5402
 16813              	.LBB1060:
 16814              	.LBI1060:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16815              		.loc 3 98 1 view .LVU5403
 16816              	.LBB1061:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16817              		.loc 3 100 3 view .LVU5404
 16818              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16819              		.loc 3 100 10 is_stmt 0 view .LVU5405
 16820 12f5 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_43
 16821 12f8 488D1500 		lea	rdx, .LC45[rip]	#,
 16821      000000
 16822 12ff E93AF4FF 		jmp	.L1398	#
 16822      FF
 16823              	.LVL1116:
 16824              	.L1407:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16825              		.loc 3 100 10 view .LVU5406
 16826              	.LBE1061:
 16827              	.LBE1060:
 849:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 16828              		.loc 1 849 34 is_stmt 1 discriminator 1 view .LVU5407
 16829              	.LBB1062:
 16830              	.LBI1062:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16831              		.loc 3 98 1 discriminator 1 view .LVU5408
 16832              	.LBB1063:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16833              		.loc 3 100 3 discriminator 1 view .LVU5409
 16834              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16835              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU5410
 16836 1304 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 16836      000000
 16837 130b 488D3D00 		lea	rdi, .LC43[rip]	#,
GAS LISTING /tmp/ccIyIA9Z.s 			page 444


 16837      000000
 16838 1312 BA120000 		mov	edx, 18	#,
 16838      00
 16839 1317 BE010000 		mov	esi, 1	#,
 16839      00
 16840 131c E8000000 		call	fwrite@PLT	#
 16840      00
 16841              	.LVL1117:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16842              		.loc 3 100 10 discriminator 1 view .LVU5411
 16843              	.LBE1063:
 16844              	.LBE1062:
 849:sieve_extend.c ****             if (sscanf(argv[arg], "%lf", &option_max_time) != 1 ) {
 16845              		.loc 1 849 74 is_stmt 1 discriminator 1 view .LVU5412
 16846 1321 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_191(D)
 16847 1325 E8000000 		call	usage	#
 16847      00
 16848              	.LVL1118:
 16849              	.LBE1252:
 16850              		.cfi_endproc
 16851              	.LFE77:
 16853              		.section	.rodata
 16854              		.align 16
 16857              	CSWTCH.151:
 16858 0000 9A999999 		.long	2576980378
 16859 0004 9999B93F 		.long	1069128089
 16860 0008 9A999999 		.long	2576980378
 16861 000c 9999C93F 		.long	1070176665
 16862 0010 9A999999 		.long	2576980378
 16863 0014 9999C93F 		.long	1070176665
 16864 0018 00000000 		.align 16
 16864      00000000 
 16867              	CSWTCH.150:
 16868 0020 00080000 		.quad	2048
 16868      00000000 
 16869 0028 00040000 		.quad	1024
 16869      00000000 
 16870 0030 40000000 		.quad	64
 16870      00000000 
 16871 0038 00000000 		.align 16
 16871      00000000 
 16874              	CSWTCH.149:
 16875 0040 10000000 		.quad	16
 16875      00000000 
 16876 0048 10000000 		.quad	16
 16876      00000000 
 16877 0050 04000000 		.quad	4
 16877      00000000 
 16878 0058 00000000 		.align 16
 16878      00000000 
 16881              	CSWTCH.148:
 16882 0060 10000000 		.quad	16
 16882      00000000 
 16883 0068 04000000 		.quad	4
 16883      00000000 
 16884 0070 04000000 		.quad	4
 16884      00000000 
GAS LISTING /tmp/ccIyIA9Z.s 			page 445


 16885 0078 00000000 		.align 16
 16885      00000000 
 16888              	CSWTCH.147:
 16889 0080 10000000 		.quad	16
 16889      00000000 
 16890 0088 08000000 		.quad	8
 16890      00000000 
 16891 0090 04000000 		.quad	4
 16891      00000000 
 16892              		.globl	global_VECTORSTEP_FASTER
 16893              		.data
 16894              		.align 8
 16897              	global_VECTORSTEP_FASTER:
 16898 0000 60000000 		.quad	96
 16898      00000000 
 16899              		.globl	global_MEDIUMSTEP_FASTER
 16900              		.align 8
 16903              	global_MEDIUMSTEP_FASTER:
 16904 0008 20000000 		.quad	32
 16904      00000000 
 16905              		.globl	global_SMALLSTEP_FASTER
 16906              		.bss
 16907              		.align 8
 16910              	global_SMALLSTEP_FASTER:
 16911 0000 00000000 		.zero	8
 16911      00000000 
 16912              		.section	.rodata.cst32,"aM",@progbits,32
 16913              		.align 32
 16914              	.LC0:
 16915 0000 00000000 		.quad	0
 16915      00000000 
 16916 0008 01000000 		.quad	1
 16916      00000000 
 16917 0010 02000000 		.quad	2
 16917      00000000 
 16918 0018 03000000 		.quad	3
 16918      00000000 
 16919              		.align 32
 16920              	.LC1:
 16921 0020 08000000 		.quad	8
 16921      00000000 
 16922 0028 08000000 		.quad	8
 16922      00000000 
 16923 0030 08000000 		.quad	8
 16923      00000000 
 16924 0038 08000000 		.quad	8
 16924      00000000 
 16925              		.align 32
 16926              	.LC2:
 16927 0040 04000000 		.quad	4
 16927      00000000 
 16928 0048 04000000 		.quad	4
 16928      00000000 
 16929 0050 04000000 		.quad	4
 16929      00000000 
 16930 0058 04000000 		.quad	4
 16930      00000000 
GAS LISTING /tmp/ccIyIA9Z.s 			page 446


 16931              		.align 32
 16932              	.LC3:
 16933 0060 3F000000 		.long	63
 16934 0064 3F000000 		.long	63
 16935 0068 3F000000 		.long	63
 16936 006c 3F000000 		.long	63
 16937 0070 3F000000 		.long	63
 16938 0074 3F000000 		.long	63
 16939 0078 3F000000 		.long	63
 16940 007c 3F000000 		.long	63
 16941              		.section	.rodata.cst8,"aM",@progbits,8
 16942              		.align 8
 16943              	.LC8:
 16944 0000 00000000 		.long	0
 16945 0004 0000F87F 		.long	2146959360
 16946              		.align 8
 16947              	.LC9:
 16948 0008 95D626E8 		.long	3894859413
 16949 000c 0B2E113E 		.long	1041313291
 16950              		.align 8
 16951              	.LC29:
 16952 0010 9A999999 		.long	2576980378
 16953 0014 9999B93F 		.long	1069128089
 16954              		.align 8
 16955              	.LC30:
 16956 0018 00000000 		.long	0
 16957 001c 00001440 		.long	1075052544
 16958              		.align 8
 16959              	.LC73:
 16960 0020 9A999999 		.long	2576980378
 16961 0024 9999A93F 		.long	1068079513
 16962              		.text
 16963              	.Letext0:
 16964              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 16965              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 16966              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 16967              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 16968              		.file 8 "/usr/include/stdio.h"
 16969              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 16970              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 16971              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 16972              		.file 12 "/usr/include/stdint.h"
 16973              		.file 13 "/usr/include/time.h"
 16974              		.file 14 "/usr/include/math.h"
 16975              		.file 15 "<built-in>"
 16976              		.file 16 "/usr/include/stdlib.h"
 41767              		.section	.note.gnu.property,"a"
 41768              		.align 8
 41769 0000 04000000 		.long	 1f - 0f
 41770 0004 10000000 		.long	 4f - 1f
 41771 0008 05000000 		.long	 5
 41772              	0:
 41773 000c 474E5500 		.string	 "GNU"
 41774              	1:
 41775              		.align 8
 41776 0010 020000C0 		.long	 0xc0000002
 41777 0014 04000000 		.long	 3f - 2f
GAS LISTING /tmp/ccIyIA9Z.s 			page 447


 41778              	2:
 41779 0018 03000000 		.long	 0x3
 41780              	3:
 41781 001c 00000000 		.align 8
 41782              	4:
GAS LISTING /tmp/ccIyIA9Z.s 			page 448


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccIyIA9Z.s:87     .text:0000000000000000 continuePattern_smallSize
     /tmp/ccIyIA9Z.s:16914  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccIyIA9Z.s:16920  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccIyIA9Z.s:16926  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccIyIA9Z.s:16932  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccIyIA9Z.s:921    .text:0000000000000530 compare_tuning_result
     /tmp/ccIyIA9Z.s:947    .text:0000000000000550 continuePattern_shiftright
     /tmp/ccIyIA9Z.s:1838   .text:0000000000000b10 continuePattern_aligned
     /tmp/ccIyIA9Z.s:2637   .text:0000000000001010 continuePattern_shiftleft
     /tmp/ccIyIA9Z.s:4896   .text:0000000000001eb0 show_primes.isra.0
     /tmp/ccIyIA9Z.s:4891   .rodata.str1.1:0000000000000006 .LC6
     /tmp/ccIyIA9Z.s:4889   .rodata.str1.1:0000000000000000 .LC5
     /tmp/ccIyIA9Z.s:5297   .text:0000000000002050 sieve_shake
     /tmp/ccIyIA9Z.s:16903  .data:0000000000000008 global_MEDIUMSTEP_FASTER
     /tmp/ccIyIA9Z.s:16897  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccIyIA9Z.s:11837  .text:0000000000003de0 tune_benchmark
     /tmp/ccIyIA9Z.s:16910  .bss:0000000000000000 global_SMALLSTEP_FASTER
     /tmp/ccIyIA9Z.s:16943  .rodata.cst8:0000000000000000 .LC8
     /tmp/ccIyIA9Z.s:16947  .rodata.cst8:0000000000000008 .LC9
     /tmp/ccIyIA9Z.s:12077  .text:0000000000003f30 validatePrimeCount
     /tmp/ccIyIA9Z.s:12058  .rodata.str1.8:0000000000000000 .LC10
     /tmp/ccIyIA9Z.s:12064  .rodata.str1.1:0000000000000023 .LC12
     /tmp/ccIyIA9Z.s:12068  .rodata.str1.8:00000000000000c0 .LC13
     /tmp/ccIyIA9Z.s:12061  .rodata.str1.8:0000000000000058 .LC11
     /tmp/ccIyIA9Z.s:12071  .rodata.str1.8:00000000000000f8 .LC14
     /tmp/ccIyIA9Z.s:13327  .text:00000000000046c0 usage
     /tmp/ccIyIA9Z.s:13281  .rodata.str1.8:0000000000000148 .LC15
     /tmp/ccIyIA9Z.s:13284  .rodata.str1.1:0000000000000031 .LC16
     /tmp/ccIyIA9Z.s:13288  .rodata.str1.8:0000000000000168 .LC17
     /tmp/ccIyIA9Z.s:13291  .rodata.str1.8:00000000000001a8 .LC18
     /tmp/ccIyIA9Z.s:13294  .rodata.str1.8:00000000000001d8 .LC19
     /tmp/ccIyIA9Z.s:13297  .rodata.str1.8:0000000000000218 .LC20
     /tmp/ccIyIA9Z.s:13300  .rodata.str1.8:0000000000000278 .LC21
     /tmp/ccIyIA9Z.s:13303  .rodata.str1.8:00000000000002c8 .LC22
     /tmp/ccIyIA9Z.s:13306  .rodata.str1.8:00000000000002f0 .LC23
     /tmp/ccIyIA9Z.s:13309  .rodata.str1.8:0000000000000320 .LC24
     /tmp/ccIyIA9Z.s:13312  .rodata.str1.8:0000000000000358 .LC25
     /tmp/ccIyIA9Z.s:13315  .rodata.str1.8:0000000000000398 .LC26
     /tmp/ccIyIA9Z.s:13318  .rodata.str1.8:00000000000003c8 .LC27
     /tmp/ccIyIA9Z.s:13321  .rodata.str1.8:0000000000000410 .LC28
     /tmp/ccIyIA9Z.s:13732  .text.startup:0000000000000000 main
     /tmp/ccIyIA9Z.s:16955  .rodata.cst8:0000000000000018 .LC30
     /tmp/ccIyIA9Z.s:13600  .rodata.str1.1:000000000000003b .LC31
     /tmp/ccIyIA9Z.s:13602  .rodata.str1.1:0000000000000042 .LC32
     /tmp/ccIyIA9Z.s:13606  .rodata.str1.1:0000000000000068 .LC34
     /tmp/ccIyIA9Z.s:13613  .rodata.str1.1:000000000000006b .LC36
     /tmp/ccIyIA9Z.s:13615  .rodata.str1.1:0000000000000084 .LC37
     /tmp/ccIyIA9Z.s:13617  .rodata.str1.1:000000000000008c .LC38
     /tmp/ccIyIA9Z.s:13626  .rodata.str1.1:00000000000000ac .LC41
     /tmp/ccIyIA9Z.s:13669  .rodata.str1.1:000000000000019b .LC58
     /tmp/ccIyIA9Z.s:13667  .rodata.str1.1:0000000000000182 .LC57
     /tmp/ccIyIA9Z.s:13628  .rodata.str1.1:00000000000000c2 .LC42
     /tmp/ccIyIA9Z.s:13632  .rodata.str1.1:00000000000000dc .LC44
     /tmp/ccIyIA9Z.s:13638  .rodata.str1.8:0000000000000488 .LC46
     /tmp/ccIyIA9Z.s:13641  .rodata.str1.1:00000000000000fd .LC47
GAS LISTING /tmp/ccIyIA9Z.s 			page 449


     /tmp/ccIyIA9Z.s:13645  .rodata.str1.1:000000000000011f .LC49
     /tmp/ccIyIA9Z.s:13652  .rodata.str1.1:0000000000000123 .LC51
     /tmp/ccIyIA9Z.s:13654  .rodata.str1.1:000000000000013c .LC52
     /tmp/ccIyIA9Z.s:13660  .rodata.str1.8:00000000000004d0 .LC54
     /tmp/ccIyIA9Z.s:13671  .rodata.str1.1:00000000000001ab .LC59
     /tmp/ccIyIA9Z.s:13673  .rodata.str1.1:00000000000001b2 .LC60
     /tmp/ccIyIA9Z.s:13675  .rodata.str1.1:00000000000001b8 .LC61
     /tmp/ccIyIA9Z.s:13717  .rodata.str1.8:0000000000000670 .LC76
     /tmp/ccIyIA9Z.s:13720  .rodata.str1.8:00000000000006d8 .LC77
     /tmp/ccIyIA9Z.s:13665  .rodata.str1.1:0000000000000174 .LC56
     /tmp/ccIyIA9Z.s:13663  .rodata.str1.1:0000000000000163 .LC55
     /tmp/ccIyIA9Z.s:13610  .rodata.str1.8:0000000000000440 .LC35
     /tmp/ccIyIA9Z.s:13726  .rodata.str1.1:000000000000023e .LC79
     /tmp/ccIyIA9Z.s:13723  .rodata.str1.8:0000000000000720 .LC78
     /tmp/ccIyIA9Z.s:16881  .rodata:0000000000000060 CSWTCH.148
     /tmp/ccIyIA9Z.s:16874  .rodata:0000000000000040 CSWTCH.149
     /tmp/ccIyIA9Z.s:16867  .rodata:0000000000000020 CSWTCH.150
     /tmp/ccIyIA9Z.s:16857  .rodata:0000000000000000 CSWTCH.151
     /tmp/ccIyIA9Z.s:16888  .rodata:0000000000000080 CSWTCH.147
     /tmp/ccIyIA9Z.s:13677  .rodata.str1.1:00000000000001c8 .LC62
     /tmp/ccIyIA9Z.s:13686  .rodata.str1.1:00000000000001d7 .LC65
     /tmp/ccIyIA9Z.s:13683  .rodata.str1.8:0000000000000510 .LC64
     /tmp/ccIyIA9Z.s:13695  .rodata.str1.1:00000000000001fa .LC68
     /tmp/ccIyIA9Z.s:13699  .rodata.str1.8:00000000000005b8 .LC69
     /tmp/ccIyIA9Z.s:13702  .rodata.str1.1:0000000000000218 .LC70
     /tmp/ccIyIA9Z.s:16959  .rodata.cst8:0000000000000020 .LC73
     /tmp/ccIyIA9Z.s:13690  .rodata.str1.8:0000000000000598 .LC66
     /tmp/ccIyIA9Z.s:13679  .rodata.str1.1:00000000000001d2 .LC63
     /tmp/ccIyIA9Z.s:13704  .rodata.str1.1:0000000000000225 .LC71
     /tmp/ccIyIA9Z.s:13710  .rodata.str1.8:0000000000000620 .LC74
     /tmp/ccIyIA9Z.s:13706  .rodata.str1.1:000000000000022c .LC72
     /tmp/ccIyIA9Z.s:16951  .rodata.cst8:0000000000000010 .LC29
     /tmp/ccIyIA9Z.s:13713  .rodata.str1.1:0000000000000230 .LC75
     /tmp/ccIyIA9Z.s:13604  .rodata.str1.1:000000000000004c .LC33
     /tmp/ccIyIA9Z.s:13623  .rodata.str1.8:0000000000000468 .LC40
     /tmp/ccIyIA9Z.s:13693  .rodata.str1.1:00000000000001dc .LC67
     /tmp/ccIyIA9Z.s:13619  .rodata.str1.1:0000000000000093 .LC39
     /tmp/ccIyIA9Z.s:13649  .rodata.str1.8:00000000000004a8 .LC50
     /tmp/ccIyIA9Z.s:13656  .rodata.str1.1:0000000000000146 .LC53
     /tmp/ccIyIA9Z.s:13643  .rodata.str1.1:0000000000000104 .LC48
     /tmp/ccIyIA9Z.s:13634  .rodata.str1.1:00000000000000e0 .LC45
     /tmp/ccIyIA9Z.s:13630  .rodata.str1.1:00000000000000c9 .LC43

UNDEFINED SYMBOLS
memcpy
_GLOBAL_OFFSET_TABLE_
__printf_chk
putchar
aligned_alloc
__stack_chk_fail
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
GAS LISTING /tmp/ccIyIA9Z.s 			page 450


__isoc99_sscanf
stdout
fflush
malloc
qsort
