GAS LISTING /tmp/cct11Qa0.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -funroll-all-loops
  21              	# -fno-asynchronous-unwind-tables -fno-exceptions -fverbose-asm
  22              	# -fstack-protector-strong -Wformat -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/cct11Qa0.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB5332:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** #include <immintrin.h>
   8:sieve_extend.c **** 
   9:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
  10:sieve_extend.c **** #define option_runonce 0
  11:sieve_extend.c **** #define debug if (option_runonce)
  12:sieve_extend.c **** 
  13:sieve_extend.c **** #define default_sieve_limit 1000000
  14:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  15:sieve_extend.c **** #define default_sieve_duration 5
  16:sieve_extend.c **** #define default_sample_duration 0.1
  17:sieve_extend.c **** #define default_sample_max 5
  18:sieve_extend.c **** #define default_verbose_level 2
  19:sieve_extend.c **** #define default_tune_level 1
  20:sieve_extend.c **** #define default_check_level 1
  21:sieve_extend.c **** #define default_show_primes_on_error 100
  22:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  23:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  24:sieve_extend.c **** 
  25:sieve_extend.c **** // 64 bit
  26:sieve_extend.c **** #define TYPE uint64_t
GAS LISTING /tmp/cct11Qa0.s 			page 3


  27:sieve_extend.c **** 
  28:sieve_extend.c **** // calculate the rest dynamically
  29:sieve_extend.c **** #define counter_t TYPE
  30:sieve_extend.c **** #define bitshift_t TYPE
  31:sieve_extend.c **** #define bitword_t uint64_t
  32:sieve_extend.c **** 
  33:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  34:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)(sizeof(bitword_t)*8))
  35:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)(sizeof(bitword_t)*8))
  36:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  37:sieve_extend.c **** #define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+pow
  38:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT))
  39:sieve_extend.c **** 
  40:sieve_extend.c **** #define SHIFT_VECTOR (SHIFT+2)
  41:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  42:sieve_extend.c **** #define VECTOR_SIZE_counter (sizeof(bitword_t)*VECTOR_ELEMENTS)
  43:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_counter)));
  44:sieve_extend.c **** 
  45:sieve_extend.c **** // globals for tuning
  46:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 64;
  47:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = WORD_SIZE;
  48:sieve_extend.c **** 
  49:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  50:sieve_extend.c **** #define SAFE_ZERO  (bitshift_t)0U
  51:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  52:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)2)
  53:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)64)
  54:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  55:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  56:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT)
  57:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  58:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  59:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  60:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  61:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  62:sieve_extend.c **** //#define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)
  63:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  64:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  65:sieve_extend.c **** #define  markmask_calc(index) (SAFE_SHIFTBIT << bitindex_calc(index))
  66:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  67:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  68:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  69:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  70:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  71:sieve_extend.c **** #define real(bit) (bit*2+1)
  72:sieve_extend.c **** 
  73:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  74:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  75:sieve_extend.c **** 
  76:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  77:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  78:sieve_extend.c **** 
  79:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  80:sieve_extend.c **** 
  81:sieve_extend.c **** struct sieve_state {
  82:sieve_extend.c ****     bitword_t* bitarray;
  83:sieve_extend.c ****     counter_t  bits;
GAS LISTING /tmp/cct11Qa0.s 			page 4


  84:sieve_extend.c ****     counter_t  size;
  85:sieve_extend.c **** };
  86:sieve_extend.c **** 
  87:sieve_extend.c **** #include "debugtools.h"
  88:sieve_extend.c **** 
  89:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
  90:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
  91:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t size) {
  92:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  93:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
  94:sieve_extend.c **** 
  95:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
  96:sieve_extend.c ****     sieve->bits     = size >> 1;
  97:sieve_extend.c ****     sieve->size     = size;
  98:sieve_extend.c **** 
  99:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
 100:sieve_extend.c ****     // it gave weird malloc problems at this point
 101:sieve_extend.c ****     return sieve;
 102:sieve_extend.c **** }
 103:sieve_extend.c **** 
 104:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
 105:sieve_extend.c ****     free(sieve->bitarray);
 106:sieve_extend.c ****     free(sieve);
 107:sieve_extend.c **** }
 108:sieve_extend.c **** 
 109:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 110:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 111:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 112:sieve_extend.c ****     return index;
 113:sieve_extend.c **** }
 114:sieve_extend.c **** 
 115:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 116:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 117:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 118:sieve_extend.c **** 
 119:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 120:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 121:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 122:sieve_extend.c ****    index += distance;
 123:sieve_extend.c ****    distance += index_bit;
 124:sieve_extend.c **** 
 125:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 126:sieve_extend.c ****        index_word++;
 127:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 128:sieve_extend.c ****        index += distance;
 129:sieve_extend.c ****    }
 130:sieve_extend.c **** 
 131:sieve_extend.c ****    return index;
 132:sieve_extend.c **** }
 133:sieve_extend.c **** 
 134:sieve_extend.c **** 
 135:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 136:sieve_extend.c **** //#if __APPLE__
 137:sieve_extend.c **** //   register const counter_t step_2 = step * 2;
 138:sieve_extend.c **** //   register const counter_t step_3 = step * 3;
 139:sieve_extend.c **** //   register const counter_t step_4 = step * 4;
 140:sieve_extend.c **** //   register const counter_t range_stop_word = wordindex(range_stop);
GAS LISTING /tmp/cct11Qa0.s 			page 5


 141:sieve_extend.c **** //   const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (co
 142:sieve_extend.c **** //
 143:sieve_extend.c **** //   #pragma ivdep
 144:sieve_extend.c **** //   for (;index_word < loop_stop_word;  index_word += step_4) {
 145:sieve_extend.c **** //       bitarray[index_word         ] |= mask;
 146:sieve_extend.c **** //       bitarray[index_word + step  ] |= mask;
 147:sieve_extend.c **** //       bitarray[index_word + step_2] |= mask;
 148:sieve_extend.c **** //       bitarray[index_word + step_3] |= mask;
 149:sieve_extend.c **** //   }
 150:sieve_extend.c **** //
 151:sieve_extend.c **** //   #pragma ivdep
 152:sieve_extend.c **** //   while (index_word < range_stop_word) {
 153:sieve_extend.c **** //       bitarray[index_word] |= mask;
 154:sieve_extend.c **** //       index_word += step;
 155:sieve_extend.c **** //   }
 156:sieve_extend.c **** //
 157:sieve_extend.c **** //   if (index_word == wordindex(range_stop)) {
 158:sieve_extend.c **** //       bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 159:sieve_extend.c **** //   }
 160:sieve_extend.c **** //#endif
 161:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 162:sieve_extend.c **** //#if __linux__
 163:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 164:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 165:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 166:sieve_extend.c **** 
 167:sieve_extend.c ****   #pragma unroll
 168:sieve_extend.c ****    #pragma ivdep
 169:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 170:sieve_extend.c ****        *index_ptr |= mask;
 171:sieve_extend.c ****        index_ptr+=step;
 172:sieve_extend.c ****        *index_ptr |= mask;
 173:sieve_extend.c ****        index_ptr+=step;
 174:sieve_extend.c ****        *index_ptr |= mask;
 175:sieve_extend.c ****        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;
 177:sieve_extend.c ****        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;
 179:sieve_extend.c ****        index_ptr+=step;
 180:sieve_extend.c ****    }
 181:sieve_extend.c **** 
 182:sieve_extend.c ****    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 184:sieve_extend.c ****        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 186:sieve_extend.c ****    }
 187:sieve_extend.c **** 
 188:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 189:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 191:sieve_extend.c **** 
 192:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 193:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 194:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 195:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 196:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
 197:sieve_extend.c **** 
GAS LISTING /tmp/cct11Qa0.s 			page 6


 198:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 199:sieve_extend.c **** 
 200:sieve_extend.c **** //     #pragma unroll 1
 201:sieve_extend.c **** //    #pragma ivdep
 202:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 203:sieve_extend.c **** //        *(index_ptr) |= mask;
 204:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 205:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 206:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 207:sieve_extend.c **** //        index_ptr += 4*step;
 208:sieve_extend.c **** //    }
 209:sieve_extend.c **** 
 210:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 211:sieve_extend.c **** //        *index_ptr |= mask;
 212:sieve_extend.c **** //        index_ptr+=step;
 213:sieve_extend.c **** //    }
 214:sieve_extend.c **** 
 215:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 216:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 217:sieve_extend.c **** //    }
 218:sieve_extend.c **** //#endif
 219:sieve_extend.c **** }
 220:sieve_extend.c **** 
 221:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 222:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 223:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 224:sieve_extend.c **** 
 225:sieve_extend.c ****     // build the pattern in a word
 226:sieve_extend.c **** 	register bitword_t pattern = SAFE_SHIFTBIT;
 227:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 228:sieve_extend.c ****         pattern |= (pattern << patternsize);
 229:sieve_extend.c **** 
 230:sieve_extend.c ****     // initialize loop variables and stop if this is it
 231:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 232:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 233:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 234:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 235:sieve_extend.c ****        return;
 236:sieve_extend.c ****     }
 237:sieve_extend.c ****     
 238:sieve_extend.c ****     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 239:sieve_extend.c **** 
 240:sieve_extend.c ****     // from now on, we are before range_stop_word
 241:sieve_extend.c ****     // first word is special, because it should not set bits before the range_start_bit
 242:sieve_extend.c ****     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset  
 243:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 244:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 245:sieve_extend.c **** 
 246:sieve_extend.c ****     counter_t loop_range = range_stop_word - copy_word;
 247:sieve_extend.c ****     #pragma unroll
 248:sieve_extend.c ****     #pragma ivdep
 249:sieve_extend.c ****     for (counter_t i=0; i < loop_range; i++) {
 250:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 251:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 252:sieve_extend.c ****     } 
 253:sieve_extend.c ****     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pattern_shift_flipped)) 
 254:sieve_extend.c **** }
GAS LISTING /tmp/cct11Qa0.s 			page 7


 255:sieve_extend.c **** 
 256:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 257:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 258:sieve_extend.c **** // This is especially true for small steps over long ranges
 259:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 260:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 261:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 262:sieve_extend.c **** 
 263:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 264:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 265:sieve_extend.c **** 
 266:sieve_extend.c ****         #pragma ivdep
 267:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 268:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 269:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 270:sieve_extend.c ****             #pragma ivdep
 271:sieve_extend.c ****             do {
 272:sieve_extend.c ****                 mask |= markmask(index);
 273:sieve_extend.c ****                 index += step;
 274:sieve_extend.c ****             } while (index_word == wordindex(index));
 275:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 276:sieve_extend.c ****             //     mask |= markmask(index);
 277:sieve_extend.c ****             bitarray[index_word] |= mask;
 278:sieve_extend.c ****         }
 279:sieve_extend.c ****     }
 280:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 281:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 282:sieve_extend.c ****         
 283:sieve_extend.c ****         #pragma ivdep
 284:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 285:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 286:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 287:sieve_extend.c ****             #pragma ivdep
 288:sieve_extend.c ****             do {
 289:sieve_extend.c ****                 mask |= markmask(index);
 290:sieve_extend.c ****                 index += step;
 291:sieve_extend.c ****             } while (index_word == wordindex(index));
 292:sieve_extend.c ****             // #pragma ivdep
 293:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 294:sieve_extend.c ****             //     mask |= markmask(index);
 295:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 296:sieve_extend.c ****         }
 297:sieve_extend.c ****     }
 298:sieve_extend.c **** }
 299:sieve_extend.c **** 
 300:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 301:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 302:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallrange (%ju occurances
 303:sieve_extend.c ****     
 304:sieve_extend.c ****     #pragma unroll
 305:sieve_extend.c ****     #pragma ivdep
 306:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 307:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 308:sieve_extend.c ****     }
 309:sieve_extend.c **** 
 310:sieve_extend.c **** //    counter_t loop_iterations = (range_stop - range_start) / step;
 311:sieve_extend.c **** //    #pragma unroll
GAS LISTING /tmp/cct11Qa0.s 			page 8


 312:sieve_extend.c **** //     #pragma ivdep
 313:sieve_extend.c **** //     for (register counter_t i = 0; i <= loop_iterations; i++) {
 314:sieve_extend.c **** //         bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 315:sieve_extend.c **** //     }
 316:sieve_extend.c **** }
 317:sieve_extend.c **** 
 318:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 319:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 320:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 321:sieve_extend.c **** 
 322:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 323:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 324:sieve_extend.c ****     
 325:sieve_extend.c ****     while (1) {
 326:sieve_extend.c ****         if (index1_word == index2_word) {
 327:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 328:sieve_extend.c ****             counter_t index_word = index1_word;
 329:sieve_extend.c ****             do {
 330:sieve_extend.c ****                 mask |= markmask(index1);
 331:sieve_extend.c ****                 index1 += step1;
 332:sieve_extend.c ****                 index1_word = wordindex(index1);
 333:sieve_extend.c ****             } while (index1_word == index_word);
 334:sieve_extend.c ****             do {
 335:sieve_extend.c ****                 mask |= markmask(index2);
 336:sieve_extend.c ****                 index2 += step2;
 337:sieve_extend.c ****                 index2_word = wordindex(index2);
 338:sieve_extend.c ****             } while (index2_word == index_word);
 339:sieve_extend.c ****             bitarray[index_word] |= mask;
 340:sieve_extend.c ****         }
 341:sieve_extend.c **** 
 342:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 343:sieve_extend.c ****         if (index2 > range_stop) {
 344:sieve_extend.c ****             while (index1 <= range_stop) {
 345:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 346:sieve_extend.c ****                 index1 += step1;
 347:sieve_extend.c ****             }
 348:sieve_extend.c ****             return;
 349:sieve_extend.c ****         }
 350:sieve_extend.c **** 
 351:sieve_extend.c ****         if (index1 > range_stop) {
 352:sieve_extend.c ****             while (index2 <= range_stop) {
 353:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 354:sieve_extend.c ****                 index2 += step2;
 355:sieve_extend.c ****             }
 356:sieve_extend.c ****             return;
 357:sieve_extend.c ****         }
 358:sieve_extend.c **** 
 359:sieve_extend.c ****         while (index1_word < index2_word) {
 360:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 361:sieve_extend.c ****             index1 += step1;
 362:sieve_extend.c ****             index1_word = wordindex(index1);
 363:sieve_extend.c ****         }
 364:sieve_extend.c ****         
 365:sieve_extend.c ****         while (index2_word < index1_word){
 366:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 367:sieve_extend.c ****             index2 += step2;
 368:sieve_extend.c ****             index2_word = wordindex(index2);
GAS LISTING /tmp/cct11Qa0.s 			page 9


 369:sieve_extend.c ****         }
 370:sieve_extend.c **** 
 371:sieve_extend.c ****     }
 372:sieve_extend.c **** }
 373:sieve_extend.c **** 
 374:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 375:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 376:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 377:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 378:sieve_extend.c **** 
 379:sieve_extend.c **** //    #pragma unroll
 380:sieve_extend.c ****     #pragma ivdep
 381:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 382:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 383:sieve_extend.c ****     }
 384:sieve_extend.c **** }
 385:sieve_extend.c **** 
 386:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, const counter_t rang
 387:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 388:sieve_extend.c **** 
 389:sieve_extend.c ****     // const counter_t range_stop_unique_oneword =  min(range_start + WORD_SIZE_counter * step, ran
 390:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique_oneword; index += step) {
 391:sieve_extend.c ****     //     applyMask(bitarray_word, step, range_stop, markmask(index), wordindex(index));
 392:sieve_extend.c ****     // }
 393:sieve_extend.c ****     // return;
 394:sieve_extend.c **** 
 395:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 396:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter * 4 * step, range_stop
 397:sieve_extend.c **** 
 398:sieve_extend.c ****     #pragma ivdep
 399:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 400:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 401:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 402:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 403:sieve_extend.c ****         
 404:sieve_extend.c ****         do {
 405:sieve_extend.c ****             quadmask[word] |= markmask(index);
 406:sieve_extend.c ****             index += step;
 407:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 408:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 409:sieve_extend.c ****         
 410:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word>>2;
 411:sieve_extend.c ****         
 412:sieve_extend.c ****         #pragma ivdep
 413:sieve_extend.c ****         for(; current_vector <= vectorindex(range_stop); current_vector += step) {
 414:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 415:sieve_extend.c ****         }
 416:sieve_extend.c ****         
 417:sieve_extend.c ****         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 418:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 419:sieve_extend.c ****         if (index_word <= range_stop_word) {
 420:sieve_extend.c ****             #pragma ivdep
 421:sieve_extend.c ****             for (word =0; word < VECTOR_ELEMENTS; word++) {
 422:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 423:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 424:sieve_extend.c ****             }
 425:sieve_extend.c ****         }
GAS LISTING /tmp/cct11Qa0.s 			page 10


 426:sieve_extend.c ****     }
 427:sieve_extend.c **** }
 428:sieve_extend.c **** 
 429:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 429 153 view -0
  91              		.cfi_startproc
 430:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 430 5 view .LVU1
 431:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 432:sieve_extend.c **** 
 433:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 433 5 view .LVU2
 434:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 434 5 view .LVU3
  95              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 429 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D2   		mov	r10, rdx	# size, tmp575
 101              	# sieve_extend.c:433:     const counter_t source_word = wordindex(source_start);
 433:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 102              		.loc 1 433 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 429 153 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 109              		.loc 1 434 134 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 429 153 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:433:     const counter_t source_word = wordindex(source_start);
 433:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 116              		.loc 1 433 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 120              		.loc 1 434 134 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 429 153 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 126              		.loc 1 434 133 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 129              		.loc 1 434 167 view .LVU13
 130 001d 4589D1   		mov	r9d, r10d	# tmp342, size
GAS LISTING /tmp/cct11Qa0.s 			page 11


 131              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 429 153 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 135              		.loc 1 434 133 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              		.cfi_offset 15, -24
 138              		.cfi_offset 14, -32
 139              		.cfi_offset 13, -40
 140              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 429 153 view .LVU16
 142 0025 4989CD   		mov	r13, rcx	# destination_stop, tmp576
 143 0028 4154     		push	r12	#
 144              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 145              		.loc 1 434 167 view .LVU17
 146 002a 49C7C3FF 		mov	r11, -1	# tmp345,
 146      FFFFFF
 147 0031 41F7D1   		not	r9d	# tmp342
 148              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 149              		.loc 1 429 153 view .LVU18
 150 0034 53       		push	rbx	#
 151              		.cfi_offset 12, -48
 152              		.cfi_offset 3, -56
 153              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 154              		.loc 1 434 167 view .LVU19
 155 0035 C442B3F7 		shrx	r12, r11, r9	# tmp344, tmp345, tmp342
 155      E3
 156              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 157              		.loc 1 429 153 view .LVU20
 158              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 159              		.loc 1 434 58 view .LVU21
 160 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 161              	.LVL3:
 162              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 163              		.loc 1 434 112 view .LVU22
 164 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 164      44C708
 165              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 166              		.loc 1 434 58 view .LVU23
 167 0045 C4E2CBF7 		shrx	rbx, rcx, rsi	# tmp339, *_5, source_start
 167      D9
 168              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 169              		.loc 1 434 85 view .LVU24
 170 004a 4909D8   		or	r8, rbx	# tmp341, tmp339
 171              	# sieve_extend.c:429: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 429:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 172              		.loc 1 429 153 view .LVU25
 173 004d 4883E4E0 		and	rsp, -32	#,
 174              	# sieve_extend.c:434:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 175              		.loc 1 434 24 view .LVU26
 176 0051 4D21E0   		and	r8, r12	# pattern, tmp344
 177              	.LVL4:
 435:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
GAS LISTING /tmp/cct11Qa0.s 			page 12


 178              		.loc 1 435 5 is_stmt 1 view .LVU27
 179              	.LBB264:
 180              		.loc 1 435 10 view .LVU28
 181              		.loc 1 435 54 view .LVU29
 182              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 183              		.loc 1 435 5 is_stmt 0 view .LVU30
 184 0054 4983FA40 		cmp	r10, 64	# size,
 185 0058 0F87C200 		ja	.L2	#,
 185      0000
 186 005e 4D89D6   		mov	r14, r10	# pattern_size, size
 187              	.LVL5:
 188              	.L3:
 189              		.loc 1 435 120 is_stmt 1 discriminator 3 view .LVU31
 190              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 191              		.loc 1 435 103 is_stmt 0 discriminator 3 view .LVU32
 192 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 193              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 194              		.loc 1 435 140 discriminator 3 view .LVU33
 195 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 195      F8
 196              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 197              		.loc 1 435 128 discriminator 3 view .LVU34
 198 006a 4D09F8   		or	r8, r15	# pattern, _23
 199              	.LVL6:
 200              		.loc 1 435 90 is_stmt 1 discriminator 3 view .LVU35
 201              		.loc 1 435 54 discriminator 3 view .LVU36
 202              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 203              		.loc 1 435 5 is_stmt 0 discriminator 3 view .LVU37
 204 006d 4883F840 		cmp	rax, 64	# pattern_size,
 205 0071 0F87A900 		ja	.L2	#,
 205      0000
 206              		.loc 1 435 120 is_stmt 1 view .LVU38
 207              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 208              		.loc 1 435 103 is_stmt 0 view .LVU39
 209 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 209      00000000 
 210              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 211              		.loc 1 435 140 view .LVU40
 212 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 212      D0
 213              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 214              		.loc 1 435 128 view .LVU41
 215 0084 4909D0   		or	r8, rdx	# pattern, _23
 216              	.LVL7:
 217              		.loc 1 435 90 is_stmt 1 view .LVU42
 218              		.loc 1 435 54 view .LVU43
 219              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 220              		.loc 1 435 5 is_stmt 0 view .LVU44
 221 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 222 008b 0F878F00 		ja	.L2	#,
 222      0000
 223              		.loc 1 435 120 is_stmt 1 view .LVU45
 224              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 225              		.loc 1 435 103 is_stmt 0 view .LVU46
 226 0091 4E8D0CF5 		lea	r9, 0[0+r14*8]	# pattern_size,
 226      00000000 
 227              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/cct11Qa0.s 			page 13


 228              		.loc 1 435 140 view .LVU47
 229 0099 C4C2F1F7 		shlx	rbx, r8, rcx	# _23, pattern, pattern_size
 229      D8
 230              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 231              		.loc 1 435 128 view .LVU48
 232 009e 4909D8   		or	r8, rbx	# pattern, _23
 233              	.LVL8:
 234              		.loc 1 435 90 is_stmt 1 view .LVU49
 235              		.loc 1 435 54 view .LVU50
 236              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 237              		.loc 1 435 5 is_stmt 0 view .LVU51
 238 00a1 4983F940 		cmp	r9, 64	# pattern_size,
 239 00a5 7779     		ja	.L2	#,
 240              		.loc 1 435 120 is_stmt 1 view .LVU52
 241              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 242              		.loc 1 435 103 is_stmt 0 view .LVU53
 243 00a7 4D89F4   		mov	r12, r14	# pattern_size, pattern_size
 244              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 245              		.loc 1 435 140 view .LVU54
 246 00aa C442B1F7 		shlx	r11, r8, r9	# _23, pattern, pattern_size
 246      D8
 247              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 248              		.loc 1 435 103 view .LVU55
 249 00af 49C1E404 		sal	r12, 4	# pattern_size,
 250              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 251              		.loc 1 435 128 view .LVU56
 252 00b3 4D09D8   		or	r8, r11	# pattern, _23
 253              	.LVL9:
 254              		.loc 1 435 90 is_stmt 1 view .LVU57
 255              		.loc 1 435 54 view .LVU58
 256              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 257              		.loc 1 435 5 is_stmt 0 view .LVU59
 258 00b6 4983FC40 		cmp	r12, 64	# pattern_size,
 259 00ba 7764     		ja	.L2	#,
 260              		.loc 1 435 120 is_stmt 1 view .LVU60
 261              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 262              		.loc 1 435 103 is_stmt 0 view .LVU61
 263 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 264              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 265              		.loc 1 435 140 view .LVU62
 266 00bf C44299F7 		shlx	r15, r8, r12	# _23, pattern, pattern_size
 266      F8
 267              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 268              		.loc 1 435 103 view .LVU63
 269 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 270              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 271              		.loc 1 435 128 view .LVU64
 272 00c8 4D09F8   		or	r8, r15	# pattern, _23
 273              	.LVL10:
 274              		.loc 1 435 90 is_stmt 1 view .LVU65
 275              		.loc 1 435 54 view .LVU66
 276              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 277              		.loc 1 435 5 is_stmt 0 view .LVU67
 278 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 279 00cf 774F     		ja	.L2	#,
 280              		.loc 1 435 120 is_stmt 1 view .LVU68
 281              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/cct11Qa0.s 			page 14


 282              		.loc 1 435 103 is_stmt 0 view .LVU69
 283 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 284              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 285              		.loc 1 435 140 view .LVU70
 286 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 286      D0
 287              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 288              		.loc 1 435 103 view .LVU71
 289 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 290              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 291              		.loc 1 435 128 view .LVU72
 292 00dd 4909D0   		or	r8, rdx	# pattern, _23
 293              	.LVL11:
 294              		.loc 1 435 90 is_stmt 1 view .LVU73
 295              		.loc 1 435 54 view .LVU74
 296              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 297              		.loc 1 435 5 is_stmt 0 view .LVU75
 298 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 299 00e4 773A     		ja	.L2	#,
 300              		.loc 1 435 120 is_stmt 1 view .LVU76
 301              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 302              		.loc 1 435 103 is_stmt 0 view .LVU77
 303 00e6 4D89F1   		mov	r9, r14	# pattern_size, pattern_size
 304              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 305              		.loc 1 435 140 view .LVU78
 306 00e9 C4C2F1F7 		shlx	rbx, r8, rcx	# _23, pattern, pattern_size
 306      D8
 307              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 308              		.loc 1 435 103 view .LVU79
 309 00ee 49C1E107 		sal	r9, 7	# pattern_size,
 310              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 311              		.loc 1 435 128 view .LVU80
 312 00f2 4909D8   		or	r8, rbx	# pattern, _23
 313              	.LVL12:
 314              		.loc 1 435 90 is_stmt 1 view .LVU81
 315              		.loc 1 435 54 view .LVU82
 316              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 317              		.loc 1 435 5 is_stmt 0 view .LVU83
 318 00f5 4983F940 		cmp	r9, 64	# pattern_size,
 319 00f9 7725     		ja	.L2	#,
 320              		.loc 1 435 120 is_stmt 1 view .LVU84
 321              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 322              		.loc 1 435 103 is_stmt 0 view .LVU85
 323 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 324              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 325              		.loc 1 435 140 view .LVU86
 326 00ff C442B1F7 		shlx	r11, r8, r9	# _23, pattern, pattern_size
 326      D8
 327              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 328              		.loc 1 435 128 view .LVU87
 329 0104 4D09D8   		or	r8, r11	# pattern, _23
 330              	.LVL13:
 331              		.loc 1 435 90 is_stmt 1 view .LVU88
 332              		.loc 1 435 54 view .LVU89
 333              	# sieve_extend.c:435:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 334              		.loc 1 435 5 is_stmt 0 view .LVU90
 335 0107 4983FE40 		cmp	r14, 64	# pattern_size,
GAS LISTING /tmp/cct11Qa0.s 			page 15


 336 010b 0F8650FF 		jbe	.L3	#,
 336      FFFF
 337              	.LVL14:
 338 0111 66662E0F 		.p2align 4
 338      1F840000 
 338      0000000F 
 338      1F4000
 339              		.p2align 3
 340              	.L2:
 341              		.loc 1 435 5 view .LVU91
 342              	.LBE264:
 436:sieve_extend.c **** 
 437:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 343              		.loc 1 437 5 is_stmt 1 view .LVU92
 344              	# sieve_extend.c:437:     const counter_t destination_start = source_start + size;
 345              		.loc 1 437 21 is_stmt 0 view .LVU93
 346 0120 4E8D3416 		lea	r14, [rsi+r10]	# destination_start,
 347              	.LVL15:
 438:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 348              		.loc 1 438 5 is_stmt 1 view .LVU94
 349              	# sieve_extend.c:439:     counter_t destination_stop_word = wordindex(destination_stop);
 439:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 350              		.loc 1 439 15 is_stmt 0 view .LVU95
 351 0124 4C89EB   		mov	rbx, r13	# destination_stop_word, destination_stop
 352              	# sieve_extend.c:438:     counter_t destination_start_word = wordindex(destination_start);
 438:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 353              		.loc 1 438 15 view .LVU96
 354 0127 4D89F1   		mov	r9, r14	# destination_start_word, destination_start
 355 012a 41F7D5   		not	r13d	# tmp348
 356              	.LVL16:
 438:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 357              		.loc 1 438 15 view .LVU97
 358 012d 49C1E906 		shr	r9, 6	# destination_start_word,
 359              	.LVL17:
 360              		.loc 1 439 5 is_stmt 1 view .LVU98
 361 0131 48C7C2FF 		mov	rdx, -1	# tmp350,
 361      FFFFFF
 362              	# sieve_extend.c:439:     counter_t destination_stop_word = wordindex(destination_stop);
 363              		.loc 1 439 15 is_stmt 0 view .LVU99
 364 0138 48C1EB06 		shr	rbx, 6	# destination_stop_word,
 365              	.LVL18:
 440:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 366              		.loc 1 440 5 is_stmt 1 view .LVU100
 367 013c 4A8D34CD 		lea	rsi, 0[0+r9*8]	# _119,
 367      00000000 
 368              	.LVL19:
 369              		.loc 1 440 5 is_stmt 0 view .LVU101
 370 0144 4C8D3C37 		lea	r15, [rdi+rsi]	# _120,
 371              	# sieve_extend.c:440:     if (destination_start_word >= destination_stop_word) {
 372              		.loc 1 440 8 view .LVU102
 373 0148 4939D9   		cmp	r9, rbx	# destination_start_word, destination_stop_word
 374 014b C4C289F7 		shlx	rax, r8, r14	# _123, pattern, destination_start
 374      C0
 375 0150 4D8B27   		mov	r12, QWORD PTR [r15]	# pretmp_121, *_120
 376 0153 C46293F7 		shrx	r13, rdx, r13	# _127, tmp350, tmp348
 376      EA
 377 0158 0F833A05 		jnb	.L52	#,
GAS LISTING /tmp/cct11Qa0.s 			page 16


 377      0000
 441:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 442:sieve_extend.c ****         return;
 443:sieve_extend.c ****     }
 444:sieve_extend.c **** 
 445:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
 378              		.loc 1 445 5 is_stmt 1 view .LVU103
 379              	# sieve_extend.c:445:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 380              		.loc 1 445 38 is_stmt 0 view .LVU104
 381 015e 4C09E0   		or	rax, r12	# tmp353, pretmp_121
 382              	# sieve_extend.c:447:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 446:sieve_extend.c **** 
 447:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 383              		.loc 1 447 31 view .LVU105
 384 0161 B9400000 		mov	ecx, 64	# tmp354,
 384      00
 385 0166 31D2     		xor	edx, edx	# tmp355
 386              	.LBB265:
 387              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 448:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 449:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 450:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 451:sieve_extend.c ****     destination_start_word++;
 452:sieve_extend.c ****     
 453:sieve_extend.c ****     #pragma unroll
 454:sieve_extend.c ****     #pragma ivdep
 455:sieve_extend.c ****     for (counter_t i=0; i<loop_range; ++i ) {
 388              		.loc 1 455 5 view .LVU106
 389 0168 4989DB   		mov	r11, rbx	# loop_range, destination_stop_word
 390              	.LBE265:
 391              	# sieve_extend.c:445:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 445:sieve_extend.c **** 
 392              		.loc 1 445 38 view .LVU107
 393 016b 498907   		mov	QWORD PTR [r15], rax	# *_120, tmp353
 447:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 447 5 is_stmt 1 view .LVU108
 395              	# sieve_extend.c:447:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 447:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 396              		.loc 1 447 31 is_stmt 0 view .LVU109
 397 016e 4889C8   		mov	rax, rcx	# tmp356, tmp354
 398 0171 49F7F2   		div	r10	# size
 399              	.LVL20:
 448:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 400              		.loc 1 448 5 is_stmt 1 view .LVU110
 401              	# sieve_extend.c:448:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 448:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 402              		.loc 1 448 31 is_stmt 0 view .LVU111
 403 0174 4889C8   		mov	rax, rcx	# tmp354, tmp354
 404              	# sieve_extend.c:449:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 449:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 405              		.loc 1 449 89 view .LVU112
 406 0177 4C89F1   		mov	rcx, r14	# destination_start, destination_start
 407 017a 48F7D9   		neg	rcx	# destination_start
 408              	# sieve_extend.c:451:     destination_start_word++;
 451:sieve_extend.c ****     
 409              		.loc 1 451 27 view .LVU113
 410 017d 4D8D5101 		lea	r10, 1[r9]	# destination_start_word,
GAS LISTING /tmp/cct11Qa0.s 			page 17


 411              	.LVL21:
 412              	# sieve_extend.c:449:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 449:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 413              		.loc 1 449 25 view .LVU114
 414 0181 83E13F   		and	ecx, 63	# shift,
 415              	# sieve_extend.c:448:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 448:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 416              		.loc 1 448 31 view .LVU115
 417 0184 4829D0   		sub	rax, rdx	# tmp354, tmp355
 418              	.LVL22:
 449:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 449 5 is_stmt 1 view .LVU116
 450:sieve_extend.c ****     destination_start_word++;
 420              		.loc 1 450 5 view .LVU117
 451:sieve_extend.c ****     
 421              		.loc 1 451 5 view .LVU118
 422              		.loc 1 455 5 view .LVU119
 423              	.LBB266:
 424              		.loc 1 455 10 view .LVU120
 425              		.loc 1 455 25 view .LVU121
 426              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 427              		.loc 1 455 5 is_stmt 0 view .LVU122
 428 0187 4D29CB   		sub	r11, r9	# loop_range, destination_start_word
 429              	.LVL23:
 430              		.loc 1 455 5 view .LVU123
 431 018a 0F84F304 		je	.L12	#,
 431      0000
 432 0190 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.119,
 432      08
 433 0195 4D8D73FF 		lea	r14, -1[r11]	# tmp364,
 434              	.LVL24:
 435              		.loc 1 455 5 view .LVU124
 436 0199 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 437 019d 4189D4   		mov	r12d, edx	# _130, tmp355
 438 01a0 48C1EE03 		shr	rsi, 3	# tmp362,
 439 01a4 894C24F8 		mov	DWORD PTR -8[rsp], ecx	# %sfp, shift
 440 01a8 48F7DE   		neg	rsi	# tmp363
 441 01ab 83E603   		and	esi, 3	# prolog_loop_niters.120,
 442 01ae 4983FE0A 		cmp	r14, 10	# tmp364,
 443 01b2 0F860505 		jbe	.L14	#,
 443      0000
 444 01b8 4885F6   		test	rsi, rsi	# prolog_loop_niters.120
 445 01bb 0F84EF04 		je	.L15	#,
 445      0000
 456:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 446              		.loc 1 456 9 is_stmt 1 view .LVU125
 447              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 448              		.loc 1 456 72 is_stmt 0 view .LVU126
 449 01c1 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 450 01c4 4129CF   		sub	r15d, ecx	# tmp365, shift
 451              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 452              		.loc 1 456 55 view .LVU127
 453 01c7 C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 453      F0
 454              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 455              		.loc 1 456 127 view .LVU128
 456 01cc C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
GAS LISTING /tmp/cct11Qa0.s 			page 18


 456      F8
 457              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 458              		.loc 1 456 116 view .LVU129
 459 01d1 4D09FE   		or	r14, r15	# tmp368, tmp367
 460 01d4 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_318, tmp368
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 461              		.loc 1 455 39 is_stmt 1 view .LVU130
 462              	.LVL25:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 463              		.loc 1 455 25 view .LVU131
 464 01d8 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.120,
 465              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 466              		.loc 1 455 39 is_stmt 0 view .LVU132
 467 01dc 41BE0100 		mov	r14d, 1	# i,
 467      0000
 468 01e2 7452     		je	.L8	#,
 469              		.loc 1 456 9 is_stmt 1 view .LVU133
 470              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 471              		.loc 1 456 81 is_stmt 0 view .LVU134
 472 01e4 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 473              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 474              		.loc 1 456 72 view .LVU135
 475 01e8 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 476              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 477              		.loc 1 456 99 view .LVU136
 478 01eb 4183E63F 		and	r14d, 63	# _329,
 479              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 480              		.loc 1 456 72 view .LVU137
 481 01ef 4529F7   		sub	r15d, r14d	# tmp371, _329
 482              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 483              		.loc 1 456 127 view .LVU138
 484 01f2 C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _329
 484      F0
 485              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 486              		.loc 1 456 55 view .LVU139
 487 01f7 C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 487      F8
 488              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 489              		.loc 1 456 116 view .LVU140
 490 01fc 4D09FE   		or	r14, r15	# tmp374, tmp372
 491 01ff 4E8974CF 		mov	QWORD PTR 16[rdi+r9*8], r14	# *_335, tmp374
 491      10
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 492              		.loc 1 455 39 is_stmt 1 view .LVU141
 493              	.LVL26:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 494              		.loc 1 455 25 view .LVU142
 495 0204 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.120,
 496              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 497              		.loc 1 455 39 is_stmt 0 view .LVU143
 498 0208 41BE0200 		mov	r14d, 2	# i,
 498      0000
 499 020e 7526     		jne	.L8	#,
 500              		.loc 1 456 9 is_stmt 1 view .LVU144
 501              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/cct11Qa0.s 			page 19


 502              		.loc 1 456 81 is_stmt 0 view .LVU145
 503 0210 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 504              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 505              		.loc 1 456 72 view .LVU146
 506 0214 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 507              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 508              		.loc 1 456 99 view .LVU147
 509 0217 4183E63F 		and	r14d, 63	# _109,
 510              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 511              		.loc 1 456 72 view .LVU148
 512 021b 4529F7   		sub	r15d, r14d	# tmp378, _109
 513              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 514              		.loc 1 456 127 view .LVU149
 515 021e C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _109
 515      F0
 516              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 517              		.loc 1 456 55 view .LVU150
 518 0223 C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 518      F8
 519              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 520              		.loc 1 456 116 view .LVU151
 521 0228 4D09FE   		or	r14, r15	# tmp381, tmp379
 522 022b 4E8974CF 		mov	QWORD PTR 24[rdi+r9*8], r14	# *_103, tmp381
 522      18
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 523              		.loc 1 455 39 is_stmt 1 view .LVU152
 524              	.LVL27:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 525              		.loc 1 455 25 view .LVU153
 526              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 527              		.loc 1 455 39 is_stmt 0 view .LVU154
 528 0230 41BE0300 		mov	r14d, 3	# i,
 528      0000
 529              	.LVL28:
 530              	.L8:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 531              		.loc 1 455 39 view .LVU155
 532 0236 4D89D9   		mov	r9, r11	# niters.121, loop_range
 533 0239 C4C1796E 		vmovd	xmm6, r12d	# vect_cst__147, _130
 533      F4
 534 023e 4929F1   		sub	r9, rsi	# niters.121, prolog_loop_niters.120
 535 0241 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 536 0244 4D89CC   		mov	r12, r9	# bnd.122, niters.121
 537 0247 C4C1F96E 		vmovq	xmm3, r14	# i, i
 537      DE
 538 024c 49C1EC03 		shr	r12, 3	# bnd.122,
 539 0250 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.140,
 540 0254 49C1E406 		sal	r12, 6	# tmp391,
 541 0258 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 541      CB
 542 025d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 542      E0
 543 0262 4D8D3C34 		lea	r15, [r12+rsi]	# _345,
 544 0266 4183E440 		and	r12d, 64	# tmp391,
 545 026a C535D43D 		vpaddq	ymm15, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.125, tmp382,
 545      00000000 
GAS LISTING /tmp/cct11Qa0.s 			page 20


 546 0272 C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -8[rsp]	# vect_cst__149, %sfp
 546      6C24F8
 547 0279 C4627D58 		vpbroadcastd	ymm12, xmm6	# vect_cst__147, vect_cst__147
 547      E6
 548 027e C4627D58 		vpbroadcastd	ymm13, DWORD PTR -4[rsp]	# vect_cst__153, %sfp
 548      6C24FC
 549 0285 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__157, pattern
 549      D4
 550 028a C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp495,
 550      00000000 
 551 0292 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp496,
 551      00000000 
 552 029a C57D6F35 		vmovdqa	ymm14, YMMWORD PTR .LC3[rip]	# tmp497,
 552      00000000 
 553 02a2 0F849800 		je	.L10	#,
 553      0000
 554              	.LVL29:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 555              		.loc 1 455 39 view .LVU156
 556 02a8 C57D7FF9 		vmovdqa	ymm1, ymm15	# vect_vec_iv_.125, vect_vec_iv_.125
 557 02ac 4883C640 		add	rsi, 64	# ivtmp.140,
 558              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 559              		.loc 1 456 81 view .LVU157
 560 02b0 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.125, vect_vec_iv_.125, tmp496
 561 02b4 C44105D4 		vpaddq	ymm15, ymm15, ymm8	# vect_vec_iv_.125, vect_vec_iv_.125, tmp495
 561      F8
 562              		.loc 1 456 9 is_stmt 1 view .LVU158
 563              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 564              		.loc 1 456 81 is_stmt 0 view .LVU159
 565 02b9 C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp537, vect_vec_iv_.125, vect_vec_iv_.125,
 565      C220
 566 02bf C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp538, vect_vec_iv_.125, vect_vec_iv_.125,
 566      DA31
 567 02c5 C5FD70D8 		vpshufd	ymm3, ymm0, 216	# tmp539, tmp537,
 567      D8
 568 02ca C4417D70 		vpshufd	ymm9, ymm11, 216	# tmp540, tmp538,
 568      CBD8
 569 02d0 C4C1656C 		vpunpcklqdq	ymm6, ymm3, ymm9	# tmp541, tmp539, tmp540
 569      F1
 570 02d5 C4E21D40 		vpmulld	ymm4, ymm12, ymm6	# vect__45.127, vect_cst__147, tmp541
 570      E6
 571              	.LVL30:
 572              		.loc 1 456 81 view .LVU160
 573 02da C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.128, vect__45.127, vect_cst__149
 574              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 575              		.loc 1 456 99 view .LVU161
 576 02de C4C175DB 		vpand	ymm0, ymm1, ymm14	# vect__48.129, vect__47.128, tmp497
 576      C6
 577              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 578              		.loc 1 456 72 view .LVU162
 579 02e3 C595FAD8 		vpsubd	ymm3, ymm13, ymm0	# vect__49.130, vect_cst__153, vect__48.129
 580              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 581              		.loc 1 456 116 view .LVU163
 582 02e7 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.129
 582      D8
 583 02ec C4627D35 		vpmovzxdq	ymm10, xmm3	#, vect__49.130
 583      D3
GAS LISTING /tmp/cct11Qa0.s 			page 21


 584 02f1 C4C2ED45 		vpsrlvq	ymm6, ymm2, ymm11	# vect_patt_140.134, vect_cst__157, vect_patt_141.133
 584      F3
 585 02f6 C442ED47 		vpsllvq	ymm9, ymm2, ymm10	# vect_patt_142.132, vect_cst__157, vect_patt_143.131
 585      CA
 586 02fb C4E37D39 		vextracti128	xmm1, ymm3, 0x1	# tmp553, vect__49.130
 586      D901
 587 0301 C5B5EBE6 		vpor	ymm4, ymm9, ymm6	# vect__55.135, vect_patt_142.132, vect_patt_140.134
 588 0305 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp556, vect__48.129
 588      C001
 589 030b C4E27D35 		vpmovzxdq	ymm3, xmm1	# vect_patt_143.131, tmp553
 589      D9
 590 0310 C4627D35 		vpmovzxdq	ymm9, xmm0	# vect_patt_141.133, tmp556
 590      C8
 591 0315 C462ED47 		vpsllvq	ymm10, ymm2, ymm3	# vect_patt_142.132, vect_cst__157, vect_patt_143.131
 591      D3
 592 031a C442ED45 		vpsrlvq	ymm11, ymm2, ymm9	# vect_patt_140.134, vect_cst__157, vect_patt_141.133
 592      D9
 593              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 594              		.loc 1 456 44 view .LVU164
 595 031f C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _342, offset: 0B], vect__55.135
 595      C0
 596              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 597              		.loc 1 456 116 view .LVU165
 598 0324 C4C12DEB 		vpor	ymm6, ymm10, ymm11	# vect__55.135, vect_patt_142.132, vect_patt_140.134
 598      F3
 599              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 600              		.loc 1 456 44 view .LVU166
 601 0329 C5FD7F76 		vmovdqa	YMMWORD PTR -32[rsi], ymm6	# MEM[base: _342, offset: 32B], vect__55.135
 601      E0
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 602              		.loc 1 455 39 is_stmt 1 view .LVU167
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 603              		.loc 1 455 25 view .LVU168
 604 032e 4C39FE   		cmp	rsi, r15	# ivtmp.140, _345
 605 0331 0F840F01 		je	.L40	#,
 605      0000
 606 0337 660F1F84 		.p2align 4
 606      00000000 
 606      00
 607              		.p2align 3
 608              	.L10:
 609              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 610              		.loc 1 456 81 is_stmt 0 discriminator 3 view .LVU169
 611 0340 C585D4CF 		vpaddq	ymm1, ymm15, ymm7	# vect_vec_iv_.125, vect_vec_iv_.125, tmp496
 612 0344 C4C105D4 		vpaddq	ymm4, ymm15, ymm8	# vect_vec_iv_.125, vect_vec_iv_.125, tmp495
 612      E0
 613              		.loc 1 456 9 is_stmt 1 discriminator 3 view .LVU170
 614              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 615              		.loc 1 456 81 is_stmt 0 discriminator 3 view .LVU171
 616 0349 C4E30546 		vperm2i128	ymm3, ymm15, ymm1, 32	# tmp398, vect_vec_iv_.125, vect_vec_iv_.125,
 616      D920
 617 034f C4630546 		vperm2i128	ymm15, ymm15, ymm1, 49	# tmp399, vect_vec_iv_.125, vect_vec_iv_.125,
 617      F931
 618 0355 C57D70D3 		vpshufd	ymm10, ymm3, 216	# tmp396, tmp398,
 618      D8
 619 035a 4883EE80 		sub	rsi, -128	# ivtmp.140,
 620 035e C4C17D70 		vpshufd	ymm0, ymm15, 216	# tmp397, tmp399,
GAS LISTING /tmp/cct11Qa0.s 			page 22


 620      C7D8
 621 0364 C52D6CC8 		vpunpcklqdq	ymm9, ymm10, ymm0	# tmp400, tmp396, tmp397
 622 0368 C4421D40 		vpmulld	ymm11, ymm12, ymm9	# vect__45.127, vect_cst__147, tmp400
 622      D9
 623 036d C5A5FEF5 		vpaddd	ymm6, ymm11, ymm5	# vect__47.128, vect__45.127, vect_cst__149
 624              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 625              		.loc 1 456 99 discriminator 3 view .LVU172
 626 0371 C4C14DDB 		vpand	ymm3, ymm6, ymm14	# vect__48.129, vect__47.128, tmp497
 626      DE
 627              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 628              		.loc 1 456 72 discriminator 3 view .LVU173
 629 0376 C595FACB 		vpsubd	ymm1, ymm13, ymm3	# vect__49.130, vect_cst__153, vect__48.129
 630              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 631              		.loc 1 456 116 discriminator 3 view .LVU174
 632 037a C4E27D35 		vpmovzxdq	ymm0, xmm3	#, vect__48.129
 632      C3
 633 037f C4627D35 		vpmovzxdq	ymm15, xmm1	#, vect__49.130
 633      F9
 634 0384 C462ED45 		vpsrlvq	ymm9, ymm2, ymm0	# vect_patt_140.134, vect_cst__157, vect_patt_141.133
 634      C8
 635 0389 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_142.132, vect_cst__157, vect_patt_143.131
 635      D7
 636 038e C4E37D39 		vextracti128	xmm6, ymm1, 0x1	# tmp412, vect__49.130
 636      CE01
 637 0394 C4412DEB 		vpor	ymm11, ymm10, ymm9	# vect__55.135, vect_patt_142.132, vect_patt_140.134
 637      D9
 638 0399 C4E37D39 		vextracti128	xmm3, ymm3, 0x1	# tmp415, vect__48.129
 638      DB01
 639 039f C4E27D35 		vpmovzxdq	ymm1, xmm6	# vect_patt_143.131, tmp412
 639      CE
 640 03a4 C4627D35 		vpmovzxdq	ymm10, xmm3	# vect_patt_141.133, tmp415
 640      D3
 641 03a9 C462ED47 		vpsllvq	ymm15, ymm2, ymm1	# vect_patt_142.132, vect_cst__157, vect_patt_143.131
 641      F9
 642 03ae C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_140.134, vect_cst__157, vect_patt_141.133
 642      C2
 643              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 644              		.loc 1 456 44 discriminator 3 view .LVU175
 645 03b3 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _342, offset: 0B], vect__55.135
 645      80
 646              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 647              		.loc 1 456 81 discriminator 3 view .LVU176
 648 03b8 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.125, vect_vec_iv_.125, tmp496
 649              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 650              		.loc 1 456 116 discriminator 3 view .LVU177
 651 03bc C505EBC8 		vpor	ymm9, ymm15, ymm0	# vect__55.135, vect_patt_142.132, vect_patt_140.134
 652              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 653              		.loc 1 456 81 discriminator 3 view .LVU178
 654 03c0 C4C35D46 		vperm2i128	ymm6, ymm4, ymm11, 32	# tmp512, vect_vec_iv_.125, vect_vec_iv_.125,
 654      F320
 655 03c6 C5FD70CE 		vpshufd	ymm1, ymm6, 216	# tmp514, tmp512,
 655      D8
 656 03cb C4415DD4 		vpaddq	ymm15, ymm4, ymm8	# vect_vec_iv_.125, vect_vec_iv_.125, tmp495
 656      F8
 657              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 658              		.loc 1 456 44 discriminator 3 view .LVU179
 659 03d0 C57D7F4E 		vmovdqa	YMMWORD PTR -96[rsi], ymm9	# MEM[base: _342, offset: 32B], vect__55.135
GAS LISTING /tmp/cct11Qa0.s 			page 23


 659      A0
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 660              		.loc 1 455 39 is_stmt 1 discriminator 3 view .LVU180
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 661              		.loc 1 455 25 discriminator 3 view .LVU181
 662              		.loc 1 456 9 discriminator 3 view .LVU182
 663              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 664              		.loc 1 456 81 is_stmt 0 discriminator 3 view .LVU183
 665 03d5 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp513, vect_vec_iv_.125, vect_vec_iv_.125,
 665      E331
 666 03db C5FD70DC 		vpshufd	ymm3, ymm4, 216	# tmp515, tmp513,
 666      D8
 667 03e0 C5756CD3 		vpunpcklqdq	ymm10, ymm1, ymm3	# tmp516, tmp514, tmp515
 668 03e4 C4C21D40 		vpmulld	ymm0, ymm12, ymm10	# vect__45.127, vect_cst__147, tmp516
 668      C2
 669 03e9 C57DFECD 		vpaddd	ymm9, ymm0, ymm5	# vect__47.128, vect__45.127, vect_cst__149
 670              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 671              		.loc 1 456 99 discriminator 3 view .LVU184
 672 03ed C4C135DB 		vpand	ymm6, ymm9, ymm14	# vect__48.129, vect__47.128, tmp497
 672      F6
 673              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 674              		.loc 1 456 72 discriminator 3 view .LVU185
 675 03f2 C595FAE6 		vpsubd	ymm4, ymm13, ymm6	# vect__49.130, vect_cst__153, vect__48.129
 676              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 677              		.loc 1 456 116 discriminator 3 view .LVU186
 678 03f6 C4E27D35 		vpmovzxdq	ymm3, xmm6	#, vect__48.129
 678      DE
 679 03fb C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.130
 679      DC
 680 0400 C462ED45 		vpsrlvq	ymm10, ymm2, ymm3	# vect_patt_140.134, vect_cst__157, vect_patt_141.133
 680      D3
 681 0405 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_142.132, vect_cst__157, vect_patt_143.131
 681      CB
 682 040a C4C37D39 		vextracti128	xmm9, ymm4, 0x1	# tmp528, vect__49.130
 682      E101
 683 0410 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.135, vect_patt_142.132, vect_patt_140.134
 683      C2
 684 0415 C4E37D39 		vextracti128	xmm6, ymm6, 0x1	# tmp531, vect__48.129
 684      F601
 685 041b C4C27D35 		vpmovzxdq	ymm4, xmm9	# vect_patt_143.131, tmp528
 685      E1
 686 0420 C4E27D35 		vpmovzxdq	ymm1, xmm6	# vect_patt_141.133, tmp531
 686      CE
 687 0425 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_142.132, vect_cst__157, vect_patt_143.131
 687      DC
 688 042a C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm1	# vect_patt_140.134, vect_cst__157, vect_patt_141.133
 688      D9
 689              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 690              		.loc 1 456 44 discriminator 3 view .LVU187
 691 042f C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _342, offset: 0B], vect__55.135
 691      C0
 692              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 693              		.loc 1 456 116 discriminator 3 view .LVU188
 694 0434 C525EBD3 		vpor	ymm10, ymm11, ymm3	# vect__55.135, vect_patt_142.132, vect_patt_140.134
 695              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 696              		.loc 1 456 44 discriminator 3 view .LVU189
 697 0438 C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _342, offset: 32B], vect__55.135
GAS LISTING /tmp/cct11Qa0.s 			page 24


 697      E0
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 698              		.loc 1 455 39 is_stmt 1 discriminator 3 view .LVU190
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 699              		.loc 1 455 25 discriminator 3 view .LVU191
 700 043d 4C39FE   		cmp	rsi, r15	# ivtmp.140, _345
 701 0440 0F85FAFE 		jne	.L10	#,
 701      FFFF
 702              	.L40:
 703 0446 4C89CE   		mov	rsi, r9	# niters_vector_mult_vf.123, niters.121
 704 0449 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.123,
 705 044d 4901F6   		add	r14, rsi	# tmp.124, niters_vector_mult_vf.123
 706 0450 4C39CE   		cmp	rsi, r9	# niters_vector_mult_vf.123, niters.121
 707 0453 0F845F02 		je	.L53	#,
 707      0000
 708 0459 C5F877   		vzeroupper
 709              	.L7:
 710              	.LVL31:
 711              		.loc 1 456 9 view .LVU192
 712              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 713              		.loc 1 456 81 is_stmt 0 view .LVU193
 714 045c 4189D7   		mov	r15d, edx	# tmp418, tmp355
 715              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 716              		.loc 1 456 72 view .LVU194
 717 045f 4189C4   		mov	r12d, eax	# tmp421, pattern_size
 718              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 719              		.loc 1 456 81 view .LVU195
 720 0462 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.124
 721              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 722              		.loc 1 456 17 view .LVU196
 723 0466 4F8D0C16 		lea	r9, [r14+r10]	# tmp420,
 724              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 725              		.loc 1 456 81 view .LVU197
 726 046a 4101CF   		add	r15d, ecx	# tmp419, shift
 727              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 728              		.loc 1 456 99 view .LVU198
 729 046d 4183E73F 		and	r15d, 63	# _49,
 730              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 731              		.loc 1 456 127 view .LVU199
 732 0471 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 732      F0
 733              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 734              		.loc 1 456 72 view .LVU200
 735 0476 4529FC   		sub	r12d, r15d	# tmp421, _49
 736              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 737              		.loc 1 455 39 view .LVU201
 738 0479 4D8D7E01 		lea	r15, 1[r14]	# i,
 739              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 740              		.loc 1 456 55 view .LVU202
 741 047d C44299F7 		shlx	r12, r8, r12	# tmp422, pattern, tmp421
 741      E0
 742              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 743              		.loc 1 456 116 view .LVU203
 744 0482 4C09E6   		or	rsi, r12	# tmp424, tmp422
 745 0485 4A8934CF 		mov	QWORD PTR [rdi+r9*8], rsi	# *_55, tmp424
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/cct11Qa0.s 			page 25


 746              		.loc 1 455 39 is_stmt 1 view .LVU204
 747              	.LVL32:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 748              		.loc 1 455 25 view .LVU205
 749              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 750              		.loc 1 455 5 is_stmt 0 view .LVU206
 751 0489 4D39DF   		cmp	r15, r11	# i, loop_range
 752 048c 0F83F101 		jnb	.L12	#,
 752      0000
 753              		.loc 1 456 9 is_stmt 1 view .LVU207
 754              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 755              		.loc 1 456 81 is_stmt 0 view .LVU208
 756 0492 4189D1   		mov	r9d, edx	# tmp425, tmp355
 757              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 758              		.loc 1 456 72 view .LVU209
 759 0495 4189C4   		mov	r12d, eax	# tmp428, pattern_size
 760              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 761              		.loc 1 456 81 view .LVU210
 762 0498 450FAFCF 		imul	r9d, r15d	# tmp425, i
 763              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 764              		.loc 1 456 17 view .LVU211
 765 049c 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 766              	.LVL33:
 767              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 768              		.loc 1 456 81 view .LVU212
 769 049f 4101C9   		add	r9d, ecx	# tmp426, shift
 770              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 771              		.loc 1 456 99 view .LVU213
 772 04a2 4183E13F 		and	r9d, 63	# _83,
 773              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 774              		.loc 1 456 72 view .LVU214
 775 04a6 4529CC   		sub	r12d, r9d	# tmp428, _83
 776              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 777              		.loc 1 456 127 view .LVU215
 778 04a9 C442B3F7 		shrx	r9, r8, r9	# tmp430, pattern, _83
 778      C8
 779              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 780              		.loc 1 456 55 view .LVU216
 781 04ae C4C299F7 		shlx	rsi, r8, r12	# tmp429, pattern, tmp428
 781      F0
 782              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 783              		.loc 1 456 116 view .LVU217
 784 04b3 4C09CE   		or	rsi, r9	# tmp431, tmp430
 785 04b6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_182, tmp431
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 786              		.loc 1 455 39 is_stmt 1 view .LVU218
 787 04ba 4D8D7E02 		lea	r15, 2[r14]	# i,
 788              	.LVL34:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 789              		.loc 1 455 25 view .LVU219
 790              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 791              		.loc 1 455 5 is_stmt 0 view .LVU220
 792 04be 4D39FB   		cmp	r11, r15	# loop_range, i
 793 04c1 0F86BC01 		jbe	.L12	#,
 793      0000
GAS LISTING /tmp/cct11Qa0.s 			page 26


 794              		.loc 1 456 9 is_stmt 1 view .LVU221
 795              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 796              		.loc 1 456 81 is_stmt 0 view .LVU222
 797 04c7 89D6     		mov	esi, edx	# tmp432, tmp355
 798              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 799              		.loc 1 456 72 view .LVU223
 800 04c9 4189C4   		mov	r12d, eax	# tmp435, pattern_size
 801              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 802              		.loc 1 456 81 view .LVU224
 803 04cc 410FAFF7 		imul	esi, r15d	# tmp432, i
 804              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 805              		.loc 1 456 17 view .LVU225
 806 04d0 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 807              	.LVL35:
 808              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 809              		.loc 1 456 81 view .LVU226
 810 04d3 01CE     		add	esi, ecx	# tmp433, shift
 811              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 812              		.loc 1 456 99 view .LVU227
 813 04d5 83E63F   		and	esi, 63	# _191,
 814              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 815              		.loc 1 456 72 view .LVU228
 816 04d8 4129F4   		sub	r12d, esi	# tmp435, _191
 817              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 818              		.loc 1 456 127 view .LVU229
 819 04db C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _191
 819      F0
 820              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 821              		.loc 1 456 55 view .LVU230
 822 04e0 C44299F7 		shlx	r9, r8, r12	# tmp436, pattern, tmp435
 822      C8
 823              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 824              		.loc 1 456 116 view .LVU231
 825 04e5 4C09CE   		or	rsi, r9	# tmp438, tmp436
 826 04e8 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_197, tmp438
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 827              		.loc 1 455 39 is_stmt 1 view .LVU232
 828 04ec 4D8D7E03 		lea	r15, 3[r14]	# i,
 829              	.LVL36:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 830              		.loc 1 455 25 view .LVU233
 831              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 832              		.loc 1 455 5 is_stmt 0 view .LVU234
 833 04f0 4D39FB   		cmp	r11, r15	# loop_range, i
 834 04f3 0F868A01 		jbe	.L12	#,
 834      0000
 835              		.loc 1 456 9 is_stmt 1 view .LVU235
 836              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 837              		.loc 1 456 81 is_stmt 0 view .LVU236
 838 04f9 4189D1   		mov	r9d, edx	# tmp439, tmp355
 839              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 840              		.loc 1 456 72 view .LVU237
 841 04fc 4189C4   		mov	r12d, eax	# tmp442, pattern_size
 842              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 843              		.loc 1 456 81 view .LVU238
 844 04ff 450FAFCF 		imul	r9d, r15d	# tmp439, i
GAS LISTING /tmp/cct11Qa0.s 			page 27


 845              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 846              		.loc 1 456 17 view .LVU239
 847 0503 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 848              	.LVL37:
 849              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 850              		.loc 1 456 81 view .LVU240
 851 0506 4101C9   		add	r9d, ecx	# tmp440, shift
 852              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 853              		.loc 1 456 99 view .LVU241
 854 0509 4183E13F 		and	r9d, 63	# _206,
 855              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 856              		.loc 1 456 127 view .LVU242
 857 050d C4C2B3F7 		shrx	rsi, r8, r9	# tmp444, pattern, _206
 857      F0
 858              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 859              		.loc 1 456 72 view .LVU243
 860 0512 4529CC   		sub	r12d, r9d	# tmp442, _206
 861              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 862              		.loc 1 456 55 view .LVU244
 863 0515 C44299F7 		shlx	r12, r8, r12	# tmp443, pattern, tmp442
 863      E0
 864              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 865              		.loc 1 456 116 view .LVU245
 866 051a 4C09E6   		or	rsi, r12	# tmp445, tmp443
 867 051d 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_212, tmp445
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 868              		.loc 1 455 39 is_stmt 1 view .LVU246
 869 0521 4D8D7E04 		lea	r15, 4[r14]	# i,
 870              	.LVL38:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 871              		.loc 1 455 25 view .LVU247
 872              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 873              		.loc 1 455 5 is_stmt 0 view .LVU248
 874 0525 4D39FB   		cmp	r11, r15	# loop_range, i
 875 0528 0F865501 		jbe	.L12	#,
 875      0000
 876              		.loc 1 456 9 is_stmt 1 view .LVU249
 877              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 878              		.loc 1 456 81 is_stmt 0 view .LVU250
 879 052e 4189D1   		mov	r9d, edx	# tmp446, tmp355
 880              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 881              		.loc 1 456 72 view .LVU251
 882 0531 4189C4   		mov	r12d, eax	# tmp449, pattern_size
 883              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 884              		.loc 1 456 81 view .LVU252
 885 0534 450FAFCF 		imul	r9d, r15d	# tmp446, i
 886              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 887              		.loc 1 456 17 view .LVU253
 888 0538 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 889              	.LVL39:
 890              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 891              		.loc 1 456 81 view .LVU254
 892 053b 4101C9   		add	r9d, ecx	# tmp447, shift
 893              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 894              		.loc 1 456 99 view .LVU255
 895 053e 4183E13F 		and	r9d, 63	# _221,
GAS LISTING /tmp/cct11Qa0.s 			page 28


 896              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 897              		.loc 1 456 127 view .LVU256
 898 0542 C4C2B3F7 		shrx	rsi, r8, r9	# tmp451, pattern, _221
 898      F0
 899              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 900              		.loc 1 456 72 view .LVU257
 901 0547 4529CC   		sub	r12d, r9d	# tmp449, _221
 902              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 903              		.loc 1 456 55 view .LVU258
 904 054a C44299F7 		shlx	r12, r8, r12	# tmp450, pattern, tmp449
 904      E0
 905              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 906              		.loc 1 456 116 view .LVU259
 907 054f 4C09E6   		or	rsi, r12	# tmp452, tmp450
 908 0552 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_227, tmp452
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 909              		.loc 1 455 39 is_stmt 1 view .LVU260
 910 0556 4D8D7E05 		lea	r15, 5[r14]	# i,
 911              	.LVL40:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 912              		.loc 1 455 25 view .LVU261
 913              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 914              		.loc 1 455 5 is_stmt 0 view .LVU262
 915 055a 4D39FB   		cmp	r11, r15	# loop_range, i
 916 055d 0F862001 		jbe	.L12	#,
 916      0000
 917              		.loc 1 456 9 is_stmt 1 view .LVU263
 918              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 919              		.loc 1 456 81 is_stmt 0 view .LVU264
 920 0563 4189D1   		mov	r9d, edx	# tmp453, tmp355
 921              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 922              		.loc 1 456 72 view .LVU265
 923 0566 4189C4   		mov	r12d, eax	# tmp456, pattern_size
 924              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 925              		.loc 1 456 81 view .LVU266
 926 0569 450FAFCF 		imul	r9d, r15d	# tmp453, i
 927              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 928              		.loc 1 456 17 view .LVU267
 929 056d 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 930              	.LVL41:
 931              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 932              		.loc 1 456 81 view .LVU268
 933 0570 4101C9   		add	r9d, ecx	# tmp454, shift
 934              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 935              		.loc 1 456 99 view .LVU269
 936 0573 4183E13F 		and	r9d, 63	# _236,
 937              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 938              		.loc 1 456 127 view .LVU270
 939 0577 C4C2B3F7 		shrx	rsi, r8, r9	# tmp458, pattern, _236
 939      F0
 940              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 941              		.loc 1 456 72 view .LVU271
 942 057c 4529CC   		sub	r12d, r9d	# tmp456, _236
 943              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 944              		.loc 1 456 55 view .LVU272
 945 057f C44299F7 		shlx	r12, r8, r12	# tmp457, pattern, tmp456
GAS LISTING /tmp/cct11Qa0.s 			page 29


 945      E0
 946              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 947              		.loc 1 456 116 view .LVU273
 948 0584 4C09E6   		or	rsi, r12	# tmp459, tmp457
 949 0587 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_242, tmp459
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 950              		.loc 1 455 39 is_stmt 1 view .LVU274
 951 058b 4D8D7E06 		lea	r15, 6[r14]	# i,
 952              	.LVL42:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 953              		.loc 1 455 25 view .LVU275
 954              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 955              		.loc 1 455 5 is_stmt 0 view .LVU276
 956 058f 4D39FB   		cmp	r11, r15	# loop_range, i
 957 0592 0F86EB00 		jbe	.L12	#,
 957      0000
 958              		.loc 1 456 9 is_stmt 1 view .LVU277
 959              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 960              		.loc 1 456 81 is_stmt 0 view .LVU278
 961 0598 4189D1   		mov	r9d, edx	# tmp460, tmp355
 962              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 963              		.loc 1 456 72 view .LVU279
 964 059b 4189C4   		mov	r12d, eax	# tmp463, pattern_size
 965              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 966              		.loc 1 456 81 view .LVU280
 967 059e 450FAFCF 		imul	r9d, r15d	# tmp460, i
 968              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 969              		.loc 1 456 17 view .LVU281
 970 05a2 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 971              	.LVL43:
 972              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 973              		.loc 1 456 81 view .LVU282
 974 05a5 4101C9   		add	r9d, ecx	# tmp461, shift
 975              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 976              		.loc 1 456 99 view .LVU283
 977 05a8 4183E13F 		and	r9d, 63	# _251,
 978              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 979              		.loc 1 456 127 view .LVU284
 980 05ac C4C2B3F7 		shrx	rsi, r8, r9	# tmp465, pattern, _251
 980      F0
 981              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 982              		.loc 1 456 72 view .LVU285
 983 05b1 4529CC   		sub	r12d, r9d	# tmp463, _251
 984              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 985              		.loc 1 456 55 view .LVU286
 986 05b4 C44299F7 		shlx	r12, r8, r12	# tmp464, pattern, tmp463
 986      E0
 987              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 988              		.loc 1 456 116 view .LVU287
 989 05b9 4C09E6   		or	rsi, r12	# tmp466, tmp464
 990 05bc 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_257, tmp466
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 991              		.loc 1 455 39 is_stmt 1 view .LVU288
 992 05c0 4D8D7E07 		lea	r15, 7[r14]	# i,
 993              	.LVL44:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/cct11Qa0.s 			page 30


 994              		.loc 1 455 25 view .LVU289
 995              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 996              		.loc 1 455 5 is_stmt 0 view .LVU290
 997 05c4 4D39FB   		cmp	r11, r15	# loop_range, i
 998 05c7 0F86B600 		jbe	.L12	#,
 998      0000
 999              		.loc 1 456 9 is_stmt 1 view .LVU291
 1000              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1001              		.loc 1 456 81 is_stmt 0 view .LVU292
 1002 05cd 4189D1   		mov	r9d, edx	# tmp467, tmp355
 1003              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1004              		.loc 1 456 72 view .LVU293
 1005 05d0 4189C4   		mov	r12d, eax	# tmp470, pattern_size
 1006              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1007              		.loc 1 456 81 view .LVU294
 1008 05d3 450FAFCF 		imul	r9d, r15d	# tmp467, i
 1009              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1010              		.loc 1 456 17 view .LVU295
 1011 05d7 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1012              	.LVL45:
 1013              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1014              		.loc 1 456 81 view .LVU296
 1015 05da 4101C9   		add	r9d, ecx	# tmp468, shift
 1016              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1017              		.loc 1 456 99 view .LVU297
 1018 05dd 4183E13F 		and	r9d, 63	# _266,
 1019              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1020              		.loc 1 456 127 view .LVU298
 1021 05e1 C4C2B3F7 		shrx	rsi, r8, r9	# tmp472, pattern, _266
 1021      F0
 1022              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1023              		.loc 1 456 72 view .LVU299
 1024 05e6 4529CC   		sub	r12d, r9d	# tmp470, _266
 1025              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1026              		.loc 1 456 55 view .LVU300
 1027 05e9 C44299F7 		shlx	r12, r8, r12	# tmp471, pattern, tmp470
 1027      E0
 1028              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1029              		.loc 1 456 116 view .LVU301
 1030 05ee 4C09E6   		or	rsi, r12	# tmp473, tmp471
 1031 05f1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_272, tmp473
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1032              		.loc 1 455 39 is_stmt 1 view .LVU302
 1033 05f5 4D8D7E08 		lea	r15, 8[r14]	# i,
 1034              	.LVL46:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1035              		.loc 1 455 25 view .LVU303
 1036              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1037              		.loc 1 455 5 is_stmt 0 view .LVU304
 1038 05f9 4D39FB   		cmp	r11, r15	# loop_range, i
 1039 05fc 0F868100 		jbe	.L12	#,
 1039      0000
 1040              		.loc 1 456 9 is_stmt 1 view .LVU305
 1041              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1042              		.loc 1 456 81 is_stmt 0 view .LVU306
GAS LISTING /tmp/cct11Qa0.s 			page 31


 1043 0602 4189D1   		mov	r9d, edx	# tmp474, tmp355
 1044              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1045              		.loc 1 456 72 view .LVU307
 1046 0605 4189C4   		mov	r12d, eax	# tmp477, pattern_size
 1047              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1048              		.loc 1 456 81 view .LVU308
 1049 0608 450FAFCF 		imul	r9d, r15d	# tmp474, i
 1050              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1051              		.loc 1 456 17 view .LVU309
 1052 060c 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1053              	.LVL47:
 1054              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1055              		.loc 1 456 81 view .LVU310
 1056 060f 4101C9   		add	r9d, ecx	# tmp475, shift
 1057              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1058              		.loc 1 456 99 view .LVU311
 1059 0612 4183E13F 		and	r9d, 63	# _281,
 1060              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1061              		.loc 1 456 127 view .LVU312
 1062 0616 C4C2B3F7 		shrx	rsi, r8, r9	# tmp479, pattern, _281
 1062      F0
 1063              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1064              		.loc 1 456 72 view .LVU313
 1065 061b 4529CC   		sub	r12d, r9d	# tmp477, _281
 1066              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1067              		.loc 1 456 55 view .LVU314
 1068 061e C44299F7 		shlx	r12, r8, r12	# tmp478, pattern, tmp477
 1068      E0
 1069              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1070              		.loc 1 456 116 view .LVU315
 1071 0623 4C09E6   		or	rsi, r12	# tmp480, tmp478
 1072 0626 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_287, tmp480
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1073              		.loc 1 455 39 is_stmt 1 view .LVU316
 1074 062a 4D8D7E09 		lea	r15, 9[r14]	# i,
 1075              	.LVL48:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1076              		.loc 1 455 25 view .LVU317
 1077              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1078              		.loc 1 455 5 is_stmt 0 view .LVU318
 1079 062e 4D39FB   		cmp	r11, r15	# loop_range, i
 1080 0631 7650     		jbe	.L12	#,
 1081              		.loc 1 456 9 is_stmt 1 view .LVU319
 1082              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1083              		.loc 1 456 81 is_stmt 0 view .LVU320
 1084 0633 4189D1   		mov	r9d, edx	# tmp481, tmp355
 1085              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1086              		.loc 1 456 72 view .LVU321
 1087 0636 4189C4   		mov	r12d, eax	# tmp484, pattern_size
 1088              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1089              		.loc 1 456 81 view .LVU322
 1090 0639 450FAFCF 		imul	r9d, r15d	# tmp481, i
 1091              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1092              		.loc 1 455 39 view .LVU323
 1093 063d 4983C60A 		add	r14, 10	# i,
GAS LISTING /tmp/cct11Qa0.s 			page 32


 1094              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1095              		.loc 1 456 17 view .LVU324
 1096 0641 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1097              	.LVL49:
 1098              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1099              		.loc 1 456 81 view .LVU325
 1100 0644 4101C9   		add	r9d, ecx	# tmp482, shift
 1101              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1102              		.loc 1 456 99 view .LVU326
 1103 0647 4183E13F 		and	r9d, 63	# _296,
 1104              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1105              		.loc 1 456 127 view .LVU327
 1106 064b C4C2B3F7 		shrx	rsi, r8, r9	# tmp486, pattern, _296
 1106      F0
 1107              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1108              		.loc 1 456 72 view .LVU328
 1109 0650 4529CC   		sub	r12d, r9d	# tmp484, _296
 1110              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1111              		.loc 1 456 55 view .LVU329
 1112 0653 C44299F7 		shlx	r12, r8, r12	# tmp485, pattern, tmp484
 1112      E0
 1113              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1114              		.loc 1 456 116 view .LVU330
 1115 0658 4C09E6   		or	rsi, r12	# tmp487, tmp485
 1116              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1117              		.loc 1 455 5 view .LVU331
 1118 065b 4D39F3   		cmp	r11, r14	# loop_range, i
 1119              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1120              		.loc 1 456 116 view .LVU332
 1121 065e 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_302, tmp487
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1122              		.loc 1 455 39 is_stmt 1 view .LVU333
 1123              	.LVL50:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1124              		.loc 1 455 25 view .LVU334
 1125              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1126              		.loc 1 455 5 is_stmt 0 view .LVU335
 1127 0662 761F     		jbe	.L12	#,
 1128              		.loc 1 456 9 is_stmt 1 view .LVU336
 1129              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1130              		.loc 1 456 81 is_stmt 0 view .LVU337
 1131 0664 410FAFD6 		imul	edx, r14d	# tmp488, i
 1132              	.LVL51:
 1133              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1134              		.loc 1 456 17 view .LVU338
 1135 0668 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1136              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1137              		.loc 1 456 81 view .LVU339
 1138 066b 01D1     		add	ecx, edx	# tmp489, tmp488
 1139              	.LVL52:
 1140              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1141              		.loc 1 456 99 view .LVU340
 1142 066d 83E13F   		and	ecx, 63	# _134,
 1143              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1144              		.loc 1 456 72 view .LVU341
GAS LISTING /tmp/cct11Qa0.s 			page 33


 1145 0670 29C8     		sub	eax, ecx	# tmp491, _134
 1146              	.LVL53:
 1147              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1148              		.loc 1 456 55 view .LVU342
 1149 0672 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1149      D0
 1150              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1151              		.loc 1 456 127 view .LVU343
 1152 0677 C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _134
 1152      C0
 1153              	.LVL54:
 1154              	# sieve_extend.c:456:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1155              		.loc 1 456 116 view .LVU344
 1156 067c 4909D0   		or	r8, rdx	# tmp494, tmp492
 1157 067f 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_36, tmp494
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1158              		.loc 1 455 39 is_stmt 1 view .LVU345
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1159              		.loc 1 455 25 view .LVU346
 1160              	.L12:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1161              		.loc 1 455 25 is_stmt 0 view .LVU347
 1162              	.LBE266:
 457:sieve_extend.c ****     }
 458:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1163              		.loc 1 458 5 is_stmt 1 view .LVU348
 1164              	# sieve_extend.c:458:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1165              		.loc 1 458 37 is_stmt 0 view .LVU349
 1166 0683 4C212CDF 		and	QWORD PTR [rdi+rbx*8], r13	# *_57, _127
 1167              	# sieve_extend.c:459: }
 459:sieve_extend.c **** }
 1168              		.loc 1 459 1 view .LVU350
 1169 0687 488D65D8 		lea	rsp, -40[rbp]	#,
 1170 068b 5B       		pop	rbx	#
 1171              	.LVL55:
 1172              		.loc 1 459 1 view .LVU351
 1173 068c 415C     		pop	r12	#
 1174 068e 415D     		pop	r13	#
 1175 0690 415E     		pop	r14	#
 1176 0692 415F     		pop	r15	#
 1177 0694 5D       		pop	rbp	#
 1178              		.cfi_remember_state
 1179              		.cfi_def_cfa 7, 8
 1180 0695 C3       		ret	
 1181              	.LVL56:
 1182              		.p2align 4,,7
 1183 0696 6690     		.p2align 3
 1184              	.L52:
 1185              		.cfi_restore_state
 441:sieve_extend.c ****         return;
 1186              		.loc 1 441 9 is_stmt 1 view .LVU352
 1187              	# sieve_extend.c:441:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 441:sieve_extend.c ****         return;
 1188              		.loc 1 441 86 is_stmt 0 view .LVU353
 1189 0698 4C21E8   		and	rax, r13	# tmp351, _127
 1190              	# sieve_extend.c:441:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 441:sieve_extend.c ****         return;
GAS LISTING /tmp/cct11Qa0.s 			page 34


 1191              		.loc 1 441 42 view .LVU354
 1192 069b 4C09E0   		or	rax, r12	# tmp352, pretmp_121
 1193 069e 498907   		mov	QWORD PTR [r15], rax	# *_120, tmp352
 442:sieve_extend.c ****     }
 1194              		.loc 1 442 9 is_stmt 1 view .LVU355
 1195              	# sieve_extend.c:459: }
 1196              		.loc 1 459 1 is_stmt 0 view .LVU356
 1197 06a1 488D65D8 		lea	rsp, -40[rbp]	#,
 1198 06a5 5B       		pop	rbx	#
 1199              	.LVL57:
 1200              		.loc 1 459 1 view .LVU357
 1201 06a6 415C     		pop	r12	#
 1202 06a8 415D     		pop	r13	#
 1203 06aa 415E     		pop	r14	#
 1204              	.LVL58:
 1205              		.loc 1 459 1 view .LVU358
 1206 06ac 415F     		pop	r15	#
 1207 06ae 5D       		pop	rbp	#
 1208              		.cfi_remember_state
 1209              		.cfi_def_cfa 7, 8
 1210 06af C3       		ret	
 1211              	.LVL59:
 1212              	.L15:
 1213              		.cfi_restore_state
 1214              	.LBB267:
 1215              	# sieve_extend.c:455:     for (counter_t i=0; i<loop_range; ++i ) {
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1216              		.loc 1 455 20 view .LVU359
 1217 06b0 4531F6   		xor	r14d, r14d	# i
 1218 06b3 E97EFBFF 		jmp	.L8	#
 1218      FF
 1219              	.LVL60:
 1220              	.L53:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1221              		.loc 1 455 20 view .LVU360
 1222 06b8 C5F877   		vzeroupper
 1223 06bb EBC6     		jmp	.L12	#
 1224              	.LVL61:
 1225              	.L14:
 455:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1226              		.loc 1 455 20 view .LVU361
 1227 06bd 4531F6   		xor	r14d, r14d	# tmp.124
 1228              		.p2align 4,,2
 1229 06c0 E997FDFF 		jmp	.L7	#
 1229      FF
 1230              	.LBE267:
 1231              		.cfi_endproc
 1232              	.LFE5332:
 1234 06c5 66662E0F 		.p2align 4
 1234      1F840000 
 1234      000000
 1236              	extendSieve_shiftright_ivdep:
 1237              	.LVL62:
 1238              	.LFB5337:
 460:sieve_extend.c **** 
 461:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 462:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
GAS LISTING /tmp/cct11Qa0.s 			page 35


 463:sieve_extend.c **** 
 464:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 465:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 466:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 467:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 468:sieve_extend.c ****     
 469:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 470:sieve_extend.c **** 
 471:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 472:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 473:sieve_extend.c ****         copy_word += size;
 474:sieve_extend.c ****     }
 475:sieve_extend.c **** 
 476:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 477:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 478:sieve_extend.c ****         source_word++;
 479:sieve_extend.c ****         copy_word++;
 480:sieve_extend.c ****     }
 481:sieve_extend.c **** 
 482:sieve_extend.c **** }
 483:sieve_extend.c **** 
 484:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 485:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 486:sieve_extend.c **** 
 487:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 488:sieve_extend.c **** {
 489:sieve_extend.c ****     int i = 0;
 490:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 491:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 492:sieve_extend.c ****     {
 493:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 494:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 495:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 496:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 497:sieve_extend.c ****     }
 498:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 499:sieve_extend.c ****     {
 500:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 501:sieve_extend.c ****     }    
 502:sieve_extend.c **** }
 503:sieve_extend.c **** 
 504:sieve_extend.c **** #define forward_distance 3
 505:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 506:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 507:sieve_extend.c ****    
 508:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 509:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 510:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 511:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 512:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 513:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 514:sieve_extend.c **** 
 515:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 516:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 517:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 518:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 519:sieve_extend.c ****         return; // rapid exit for one word variant
GAS LISTING /tmp/cct11Qa0.s 			page 36


 520:sieve_extend.c ****     }
 521:sieve_extend.c **** 
 522:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 523:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 524:sieve_extend.c ****                                 & keepmask(copy_start);
 525:sieve_extend.c **** 
 526:sieve_extend.c ****     copy_word++;
 527:sieve_extend.c **** 
 528:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 529:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 530:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 531:sieve_extend.c ****         
 532:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 533:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 534:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 535:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 536:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 537:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 538:sieve_extend.c **** 
 539:sieve_extend.c ****         #pragma ivdep 
 540:sieve_extend.c ****         for (long i = 0; (i+forward_distance) < size_word_ptr; i+=forward_distance, copy_ptr+=forwa
 541:sieve_extend.c ****             #pragma ivdep
 542:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 543:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 544:sieve_extend.c ****             #pragma ivdep
 545:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 546:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 547:sieve_extend.c ****         }
 548:sieve_extend.c **** 
 549:sieve_extend.c ****         size_word_ptr = dest_ptr - copy_ptr;
 550:sieve_extend.c ****         #pragma ivdep 
 551:sieve_extend.c ****         for (counter_t i=0; i <= size_word_ptr; i++)
 552:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 553:sieve_extend.c **** 
 554:sieve_extend.c ****         // #pragma GCC ivdep
 555:sieve_extend.c ****         // for (; i <= size_word; i++) 
 556:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 557:sieve_extend.c ****     }
 558:sieve_extend.c ****     else {
 559:sieve_extend.c ****         register counter_t i = 0;
 560:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 561:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 562:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 563:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 564:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 565:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 566:sieve_extend.c ****     }
 567:sieve_extend.c **** 
 568:sieve_extend.c ****     // for (; i <= size_word; i++) 
 569:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 570:sieve_extend.c **** 
 571:sieve_extend.c ****     // for (; i <= size_word; i++) 
 572:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 573:sieve_extend.c **** 
 574:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 575:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 576:sieve_extend.c **** }
GAS LISTING /tmp/cct11Qa0.s 			page 37


 577:sieve_extend.c **** 
 578:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 579:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 580:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 581:sieve_extend.c ****     counter_t distance = 0;
 582:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 583:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 584:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 585:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 586:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 587:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 588:sieve_extend.c ****         copy_word += 2;
 589:sieve_extend.c ****         source_word += 2;
 590:sieve_extend.c ****         distance += 2;
 591:sieve_extend.c ****     }
 592:sieve_extend.c ****     return distance;
 593:sieve_extend.c **** }
 594:sieve_extend.c **** 
 595:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 596:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 597:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 598:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 599:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 600:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 601:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 602:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 603:sieve_extend.c **** //
 604:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 605:sieve_extend.c **** //    copy_ptr++;
 606:sieve_extend.c **** //    source_ptr++;
 607:sieve_extend.c **** //
 608:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 609:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 610:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 611:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 612:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 613:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 614:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
 615:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 616:sieve_extend.c **** //
 617:sieve_extend.c **** //        copy_ptr+=3;
 618:sieve_extend.c **** //        source_ptr+=3;
 619:sieve_extend.c **** //    }
 620:sieve_extend.c **** //
 621:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 622:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 623:sieve_extend.c **** //        source_ptr++;
 624:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 625:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 626:sieve_extend.c **** //        copy_ptr++;
 627:sieve_extend.c **** //    }
 628:sieve_extend.c **** //
 629:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 630:sieve_extend.c **** //
 631:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 632:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 633:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
GAS LISTING /tmp/cct11Qa0.s 			page 38


 634:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 635:sieve_extend.c **** //         copy_ptr += size;
 636:sieve_extend.c **** //     }
 637:sieve_extend.c **** //
 638:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 639:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 640:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 641:sieve_extend.c **** //        copy_ptr++;
 642:sieve_extend.c **** //        source_ptr++;
 643:sieve_extend.c **** //    }
 644:sieve_extend.c **** //
 645:sieve_extend.c **** //}
 646:sieve_extend.c **** 
 647:sieve_extend.c **** 
 648:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 1239              		.loc 1 648 149 is_stmt 1 view -0
 1240              		.cfi_startproc
 649:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1241              		.loc 1 649 5 view .LVU363
 650:sieve_extend.c ****    
 651:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1242              		.loc 1 651 5 view .LVU364
 1243              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1244              		.loc 1 648 149 is_stmt 0 view .LVU365
 1245 06d0 55       		push	rbp	#
 1246              		.cfi_def_cfa_offset 16
 1247              		.cfi_offset 6, -16
 1248              	# sieve_extend.c:652:     const counter_t copy_start = source_start + size;
 652:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1249              		.loc 1 652 21 view .LVU366
 1250 06d1 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 1251              	# sieve_extend.c:651:     const counter_t destination_stop_word = wordindex(destination_stop);
 651:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1252              		.loc 1 651 21 view .LVU367
 1253 06d5 4889C8   		mov	rax, rcx	# destination_stop_word, destination_stop
 1254              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1255              		.loc 1 648 149 view .LVU368
 1256 06d8 4889E5   		mov	rbp, rsp	#,
 1257              		.cfi_def_cfa_register 6
 1258              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 653:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1259              		.loc 1 653 39 view .LVU369
 1260 06db 4D89C2   		mov	r10, r8	# _4, copy_start
 1261              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1262              		.loc 1 648 149 view .LVU370
 1263 06de 4157     		push	r15	#
 1264              	# sieve_extend.c:656:     register counter_t copy_word = wordindex(copy_start);
 654:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 655:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 656:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1265              		.loc 1 656 24 view .LVU371
 1266 06e0 49C1E806 		shr	r8, 6	# copy_word,
 1267              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
GAS LISTING /tmp/cct11Qa0.s 			page 39


 1268              		.loc 1 653 39 view .LVU372
 1269 06e4 4183E23F 		and	r10d, 63	# _4,
 1270              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1271              		.loc 1 648 149 view .LVU373
 1272 06e8 4156     		push	r14	#
 1273              	# sieve_extend.c:651:     const counter_t destination_stop_word = wordindex(destination_stop);
 651:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1274              		.loc 1 651 21 view .LVU374
 1275 06ea 48C1E806 		shr	rax, 6	# destination_stop_word,
 1276              		.cfi_offset 15, -24
 1277              		.cfi_offset 14, -32
 1278              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1279              		.loc 1 653 31 view .LVU375
 1280 06ee 4D89D6   		mov	r14, r10	# shift, _4
 1281              	# sieve_extend.c:648: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1282              		.loc 1 648 149 view .LVU376
 1283 06f1 4155     		push	r13	#
 1284 06f3 F7D1     		not	ecx	# tmp401
 1285              	.LVL63:
 648:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1286              		.loc 1 648 149 view .LVU377
 1287 06f5 4154     		push	r12	#
 1288              		.cfi_offset 13, -40
 1289              		.cfi_offset 12, -48
 1290 06f7 4E8D24C5 		lea	r12, 0[0+r8*8]	# _176,
 1290      00000000 
 1291 06ff 53       		push	rbx	#
 1292 0700 4E8D2C27 		lea	r13, [rdi+r12]	# _177,
 1293 0704 4D8B7D00 		mov	r15, QWORD PTR 0[r13]	# pretmp_178, *_177
 1294 0708 4883E4E0 		and	rsp, -32	#,
 1295              		.cfi_offset 3, -56
 1296              	.LVL64:
 652:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1297              		.loc 1 652 5 is_stmt 1 view .LVU378
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1298              		.loc 1 653 5 view .LVU379
 1299              	# sieve_extend.c:651:     const counter_t destination_stop_word = wordindex(destination_stop);
 651:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1300              		.loc 1 651 21 is_stmt 0 view .LVU380
 1301 070c 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, destination_stop_word
 1301      F8
 1302              	.LVL65:
 1303              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1304              		.loc 1 653 67 view .LVU381
 1305 0711 4889F0   		mov	rax, rsi	# _5, source_start
 1306              	# sieve_extend.c:655:     register counter_t source_word = wordindex(source_start);
 655:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1307              		.loc 1 655 24 view .LVU382
 1308 0714 48C1EE06 		shr	rsi, 6	# source_word,
 1309              	.LVL66:
 1310              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1311              		.loc 1 653 67 view .LVU383
GAS LISTING /tmp/cct11Qa0.s 			page 40


 1312 0718 83E03F   		and	eax, 63	# _5,
 1313              	.LVL67:
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1314              		.loc 1 654 5 is_stmt 1 view .LVU384
 655:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1315              		.loc 1 655 5 view .LVU385
 1316              		.loc 1 656 5 view .LVU386
 657:sieve_extend.c **** 
 658:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 1317              		.loc 1 658 5 view .LVU387
 1318              	# sieve_extend.c:653:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1319              		.loc 1 653 31 is_stmt 0 view .LVU388
 1320 071b 4929C6   		sub	r14, rax	# shift, _5
 1321              	.LVL68:
 653:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1322              		.loc 1 653 31 view .LVU389
 1323 071e 488D1CF5 		lea	rbx, 0[0+rsi*8]	# _179,
 1323      00000000 
 1324              	# sieve_extend.c:654:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1325              		.loc 1 654 31 view .LVU390
 1326 0726 4883C040 		add	rax, 64	# tmp394,
 1327              	.LVL69:
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1328              		.loc 1 654 31 view .LVU391
 1329 072a 4C8D1C1F 		lea	r11, [rdi+rbx]	# _180,
 1330 072e 4C897C24 		mov	QWORD PTR -24[rsp], r15	# %sfp, pretmp_178
 1330      E8
 1331 0733 4C29D0   		sub	rax, r10	# shift_flipped, _4
 1332              	.LVL70:
 654:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1333              		.loc 1 654 31 view .LVU392
 1334 0736 C44289F7 		shlx	r9, QWORD PTR [r11], r14	# tmp396, *_180, shift
 1334      0B
 1335 073b C442FBF7 		shrx	r15, r15, rax	# tmp398, pretmp_178, shift_flipped
 1335      FF
 1336 0740 44897424 		mov	DWORD PTR -12[rsp], r14d	# %sfp, shift
 1336      F4
 1337 0745 4D09F9   		or	r9, r15	# _186, tmp398
 1338              	# sieve_extend.c:658:     if (copy_word >= destination_stop_word) { 
 1339              		.loc 1 658 8 view .LVU393
 1340 0748 4C394424 		cmp	QWORD PTR -8[rsp], r8	# %sfp, copy_word
 1340      F8
 1341 074d 49C7C7FF 		mov	r15, -1	# tmp400,
 1341      FFFFFF
 1342 0754 894424F0 		mov	DWORD PTR -16[rsp], eax	# %sfp, shift_flipped
 1343 0758 C442A9F7 		shlx	r10, r15, r10	# _189, tmp400, _4
 1343      D7
 1344              	.LVL71:
 1345              		.loc 1 658 8 view .LVU394
 1346 075d C442F3F7 		shrx	r15, r15, rcx	# _193, tmp400, tmp401
 1346      FF
 1347 0762 0F86F80A 		jbe	.L263	#,
 1347      0000
 659:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 660:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
GAS LISTING /tmp/cct11Qa0.s 			page 41


 661:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 662:sieve_extend.c ****         return; // rapid exit for one word variant
 663:sieve_extend.c ****     }
 664:sieve_extend.c **** 
 665:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 1348              		.loc 1 665 5 is_stmt 1 view .LVU395
 1349              	# sieve_extend.c:667:                                 & keepmask(copy_start);
 666:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 667:sieve_extend.c ****                                 & keepmask(copy_start);
 1350              		.loc 1 667 33 is_stmt 0 view .LVU396
 1351 0768 4D21D1   		and	r9, r10	# tmp407, _189
 1352              	# sieve_extend.c:669:     copy_word++;
 668:sieve_extend.c **** 
 669:sieve_extend.c ****     copy_word++;
 1353              		.loc 1 669 14 view .LVU397
 1354 076b 498D4801 		lea	rcx, 1[r8]	# copy_word,
 1355              	# sieve_extend.c:665:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 665:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1356              		.loc 1 665 25 view .LVU398
 1357 076f 4C0B4C24 		or	r9, QWORD PTR -24[rsp]	# tmp408, %sfp
 1357      E8
 1358              	# sieve_extend.c:673:     if (size >= WORD_SIZE_counter) {
 670:sieve_extend.c **** 
 671:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 672:sieve_extend.c **** 
 673:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1359              		.loc 1 673 8 view .LVU399
 1360 0774 4883FA3F 		cmp	rdx, 63	# size,
 1361              	# sieve_extend.c:665:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 665:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1362              		.loc 1 665 25 view .LVU400
 1363 0778 4D894D00 		mov	QWORD PTR 0[r13], r9	# *_177, tmp408
 669:sieve_extend.c **** 
 1364              		.loc 1 669 5 is_stmt 1 view .LVU401
 1365              	.LVL72:
 671:sieve_extend.c **** 
 1366              		.loc 1 671 5 view .LVU402
 1367              		.loc 1 673 5 view .LVU403
 1368              	# sieve_extend.c:673:     if (size >= WORD_SIZE_counter) {
 1369              		.loc 1 673 8 is_stmt 0 view .LVU404
 1370 077c 0F876604 		ja	.L264	#,
 1370      0000
 674:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 675:sieve_extend.c **** 
 676:sieve_extend.c ****         #pragma unroll
 677:sieve_extend.c ****         #pragma ivdep
 678:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 679:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 680:sieve_extend.c ****         }
 681:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 682:sieve_extend.c ****     }
 683:sieve_extend.c **** 
 684:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1371              		.loc 1 684 12 is_stmt 1 discriminator 1 view .LVU405
 1372              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1373              		.loc 1 684 5 is_stmt 0 discriminator 1 view .LVU406
 1374 0782 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
GAS LISTING /tmp/cct11Qa0.s 			page 42


 1374      F8
 1375 0787 4939CB   		cmp	r11, rcx	# destination_stop_word, copy_word
 1376 078a 0F824104 		jb	.L69	#,
 1376      0000
 1377 0790 4D89DC   		mov	r12, r11	# _173, destination_stop_word
 1378 0793 498D5301 		lea	rdx, 1[r11]	# _198,
 1379              	.LVL73:
 1380              		.loc 1 684 5 discriminator 1 view .LVU407
 1381 0797 4929CC   		sub	r12, rcx	# _173, copy_word
 1382 079a 4C8D0CF5 		lea	r9, 40[0+rsi*8]	# _168,
 1382      28000000 
 1383 07a2 4C896424 		mov	QWORD PTR -32[rsp], r12	# %sfp, _173
 1383      E0
 1384 07a7 4C8D24CD 		lea	r12, 0[0+rcx*8]	# _166,
 1384      00000000 
 1385 07af 48895424 		mov	QWORD PTR -24[rsp], rdx	# %sfp, _198
 1385      E8
 1386 07b4 4D8D5424 		lea	r10, 32[r12]	# tmp497,
 1386      20
 1387 07b9 488D14F5 		lea	rdx, 0[0+rsi*8]	# _260,
 1387      00000000 
 1388 07c1 4D8D6802 		lea	r13, 2[r8]	# _175,
 1389 07c5 4C39D2   		cmp	rdx, r10	# _260, tmp497
 1390 07c8 410F9DC2 		setge	r10b	#, tmp499
 1391 07cc 4D39CC   		cmp	r12, r9	# _166, _168
 1392 07cf 410F9DC1 		setge	r9b	#, tmp501
 1393 07d3 4508CA   		or	r10b, r9b	# tmp499, tmp501
 1394 07d6 0F843808 		je	.L59	#,
 1394      0000
 1395 07dc 48837C24 		cmp	QWORD PTR -32[rsp], 5	# %sfp,
 1395      E005
 1396 07e2 410F97C2 		seta	r10b	#, tmp504
 1397 07e6 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1397      E8
 1398 07eb 410F96C1 		setbe	r9b	#, tmp506
 1399 07ef 4584CA   		test	r10b, r9b	# tmp504, tmp506
 1400 07f2 0F841C08 		je	.L59	#,
 1400      0000
 1401 07f8 4D29C3   		sub	r11, r8	# tmp508, copy_word
 1402 07fb 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1402      E8
 1403 0800 41B90100 		mov	r9d, 1	# tmp509,
 1403      0000
 1404 0806 4D0F46CB 		cmovbe	r9, r11	# tmp508,, niters.150
 1405 080a 4801FA   		add	rdx, rdi	# vectp.151, bitarray
 1406 080d 48C1EA03 		shr	rdx, 3	# tmp511,
 1407 0811 48F7DA   		neg	rdx	# tmp512
 1408 0814 83E203   		and	edx, 3	# prolog_loop_niters.152,
 1409 0817 0F847B0A 		je	.L80	#,
 1409      0000
 685:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1410              		.loc 1 685 9 is_stmt 1 view .LVU408
 1411              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1412              		.loc 1 685 99 is_stmt 0 view .LVU409
 1413 081d 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_354, *_354
 1413      08
 1414              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/cct11Qa0.s 			page 43


 1415              		.loc 1 685 83 view .LVU410
 1416 0822 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 1417              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1418              		.loc 1 685 99 view .LVU411
 1419 0826 C46289F7 		shlx	r11, rbx, r14	# tmp513, *_354, shift
 1419      DB
 1420              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1421              		.loc 1 685 54 view .LVU412
 1422 082b C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rsi*8], rax	# tmp515, *_349, shift_flipped
 1422      1CF7
 1423              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1424              		.loc 1 685 83 view .LVU413
 1425 0831 4C895424 		mov	QWORD PTR -40[rsp], r10	# %sfp, tmp566
 1425      D8
 1426              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1427              		.loc 1 685 72 view .LVU414
 1428 0836 4909DB   		or	r11, rbx	# tmp517, tmp515
 1429 0839 4E891C27 		mov	QWORD PTR [rdi+r12], r11	# *_358, tmp517
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1430              		.loc 1 684 48 is_stmt 1 view .LVU415
 1431              	.LVL74:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1432              		.loc 1 684 12 view .LVU416
 1433 083d 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.152,
 1434              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 685 29 is_stmt 0 view .LVU417
 1436 0841 4D89EC   		mov	r12, r13	# copy_word, _175
 1437 0844 745E     		je	.L70	#,
 1438              		.loc 1 685 9 is_stmt 1 view .LVU418
 1439              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1440              		.loc 1 685 40 is_stmt 0 view .LVU419
 1441 0846 4E8D24D5 		lea	r12, 0[0+r10*8]	# _367,
 1441      00000000 
 1442              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1443              		.loc 1 685 83 view .LVU420
 1444 084e 4C8D5E02 		lea	r11, 2[rsi]	# source_word,
 1445              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1446              		.loc 1 685 54 view .LVU421
 1447 0852 4A8B1C27 		mov	rbx, QWORD PTR [rdi+r12]	# *_368, *_368
 1448              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1449              		.loc 1 685 83 view .LVU422
 1450 0856 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1450      D8
 1451              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1452              		.loc 1 685 99 view .LVU423
 1453 085b C42289F7 		shlx	r11, QWORD PTR 8[rdi+r12], r14	# tmp518, *_373, shift
 1453      5C2708
 1454              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1455              		.loc 1 685 54 view .LVU424
 1456 0862 C462FBF7 		shrx	r12, rbx, rax	# tmp520, *_368, shift_flipped
 1456      E3
 1457              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1458              		.loc 1 685 72 view .LVU425
 1459 0867 4D09E3   		or	r11, r12	# tmp522, tmp520
 1460 086a 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.152,
 1461              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/cct11Qa0.s 			page 44


 1462              		.loc 1 684 57 view .LVU426
 1463 086e 4D8D6003 		lea	r12, 3[r8]	# copy_word,
 1464              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1465              		.loc 1 685 72 view .LVU427
 1466 0872 4E891CEF 		mov	QWORD PTR [rdi+r13*8], r11	# *_377, tmp522
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1467              		.loc 1 684 48 is_stmt 1 view .LVU428
 1468              	.LVL75:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1469              		.loc 1 684 12 view .LVU429
 1470 0876 752C     		jne	.L70	#,
 1471              		.loc 1 685 9 view .LVU430
 1472              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1473              		.loc 1 685 40 is_stmt 0 view .LVU431
 1474 0878 488D5E02 		lea	rbx, 2[rsi]	# source_word,
 1475              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1476              		.loc 1 685 83 view .LVU432
 1477 087c 4C8D5E03 		lea	r11, 3[rsi]	# source_word,
 1478 0880 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1478      D8
 1479              	.LVL76:
 1480              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1481              		.loc 1 685 40 view .LVU433
 1482 0885 48C1E303 		sal	rbx, 3	# source_word,
 1483              	.LVL77:
 1484              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1485              		.loc 1 685 99 view .LVU434
 1486 0889 C46289F7 		shlx	r11, QWORD PTR 8[rdi+rbx], r14	# tmp523, *_111, shift
 1486      5C1F08
 1487              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1488              		.loc 1 685 54 view .LVU435
 1489 0890 488B1C1F 		mov	rbx, QWORD PTR [rdi+rbx]	# *_121, *_121
 1490 0894 C4E2FBF7 		shrx	rbx, rbx, rax	# tmp525, *_121, shift_flipped
 1490      DB
 1491              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1492              		.loc 1 685 72 view .LVU436
 1493 0899 4909DB   		or	r11, rbx	# tmp527, tmp525
 1494 089c 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# *_103, tmp527
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1495              		.loc 1 684 48 is_stmt 1 view .LVU437
 1496              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1497              		.loc 1 684 57 is_stmt 0 view .LVU438
 1498 08a0 4D8D6004 		lea	r12, 4[r8]	# copy_word,
 1499              	.LVL78:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1500              		.loc 1 684 12 is_stmt 1 view .LVU439
 1501              	.L70:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1502              		.loc 1 684 12 is_stmt 0 view .LVU440
 1503 08a4 4901D2   		add	r10, rdx	# tmp531, prolog_loop_niters.152
 1504 08a7 4929D1   		sub	r9, rdx	# niters.153, prolog_loop_niters.152
 1505 08aa 4E8D04D7 		lea	r8, [rdi+r10*8]	# vectp.163,
 1506 08ae 4D89CA   		mov	r10, r9	# bnd.154, niters.153
 1507 08b1 49C1EA02 		shr	r10, 2	# bnd.154,
 1508 08b5 4801D6   		add	rsi, rdx	# tmp528, prolog_loop_niters.152
 1509 08b8 49C1E205 		sal	r10, 5	# _469,
GAS LISTING /tmp/cct11Qa0.s 			page 45


 1510 08bc 4801D1   		add	rcx, rdx	# tmp533, prolog_loop_niters.152
 1511 08bf 4D8D5AE0 		lea	r11, -32[r10]	# tmp588,
 1512              	# sieve_extend.c:669:     copy_word++;
 669:sieve_extend.c **** 
 1513              		.loc 1 669 14 view .LVU441
 1514 08c3 31D2     		xor	edx, edx	# ivtmp.201
 1515 08c5 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.159,
 1516 08c9 488D0CCF 		lea	rcx, [rdi+rcx*8]	# vectp.168,
 1517 08cd 49C1EB05 		shr	r11, 5	# tmp586,
 1518 08d1 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 1518      24F0
 1519 08d7 4983C301 		add	r11, 1	# tmp589,
 1520 08db C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 1520      24F4
 1521 08e1 4183E307 		and	r11d, 7	# tmp590,
 1522 08e5 0F841A01 		je	.L72	#,
 1522      0000
 1523 08eb 4983FB01 		cmp	r11, 1	# tmp590,
 1524 08ef 0F84E700 		je	.L194	#,
 1524      0000
 1525 08f5 4983FB02 		cmp	r11, 2	# tmp590,
 1526 08f9 0F84BD00 		je	.L195	#,
 1526      0000
 1527 08ff 4983FB03 		cmp	r11, 3	# tmp590,
 1528 0903 0F849200 		je	.L196	#,
 1528      0000
 1529 0909 4983FB04 		cmp	r11, 4	# tmp590,
 1530 090d 746C     		je	.L197	#,
 1531 090f 4983FB05 		cmp	r11, 5	# tmp590,
 1532 0913 7445     		je	.L198	#,
 1533 0915 4983FB06 		cmp	r11, 6	# tmp590,
 1534 0919 741E     		je	.L199	#,
 1535              		.loc 1 685 9 is_stmt 1 view .LVU442
 1536              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1537              		.loc 1 685 54 is_stmt 0 view .LVU443
 1538 091b C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp1085, MEM[base: vectp.159_10, index: ivtmp.201_467, offset: 0
 1539 091f BA200000 		mov	edx, 32	# ivtmp.201,
 1539      00
 1540              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1541              		.loc 1 685 99 view .LVU444
 1542 0924 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8]	# tmp1086, MEM[base: vectp.163_17, index: ivtmp.201_467, offset: 0B
 1542      38
 1543              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1544              		.loc 1 685 54 view .LVU445
 1545 0929 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.161, tmp1085, _184
 1546              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1547              		.loc 1 685 99 view .LVU446
 1548 092d C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__67.165, tmp1086, _182
 1549              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1550              		.loc 1 685 72 view .LVU447
 1551 0931 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.166, vect__62.161, vect__67.165
 1552              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1553              		.loc 1 685 29 view .LVU448
 1554 0935 C5FE7F21 		vmovdqu	YMMWORD PTR [rcx], ymm4	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B], vect
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1555              		.loc 1 684 48 is_stmt 1 view .LVU449
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/cct11Qa0.s 			page 46


 1556              		.loc 1 684 12 view .LVU450
 1557              	.L199:
 1558              		.loc 1 685 9 view .LVU451
 1559              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1560              		.loc 1 685 54 is_stmt 0 view .LVU452
 1561 0939 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp1087, MEM[base: vectp.159_10, index: ivtmp.201_467, offse
 1561      16
 1562              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1563              		.loc 1 685 99 view .LVU453
 1564 093e C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rdx]	# tmp1088, MEM[base: vectp.163_17, index: ivtmp.201_467, offset
 1564      0C10
 1565              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1566              		.loc 1 685 54 view .LVU454
 1567 0944 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.161, tmp1087, _184
 1568              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1569              		.loc 1 685 99 view .LVU455
 1570 0948 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__67.165, tmp1088, _182
 1571              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1572              		.loc 1 685 72 view .LVU456
 1573 094c C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.166, vect__62.161, vect__67.165
 1573      DA
 1574              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1575              		.loc 1 685 29 view .LVU457
 1576 0951 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm11	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B],
 1576      11
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1577              		.loc 1 684 48 is_stmt 1 view .LVU458
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1578              		.loc 1 684 12 view .LVU459
 1579 0956 4883C220 		add	rdx, 32	# ivtmp.201,
 1580              	.L198:
 1581              		.loc 1 685 9 view .LVU460
 1582              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1583              		.loc 1 685 54 is_stmt 0 view .LVU461
 1584 095a C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp1089, MEM[base: vectp.159_10, index: ivtmp.201_467, offs
 1584      16
 1585              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1586              		.loc 1 685 99 view .LVU462
 1587 095f C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r8+rdx]	# tmp1090, MEM[base: vectp.163_17, index: ivtmp.201_467, offse
 1587      3410
 1588              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1589              		.loc 1 685 54 view .LVU463
 1590 0965 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__62.161, tmp1089, _184
 1591              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1592              		.loc 1 685 99 view .LVU464
 1593 0969 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__67.165, tmp1090, _182
 1594              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1595              		.loc 1 685 72 view .LVU465
 1596 096d C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.166, vect__62.161, vect__67.165
 1596      F7
 1597              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1598              		.loc 1 685 29 view .LVU466
 1599 0972 C5FE7F34 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm6	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B], 
 1599      11
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1600              		.loc 1 684 48 is_stmt 1 view .LVU467
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/cct11Qa0.s 			page 47


 1601              		.loc 1 684 12 view .LVU468
 1602 0977 4883C220 		add	rdx, 32	# ivtmp.201,
 1603              	.L197:
 1604              		.loc 1 685 9 view .LVU469
 1605              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1606              		.loc 1 685 54 is_stmt 0 view .LVU470
 1607 097b C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp1091, MEM[base: vectp.159_10, index: ivtmp.201_467, offse
 1607      16
 1608              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1609              		.loc 1 685 99 view .LVU471
 1610 0980 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1092, MEM[base: vectp.163_17, index: ivtmp.201_467, offset
 1610      1C10
 1611              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1612              		.loc 1 685 54 view .LVU472
 1613 0986 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__62.161, tmp1091, _184
 1614              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1615              		.loc 1 685 99 view .LVU473
 1616 098a C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__67.165, tmp1092, _182
 1617              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1618              		.loc 1 685 72 view .LVU474
 1619 098e C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.166, vect__62.161, vect__67.165
 1620              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1621              		.loc 1 685 29 view .LVU475
 1622 0992 C5FE7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm5	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B], 
 1622      11
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1623              		.loc 1 684 48 is_stmt 1 view .LVU476
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1624              		.loc 1 684 12 view .LVU477
 1625 0997 4883C220 		add	rdx, 32	# ivtmp.201,
 1626              	.L196:
 1627              		.loc 1 685 9 view .LVU478
 1628              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1629              		.loc 1 685 54 is_stmt 0 view .LVU479
 1630 099b C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp1093, MEM[base: vectp.159_10, index: ivtmp.201_467, offse
 1630      16
 1631              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1632              		.loc 1 685 99 view .LVU480
 1633 09a0 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r8+rdx]	# tmp1094, MEM[base: vectp.163_17, index: ivtmp.201_467, offse
 1633      1410
 1634              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1635              		.loc 1 685 54 view .LVU481
 1636 09a6 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__62.161, tmp1093, _184
 1637              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1638              		.loc 1 685 99 view .LVU482
 1639 09aa C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__67.165, tmp1094, _182
 1640              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1641              		.loc 1 685 72 view .LVU483
 1642 09ae C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.166, vect__62.161, vect__67.165
 1642      E3
 1643              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1644              		.loc 1 685 29 view .LVU484
 1645 09b3 C57E7F24 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm12	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B],
 1645      11
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1646              		.loc 1 684 48 is_stmt 1 view .LVU485
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/cct11Qa0.s 			page 48


 1647              		.loc 1 684 12 view .LVU486
 1648 09b8 4883C220 		add	rdx, 32	# ivtmp.201,
 1649              	.L195:
 1650              		.loc 1 685 9 view .LVU487
 1651              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1652              		.loc 1 685 54 is_stmt 0 view .LVU488
 1653 09bc C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp1095, MEM[base: vectp.159_10, index: ivtmp.201_467, offs
 1653      16
 1654              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1655              		.loc 1 685 99 view .LVU489
 1656 09c1 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rdx]	# tmp1096, MEM[base: vectp.163_17, index: ivtmp.201_467, offse
 1656      3C10
 1657              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1658              		.loc 1 685 54 view .LVU490
 1659 09c7 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__62.161, tmp1095, _184
 1660              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1661              		.loc 1 685 99 view .LVU491
 1662 09cb C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__67.165, tmp1096, _182
 1663              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1664              		.loc 1 685 72 view .LVU492
 1665 09cf C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.166, vect__62.161, vect__67.165
 1666              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1667              		.loc 1 685 29 view .LVU493
 1668 09d3 C5FE7F14 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm2	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B], 
 1668      11
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1669              		.loc 1 684 48 is_stmt 1 view .LVU494
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1670              		.loc 1 684 12 view .LVU495
 1671 09d8 4883C220 		add	rdx, 32	# ivtmp.201,
 1672              	.L194:
 1673              		.loc 1 685 9 view .LVU496
 1674              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1675              		.loc 1 685 54 is_stmt 0 view .LVU497
 1676 09dc C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp1097, MEM[base: vectp.159_10, index: ivtmp.201_467, offse
 1676      16
 1677              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1678              		.loc 1 685 99 view .LVU498
 1679 09e1 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1098, MEM[base: vectp.163_17, index: ivtmp.201_467, offset
 1679      1C10
 1680              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1681              		.loc 1 685 54 view .LVU499
 1682 09e7 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__62.161, tmp1097, _184
 1683              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1684              		.loc 1 685 99 view .LVU500
 1685 09eb C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__67.165, tmp1098, _182
 1686              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1687              		.loc 1 685 72 view .LVU501
 1688 09ef C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.166, vect__62.161, vect__67.165
 1689              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1690              		.loc 1 685 29 view .LVU502
 1691 09f3 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm8	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B], 
 1691      11
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1692              		.loc 1 684 48 is_stmt 1 view .LVU503
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1693              		.loc 1 684 12 view .LVU504
GAS LISTING /tmp/cct11Qa0.s 			page 49


 1694 09f8 4883C220 		add	rdx, 32	# ivtmp.201,
 1695 09fc 4C39D2   		cmp	rdx, r10	# ivtmp.201, _469
 1696 09ff 0F842E01 		je	.L247	#,
 1696      0000
 1697              	.L72:
 1698              		.loc 1 685 9 discriminator 2 view .LVU505
 1699              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1700              		.loc 1 685 54 is_stmt 0 discriminator 2 view .LVU506
 1701 0a05 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp1015, MEM[base: vectp.159_10, index: ivtmp.201_467, offse
 1701      16
 1702              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1703              		.loc 1 685 99 discriminator 2 view .LVU507
 1704 0a0a C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r8+rdx]	# tmp1016, MEM[base: vectp.163_17, index: ivtmp.201_467, offse
 1704      1C10
 1705              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1706              		.loc 1 685 54 discriminator 2 view .LVU508
 1707 0a10 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__62.161, tmp1015, _184
 1708              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1709              		.loc 1 685 99 discriminator 2 view .LVU509
 1710 0a14 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__67.165, tmp1016, _182
 1711              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1712              		.loc 1 685 72 discriminator 2 view .LVU510
 1713 0a18 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.166, vect__62.161, vect__67.165
 1713      EC
 1714              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1715              		.loc 1 685 29 discriminator 2 view .LVU511
 1716 0a1d C57E7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm13	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B],
 1716      11
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1717              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU512
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1718              		.loc 1 684 12 discriminator 2 view .LVU513
 1719              		.loc 1 685 9 discriminator 2 view .LVU514
 1720              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1721              		.loc 1 685 54 is_stmt 0 discriminator 2 view .LVU515
 1722 0a22 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp1017, MEM[base: vectp.159_10, index: ivtmp.201_467, of
 1722      1620
 1723              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1724              		.loc 1 685 99 discriminator 2 view .LVU516
 1725 0a28 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r8+rdx]	# tmp1018, MEM[base: vectp.163_17, index: ivtmp.201_467, offs
 1725      741020
 1726              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1727              		.loc 1 685 54 discriminator 2 view .LVU517
 1728 0a2f C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__62.161, tmp1017, _184
 1729              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1730              		.loc 1 685 99 discriminator 2 view .LVU518
 1731 0a33 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__67.165, tmp1018, _182
 1732              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1733              		.loc 1 685 72 discriminator 2 view .LVU519
 1734 0a37 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.166, vect__62.161, vect__67.165
 1735              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1736              		.loc 1 685 29 discriminator 2 view .LVU520
 1737 0a3b C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rcx+rdx], ymm7	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B]
 1737      1120
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1738              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU521
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/cct11Qa0.s 			page 50


 1739              		.loc 1 684 12 discriminator 2 view .LVU522
 1740              		.loc 1 685 9 discriminator 2 view .LVU523
 1741              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1742              		.loc 1 685 54 is_stmt 0 discriminator 2 view .LVU524
 1743 0a41 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp1019, MEM[base: vectp.159_10, index: ivtmp.201_467, off
 1743      1640
 1744              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1745              		.loc 1 685 99 discriminator 2 view .LVU525
 1746 0a47 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r8+rdx]	# tmp1020, MEM[base: vectp.163_17, index: ivtmp.201_467, offs
 1746      5C1040
 1747              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1748              		.loc 1 685 54 discriminator 2 view .LVU526
 1749 0a4e C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__62.161, tmp1019, _184
 1750              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1751              		.loc 1 685 99 discriminator 2 view .LVU527
 1752 0a52 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__67.165, tmp1020, _182
 1753              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1754              		.loc 1 685 72 discriminator 2 view .LVU528
 1755 0a56 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.166, vect__62.161, vect__67.165
 1755      C8
 1756              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1757              		.loc 1 685 29 discriminator 2 view .LVU529
 1758 0a5b C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rdx], ymm9	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B]
 1758      1140
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1759              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU530
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1760              		.loc 1 684 12 discriminator 2 view .LVU531
 1761              		.loc 1 685 9 discriminator 2 view .LVU532
 1762              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1763              		.loc 1 685 54 is_stmt 0 discriminator 2 view .LVU533
 1764 0a61 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp1021, MEM[base: vectp.159_10, index: ivtmp.201_467, of
 1764      1660
 1765              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1766              		.loc 1 685 99 discriminator 2 view .LVU534
 1767 0a67 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r8+rdx]	# tmp1022, MEM[base: vectp.163_17, index: ivtmp.201_467, off
 1767      641060
 1768              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1769              		.loc 1 685 54 discriminator 2 view .LVU535
 1770 0a6e C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__62.161, tmp1021, _184
 1771              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1772              		.loc 1 685 99 discriminator 2 view .LVU536
 1773 0a72 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__67.165, tmp1022, _182
 1774              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1775              		.loc 1 685 72 discriminator 2 view .LVU537
 1776 0a76 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.166, vect__62.161, vect__67.165
 1776      F5
 1777              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1778              		.loc 1 685 29 discriminator 2 view .LVU538
 1779 0a7b C57E7F74 		vmovdqu	YMMWORD PTR 96[rcx+rdx], ymm14	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B
 1779      1160
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1780              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU539
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1781              		.loc 1 684 12 discriminator 2 view .LVU540
 1782              		.loc 1 685 9 discriminator 2 view .LVU541
 1783              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/cct11Qa0.s 			page 51


 1784              		.loc 1 685 54 is_stmt 0 discriminator 2 view .LVU542
 1785 0a81 C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp1023, MEM[base: vectp.159_10, index: ivtmp.201_467, o
 1785      16800000 
 1785      00
 1786              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1787              		.loc 1 685 99 discriminator 2 view .LVU543
 1788 0a8a C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r8+rdx]	# tmp1024, MEM[base: vectp.163_17, index: ivtmp.201_467, off
 1788      94108000 
 1788      0000
 1789              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1790              		.loc 1 685 54 discriminator 2 view .LVU544
 1791 0a94 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__62.161, tmp1023, _184
 1792              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1793              		.loc 1 685 99 discriminator 2 view .LVU545
 1794 0a98 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__67.165, tmp1024, _182
 1795              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1796              		.loc 1 685 72 discriminator 2 view .LVU546
 1797 0a9c C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.166, vect__62.161, vect__67.165
 1798              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1799              		.loc 1 685 29 discriminator 2 view .LVU547
 1800 0aa0 C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rcx+rdx], ymm4	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B
 1800      11800000 
 1800      00
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1801              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU548
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1802              		.loc 1 684 12 discriminator 2 view .LVU549
 1803              		.loc 1 685 9 discriminator 2 view .LVU550
 1804              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1805              		.loc 1 685 54 is_stmt 0 discriminator 2 view .LVU551
 1806 0aa9 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp1025, MEM[base: vectp.159_10, index: ivtmp.201_467, of
 1806      16A00000 
 1806      00
 1807              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1808              		.loc 1 685 99 discriminator 2 view .LVU552
 1809 0ab2 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r8+rdx]	# tmp1026, MEM[base: vectp.163_17, index: ivtmp.201_467, off
 1809      9C10A000 
 1809      0000
 1810              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1811              		.loc 1 685 54 discriminator 2 view .LVU553
 1812 0abc C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.161, tmp1025, _184
 1813              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1814              		.loc 1 685 99 discriminator 2 view .LVU554
 1815 0ac0 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__67.165, tmp1026, _182
 1816              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1817              		.loc 1 685 72 discriminator 2 view .LVU555
 1818 0ac4 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.166, vect__62.161, vect__67.165
 1818      D1
 1819              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1820              		.loc 1 685 29 discriminator 2 view .LVU556
 1821 0ac9 C57E7F94 		vmovdqu	YMMWORD PTR 160[rcx+rdx], ymm10	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0
 1821      11A00000 
 1821      00
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1822              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU557
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1823              		.loc 1 684 12 discriminator 2 view .LVU558
GAS LISTING /tmp/cct11Qa0.s 			page 52


 1824              		.loc 1 685 9 discriminator 2 view .LVU559
 1825              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1826              		.loc 1 685 54 is_stmt 0 discriminator 2 view .LVU560
 1827 0ad2 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp1027, MEM[base: vectp.159_10, index: ivtmp.201_467, o
 1827      16C00000 
 1827      00
 1828              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1829              		.loc 1 685 99 discriminator 2 view .LVU561
 1830 0adb C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r8+rdx]	# tmp1028, MEM[base: vectp.163_17, index: ivtmp.201_467, of
 1830      AC10C000 
 1830      0000
 1831              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1832              		.loc 1 685 54 discriminator 2 view .LVU562
 1833 0ae5 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__62.161, tmp1027, _184
 1834              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1835              		.loc 1 685 99 discriminator 2 view .LVU563
 1836 0ae9 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__67.165, tmp1028, _182
 1837              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1838              		.loc 1 685 72 discriminator 2 view .LVU564
 1839 0aed C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.166, vect__62.161, vect__67.165
 1839      FE
 1840              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1841              		.loc 1 685 29 discriminator 2 view .LVU565
 1842 0af2 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rcx+rdx], ymm15	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0
 1842      11C00000 
 1842      00
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1843              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU566
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1844              		.loc 1 684 12 discriminator 2 view .LVU567
 1845              		.loc 1 685 9 discriminator 2 view .LVU568
 1846              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1847              		.loc 1 685 54 is_stmt 0 discriminator 2 view .LVU569
 1848 0afb C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp1029, MEM[base: vectp.159_10, index: ivtmp.201_467, of
 1848      16E00000 
 1848      00
 1849              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1850              		.loc 1 685 99 discriminator 2 view .LVU570
 1851 0b04 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rdx]	# tmp1030, MEM[base: vectp.163_17, index: ivtmp.201_467, off
 1851      BC10E000 
 1851      0000
 1852              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1853              		.loc 1 685 54 discriminator 2 view .LVU571
 1854 0b0e C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.161, tmp1029, _184
 1855              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1856              		.loc 1 685 99 discriminator 2 view .LVU572
 1857 0b12 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__67.165, tmp1030, _182
 1858              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1859              		.loc 1 685 72 discriminator 2 view .LVU573
 1860 0b16 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.166, vect__62.161, vect__67.165
 1861              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1862              		.loc 1 685 29 discriminator 2 view .LVU574
 1863 0b1a C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rcx+rdx], ymm5	# MEM[base: vectp.168_212, index: ivtmp.201_467, offset: 0B
 1863      11E00000 
 1863      00
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1864              		.loc 1 684 48 is_stmt 1 discriminator 2 view .LVU575
GAS LISTING /tmp/cct11Qa0.s 			page 53


 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1865              		.loc 1 684 12 discriminator 2 view .LVU576
 1866 0b23 4881C200 		add	rdx, 256	# ivtmp.201,
 1866      010000
 1867 0b2a 4C39D2   		cmp	rdx, r10	# ivtmp.201, _469
 1868 0b2d 0F85D2FE 		jne	.L72	#,
 1868      FFFF
 1869              	.L247:
 1870 0b33 4C8B5424 		mov	r10, QWORD PTR -40[rsp]	# source_word, %sfp
 1870      D8
 1871 0b38 4C89CB   		mov	rbx, r9	# niters_vector_mult_vf.155, niters.153
 1872 0b3b 4883E3FC 		and	rbx, -4	# niters_vector_mult_vf.155,
 1873 0b3f 4901DC   		add	r12, rbx	# tmp.156, niters_vector_mult_vf.155
 1874 0b42 4901DA   		add	r10, rbx	# source_word, niters_vector_mult_vf.155
 1875 0b45 4C39CB   		cmp	rbx, r9	# niters_vector_mult_vf.155, niters.153
 1876 0b48 0F844207 		je	.L260	#,
 1876      0000
 1877              	.LVL79:
 1878              		.loc 1 685 9 view .LVU577
 1879              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1880              		.loc 1 684 5 is_stmt 0 view .LVU578
 1881 0b4e 488B5424 		mov	rdx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1881      F8
 1882              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1883              		.loc 1 684 57 view .LVU579
 1884 0b53 4D8D5C24 		lea	r11, 1[r12]	# copy_word,
 1884      01
 1885              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1886              		.loc 1 685 99 view .LVU580
 1887 0b58 C42289F7 		shlx	r8, QWORD PTR 8[rdi+r10*8], r14	# tmp545, *_66, shift
 1887      44D708
 1888              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1889              		.loc 1 685 54 view .LVU581
 1890 0b5f C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r10*8], rax	# tmp547, *_61, shift_flipped
 1890      34D7
 1891              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1892              		.loc 1 685 72 view .LVU582
 1893 0b65 4909F0   		or	r8, rsi	# tmp549, tmp547
 1894              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1895              		.loc 1 685 83 view .LVU583
 1896 0b68 4D8D4A01 		lea	r9, 1[r10]	# _64,
 1897              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1898              		.loc 1 685 72 view .LVU584
 1899 0b6c 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# *_70, tmp549
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1900              		.loc 1 684 48 is_stmt 1 view .LVU585
 1901              	.LVL80:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1902              		.loc 1 684 12 view .LVU586
 1903              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1904              		.loc 1 684 5 is_stmt 0 view .LVU587
 1905 0b70 4939D3   		cmp	r11, rdx	# copy_word, destination_stop_word
 1906 0b73 0F871707 		ja	.L260	#,
 1906      0000
GAS LISTING /tmp/cct11Qa0.s 			page 54


 1907              		.loc 1 685 9 is_stmt 1 view .LVU588
 1908              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1909              		.loc 1 684 57 is_stmt 0 view .LVU589
 1910 0b79 4983C402 		add	r12, 2	# copy_word,
 1911              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1912              		.loc 1 685 99 view .LVU590
 1913 0b7d C4A289F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r14	# tmp550, *_53, shift
 1913      4CCF08
 1914              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1915              		.loc 1 685 54 view .LVU591
 1916 0b84 4A8B1CCF 		mov	rbx, QWORD PTR [rdi+r9*8]	# *_48, *_48
 1917              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1918              		.loc 1 685 83 view .LVU592
 1919 0b88 4983C202 		add	r10, 2	# _51,
 1920              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1921              		.loc 1 685 54 view .LVU593
 1922 0b8c C462FBF7 		shrx	r9, rbx, rax	# tmp552, *_48, shift_flipped
 1922      CB
 1923              	.LVL81:
 1924              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1925              		.loc 1 685 72 view .LVU594
 1926 0b91 4C09C9   		or	rcx, r9	# tmp554, tmp552
 1927 0b94 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_57, tmp554
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1928              		.loc 1 684 48 is_stmt 1 view .LVU595
 1929              	.LVL82:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1930              		.loc 1 684 12 view .LVU596
 1931              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1932              		.loc 1 684 5 is_stmt 0 view .LVU597
 1933 0b98 4C39E2   		cmp	rdx, r12	# destination_stop_word, copy_word
 1934 0b9b 0F82EF06 		jb	.L260	#,
 1934      0000
 1935              		.loc 1 685 9 is_stmt 1 view .LVU598
 1936              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1937              		.loc 1 685 99 is_stmt 0 view .LVU599
 1938 0ba1 C42289F7 		shlx	r14, QWORD PTR 8[rdi+r10*8], r14	# tmp555, *_36, shift
 1938      74D708
 1939              	.LVL83:
 1940              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1941              		.loc 1 685 54 view .LVU600
 1942 0ba8 4E8B14D7 		mov	r10, QWORD PTR [rdi+r10*8]	# *_30, *_30
 1943              	.LVL84:
 1944              		.loc 1 685 54 view .LVU601
 1945 0bac C4C2FBF7 		shrx	rax, r10, rax	# tmp557, *_30, shift_flipped
 1945      C2
 1946              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1947              		.loc 1 685 72 view .LVU602
 1948 0bb1 4C09F0   		or	rax, r14	# tmp559, tmp555
 1949 0bb4 4A8904E7 		mov	QWORD PTR [rdi+r12*8], rax	# *_40, tmp559
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1950              		.loc 1 684 48 is_stmt 1 view .LVU603
 1951              	.LVL85:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1952              		.loc 1 684 12 view .LVU604
GAS LISTING /tmp/cct11Qa0.s 			page 55


 1953 0bb8 C5F877   		vzeroupper
 1954              	.LVL86:
 1955              	.L76:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1956              		.loc 1 684 12 is_stmt 0 view .LVU605
 1957 0bbb 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1957      E8
 1958 0bc0 B9000000 		mov	ecx, 0	# tmp544,
 1958      00
 1959 0bc5 4C8B6424 		mov	r12, QWORD PTR -32[rsp]	#, %sfp
 1959      E0
 1960 0bca 490F46CC 		cmovbe	rcx, r12	#,, tmp543
 1961 0bce 4C01E9   		add	rcx, r13	# copy_word, _175
 1962              	.L69:
 686:sieve_extend.c ****     }
 687:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1963              		.loc 1 687 5 is_stmt 1 view .LVU606
 1964              	# sieve_extend.c:687:     bitarray[copy_word] &= chopmask(destination_stop);
 1965              		.loc 1 687 25 is_stmt 0 view .LVU607
 1966 0bd1 4C213CCF 		and	QWORD PTR [rdi+rcx*8], r15	# *_72, _193
 1967              	# sieve_extend.c:689: }
 688:sieve_extend.c **** 
 689:sieve_extend.c **** }
 1968              		.loc 1 689 1 view .LVU608
 1969 0bd5 488D65D8 		lea	rsp, -40[rbp]	#,
 1970 0bd9 5B       		pop	rbx	#
 1971 0bda 415C     		pop	r12	#
 1972 0bdc 415D     		pop	r13	#
 1973 0bde 415E     		pop	r14	#
 1974 0be0 415F     		pop	r15	#
 1975 0be2 5D       		pop	rbp	#
 1976              		.cfi_remember_state
 1977              		.cfi_def_cfa 7, 8
 1978 0be3 C3       		ret	
 1979              	.LVL87:
 1980              		.p2align 4,,7
 1981 0be4 0F1F4000 		.p2align 3
 1982              	.L264:
 1983              		.cfi_restore_state
 1984              	.LBB268:
 674:sieve_extend.c **** 
 1985              		.loc 1 674 9 is_stmt 1 view .LVU609
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1986              		.loc 1 678 9 view .LVU610
 1987              	.LBB269:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1988              		.loc 1 678 14 view .LVU611
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1989              		.loc 1 678 40 view .LVU612
 1990              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1991              		.loc 1 678 9 is_stmt 0 view .LVU613
 1992 0be8 4C8B6C24 		mov	r13, QWORD PTR -8[rsp]	# loop_distance, %sfp
 1992      F8
 1993 0bed 4889F2   		mov	rdx, rsi	# source_word, source_word
 1994              	.LVL88:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/cct11Qa0.s 			page 56


 1995              		.loc 1 678 9 view .LVU614
 1996 0bf0 4929CD   		sub	r13, rcx	# loop_distance, copy_word
 1997 0bf3 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, loop_distance
 1997      E8
 1998 0bf8 0F84FB03 		je	.L65	#,
 1998      0000
 1999 0bfe 4D8D5424 		lea	r10, 8[r12]	# tmp413,
 1999      08
 2000 0c03 4C8D4B28 		lea	r9, 40[rbx]	# tmp412,
 2001 0c07 4D39D1   		cmp	r9, r10	# tmp412, tmp413
 2002 0c0a 4C8D6B08 		lea	r13, 8[rbx]	# tmp417,
 2003 0c0e 410F9EC1 		setle	r9b	#, tmp415
 2004 0c12 4983C428 		add	r12, 40	# tmp416,
 2005 0c16 4D39EC   		cmp	r12, r13	# tmp416, tmp417
 2006 0c19 488D5601 		lea	rdx, 1[rsi]	# _232,
 2007 0c1d 410F9EC5 		setle	r13b	#, tmp419
 2008 0c21 4509E9   		or	r9d, r13d	# tmp420, tmp419
 2009 0c24 4C8D6B20 		lea	r13, 32[rbx]	# tmp421,
 2010 0c28 4D39D5   		cmp	r13, r10	# tmp421, tmp413
 2011 0c2b 410F9EC2 		setle	r10b	#, tmp424
 2012 0c2f 4939DC   		cmp	r12, rbx	# tmp416, _179
 2013 0c32 410F9EC4 		setle	r12b	#, tmp427
 2014 0c36 4509E2   		or	r10d, r12d	# tmp428, tmp427
 2015 0c39 4584D1   		test	r9b, r10b	# tmp420, tmp428
 2016 0c3c 0F846706 		je	.L60	#,
 2016      0000
 2017 0c42 4C8B4C24 		mov	r9, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2017      E8
 2018 0c47 4D8D69FF 		lea	r13, -1[r9]	# tmp430,
 2019 0c4b 4983FD05 		cmp	r13, 5	# tmp430,
 2020 0c4f 0F865406 		jbe	.L60	#,
 2020      0000
 2021 0c55 4D89D9   		mov	r9, r11	# tmp433, _180
 2022              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2023              		.loc 1 678 33 view .LVU615
 2024 0c58 4531E4   		xor	r12d, r12d	# i
 2025 0c5b 49C1E903 		shr	r9, 3	# tmp433,
 2026 0c5f 49F7D9   		neg	r9	# tmp434
 2027 0c62 4183E103 		and	r9d, 3	# prolog_loop_niters.171,
 2028 0c66 7468     		je	.L61	#,
 679:sieve_extend.c ****         }
 2029              		.loc 1 679 13 is_stmt 1 view .LVU616
 2030              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2031              		.loc 1 679 109 is_stmt 0 view .LVU617
 2032 0c68 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_428, *_428
 2032      08
 2033 0c6d C46289F7 		shlx	r10, rbx, r14	# tmp435, *_428, shift
 2033      D3
 2034              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2035              		.loc 1 679 62 view .LVU618
 2036 0c72 4D8B1B   		mov	r11, QWORD PTR [r11]	# *_180, *_180
 2037 0c75 C442FBF7 		shrx	r12, r11, rax	# tmp437, *_180, shift_flipped
 2037      E3
 2038              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/cct11Qa0.s 			page 57


 679:sieve_extend.c ****         }
 2039              		.loc 1 679 80 view .LVU619
 2040 0c7a 4D09E2   		or	r10, r12	# tmp439, tmp437
 2041 0c7d 4983F901 		cmp	r9, 1	# prolog_loop_niters.171,
 2042 0c81 4C8914CF 		mov	QWORD PTR [rdi+rcx*8], r10	# *_433, tmp439
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2043              		.loc 1 678 58 is_stmt 1 view .LVU620
 2044              	.LVL89:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2045              		.loc 1 678 40 view .LVU621
 2046              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2047              		.loc 1 678 59 is_stmt 0 view .LVU622
 2048 0c85 41BC0100 		mov	r12d, 1	# i,
 2048      0000
 2049 0c8b 7443     		je	.L61	#,
 679:sieve_extend.c ****         }
 2050              		.loc 1 679 13 is_stmt 1 view .LVU623
 2051              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2052              		.loc 1 679 109 is_stmt 0 view .LVU624
 2053 0c8d C46289F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r14	# tmp441, *_448, shift
 2053      6CD708
 2054              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2055              		.loc 1 679 62 view .LVU625
 2056 0c94 C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rdx*8], rax	# tmp443, *_443, shift_flipped
 2056      1CD7
 2057              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2058              		.loc 1 679 80 view .LVU626
 2059 0c9a 4909DD   		or	r13, rbx	# tmp445, tmp443
 2060 0c9d 4983F903 		cmp	r9, 3	# prolog_loop_niters.171,
 2061 0ca1 4E896CC7 		mov	QWORD PTR 16[rdi+r8*8], r13	# *_453, tmp445
 2061      10
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2062              		.loc 1 678 58 is_stmt 1 view .LVU627
 2063              	.LVL90:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2064              		.loc 1 678 40 view .LVU628
 2065              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2066              		.loc 1 678 59 is_stmt 0 view .LVU629
 2067 0ca6 41BC0200 		mov	r12d, 2	# i,
 2067      0000
 2068 0cac 7522     		jne	.L61	#,
 679:sieve_extend.c ****         }
 2069              		.loc 1 679 13 is_stmt 1 view .LVU630
 2070              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2071              		.loc 1 679 58 is_stmt 0 view .LVU631
 2072 0cae 4C8D5E02 		lea	r11, 2[rsi]	# tmp446,
 2073              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2074              		.loc 1 679 109 view .LVU632
 2075 0cb2 C42289F7 		shlx	r10, QWORD PTR 8[rdi+r11*8], r14	# tmp448, *_286, shift
 2075      54DF08
GAS LISTING /tmp/cct11Qa0.s 			page 58


 2076              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2077              		.loc 1 679 62 view .LVU633
 2078 0cb9 4E8B24DF 		mov	r12, QWORD PTR [rdi+r11*8]	# *_281, *_281
 2079 0cbd C442FBF7 		shrx	r13, r12, rax	# tmp450, *_281, shift_flipped
 2079      EC
 2080              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2081              		.loc 1 679 80 view .LVU634
 2082 0cc2 4D09EA   		or	r10, r13	# tmp452, tmp450
 2083              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2084              		.loc 1 678 59 view .LVU635
 2085 0cc5 41BC0300 		mov	r12d, 3	# i,
 2085      0000
 2086              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2087              		.loc 1 679 80 view .LVU636
 2088 0ccb 4E8954C7 		mov	QWORD PTR 24[rdi+r8*8], r10	# *_291, tmp452
 2088      18
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2089              		.loc 1 678 58 is_stmt 1 view .LVU637
 2090              	.LVL91:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2091              		.loc 1 678 40 view .LVU638
 2092              	.L61:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2093              		.loc 1 678 40 is_stmt 0 view .LVU639
 2094 0cd0 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# niters.172, %sfp
 2094      E8
 2095 0cd5 4E8D040E 		lea	r8, [rsi+r9]	# tmp453,
 2096 0cd9 4E8D14C7 		lea	r10, [rdi+r8*8]	# vectp.177,
 2097 0cdd 4C01CA   		add	rdx, r9	# tmp455, prolog_loop_niters.171
 2098 0ce0 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 2098      24F0
 2099 0ce6 4C8D1CD7 		lea	r11, [rdi+rdx*8]	# vectp.181,
 2100 0cea 4C29CB   		sub	rbx, r9	# niters.172, prolog_loop_niters.171
 2101              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2102              		.loc 1 678 33 view .LVU640
 2103 0ced 31D2     		xor	edx, edx	# ivtmp.220
 2104 0cef 4989DD   		mov	r13, rbx	# bnd.173, niters.172
 2105 0cf2 4901C9   		add	r9, rcx	# tmp457, copy_word
 2106 0cf5 49C1ED02 		shr	r13, 2	# bnd.173,
 2107 0cf9 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.186,
 2108 0cfd 49C1E505 		sal	r13, 5	# bnd.173,
 2109 0d01 C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 2109      24F4
 2110 0d07 4D8D45E0 		lea	r8, -32[r13]	# tmp582,
 2111 0d0b 49C1E805 		shr	r8, 5	# tmp580,
 2112 0d0f 4983C001 		add	r8, 1	# tmp583,
 2113 0d13 4183E007 		and	r8d, 7	# tmp584,
 2114 0d17 0F840901 		je	.L63	#,
 2114      0000
 2115 0d1d 4983F801 		cmp	r8, 1	# tmp584,
 2116 0d21 0F84D300 		je	.L182	#,
 2116      0000
GAS LISTING /tmp/cct11Qa0.s 			page 59


 2117 0d27 4983F802 		cmp	r8, 2	# tmp584,
 2118 0d2b 0F84A600 		je	.L183	#,
 2118      0000
 2119 0d31 4983F803 		cmp	r8, 3	# tmp584,
 2120 0d35 747E     		je	.L184	#,
 2121 0d37 4983F804 		cmp	r8, 4	# tmp584,
 2122 0d3b 7455     		je	.L185	#,
 2123 0d3d 4983F805 		cmp	r8, 5	# tmp584,
 2124 0d41 742D     		je	.L186	#,
 2125 0d43 4983F806 		cmp	r8, 6	# tmp584,
 2126 0d47 0F858007 		jne	.L265	#,
 2126      0000
 2127              	.L187:
 679:sieve_extend.c ****         }
 2128              		.loc 1 679 13 is_stmt 1 view .LVU641
 2129              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2130              		.loc 1 679 62 is_stmt 0 view .LVU642
 2131 0d4d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r10+rdx]	# tmp1073, MEM[base: vectp.177_325, index: ivtmp.220_483, off
 2131      2412
 2132              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2133              		.loc 1 679 109 view .LVU643
 2134 0d53 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rdx]	# tmp1074, MEM[base: vectp.181_332, index: ivtmp.220_483, off
 2134      3413
 2135              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2136              		.loc 1 679 62 view .LVU644
 2137 0d59 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.179, tmp1073, _184
 2138              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2139              		.loc 1 679 109 view .LVU645
 2140 0d5d C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.183, tmp1074, _182
 2141              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2142              		.loc 1 679 80 view .LVU646
 2143 0d61 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.184, vect__49.179, vect__54.183
 2143      F7
 2144              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2145              		.loc 1 679 35 view .LVU647
 2146 0d66 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm6	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B], v
 2146      3411
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2147              		.loc 1 678 58 is_stmt 1 view .LVU648
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2148              		.loc 1 678 40 view .LVU649
 2149 0d6c 4883C220 		add	rdx, 32	# ivtmp.220,
 2150              	.L186:
 679:sieve_extend.c ****         }
 2151              		.loc 1 679 13 view .LVU650
 2152              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2153              		.loc 1 679 62 is_stmt 0 view .LVU651
 2154 0d70 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r10+rdx]	# tmp1075, MEM[base: vectp.177_325, index: ivtmp.220_483, offs
 2154      1412
 2155              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/cct11Qa0.s 			page 60


 679:sieve_extend.c ****         }
 2156              		.loc 1 679 109 view .LVU652
 2157 0d76 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r11+rdx]	# tmp1076, MEM[base: vectp.181_332, index: ivtmp.220_483, offs
 2157      2413
 2158              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2159              		.loc 1 679 62 view .LVU653
 2160 0d7c C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.179, tmp1075, _184
 2161              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2162              		.loc 1 679 109 view .LVU654
 2163 0d80 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.183, tmp1076, _182
 2164              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2165              		.loc 1 679 80 view .LVU655
 2166 0d84 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.184, vect__49.179, vect__54.183
 2167              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2168              		.loc 1 679 35 view .LVU656
 2169 0d88 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm8	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B], v
 2169      0411
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2170              		.loc 1 678 58 is_stmt 1 view .LVU657
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2171              		.loc 1 678 40 view .LVU658
 2172 0d8e 4883C220 		add	rdx, 32	# ivtmp.220,
 2173              	.L185:
 679:sieve_extend.c ****         }
 2174              		.loc 1 679 13 view .LVU659
 2175              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2176              		.loc 1 679 62 is_stmt 0 view .LVU660
 2177 0d92 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r10+rdx]	# tmp1077, MEM[base: vectp.177_325, index: ivtmp.220_483, offs
 2177      0C12
 2178              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2179              		.loc 1 679 109 view .LVU661
 2180 0d98 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1078, MEM[base: vectp.181_332, index: ivtmp.220_483, offs
 2180      1C13
 2181              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2182              		.loc 1 679 62 view .LVU662
 2183 0d9e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.179, tmp1077, _184
 2184              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2185              		.loc 1 679 109 view .LVU663
 2186 0da2 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.183, tmp1078, _182
 2187              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2188              		.loc 1 679 80 view .LVU664
 2189 0da6 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.184, vect__49.179, vect__54.183
 2189      E3
 2190              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2191              		.loc 1 679 35 view .LVU665
 2192 0dab C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm12	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B], 
 2192      2411
GAS LISTING /tmp/cct11Qa0.s 			page 61


 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2193              		.loc 1 678 58 is_stmt 1 view .LVU666
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2194              		.loc 1 678 40 view .LVU667
 2195 0db1 4883C220 		add	rdx, 32	# ivtmp.220,
 2196              	.L184:
 679:sieve_extend.c ****         }
 2197              		.loc 1 679 13 view .LVU668
 2198              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2199              		.loc 1 679 62 is_stmt 0 view .LVU669
 2200 0db5 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r10+rdx]	# tmp1079, MEM[base: vectp.177_325, index: ivtmp.220_483, off
 2200      2C12
 2201              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2202              		.loc 1 679 109 view .LVU670
 2203 0dbb C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r11+rdx]	# tmp1080, MEM[base: vectp.181_332, index: ivtmp.220_483, off
 2203      3C13
 2204              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2205              		.loc 1 679 62 view .LVU671
 2206 0dc1 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.179, tmp1079, _184
 2207              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2208              		.loc 1 679 109 view .LVU672
 2209 0dc5 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.183, tmp1080, _182
 2210              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2211              		.loc 1 679 80 view .LVU673
 2212 0dc9 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.184, vect__49.179, vect__54.183
 2213              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2214              		.loc 1 679 35 view .LVU674
 2215 0dcd C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm2	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B], v
 2215      1411
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2216              		.loc 1 678 58 is_stmt 1 view .LVU675
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2217              		.loc 1 678 40 view .LVU676
 2218 0dd3 4883C220 		add	rdx, 32	# ivtmp.220,
 2219              	.L183:
 679:sieve_extend.c ****         }
 2220              		.loc 1 679 13 view .LVU677
 2221              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2222              		.loc 1 679 62 is_stmt 0 view .LVU678
 2223 0dd7 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r10+rdx]	# tmp1081, MEM[base: vectp.177_325, index: ivtmp.220_483, offs
 2223      3C12
 2224              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2225              		.loc 1 679 109 view .LVU679
 2226 0ddd C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r11+rdx]	# tmp1082, MEM[base: vectp.181_332, index: ivtmp.220_483, offs
 2226      2C13
 2227              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2228              		.loc 1 679 62 view .LVU680
 2229 0de3 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.179, tmp1081, _184
GAS LISTING /tmp/cct11Qa0.s 			page 62


 2230              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2231              		.loc 1 679 109 view .LVU681
 2232 0de7 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.183, tmp1082, _182
 2233              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2234              		.loc 1 679 80 view .LVU682
 2235 0deb C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.184, vect__49.179, vect__54.183
 2235      C8
 2236              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2237              		.loc 1 679 35 view .LVU683
 2238 0df0 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm9	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B], v
 2238      0C11
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2239              		.loc 1 678 58 is_stmt 1 view .LVU684
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2240              		.loc 1 678 40 view .LVU685
 2241 0df6 4883C220 		add	rdx, 32	# ivtmp.220,
 2242              	.L182:
 679:sieve_extend.c ****         }
 2243              		.loc 1 679 13 view .LVU686
 2244              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2245              		.loc 1 679 62 is_stmt 0 view .LVU687
 2246 0dfa C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r10+rdx]	# tmp1083, MEM[base: vectp.177_325, index: ivtmp.220_483, off
 2246      1412
 2247              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2248              		.loc 1 679 109 view .LVU688
 2249 0e00 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1084, MEM[base: vectp.181_332, index: ivtmp.220_483, offs
 2249      1C13
 2250              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2251              		.loc 1 679 62 view .LVU689
 2252 0e06 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.179, tmp1083, _184
 2253              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2254              		.loc 1 679 109 view .LVU690
 2255 0e0a C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.183, tmp1084, _182
 2256              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2257              		.loc 1 679 80 view .LVU691
 2258 0e0e C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.184, vect__49.179, vect__54.183
 2258      EC
 2259              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2260              		.loc 1 679 35 view .LVU692
 2261 0e13 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm13	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B], 
 2261      2C11
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2262              		.loc 1 678 58 is_stmt 1 view .LVU693
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2263              		.loc 1 678 40 view .LVU694
 2264 0e19 4883C220 		add	rdx, 32	# ivtmp.220,
 2265 0e1d 4C39EA   		cmp	rdx, r13	# ivtmp.220, _485
 2266 0e20 0F843E01 		je	.L246	#,
GAS LISTING /tmp/cct11Qa0.s 			page 63


 2266      0000
 2267              	.L63:
 679:sieve_extend.c ****         }
 2268              		.loc 1 679 13 discriminator 3 view .LVU695
 2269              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2270              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU696
 2271 0e26 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r10+rdx]	# tmp980, MEM[base: vectp.177_325, index: ivtmp.220_483, offs
 2271      3412
 2272              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2273              		.loc 1 679 109 discriminator 3 view .LVU697
 2274 0e2c C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r11+rdx]	# tmp981, MEM[base: vectp.181_332, index: ivtmp.220_483, offse
 2274      3413
 2275              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2276              		.loc 1 679 62 discriminator 3 view .LVU698
 2277 0e32 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.179, tmp980, _184
 2278              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2279              		.loc 1 679 109 discriminator 3 view .LVU699
 2280 0e36 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.183, tmp981, _182
 2281              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2282              		.loc 1 679 80 discriminator 3 view .LVU700
 2283 0e3a C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.184, vect__49.179, vect__54.183
 2284              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2285              		.loc 1 679 35 discriminator 3 view .LVU701
 2286 0e3e C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm7	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B], v
 2286      3C11
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2287              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU702
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2288              		.loc 1 678 40 discriminator 3 view .LVU703
 679:sieve_extend.c ****         }
 2289              		.loc 1 679 13 discriminator 3 view .LVU704
 2290              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2291              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU705
 2292 0e44 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r10+rdx]	# tmp982, MEM[base: vectp.177_325, index: ivtmp.220_483, off
 2292      641220
 2293              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2294              		.loc 1 679 109 discriminator 3 view .LVU706
 2295 0e4b C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[r11+rdx]	# tmp983, MEM[base: vectp.181_332, index: ivtmp.220_483, off
 2295      6C1320
 2296              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2297              		.loc 1 679 62 discriminator 3 view .LVU707
 2298 0e52 C55DD3C1 		vpsrlq	ymm8, ymm4, xmm1	# vect__49.179, tmp982, _184
 2299              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2300              		.loc 1 679 109 discriminator 3 view .LVU708
 2301 0e56 C555F3C8 		vpsllq	ymm9, ymm5, xmm0	# vect__54.183, tmp983, _182
 2302              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
GAS LISTING /tmp/cct11Qa0.s 			page 64


 2303              		.loc 1 679 80 discriminator 3 view .LVU709
 2304 0e5a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.184, vect__49.179, vect__54.183
 2304      D1
 2305              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2306              		.loc 1 679 35 discriminator 3 view .LVU710
 2307 0e5f C4417E7F 		vmovdqu	YMMWORD PTR 32[r9+rdx], ymm10	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B]
 2307      541120
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2308              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU711
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2309              		.loc 1 678 40 discriminator 3 view .LVU712
 679:sieve_extend.c ****         }
 2310              		.loc 1 679 13 discriminator 3 view .LVU713
 2311              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2312              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU714
 2313 0e66 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r10+rdx]	# tmp984, MEM[base: vectp.177_325, index: ivtmp.220_483, of
 2313      5C1240
 2314              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2315              		.loc 1 679 109 discriminator 3 view .LVU715
 2316 0e6d C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r11+rdx]	# tmp985, MEM[base: vectp.181_332, index: ivtmp.220_483, off
 2316      5C1340
 2317              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2318              		.loc 1 679 62 discriminator 3 view .LVU716
 2319 0e74 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.179, tmp984, _184
 2320              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2321              		.loc 1 679 109 discriminator 3 view .LVU717
 2322 0e78 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.183, tmp985, _182
 2323              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2324              		.loc 1 679 80 discriminator 3 view .LVU718
 2325 0e7c C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.184, vect__49.179, vect__54.183
 2325      F5
 2326              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2327              		.loc 1 679 35 discriminator 3 view .LVU719
 2328 0e81 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rdx], ymm14	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B]
 2328      741140
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2329              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU720
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2330              		.loc 1 678 40 discriminator 3 view .LVU721
 679:sieve_extend.c ****         }
 2331              		.loc 1 679 13 discriminator 3 view .LVU722
 2332              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2333              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU723
 2334 0e88 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r10+rdx]	# tmp986, MEM[base: vectp.177_325, index: ivtmp.220_483, of
 2334      7C1260
 2335              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2336              		.loc 1 679 109 discriminator 3 view .LVU724
 2337 0e8f C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r11+rdx]	# tmp987, MEM[base: vectp.181_332, index: ivtmp.220_483, off
GAS LISTING /tmp/cct11Qa0.s 			page 65


 2337      541360
 2338              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2339              		.loc 1 679 62 discriminator 3 view .LVU725
 2340 0e96 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.179, tmp986, _184
 2341              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2342              		.loc 1 679 109 discriminator 3 view .LVU726
 2343 0e9a C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.183, tmp987, _182
 2344              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2345              		.loc 1 679 80 discriminator 3 view .LVU727
 2346 0e9e C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.184, vect__49.179, vect__54.183
 2347              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2348              		.loc 1 679 35 discriminator 3 view .LVU728
 2349 0ea2 C4C17E7F 		vmovdqu	YMMWORD PTR 96[r9+rdx], ymm4	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B],
 2349      641160
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2350              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU729
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2351              		.loc 1 678 40 discriminator 3 view .LVU730
 679:sieve_extend.c ****         }
 2352              		.loc 1 679 13 discriminator 3 view .LVU731
 2353              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2354              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU732
 2355 0ea9 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 128[r10+rdx]	# tmp988, MEM[base: vectp.177_325, index: ivtmp.220_483, of
 2355      84128000 
 2355      0000
 2356              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2357              		.loc 1 679 109 discriminator 3 view .LVU733
 2358 0eb3 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r11+rdx]	# tmp989, MEM[base: vectp.181_332, index: ivtmp.220_483, of
 2358      8C138000 
 2358      0000
 2359              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2360              		.loc 1 679 62 discriminator 3 view .LVU734
 2361 0ebd C5BDD3E9 		vpsrlq	ymm5, ymm8, xmm1	# vect__49.179, tmp988, _184
 2362              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2363              		.loc 1 679 109 discriminator 3 view .LVU735
 2364 0ec1 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.183, tmp989, _182
 2365              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2366              		.loc 1 679 80 discriminator 3 view .LVU736
 2367 0ec5 C44155EB 		vpor	ymm11, ymm5, ymm10	# vect__58.184, vect__49.179, vect__54.183
 2367      DA
 2368              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2369              		.loc 1 679 35 discriminator 3 view .LVU737
 2370 0eca C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rdx], ymm11	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B
 2370      9C118000 
 2370      0000
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2371              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU738
GAS LISTING /tmp/cct11Qa0.s 			page 66


 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2372              		.loc 1 678 40 discriminator 3 view .LVU739
 679:sieve_extend.c ****         }
 2373              		.loc 1 679 13 discriminator 3 view .LVU740
 2374              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2375              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU741
 2376 0ed4 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r10+rdx]	# tmp990, MEM[base: vectp.177_325, index: ivtmp.220_483, o
 2376      A412A000 
 2376      0000
 2377              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2378              		.loc 1 679 109 discriminator 3 view .LVU742
 2379 0ede C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r11+rdx]	# tmp991, MEM[base: vectp.181_332, index: ivtmp.220_483, of
 2379      9C13A000 
 2379      0000
 2380              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2381              		.loc 1 679 62 discriminator 3 view .LVU743
 2382 0ee8 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.179, tmp990, _184
 2383              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2384              		.loc 1 679 109 discriminator 3 view .LVU744
 2385 0eec C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.183, tmp991, _182
 2386              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2387              		.loc 1 679 80 discriminator 3 view .LVU745
 2388 0ef0 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.184, vect__49.179, vect__54.183
 2388      FE
 2389              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2390              		.loc 1 679 35 discriminator 3 view .LVU746
 2391 0ef5 C4417E7F 		vmovdqu	YMMWORD PTR 160[r9+rdx], ymm15	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B
 2391      BC11A000 
 2391      0000
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2392              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU747
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2393              		.loc 1 678 40 discriminator 3 view .LVU748
 679:sieve_extend.c ****         }
 2394              		.loc 1 679 13 discriminator 3 view .LVU749
 2395              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2396              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU750
 2397 0eff C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r10+rdx]	# tmp992, MEM[base: vectp.177_325, index: ivtmp.220_483, of
 2397      B412C000 
 2397      0000
 2398              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2399              		.loc 1 679 109 discriminator 3 view .LVU751
 2400 0f09 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r11+rdx]	# tmp993, MEM[base: vectp.181_332, index: ivtmp.220_483, of
 2400      BC13C000 
 2400      0000
 2401              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2402              		.loc 1 679 62 discriminator 3 view .LVU752
 2403 0f13 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.179, tmp992, _184
GAS LISTING /tmp/cct11Qa0.s 			page 67


 2404              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2405              		.loc 1 679 109 discriminator 3 view .LVU753
 2406 0f17 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.183, tmp993, _182
 2407              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2408              		.loc 1 679 80 discriminator 3 view .LVU754
 2409 0f1b C56DEBC4 		vpor	ymm8, ymm2, ymm4	# vect__58.184, vect__49.179, vect__54.183
 2410              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2411              		.loc 1 679 35 discriminator 3 view .LVU755
 2412 0f1f C4417E7F 		vmovdqu	YMMWORD PTR 192[r9+rdx], ymm8	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B]
 2412      8411C000 
 2412      0000
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2413              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU756
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2414              		.loc 1 678 40 discriminator 3 view .LVU757
 679:sieve_extend.c ****         }
 2415              		.loc 1 679 13 discriminator 3 view .LVU758
 2416              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2417              		.loc 1 679 62 is_stmt 0 discriminator 3 view .LVU759
 2418 0f29 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 224[r10+rdx]	# tmp994, MEM[base: vectp.177_325, index: ivtmp.220_483, of
 2418      AC12E000 
 2418      0000
 2419              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2420              		.loc 1 679 109 discriminator 3 view .LVU760
 2421 0f33 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r11+rdx]	# tmp995, MEM[base: vectp.181_332, index: ivtmp.220_483, o
 2421      9413E000 
 2421      0000
 2422              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2423              		.loc 1 679 62 discriminator 3 view .LVU761
 2424 0f3d C555D3C9 		vpsrlq	ymm9, ymm5, xmm1	# vect__49.179, tmp994, _184
 2425              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2426              		.loc 1 679 109 discriminator 3 view .LVU762
 2427 0f41 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.183, tmp995, _182
 2428              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2429              		.loc 1 679 80 discriminator 3 view .LVU763
 2430 0f45 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.184, vect__49.179, vect__54.183
 2430      E3
 2431              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2432              		.loc 1 679 35 discriminator 3 view .LVU764
 2433 0f4a C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rdx], ymm12	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B
 2433      A411E000 
 2433      0000
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2434              		.loc 1 678 58 is_stmt 1 discriminator 3 view .LVU765
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2435              		.loc 1 678 40 discriminator 3 view .LVU766
 2436 0f54 4881C200 		add	rdx, 256	# ivtmp.220,
 2436      010000
GAS LISTING /tmp/cct11Qa0.s 			page 68


 2437 0f5b 4C39EA   		cmp	rdx, r13	# ivtmp.220, _485
 2438 0f5e 0F85C2FE 		jne	.L63	#,
 2438      FFFF
 2439              	.L246:
 2440 0f64 4C8B6C24 		mov	r13, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2440      E8
 2441 0f69 4989DA   		mov	r10, rbx	# niters_vector_mult_vf.174, niters.172
 2442 0f6c 4983E2FC 		and	r10, -4	# niters_vector_mult_vf.174,
 2443 0f70 4C39D3   		cmp	rbx, r10	# niters.172, niters_vector_mult_vf.174
 2444 0f73 4F8D2414 		lea	r12, [r12+r10]	# tmp.175,
 2445 0f77 4A8D142E 		lea	rdx, [rsi+r13]	# source_word,
 2446 0f7b 0F840703 		je	.L258	#,
 2446      0000
 2447              	.LVL92:
 679:sieve_extend.c ****         }
 2448              		.loc 1 679 13 view .LVU767
 2449              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2450              		.loc 1 679 58 is_stmt 0 view .LVU768
 2451 0f81 4A8D1C26 		lea	rbx, [rsi+r12]	# tmp467,
 2452              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2453              		.loc 1 679 21 view .LVU769
 2454 0f85 4E8D1C21 		lea	r11, [rcx+r12]	# tmp468,
 2455              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2456              		.loc 1 679 62 view .LVU770
 2457 0f89 4C8B04DF 		mov	r8, QWORD PTR [rdi+rbx*8]	# *_386, *_386
 2458              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2459              		.loc 1 679 109 view .LVU771
 2460 0f8d C46289F7 		shlx	r9, QWORD PTR 8[rdi+rbx*8], r14	# tmp469, *_391, shift
 2460      4CDF08
 2461              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2462              		.loc 1 679 62 view .LVU772
 2463 0f94 C442FBF7 		shrx	r10, r8, rax	# tmp471, *_386, shift_flipped
 2463      D0
 2464              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2465              		.loc 1 679 80 view .LVU773
 2466 0f99 4D09D1   		or	r9, r10	# tmp473, tmp471
 2467 0f9c 4E890CDF 		mov	QWORD PTR [rdi+r11*8], r9	# *_396, tmp473
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2468              		.loc 1 678 58 is_stmt 1 view .LVU774
 2469              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2470              		.loc 1 678 59 is_stmt 0 view .LVU775
 2471 0fa0 4D8D4C24 		lea	r9, 1[r12]	# i,
 2471      01
 2472              	.LVL93:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2473              		.loc 1 678 40 is_stmt 1 view .LVU776
 2474              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2475              		.loc 1 678 9 is_stmt 0 view .LVU777
 2476 0fa5 4D39CD   		cmp	r13, r9	# loop_distance, i
GAS LISTING /tmp/cct11Qa0.s 			page 69


 2477 0fa8 0F86DA02 		jbe	.L258	#,
 2477      0000
 679:sieve_extend.c ****         }
 2478              		.loc 1 679 13 is_stmt 1 view .LVU778
 2479              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2480              		.loc 1 679 58 is_stmt 0 view .LVU779
 2481 0fae 4A8D1C0E 		lea	rbx, [rsi+r9]	# tmp474,
 2482              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2483              		.loc 1 678 59 view .LVU780
 2484 0fb2 4983C402 		add	r12, 2	# i,
 2485              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2486              		.loc 1 679 62 view .LVU781
 2487 0fb6 4C8B1CDF 		mov	r11, QWORD PTR [rdi+rbx*8]	# *_404, *_404
 2488              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2489              		.loc 1 679 21 view .LVU782
 2490 0fba 4901C9   		add	r9, rcx	# tmp475, copy_word
 2491              	.LVL94:
 2492              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2493              		.loc 1 679 109 view .LVU783
 2494 0fbd C46289F7 		shlx	r8, QWORD PTR 8[rdi+rbx*8], r14	# tmp476, *_409, shift
 2494      44DF08
 2495              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2496              		.loc 1 679 62 view .LVU784
 2497 0fc4 C442FBF7 		shrx	r10, r11, rax	# tmp478, *_404, shift_flipped
 2497      D3
 2498              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2499              		.loc 1 679 80 view .LVU785
 2500 0fc9 4D09D0   		or	r8, r10	# tmp480, tmp478
 2501              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2502              		.loc 1 678 9 view .LVU786
 2503 0fcc 4D39E5   		cmp	r13, r12	# loop_distance, i
 2504              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2505              		.loc 1 679 80 view .LVU787
 2506 0fcf 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_414, tmp480
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2507              		.loc 1 678 58 is_stmt 1 view .LVU788
 2508              	.LVL95:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2509              		.loc 1 678 40 view .LVU789
 2510              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2511              		.loc 1 678 9 is_stmt 0 view .LVU790
 2512 0fd3 0F86AF02 		jbe	.L258	#,
 2512      0000
 679:sieve_extend.c ****         }
 2513              		.loc 1 679 13 is_stmt 1 view .LVU791
 2514              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
GAS LISTING /tmp/cct11Qa0.s 			page 70


 2515              		.loc 1 679 58 is_stmt 0 view .LVU792
 2516 0fd9 4C01E6   		add	rsi, r12	# tmp481, i
 2517              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2518              		.loc 1 679 21 view .LVU793
 2519 0fdc 4901CC   		add	r12, rcx	# tmp482, copy_word
 2520              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2521              		.loc 1 679 109 view .LVU794
 2522 0fdf C4E289F7 		shlx	rcx, QWORD PTR 8[rdi+rsi*8], r14	# tmp483, *_311, shift
 2522      4CF708
 2523              	.LVL96:
 2524              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2525              		.loc 1 679 62 view .LVU795
 2526 0fe6 488B34F7 		mov	rsi, QWORD PTR [rdi+rsi*8]	# *_306, *_306
 2527 0fea C462FBF7 		shrx	r14, rsi, rax	# tmp485, *_306, shift_flipped
 2527      F6
 2528              	.LVL97:
 2529              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2530              		.loc 1 679 80 view .LVU796
 2531 0fef 4909CE   		or	r14, rcx	# tmp487, tmp483
 2532 0ff2 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# *_316, tmp487
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2533              		.loc 1 678 58 is_stmt 1 view .LVU797
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2534              		.loc 1 678 40 view .LVU798
 2535 0ff6 C5F877   		vzeroupper
 2536              	.L65:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2537              		.loc 1 678 40 is_stmt 0 view .LVU799
 2538              	.LBE269:
 681:sieve_extend.c ****     }
 2539              		.loc 1 681 9 is_stmt 1 view .LVU800
 681:sieve_extend.c ****     }
 2540              		.loc 1 681 39 view .LVU801
 2541              	.LVL98:
 681:sieve_extend.c ****     }
 2542              		.loc 1 681 39 is_stmt 0 view .LVU802
 2543              	.LBE268:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2544              		.loc 1 684 12 is_stmt 1 view .LVU803
 2545 0ff9 488B4C24 		mov	rcx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2545      F8
 2546 0ffe 48C1E203 		sal	rdx, 3	# _260,
 2547              	.LVL99:
 2548              	.LBB271:
 2549              	# sieve_extend.c:681:         source_word += loop_distance; copy_word+= loop_distance;
 681:sieve_extend.c ****     }
 2550              		.loc 1 681 21 is_stmt 0 view .LVU804
 2551 1002 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2551      E0000000 
 2551      00
 2552 100b 4C8D6901 		lea	r13, 1[rcx]	# _198,
 2553 100f 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, _198
 2553      E8
GAS LISTING /tmp/cct11Qa0.s 			page 71


 2554              	.LVL100:
 2555              	.L59:
 681:sieve_extend.c ****     }
 2556              		.loc 1 681 21 view .LVU805
 2557 1014 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2557      F8
 2558 1019 4801FA   		add	rdx, rdi	# ivtmp.193, bitarray
 2559              	.LBE271:
 2560              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2561              		.loc 1 685 99 view .LVU806
 2562 101c 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp1038, %sfp
 2562      24F4
 2563 1022 C46299F7 		shlx	r14, QWORD PTR 8[rdx], r12	# tmp560, MEM[base: _465, offset: 8B], tmp1038
 2563      7208
 2564              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2565              		.loc 1 685 54 view .LVU807
 2566 1028 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1039, %sfp
 2566      24F0
 2567              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2568              		.loc 1 684 57 view .LVU808
 2569 102e 4C8D6101 		lea	r12, 1[rcx]	# copy_word,
 2570 1032 4D89D8   		mov	r8, r11	# tmp570, destination_stop_word
 2571              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2572              		.loc 1 685 54 view .LVU809
 2573 1035 C4E2ABF7 		shrx	rsi, QWORD PTR [rdx], r10	# tmp562, MEM[base: _465, offset: 0B], tmp1039
 2573      32
 2574 103a 4929C8   		sub	r8, rcx	# tmp570, copy_word
 2575              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2576              		.loc 1 685 72 view .LVU810
 2577 103d 4909F6   		or	r14, rsi	# tmp564, tmp562
 2578 1040 4C8934CF 		mov	QWORD PTR [rdi+rcx*8], r14	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 2579 1044 4183E007 		and	r8d, 7	# tmp571,
 2580              	.LVL101:
 685:sieve_extend.c ****     }
 2581              		.loc 1 685 9 is_stmt 1 view .LVU811
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2582              		.loc 1 684 48 view .LVU812
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2583              		.loc 1 684 12 view .LVU813
 2584              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2585              		.loc 1 684 5 is_stmt 0 view .LVU814
 2586 1048 4D39E3   		cmp	r11, r12	# destination_stop_word, copy_word
 2587 104b 4C8D7208 		lea	r14, 8[rdx]	# ivtmp.193,
 2588 104f 0F8266FB 		jb	.L76	#,
 2588      FFFF
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2589              		.loc 1 684 5 view .LVU815
 2590 1055 4D85C0   		test	r8, r8	# tmp571
 2591 1058 0F844001 		je	.L252	#,
 2591      0000
 2592 105e 4983F801 		cmp	r8, 1	# tmp571,
GAS LISTING /tmp/cct11Qa0.s 			page 72


 2593 1062 0F840601 		je	.L201	#,
 2593      0000
 2594 1068 4983F802 		cmp	r8, 2	# tmp571,
 2595 106c 0F84D800 		je	.L202	#,
 2595      0000
 2596 1072 4983F803 		cmp	r8, 3	# tmp571,
 2597 1076 0F84A900 		je	.L203	#,
 2597      0000
 2598 107c 4983F804 		cmp	r8, 4	# tmp571,
 2599 1080 747D     		je	.L204	#,
 2600 1082 4983F805 		cmp	r8, 5	# tmp571,
 2601 1086 7452     		je	.L205	#,
 2602 1088 4983F806 		cmp	r8, 6	# tmp571,
 2603 108c 7428     		je	.L206	#,
 685:sieve_extend.c ****     }
 2604              		.loc 1 685 9 is_stmt 1 view .LVU816
 2605              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2606              		.loc 1 685 54 is_stmt 0 view .LVU817
 2607 108e 498B06   		mov	rax, QWORD PTR [r14]	# MEM[base: _465, offset: 0B], MEM[base: _465, offset: 0B]
 2608              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2609              		.loc 1 685 99 view .LVU818
 2610 1091 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1042, %sfp
 2610      24F4
 2611 1097 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp777, MEM[base: _465, offset: 8B], tmp1042
 2611      5E08
 2612              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2613              		.loc 1 685 54 view .LVU819
 2614 109d 0FB65C24 		movzx	ebx, BYTE PTR -16[rsp]	# tmp1043, %sfp
 2614      F0
 2615 10a2 C462E3F7 		shrx	r8, rax, rbx	# tmp779, MEM[base: _465, offset: 0B], tmp1043
 2615      C0
 2616              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2617              		.loc 1 685 72 view .LVU820
 2618 10a7 4D09D8   		or	r8, r11	# tmp780, tmp777
 2619 10aa 4C8D7210 		lea	r14, 16[rdx]	# ivtmp.193,
 2620 10ae 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2621              		.loc 1 684 48 is_stmt 1 view .LVU821
 2622              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2623              		.loc 1 684 57 is_stmt 0 view .LVU822
 2624 10b2 4C8D6102 		lea	r12, 2[rcx]	# copy_word,
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2625              		.loc 1 684 12 is_stmt 1 view .LVU823
 2626              	.L206:
 685:sieve_extend.c ****     }
 2627              		.loc 1 685 9 view .LVU824
 2628              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2629              		.loc 1 685 99 is_stmt 0 view .LVU825
 2630 10b6 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp1044, %sfp
 2630      F4
 2631 10bb C442E9F7 		shlx	r10, QWORD PTR 8[r14], rdx	# tmp782, MEM[base: _465, offset: 8B], tmp1044
GAS LISTING /tmp/cct11Qa0.s 			page 73


 2631      5608
 2632              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2633              		.loc 1 685 54 view .LVU826
 2634 10c1 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1045, %sfp
 2634      F0
 2635              	.LVL102:
 685:sieve_extend.c ****     }
 2636              		.loc 1 685 54 view .LVU827
 2637 10c6 C4C2F3F7 		shrx	rsi, QWORD PTR [r14], rcx	# tmp784, MEM[base: _465, offset: 0B], tmp1045
 2637      36
 2638              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2639              		.loc 1 685 72 view .LVU828
 2640 10cb 4909F2   		or	r10, rsi	# tmp785, tmp784
 2641 10ce 4983C608 		add	r14, 8	# ivtmp.193,
 2642 10d2 4E8914E7 		mov	QWORD PTR [rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2643              		.loc 1 684 48 is_stmt 1 view .LVU829
 2644              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2645              		.loc 1 684 57 is_stmt 0 view .LVU830
 2646 10d6 4983C401 		add	r12, 1	# copy_word,
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2647              		.loc 1 684 12 is_stmt 1 view .LVU831
 2648              	.L205:
 685:sieve_extend.c ****     }
 2649              		.loc 1 685 9 view .LVU832
 2650              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2651              		.loc 1 685 99 is_stmt 0 view .LVU833
 2652 10da 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1046, %sfp
 2652      24F4
 2653 10e0 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp787, MEM[base: _465, offset: 8B], tmp1046
 2653      5E08
 2654              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2655              		.loc 1 685 54 view .LVU834
 2656 10e6 0FB64424 		movzx	eax, BYTE PTR -16[rsp]	# tmp1047, %sfp
 2656      F0
 2657 10eb C4C2FBF7 		shrx	rbx, QWORD PTR [r14], rax	# tmp789, MEM[base: _465, offset: 0B], tmp1047
 2657      1E
 2658              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2659              		.loc 1 685 72 view .LVU835
 2660 10f0 4909DB   		or	r11, rbx	# tmp790, tmp789
 2661 10f3 4983C608 		add	r14, 8	# ivtmp.193,
 2662 10f7 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2663              		.loc 1 684 48 is_stmt 1 view .LVU836
 2664              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2665              		.loc 1 684 57 is_stmt 0 view .LVU837
 2666 10fb 4983C401 		add	r12, 1	# copy_word,
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2667              		.loc 1 684 12 is_stmt 1 view .LVU838
 2668              	.L204:
GAS LISTING /tmp/cct11Qa0.s 			page 74


 685:sieve_extend.c ****     }
 2669              		.loc 1 685 9 view .LVU839
 2670              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2671              		.loc 1 685 99 is_stmt 0 view .LVU840
 2672 10ff 440FB644 		movzx	r8d, BYTE PTR -12[rsp]	# tmp1048, %sfp
 2672      24F4
 2673 1105 C4C2B9F7 		shlx	rdx, QWORD PTR 8[r14], r8	# tmp792, MEM[base: _465, offset: 8B], tmp1048
 2673      5608
 2674              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2675              		.loc 1 685 54 view .LVU841
 2676 110b 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1049, %sfp
 2676      24F0
 2677 1111 C4C2ABF7 		shrx	rcx, QWORD PTR [r14], r10	# tmp794, MEM[base: _465, offset: 0B], tmp1049
 2677      0E
 2678              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2679              		.loc 1 685 72 view .LVU842
 2680 1116 4809CA   		or	rdx, rcx	# tmp795, tmp794
 2681 1119 4983C608 		add	r14, 8	# ivtmp.193,
 2682 111d 4A8914E7 		mov	QWORD PTR [rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2683              		.loc 1 684 48 is_stmt 1 view .LVU843
 2684              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2685              		.loc 1 684 57 is_stmt 0 view .LVU844
 2686 1121 4983C401 		add	r12, 1	# copy_word,
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2687              		.loc 1 684 12 is_stmt 1 view .LVU845
 2688              	.L203:
 685:sieve_extend.c ****     }
 2689              		.loc 1 685 9 view .LVU846
 2690              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2691              		.loc 1 685 99 is_stmt 0 view .LVU847
 2692 1125 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1050, %sfp
 2692      F4
 2693 112a C442C9F7 		shlx	r9, QWORD PTR 8[r14], rsi	# tmp797, MEM[base: _465, offset: 8B], tmp1050
 2693      4E08
 2694              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2695              		.loc 1 685 54 view .LVU848
 2696 1130 440FB65C 		movzx	r11d, BYTE PTR -16[rsp]	# tmp1051, %sfp
 2696      24F0
 2697 1136 C4C2A3F7 		shrx	rax, QWORD PTR [r14], r11	# tmp799, MEM[base: _465, offset: 0B], tmp1051
 2697      06
 2698              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2699              		.loc 1 685 72 view .LVU849
 2700 113b 4909C1   		or	r9, rax	# tmp800, tmp799
 2701 113e 4983C608 		add	r14, 8	# ivtmp.193,
 2702 1142 4E890CE7 		mov	QWORD PTR [rdi+r12*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2703              		.loc 1 684 48 is_stmt 1 view .LVU850
 2704              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/cct11Qa0.s 			page 75


 2705              		.loc 1 684 57 is_stmt 0 view .LVU851
 2706 1146 4983C401 		add	r12, 1	# copy_word,
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2707              		.loc 1 684 12 is_stmt 1 view .LVU852
 2708              	.L202:
 685:sieve_extend.c ****     }
 2709              		.loc 1 685 9 view .LVU853
 2710              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2711              		.loc 1 685 99 is_stmt 0 view .LVU854
 2712 114a 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1052, %sfp
 2712      F4
 2713 114f C442E1F7 		shlx	r8, QWORD PTR 8[r14], rbx	# tmp802, MEM[base: _465, offset: 8B], tmp1052
 2713      4608
 2714              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2715              		.loc 1 685 54 view .LVU855
 2716 1155 0FB65424 		movzx	edx, BYTE PTR -16[rsp]	# tmp1053, %sfp
 2716      F0
 2717 115a C442EBF7 		shrx	r10, QWORD PTR [r14], rdx	# tmp804, MEM[base: _465, offset: 0B], tmp1053
 2717      16
 2718              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2719              		.loc 1 685 72 view .LVU856
 2720 115f 4D09D0   		or	r8, r10	# tmp805, tmp804
 2721 1162 4983C608 		add	r14, 8	# ivtmp.193,
 2722 1166 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2723              		.loc 1 684 48 is_stmt 1 view .LVU857
 2724              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2725              		.loc 1 684 57 is_stmt 0 view .LVU858
 2726 116a 4983C401 		add	r12, 1	# copy_word,
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2727              		.loc 1 684 12 is_stmt 1 view .LVU859
 2728              	.L201:
 685:sieve_extend.c ****     }
 2729              		.loc 1 685 9 view .LVU860
 2730              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2731              		.loc 1 685 99 is_stmt 0 view .LVU861
 2732 116e 0FB64C24 		movzx	ecx, BYTE PTR -12[rsp]	# tmp1054, %sfp
 2732      F4
 2733 1173 C4C2F1F7 		shlx	rsi, QWORD PTR 8[r14], rcx	# tmp807, MEM[base: _465, offset: 8B], tmp1054
 2733      7608
 2734              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2735              		.loc 1 685 54 view .LVU862
 2736 1179 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1055, %sfp
 2736      24F0
 2737 117f C442B3F7 		shrx	r11, QWORD PTR [r14], r9	# tmp809, MEM[base: _465, offset: 0B], tmp1055
 2737      1E
 2738              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2739              		.loc 1 685 72 view .LVU863
 2740 1184 4C09DE   		or	rsi, r11	# tmp810, tmp809
 2741 1187 4983C608 		add	r14, 8	# ivtmp.193,
GAS LISTING /tmp/cct11Qa0.s 			page 76


 2742 118b 4A8934E7 		mov	QWORD PTR [rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2743              		.loc 1 684 48 is_stmt 1 view .LVU864
 2744              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2745              		.loc 1 684 57 is_stmt 0 view .LVU865
 2746 118f 4983C401 		add	r12, 1	# copy_word,
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2747              		.loc 1 684 12 is_stmt 1 view .LVU866
 2748              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2749              		.loc 1 684 5 is_stmt 0 view .LVU867
 2750 1193 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2750      F8
 2751 1198 0F821DFA 		jb	.L76	#,
 2751      FFFF
 2752              	.L252:
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2753              		.loc 1 684 5 view .LVU868
 2754 119e 8B4424F4 		mov	eax, DWORD PTR -12[rsp]	# _182, %sfp
 2755 11a2 8B5C24F0 		mov	ebx, DWORD PTR -16[rsp]	# _184, %sfp
 2756              	.L75:
 685:sieve_extend.c ****     }
 2757              		.loc 1 685 9 is_stmt 1 view .LVU869
 2758              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2759              		.loc 1 685 54 is_stmt 0 view .LVU870
 2760 11a6 C4C2E3F7 		shrx	rdx, QWORD PTR [r14], rbx	# tmp725, MEM[base: _465, offset: 0B], _184
 2760      16
 2761              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2762              		.loc 1 685 99 view .LVU871
 2763 11ab C442F9F7 		shlx	r8, QWORD PTR 8[r14], rax	# tmp723, MEM[base: _465, offset: 8B], _182
 2763      4608
 2764              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2765              		.loc 1 685 72 view .LVU872
 2766 11b1 4909D0   		or	r8, rdx	# tmp726, tmp725
 2767 11b4 4983C640 		add	r14, 64	# ivtmp.193,
 2768 11b8 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2769              		.loc 1 684 48 is_stmt 1 view .LVU873
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2770              		.loc 1 684 12 view .LVU874
 685:sieve_extend.c ****     }
 2771              		.loc 1 685 9 view .LVU875
 2772              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2773              		.loc 1 685 54 is_stmt 0 view .LVU876
 2774 11bc C4C2E3F7 		shrx	rcx, QWORD PTR -56[r14], rbx	# tmp732, MEM[base: _465, offset: 0B], _184
 2774      4EC8
 2775              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2776              		.loc 1 685 99 view .LVU877
 2777 11c2 C442F9F7 		shlx	r10, QWORD PTR -48[r14], rax	# tmp730, MEM[base: _465, offset: 8B], _182
 2777      56D0
 2778              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/cct11Qa0.s 			page 77


 685:sieve_extend.c ****     }
 2779              		.loc 1 685 72 view .LVU878
 2780 11c8 4909CA   		or	r10, rcx	# tmp733, tmp732
 2781 11cb 4E8954E7 		mov	QWORD PTR 8[rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2781      08
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2782              		.loc 1 684 48 is_stmt 1 view .LVU879
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2783              		.loc 1 684 12 view .LVU880
 685:sieve_extend.c ****     }
 2784              		.loc 1 685 9 view .LVU881
 2785              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2786              		.loc 1 685 54 is_stmt 0 view .LVU882
 2787 11d0 C442E3F7 		shrx	r9, QWORD PTR -48[r14], rbx	# tmp739, MEM[base: _465, offset: 0B], _184
 2787      4ED0
 2788              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2789              		.loc 1 685 99 view .LVU883
 2790 11d6 C4C2F9F7 		shlx	rsi, QWORD PTR -40[r14], rax	# tmp737, MEM[base: _465, offset: 8B], _182
 2790      76D8
 2791              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2792              		.loc 1 685 72 view .LVU884
 2793 11dc 4C09CE   		or	rsi, r9	# tmp740, tmp739
 2794 11df 4A8974E7 		mov	QWORD PTR 16[rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2794      10
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2795              		.loc 1 684 48 is_stmt 1 view .LVU885
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2796              		.loc 1 684 12 view .LVU886
 685:sieve_extend.c ****     }
 2797              		.loc 1 685 9 view .LVU887
 2798              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2799              		.loc 1 685 54 is_stmt 0 view .LVU888
 2800 11e4 C442E3F7 		shrx	r8, QWORD PTR -40[r14], rbx	# tmp746, MEM[base: _465, offset: 0B], _184
 2800      46D8
 2801              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2802              		.loc 1 685 99 view .LVU889
 2803 11ea C442F9F7 		shlx	r11, QWORD PTR -32[r14], rax	# tmp744, MEM[base: _465, offset: 8B], _182
 2803      5EE0
 2804              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2805              		.loc 1 685 72 view .LVU890
 2806 11f0 4D09C3   		or	r11, r8	# tmp747, tmp746
 2807 11f3 4E895CE7 		mov	QWORD PTR 24[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2807      18
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2808              		.loc 1 684 48 is_stmt 1 view .LVU891
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2809              		.loc 1 684 12 view .LVU892
 685:sieve_extend.c ****     }
 2810              		.loc 1 685 9 view .LVU893
 2811              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
GAS LISTING /tmp/cct11Qa0.s 			page 78


 2812              		.loc 1 685 99 is_stmt 0 view .LVU894
 2813 11f8 C4C2F9F7 		shlx	rdx, QWORD PTR -24[r14], rax	# tmp751, MEM[base: _465, offset: 8B], _182
 2813      56E8
 2814              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2815              		.loc 1 685 54 view .LVU895
 2816 11fe C442E3F7 		shrx	r10, QWORD PTR -32[r14], rbx	# tmp753, MEM[base: _465, offset: 0B], _184
 2816      56E0
 2817              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2818              		.loc 1 685 72 view .LVU896
 2819 1204 4C09D2   		or	rdx, r10	# tmp754, tmp753
 2820 1207 4A8954E7 		mov	QWORD PTR 32[rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2820      20
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2821              		.loc 1 684 48 is_stmt 1 view .LVU897
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2822              		.loc 1 684 12 view .LVU898
 685:sieve_extend.c ****     }
 2823              		.loc 1 685 9 view .LVU899
 2824              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2825              		.loc 1 685 99 is_stmt 0 view .LVU900
 2826 120c C4C2F9F7 		shlx	rcx, QWORD PTR -16[r14], rax	# tmp758, MEM[base: _465, offset: 8B], _182
 2826      4EF0
 2827              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2828              		.loc 1 685 54 view .LVU901
 2829 1212 C4C2E3F7 		shrx	rsi, QWORD PTR -24[r14], rbx	# tmp760, MEM[base: _465, offset: 0B], _184
 2829      76E8
 2830              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2831              		.loc 1 685 72 view .LVU902
 2832 1218 4809F1   		or	rcx, rsi	# tmp761, tmp760
 2833 121b 4A894CE7 		mov	QWORD PTR 40[rdi+r12*8], rcx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2833      28
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2834              		.loc 1 684 48 is_stmt 1 view .LVU903
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2835              		.loc 1 684 12 view .LVU904
 685:sieve_extend.c ****     }
 2836              		.loc 1 685 9 view .LVU905
 2837              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2838              		.loc 1 685 99 is_stmt 0 view .LVU906
 2839 1220 C442F9F7 		shlx	r11, QWORD PTR -8[r14], rax	# tmp765, MEM[base: _465, offset: 8B], _182
 2839      5EF8
 2840              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2841              		.loc 1 685 54 view .LVU907
 2842 1226 C442E3F7 		shrx	r9, QWORD PTR -16[r14], rbx	# tmp767, MEM[base: _465, offset: 0B], _184
 2842      4EF0
 2843              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2844              		.loc 1 685 72 view .LVU908
 2845 122c 4D09CB   		or	r11, r9	# tmp768, tmp767
 2846 122f 4E895CE7 		mov	QWORD PTR 48[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
GAS LISTING /tmp/cct11Qa0.s 			page 79


 2846      30
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2847              		.loc 1 684 48 is_stmt 1 view .LVU909
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2848              		.loc 1 684 12 view .LVU910
 685:sieve_extend.c ****     }
 2849              		.loc 1 685 9 view .LVU911
 2850              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2851              		.loc 1 685 99 is_stmt 0 view .LVU912
 2852 1234 C442F9F7 		shlx	r8, QWORD PTR [r14], rax	# tmp772, MEM[base: _465, offset: 8B], _182
 2852      06
 2853              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2854              		.loc 1 685 54 view .LVU913
 2855 1239 C4C2E3F7 		shrx	rdx, QWORD PTR -8[r14], rbx	# tmp774, MEM[base: _465, offset: 0B], _184
 2855      56F8
 2856              	# sieve_extend.c:685:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 685:sieve_extend.c ****     }
 2857              		.loc 1 685 72 view .LVU914
 2858 123f 4909D0   		or	r8, rdx	# tmp775, tmp774
 2859 1242 4E8944E7 		mov	QWORD PTR 56[rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2859      38
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2860              		.loc 1 684 48 is_stmt 1 view .LVU915
 2861              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2862              		.loc 1 684 57 is_stmt 0 view .LVU916
 2863 1247 4983C408 		add	r12, 8	# copy_word,
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2864              		.loc 1 684 12 is_stmt 1 view .LVU917
 2865              	# sieve_extend.c:684:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 684:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2866              		.loc 1 684 5 is_stmt 0 view .LVU918
 2867 124b 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2867      F8
 2868 1250 0F8350FF 		jnb	.L75	#,
 2868      FFFF
 2869 1256 E960F9FF 		jmp	.L76	#
 2869      FF
 2870              	.LVL103:
 2871 125b 0F1F4400 		.p2align 4,,7
 2871      00
 2872              		.p2align 3
 2873              	.L263:
 659:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2874              		.loc 1 659 9 is_stmt 1 view .LVU919
 2875              	# sieve_extend.c:659:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 659:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2876              		.loc 1 659 29 is_stmt 0 view .LVU920
 2877 1260 488B7C24 		mov	rdi, QWORD PTR -24[rsp]	# pretmp_178, %sfp
 2877      E8
 2878              	.LVL104:
 2879              	# sieve_extend.c:661:                                 & keepmask(copy_start) & chopmask(destination
 661:sieve_extend.c ****         return; // rapid exit for one word variant
 2880              		.loc 1 661 56 view .LVU921
 2881 1265 4D21FA   		and	r10, r15	# _189, _193
GAS LISTING /tmp/cct11Qa0.s 			page 80


 2882 1268 4D21D1   		and	r9, r10	# tmp405, tmp404
 2883              	# sieve_extend.c:659:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 659:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2884              		.loc 1 659 29 view .LVU922
 2885 126b 4C09CF   		or	rdi, r9	# pretmp_178, tmp405
 2886 126e 49897D00 		mov	QWORD PTR 0[r13], rdi	# *_177, tmp406
 662:sieve_extend.c ****     }
 2887              		.loc 1 662 9 is_stmt 1 view .LVU923
 2888              	# sieve_extend.c:689: }
 2889              		.loc 1 689 1 is_stmt 0 view .LVU924
 2890 1272 488D65D8 		lea	rsp, -40[rbp]	#,
 2891 1276 5B       		pop	rbx	#
 2892 1277 415C     		pop	r12	#
 2893 1279 415D     		pop	r13	#
 2894 127b 415E     		pop	r14	#
 2895              	.LVL105:
 2896              		.loc 1 689 1 view .LVU925
 2897 127d 415F     		pop	r15	#
 2898 127f 5D       		pop	rbp	#
 2899              		.cfi_remember_state
 2900              		.cfi_def_cfa 7, 8
 2901 1280 C3       		ret	
 2902              	.LVL106:
 2903              		.p2align 4,,7
 2904 1281 0F1F8000 		.p2align 3
 2904      000000
 2905              	.L258:
 2906              		.cfi_restore_state
 2907              		.loc 1 689 1 view .LVU926
 2908 1288 C5F877   		vzeroupper
 2909 128b E969FDFF 		jmp	.L65	#
 2909      FF
 2910              	.LVL107:
 2911              		.p2align 4,,7
 2912              		.p2align 3
 2913              	.L260:
 2914              		.loc 1 689 1 view .LVU927
 2915 1290 C5F877   		vzeroupper
 2916 1293 E923F9FF 		jmp	.L76	#
 2916      FF
 2917              	.LVL108:
 2918              		.p2align 4,,7
 2919              		.p2align 3
 2920              	.L80:
 2921              	# sieve_extend.c:655:     register counter_t source_word = wordindex(source_start);
 655:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2922              		.loc 1 655 24 view .LVU928
 2923 1298 48897424 		mov	QWORD PTR -40[rsp], rsi	# %sfp, source_word
 2923      D8
 2924              	# sieve_extend.c:669:     copy_word++;
 669:sieve_extend.c **** 
 2925              		.loc 1 669 14 view .LVU929
 2926 129d 4989CC   		mov	r12, rcx	# copy_word, copy_word
 2927 12a0 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 2928 12a4 E9FBF5FF 		jmp	.L70	#
 2928      FF
 2929              	.LVL109:
GAS LISTING /tmp/cct11Qa0.s 			page 81


 2930              	.L60:
 669:sieve_extend.c **** 
 2931              		.loc 1 669 14 view .LVU930
 2932 12a9 488B5424 		mov	rdx, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2932      E8
 2933              	.LBB272:
 2934              	.LBB270:
 2935              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2936              		.loc 1 679 35 view .LVU931
 2937 12ae 4929F0   		sub	r8, rsi	# tmp490, source_word
 2938 12b1 4801F2   		add	rdx, rsi	# loop_distance, source_word
 2939 12b4 4C8D24D7 		lea	r12, [rdi+rdx*8]	# _481,
 2940 12b8 4C89E0   		mov	rax, r12	# tmp575, _481
 2941 12bb 4C29D8   		sub	rax, r11	# tmp575, ivtmp.211
 2942 12be 4883E808 		sub	rax, 8	# tmp576,
 2943 12c2 48C1E803 		shr	rax, 3	# tmp574,
 2944 12c6 4883C001 		add	rax, 1	# tmp577,
 2945 12ca 83E007   		and	eax, 7	# tmp578,
 2946 12cd 0F842401 		je	.L253	#,
 2946      0000
 2947 12d3 4883F801 		cmp	rax, 1	# tmp578,
 2948 12d7 0F84EF00 		je	.L188	#,
 2948      0000
 2949 12dd 4883F802 		cmp	rax, 2	# tmp578,
 2950 12e1 0F84C400 		je	.L189	#,
 2950      0000
 2951 12e7 4883F803 		cmp	rax, 3	# tmp578,
 2952 12eb 0F849800 		je	.L190	#,
 2952      0000
 2953 12f1 4883F804 		cmp	rax, 4	# tmp578,
 2954 12f5 7471     		je	.L191	#,
 2955 12f7 4883F805 		cmp	rax, 5	# tmp578,
 2956 12fb 7449     		je	.L192	#,
 2957 12fd 4883F806 		cmp	rax, 6	# tmp578,
 2958 1301 7422     		je	.L193	#,
 2959              	.LVL110:
 679:sieve_extend.c ****         }
 2960              		.loc 1 679 13 is_stmt 1 view .LVU932
 2961              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2962              		.loc 1 679 62 is_stmt 0 view .LVU933
 2963 1303 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1057, %sfp
 2963      24F0
 2964 1309 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp812, MEM[base: _475, offset: 0B], tmp1057
 2964      2B
 2965              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2966              		.loc 1 679 109 view .LVU934
 2967 130e 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1058, %sfp
 2967      F4
 2968 1313 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp814, MEM[base: _475, offset: 8B], tmp1058
 2968      5308
 2969              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2970              		.loc 1 679 80 view .LVU935
 2971 1319 4D09D5   		or	r13, r10	# tmp815, tmp814
GAS LISTING /tmp/cct11Qa0.s 			page 82


 2972 131c 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp815
 2972      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2973              		.loc 1 678 58 is_stmt 1 view .LVU936
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2974              		.loc 1 678 40 view .LVU937
 2975 1321 4983C308 		add	r11, 8	# ivtmp.211,
 2976              	.L193:
 679:sieve_extend.c ****         }
 2977              		.loc 1 679 13 view .LVU938
 2978              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2979              		.loc 1 679 62 is_stmt 0 view .LVU939
 2980 1325 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1059, %sfp
 2980      F0
 2981              	.LVL111:
 679:sieve_extend.c ****         }
 2982              		.loc 1 679 62 view .LVU940
 2983 132a C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp817, MEM[base: _475, offset: 0B], tmp1059
 2983      33
 2984              	.LVL112:
 2985              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2986              		.loc 1 679 109 view .LVU941
 2987 132f 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1060, %sfp
 2987      F4
 2988 1334 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp819, MEM[base: _475, offset: 8B], tmp1060
 2988      4308
 2989              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2990              		.loc 1 679 80 view .LVU942
 2991 133a 4909C6   		or	r14, rax	# tmp820, tmp819
 2992 133d 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp820
 2992      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2993              		.loc 1 678 58 is_stmt 1 view .LVU943
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2994              		.loc 1 678 40 view .LVU944
 2995 1342 4983C308 		add	r11, 8	# ivtmp.211,
 2996              	.L192:
 679:sieve_extend.c ****         }
 2997              		.loc 1 679 13 view .LVU945
 2998              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 2999              		.loc 1 679 62 is_stmt 0 view .LVU946
 3000 1346 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1061, %sfp
 3000      24F0
 3001 134c C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp822, MEM[base: _475, offset: 0B], tmp1061
 3001      2B
 3002              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3003              		.loc 1 679 109 view .LVU947
 3004 1351 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1062, %sfp
 3004      F4
 3005 1356 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp824, MEM[base: _475, offset: 8B], tmp1062
 3005      5308
 3006              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/cct11Qa0.s 			page 83


 679:sieve_extend.c ****         }
 3007              		.loc 1 679 80 view .LVU948
 3008 135c 4D09D5   		or	r13, r10	# tmp825, tmp824
 3009 135f 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp825
 3009      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3010              		.loc 1 678 58 is_stmt 1 view .LVU949
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3011              		.loc 1 678 40 view .LVU950
 3012 1364 4983C308 		add	r11, 8	# ivtmp.211,
 3013              	.L191:
 679:sieve_extend.c ****         }
 3014              		.loc 1 679 13 view .LVU951
 3015              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3016              		.loc 1 679 62 is_stmt 0 view .LVU952
 3017 1368 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1063, %sfp
 3017      F0
 3018 136d C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp827, MEM[base: _475, offset: 0B], tmp1063
 3018      33
 3019              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3020              		.loc 1 679 109 view .LVU953
 3021 1372 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1064, %sfp
 3021      F4
 3022 1377 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp829, MEM[base: _475, offset: 8B], tmp1064
 3022      4308
 3023              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3024              		.loc 1 679 80 view .LVU954
 3025 137d 4909C6   		or	r14, rax	# tmp830, tmp829
 3026 1380 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp830
 3026      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3027              		.loc 1 678 58 is_stmt 1 view .LVU955
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3028              		.loc 1 678 40 view .LVU956
 3029 1385 4983C308 		add	r11, 8	# ivtmp.211,
 3030              	.L190:
 679:sieve_extend.c ****         }
 3031              		.loc 1 679 13 view .LVU957
 3032              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3033              		.loc 1 679 62 is_stmt 0 view .LVU958
 3034 1389 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1065, %sfp
 3034      24F0
 3035 138f C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp832, MEM[base: _475, offset: 0B], tmp1065
 3035      2B
 3036              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3037              		.loc 1 679 109 view .LVU959
 3038 1394 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1066, %sfp
 3038      F4
 3039 1399 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp834, MEM[base: _475, offset: 8B], tmp1066
 3039      5308
 3040              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
GAS LISTING /tmp/cct11Qa0.s 			page 84


 3041              		.loc 1 679 80 view .LVU960
 3042 139f 4D09D5   		or	r13, r10	# tmp835, tmp834
 3043 13a2 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp835
 3043      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3044              		.loc 1 678 58 is_stmt 1 view .LVU961
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3045              		.loc 1 678 40 view .LVU962
 3046 13a7 4983C308 		add	r11, 8	# ivtmp.211,
 3047              	.L189:
 679:sieve_extend.c ****         }
 3048              		.loc 1 679 13 view .LVU963
 3049              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3050              		.loc 1 679 62 is_stmt 0 view .LVU964
 3051 13ab 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1067, %sfp
 3051      F0
 3052 13b0 C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp837, MEM[base: _475, offset: 0B], tmp1067
 3052      33
 3053              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3054              		.loc 1 679 109 view .LVU965
 3055 13b5 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1068, %sfp
 3055      F4
 3056 13ba C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp839, MEM[base: _475, offset: 8B], tmp1068
 3056      4308
 3057              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3058              		.loc 1 679 80 view .LVU966
 3059 13c0 4909C6   		or	r14, rax	# tmp840, tmp839
 3060 13c3 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp840
 3060      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3061              		.loc 1 678 58 is_stmt 1 view .LVU967
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3062              		.loc 1 678 40 view .LVU968
 3063 13c8 4983C308 		add	r11, 8	# ivtmp.211,
 3064              	.L188:
 679:sieve_extend.c ****         }
 3065              		.loc 1 679 13 view .LVU969
 3066              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3067              		.loc 1 679 62 is_stmt 0 view .LVU970
 3068 13cc 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1069, %sfp
 3068      24F0
 3069 13d2 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp842, MEM[base: _475, offset: 0B], tmp1069
 3069      2B
 3070              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3071              		.loc 1 679 109 view .LVU971
 3072 13d7 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1070, %sfp
 3072      F4
 3073 13dc C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp844, MEM[base: _475, offset: 8B], tmp1070
 3073      5308
 3074              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3075              		.loc 1 679 80 view .LVU972
GAS LISTING /tmp/cct11Qa0.s 			page 85


 3076 13e2 4D09D5   		or	r13, r10	# tmp845, tmp844
 3077 13e5 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp845
 3077      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3078              		.loc 1 678 58 is_stmt 1 view .LVU973
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3079              		.loc 1 678 40 view .LVU974
 3080 13ea 4983C308 		add	r11, 8	# ivtmp.211,
 3081              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3082              		.loc 1 678 9 is_stmt 0 view .LVU975
 3083 13ee 4D39E3   		cmp	r11, r12	# ivtmp.211, _481
 3084 13f1 0F8402FC 		je	.L65	#,
 3084      FFFF
 3085              	.L253:
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3086              		.loc 1 678 9 view .LVU976
 3087 13f7 8B4C24F4 		mov	ecx, DWORD PTR -12[rsp]	# _182, %sfp
 3088 13fb 448B7424 		mov	r14d, DWORD PTR -16[rsp]	# _184, %sfp
 3088      F0
 3089              	.L67:
 679:sieve_extend.c ****         }
 3090              		.loc 1 679 13 is_stmt 1 view .LVU977
 3091              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3092              		.loc 1 679 109 is_stmt 0 view .LVU978
 3093 1400 C4C2F1F7 		shlx	rax, QWORD PTR 8[r11], rcx	# tmp493, MEM[base: _475, offset: 8B], _182
 3093      4308
 3094              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3095              		.loc 1 679 62 view .LVU979
 3096 1406 C4C28BF7 		shrx	rsi, QWORD PTR [r11], r14	# tmp491, MEM[base: _475, offset: 0B], _184
 3096      33
 3097              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3098              		.loc 1 679 80 view .LVU980
 3099 140b 4809C6   		or	rsi, rax	# tmp495, tmp493
 3100 140e 4D8D6B08 		lea	r13, 8[r11]	# tmp579,
 3101 1412 4B8974C3 		mov	QWORD PTR 8[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp495
 3101      08
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3102              		.loc 1 678 58 is_stmt 1 view .LVU981
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3103              		.loc 1 678 40 view .LVU982
 679:sieve_extend.c ****         }
 3104              		.loc 1 679 13 view .LVU983
 3105              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3106              		.loc 1 679 62 is_stmt 0 view .LVU984
 3107 1417 C4428BF7 		shrx	r9, QWORD PTR 8[r11], r14	# tmp636, MEM[base: _475, offset: 0B], _184
 3107      4B08
 3108              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3109              		.loc 1 679 109 view .LVU985
 3110 141d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp638, MEM[base: _475, offset: 8B], _182
 3110      5D08
 3111              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/cct11Qa0.s 			page 86


 679:sieve_extend.c ****         }
 3112              		.loc 1 679 80 view .LVU986
 3113 1423 4909D9   		or	r9, rbx	# tmp639, tmp638
 3114 1426 4D8D5310 		lea	r10, 16[r11]	# ivtmp.211,
 3115 142a 4D8D6B18 		lea	r13, 24[r11]	# ivtmp.211,
 3116 142e 4F894CC3 		mov	QWORD PTR 16[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp639
 3116      10
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3117              		.loc 1 678 58 is_stmt 1 view .LVU987
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3118              		.loc 1 678 40 view .LVU988
 679:sieve_extend.c ****         }
 3119              		.loc 1 679 13 view .LVU989
 3120              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3121              		.loc 1 679 62 is_stmt 0 view .LVU990
 3122 1433 C4C28BF7 		shrx	rsi, QWORD PTR 16[r11], r14	# tmp642, MEM[base: _475, offset: 0B], _184
 3122      7310
 3123              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3124              		.loc 1 679 109 view .LVU991
 3125 1439 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp644, MEM[base: _475, offset: 8B], _182
 3125      4208
 3126              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3127              		.loc 1 679 80 view .LVU992
 3128 143f 4809C6   		or	rsi, rax	# tmp645, tmp644
 3129 1442 4B8974C3 		mov	QWORD PTR 24[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp645
 3129      18
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3130              		.loc 1 678 58 is_stmt 1 view .LVU993
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3131              		.loc 1 678 40 view .LVU994
 679:sieve_extend.c ****         }
 3132              		.loc 1 679 13 view .LVU995
 3133              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3134              		.loc 1 679 62 is_stmt 0 view .LVU996
 3135 1447 C4428BF7 		shrx	r9, QWORD PTR 24[r11], r14	# tmp648, MEM[base: _475, offset: 0B], _184
 3135      4B18
 3136              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3137              		.loc 1 679 109 view .LVU997
 3138 144d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp650, MEM[base: _475, offset: 8B], _182
 3138      5D08
 3139              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3140              		.loc 1 679 80 view .LVU998
 3141 1453 4909D9   		or	r9, rbx	# tmp651, tmp650
 3142 1456 4D8D5320 		lea	r10, 32[r11]	# ivtmp.211,
 3143 145a 4D8D6B28 		lea	r13, 40[r11]	# ivtmp.211,
 3144 145e 4F894CC3 		mov	QWORD PTR 32[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp651
 3144      20
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3145              		.loc 1 678 58 is_stmt 1 view .LVU999
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3146              		.loc 1 678 40 view .LVU1000
GAS LISTING /tmp/cct11Qa0.s 			page 87


 679:sieve_extend.c ****         }
 3147              		.loc 1 679 13 view .LVU1001
 3148              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3149              		.loc 1 679 62 is_stmt 0 view .LVU1002
 3150 1463 C4C28BF7 		shrx	rsi, QWORD PTR 32[r11], r14	# tmp654, MEM[base: _475, offset: 0B], _184
 3150      7320
 3151              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3152              		.loc 1 679 109 view .LVU1003
 3153 1469 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp656, MEM[base: _475, offset: 8B], _182
 3153      4208
 3154              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3155              		.loc 1 679 80 view .LVU1004
 3156 146f 4809C6   		or	rsi, rax	# tmp657, tmp656
 3157 1472 4B8974C3 		mov	QWORD PTR 40[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp657
 3157      28
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3158              		.loc 1 678 58 is_stmt 1 view .LVU1005
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3159              		.loc 1 678 40 view .LVU1006
 679:sieve_extend.c ****         }
 3160              		.loc 1 679 13 view .LVU1007
 3161              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3162              		.loc 1 679 62 is_stmt 0 view .LVU1008
 3163 1477 C4428BF7 		shrx	r9, QWORD PTR 40[r11], r14	# tmp660, MEM[base: _475, offset: 0B], _184
 3163      4B28
 3164              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3165              		.loc 1 679 109 view .LVU1009
 3166 147d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp662, MEM[base: _475, offset: 8B], _182
 3166      5D08
 3167              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3168              		.loc 1 679 80 view .LVU1010
 3169 1483 4909D9   		or	r9, rbx	# tmp663, tmp662
 3170 1486 4D8D5330 		lea	r10, 48[r11]	# ivtmp.211,
 3171 148a 4D8D6B38 		lea	r13, 56[r11]	# ivtmp.211,
 3172 148e 4F894CC3 		mov	QWORD PTR 48[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp663
 3172      30
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3173              		.loc 1 678 58 is_stmt 1 view .LVU1011
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3174              		.loc 1 678 40 view .LVU1012
 679:sieve_extend.c ****         }
 3175              		.loc 1 679 13 view .LVU1013
 3176              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3177              		.loc 1 679 62 is_stmt 0 view .LVU1014
 3178 1493 C4C28BF7 		shrx	rsi, QWORD PTR 48[r11], r14	# tmp666, MEM[base: _475, offset: 0B], _184
 3178      7330
 3179              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3180              		.loc 1 679 109 view .LVU1015
 3181 1499 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp668, MEM[base: _475, offset: 8B], _182
GAS LISTING /tmp/cct11Qa0.s 			page 88


 3181      4208
 3182              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3183              		.loc 1 679 80 view .LVU1016
 3184 149f 4809C6   		or	rsi, rax	# tmp669, tmp668
 3185 14a2 4B8974C3 		mov	QWORD PTR 56[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp669
 3185      38
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3186              		.loc 1 678 58 is_stmt 1 view .LVU1017
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3187              		.loc 1 678 40 view .LVU1018
 679:sieve_extend.c ****         }
 3188              		.loc 1 679 13 view .LVU1019
 3189              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3190              		.loc 1 679 62 is_stmt 0 view .LVU1020
 3191 14a7 C4428BF7 		shrx	r9, QWORD PTR 56[r11], r14	# tmp672, MEM[base: _475, offset: 0B], _184
 3191      4B38
 3192              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3193              		.loc 1 679 109 view .LVU1021
 3194 14ad C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp674, MEM[base: _475, offset: 8B], _182
 3194      5D08
 3195              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3196              		.loc 1 679 80 view .LVU1022
 3197 14b3 4909D9   		or	r9, rbx	# tmp675, tmp674
 3198 14b6 4F894CC3 		mov	QWORD PTR 64[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp675
 3198      40
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3199              		.loc 1 678 58 is_stmt 1 view .LVU1023
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3200              		.loc 1 678 40 view .LVU1024
 3201 14bb 4983C340 		add	r11, 64	# ivtmp.211,
 3202              	# sieve_extend.c:678:         for (register counter_t i = 0; i <loop_distance; i++) {
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3203              		.loc 1 678 9 is_stmt 0 view .LVU1025
 3204 14bf 4D39E3   		cmp	r11, r12	# ivtmp.211, _481
 3205 14c2 0F8538FF 		jne	.L67	#,
 3205      FFFF
 3206 14c8 E92CFBFF 		jmp	.L65	#
 3206      FF
 3207              	.LVL113:
 3208              	.L265:
 679:sieve_extend.c ****         }
 3209              		.loc 1 679 13 is_stmt 1 view .LVU1026
 3210              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3211              		.loc 1 679 62 is_stmt 0 view .LVU1027
 3212 14cd C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r10]	# tmp1071, MEM[base: vectp.177_325, index: ivtmp.220_483, offset: 
 3212      02
 3213 14d2 BA200000 		mov	edx, 32	# ivtmp.220,
 3213      00
 3214              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3215              		.loc 1 679 109 view .LVU1028
 3216 14d7 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11]	# tmp1072, MEM[base: vectp.181_332, index: ivtmp.220_483, offset: 
GAS LISTING /tmp/cct11Qa0.s 			page 89


 3216      1B
 3217              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3218              		.loc 1 679 62 view .LVU1029
 3219 14dc C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.179, tmp1071, _184
 3220              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3221              		.loc 1 679 109 view .LVU1030
 3222 14e0 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.183, tmp1072, _182
 3223              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3224              		.loc 1 679 80 view .LVU1031
 3225 14e4 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.184, vect__49.179, vect__54.183
 3225      DA
 3226              	# sieve_extend.c:679:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 679:sieve_extend.c ****         }
 3227              		.loc 1 679 35 view .LVU1032
 3228 14e9 C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm11	# MEM[base: vectp.186_341, index: ivtmp.220_483, offset: 0B], vect
 3228      19
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3229              		.loc 1 678 58 is_stmt 1 view .LVU1033
 678:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3230              		.loc 1 678 40 view .LVU1034
 3231 14ee E95AF8FF 		jmp	.L187	#
 3231      FF
 3232              	.LBE270:
 3233              	.LBE272:
 3234              		.cfi_endproc
 3235              	.LFE5337:
 3237 14f3 66662E0F 		.p2align 4
 3237      1F840000 
 3237      00000066 
 3237      90
 3238              		.globl	compare_tuning_result
 3240              	compare_tuning_result:
 3241              	.LVL114:
 3242              	.LFB5349:
 690:sieve_extend.c **** 
 691:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 692:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 693:sieve_extend.c ****    
 694:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 695:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 696:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 697:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 698:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 699:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 700:sieve_extend.c **** 
 701:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 702:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 703:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 704:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 705:sieve_extend.c ****         return; // rapid exit for one word variant
 706:sieve_extend.c ****     }
 707:sieve_extend.c **** 
 708:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 709:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
GAS LISTING /tmp/cct11Qa0.s 			page 90


 710:sieve_extend.c ****                                 & keepmask(copy_start);
 711:sieve_extend.c ****     
 712:sieve_extend.c ****     copy_word++;
 713:sieve_extend.c **** 
 714:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 715:sieve_extend.c **** 
 716:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 717:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 718:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 719:sieve_extend.c **** 
 720:sieve_extend.c **** }
 721:sieve_extend.c **** 
 722:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 723:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 724:sieve_extend.c **** 
 725:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 726:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 727:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 728:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 729:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 730:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 731:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 732:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 733:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 734:sieve_extend.c **** 
 735:sieve_extend.c ****     copy_word++;
 736:sieve_extend.c ****     source_word++;
 737:sieve_extend.c **** 
 738:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 739:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 740:sieve_extend.c ****     source_word += distance;
 741:sieve_extend.c ****     copy_word += distance;
 742:sieve_extend.c **** 
 743:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 744:sieve_extend.c **** 
 745:sieve_extend.c ****     #pragma ivdep
 746:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 747:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 748:sieve_extend.c ****     }
 749:sieve_extend.c **** 
 750:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 751:sieve_extend.c **** 
 752:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 753:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 754:sieve_extend.c **** 
 755:sieve_extend.c ****     #pragma ivdep
 756:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 757:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 758:sieve_extend.c **** 
 759:sieve_extend.c ****     #pragma ivdep
 760:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 761:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 762:sieve_extend.c **** 
 763:sieve_extend.c **** 
 764:sieve_extend.c ****  }
 765:sieve_extend.c **** 
 766:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
GAS LISTING /tmp/cct11Qa0.s 			page 91


 767:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 768:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 769:sieve_extend.c ****         return; // rapid exit for small sizes
 770:sieve_extend.c ****     }
 771:sieve_extend.c **** 
 772:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 773:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 774:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 775:sieve_extend.c **** 
 776:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 777:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 778:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 779:sieve_extend.c **** }
 780:sieve_extend.c **** 
 781:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 782:sieve_extend.c ****     counter_t prime = prime_start;
 783:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 784:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 785:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 786:sieve_extend.c **** 
 787:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 788:sieve_extend.c ****     
 789:sieve_extend.c ****     while (start <= block_stop) {
 790:sieve_extend.c ****         step  = prime * 2 + 1;
 791:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 792:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 793:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 794:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 795:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 796:sieve_extend.c ****     }
 797:sieve_extend.c ****     
 798:sieve_extend.c ****     while (start <= block_stop) {
 799:sieve_extend.c ****         step  = prime * 2 + 1;
 800:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 801:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 802:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 803:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 804:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 805:sieve_extend.c ****     }
 806:sieve_extend.c **** 
 807:sieve_extend.c **** //     counter_t start1 = 0; // save value
 808:sieve_extend.c **** //     counter_t step1 = 0; // save value
 809:sieve_extend.c **** //     while (start <= block_stop) {
 810:sieve_extend.c **** //         step  = prime * 2 + 1;
 811:sieve_extend.c **** //         if (step > 64) break;
 812:sieve_extend.c **** //         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 813:sieve_extend.c **** //         start1 = start; // save value
 814:sieve_extend.c **** //         step1 = step; // save value
 815:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 816:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 817:sieve_extend.c **** //         step  = prime * 2 + 1;
 818:sieve_extend.c **** //         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 819:sieve_extend.c **** //         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_st
 820:sieve_extend.c **** // //        else                     setBitsTrue_largeSteps(bitarray, start1, step1, block_stop);
 821:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 822:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 823:sieve_extend.c **** //     }
GAS LISTING /tmp/cct11Qa0.s 			page 92


 824:sieve_extend.c **** 
 825:sieve_extend.c ****     while (start <= block_stop) {
 826:sieve_extend.c ****         step  = prime * 2 + 1;
 827:sieve_extend.c ****         if unlikely(step > VECTOR_SIZE_counter*3/4) break;
 828:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 829:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 830:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 831:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 832:sieve_extend.c ****     }
 833:sieve_extend.c **** 
 834:sieve_extend.c ****     while (start <= block_stop) {
 835:sieve_extend.c ****         step  = prime * 2 + 1;
 836:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 837:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 838:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 839:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 840:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 841:sieve_extend.c ****     }
 842:sieve_extend.c **** 
 843:sieve_extend.c ****     while (start <= block_stop) {
 844:sieve_extend.c ****         step  = prime * 2 + 1;
 845:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 846:sieve_extend.c ****         if likely(start <= block_stop)
 847:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 848:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 849:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 850:sieve_extend.c ****     }
 851:sieve_extend.c **** }
 852:sieve_extend.c **** 
 853:sieve_extend.c **** struct block {
 854:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 855:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 856:sieve_extend.c ****     counter_t prime; // next prime to be striped
 857:sieve_extend.c **** };
 858:sieve_extend.c **** 
 859:sieve_extend.c **** // returns prime that could not be handled:
 860:sieve_extend.c **** // start is too large
 861:sieve_extend.c **** // range is too big
 862:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
 863:sieve_extend.c ****     register counter_t prime   = 0;
 864:sieve_extend.c ****     counter_t patternsize_bits = 1;
 865:sieve_extend.c ****     counter_t pattern_start    = 0;
 866:sieve_extend.c ****     counter_t range_stop       = block_start;
 867:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 868:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 869:sieve_extend.c **** 
 870:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 871:sieve_extend.c ****     
 872:sieve_extend.c ****     for (;range_stop < block_stop;) {
 873:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 874:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 875:sieve_extend.c ****         if unlikely(start > block_stop) break;
 876:sieve_extend.c **** 
 877:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 878:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 879:sieve_extend.c **** 
 880:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
GAS LISTING /tmp/cct11Qa0.s 			page 93


 881:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 882:sieve_extend.c ****         block.pattern_start = pattern_start;
 883:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 884:sieve_extend.c **** 
 885:sieve_extend.c ****         if (patternsize_bits>1) {
 886:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 887:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 888:sieve_extend.c ****         }
 889:sieve_extend.c ****         patternsize_bits *= step;
 890:sieve_extend.c **** 
 891:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift_t)
 892:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 893:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 894:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 895:sieve_extend.c ****         block.prime = prime;
 896:sieve_extend.c ****     } 
 897:sieve_extend.c **** 
 898:sieve_extend.c ****     return block;
 899:sieve_extend.c **** }
 900:sieve_extend.c **** 
 901:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
 902:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 903:sieve_extend.c ****     counter_t prime     = 0;
 904:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 905:sieve_extend.c **** 
 906:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 907:sieve_extend.c **** 
 908:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 909:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 910:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 911:sieve_extend.c ****     prime = block.prime;
 912:sieve_extend.c **** 
 913:sieve_extend.c ****     // #pragma unroll 8
 914:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 915:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 916:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 917:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 918:sieve_extend.c ****     } 
 919:sieve_extend.c **** 
 920:sieve_extend.c ****     return sieve;
 921:sieve_extend.c **** }
 922:sieve_extend.c **** 
 923:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 924:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 925:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 926:sieve_extend.c ****         primeCount++;
 927:sieve_extend.c ****         if (factor < maxFactor/2) {
 928:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 929:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 930:sieve_extend.c ****         }
 931:sieve_extend.c ****     }
 932:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 933:sieve_extend.c **** }
 934:sieve_extend.c **** 
 935:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
 936:sieve_extend.c ****     counter_t primeCount = 1;
 937:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
GAS LISTING /tmp/cct11Qa0.s 			page 94


 938:sieve_extend.c ****     return primeCount;
 939:sieve_extend.c **** }
 940:sieve_extend.c **** 
 941:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
 942:sieve_extend.c ****     printf("DeepAnalyzing\n");
 943:sieve_extend.c ****     counter_t warn_prime = 0;
 944:sieve_extend.c ****     counter_t warn_nonprime = 0;
 945:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 946:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 947:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 948:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 949:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 950:sieve_extend.c ****                 }
 951:sieve_extend.c ****             }
 952:sieve_extend.c ****         }
 953:sieve_extend.c ****         else {
 954:sieve_extend.c ****             counter_t c_prime = 0;
 955:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 956:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 957:sieve_extend.c ****             }
 958:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
 959:sieve_extend.c ****         }
 960:sieve_extend.c ****     }
 961:sieve_extend.c **** }
 962:sieve_extend.c **** 
 963:sieve_extend.c **** 
 964:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
 965:sieve_extend.c **** 
 966:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
 967:sieve_extend.c ****     counter_t valid_primes = 0;
 968:sieve_extend.c ****     switch(sieve->size) {
 969:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 970:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 971:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 972:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 973:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 974:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 975:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 976:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 977:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 978:sieve_extend.c ****         default:            valid_primes= 0;
 979:sieve_extend.c ****     }
 980:sieve_extend.c **** 
 981:sieve_extend.c ****     int valid = (valid_primes == primecount);
 982:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 983:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 984:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 985:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 986:sieve_extend.c ****     }
 987:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
 988:sieve_extend.c ****     return (valid);
 989:sieve_extend.c **** }
 990:sieve_extend.c **** 
 991:sieve_extend.c **** void usage(char *name) {
 992:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 993:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 994:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
GAS LISTING /tmp/cct11Qa0.s 			page 95


 995:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 996:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 997:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 998:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 999:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1000:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1001:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1002:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1003:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1004:sieve_extend.c ****     exit(1);
1005:sieve_extend.c **** }
1006:sieve_extend.c **** 
1007:sieve_extend.c **** typedef struct  {
1008:sieve_extend.c ****     counter_t maxints;
1009:sieve_extend.c ****     counter_t blocksize_bits;
1010:sieve_extend.c ****     counter_t blocksize_kb;
1011:sieve_extend.c ****     counter_t free_bits;
1012:sieve_extend.c ****     counter_t smallstep_faster;
1013:sieve_extend.c ****     counter_t mediumstep_faster;
1014:sieve_extend.c ****     counter_t sample_max;
1015:sieve_extend.c ****     double    sample_duration;
1016:sieve_extend.c ****     counter_t passes;
1017:sieve_extend.c ****     double    elapsed_time;
1018:sieve_extend.c ****     double    avg;
1019:sieve_extend.c **** } tuning_result_type;
1020:sieve_extend.c **** 
1021:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3243              		.loc 1 1021 57 view -0
 3244              		.cfi_startproc
 3245              		.loc 1 1021 57 is_stmt 0 view .LVU1036
 3246 1500 F30F1EFA 		endbr64	
1022:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3247              		.loc 1 1022 5 is_stmt 1 view .LVU1037
 3248              	.LVL115:
1023:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3249              		.loc 1 1023 5 view .LVU1038
1024:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3250              		.loc 1 1024 5 view .LVU1039
 3251              	# sieve_extend.c:1024:     return (resultB->avg > resultA->avg ? 1 : -1);
 3252              		.loc 1 1024 45 is_stmt 0 view .LVU1040
 3253 1504 C5FB1046 		vmovsd	xmm0, QWORD PTR 80[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 3253      50
 3254 1509 31C0     		xor	eax, eax	# <retval>
 3255 150b C5F92F47 		vcomisd	xmm0, QWORD PTR 80[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 3255      50
 3256 1510 0F97C0   		seta	al	#, <retval>
 3257 1513 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3258              	# sieve_extend.c:1025: }
1025:sieve_extend.c **** }
 3259              		.loc 1 1025 1 view .LVU1041
 3260 1517 C3       		ret	
 3261              		.cfi_endproc
 3262              	.LFE5349:
 3264 1518 0F1F8400 		.p2align 4
 3264      00000000 
 3266              	setBitsTrue_largeRange_vector:
 3267              	.LVL116:
GAS LISTING /tmp/cct11Qa0.s 			page 96


 3268              	.LFB5331:
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3269              		.loc 1 386 159 is_stmt 1 view -0
 3270              		.cfi_startproc
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3271              		.loc 1 386 159 is_stmt 0 view .LVU1043
 3272 1520 55       		push	rbp	#
 3273              		.cfi_def_cfa_offset 16
 3274              		.cfi_offset 6, -16
 3275              	# sieve_extend.c:396:     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter 
 396:sieve_extend.c **** 
 3276              		.loc 1 396 42 view .LVU1044
 3277 1521 4989D0   		mov	r8, rdx	# tmp181, step
 3278 1524 49C1E008 		sal	r8, 8	# tmp181,
 3279              	# sieve_extend.c:386: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3280              		.loc 1 386 159 view .LVU1045
 3281 1528 4889E5   		mov	rbp, rsp	#,
 3282              		.cfi_def_cfa_register 6
 3283 152b 4154     		push	r12	#
 3284              	# sieve_extend.c:396:     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter 
 396:sieve_extend.c **** 
 3285              		.loc 1 396 42 view .LVU1046
 3286 152d 4901F0   		add	r8, rsi	# tmp182, range_start
 3287              	# sieve_extend.c:386: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3288              		.loc 1 386 159 view .LVU1047
 3289 1530 53       		push	rbx	#
 3290 1531 4883E4E0 		and	rsp, -32	#,
 3291 1535 488D6424 		lea	rsp, -64[rsp]	#,
 3291      C0
 3292              		.cfi_offset 12, -24
 3293              		.cfi_offset 3, -32
 3294              	# sieve_extend.c:386: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 386:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3295              		.loc 1 386 159 view .LVU1048
 3296 153a 64488B04 		mov	rax, QWORD PTR fs:40	# tmp308, MEM[(<address-space-1> long unsigned int *)40B]
 3296      25280000 
 3296      00
 3297 1543 48894424 		mov	QWORD PTR 56[rsp], rax	# D.34768, tmp308
 3297      38
 3298 1548 31C0     		xor	eax, eax	# tmp308
 387:sieve_extend.c **** 
 3299              		.loc 1 387 5 is_stmt 1 view .LVU1049
 395:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter * 4 * step, range_stop
 3300              		.loc 1 395 5 view .LVU1050
 3301              	.LVL117:
 396:sieve_extend.c **** 
 3302              		.loc 1 396 5 view .LVU1051
 3303              	# sieve_extend.c:396:     const counter_t range_stop_unique =  min(range_start + WORD_SIZE_counter 
 396:sieve_extend.c **** 
 3304              		.loc 1 396 21 is_stmt 0 view .LVU1052
 3305 154a 4939C8   		cmp	r8, rcx	# tmp182, range_stop
 3306 154d 4C0F47C1 		cmova	r8, rcx	# tmp182,, range_stop_unique, range_stop
 3307              	.LVL118:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3308              		.loc 1 399 5 is_stmt 1 view .LVU1053
GAS LISTING /tmp/cct11Qa0.s 			page 97


 3309              	.LBB273:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3310              		.loc 1 399 10 view .LVU1054
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3311              		.loc 1 399 41 view .LVU1055
 3312              	# sieve_extend.c:399:     for (counter_t index = range_start; index < range_stop_unique;) {
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3313              		.loc 1 399 5 is_stmt 0 view .LVU1056
 3314 1551 4C39C6   		cmp	rsi, r8	# range_start, range_stop_unique
 3315 1554 0F83EA02 		jnb	.L269	#,
 3315      0000
 3316              	.LBB274:
 3317              	# sieve_extend.c:401:         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_
 401:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3318              		.loc 1 401 30 view .LVU1057
 3319 155a C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp205
 3320              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3321              		.loc 1 413 33 view .LVU1058
 3322 155e 4989C9   		mov	r9, rcx	# _69, range_stop
 3323 1561 49C1E908 		shr	r9, 8	# _69,
 3324              	# sieve_extend.c:418:         counter_t range_stop_word = wordindex(range_stop);
 418:sieve_extend.c ****         if (index_word <= range_stop_word) {
 3325              		.loc 1 418 19 view .LVU1059
 3326 1565 48C1E906 		shr	rcx, 6	# range_stop,
 3327              	.LVL119:
 418:sieve_extend.c ****         if (index_word <= range_stop_word) {
 3328              		.loc 1 418 19 view .LVU1060
 3329 1569 4883FA01 		cmp	rdx, 1	# step,
 3330 156d 4989CA   		mov	r10, rcx	# range_stop_word, range_stop
 3331              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3332              		.loc 1 405 31 view .LVU1061
 3333 1570 B9010000 		mov	ecx, 1	# tmp209,
 3333      00
 3334 1575 0F853103 		jne	.L386	#,
 3334      0000
 3335              	.LVL120:
 3336 157b 0F1F4400 		.p2align 4
 3336      00
 3337              		.p2align 3
 3338              	.L271:
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3339              		.loc 1 400 9 is_stmt 1 view .LVU1062
 3340              	# sieve_extend.c:400:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3341              		.loc 1 400 54 is_stmt 0 view .LVU1063
 3342 1580 4889F2   		mov	rdx, rsi	# tmp204, range_start
 3343              	# sieve_extend.c:402:         register counter_t word = wordindex(index) - current_vector_start_wor
 402:sieve_extend.c ****         
 3344              		.loc 1 402 35 view .LVU1064
 3345 1583 4889F0   		mov	rax, rsi	# tmp206, range_start
 3346              	# sieve_extend.c:400:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3347              		.loc 1 400 54 view .LVU1065
 3348 1586 48C1EA08 		shr	rdx, 8	# tmp204,
 3349 158a 4D89C3   		mov	r11, r8	# tmp230, range_stop_unique
GAS LISTING /tmp/cct11Qa0.s 			page 98


 3350              	# sieve_extend.c:402:         register counter_t word = wordindex(index) - current_vector_start_wor
 402:sieve_extend.c ****         
 3351              		.loc 1 402 35 view .LVU1066
 3352 158d 48C1E806 		shr	rax, 6	# tmp206,
 3353 1591 4929F3   		sub	r11, rsi	# tmp230, range_start
 3354              	# sieve_extend.c:400:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3355              		.loc 1 400 25 view .LVU1067
 3356 1594 48C1E202 		sal	rdx, 2	# current_vector_start_word,
 3357              	.LVL121:
 401:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3358              		.loc 1 401 9 is_stmt 1 view .LVU1068
 3359              	# sieve_extend.c:401:         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_
 401:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3360              		.loc 1 401 30 is_stmt 0 view .LVU1069
 3361 1598 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp205
 3361      24
 402:sieve_extend.c ****         
 3362              		.loc 1 402 9 is_stmt 1 view .LVU1070
 3363              	# sieve_extend.c:402:         register counter_t word = wordindex(index) - current_vector_start_wor
 402:sieve_extend.c ****         
 3364              		.loc 1 402 28 is_stmt 0 view .LVU1071
 3365 159d 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3366              	.LVL122:
 402:sieve_extend.c ****         
 3367              		.loc 1 402 28 view .LVU1072
 3368 15a0 4183E303 		and	r11d, 3	# tmp231,
 3369 15a4 747A     		je	.L282	#,
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3370              		.loc 1 404 9 is_stmt 1 view .LVU1073
 405:sieve_extend.c ****             index += step;
 3371              		.loc 1 405 13 view .LVU1074
 3372              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3373              		.loc 1 405 31 is_stmt 0 view .LVU1075
 3374 15a6 C4E2C9F7 		shlx	rbx, rcx, rsi	# tmp265, tmp209, range_start
 3374      D9
 3375              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3376              		.loc 1 406 19 view .LVU1076
 3377 15ab 4883C601 		add	rsi, 1	# range_start,
 3378              	.LVL123:
 3379              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3380              		.loc 1 405 28 view .LVU1077
 3381 15af 48091CC4 		or	QWORD PTR [rsp+rax*8], rbx	# quadmask, tmp265
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3382              		.loc 1 406 13 is_stmt 1 view .LVU1078
 3383              	.LVL124:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3384              		.loc 1 407 13 view .LVU1079
 3385              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3386              		.loc 1 407 20 is_stmt 0 view .LVU1080
 3387 15b3 4889F0   		mov	rax, rsi	# tmp266, range_start
 3388              	.LVL125:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
GAS LISTING /tmp/cct11Qa0.s 			page 99


 3389              		.loc 1 407 20 view .LVU1081
 3390 15b6 48C1E806 		shr	rax, 6	# tmp266,
 3391              	.LVL126:
 3392              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3393              		.loc 1 407 18 view .LVU1082
 3394 15ba 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3395              	.LVL127:
 408:sieve_extend.c ****         
 3396              		.loc 1 408 17 is_stmt 1 view .LVU1083
 3397              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3398              		.loc 1 408 9 is_stmt 0 view .LVU1084
 3399 15bd 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 3400 15c0 0F82DA00 		jb	.L293	#,
 3400      0000
 3401 15c6 4883F803 		cmp	rax, 3	# word,
 3402 15ca 0F87D000 		ja	.L293	#,
 3402      0000
 3403 15d0 4983FB01 		cmp	r11, 1	# tmp231,
 3404 15d4 744A     		je	.L282	#,
 3405 15d6 4983FB02 		cmp	r11, 2	# tmp231,
 3406 15da 7421     		je	.L359	#,
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3407              		.loc 1 404 9 is_stmt 1 view .LVU1085
 405:sieve_extend.c ****             index += step;
 3408              		.loc 1 405 13 view .LVU1086
 3409              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3410              		.loc 1 405 31 is_stmt 0 view .LVU1087
 3411 15dc C462C9F7 		shlx	r12, rcx, rsi	# tmp269, tmp209, range_start
 3411      E1
 3412              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3413              		.loc 1 406 19 view .LVU1088
 3414 15e1 4883C601 		add	rsi, 1	# range_start,
 3415              	.LVL128:
 3416              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3417              		.loc 1 405 28 view .LVU1089
 3418 15e5 4C0924C4 		or	QWORD PTR [rsp+rax*8], r12	# quadmask, tmp269
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3419              		.loc 1 406 13 is_stmt 1 view .LVU1090
 3420              	.LVL129:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3421              		.loc 1 407 13 view .LVU1091
 3422              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3423              		.loc 1 407 20 is_stmt 0 view .LVU1092
 3424 15e9 4889F0   		mov	rax, rsi	# tmp270, range_start
 3425              	.LVL130:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3426              		.loc 1 407 20 view .LVU1093
 3427 15ec 48C1E806 		shr	rax, 6	# tmp270,
 3428              	.LVL131:
 3429              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
GAS LISTING /tmp/cct11Qa0.s 			page 100


 3430              		.loc 1 407 18 view .LVU1094
 3431 15f0 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3432              	.LVL132:
 408:sieve_extend.c ****         
 3433              		.loc 1 408 17 is_stmt 1 view .LVU1095
 3434              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3435              		.loc 1 408 9 is_stmt 0 view .LVU1096
 3436 15f3 4883F803 		cmp	rax, 3	# word,
 3437 15f7 0F87A300 		ja	.L293	#,
 3437      0000
 3438              	.L359:
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3439              		.loc 1 404 9 is_stmt 1 view .LVU1097
 405:sieve_extend.c ****             index += step;
 3440              		.loc 1 405 13 view .LVU1098
 3441              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3442              		.loc 1 405 31 is_stmt 0 view .LVU1099
 3443 15fd C462C9F7 		shlx	r11, rcx, rsi	# tmp273, tmp209, range_start
 3443      D9
 3444              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3445              		.loc 1 406 19 view .LVU1100
 3446 1602 4883C601 		add	rsi, 1	# range_start,
 3447              	.LVL133:
 3448              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3449              		.loc 1 405 28 view .LVU1101
 3450 1606 4C091CC4 		or	QWORD PTR [rsp+rax*8], r11	# quadmask, tmp273
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3451              		.loc 1 406 13 is_stmt 1 view .LVU1102
 3452              	.LVL134:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3453              		.loc 1 407 13 view .LVU1103
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3454              		.loc 1 407 13 view .LVU1104
 3455              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3456              		.loc 1 407 20 is_stmt 0 view .LVU1105
 3457 160a 4889F0   		mov	rax, rsi	# tmp288, range_start
 3458              	.LVL135:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3459              		.loc 1 407 20 view .LVU1106
 3460 160d 48C1E806 		shr	rax, 6	# tmp288,
 3461              	.LVL136:
 3462              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3463              		.loc 1 407 18 view .LVU1107
 3464 1611 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3465              	.LVL137:
 408:sieve_extend.c ****         
 3466              		.loc 1 408 17 is_stmt 1 view .LVU1108
 3467              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3468              		.loc 1 408 9 is_stmt 0 view .LVU1109
 3469 1614 4883F803 		cmp	rax, 3	# word,
GAS LISTING /tmp/cct11Qa0.s 			page 101


 3470 1618 0F878200 		ja	.L293	#,
 3470      0000
 3471 161e 6690     		.p2align 4
 3472              		.p2align 3
 3473              	.L282:
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3474              		.loc 1 404 9 is_stmt 1 view .LVU1110
 405:sieve_extend.c ****             index += step;
 3475              		.loc 1 405 13 view .LVU1111
 3476              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3477              		.loc 1 406 19 is_stmt 0 view .LVU1112
 3478 1620 4C8D6601 		lea	r12, 1[rsi]	# tmp232,
 3479              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3480              		.loc 1 405 31 view .LVU1113
 3481 1624 C4E2C9F7 		shlx	rbx, rcx, rsi	# tmp208, tmp209, range_start
 3481      D9
 3482              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3483              		.loc 1 407 20 view .LVU1114
 3484 1629 4D89E3   		mov	r11, r12	# tmp210, range_start
 3485              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3486              		.loc 1 405 28 view .LVU1115
 3487 162c 48091CC4 		or	QWORD PTR [rsp+rax*8], rbx	# quadmask, tmp208
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3488              		.loc 1 406 13 is_stmt 1 view .LVU1116
 3489              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3490              		.loc 1 407 20 is_stmt 0 view .LVU1117
 3491 1630 49C1EB06 		shr	r11, 6	# tmp210,
 3492              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3493              		.loc 1 406 19 view .LVU1118
 3494 1634 4C89E6   		mov	rsi, r12	# range_start, tmp232
 3495              	.LVL138:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3496              		.loc 1 407 13 is_stmt 1 view .LVU1119
 3497              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3498              		.loc 1 407 18 is_stmt 0 view .LVU1120
 3499 1637 4929D3   		sub	r11, rdx	# word, current_vector_start_word
 408:sieve_extend.c ****         
 3500              		.loc 1 408 17 is_stmt 1 view .LVU1121
 3501              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3502              		.loc 1 408 9 is_stmt 0 view .LVU1122
 3503 163a 4D39E0   		cmp	r8, r12	# range_stop_unique, range_start
 3504 163d 7261     		jb	.L293	#,
 408:sieve_extend.c ****         
 3505              		.loc 1 408 9 view .LVU1123
 3506 163f 4983FB03 		cmp	r11, 3	# word,
 3507 1643 775B     		ja	.L293	#,
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3508              		.loc 1 404 9 is_stmt 1 view .LVU1124
 405:sieve_extend.c ****             index += step;
GAS LISTING /tmp/cct11Qa0.s 			page 102


 3509              		.loc 1 405 13 view .LVU1125
 3510              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3511              		.loc 1 406 19 is_stmt 0 view .LVU1126
 3512 1645 4883C601 		add	rsi, 1	# range_start,
 3513              	.LVL139:
 3514              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3515              		.loc 1 405 31 view .LVU1127
 3516 1649 C4E299F7 		shlx	rax, rcx, r12	# tmp277, tmp209, range_start
 3516      C1
 3517              	.LVL140:
 3518              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3519              		.loc 1 407 20 view .LVU1128
 3520 164e 4889F3   		mov	rbx, rsi	# tmp278, range_start
 3521              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3522              		.loc 1 405 28 view .LVU1129
 3523 1651 4A0904DC 		or	QWORD PTR [rsp+r11*8], rax	# quadmask, tmp277
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3524              		.loc 1 406 13 is_stmt 1 view .LVU1130
 3525              	.LVL141:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3526              		.loc 1 407 13 view .LVU1131
 3527              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3528              		.loc 1 407 20 is_stmt 0 view .LVU1132
 3529 1655 48C1EB06 		shr	rbx, 6	# tmp278,
 3530              	.LVL142:
 3531              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3532              		.loc 1 407 18 view .LVU1133
 3533 1659 4829D3   		sub	rbx, rdx	# word, current_vector_start_word
 408:sieve_extend.c ****         
 3534              		.loc 1 408 17 is_stmt 1 view .LVU1134
 3535              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3536              		.loc 1 408 9 is_stmt 0 view .LVU1135
 3537 165c 4883FB03 		cmp	rbx, 3	# word,
 3538 1660 773E     		ja	.L293	#,
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3539              		.loc 1 404 9 is_stmt 1 view .LVU1136
 405:sieve_extend.c ****             index += step;
 3540              		.loc 1 405 13 view .LVU1137
 3541              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3542              		.loc 1 405 31 is_stmt 0 view .LVU1138
 3543 1662 C4E2C9F7 		shlx	rsi, rcx, rsi	# tmp282, tmp209, range_start
 3543      F1
 3544              	.LVL143:
 3545              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3546              		.loc 1 405 28 view .LVU1139
 3547 1667 480934DC 		or	QWORD PTR [rsp+rbx*8], rsi	# quadmask, tmp282
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3548              		.loc 1 406 13 is_stmt 1 view .LVU1140
GAS LISTING /tmp/cct11Qa0.s 			page 103


 3549              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3550              		.loc 1 406 19 is_stmt 0 view .LVU1141
 3551 166b 498D7424 		lea	rsi, 2[r12]	# range_start,
 3551      02
 3552              	.LVL144:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3553              		.loc 1 407 13 is_stmt 1 view .LVU1142
 3554              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3555              		.loc 1 407 20 is_stmt 0 view .LVU1143
 3556 1670 4989F3   		mov	r11, rsi	# tmp283, range_start
 3557 1673 49C1EB06 		shr	r11, 6	# tmp283,
 3558              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3559              		.loc 1 407 18 view .LVU1144
 3560 1677 4929D3   		sub	r11, rdx	# word, current_vector_start_word
 408:sieve_extend.c ****         
 3561              		.loc 1 408 17 is_stmt 1 view .LVU1145
 3562              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3563              		.loc 1 408 9 is_stmt 0 view .LVU1146
 3564 167a 4983FB03 		cmp	r11, 3	# word,
 3565 167e 7720     		ja	.L293	#,
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3566              		.loc 1 404 9 is_stmt 1 view .LVU1147
 405:sieve_extend.c ****             index += step;
 3567              		.loc 1 405 13 view .LVU1148
 3568              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3569              		.loc 1 405 31 is_stmt 0 view .LVU1149
 3570 1680 C4E2C9F7 		shlx	rax, rcx, rsi	# tmp287, tmp209, range_start
 3570      C1
 3571              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3572              		.loc 1 406 19 view .LVU1150
 3573 1685 498D7424 		lea	rsi, 3[r12]	# range_start,
 3573      03
 3574              	.LVL145:
 3575              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3576              		.loc 1 405 28 view .LVU1151
 3577 168a 4A0904DC 		or	QWORD PTR [rsp+r11*8], rax	# quadmask, tmp287
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3578              		.loc 1 406 13 is_stmt 1 view .LVU1152
 3579              	.LVL146:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3580              		.loc 1 407 13 view .LVU1153
 3581              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3582              		.loc 1 407 20 is_stmt 0 view .LVU1154
 3583 168e 4889F0   		mov	rax, rsi	# tmp288, range_start
 3584 1691 48C1E806 		shr	rax, 6	# tmp288,
 3585              	.LVL147:
 3586              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3587              		.loc 1 407 18 view .LVU1155
GAS LISTING /tmp/cct11Qa0.s 			page 104


 3588 1695 4829D0   		sub	rax, rdx	# word, current_vector_start_word
 3589              	.LVL148:
 408:sieve_extend.c ****         
 3590              		.loc 1 408 17 is_stmt 1 view .LVU1156
 3591              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3592              		.loc 1 408 9 is_stmt 0 view .LVU1157
 3593 1698 4883F803 		cmp	rax, 3	# word,
 3594 169c 7682     		jbe	.L282	#,
 3595              	.LVL149:
 3596 169e 6690     		.p2align 4
 3597              		.p2align 3
 3598              	.L293:
 410:sieve_extend.c ****         
 3599              		.loc 1 410 9 is_stmt 1 view .LVU1158
 3600              	# sieve_extend.c:410:         register counter_t current_vector = current_vector_start_word>>2;
 410:sieve_extend.c ****         
 3601              		.loc 1 410 28 is_stmt 0 view .LVU1159
 3602 16a0 48C1EA02 		shr	rdx, 2	# current_vector,
 3603              	.LVL150:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3604              		.loc 1 413 9 is_stmt 1 view .LVU1160
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3605              		.loc 1 413 15 view .LVU1161
 3606              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3607              		.loc 1 413 9 is_stmt 0 view .LVU1162
 3608 16a4 4939D1   		cmp	r9, rdx	# _69, current_vector
 3609 16a7 0F827E01 		jb	.L284	#,
 3609      0000
 3610 16ad 4989D4   		mov	r12, rdx	# tmp215, current_vector
 3611 16b0 4C89CB   		mov	rbx, r9	# tmp226, _69
 3612 16b3 49C1E405 		sal	r12, 5	# tmp215,
 3613 16b7 4829D3   		sub	rbx, rdx	# tmp226, current_vector
 3614              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3615              		.loc 1 414 45 view .LVU1163
 3616 16ba C57D6F14 		vmovdqa	ymm10, YMMWORD PTR [rsp]	# quadmask.56_105, quadmask
 3616      24
 3617 16bf 4901FC   		add	r12, rdi	# ivtmp.243, bitarray_word
 3618              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3619              		.loc 1 413 73 view .LVU1164
 3620 16c2 4883C201 		add	rdx, 1	# current_vector,
 3621              	.LVL151:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3622              		.loc 1 413 73 view .LVU1165
 3623 16c6 83E307   		and	ebx, 7	# tmp227,
 414:sieve_extend.c ****         }
 3624              		.loc 1 414 13 is_stmt 1 view .LVU1166
 3625              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3626              		.loc 1 414 45 is_stmt 0 view .LVU1167
 3627 16c9 C4412DEB 		vpor	ymm11, ymm10, YMMWORD PTR [r12]	# tmp216, quadmask.56_105, MEM[base: _153, offset: 0B]
 3627      1C24
 3628              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/cct11Qa0.s 			page 105


 3629              		.loc 1 413 9 view .LVU1168
 3630 16cf 4939D1   		cmp	r9, rdx	# _69, current_vector
 3631              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3632              		.loc 1 414 45 view .LVU1169
 3633 16d2 C4417D7F 		vmovdqa	YMMWORD PTR [r12], ymm11	# MEM[base: _153, offset: 0B], tmp216
 3633      1C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3634              		.loc 1 413 58 is_stmt 1 view .LVU1170
 3635              	.LVL152:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3636              		.loc 1 413 15 view .LVU1171
 3637 16d8 4D8D5C24 		lea	r11, 32[r12]	# ivtmp.243,
 3637      20
 3638              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3639              		.loc 1 413 9 is_stmt 0 view .LVU1172
 3640 16dd 0F824801 		jb	.L284	#,
 3640      0000
 3641 16e3 4885DB   		test	rbx, rbx	# tmp227
 3642 16e6 0F84B400 		je	.L285	#,
 3642      0000
 3643 16ec 4883FB01 		cmp	rbx, 1	# tmp227,
 3644 16f0 0F848F00 		je	.L352	#,
 3644      0000
 3645 16f6 4883FB02 		cmp	rbx, 2	# tmp227,
 3646 16fa 7477     		je	.L353	#,
 3647 16fc 4883FB03 		cmp	rbx, 3	# tmp227,
 3648 1700 745F     		je	.L354	#,
 3649 1702 4883FB04 		cmp	rbx, 4	# tmp227,
 3650 1706 7447     		je	.L355	#,
 3651 1708 4883FB05 		cmp	rbx, 5	# tmp227,
 3652 170c 742F     		je	.L356	#,
 3653 170e 4883FB06 		cmp	rbx, 6	# tmp227,
 3654 1712 7417     		je	.L357	#,
 414:sieve_extend.c ****         }
 3655              		.loc 1 414 13 is_stmt 1 view .LVU1173
 3656              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3657              		.loc 1 414 45 is_stmt 0 view .LVU1174
 3658 1714 C4412DEB 		vpor	ymm12, ymm10, YMMWORD PTR 32[r12]	# tmp258, quadmask.56_105, MEM[base: _153, offset: 0B]
 3658      642420
 3659              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3660              		.loc 1 413 73 view .LVU1175
 3661 171b 4883C201 		add	rdx, 1	# current_vector,
 3662              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3663              		.loc 1 414 45 view .LVU1176
 3664 171f C4417D7F 		vmovdqa	YMMWORD PTR 32[r12], ymm12	# MEM[base: _153, offset: 0B], tmp258
 3664      642420
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3665              		.loc 1 413 58 is_stmt 1 view .LVU1177
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3666              		.loc 1 413 15 view .LVU1178
 3667 1726 4D8D5C24 		lea	r11, 64[r12]	# ivtmp.243,
 3667      40
GAS LISTING /tmp/cct11Qa0.s 			page 106


 3668              	.L357:
 414:sieve_extend.c ****         }
 3669              		.loc 1 414 13 view .LVU1179
 3670              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3671              		.loc 1 414 45 is_stmt 0 view .LVU1180
 3672 172b C4412DEB 		vpor	ymm13, ymm10, YMMWORD PTR [r11]	# tmp259, quadmask.56_105, MEM[base: _153, offset: 0B]
 3672      2B
 3673              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3674              		.loc 1 413 73 view .LVU1181
 3675 1730 4883C201 		add	rdx, 1	# current_vector,
 3676              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3677              		.loc 1 414 45 view .LVU1182
 3678 1734 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm13	# MEM[base: _153, offset: 0B], tmp259
 3678      2B
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3679              		.loc 1 413 58 is_stmt 1 view .LVU1183
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3680              		.loc 1 413 15 view .LVU1184
 3681 1739 4983C320 		add	r11, 32	# ivtmp.243,
 3682              	.L356:
 414:sieve_extend.c ****         }
 3683              		.loc 1 414 13 view .LVU1185
 3684              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3685              		.loc 1 414 45 is_stmt 0 view .LVU1186
 3686 173d C4412DEB 		vpor	ymm14, ymm10, YMMWORD PTR [r11]	# tmp260, quadmask.56_105, MEM[base: _153, offset: 0B]
 3686      33
 3687              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3688              		.loc 1 413 73 view .LVU1187
 3689 1742 4883C201 		add	rdx, 1	# current_vector,
 3690              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3691              		.loc 1 414 45 view .LVU1188
 3692 1746 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm14	# MEM[base: _153, offset: 0B], tmp260
 3692      33
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3693              		.loc 1 413 58 is_stmt 1 view .LVU1189
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3694              		.loc 1 413 15 view .LVU1190
 3695 174b 4983C320 		add	r11, 32	# ivtmp.243,
 3696              	.L355:
 414:sieve_extend.c ****         }
 3697              		.loc 1 414 13 view .LVU1191
 3698              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3699              		.loc 1 414 45 is_stmt 0 view .LVU1192
 3700 174f C4412DEB 		vpor	ymm15, ymm10, YMMWORD PTR [r11]	# tmp261, quadmask.56_105, MEM[base: _153, offset: 0B]
 3700      3B
 3701              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3702              		.loc 1 413 73 view .LVU1193
 3703 1754 4883C201 		add	rdx, 1	# current_vector,
 3704              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/cct11Qa0.s 			page 107


 414:sieve_extend.c ****         }
 3705              		.loc 1 414 45 view .LVU1194
 3706 1758 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm15	# MEM[base: _153, offset: 0B], tmp261
 3706      3B
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3707              		.loc 1 413 58 is_stmt 1 view .LVU1195
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3708              		.loc 1 413 15 view .LVU1196
 3709 175d 4983C320 		add	r11, 32	# ivtmp.243,
 3710              	.L354:
 414:sieve_extend.c ****         }
 3711              		.loc 1 414 13 view .LVU1197
 3712              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3713              		.loc 1 414 45 is_stmt 0 view .LVU1198
 3714 1761 C4C12DEB 		vpor	ymm0, ymm10, YMMWORD PTR [r11]	# tmp262, quadmask.56_105, MEM[base: _153, offset: 0B]
 3714      03
 3715              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3716              		.loc 1 413 73 view .LVU1199
 3717 1766 4883C201 		add	rdx, 1	# current_vector,
 3718              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3719              		.loc 1 414 45 view .LVU1200
 3720 176a C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm0	# MEM[base: _153, offset: 0B], tmp262
 3720      03
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3721              		.loc 1 413 58 is_stmt 1 view .LVU1201
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3722              		.loc 1 413 15 view .LVU1202
 3723 176f 4983C320 		add	r11, 32	# ivtmp.243,
 3724              	.L353:
 414:sieve_extend.c ****         }
 3725              		.loc 1 414 13 view .LVU1203
 3726              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3727              		.loc 1 414 45 is_stmt 0 view .LVU1204
 3728 1773 C4C12DEB 		vpor	ymm1, ymm10, YMMWORD PTR [r11]	# tmp263, quadmask.56_105, MEM[base: _153, offset: 0B]
 3728      0B
 3729              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3730              		.loc 1 413 73 view .LVU1205
 3731 1778 4883C201 		add	rdx, 1	# current_vector,
 3732              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3733              		.loc 1 414 45 view .LVU1206
 3734 177c C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm1	# MEM[base: _153, offset: 0B], tmp263
 3734      0B
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3735              		.loc 1 413 58 is_stmt 1 view .LVU1207
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3736              		.loc 1 413 15 view .LVU1208
 3737 1781 4983C320 		add	r11, 32	# ivtmp.243,
 3738              	.L352:
 414:sieve_extend.c ****         }
 3739              		.loc 1 414 13 view .LVU1209
 3740              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/cct11Qa0.s 			page 108


 414:sieve_extend.c ****         }
 3741              		.loc 1 414 45 is_stmt 0 view .LVU1210
 3742 1785 C4C12DEB 		vpor	ymm3, ymm10, YMMWORD PTR [r11]	# tmp264, quadmask.56_105, MEM[base: _153, offset: 0B]
 3742      1B
 3743              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3744              		.loc 1 413 73 view .LVU1211
 3745 178a 4883C201 		add	rdx, 1	# current_vector,
 3746              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3747              		.loc 1 414 45 view .LVU1212
 3748 178e C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm3	# MEM[base: _153, offset: 0B], tmp264
 3748      1B
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3749              		.loc 1 413 58 is_stmt 1 view .LVU1213
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3750              		.loc 1 413 15 view .LVU1214
 3751 1793 4983C320 		add	r11, 32	# ivtmp.243,
 3752              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3753              		.loc 1 413 9 is_stmt 0 view .LVU1215
 3754 1797 4939D1   		cmp	r9, rdx	# _69, current_vector
 3755 179a 0F828B00 		jb	.L284	#,
 3755      0000
 3756              	.L285:
 414:sieve_extend.c ****         }
 3757              		.loc 1 414 13 is_stmt 1 view .LVU1216
 3758              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3759              		.loc 1 414 45 is_stmt 0 view .LVU1217
 3760 17a0 C4C12DEB 		vpor	ymm4, ymm10, YMMWORD PTR [r11]	# tmp236, quadmask.56_105, MEM[base: _153, offset: 0B]
 3760      23
 3761 17a5 C4C12DEB 		vpor	ymm5, ymm10, YMMWORD PTR 32[r11]	# tmp239, quadmask.56_105, MEM[base: _153, offset: 0B]
 3761      6B20
 3762 17ab C4C12DEB 		vpor	ymm6, ymm10, YMMWORD PTR 64[r11]	# tmp242, quadmask.56_105, MEM[base: _153, offset: 0B]
 3762      7340
 3763 17b1 C4C12DEB 		vpor	ymm7, ymm10, YMMWORD PTR 96[r11]	# tmp245, quadmask.56_105, MEM[base: _153, offset: 0B]
 3763      7B60
 3764 17b7 C4412DEB 		vpor	ymm8, ymm10, YMMWORD PTR 128[r11]	# tmp248, quadmask.56_105, MEM[base: _153, offset: 0B]
 3764      83800000 
 3764      00
 3765 17c0 C4412DEB 		vpor	ymm9, ymm10, YMMWORD PTR 160[r11]	# tmp251, quadmask.56_105, MEM[base: _153, offset: 0B]
 3765      8BA00000 
 3765      00
 3766 17c9 C4412DEB 		vpor	ymm11, ymm10, YMMWORD PTR 192[r11]	# tmp254, quadmask.56_105, MEM[base: _153, offset: 0B]
 3766      9BC00000 
 3766      00
 3767 17d2 C4412DEB 		vpor	ymm12, ymm10, YMMWORD PTR 224[r11]	# tmp257, quadmask.56_105, MEM[base: _153, offset: 0B]
 3767      A3E00000 
 3767      00
 3768              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3769              		.loc 1 413 73 view .LVU1218
 3770 17db 4883C208 		add	rdx, 8	# current_vector,
 3771 17df 4981C300 		add	r11, 256	# ivtmp.243,
 3771      010000
 3772              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/cct11Qa0.s 			page 109


 414:sieve_extend.c ****         }
 3773              		.loc 1 414 45 view .LVU1219
 3774 17e6 C4C17D7F 		vmovdqa	YMMWORD PTR -256[r11], ymm4	# MEM[base: _153, offset: 0B], tmp236
 3774      A300FFFF 
 3774      FF
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3775              		.loc 1 413 58 is_stmt 1 view .LVU1220
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3776              		.loc 1 413 15 view .LVU1221
 414:sieve_extend.c ****         }
 3777              		.loc 1 414 13 view .LVU1222
 3778              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3779              		.loc 1 414 45 is_stmt 0 view .LVU1223
 3780 17ef C4C17D7F 		vmovdqa	YMMWORD PTR -224[r11], ymm5	# MEM[base: _153, offset: 0B], tmp239
 3780      AB20FFFF 
 3780      FF
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3781              		.loc 1 413 58 is_stmt 1 view .LVU1224
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3782              		.loc 1 413 15 view .LVU1225
 414:sieve_extend.c ****         }
 3783              		.loc 1 414 13 view .LVU1226
 3784              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3785              		.loc 1 414 45 is_stmt 0 view .LVU1227
 3786 17f8 C4C17D7F 		vmovdqa	YMMWORD PTR -192[r11], ymm6	# MEM[base: _153, offset: 0B], tmp242
 3786      B340FFFF 
 3786      FF
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3787              		.loc 1 413 58 is_stmt 1 view .LVU1228
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3788              		.loc 1 413 15 view .LVU1229
 414:sieve_extend.c ****         }
 3789              		.loc 1 414 13 view .LVU1230
 3790              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3791              		.loc 1 414 45 is_stmt 0 view .LVU1231
 3792 1801 C4C17D7F 		vmovdqa	YMMWORD PTR -160[r11], ymm7	# MEM[base: _153, offset: 0B], tmp245
 3792      BB60FFFF 
 3792      FF
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3793              		.loc 1 413 58 is_stmt 1 view .LVU1232
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3794              		.loc 1 413 15 view .LVU1233
 414:sieve_extend.c ****         }
 3795              		.loc 1 414 13 view .LVU1234
 3796              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3797              		.loc 1 414 45 is_stmt 0 view .LVU1235
 3798 180a C4417D7F 		vmovdqa	YMMWORD PTR -128[r11], ymm8	# MEM[base: _153, offset: 0B], tmp248
 3798      4380
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3799              		.loc 1 413 58 is_stmt 1 view .LVU1236
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3800              		.loc 1 413 15 view .LVU1237
 414:sieve_extend.c ****         }
GAS LISTING /tmp/cct11Qa0.s 			page 110


 3801              		.loc 1 414 13 view .LVU1238
 3802              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3803              		.loc 1 414 45 is_stmt 0 view .LVU1239
 3804 1810 C4417D7F 		vmovdqa	YMMWORD PTR -96[r11], ymm9	# MEM[base: _153, offset: 0B], tmp251
 3804      4BA0
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3805              		.loc 1 413 58 is_stmt 1 view .LVU1240
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3806              		.loc 1 413 15 view .LVU1241
 414:sieve_extend.c ****         }
 3807              		.loc 1 414 13 view .LVU1242
 3808              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3809              		.loc 1 414 45 is_stmt 0 view .LVU1243
 3810 1816 C4417D7F 		vmovdqa	YMMWORD PTR -64[r11], ymm11	# MEM[base: _153, offset: 0B], tmp254
 3810      5BC0
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3811              		.loc 1 413 58 is_stmt 1 view .LVU1244
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3812              		.loc 1 413 15 view .LVU1245
 414:sieve_extend.c ****         }
 3813              		.loc 1 414 13 view .LVU1246
 3814              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 3815              		.loc 1 414 45 is_stmt 0 view .LVU1247
 3816 181c C4417D7F 		vmovdqa	YMMWORD PTR -32[r11], ymm12	# MEM[base: _153, offset: 0B], tmp257
 3816      63E0
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3817              		.loc 1 413 58 is_stmt 1 view .LVU1248
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3818              		.loc 1 413 15 view .LVU1249
 3819              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 3820              		.loc 1 413 9 is_stmt 0 view .LVU1250
 3821 1822 4939D1   		cmp	r9, rdx	# _69, current_vector
 3822 1825 0F8375FF 		jnb	.L285	#,
 3822      FFFF
 3823              	.L284:
 417:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 3824              		.loc 1 417 9 is_stmt 1 view .LVU1251
 3825              	# sieve_extend.c:417:         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 417:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 3826              		.loc 1 417 19 is_stmt 0 view .LVU1252
 3827 182b 488D0495 		lea	rax, 0[0+rdx*4]	# index_word,
 3827      00000000 
 3828              	.LVL153:
 418:sieve_extend.c ****         if (index_word <= range_stop_word) {
 3829              		.loc 1 418 9 is_stmt 1 view .LVU1253
 419:sieve_extend.c ****             #pragma ivdep
 3830              		.loc 1 419 9 view .LVU1254
 3831              	# sieve_extend.c:419:         if (index_word <= range_stop_word) {
 419:sieve_extend.c ****             #pragma ivdep
 3832              		.loc 1 419 12 is_stmt 0 view .LVU1255
 3833 1833 4939C2   		cmp	r10, rax	# range_stop_word, index_word
 3834 1836 7330     		jnb	.L387	#,
 3835              	.LVL154:
GAS LISTING /tmp/cct11Qa0.s 			page 111


 3836              	.L287:
 419:sieve_extend.c ****             #pragma ivdep
 3837              		.loc 1 419 12 view .LVU1256
 3838              	.LBE274:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3839              		.loc 1 399 41 is_stmt 1 view .LVU1257
 3840              	# sieve_extend.c:399:     for (counter_t index = range_start; index < range_stop_unique;) {
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3841              		.loc 1 399 5 is_stmt 0 view .LVU1258
 3842 1838 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 3843 183b 0F873FFD 		ja	.L271	#,
 3843      FFFF
 3844              	.LVL155:
 3845              	.L385:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3846              		.loc 1 399 5 view .LVU1259
 3847 1841 C5F877   		vzeroupper
 3848              	.L269:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 3849              		.loc 1 399 5 view .LVU1260
 3850              	.LBE273:
 3851              	# sieve_extend.c:427: }
 427:sieve_extend.c **** 
 3852              		.loc 1 427 1 view .LVU1261
 3853 1844 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp309, D.34768
 3853      38
 3854 1849 64483304 		xor	rax, QWORD PTR fs:40	# tmp309, MEM[(<address-space-1> long unsigned int *)40B]
 3854      25280000 
 3854      00
 3855 1852 0F85F701 		jne	.L388	#,
 3855      0000
 3856 1858 488D65F0 		lea	rsp, -16[rbp]	#,
 3857 185c 5B       		pop	rbx	#
 3858 185d 415C     		pop	r12	#
 3859 185f 5D       		pop	rbp	#
 3860              		.cfi_remember_state
 3861              		.cfi_def_cfa 7, 8
 3862 1860 C3       		ret	
 3863              	.LVL156:
 3864              		.p2align 4,,7
 3865 1861 0F1F8000 		.p2align 3
 3865      000000
 3866              	.L387:
 3867              		.cfi_restore_state
 3868              	.LBB277:
 3869              	.LBB275:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3870              		.loc 1 421 27 is_stmt 1 view .LVU1262
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3871              		.loc 1 422 17 view .LVU1263
 423:sieve_extend.c ****             }
 3872              		.loc 1 423 21 view .LVU1264
 3873              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3874              		.loc 1 423 52 is_stmt 0 view .LVU1265
 3875 1868 4C8B2424 		mov	r12, QWORD PTR [rsp]	# quadmask, quadmask
 3876              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
GAS LISTING /tmp/cct11Qa0.s 			page 112


 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3877              		.loc 1 422 31 view .LVU1266
 3878 186c 488D5801 		lea	rbx, 1[rax]	# _34,
 3879              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3880              		.loc 1 423 52 view .LVU1267
 3881 1870 48C1E205 		sal	rdx, 5	# tmp217,
 3882 1874 4C092417 		or	QWORD PTR [rdi+rdx], r12	# *_67, quadmask
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3883              		.loc 1 421 51 is_stmt 1 view .LVU1268
 3884              	.LVL157:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3885              		.loc 1 421 27 view .LVU1269
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3886              		.loc 1 422 17 view .LVU1270
 3887              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3888              		.loc 1 422 20 is_stmt 0 view .LVU1271
 3889 1878 4C39D3   		cmp	rbx, r10	# _34, range_stop_word
 3890 187b 7709     		ja	.L288	#,
 423:sieve_extend.c ****             }
 3891              		.loc 1 423 21 is_stmt 1 view .LVU1272
 3892              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3893              		.loc 1 423 52 is_stmt 0 view .LVU1273
 3894 187d 4C8B5C24 		mov	r11, QWORD PTR 8[rsp]	# quadmask, quadmask
 3894      08
 3895 1882 4C091CDF 		or	QWORD PTR [rdi+rbx*8], r11	# *_139, quadmask
 3896              	.L288:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3897              		.loc 1 421 51 is_stmt 1 view .LVU1274
 3898              	.LVL158:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3899              		.loc 1 421 27 view .LVU1275
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3900              		.loc 1 422 17 view .LVU1276
 3901              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3902              		.loc 1 422 31 is_stmt 0 view .LVU1277
 3903 1886 488D5002 		lea	rdx, 2[rax]	# _31,
 3904              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3905              		.loc 1 422 20 view .LVU1278
 3906 188a 4C39D2   		cmp	rdx, r10	# _31, range_stop_word
 3907 188d 7709     		ja	.L289	#,
 423:sieve_extend.c ****             }
 3908              		.loc 1 423 21 is_stmt 1 view .LVU1279
 3909              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3910              		.loc 1 423 52 is_stmt 0 view .LVU1280
 3911 188f 4C8B6424 		mov	r12, QWORD PTR 16[rsp]	# quadmask, quadmask
 3911      10
 3912 1894 4C0924D7 		or	QWORD PTR [rdi+rdx*8], r12	# *_133, quadmask
 3913              	.L289:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3914              		.loc 1 421 51 is_stmt 1 view .LVU1281
 3915              	.LVL159:
GAS LISTING /tmp/cct11Qa0.s 			page 113


 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 3916              		.loc 1 421 27 view .LVU1282
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3917              		.loc 1 422 17 view .LVU1283
 3918              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3919              		.loc 1 422 31 is_stmt 0 view .LVU1284
 3920 1898 4883C003 		add	rax, 3	# _27,
 3921              	.LVL160:
 3922              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 3923              		.loc 1 422 20 view .LVU1285
 3924 189c 4C39D0   		cmp	rax, r10	# _27, range_stop_word
 3925 189f 7797     		ja	.L287	#,
 423:sieve_extend.c ****             }
 3926              		.loc 1 423 21 is_stmt 1 view .LVU1286
 3927              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 3928              		.loc 1 423 52 is_stmt 0 view .LVU1287
 3929 18a1 488B5C24 		mov	rbx, QWORD PTR 24[rsp]	# quadmask, quadmask
 3929      18
 3930              	.LVL161:
 423:sieve_extend.c ****             }
 3931              		.loc 1 423 52 view .LVU1288
 3932 18a6 48091CC7 		or	QWORD PTR [rdi+rax*8], rbx	# *_24, quadmask
 3933 18aa EB8C     		jmp	.L287	#
 3934              	.LVL162:
 3935              	.L386:
 423:sieve_extend.c ****             }
 3936              		.loc 1 423 52 view .LVU1289
 3937 18ac 4889D3   		mov	rbx, rdx	# _157, step
 3938              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3939              		.loc 1 405 31 view .LVU1290
 3940 18af 41BB0100 		mov	r11d, 1	# tmp188,
 3940      0000
 3941 18b5 48C1E305 		sal	rbx, 5	# _157,
 3942              	.LVL163:
 3943 18b9 0F1F8000 		.p2align 4
 3943      000000
 3944              		.p2align 3
 3945              	.L281:
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3946              		.loc 1 400 9 is_stmt 1 view .LVU1291
 3947              	# sieve_extend.c:401:         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_
 401:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3948              		.loc 1 401 30 is_stmt 0 view .LVU1292
 3949 18c0 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp184
 3949      24
 3950              	# sieve_extend.c:400:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3951              		.loc 1 400 54 view .LVU1293
 3952 18c5 4889F0   		mov	rax, rsi	# tmp183, range_start
 3953 18c8 48C1E808 		shr	rax, 8	# tmp183,
 3954              	# sieve_extend.c:400:         const counter_t current_vector_start_word =  vectorindex(index)*VECTO
 400:sieve_extend.c ****         register bitvector_t quadmask = { SAFE_ZERO,SAFE_ZERO,SAFE_ZERO,SAFE_ZERO };
 3955              		.loc 1 400 25 view .LVU1294
GAS LISTING /tmp/cct11Qa0.s 			page 114


 3956 18cc 4C8D2485 		lea	r12, 0[0+rax*4]	# current_vector_start_word,
 3956      00000000 
 3957              	.LVL164:
 401:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3958              		.loc 1 401 9 is_stmt 1 view .LVU1295
 402:sieve_extend.c ****         
 3959              		.loc 1 402 9 view .LVU1296
 3960              	# sieve_extend.c:402:         register counter_t word = wordindex(index) - current_vector_start_wor
 402:sieve_extend.c ****         
 3961              		.loc 1 402 35 is_stmt 0 view .LVU1297
 3962 18d4 4889F0   		mov	rax, rsi	# tmp185, range_start
 3963 18d7 48C1E806 		shr	rax, 6	# tmp185,
 3964              	# sieve_extend.c:402:         register counter_t word = wordindex(index) - current_vector_start_wor
 402:sieve_extend.c ****         
 3965              		.loc 1 402 28 view .LVU1298
 3966 18db 4C29E0   		sub	rax, r12	# word, current_vector_start_word
 3967              	.LVL165:
 402:sieve_extend.c ****         
 3968              		.loc 1 402 28 view .LVU1299
 3969 18de EB05     		jmp	.L272	#
 3970              		.p2align 4,,7
 3971              		.p2align 3
 3972              	.L389:
 3973              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 3974              		.loc 1 408 9 discriminator 1 view .LVU1300
 3975 18e0 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 3976 18e3 721C     		jb	.L292	#,
 3977              	.L272:
 404:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3978              		.loc 1 404 9 is_stmt 1 discriminator 1 view .LVU1301
 405:sieve_extend.c ****             index += step;
 3979              		.loc 1 405 13 discriminator 1 view .LVU1302
 3980              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3981              		.loc 1 405 31 is_stmt 0 discriminator 1 view .LVU1303
 3982 18e5 C4C2C9F7 		shlx	rcx, r11, rsi	# tmp187, tmp188, range_start
 3982      CB
 3983              	# sieve_extend.c:406:             index += step;
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3984              		.loc 1 406 19 discriminator 1 view .LVU1304
 3985 18ea 4801D6   		add	rsi, rdx	# range_start, step
 3986              	.LVL166:
 3987              	# sieve_extend.c:405:             quadmask[word] |= markmask(index);
 405:sieve_extend.c ****             index += step;
 3988              		.loc 1 405 28 discriminator 1 view .LVU1305
 3989 18ed 48090CC4 		or	QWORD PTR [rsp+rax*8], rcx	# quadmask, tmp187
 406:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3990              		.loc 1 406 13 is_stmt 1 discriminator 1 view .LVU1306
 3991              	.LVL167:
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3992              		.loc 1 407 13 discriminator 1 view .LVU1307
 3993              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3994              		.loc 1 407 20 is_stmt 0 discriminator 1 view .LVU1308
 3995 18f1 4889F0   		mov	rax, rsi	# tmp189, range_start
 3996              	.LVL168:
GAS LISTING /tmp/cct11Qa0.s 			page 115


 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 3997              		.loc 1 407 20 discriminator 1 view .LVU1309
 3998 18f4 48C1E806 		shr	rax, 6	# tmp189,
 3999              	# sieve_extend.c:407:             word = wordindex(index) - current_vector_start_word;
 407:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 4000              		.loc 1 407 18 discriminator 1 view .LVU1310
 4001 18f8 4C29E0   		sub	rax, r12	# word, current_vector_start_word
 4002              	.LVL169:
 408:sieve_extend.c ****         
 4003              		.loc 1 408 17 is_stmt 1 discriminator 1 view .LVU1311
 4004              	# sieve_extend.c:408:         } while (word < (VECTOR_ELEMENTS) && index <= range_stop_unique);
 408:sieve_extend.c ****         
 4005              		.loc 1 408 9 is_stmt 0 discriminator 1 view .LVU1312
 4006 18fb 4883F803 		cmp	rax, 3	# word,
 4007 18ff 76DF     		jbe	.L389	#,
 4008              	.L292:
 410:sieve_extend.c ****         
 4009              		.loc 1 410 9 is_stmt 1 view .LVU1313
 4010              	# sieve_extend.c:410:         register counter_t current_vector = current_vector_start_word>>2;
 410:sieve_extend.c ****         
 4011              		.loc 1 410 28 is_stmt 0 view .LVU1314
 4012 1901 4C89E0   		mov	rax, r12	# current_vector_start_word, current_vector_start_word
 4013              	.LVL170:
 410:sieve_extend.c ****         
 4014              		.loc 1 410 28 view .LVU1315
 4015 1904 48C1E802 		shr	rax, 2	# current_vector_start_word,
 4016              	.LVL171:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4017              		.loc 1 413 9 is_stmt 1 view .LVU1316
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4018              		.loc 1 413 15 view .LVU1317
 4019              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4020              		.loc 1 413 9 is_stmt 0 view .LVU1318
 4021 1908 4C39C8   		cmp	rax, r9	# current_vector, _69
 4022 190b 0F87DF00 		ja	.L274	#,
 4022      0000
 4023              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4024              		.loc 1 414 45 view .LVU1319
 4025 1911 C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsp]	# quadmask.56_19, quadmask
 4025      24
 4026 1916 4989C4   		mov	r12, rax	# tmp194, current_vector
 4027              	.LVL172:
 414:sieve_extend.c ****         }
 4028              		.loc 1 414 45 view .LVU1320
 4029 1919 49C1E405 		sal	r12, 5	# tmp194,
 4030 191d 4901FC   		add	r12, rdi	# ivtmp.249, bitarray_word
 4031              	.L275:
 414:sieve_extend.c ****         }
 4032              		.loc 1 414 13 is_stmt 1 discriminator 2 view .LVU1321
 4033              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4034              		.loc 1 414 45 is_stmt 0 discriminator 2 view .LVU1322
 4035 1920 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [r12]	# tmp195, quadmask.56_19, MEM[base: _161, offset: 0B]
 4035      0C24
 4036              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
GAS LISTING /tmp/cct11Qa0.s 			page 116


 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4037              		.loc 1 413 73 discriminator 2 view .LVU1323
 4038 1926 4801D0   		add	rax, rdx	# current_vector, step
 4039              	.LVL173:
 4040              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4041              		.loc 1 414 45 discriminator 2 view .LVU1324
 4042 1929 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm1	# MEM[base: _161, offset: 0B], tmp195
 4042      0C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4043              		.loc 1 413 58 is_stmt 1 discriminator 2 view .LVU1325
 4044              	.LVL174:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4045              		.loc 1 413 15 discriminator 2 view .LVU1326
 4046 192f 4901DC   		add	r12, rbx	# ivtmp.249, _157
 4047              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4048              		.loc 1 413 9 is_stmt 0 discriminator 2 view .LVU1327
 4049 1932 4C39C8   		cmp	rax, r9	# current_vector, _69
 4050 1935 0F87B500 		ja	.L274	#,
 4050      0000
 414:sieve_extend.c ****         }
 4051              		.loc 1 414 13 is_stmt 1 view .LVU1328
 4052              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4053              		.loc 1 414 45 is_stmt 0 view .LVU1329
 4054 193b C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [r12]	# tmp291, quadmask.56_19, MEM[base: _161, offset: 0B]
 4054      1C24
 4055              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4056              		.loc 1 413 73 view .LVU1330
 4057 1941 4801D0   		add	rax, rdx	# current_vector, step
 4058              	.LVL175:
 4059              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4060              		.loc 1 414 45 view .LVU1331
 4061 1944 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm3	# MEM[base: _161, offset: 0B], tmp291
 4061      1C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4062              		.loc 1 413 58 is_stmt 1 view .LVU1332
 4063              	.LVL176:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4064              		.loc 1 413 15 view .LVU1333
 4065 194a 4901DC   		add	r12, rbx	# ivtmp.249, _157
 4066              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4067              		.loc 1 413 9 is_stmt 0 view .LVU1334
 4068 194d 4C39C8   		cmp	rax, r9	# current_vector, _69
 4069 1950 0F879A00 		ja	.L274	#,
 4069      0000
 414:sieve_extend.c ****         }
 4070              		.loc 1 414 13 is_stmt 1 view .LVU1335
 4071              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4072              		.loc 1 414 45 is_stmt 0 view .LVU1336
 4073 1956 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r12]	# tmp293, quadmask.56_19, MEM[base: _161, offset: 0B]
 4073      2424
GAS LISTING /tmp/cct11Qa0.s 			page 117


 4074              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4075              		.loc 1 413 73 view .LVU1337
 4076 195c 4801D0   		add	rax, rdx	# current_vector, step
 4077              	.LVL177:
 4078              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4079              		.loc 1 414 45 view .LVU1338
 4080 195f C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm4	# MEM[base: _161, offset: 0B], tmp293
 4080      2424
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4081              		.loc 1 413 58 is_stmt 1 view .LVU1339
 4082              	.LVL178:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4083              		.loc 1 413 15 view .LVU1340
 4084 1965 4901DC   		add	r12, rbx	# ivtmp.249, _157
 4085              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4086              		.loc 1 413 9 is_stmt 0 view .LVU1341
 4087 1968 4C39C8   		cmp	rax, r9	# current_vector, _69
 4088 196b 0F877F00 		ja	.L274	#,
 4088      0000
 414:sieve_extend.c ****         }
 4089              		.loc 1 414 13 is_stmt 1 view .LVU1342
 4090              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4091              		.loc 1 414 45 is_stmt 0 view .LVU1343
 4092 1971 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r12]	# tmp295, quadmask.56_19, MEM[base: _161, offset: 0B]
 4092      2C24
 4093              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4094              		.loc 1 413 73 view .LVU1344
 4095 1977 4801D0   		add	rax, rdx	# current_vector, step
 4096              	.LVL179:
 4097              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4098              		.loc 1 414 45 view .LVU1345
 4099 197a C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm5	# MEM[base: _161, offset: 0B], tmp295
 4099      2C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4100              		.loc 1 413 58 is_stmt 1 view .LVU1346
 4101              	.LVL180:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4102              		.loc 1 413 15 view .LVU1347
 4103 1980 4901DC   		add	r12, rbx	# ivtmp.249, _157
 4104              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4105              		.loc 1 413 9 is_stmt 0 view .LVU1348
 4106 1983 4C39C8   		cmp	rax, r9	# current_vector, _69
 4107 1986 7768     		ja	.L274	#,
 414:sieve_extend.c ****         }
 4108              		.loc 1 414 13 is_stmt 1 view .LVU1349
 4109              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4110              		.loc 1 414 45 is_stmt 0 view .LVU1350
 4111 1988 C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR [r12]	# tmp297, quadmask.56_19, MEM[base: _161, offset: 0B]
 4111      3424
GAS LISTING /tmp/cct11Qa0.s 			page 118


 4112              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4113              		.loc 1 413 73 view .LVU1351
 4114 198e 4801D0   		add	rax, rdx	# current_vector, step
 4115              	.LVL181:
 4116              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4117              		.loc 1 414 45 view .LVU1352
 4118 1991 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm6	# MEM[base: _161, offset: 0B], tmp297
 4118      3424
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4119              		.loc 1 413 58 is_stmt 1 view .LVU1353
 4120              	.LVL182:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4121              		.loc 1 413 15 view .LVU1354
 4122 1997 4901DC   		add	r12, rbx	# ivtmp.249, _157
 4123              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4124              		.loc 1 413 9 is_stmt 0 view .LVU1355
 4125 199a 4C39C8   		cmp	rax, r9	# current_vector, _69
 4126 199d 7751     		ja	.L274	#,
 414:sieve_extend.c ****         }
 4127              		.loc 1 414 13 is_stmt 1 view .LVU1356
 4128              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4129              		.loc 1 414 45 is_stmt 0 view .LVU1357
 4130 199f C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [r12]	# tmp299, quadmask.56_19, MEM[base: _161, offset: 0B]
 4130      3C24
 4131              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4132              		.loc 1 413 73 view .LVU1358
 4133 19a5 4801D0   		add	rax, rdx	# current_vector, step
 4134              	.LVL183:
 4135              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4136              		.loc 1 414 45 view .LVU1359
 4137 19a8 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm7	# MEM[base: _161, offset: 0B], tmp299
 4137      3C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4138              		.loc 1 413 58 is_stmt 1 view .LVU1360
 4139              	.LVL184:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4140              		.loc 1 413 15 view .LVU1361
 4141 19ae 4901DC   		add	r12, rbx	# ivtmp.249, _157
 4142              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4143              		.loc 1 413 9 is_stmt 0 view .LVU1362
 4144 19b1 4C39C8   		cmp	rax, r9	# current_vector, _69
 4145 19b4 773A     		ja	.L274	#,
 414:sieve_extend.c ****         }
 4146              		.loc 1 414 13 is_stmt 1 view .LVU1363
 4147              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4148              		.loc 1 414 45 is_stmt 0 view .LVU1364
 4149 19b6 C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r12]	# tmp301, quadmask.56_19, MEM[base: _161, offset: 0B]
 4149      0424
 4150              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
GAS LISTING /tmp/cct11Qa0.s 			page 119


 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4151              		.loc 1 413 73 view .LVU1365
 4152 19bc 4801D0   		add	rax, rdx	# current_vector, step
 4153              	.LVL185:
 4154              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4155              		.loc 1 414 45 view .LVU1366
 4156 19bf C4417D7F 		vmovdqa	YMMWORD PTR [r12], ymm8	# MEM[base: _161, offset: 0B], tmp301
 4156      0424
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4157              		.loc 1 413 58 is_stmt 1 view .LVU1367
 4158              	.LVL186:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4159              		.loc 1 413 15 view .LVU1368
 4160 19c5 4901DC   		add	r12, rbx	# ivtmp.249, _157
 4161              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4162              		.loc 1 413 9 is_stmt 0 view .LVU1369
 4163 19c8 4C39C8   		cmp	rax, r9	# current_vector, _69
 4164 19cb 7723     		ja	.L274	#,
 414:sieve_extend.c ****         }
 4165              		.loc 1 414 13 is_stmt 1 view .LVU1370
 4166              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4167              		.loc 1 414 45 is_stmt 0 view .LVU1371
 4168 19cd C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r12]	# tmp303, quadmask.56_19, MEM[base: _161, offset: 0B]
 4168      0C24
 4169              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4170              		.loc 1 413 73 view .LVU1372
 4171 19d3 4801D0   		add	rax, rdx	# current_vector, step
 4172              	.LVL187:
 4173              	# sieve_extend.c:414:             bitarray_vector[current_vector] |= quadmask;
 414:sieve_extend.c ****         }
 4174              		.loc 1 414 45 view .LVU1373
 4175 19d6 C4417D7F 		vmovdqa	YMMWORD PTR [r12], ymm9	# MEM[base: _161, offset: 0B], tmp303
 4175      0C24
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4176              		.loc 1 413 58 is_stmt 1 view .LVU1374
 4177              	.LVL188:
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4178              		.loc 1 413 15 view .LVU1375
 4179 19dc 4901DC   		add	r12, rbx	# ivtmp.249, _157
 4180              	# sieve_extend.c:413:         for(; current_vector <= vectorindex(range_stop); current_vector += st
 413:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4181              		.loc 1 413 9 is_stmt 0 view .LVU1376
 4182 19df 4C39C8   		cmp	rax, r9	# current_vector, _69
 4183 19e2 0F8638FF 		jbe	.L275	#,
 4183      FFFF
 4184 19e8 0F1F8400 		.p2align 4
 4184      00000000 
 4185              		.p2align 3
 4186              	.L274:
 417:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
 4187              		.loc 1 417 9 is_stmt 1 view .LVU1377
 4188              	# sieve_extend.c:417:         counter_t index_word = current_vector * VECTOR_ELEMENTS;
 417:sieve_extend.c ****         counter_t range_stop_word = wordindex(range_stop);
GAS LISTING /tmp/cct11Qa0.s 			page 120


 4189              		.loc 1 417 19 is_stmt 0 view .LVU1378
 4190 19f0 488D0C85 		lea	rcx, 0[0+rax*4]	# index_word,
 4190      00000000 
 4191              	.LVL189:
 418:sieve_extend.c ****         if (index_word <= range_stop_word) {
 4192              		.loc 1 418 9 is_stmt 1 view .LVU1379
 419:sieve_extend.c ****             #pragma ivdep
 4193              		.loc 1 419 9 view .LVU1380
 4194              	# sieve_extend.c:419:         if (index_word <= range_stop_word) {
 419:sieve_extend.c ****             #pragma ivdep
 4195              		.loc 1 419 12 is_stmt 0 view .LVU1381
 4196 19f8 4C39D1   		cmp	rcx, r10	# index_word, range_stop_word
 4197 19fb 760E     		jbe	.L390	#,
 4198              	.LVL190:
 4199              	.L277:
 419:sieve_extend.c ****             #pragma ivdep
 4200              		.loc 1 419 12 view .LVU1382
 4201              	.LBE275:
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 4202              		.loc 1 399 41 is_stmt 1 view .LVU1383
 4203              	# sieve_extend.c:399:     for (counter_t index = range_start; index < range_stop_unique;) {
 399:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index)*VECTOR_ELEMENTS;
 4204              		.loc 1 399 5 is_stmt 0 view .LVU1384
 4205 19fd 4939F0   		cmp	r8, rsi	# range_stop_unique, range_start
 4206 1a00 0F87BAFE 		ja	.L281	#,
 4206      FFFF
 4207 1a06 E936FEFF 		jmp	.L385	#
 4207      FF
 4208              	.LVL191:
 4209              	.L390:
 4210              	.LBB276:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4211              		.loc 1 421 27 is_stmt 1 view .LVU1385
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4212              		.loc 1 422 17 view .LVU1386
 423:sieve_extend.c ****             }
 4213              		.loc 1 423 21 view .LVU1387
 4214              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 4215              		.loc 1 423 52 is_stmt 0 view .LVU1388
 4216 1a0b 4C8B2424 		mov	r12, QWORD PTR [rsp]	# quadmask, quadmask
 4217 1a0f 48C1E005 		sal	rax, 5	# tmp196,
 4218              	.LVL192:
 423:sieve_extend.c ****             }
 4219              		.loc 1 423 52 view .LVU1389
 4220 1a13 4C092407 		or	QWORD PTR [rdi+rax], r12	# *_62, quadmask
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4221              		.loc 1 421 51 is_stmt 1 view .LVU1390
 4222              	.LVL193:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4223              		.loc 1 421 27 view .LVU1391
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4224              		.loc 1 422 17 view .LVU1392
 4225              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4226              		.loc 1 422 31 is_stmt 0 view .LVU1393
 4227 1a17 488D4101 		lea	rax, 1[rcx]	# _71,
GAS LISTING /tmp/cct11Qa0.s 			page 121


 4228              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4229              		.loc 1 422 20 view .LVU1394
 4230 1a1b 4939C2   		cmp	r10, rax	# range_stop_word, _71
 4231 1a1e 7209     		jb	.L278	#,
 423:sieve_extend.c ****             }
 4232              		.loc 1 423 21 is_stmt 1 view .LVU1395
 4233              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 4234              		.loc 1 423 52 is_stmt 0 view .LVU1396
 4235 1a20 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# quadmask, quadmask
 4235      08
 4236 1a25 4C0924C7 		or	QWORD PTR [rdi+rax*8], r12	# *_73, quadmask
 4237              	.L278:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4238              		.loc 1 421 51 is_stmt 1 view .LVU1397
 4239              	.LVL194:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4240              		.loc 1 421 27 view .LVU1398
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4241              		.loc 1 422 17 view .LVU1399
 4242              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4243              		.loc 1 422 31 is_stmt 0 view .LVU1400
 4244 1a29 488D4102 		lea	rax, 2[rcx]	# _82,
 4245              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4246              		.loc 1 422 20 view .LVU1401
 4247 1a2d 4939C2   		cmp	r10, rax	# range_stop_word, _82
 4248 1a30 7209     		jb	.L279	#,
 423:sieve_extend.c ****             }
 4249              		.loc 1 423 21 is_stmt 1 view .LVU1402
 4250              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 4251              		.loc 1 423 52 is_stmt 0 view .LVU1403
 4252 1a32 4C8B6424 		mov	r12, QWORD PTR 16[rsp]	# quadmask, quadmask
 4252      10
 4253 1a37 4C0924C7 		or	QWORD PTR [rdi+rax*8], r12	# *_84, quadmask
 4254              	.L279:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4255              		.loc 1 421 51 is_stmt 1 view .LVU1404
 4256              	.LVL195:
 421:sieve_extend.c ****                 if (index_word+word <= range_stop_word)
 4257              		.loc 1 421 27 view .LVU1405
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4258              		.loc 1 422 17 view .LVU1406
 4259              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4260              		.loc 1 422 31 is_stmt 0 view .LVU1407
 4261 1a3b 4883C103 		add	rcx, 3	# _93,
 4262              	.LVL196:
 4263              	# sieve_extend.c:422:                 if (index_word+word <= range_stop_word)
 422:sieve_extend.c ****                     bitarray_word[index_word+word] |= quadmask[word];
 4264              		.loc 1 422 20 view .LVU1408
 4265 1a3f 4939CA   		cmp	r10, rcx	# range_stop_word, _93
 4266 1a42 72B9     		jb	.L277	#,
 423:sieve_extend.c ****             }
GAS LISTING /tmp/cct11Qa0.s 			page 122


 4267              		.loc 1 423 21 is_stmt 1 view .LVU1409
 4268              	# sieve_extend.c:423:                     bitarray_word[index_word+word] |= quadmask[word];
 423:sieve_extend.c ****             }
 4269              		.loc 1 423 52 is_stmt 0 view .LVU1410
 4270 1a44 488B4424 		mov	rax, QWORD PTR 24[rsp]	# quadmask, quadmask
 4270      18
 4271              	.LVL197:
 423:sieve_extend.c ****             }
 4272              		.loc 1 423 52 view .LVU1411
 4273 1a49 480904CF 		or	QWORD PTR [rdi+rcx*8], rax	# *_95, quadmask
 4274 1a4d EBAE     		jmp	.L277	#
 4275              	.LVL198:
 4276              	.L388:
 423:sieve_extend.c ****             }
 4277              		.loc 1 423 52 view .LVU1412
 4278              	.LBE276:
 4279              	.LBE277:
 4280              	# sieve_extend.c:427: }
 427:sieve_extend.c **** 
 4281              		.loc 1 427 1 view .LVU1413
 4282 1a4f E8000000 		call	__stack_chk_fail@PLT	#
 4282      00
 4283              	.LVL199:
 427:sieve_extend.c **** 
 4284              		.loc 1 427 1 view .LVU1414
 4285              		.cfi_endproc
 4286              	.LFE5331:
 4288 1a54 66662E0F 		.p2align 4
 4288      1F840000 
 4288      00000090 
 4290              	extendSieve_aligned:
 4291              	.LVL200:
 4292              	.LFB5333:
 461:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4293              		.loc 1 461 140 is_stmt 1 view -0
 4294              		.cfi_startproc
 462:sieve_extend.c **** 
 4295              		.loc 1 462 5 view .LVU1416
 464:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4296              		.loc 1 464 5 view .LVU1417
 4297              	# sieve_extend.c:461: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 461:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4298              		.loc 1 461 140 is_stmt 0 view .LVU1418
 4299 1a60 55       		push	rbp	#
 4300              		.cfi_def_cfa_offset 16
 4301              		.cfi_offset 6, -16
 4302 1a61 4889E5   		mov	rbp, rsp	#,
 4303              		.cfi_def_cfa_register 6
 4304 1a64 4157     		push	r15	#
 4305 1a66 4156     		push	r14	#
 4306 1a68 4155     		push	r13	#
 4307              		.cfi_offset 15, -24
 4308              		.cfi_offset 14, -32
 4309              		.cfi_offset 13, -40
 4310 1a6a 4989FD   		mov	r13, rdi	# bitarray, tmp295
 4311 1a6d 4154     		push	r12	#
 4312              		.cfi_offset 12, -48
GAS LISTING /tmp/cct11Qa0.s 			page 123


 4313 1a6f 4989D4   		mov	r12, rdx	# size, tmp297
 4314 1a72 53       		push	rbx	#
 4315              		.cfi_offset 3, -56
 4316              	# sieve_extend.c:464:     const counter_t destination_stop_word = wordindex(destination_stop);
 464:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4317              		.loc 1 464 21 view .LVU1419
 4318 1a73 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 4319              	# sieve_extend.c:465:     const counter_t copy_start = source_start + size;
 465:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 4320              		.loc 1 465 21 view .LVU1420
 4321 1a76 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 4322              	.LVL201:
 4323              	# sieve_extend.c:461: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 461:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4324              		.loc 1 461 140 view .LVU1421
 4325 1a7a 4883E4E0 		and	rsp, -32	#,
 4326              	# sieve_extend.c:467:     counter_t copy_word = wordindex(copy_start);
 467:sieve_extend.c ****     
 4327              		.loc 1 467 15 view .LVU1422
 4328 1a7e 4889C8   		mov	rax, rcx	# ivtmp.294, copy_start
 4329              	# sieve_extend.c:466:     counter_t source_word = wordindex(source_start);
 466:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4330              		.loc 1 466 15 view .LVU1423
 4331 1a81 48C1EE06 		shr	rsi, 6	# source_start,
 4332              	.LVL202:
 4333              	# sieve_extend.c:461: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 461:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4334              		.loc 1 461 140 view .LVU1424
 4335 1a85 488D6424 		lea	rsp, -32[rsp]	#,
 4335      E0
 4336              	# sieve_extend.c:467:     counter_t copy_word = wordindex(copy_start);
 467:sieve_extend.c ****     
 4337              		.loc 1 467 15 view .LVU1425
 4338 1a8a 48C1E806 		shr	rax, 6	# ivtmp.294,
 4339              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 4340              		.loc 1 469 35 view .LVU1426
 4341 1a8e 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 4341      00000000 
 4342              	.LVL203:
 4343              	# sieve_extend.c:464:     const counter_t destination_stop_word = wordindex(destination_stop);
 464:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4344              		.loc 1 464 21 view .LVU1427
 4345 1a96 48C1EB06 		shr	rbx, 6	# tmp298,
 4346              	.LVL204:
 465:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 4347              		.loc 1 465 5 is_stmt 1 view .LVU1428
 466:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4348              		.loc 1 466 5 view .LVU1429
 4349              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 4350              		.loc 1 469 35 is_stmt 0 view .LVU1430
 4351 1a9a 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 4351      00
 4352              	# sieve_extend.c:466:     counter_t source_word = wordindex(source_start);
 466:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4353              		.loc 1 466 15 view .LVU1431
GAS LISTING /tmp/cct11Qa0.s 			page 124


 4354 1a9f 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 4354      08
 4355              	.LVL205:
 467:sieve_extend.c ****     
 4356              		.loc 1 467 5 is_stmt 1 view .LVU1432
 469:sieve_extend.c **** 
 4357              		.loc 1 469 5 view .LVU1433
 4358              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 4359              		.loc 1 469 52 is_stmt 0 view .LVU1434
 4360 1aa4 89CE     		mov	esi, ecx	# tmp183, copy_start
 4361              	.LVL206:
 4362              	# sieve_extend.c:471:     while (copy_word + size <= destination_stop_word) {
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4363              		.loc 1 471 22 view .LVU1435
 4364 1aa6 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.294,
 4365              	.LVL207:
 4366              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 4367              		.loc 1 469 52 view .LVU1436
 4368 1aaa F7D6     		not	esi	# tmp183
 4369              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 4370              		.loc 1 469 35 view .LVU1437
 4371 1aac 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 4372              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 4373              		.loc 1 469 52 view .LVU1438
 4374 1ab0 48C7C2FF 		mov	rdx, -1	# tmp186,
 4374      FFFFFF
 4375              	.LVL208:
 469:sieve_extend.c **** 
 4376              		.loc 1 469 52 view .LVU1439
 4377 1ab7 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 4377      C2
 4378              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 4379              		.loc 1 469 49 view .LVU1440
 4380 1abc C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 4380      0E
 4381              	# sieve_extend.c:469:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 469:sieve_extend.c **** 
 4382              		.loc 1 469 25 view .LVU1441
 4383 1ac1 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 4383      00
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4384              		.loc 1 471 5 is_stmt 1 view .LVU1442
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4385              		.loc 1 471 11 view .LVU1443
 4386 1ac6 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.294
 4387 1ac9 0F827101 		jb	.L392	#,
 4387      0000
 4388 1acf 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 4388      00000000 
 4389 1ad7 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 4389      00000000 
 4390              	.LVL209:
GAS LISTING /tmp/cct11Qa0.s 			page 125


 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4391              		.loc 1 471 11 is_stmt 0 view .LVU1444
 4392 1adf 4D01EA   		add	r10, r13	# tmp190, bitarray
 4393              	# sieve_extend.c:472:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 472:sieve_extend.c ****         copy_word += size;
 4394              		.loc 1 472 9 view .LVU1445
 4395 1ae2 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 4395      00000000 
 4396 1aea 4929C2   		sub	r10, rax	# tmp190, tmp191
 4397 1aed 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 4397      18
 4398              	.LVL210:
 4399              	.L393:
 472:sieve_extend.c ****         copy_word += size;
 4400              		.loc 1 472 9 is_stmt 1 view .LVU1446
 4401              	.LBB278:
 4402              	.LBI278:
 4403              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 4404              		.loc 2 31 1 view .LVU1447
 4405              	.LBB279:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 4406              		.loc 2 34 3 view .LVU1448
 4407              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4408              		.loc 2 34 10 is_stmt 0 view .LVU1449
GAS LISTING /tmp/cct11Qa0.s 			page 126


 4409 1af2 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 4409      18
 4410 1af7 4C89FA   		mov	rdx, r15	#, _15
 4411 1afa 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.294
 4411      10
 4412 1aff 4C89F6   		mov	rsi, r14	#, _5
 4413 1b02 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 4414 1b06 E8000000 		call	memcpy@PLT	#
 4414      00
 4415              	.LVL211:
 4416              		.loc 2 34 10 view .LVU1450
 4417              	.LBE279:
 4418              	.LBE278:
 473:sieve_extend.c ****     }
 4419              		.loc 1 473 9 is_stmt 1 view .LVU1451
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4420              		.loc 1 471 11 view .LVU1452
 4421 1b0b 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.294, %sfp
 4421      10
 4422 1b10 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.294,
 4423 1b14 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.294
 4424 1b17 0F822301 		jb	.L392	#,
 4424      0000
 472:sieve_extend.c ****         copy_word += size;
 4425              		.loc 1 472 9 view .LVU1453
 4426              	.LVL212:
 4427              	.LBB287:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4428              		.loc 2 31 1 view .LVU1454
 4429              	.LBB280:
 4430              		.loc 2 34 3 view .LVU1455
 4431              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4432              		.loc 2 34 10 is_stmt 0 view .LVU1456
 4433 1b1d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 4433      18
 4434 1b22 4C89F6   		mov	rsi, r14	#, _5
 4435 1b25 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.294
 4435      10
 4436              	.LVL213:
 4437              		.loc 2 34 10 view .LVU1457
 4438 1b2a 4C89FA   		mov	rdx, r15	#, _15
 4439 1b2d 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 4440 1b31 E8000000 		call	memcpy@PLT	#
 4440      00
 4441              	.LVL214:
 4442              		.loc 2 34 10 view .LVU1458
 4443              	.LBE280:
 4444              	.LBE287:
 473:sieve_extend.c ****     }
 4445              		.loc 1 473 9 is_stmt 1 view .LVU1459
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4446              		.loc 1 471 11 view .LVU1460
 4447 1b36 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.294, %sfp
 4447      10
 4448 1b3b 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.294,
 4449 1b3f 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.294
 4450 1b42 0F82F800 		jb	.L392	#,
GAS LISTING /tmp/cct11Qa0.s 			page 127


 4450      0000
 472:sieve_extend.c ****         copy_word += size;
 4451              		.loc 1 472 9 view .LVU1461
 4452              	.LVL215:
 4453              	.LBB288:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4454              		.loc 2 31 1 view .LVU1462
 4455              	.LBB281:
 4456              		.loc 2 34 3 view .LVU1463
 4457              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4458              		.loc 2 34 10 is_stmt 0 view .LVU1464
 4459 1b48 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 4459      18
 4460 1b4d 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.294
 4460      10
 4461 1b52 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 4462 1b56 4C89FA   		mov	rdx, r15	#, _15
 4463 1b59 4C89F6   		mov	rsi, r14	#, _5
 4464 1b5c E8000000 		call	memcpy@PLT	#
 4464      00
 4465              	.LVL216:
 4466              		.loc 2 34 10 view .LVU1465
 4467              	.LBE281:
 4468              	.LBE288:
 473:sieve_extend.c ****     }
 4469              		.loc 1 473 9 is_stmt 1 view .LVU1466
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4470              		.loc 1 471 11 view .LVU1467
 4471 1b61 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.294, %sfp
 4471      10
 4472 1b66 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.294,
 4473 1b6a 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.294
 4474 1b6d 0F82CD00 		jb	.L392	#,
 4474      0000
 472:sieve_extend.c ****         copy_word += size;
 4475              		.loc 1 472 9 view .LVU1468
 4476              	.LVL217:
 4477              	.LBB289:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4478              		.loc 2 31 1 view .LVU1469
 4479              	.LBB282:
 4480              		.loc 2 34 3 view .LVU1470
 4481              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4482              		.loc 2 34 10 is_stmt 0 view .LVU1471
 4483 1b73 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 4483      18
 4484 1b78 4C89FA   		mov	rdx, r15	#, _15
 4485 1b7b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.294
 4485      10
 4486 1b80 4C89F6   		mov	rsi, r14	#, _5
 4487 1b83 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 4488 1b87 E8000000 		call	memcpy@PLT	#
 4488      00
 4489              	.LVL218:
 4490              		.loc 2 34 10 view .LVU1472
 4491              	.LBE282:
 4492              	.LBE289:
GAS LISTING /tmp/cct11Qa0.s 			page 128


 473:sieve_extend.c ****     }
 4493              		.loc 1 473 9 is_stmt 1 view .LVU1473
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4494              		.loc 1 471 11 view .LVU1474
 4495 1b8c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.294, %sfp
 4495      10
 4496 1b91 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.294,
 4497 1b95 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.294
 4498 1b98 0F82A200 		jb	.L392	#,
 4498      0000
 472:sieve_extend.c ****         copy_word += size;
 4499              		.loc 1 472 9 view .LVU1475
 4500              	.LVL219:
 4501              	.LBB290:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4502              		.loc 2 31 1 view .LVU1476
 4503              	.LBB283:
 4504              		.loc 2 34 3 view .LVU1477
 4505              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4506              		.loc 2 34 10 is_stmt 0 view .LVU1478
 4507 1b9e 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 4507      18
 4508 1ba3 4C89FA   		mov	rdx, r15	#, _15
 4509 1ba6 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.294
 4509      10
 4510 1bab 4C89F6   		mov	rsi, r14	#, _5
 4511 1bae 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 4512 1bb2 E8000000 		call	memcpy@PLT	#
 4512      00
 4513              	.LVL220:
 4514              		.loc 2 34 10 view .LVU1479
 4515              	.LBE283:
 4516              	.LBE290:
 473:sieve_extend.c ****     }
 4517              		.loc 1 473 9 is_stmt 1 view .LVU1480
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4518              		.loc 1 471 11 view .LVU1481
 4519 1bb7 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.294, %sfp
 4519      10
 4520 1bbc 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.294,
 4521 1bc0 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.294
 4522 1bc3 727B     		jb	.L392	#,
 472:sieve_extend.c ****         copy_word += size;
 4523              		.loc 1 472 9 view .LVU1482
 4524              	.LVL221:
 4525              	.LBB291:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4526              		.loc 2 31 1 view .LVU1483
 4527              	.LBB284:
 4528              		.loc 2 34 3 view .LVU1484
 4529              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4530              		.loc 2 34 10 is_stmt 0 view .LVU1485
 4531 1bc5 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 4531      18
 4532 1bca 4C89F6   		mov	rsi, r14	#, _5
 4533 1bcd 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.294
 4533      10
GAS LISTING /tmp/cct11Qa0.s 			page 129


 4534 1bd2 4C89FA   		mov	rdx, r15	#, _15
 4535 1bd5 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 4536 1bd9 E8000000 		call	memcpy@PLT	#
 4536      00
 4537              	.LVL222:
 4538              		.loc 2 34 10 view .LVU1486
 4539              	.LBE284:
 4540              	.LBE291:
 473:sieve_extend.c ****     }
 4541              		.loc 1 473 9 is_stmt 1 view .LVU1487
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4542              		.loc 1 471 11 view .LVU1488
 4543 1bde 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.294, %sfp
 4543      10
 4544 1be3 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.294,
 4545 1be7 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.294
 4546 1bea 7254     		jb	.L392	#,
 472:sieve_extend.c ****         copy_word += size;
 4547              		.loc 1 472 9 view .LVU1489
 4548              	.LVL223:
 4549              	.LBB292:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4550              		.loc 2 31 1 view .LVU1490
 4551              	.LBB285:
 4552              		.loc 2 34 3 view .LVU1491
 4553              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4554              		.loc 2 34 10 is_stmt 0 view .LVU1492
 4555 1bec 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 4555      18
 4556 1bf1 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.294
 4556      10
 4557 1bf6 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 4558 1bfa 4C89FA   		mov	rdx, r15	#, _15
 4559 1bfd 4C89F6   		mov	rsi, r14	#, _5
 4560 1c00 E8000000 		call	memcpy@PLT	#
 4560      00
 4561              	.LVL224:
 4562              		.loc 2 34 10 view .LVU1493
 4563              	.LBE285:
 4564              	.LBE292:
 473:sieve_extend.c ****     }
 4565              		.loc 1 473 9 is_stmt 1 view .LVU1494
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4566              		.loc 1 471 11 view .LVU1495
 4567 1c05 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.294, %sfp
 4567      10
 4568 1c0a 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.294,
 4569 1c0e 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.294
 4570 1c11 722D     		jb	.L392	#,
 472:sieve_extend.c ****         copy_word += size;
 4571              		.loc 1 472 9 view .LVU1496
 4572              	.LVL225:
 4573              	.LBB293:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4574              		.loc 2 31 1 view .LVU1497
 4575              	.LBB286:
 4576              		.loc 2 34 3 view .LVU1498
GAS LISTING /tmp/cct11Qa0.s 			page 130


 4577              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4578              		.loc 2 34 10 is_stmt 0 view .LVU1499
 4579 1c13 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 4579      18
 4580 1c18 4C89FA   		mov	rdx, r15	#, _15
 4581 1c1b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.294
 4581      10
 4582 1c20 4C89F6   		mov	rsi, r14	#, _5
 4583 1c23 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 4584 1c27 E8000000 		call	memcpy@PLT	#
 4584      00
 4585              	.LVL226:
 4586              		.loc 2 34 10 view .LVU1500
 4587              	.LBE286:
 4588              	.LBE293:
 473:sieve_extend.c ****     }
 4589              		.loc 1 473 9 is_stmt 1 view .LVU1501
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4590              		.loc 1 471 11 view .LVU1502
 4591 1c2c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.294, %sfp
 4591      10
 4592              	.LVL227:
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4593              		.loc 1 471 11 is_stmt 0 view .LVU1503
 4594 1c31 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.294,
 4595              	.LVL228:
 471:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4596              		.loc 1 471 11 view .LVU1504
 4597 1c35 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.294
 4598 1c38 0F83B4FE 		jnb	.L393	#,
 4598      FFFF
 4599              	.LVL229:
 4600 1c3e 6690     		.p2align 4
 4601              		.p2align 3
 4602              	.L392:
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4603              		.loc 1 476 10 is_stmt 1 view .LVU1505
 4604 1c40 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.294
 4605 1c43 0F864902 		jbe	.L503	#,
 4605      0000
 4606 1c49 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 4607 1c4d 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 4607      00000000 
 4608              	.LVL230:
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4609              		.loc 1 476 10 is_stmt 0 view .LVU1506
 4610 1c55 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 4610      20
 4611 1c5a 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 4612 1c5e 4D39FA   		cmp	r10, r15	# _4, tmp199
 4613 1c61 410F9DC3 		setge	r11b	#, tmp201
 4614 1c65 4939FC   		cmp	r12, rdi	# _41, tmp202
 4615 1c68 400F9DC6 		setge	sil	#, tmp204
 4616 1c6c 4108F3   		or	r11b, sil	# tmp201, tmp204
 4617 1c6f 0F844B02 		je	.L395	#,
 4617      0000
 4618 1c75 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
GAS LISTING /tmp/cct11Qa0.s 			page 131


 4619 1c79 4829C2   		sub	rdx, rax	# tmp207, ivtmp.294
 4620 1c7c 4883FA05 		cmp	rdx, 5	# tmp207,
 4621 1c80 0F863A02 		jbe	.L395	#,
 4621      0000
 4622 1c86 4D89F7   		mov	r15, r14	# tmp210, _5
 4623 1c89 49C1EF03 		shr	r15, 3	# tmp210,
 4624 1c8d 49F7DF   		neg	r15	# tmp211
 4625 1c90 4183E703 		and	r15d, 3	# prolog_loop_niters.262,
 4626 1c94 0F842E03 		je	.L402	#,
 4626      0000
 477:sieve_extend.c ****         source_word++;
 4627              		.loc 1 477 9 is_stmt 1 view .LVU1507
 4628              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4629              		.loc 1 477 39 is_stmt 0 view .LVU1508
 4630 1c9a 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 4631 1c9d 4983FF01 		cmp	r15, 1	# prolog_loop_niters.262,
 4632              	# sieve_extend.c:478:         source_word++;
 478:sieve_extend.c ****         copy_word++;
 4633              		.loc 1 478 20 view .LVU1509
 4634 1ca1 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 4634      08
 4635              	# sieve_extend.c:479:         copy_word++;
 479:sieve_extend.c ****     }
 4636              		.loc 1 479 18 view .LVU1510
 4637 1ca6 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 4638              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4639              		.loc 1 477 29 view .LVU1511
 4640 1caa 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 4640      00
 478:sieve_extend.c ****         copy_word++;
 4641              		.loc 1 478 9 is_stmt 1 view .LVU1512
 4642              	# sieve_extend.c:478:         source_word++;
 478:sieve_extend.c ****         copy_word++;
 4643              		.loc 1 478 20 is_stmt 0 view .LVU1513
 4644 1caf 4D8D6101 		lea	r12, 1[r9]	# source_word,
 4645              	.LVL231:
 479:sieve_extend.c ****     }
 4646              		.loc 1 479 9 is_stmt 1 view .LVU1514
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4647              		.loc 1 476 10 view .LVU1515
 4648 1cb3 742A     		je	.L396	#,
 477:sieve_extend.c ****         source_word++;
 4649              		.loc 1 477 9 view .LVU1516
 4650              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4651              		.loc 1 477 39 is_stmt 0 view .LVU1517
 4652 1cb5 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 4652      00
 4653 1cba 4983FF03 		cmp	r15, 3	# prolog_loop_niters.262,
 4654              	# sieve_extend.c:478:         source_word++;
 478:sieve_extend.c ****         copy_word++;
 4655              		.loc 1 478 20 view .LVU1518
 4656 1cbe 4D8D6102 		lea	r12, 2[r9]	# source_word,
 4657              	.LVL232:
 4658              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cct11Qa0.s 			page 132


 477:sieve_extend.c ****         source_word++;
 4659              		.loc 1 477 29 view .LVU1519
 4660 1cc2 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 4660      00
 478:sieve_extend.c ****         copy_word++;
 4661              		.loc 1 478 9 is_stmt 1 view .LVU1520
 4662              	.LVL233:
 479:sieve_extend.c ****     }
 4663              		.loc 1 479 9 view .LVU1521
 4664              	# sieve_extend.c:479:         copy_word++;
 479:sieve_extend.c ****     }
 4665              		.loc 1 479 18 is_stmt 0 view .LVU1522
 4666 1cc7 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 4667              	.LVL234:
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4668              		.loc 1 476 10 is_stmt 1 view .LVU1523
 4669 1ccb 7512     		jne	.L396	#,
 477:sieve_extend.c ****         source_word++;
 4670              		.loc 1 477 9 view .LVU1524
 4671              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4672              		.loc 1 477 39 is_stmt 0 view .LVU1525
 4673 1ccd 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 4673      00
 4674              	# sieve_extend.c:478:         source_word++;
 478:sieve_extend.c ****         copy_word++;
 4675              		.loc 1 478 20 view .LVU1526
 4676 1cd2 4D8D6103 		lea	r12, 3[r9]	# source_word,
 4677              	.LVL235:
 4678              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4679              		.loc 1 477 29 view .LVU1527
 4680 1cd6 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 4680      00
 478:sieve_extend.c ****         copy_word++;
 4681              		.loc 1 478 9 is_stmt 1 view .LVU1528
 4682              	.LVL236:
 479:sieve_extend.c ****     }
 4683              		.loc 1 479 9 view .LVU1529
 4684              	# sieve_extend.c:479:         copy_word++;
 479:sieve_extend.c ****     }
 4685              		.loc 1 479 18 is_stmt 0 view .LVU1530
 4686 1cdb 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 4687              	.LVL237:
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4688              		.loc 1 476 10 is_stmt 1 view .LVU1531
 4689              	.L396:
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4690              		.loc 1 476 10 is_stmt 0 view .LVU1532
 4691 1cdf 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 4691      08
 4692 1ce4 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 4693 1ce7 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.262
 4694 1cea 4929C3   		sub	r11, rax	# niters.263, ivtmp.294
 4695 1ced 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.262
 4696 1cf0 4D89D8   		mov	r8, r11	# bnd.264, niters.263
 4697 1cf3 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.262
GAS LISTING /tmp/cct11Qa0.s 			page 133


 4698 1cf6 49C1E802 		shr	r8, 2	# bnd.264,
 4699 1cfa 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.272,
 4699      00
 4700 1cff 49C1E005 		sal	r8, 5	# _182,
 4701              	# sieve_extend.c:466:     counter_t source_word = wordindex(source_start);
 466:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4702              		.loc 1 466 15 view .LVU1533
 4703 1d03 31C0     		xor	eax, eax	# ivtmp.285
 4704 1d05 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 4705 1d09 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.269,
 4705      00
 4706 1d0e 48C1EA05 		shr	rdx, 5	# tmp226,
 4707 1d12 4883C201 		add	rdx, 1	# tmp229,
 4708 1d16 83E207   		and	edx, 7	# tmp230,
 4709 1d19 0F849500 		je	.L398	#,
 4709      0000
 4710 1d1f 4883FA01 		cmp	rdx, 1	# tmp230,
 4711 1d23 7477     		je	.L462	#,
 4712 1d25 4883FA02 		cmp	rdx, 2	# tmp230,
 4713 1d29 7462     		je	.L463	#,
 4714 1d2b 4883FA03 		cmp	rdx, 3	# tmp230,
 4715 1d2f 744D     		je	.L464	#,
 4716 1d31 4883FA04 		cmp	rdx, 4	# tmp230,
 4717 1d35 7438     		je	.L465	#,
 4718 1d37 4883FA05 		cmp	rdx, 5	# tmp230,
 4719 1d3b 7423     		je	.L466	#,
 4720 1d3d 4883FA06 		cmp	rdx, 6	# tmp230,
 4721 1d41 740E     		je	.L467	#,
 477:sieve_extend.c ****         source_word++;
 4722              		.loc 1 477 9 is_stmt 1 view .LVU1534
 4723              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4724              		.loc 1 477 29 is_stmt 0 view .LVU1535
 4725 1d43 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.269_119, index: ivtmp.285_180, offset: 0
 4726 1d47 B8200000 		mov	eax, 32	# ivtmp.285,
 4726      00
 4727 1d4c C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B], tmp3
 4727      0F
 478:sieve_extend.c ****         copy_word++;
 4728              		.loc 1 478 9 is_stmt 1 view .LVU1536
 479:sieve_extend.c ****     }
 4729              		.loc 1 479 9 view .LVU1537
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4730              		.loc 1 476 10 view .LVU1538
 4731              	.L467:
 477:sieve_extend.c ****         source_word++;
 4732              		.loc 1 477 9 view .LVU1539
 4733              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4734              		.loc 1 477 29 is_stmt 0 view .LVU1540
 4735 1d51 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.269_119, index: ivtmp.285_180, offse
 4735      06
 4736 1d56 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B], 
 4736      3C07
 478:sieve_extend.c ****         copy_word++;
 4737              		.loc 1 478 9 is_stmt 1 view .LVU1541
 479:sieve_extend.c ****     }
GAS LISTING /tmp/cct11Qa0.s 			page 134


 4738              		.loc 1 479 9 view .LVU1542
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4739              		.loc 1 476 10 view .LVU1543
 4740 1d5c 4883C020 		add	rax, 32	# ivtmp.285,
 4741              	.L466:
 477:sieve_extend.c ****         source_word++;
 4742              		.loc 1 477 9 view .LVU1544
 4743              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4744              		.loc 1 477 29 is_stmt 0 view .LVU1545
 4745 1d60 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.269_119, index: ivtmp.285_180, offse
 4745      06
 4746 1d65 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B], 
 4746      3407
 478:sieve_extend.c ****         copy_word++;
 4747              		.loc 1 478 9 is_stmt 1 view .LVU1546
 479:sieve_extend.c ****     }
 4748              		.loc 1 479 9 view .LVU1547
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4749              		.loc 1 476 10 view .LVU1548
 4750 1d6b 4883C020 		add	rax, 32	# ivtmp.285,
 4751              	.L465:
 477:sieve_extend.c ****         source_word++;
 4752              		.loc 1 477 9 view .LVU1549
 4753              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4754              		.loc 1 477 29 is_stmt 0 view .LVU1550
 4755 1d6f C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.269_119, index: ivtmp.285_180, offse
 4755      06
 4756 1d74 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B], 
 4756      2C07
 478:sieve_extend.c ****         copy_word++;
 4757              		.loc 1 478 9 is_stmt 1 view .LVU1551
 479:sieve_extend.c ****     }
 4758              		.loc 1 479 9 view .LVU1552
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4759              		.loc 1 476 10 view .LVU1553
 4760 1d7a 4883C020 		add	rax, 32	# ivtmp.285,
 4761              	.L464:
 477:sieve_extend.c ****         source_word++;
 4762              		.loc 1 477 9 view .LVU1554
 4763              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4764              		.loc 1 477 29 is_stmt 0 view .LVU1555
 4765 1d7e C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.269_119, index: ivtmp.285_180, offse
 4765      06
 4766 1d83 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B], 
 4766      2407
 478:sieve_extend.c ****         copy_word++;
 4767              		.loc 1 478 9 is_stmt 1 view .LVU1556
 479:sieve_extend.c ****     }
 4768              		.loc 1 479 9 view .LVU1557
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4769              		.loc 1 476 10 view .LVU1558
 4770 1d89 4883C020 		add	rax, 32	# ivtmp.285,
 4771              	.L463:
 477:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cct11Qa0.s 			page 135


 4772              		.loc 1 477 9 view .LVU1559
 4773              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4774              		.loc 1 477 29 is_stmt 0 view .LVU1560
 4775 1d8d C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.269_119, index: ivtmp.285_180, offse
 4775      06
 4776 1d92 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B], 
 4776      0407
 478:sieve_extend.c ****         copy_word++;
 4777              		.loc 1 478 9 is_stmt 1 view .LVU1561
 479:sieve_extend.c ****     }
 4778              		.loc 1 479 9 view .LVU1562
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4779              		.loc 1 476 10 view .LVU1563
 4780 1d98 4883C020 		add	rax, 32	# ivtmp.285,
 4781              	.L462:
 477:sieve_extend.c ****         source_word++;
 4782              		.loc 1 477 9 view .LVU1564
 4783              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4784              		.loc 1 477 29 is_stmt 0 view .LVU1565
 4785 1d9c C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.269_119, index: ivtmp.285_180, offse
 4785      06
 4786 1da1 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B], 
 4786      1407
 478:sieve_extend.c ****         copy_word++;
 4787              		.loc 1 478 9 is_stmt 1 view .LVU1566
 479:sieve_extend.c ****     }
 4788              		.loc 1 479 9 view .LVU1567
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4789              		.loc 1 476 10 view .LVU1568
 4790 1da7 4883C020 		add	rax, 32	# ivtmp.285,
 4791 1dab 4C39C0   		cmp	rax, r8	# ivtmp.285, _182
 4792 1dae 0F848D00 		je	.L499	#,
 4792      0000
 4793              	.L398:
 477:sieve_extend.c ****         source_word++;
 4794              		.loc 1 477 9 view .LVU1569
 4795              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4796              		.loc 1 477 29 is_stmt 0 view .LVU1570
 4797 1db4 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.269_119, index: ivtmp.285_180, offse
 4797      06
 4798 1db9 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B], 
 4798      1C07
 478:sieve_extend.c ****         copy_word++;
 4799              		.loc 1 478 9 is_stmt 1 view .LVU1571
 479:sieve_extend.c ****     }
 4800              		.loc 1 479 9 view .LVU1572
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4801              		.loc 1 476 10 view .LVU1573
 477:sieve_extend.c ****         source_word++;
 4802              		.loc 1 477 9 view .LVU1574
 4803              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4804              		.loc 1 477 29 is_stmt 0 view .LVU1575
 4805 1dbf C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.269_119, index: ivtmp.285_180, off
GAS LISTING /tmp/cct11Qa0.s 			page 136


 4805      0620
 4806 1dc5 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B]
 4806      440720
 478:sieve_extend.c ****         copy_word++;
 4807              		.loc 1 478 9 is_stmt 1 view .LVU1576
 479:sieve_extend.c ****     }
 4808              		.loc 1 479 9 view .LVU1577
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4809              		.loc 1 476 10 view .LVU1578
 477:sieve_extend.c ****         source_word++;
 4810              		.loc 1 477 9 view .LVU1579
 4811              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4812              		.loc 1 477 29 is_stmt 0 view .LVU1580
 4813 1dcc C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.269_119, index: ivtmp.285_180, off
 4813      0640
 4814 1dd2 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B]
 4814      4C0740
 478:sieve_extend.c ****         copy_word++;
 4815              		.loc 1 478 9 is_stmt 1 view .LVU1581
 479:sieve_extend.c ****     }
 4816              		.loc 1 479 9 view .LVU1582
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4817              		.loc 1 476 10 view .LVU1583
 477:sieve_extend.c ****         source_word++;
 4818              		.loc 1 477 9 view .LVU1584
 4819              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4820              		.loc 1 477 29 is_stmt 0 view .LVU1585
 4821 1dd9 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.269_119, index: ivtmp.285_180, of
 4821      0660
 4822 1ddf C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0B
 4822      540760
 478:sieve_extend.c ****         copy_word++;
 4823              		.loc 1 478 9 is_stmt 1 view .LVU1586
 479:sieve_extend.c ****     }
 4824              		.loc 1 479 9 view .LVU1587
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4825              		.loc 1 476 10 view .LVU1588
 477:sieve_extend.c ****         source_word++;
 4826              		.loc 1 477 9 view .LVU1589
 4827              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4828              		.loc 1 477 29 is_stmt 0 view .LVU1590
 4829 1de6 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.269_119, index: ivtmp.285_180, o
 4829      06800000 
 4829      00
 4830 1def C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0
 4830      9C078000 
 4830      0000
 478:sieve_extend.c ****         copy_word++;
 4831              		.loc 1 478 9 is_stmt 1 view .LVU1591
 479:sieve_extend.c ****     }
 4832              		.loc 1 479 9 view .LVU1592
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4833              		.loc 1 476 10 view .LVU1593
 477:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cct11Qa0.s 			page 137


 4834              		.loc 1 477 9 view .LVU1594
 4835              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4836              		.loc 1 477 29 is_stmt 0 view .LVU1595
 4837 1df9 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.269_119, index: ivtmp.285_180, o
 4837      06A00000 
 4837      00
 4838 1e02 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0
 4838      A407A000 
 4838      0000
 478:sieve_extend.c ****         copy_word++;
 4839              		.loc 1 478 9 is_stmt 1 view .LVU1596
 479:sieve_extend.c ****     }
 4840              		.loc 1 479 9 view .LVU1597
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4841              		.loc 1 476 10 view .LVU1598
 477:sieve_extend.c ****         source_word++;
 4842              		.loc 1 477 9 view .LVU1599
 4843              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4844              		.loc 1 477 29 is_stmt 0 view .LVU1600
 4845 1e0c C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.269_119, index: ivtmp.285_180, o
 4845      06C00000 
 4845      00
 4846 1e15 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0
 4846      AC07C000 
 4846      0000
 478:sieve_extend.c ****         copy_word++;
 4847              		.loc 1 478 9 is_stmt 1 view .LVU1601
 479:sieve_extend.c ****     }
 4848              		.loc 1 479 9 view .LVU1602
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4849              		.loc 1 476 10 view .LVU1603
 477:sieve_extend.c ****         source_word++;
 4850              		.loc 1 477 9 view .LVU1604
 4851              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4852              		.loc 1 477 29 is_stmt 0 view .LVU1605
 4853 1e1f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.269_119, index: ivtmp.285_180, o
 4853      06E00000 
 4853      00
 4854 1e28 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.272_125, index: ivtmp.285_180, offset: 0
 4854      B407E000 
 4854      0000
 478:sieve_extend.c ****         copy_word++;
 4855              		.loc 1 478 9 is_stmt 1 view .LVU1606
 479:sieve_extend.c ****     }
 4856              		.loc 1 479 9 view .LVU1607
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4857              		.loc 1 476 10 view .LVU1608
 4858 1e32 48050001 		add	rax, 256	# ivtmp.285,
 4858      0000
 4859 1e38 4C39C0   		cmp	rax, r8	# ivtmp.285, _182
 4860 1e3b 0F8573FF 		jne	.L398	#,
 4860      FFFF
 4861              	.L499:
 4862 1e41 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.265, niters.263
GAS LISTING /tmp/cct11Qa0.s 			page 138


 4863 1e44 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.265,
 4864 1e48 4D01CC   		add	r12, r9	# tmp.266, niters_vector_mult_vf.265
 4865 1e4b 4D01CE   		add	r14, r9	# tmp.267, niters_vector_mult_vf.265
 4866 1e4e 4D39CB   		cmp	r11, r9	# niters.263, niters_vector_mult_vf.265
 4867 1e51 7455     		je	.L502	#,
 4868              	.LVL238:
 477:sieve_extend.c ****         source_word++;
 4869              		.loc 1 477 9 view .LVU1609
 4870              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4871              		.loc 1 477 39 is_stmt 0 view .LVU1610
 4872 1e53 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 4872      00
 4873              	# sieve_extend.c:479:         copy_word++;
 479:sieve_extend.c ****     }
 4874              		.loc 1 479 18 view .LVU1611
 4875 1e58 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 4876              	# sieve_extend.c:478:         source_word++;
 478:sieve_extend.c ****         copy_word++;
 4877              		.loc 1 478 20 view .LVU1612
 4878 1e5c 4983C401 		add	r12, 1	# source_word,
 4879              	.LVL239:
 4880              	# sieve_extend.c:476:    while (copy_word < destination_stop_word) {
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4881              		.loc 1 476 10 view .LVU1613
 4882 1e60 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 4883              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4884              		.loc 1 477 29 view .LVU1614
 4885 1e63 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 4885      00
 478:sieve_extend.c ****         copy_word++;
 4886              		.loc 1 478 9 is_stmt 1 view .LVU1615
 4887              	.LVL240:
 479:sieve_extend.c ****     }
 4888              		.loc 1 479 9 view .LVU1616
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4889              		.loc 1 476 10 view .LVU1617
 4890 1e68 763E     		jbe	.L502	#,
 477:sieve_extend.c ****         source_word++;
 4891              		.loc 1 477 9 view .LVU1618
 4892              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4893              		.loc 1 477 39 is_stmt 0 view .LVU1619
 4894 1e6a 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 4894      00000000 
 4895              	# sieve_extend.c:479:         copy_word++;
 479:sieve_extend.c ****     }
 4896              		.loc 1 479 18 view .LVU1620
 4897 1e72 4983C602 		add	r14, 2	# copy_word,
 4898              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4899              		.loc 1 477 39 view .LVU1621
 4900 1e76 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 4900      00
 4901              	# sieve_extend.c:476:    while (copy_word < destination_stop_word) {
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cct11Qa0.s 			page 139


 4902              		.loc 1 476 10 view .LVU1622
 4903 1e7b 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 4904              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4905              		.loc 1 477 29 view .LVU1623
 4906 1e7e 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 4906      00
 478:sieve_extend.c ****         copy_word++;
 4907              		.loc 1 478 9 is_stmt 1 view .LVU1624
 479:sieve_extend.c ****     }
 4908              		.loc 1 479 9 view .LVU1625
 4909              	.LVL241:
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4910              		.loc 1 476 10 view .LVU1626
 4911 1e83 7623     		jbe	.L502	#,
 477:sieve_extend.c ****         source_word++;
 4912              		.loc 1 477 9 view .LVU1627
 4913              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4914              		.loc 1 477 39 is_stmt 0 view .LVU1628
 4915 1e85 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 4915      08
 4916              	.LVL242:
 4917              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4918              		.loc 1 477 29 view .LVU1629
 4919 1e8a 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 4919      00
 478:sieve_extend.c ****         copy_word++;
 4920              		.loc 1 478 9 is_stmt 1 view .LVU1630
 479:sieve_extend.c ****     }
 4921              		.loc 1 479 9 view .LVU1631
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 4922              		.loc 1 476 10 view .LVU1632
 4923 1e8f C5F877   		vzeroupper
 4924              	.LVL243:
 4925              	.L503:
 4926              	# sieve_extend.c:482: }
 482:sieve_extend.c **** 
 4927              		.loc 1 482 1 is_stmt 0 view .LVU1633
 4928 1e92 488D65D8 		lea	rsp, -40[rbp]	#,
 4929 1e96 5B       		pop	rbx	#
 4930 1e97 415C     		pop	r12	#
 4931 1e99 415D     		pop	r13	#
 4932 1e9b 415E     		pop	r14	#
 4933 1e9d 415F     		pop	r15	#
 4934 1e9f 5D       		pop	rbp	#
 4935              		.cfi_remember_state
 4936              		.cfi_def_cfa 7, 8
 4937 1ea0 C3       		ret	
 4938              	.LVL244:
 4939              		.p2align 4,,7
 4940 1ea1 0F1F8000 		.p2align 3
 4940      000000
 4941              	.L502:
 4942              		.cfi_restore_state
 482:sieve_extend.c **** 
GAS LISTING /tmp/cct11Qa0.s 			page 140


 4943              		.loc 1 482 1 view .LVU1634
 4944 1ea8 C5F877   		vzeroupper
 4945 1eab 488D65D8 		lea	rsp, -40[rbp]	#,
 4946 1eaf 5B       		pop	rbx	#
 4947              	.LVL245:
 482:sieve_extend.c **** 
 4948              		.loc 1 482 1 view .LVU1635
 4949 1eb0 415C     		pop	r12	#
 4950 1eb2 415D     		pop	r13	#
 4951              	.LVL246:
 482:sieve_extend.c **** 
 4952              		.loc 1 482 1 view .LVU1636
 4953 1eb4 415E     		pop	r14	#
 4954 1eb6 415F     		pop	r15	#
 4955 1eb8 5D       		pop	rbp	#
 4956              		.cfi_remember_state
 4957              		.cfi_def_cfa 7, 8
 4958 1eb9 C3       		ret	
 4959              	.LVL247:
 4960 1eba 660F1F44 		.p2align 4,,7
 4960      0000
 4961              		.p2align 3
 4962              	.L395:
 4963              		.cfi_restore_state
 4964              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4965              		.loc 1 477 39 view .LVU1637
 4966 1ec0 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 4966      08
 4967 1ec5 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.280,
 4967      00
 4968 1eca 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 4968      00
 4969              	.LVL248:
 477:sieve_extend.c ****         source_word++;
 4970              		.loc 1 477 39 view .LVU1638
 4971 1ecf 4C89EE   		mov	rsi, r13	# tmp221, _179
 4972 1ed2 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.280
 4973 1ed5 4829C7   		sub	rdi, rax	# source_word, ivtmp.294
 4974 1ed8 4883EE08 		sub	rsi, 8	# tmp222,
 4975 1edc 48C1EE03 		shr	rsi, 3	# tmp220,
 4976 1ee0 4883C601 		add	rsi, 1	# tmp223,
 4977 1ee4 83E607   		and	esi, 7	# tmp224,
 4978 1ee7 0F848100 		je	.L400	#,
 4978      0000
 4979 1eed 4883FE01 		cmp	rsi, 1	# tmp224,
 4980 1ef1 7466     		je	.L468	#,
 4981 1ef3 4883FE02 		cmp	rsi, 2	# tmp224,
 4982 1ef7 7454     		je	.L469	#,
 4983 1ef9 4883FE03 		cmp	rsi, 3	# tmp224,
 4984 1efd 7442     		je	.L470	#,
 4985 1eff 4883FE04 		cmp	rsi, 4	# tmp224,
 4986 1f03 7430     		je	.L471	#,
 4987 1f05 4883FE05 		cmp	rsi, 5	# tmp224,
 4988 1f09 741E     		je	.L472	#,
 4989 1f0b 4883FE06 		cmp	rsi, 6	# tmp224,
 4990 1f0f 740C     		je	.L473	#,
GAS LISTING /tmp/cct11Qa0.s 			page 141


 4991              	.LVL249:
 477:sieve_extend.c ****         source_word++;
 4992              		.loc 1 477 9 is_stmt 1 view .LVU1639
 4993              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4994              		.loc 1 477 39 is_stmt 0 view .LVU1640
 4995 1f11 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 4996 1f15 4983C608 		add	r14, 8	# ivtmp.280,
 4997              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 4998              		.loc 1 477 29 view .LVU1641
 4999 1f19 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5000              		.loc 1 478 9 is_stmt 1 view .LVU1642
 479:sieve_extend.c ****     }
 5001              		.loc 1 479 9 view .LVU1643
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5002              		.loc 1 476 10 view .LVU1644
 5003              	.L473:
 477:sieve_extend.c ****         source_word++;
 5004              		.loc 1 477 9 view .LVU1645
 5005              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5006              		.loc 1 477 39 is_stmt 0 view .LVU1646
 5007 1f1d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5008 1f21 4983C608 		add	r14, 8	# ivtmp.280,
 5009              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5010              		.loc 1 477 29 view .LVU1647
 5011 1f25 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5012              		.loc 1 478 9 is_stmt 1 view .LVU1648
 479:sieve_extend.c ****     }
 5013              		.loc 1 479 9 view .LVU1649
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5014              		.loc 1 476 10 view .LVU1650
 5015              	.L472:
 477:sieve_extend.c ****         source_word++;
 5016              		.loc 1 477 9 view .LVU1651
 5017              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5018              		.loc 1 477 39 is_stmt 0 view .LVU1652
 5019 1f29 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5020 1f2d 4983C608 		add	r14, 8	# ivtmp.280,
 5021              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5022              		.loc 1 477 29 view .LVU1653
 5023 1f31 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5024              		.loc 1 478 9 is_stmt 1 view .LVU1654
 479:sieve_extend.c ****     }
 5025              		.loc 1 479 9 view .LVU1655
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5026              		.loc 1 476 10 view .LVU1656
 5027              	.L471:
 477:sieve_extend.c ****         source_word++;
 5028              		.loc 1 477 9 view .LVU1657
GAS LISTING /tmp/cct11Qa0.s 			page 142


 5029              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5030              		.loc 1 477 39 is_stmt 0 view .LVU1658
 5031 1f35 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5032 1f39 4983C608 		add	r14, 8	# ivtmp.280,
 5033              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5034              		.loc 1 477 29 view .LVU1659
 5035 1f3d 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5036              		.loc 1 478 9 is_stmt 1 view .LVU1660
 479:sieve_extend.c ****     }
 5037              		.loc 1 479 9 view .LVU1661
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5038              		.loc 1 476 10 view .LVU1662
 5039              	.L470:
 477:sieve_extend.c ****         source_word++;
 5040              		.loc 1 477 9 view .LVU1663
 5041              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5042              		.loc 1 477 39 is_stmt 0 view .LVU1664
 5043 1f41 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5044 1f45 4983C608 		add	r14, 8	# ivtmp.280,
 5045              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5046              		.loc 1 477 29 view .LVU1665
 5047 1f49 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5048              		.loc 1 478 9 is_stmt 1 view .LVU1666
 479:sieve_extend.c ****     }
 5049              		.loc 1 479 9 view .LVU1667
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5050              		.loc 1 476 10 view .LVU1668
 5051              	.L469:
 477:sieve_extend.c ****         source_word++;
 5052              		.loc 1 477 9 view .LVU1669
 5053              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5054              		.loc 1 477 39 is_stmt 0 view .LVU1670
 5055 1f4d 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5056 1f51 4983C608 		add	r14, 8	# ivtmp.280,
 5057              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5058              		.loc 1 477 29 view .LVU1671
 5059 1f55 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5060              		.loc 1 478 9 is_stmt 1 view .LVU1672
 479:sieve_extend.c ****     }
 5061              		.loc 1 479 9 view .LVU1673
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5062              		.loc 1 476 10 view .LVU1674
 5063              	.L468:
 477:sieve_extend.c ****         source_word++;
 5064              		.loc 1 477 9 view .LVU1675
 5065              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5066              		.loc 1 477 39 is_stmt 0 view .LVU1676
GAS LISTING /tmp/cct11Qa0.s 			page 143


 5067 1f59 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5068 1f5d 4983C608 		add	r14, 8	# ivtmp.280,
 5069              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5070              		.loc 1 477 29 view .LVU1677
 5071 1f61 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5072              		.loc 1 478 9 is_stmt 1 view .LVU1678
 479:sieve_extend.c ****     }
 5073              		.loc 1 479 9 view .LVU1679
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5074              		.loc 1 476 10 view .LVU1680
 5075 1f65 4D39EE   		cmp	r14, r13	# ivtmp.280, _179
 5076 1f68 0F8424FF 		je	.L503	#,
 5076      FFFF
 5077              	.LVL250:
 5078              	.L400:
 477:sieve_extend.c ****         source_word++;
 5079              		.loc 1 477 9 view .LVU1681
 5080              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5081              		.loc 1 477 39 is_stmt 0 view .LVU1682
 5082 1f6e 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5083              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5084              		.loc 1 477 29 view .LVU1683
 5085 1f72 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5086              		.loc 1 478 9 is_stmt 1 view .LVU1684
 479:sieve_extend.c ****     }
 5087              		.loc 1 479 9 view .LVU1685
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5088              		.loc 1 476 10 view .LVU1686
 477:sieve_extend.c ****         source_word++;
 5089              		.loc 1 477 9 view .LVU1687
 5090              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5091              		.loc 1 477 39 is_stmt 0 view .LVU1688
 5092 1f75 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5092      08
 5093              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5094              		.loc 1 477 29 view .LVU1689
 5095 1f7a 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5096              		.loc 1 478 9 is_stmt 1 view .LVU1690
 479:sieve_extend.c ****     }
 5097              		.loc 1 479 9 view .LVU1691
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5098              		.loc 1 476 10 view .LVU1692
 477:sieve_extend.c ****         source_word++;
 5099              		.loc 1 477 9 view .LVU1693
 5100              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5101              		.loc 1 477 39 is_stmt 0 view .LVU1694
 5102 1f7e 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5102      10
GAS LISTING /tmp/cct11Qa0.s 			page 144


 5103              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5104              		.loc 1 477 29 view .LVU1695
 5105 1f83 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5106              		.loc 1 478 9 is_stmt 1 view .LVU1696
 479:sieve_extend.c ****     }
 5107              		.loc 1 479 9 view .LVU1697
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5108              		.loc 1 476 10 view .LVU1698
 477:sieve_extend.c ****         source_word++;
 5109              		.loc 1 477 9 view .LVU1699
 5110              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5111              		.loc 1 477 39 is_stmt 0 view .LVU1700
 5112 1f87 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5112      18
 5113              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5114              		.loc 1 477 29 view .LVU1701
 5115 1f8c 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5116              		.loc 1 478 9 is_stmt 1 view .LVU1702
 479:sieve_extend.c ****     }
 5117              		.loc 1 479 9 view .LVU1703
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5118              		.loc 1 476 10 view .LVU1704
 477:sieve_extend.c ****         source_word++;
 5119              		.loc 1 477 9 view .LVU1705
 5120              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5121              		.loc 1 477 39 is_stmt 0 view .LVU1706
 5122 1f90 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5122      20
 5123              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5124              		.loc 1 477 29 view .LVU1707
 5125 1f95 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5126              		.loc 1 478 9 is_stmt 1 view .LVU1708
 479:sieve_extend.c ****     }
 5127              		.loc 1 479 9 view .LVU1709
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5128              		.loc 1 476 10 view .LVU1710
 477:sieve_extend.c ****         source_word++;
 5129              		.loc 1 477 9 view .LVU1711
 5130              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5131              		.loc 1 477 39 is_stmt 0 view .LVU1712
 5132 1f99 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5132      28
 5133              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5134              		.loc 1 477 29 view .LVU1713
 5135 1f9e 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5136              		.loc 1 478 9 is_stmt 1 view .LVU1714
GAS LISTING /tmp/cct11Qa0.s 			page 145


 479:sieve_extend.c ****     }
 5137              		.loc 1 479 9 view .LVU1715
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5138              		.loc 1 476 10 view .LVU1716
 477:sieve_extend.c ****         source_word++;
 5139              		.loc 1 477 9 view .LVU1717
 5140              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5141              		.loc 1 477 39 is_stmt 0 view .LVU1718
 5142 1fa2 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5142      30
 5143              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5144              		.loc 1 477 29 view .LVU1719
 5145 1fa7 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5146              		.loc 1 478 9 is_stmt 1 view .LVU1720
 479:sieve_extend.c ****     }
 5147              		.loc 1 479 9 view .LVU1721
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5148              		.loc 1 476 10 view .LVU1722
 477:sieve_extend.c ****         source_word++;
 5149              		.loc 1 477 9 view .LVU1723
 5150              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5151              		.loc 1 477 39 is_stmt 0 view .LVU1724
 5152 1fab 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5152      38
 5153 1fb0 4983C640 		add	r14, 64	# ivtmp.280,
 5154              	# sieve_extend.c:477:         bitarray[copy_word] = bitarray[source_word];
 477:sieve_extend.c ****         source_word++;
 5155              		.loc 1 477 29 view .LVU1725
 5156 1fb4 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 478:sieve_extend.c ****         copy_word++;
 5157              		.loc 1 478 9 is_stmt 1 view .LVU1726
 479:sieve_extend.c ****     }
 5158              		.loc 1 479 9 view .LVU1727
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5159              		.loc 1 476 10 view .LVU1728
 5160 1fb8 4D39EE   		cmp	r14, r13	# ivtmp.280, _179
 5161 1fbb 75B1     		jne	.L400	#,
 5162 1fbd E9D0FEFF 		jmp	.L503	#
 5162      FF
 5163              	.LVL251:
 5164              		.p2align 4,,7
 5165 1fc2 660F1F44 		.p2align 3
 5165      0000
 5166              	.L402:
 5167              	# sieve_extend.c:466:     counter_t source_word = wordindex(source_start);
 466:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5168              		.loc 1 466 15 is_stmt 0 view .LVU1729
 5169 1fc8 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 5169      08
 5170              	# sieve_extend.c:476:    while (copy_word < destination_stop_word) {
 476:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5171              		.loc 1 476 10 view .LVU1730
 5172 1fcd 4989C6   		mov	r14, rax	# copy_word, ivtmp.294
GAS LISTING /tmp/cct11Qa0.s 			page 146


 5173 1fd0 E90AFDFF 		jmp	.L396	#
 5173      FF
 5174              		.cfi_endproc
 5175              	.LFE5333:
 5177 1fd5 66662E0F 		.p2align 4
 5177      1F840000 
 5177      000000
 5179              	extendSieve_shiftleft:
 5180              	.LVL252:
 5181              	.LFB5339:
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5182              		.loc 1 722 142 is_stmt 1 view -0
 5183              		.cfi_startproc
 723:sieve_extend.c **** 
 5184              		.loc 1 723 5 view .LVU1732
 725:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5185              		.loc 1 725 5 view .LVU1733
 5186              	# sieve_extend.c:722: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5187              		.loc 1 722 142 is_stmt 0 view .LVU1734
 5188 1fe0 55       		push	rbp	#
 5189              		.cfi_def_cfa_offset 16
 5190              		.cfi_offset 6, -16
 5191              	# sieve_extend.c:725:     const counter_t destination_stop_word = wordindex(destination_stop);
 725:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5192              		.loc 1 725 21 view .LVU1735
 5193 1fe1 48C1E906 		shr	rcx, 6	# tmp1219,
 5194              	.LVL253:
 5195              	# sieve_extend.c:722: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5196              		.loc 1 722 142 view .LVU1736
 5197 1fe5 4989D2   		mov	r10, rdx	# size, tmp1218
 5198 1fe8 4889E5   		mov	rbp, rsp	#,
 5199              		.cfi_def_cfa_register 6
 5200 1feb 4157     		push	r15	#
 5201 1fed 4156     		push	r14	#
 5202              		.cfi_offset 15, -24
 5203              		.cfi_offset 14, -32
 5204              	# sieve_extend.c:725:     const counter_t destination_stop_word = wordindex(destination_stop);
 725:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5205              		.loc 1 725 21 view .LVU1737
 5206 1fef 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1219
 5207              	# sieve_extend.c:722: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5208              		.loc 1 722 142 view .LVU1738
 5209 1ff2 4155     		push	r13	#
 5210 1ff4 4154     		push	r12	#
 5211 1ff6 53       		push	rbx	#
 5212              		.cfi_offset 13, -40
 5213              		.cfi_offset 12, -48
 5214              		.cfi_offset 3, -56
 5215 1ff7 4889FB   		mov	rbx, rdi	# bitarray, tmp1216
 5216              	# sieve_extend.c:726:     const counter_t copy_start = source_start + size;
 726:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5217              		.loc 1 726 21 view .LVU1739
 5218 1ffa 488D3C16 		lea	rdi, [rsi+rdx]	# copy_start,
 5219              	.LVL254:
GAS LISTING /tmp/cct11Qa0.s 			page 147


 5220              	# sieve_extend.c:722: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5221              		.loc 1 722 142 view .LVU1740
 5222 1ffe 4883E4E0 		and	rsp, -32	#,
 5223              	# sieve_extend.c:727:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5224              		.loc 1 727 69 view .LVU1741
 5225 2002 4889F8   		mov	rax, rdi	# _5, copy_start
 5226              	# sieve_extend.c:722: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5227              		.loc 1 722 142 view .LVU1742
 5228 2005 488D6424 		lea	rsp, -96[rsp]	#,
 5228      A0
 5229              	# sieve_extend.c:730:     register counter_t copy_word = wordindex(copy_start);
 730:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5230              		.loc 1 730 24 view .LVU1743
 5231 200a 4989FB   		mov	r11, rdi	# copy_word, copy_start
 5232              	# sieve_extend.c:725:     const counter_t destination_stop_word = wordindex(destination_stop);
 725:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5233              		.loc 1 725 21 view .LVU1744
 5234 200d 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, destination_stop_word
 5234      50
 5235              	.LVL255:
 726:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5236              		.loc 1 726 5 is_stmt 1 view .LVU1745
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5237              		.loc 1 727 5 view .LVU1746
 5238              	# sieve_extend.c:727:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5239              		.loc 1 727 39 is_stmt 0 view .LVU1747
 5240 2012 4889F1   		mov	rcx, rsi	# _4, source_start
 5241              	.LVL256:
 5242              	# sieve_extend.c:729:     register counter_t source_word = wordindex(source_start);
 729:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5243              		.loc 1 729 24 view .LVU1748
 5244 2015 48C1EE06 		shr	rsi, 6	# source_start,
 5245              	.LVL257:
 5246              	# sieve_extend.c:727:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5247              		.loc 1 727 39 view .LVU1749
 5248 2019 83E13F   		and	ecx, 63	# _4,
 5249              	.LVL258:
 5250              	# sieve_extend.c:729:     register counter_t source_word = wordindex(source_start);
 729:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5251              		.loc 1 729 24 view .LVU1750
 5252 201c 4989F0   		mov	r8, rsi	# source_word, source_start
 5253              	# sieve_extend.c:727:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5254              		.loc 1 727 69 view .LVU1751
 5255 201f 83E03F   		and	eax, 63	# _5,
 5256              	.LVL259:
 728:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5257              		.loc 1 728 5 is_stmt 1 view .LVU1752
 729:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5258              		.loc 1 729 5 view .LVU1753
 730:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5259              		.loc 1 730 5 view .LVU1754
GAS LISTING /tmp/cct11Qa0.s 			page 148


 5260              	# sieve_extend.c:730:     register counter_t copy_word = wordindex(copy_start);
 730:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5261              		.loc 1 730 24 is_stmt 0 view .LVU1755
 5262 2022 49C1EB06 		shr	r11, 6	# copy_word,
 5263              	.LVL260:
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5264              		.loc 1 731 5 is_stmt 1 view .LVU1756
 5265              	# sieve_extend.c:732:                              | (bitarray[source_word+1] << shift_flipped))
 732:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5266              		.loc 1 732 41 is_stmt 0 view .LVU1757
 5267 2026 4D8D4801 		lea	r9, 1[r8]	# _183,
 5268              	# sieve_extend.c:727:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5269              		.loc 1 727 31 view .LVU1758
 5270 202a 4989CD   		mov	r13, rcx	# shift, _4
 5271              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5272              		.loc 1 731 25 view .LVU1759
 5273 202d 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 5273      00000000 
 5274              	# sieve_extend.c:732:                              | (bitarray[source_word+1] << shift_flipped))
 732:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5275              		.loc 1 732 41 view .LVU1760
 5276 2035 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, _183
 5276      58
 5277              	# sieve_extend.c:727:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 727:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5278              		.loc 1 727 31 view .LVU1761
 5279 203a 4929C5   		sub	r13, rax	# shift, _5
 5280              	.LVL261:
 5281              	# sieve_extend.c:738:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 738:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5282              		.loc 1 738 41 view .LVU1762
 5283 203d 4D01D1   		add	r9, r10	# tmp555, size
 5284              	# sieve_extend.c:728:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 728:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5285              		.loc 1 728 31 view .LVU1763
 5286 2040 4829C8   		sub	rax, rcx	# tmp542, _4
 5287              	.LVL262:
 5288              	# sieve_extend.c:722: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 722:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5289              		.loc 1 722 142 view .LVU1764
 5290 2043 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 5290      18
 5291              	# sieve_extend.c:728:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 728:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5292              		.loc 1 728 31 view .LVU1765
 5293 2048 4C8D7840 		lea	r15, 64[rax]	# shift_flipped,
 5294              	.LVL263:
 5295              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5296              		.loc 1 731 52 view .LVU1766
 5297 204c 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_10, *_10
 5298              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5299              		.loc 1 731 38 view .LVU1767
 5300 2050 4A8D14C5 		lea	rdx, 0[0+r8*8]	# _9,
GAS LISTING /tmp/cct11Qa0.s 			page 149


 5300      00000000 
 5301              	.LVL264:
 5302              	# sieve_extend.c:733:                              & ~chopmask(copy_start); // because this is the 
 733:sieve_extend.c **** 
 5303              		.loc 1 733 33 view .LVU1768
 5304 2058 F7D7     		not	edi	# tmp549
 5305              	.LVL265:
 5306              	# sieve_extend.c:732:                              | (bitarray[source_word+1] << shift_flipped))
 732:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5307              		.loc 1 732 57 view .LVU1769
 5308 205a C4E281F7 		shlx	rax, QWORD PTR 8[rbx+rdx], r15	# tmp544, *_16, shift_flipped
 5308      441308
 5309              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5310              		.loc 1 731 52 view .LVU1770
 5311 2061 C46293F7 		shrx	r8, rcx, r13	# tmp546, *_10, shift
 5311      C1
 5312              	# sieve_extend.c:732:                              | (bitarray[source_word+1] << shift_flipped))
 732:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5313              		.loc 1 732 30 view .LVU1771
 5314 2066 4909C0   		or	r8, rax	# tmp548, tmp544
 5315              	# sieve_extend.c:733:                              & ~chopmask(copy_start); // because this is the 
 733:sieve_extend.c **** 
 5316              		.loc 1 733 33 view .LVU1772
 5317 2069 48C7C0FF 		mov	rax, -1	# tmp552,
 5317      FFFFFF
 5318 2070 C4E2C3F7 		shrx	rdi, rax, rdi	# tmp551, tmp552, tmp549
 5318      F8
 5319              	# sieve_extend.c:733:                              & ~chopmask(copy_start); // because this is the 
 733:sieve_extend.c **** 
 5320              		.loc 1 733 30 view .LVU1773
 5321 2075 C4C2C0F2 		andn	rcx, rdi, r8	# tmp554, tmp551, tmp548
 5321      C8
 5322              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5323              		.loc 1 731 25 view .LVU1774
 5324 207a 48090C33 		or	QWORD PTR [rbx+rsi], rcx	# *_7, tmp554
 735:sieve_extend.c ****     source_word++;
 5325              		.loc 1 735 5 is_stmt 1 view .LVU1775
 5326              	# sieve_extend.c:738:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 738:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5327              		.loc 1 738 21 is_stmt 0 view .LVU1776
 5328 207e 4D39F1   		cmp	r9, r14	# tmp555, destination_stop_word
 5329              	# sieve_extend.c:735:     copy_word++;
 735:sieve_extend.c ****     source_word++;
 5330              		.loc 1 735 14 view .LVU1777
 5331 2081 498D4301 		lea	rax, 1[r11]	# ivtmp.378,
 5332              	.LVL266:
 736:sieve_extend.c **** 
 5333              		.loc 1 736 5 is_stmt 1 view .LVU1778
 738:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5334              		.loc 1 738 5 view .LVU1779
 5335              	# sieve_extend.c:732:                              | (bitarray[source_word+1] << shift_flipped))
 732:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5336              		.loc 1 732 57 is_stmt 0 view .LVU1780
 5337 2085 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift_flipped
 5337      48
GAS LISTING /tmp/cct11Qa0.s 			page 150


 5338              	# sieve_extend.c:731:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 731:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5339              		.loc 1 731 52 view .LVU1781
 5340 208a 4589EC   		mov	r12d, r13d	# _12, shift
 5341              	# sieve_extend.c:738:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 738:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5342              		.loc 1 738 21 view .LVU1782
 5343 208d 4D0F47CE 		cmova	r9, r14	# tmp555,, tmp555, destination_stop_word
 5344              	.LBB299:
 5345              	.LBB300:
 5346              	# sieve_extend.c:579:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5347              		.loc 1 579 91 view .LVU1783
 5348 2091 41BE0200 		mov	r14d, 2	# tmp556,
 5348      0000
 5349              	.LVL267:
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5350              		.loc 1 579 91 view .LVU1784
 5351              	.LBE300:
 5352              	.LBE299:
 5353              	# sieve_extend.c:738:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 738:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5354              		.loc 1 738 21 view .LVU1785
 5355 2097 4C894C24 		mov	QWORD PTR 64[rsp], r9	# %sfp, aligned_copy_word
 5355      40
 5356              	.LVL268:
 739:sieve_extend.c ****     source_word += distance;
 5357              		.loc 1 739 5 is_stmt 1 view .LVU1786
 5358              	.LBB325:
 5359              	.LBI299:
 578:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 5360              		.loc 1 578 25 view .LVU1787
 5361              	.LBB322:
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5362              		.loc 1 579 5 view .LVU1788
 5363              	# sieve_extend.c:579:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5364              		.loc 1 579 91 is_stmt 0 view .LVU1789
 5365 209c 4983F902 		cmp	r9, 2	# aligned_copy_word,
 5366 20a0 4D0F43F1 		cmovnb	r14, r9	# aligned_copy_word,, _86
 5367              	# sieve_extend.c:579:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5368              		.loc 1 579 21 view .LVU1790
 5369 20a4 4D8D46FE 		lea	r8, -2[r14]	# fast_loop_stop_word,
 5370 20a8 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, fast_loop_stop_word
 5370      30
 5371              	.LVL269:
 580:sieve_extend.c ****     counter_t distance = 0;
 5372              		.loc 1 580 5 is_stmt 1 view .LVU1791
 581:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 5373              		.loc 1 581 5 view .LVU1792
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5374              		.loc 1 582 5 view .LVU1793
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5375              		.loc 1 582 11 view .LVU1794
 5376 20ad 4C39C0   		cmp	rax, r8	# ivtmp.378, fast_loop_stop_word
 5377 20b0 0F83A404 		jnb	.L506	#,
GAS LISTING /tmp/cct11Qa0.s 			page 151


 5377      0000
 5378 20b6 4C8D5240 		lea	r10, 64[rdx]	# tmp559,
 5379              	.LVL270:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5380              		.loc 1 582 11 is_stmt 0 view .LVU1795
 5381 20ba 4D29DE   		sub	r14, r11	# tmp557, copy_word
 5382 20bd 4C8D4610 		lea	r8, 16[rsi]	# tmp560,
 5383              	.LVL271:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5384              		.loc 1 582 11 view .LVU1796
 5385 20c1 498D7EFC 		lea	rdi, -4[r14]	# _332,
 5386 20c5 488D4A08 		lea	rcx, 8[rdx]	# tmp796,
 5387 20c9 4D39C2   		cmp	r10, r8	# tmp559, tmp560
 5388 20cc 4C8D7648 		lea	r14, 72[rsi]	# tmp563,
 5389 20d0 410F9EC1 		setle	r9b	#, tmp562
 5390              	.LVL272:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5391              		.loc 1 582 11 view .LVU1797
 5392 20d4 48897C24 		mov	QWORD PTR 56[rsp], rdi	# %sfp, _332
 5392      38
 5393 20d9 4939CE   		cmp	r14, rcx	# tmp563, tmp796
 5394 20dc 400F9EC7 		setle	dil	#, tmp566
 5395 20e0 4109F9   		or	r9d, edi	# tmp567, tmp566
 5396 20e3 488D7A50 		lea	rdi, 80[rdx]	# tmp568,
 5397 20e7 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp568
 5397      28
 5398 20ec 4C39C7   		cmp	rdi, r8	# tmp568, tmp560
 5399 20ef 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 5399      27
 5400 20f4 4883C210 		add	rdx, 16	# tmp573,
 5401 20f8 4939D6   		cmp	r14, rdx	# tmp563, tmp573
 5402 20fb 400F9EC7 		setle	dil	#, tmp575
 5403 20ff 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp576, %sfp
 5403      27
 5404 2104 4421CF   		and	edi, r9d	# tmp577, tmp567
 5405 2107 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 5405      380B
 5406 210d 410F97C1 		seta	r9b	#, tmp579
 5407 2111 4421CF   		and	edi, r9d	# tmp580, tmp579
 5408 2114 4C8D4E08 		lea	r9, 8[rsi]	# tmp582,
 5409 2118 4D39CA   		cmp	r10, r9	# tmp559, tmp582
 5410 211b 410F9EC2 		setle	r10b	#, tmp584
 5411 211f 4883C640 		add	rsi, 64	# tmp585,
 5412 2123 4839CE   		cmp	rsi, rcx	# tmp585, tmp796
 5413 2126 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 5413      27
 5414 212b 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp589, %sfp
 5414      27
 5415 2130 4421D7   		and	edi, r10d	# tmp590, tmp589
 5416 2133 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp582
 5416      28
 5417 2138 410F9EC2 		setle	r10b	#, tmp594
 5418 213c 4839D6   		cmp	rsi, rdx	# tmp585, tmp573
 5419 213f 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 5419      28
 5420 2144 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp599, %sfp
 5420      28
GAS LISTING /tmp/cct11Qa0.s 			page 152


 5421 2149 4484D7   		test	dil, r10b	# tmp590, tmp599
 5422 214c 0F845E0D 		je	.L507	#,
 5422      0000
 5423 2152 4D39CE   		cmp	r14, r9	# tmp563, tmp582
 5424 2155 410F9EC6 		setle	r14b	#, tmp604
 5425 2159 4C39C6   		cmp	rsi, r8	# tmp585, tmp560
 5426 215c 400F9EC6 		setle	sil	#, tmp608
 5427 2160 4108F6   		or	r14b, sil	# tmp604, tmp608
 5428 2163 0F84470D 		je	.L507	#,
 5428      0000
 5429 2169 4801D9   		add	rcx, rbx	# vectp.343, bitarray
 5430 216c 4801DA   		add	rdx, rbx	# vectp.347, bitarray
 5431              	.LBB301:
 5432              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5433              		.loc 1 584 19 view .LVU1798
 5434 216f C5FE6F0A 		vmovdqu	ymm1, YMMWORD PTR [rdx]	# MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0B], MEM[
 5435 2173 C4C1796E 		vmovd	xmm3, r13d	# _12, _12
 5435      DD
 5436 2178 C5FE6F42 		vmovdqu	ymm0, YMMWORD PTR 32[rdx]	# MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 32B], M
 5436      20
 5437 217d C4C1796E 		vmovd	xmm4, r15d	# _18,
 5437      E7
 5438              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5439              		.loc 1 583 19 view .LVU1799
 5440 2182 C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1315, MEM[base: vectp.343_490, index: ivtmp.418_748, offset: 
 5441              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5442              		.loc 1 584 19 view .LVU1800
 5443 2186 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp616, MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0B],
 5444 218a C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp634, MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0B]
 5445              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5446              		.loc 1 583 19 view .LVU1801
 5447 218e C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp620, tmp1315, MEM[base: vectp.343_490, index: ivt
 5447      20
 5448 2193 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _332, %sfp
 5448      38
 5449              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5450              		.loc 1 584 19 view .LVU1802
 5451 2198 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_507, tmp616,
 5451      C5D8
 5452              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5453              		.loc 1 583 19 view .LVU1803
 5454 219e C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp619, tmp620,
 5454      F2D8
 5455              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5456              		.loc 1 584 19 view .LVU1804
 5457 21a4 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp633, tmp634,
 5457      FED8
 5458              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5459              		.loc 1 585 63 view .LVU1805
GAS LISTING /tmp/cct11Qa0.s 			page 153


 5460 21aa C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.351, vect_perm_even_507, _18
 5461              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5462              		.loc 1 585 42 view .LVU1806
 5463 21ae C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.350, tmp619, _12
 5464              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5465              		.loc 1 587 42 view .LVU1807
 5466 21b2 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.353, vect_perm_even_507, _12
 5467              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5468              		.loc 1 587 63 view .LVU1808
 5469 21b6 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.354, tmp633, _18
 5470 21ba 49C1EE03 		shr	r14, 3	# _332,
 5471              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5472              		.loc 1 585 52 view .LVU1809
 5473 21be C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.352, vect__98.350, vect__100.351
 5473      DA
 5474              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5475              		.loc 1 587 52 view .LVU1810
 5476 21c3 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.355, vect__110.354, vect__109.353
 5477 21c7 4D8D56FF 		lea	r10, -1[r14]	# tmp828,
 5478              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5479              		.loc 1 585 31 view .LVU1811
 5480 21cb C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp630, vect__104.352
 5480      DD01
 5481 21d1 4183E201 		and	r10d, 1	# tmp830,
 5482              	.LVL273:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5483              		.loc 1 583 9 is_stmt 1 view .LVU1812
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5484              		.loc 1 584 9 view .LVU1813
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5485              		.loc 1 585 9 view .LVU1814
 5486              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5487              		.loc 1 587 31 is_stmt 0 view .LVU1815
 5488 21d5 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp644, vect__114.355
 5488      EF01
 5489 21db 4983FE01 		cmp	r14, 1	# bnd.336,
 5490              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5491              		.loc 1 585 31 view .LVU1816
 5492 21df C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _513, index: ivtmp.418_748, offset: 0B], tmp626
 5492      1C0B
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5493              		.loc 1 585 31 view .LVU1817
 5494 21e5 4E8D1C0B 		lea	r11, [rbx+r9]	# _513,
 5495              	.LVL274:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5496              		.loc 1 585 31 view .LVU1818
 5497 21e9 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _513, index: ivtmp.418_748, offset: 16B], tmp62
 5497      5C0B1001 
 5498 21f1 4A8D3C03 		lea	rdi, [rbx+r8]	# _533,
GAS LISTING /tmp/cct11Qa0.s 			page 154


 5499 21f5 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _513, index: ivtmp.418_748, offset: 32B], tmp630
 5499      6C0B20
 5500 21fc C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _513, index: ivtmp.418_748, offset: 48B], tmp63
 5500      6C0B3001 
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5501              		.loc 1 586 9 is_stmt 1 view .LVU1819
 5502              	.LVL275:
 587:sieve_extend.c ****         copy_word += 2;
 5503              		.loc 1 587 9 view .LVU1820
 5504 2204 41B90100 		mov	r9d, 1	# ivtmp.416,
 5504      0000
 5505              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5506              		.loc 1 587 31 is_stmt 0 view .LVU1821
 5507 220a C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _533, index: ivtmp.418_748, offset: 0B], tmp640
 5507      2C03
 587:sieve_extend.c ****         copy_word += 2;
 5508              		.loc 1 587 31 view .LVU1822
 5509 2210 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.418_748, offset: 16B], tmp640
 5509      6C031001 
 5510 2218 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _533, index: ivtmp.418_748, offset: 32B], tmp644
 5510      7C0320
 5511 221f C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.418_748, offset: 48B], tmp644
 5511      7C033001 
 588:sieve_extend.c ****         source_word += 2;
 5512              		.loc 1 588 9 is_stmt 1 view .LVU1823
 589:sieve_extend.c ****         distance += 2;
 5513              		.loc 1 589 9 view .LVU1824
 590:sieve_extend.c ****     }
 5514              		.loc 1 590 9 view .LVU1825
 590:sieve_extend.c ****     }
 5515              		.loc 1 590 9 is_stmt 0 view .LVU1826
 5516              	.LBE301:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5517              		.loc 1 582 11 is_stmt 1 view .LVU1827
 5518 2227 41B84000 		mov	r8d, 64	# ivtmp.418,
 5518      0000
 5519 222d 0F86E901 		jbe	.L737	#,
 5519      0000
 5520 2233 4D85D2   		test	r10, r10	# tmp830
 5521 2236 0F84A400 		je	.L508	#,
 5521      0000
 5522              	.LBB302:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5523              		.loc 1 583 9 view .LVU1828
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5524              		.loc 1 584 9 view .LVU1829
 5525              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5526              		.loc 1 584 19 is_stmt 0 view .LVU1830
 5527 223c C57E6F4A 		vmovdqu	ymm9, YMMWORD PTR 64[rdx]	# MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0B], ME
 5527      40
 5528 2241 4983FE02 		cmp	r14, 2	# bnd.336,
 5529 2245 C57E6F52 		vmovdqu	ymm10, YMMWORD PTR 96[rdx]	# MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 32B], 
 5529      60
 5530 224a 41B90200 		mov	r9d, 2	# ivtmp.416,
 5530      0000
GAS LISTING /tmp/cct11Qa0.s 			page 155


 5531              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5532              		.loc 1 583 19 view .LVU1831
 5533 2250 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1432, MEM[base: vectp.343_490, index: ivtmp.418_748, offset
 5533      40
 5534              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5535              		.loc 1 584 19 view .LVU1832
 5536 2255 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1190, MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0B
 5536      D2
 5537 225a C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1205, MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0B
 5537      C2
 5538              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5539              		.loc 1 583 19 view .LVU1833
 5540 225f C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1194, tmp1432, MEM[base: vectp.343_490, index: i
 5540      60
 5541              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5542              		.loc 1 584 19 view .LVU1834
 5543 2264 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_507, tmp1190,
 5543      DAD8
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5544              		.loc 1 585 9 is_stmt 1 view .LVU1835
 5545              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5546              		.loc 1 583 19 is_stmt 0 view .LVU1836
 5547 226a C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1195, tmp1194,
 5547      ECD8
 5548              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5549              		.loc 1 584 19 view .LVU1837
 5550 2270 C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1206, tmp1205,
 5550      F8D8
 5551 2276 41B88000 		mov	r8d, 128	# ivtmp.418,
 5551      0000
 5552              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5553              		.loc 1 585 42 view .LVU1838
 5554 227c C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.350, tmp1195, _12
 5555              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5556              		.loc 1 585 63 view .LVU1839
 5557 2280 C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.351, vect_perm_even_507, _18
 5558              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5559              		.loc 1 587 42 view .LVU1840
 5560 2284 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.353, vect_perm_even_507, _12
 5561              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5562              		.loc 1 587 63 view .LVU1841
 5563 2288 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.354, tmp1206, _18
 5564              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5565              		.loc 1 585 52 view .LVU1842
 5566 228c C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.352, vect__98.350, vect__100.351
 5566      CF
GAS LISTING /tmp/cct11Qa0.s 			page 156


 5567              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5568              		.loc 1 587 52 view .LVU1843
 5569 2291 C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.355, vect__110.354, vect__109.353
 5569      D2
 5570              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5571              		.loc 1 585 31 view .LVU1844
 5572 2296 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1202, vect__104.352
 5572      CD01
 5573              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5574              		.loc 1 587 31 view .LVU1845
 5575 229c C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1213, vect__114.355
 5575      D601
 5576              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5577              		.loc 1 585 31 view .LVU1846
 5578 22a2 C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _513, index: ivtmp.418_748, offset: 0B], tmp1199
 5578      4B40
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5579              		.loc 1 585 31 view .LVU1847
 5580 22a8 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _513, index: ivtmp.418_748, offset: 16B], tmp1199
 5580      4B5001
 5581 22af C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _513, index: ivtmp.418_748, offset: 32B], tmp1202
 5581      6B60
 5582 22b5 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _513, index: ivtmp.418_748, offset: 48B], tmp1202
 5582      6B7001
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5583              		.loc 1 586 9 is_stmt 1 view .LVU1848
 587:sieve_extend.c ****         copy_word += 2;
 5584              		.loc 1 587 9 view .LVU1849
 5585              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5586              		.loc 1 587 31 is_stmt 0 view .LVU1850
 5587 22bc C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _533, index: ivtmp.418_748, offset: 0B], tmp1210
 5587      40
 587:sieve_extend.c ****         copy_word += 2;
 5588              		.loc 1 587 31 view .LVU1851
 5589 22c1 C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _533, index: ivtmp.418_748, offset: 16B], tmp1210
 5589      575001
 5590 22c8 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _533, index: ivtmp.418_748, offset: 32B], tmp1213
 5590      60
 5591 22cd C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _533, index: ivtmp.418_748, offset: 48B], tmp1213
 5591      777001
 588:sieve_extend.c ****         source_word += 2;
 5592              		.loc 1 588 9 is_stmt 1 view .LVU1852
 589:sieve_extend.c ****         distance += 2;
 5593              		.loc 1 589 9 view .LVU1853
 590:sieve_extend.c ****     }
 5594              		.loc 1 590 9 view .LVU1854
 590:sieve_extend.c ****     }
 5595              		.loc 1 590 9 is_stmt 0 view .LVU1855
 5596              	.LBE302:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5597              		.loc 1 582 11 is_stmt 1 view .LVU1856
 5598 22d4 0F864201 		jbe	.L737	#,
GAS LISTING /tmp/cct11Qa0.s 			page 157


 5598      0000
 5599 22da 660F1F44 		.p2align 4
 5599      0000
 5600              		.p2align 3
 5601              	.L508:
 5602              	.LBB303:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5603              		.loc 1 583 9 view .LVU1857
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5604              		.loc 1 584 9 view .LVU1858
 5605              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5606              		.loc 1 584 19 is_stmt 0 view .LVU1859
 5607 22e0 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdx+r8]	# MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0B], 
 5607      2402
 5608 22e6 4983C102 		add	r9, 2	# ivtmp.416,
 5609 22ea C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rdx+r8]	# MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 32B
 5609      6C0220
 5610              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5611              		.loc 1 583 19 view .LVU1860
 5612 22f1 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1316, MEM[base: vectp.343_490, index: ivtmp.418_748, offse
 5612      0C01
 5613              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5614              		.loc 1 584 19 view .LVU1861
 5615 22f7 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp837, MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0
 5615      F5
 5616 22fc C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp852, MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0
 5616      DD
 5617              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5618              		.loc 1 583 19 view .LVU1862
 5619 2301 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp841, tmp1316, MEM[base: vectp.343_490, index: 
 5619      440120
 5620              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5621              		.loc 1 584 19 view .LVU1863
 5622 2308 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_507, tmp837,
 5622      FED8
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5623              		.loc 1 585 9 is_stmt 1 view .LVU1864
 5624              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5625              		.loc 1 583 19 is_stmt 0 view .LVU1865
 5626 230e C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp842, tmp841,
 5626      E8D8
 5627              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5628              		.loc 1 584 19 view .LVU1866
 5629 2314 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp853, tmp852,
 5629      F3D8
 5630              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5631              		.loc 1 585 42 view .LVU1867
 5632 231a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.350, tmp842, _12
 5633              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/cct11Qa0.s 			page 158


 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5634              		.loc 1 585 63 view .LVU1868
 5635 231e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.351, vect_perm_even_507, _18
 5636              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5637              		.loc 1 587 42 view .LVU1869
 5638 2322 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.353, vect_perm_even_507, _12
 5639              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5640              		.loc 1 587 63 view .LVU1870
 5641 2326 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.354, tmp853, _18
 5642              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5643              		.loc 1 585 52 view .LVU1871
 5644 232a C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.352, vect__98.350, vect__100.351
 5645              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5646              		.loc 1 587 52 view .LVU1872
 5647 232e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.355, vect__110.354, vect__109.353
 5647      F5
 5648              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5649              		.loc 1 585 31 view .LVU1873
 5650 2333 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp849, vect__104.352
 5650      CA01
 5651              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5652              		.loc 1 587 31 view .LVU1874
 5653 2339 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp860, vect__114.355
 5653      F101
 5654              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5655              		.loc 1 585 31 view .LVU1875
 5656 233f C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _513, index: ivtmp.418_748, offset: 0B], tmp846
 5656      0C03
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5657              		.loc 1 585 31 view .LVU1876
 5658 2345 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _513, index: ivtmp.418_748, offset: 16B], tmp846
 5658      4C031001 
 5659 234d C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _513, index: ivtmp.418_748, offset: 32B], tmp849
 5659      540320
 5660 2354 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _513, index: ivtmp.418_748, offset: 48B], tmp849
 5660      54033001 
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5661              		.loc 1 586 9 is_stmt 1 view .LVU1877
 587:sieve_extend.c ****         copy_word += 2;
 5662              		.loc 1 587 9 view .LVU1878
 5663              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5664              		.loc 1 587 31 is_stmt 0 view .LVU1879
 5665 235c C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _533, index: ivtmp.418_748, offset: 0B], tmp857
 5665      3407
 587:sieve_extend.c ****         copy_word += 2;
 5666              		.loc 1 587 31 view .LVU1880
 5667 2362 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _533, index: ivtmp.418_748, offset: 16B], tmp85
 5667      74071001 
 5668 236a C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _533, index: ivtmp.418_748, offset: 32B], tmp860
GAS LISTING /tmp/cct11Qa0.s 			page 159


 5668      4C0720
 5669 2371 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _533, index: ivtmp.418_748, offset: 48B], tmp860
 5669      4C073001 
 588:sieve_extend.c ****         source_word += 2;
 5670              		.loc 1 588 9 is_stmt 1 view .LVU1881
 589:sieve_extend.c ****         distance += 2;
 5671              		.loc 1 589 9 view .LVU1882
 590:sieve_extend.c ****     }
 5672              		.loc 1 590 9 view .LVU1883
 590:sieve_extend.c ****     }
 5673              		.loc 1 590 9 is_stmt 0 view .LVU1884
 5674              	.LBE303:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5675              		.loc 1 582 11 is_stmt 1 view .LVU1885
 5676              	.LBB304:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5677              		.loc 1 583 9 view .LVU1886
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5678              		.loc 1 584 9 view .LVU1887
 5679              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5680              		.loc 1 584 19 is_stmt 0 view .LVU1888
 5681 2379 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rdx+r8]	# MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0B],
 5681      440240
 5682 2380 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdx+r8]	# MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 32B]
 5682      440260
 5683              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5684              		.loc 1 583 19 view .LVU1889
 5685 2387 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1317, MEM[base: vectp.343_490, index: ivtmp.418_748, off
 5685      7C0140
 5686              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5687              		.loc 1 584 19 view .LVU1890
 5688 238e C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp867, MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0B],
 5689 2392 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp882, MEM[base: vectp.347_499, index: ivtmp.418_748, offset: 0B]
 5690              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5691              		.loc 1 583 19 view .LVU1891
 5692 2396 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp871, tmp1317, MEM[base: vectp.343_490, index:
 5692      540160
 5693              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5694              		.loc 1 584 19 view .LVU1892
 5695 239d C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_507, tmp867,
 5695      CDD8
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5696              		.loc 1 585 9 is_stmt 1 view .LVU1893
 5697              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5698              		.loc 1 583 19 is_stmt 0 view .LVU1894
 5699 23a3 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp872, tmp871,
 5699      D2D8
 5700              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5701              		.loc 1 584 19 view .LVU1895
 5702 23a9 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp883, tmp882,
GAS LISTING /tmp/cct11Qa0.s 			page 160


 5702      CFD8
 5703              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5704              		.loc 1 585 42 view .LVU1896
 5705 23af C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.350, tmp872, _12
 5706              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5707              		.loc 1 585 63 view .LVU1897
 5708 23b3 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.351, vect_perm_even_507, _18
 5709              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5710              		.loc 1 587 42 view .LVU1898
 5711 23b7 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.353, vect_perm_even_507, _12
 5712              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5713              		.loc 1 587 63 view .LVU1899
 5714 23bb C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.354, tmp883, _18
 5715              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5716              		.loc 1 585 52 view .LVU1900
 5717 23bf C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.352, vect__98.350, vect__100.351
 5718              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5719              		.loc 1 587 52 view .LVU1901
 5720 23c3 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.355, vect__110.354, vect__109.353
 5721              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5722              		.loc 1 585 31 view .LVU1902
 5723 23c7 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp879, vect__104.352
 5723      E601
 5724              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5725              		.loc 1 587 31 view .LVU1903
 5726 23cd C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp890, vect__114.355
 5726      EF01
 5727              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5728              		.loc 1 585 31 view .LVU1904
 5729 23d3 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _513, index: ivtmp.418_748, offset: 0B], tmp876
 5729      640340
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5730              		.loc 1 585 31 view .LVU1905
 5731 23da C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _513, index: ivtmp.418_748, offset: 16B], tmp87
 5731      64035001 
 5732 23e2 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _513, index: ivtmp.418_748, offset: 32B], tmp879
 5732      740360
 5733 23e9 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _513, index: ivtmp.418_748, offset: 48B], tmp8
 5733      74037001 
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5734              		.loc 1 586 9 is_stmt 1 view .LVU1906
 587:sieve_extend.c ****         copy_word += 2;
 5735              		.loc 1 587 9 view .LVU1907
 5736              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5737              		.loc 1 587 31 is_stmt 0 view .LVU1908
 5738 23f1 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _533, index: ivtmp.418_748, offset: 0B], tmp887
 5738      6C0740
GAS LISTING /tmp/cct11Qa0.s 			page 161


 587:sieve_extend.c ****         copy_word += 2;
 5739              		.loc 1 587 31 view .LVU1909
 5740 23f8 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.418_748, offset: 16B], tmp887
 5740      6C075001 
 5741 2400 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _533, index: ivtmp.418_748, offset: 32B], tmp890
 5741      7C0760
 5742 2407 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.418_748, offset: 48B], tmp89
 5742      7C077001 
 588:sieve_extend.c ****         source_word += 2;
 5743              		.loc 1 588 9 is_stmt 1 view .LVU1910
 589:sieve_extend.c ****         distance += 2;
 5744              		.loc 1 589 9 view .LVU1911
 590:sieve_extend.c ****     }
 5745              		.loc 1 590 9 view .LVU1912
 590:sieve_extend.c ****     }
 5746              		.loc 1 590 9 is_stmt 0 view .LVU1913
 5747              	.LBE304:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5748              		.loc 1 582 11 is_stmt 1 view .LVU1914
 5749 240f 4983E880 		sub	r8, -128	# ivtmp.418,
 5750 2413 4D39CE   		cmp	r14, r9	# bnd.336, ivtmp.416
 5751 2416 0F87C4FE 		ja	.L508	#,
 5751      FFFF
 5752              	.L737:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5753              		.loc 1 582 11 is_stmt 0 view .LVU1915
 5754 241c 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 5754      58
 5755 2421 49C1E603 		sal	r14, 3	# _483,
 5756 2425 4A8D0C32 		lea	rcx, [rdx+r14]	# tmp.338,
 5757 2429 4A8D1430 		lea	rdx, [rax+r14]	# tmp.339,
 5758              	.LVL276:
 5759              	.LBB305:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5760              		.loc 1 583 9 is_stmt 1 view .LVU1916
 5761              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5762              		.loc 1 583 37 is_stmt 0 view .LVU1917
 5763 242d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _605,
 5763      00000000 
 5764              	.LVL277:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5765              		.loc 1 584 9 is_stmt 1 view .LVU1918
 5766              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5767              		.loc 1 585 42 is_stmt 0 view .LVU1919
 5768 2435 C4E293F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r13	# tmp648, *_606, shift
 5768      34CB
 5769              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5770              		.loc 1 584 19 view .LVU1920
 5771 243b 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_610
 5771      08
 5772              	.LVL278:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5773              		.loc 1 585 9 is_stmt 1 view .LVU1921
 5774              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/cct11Qa0.s 			page 162


 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5775              		.loc 1 585 63 is_stmt 0 view .LVU1922
 5776 2440 C46281F7 		shlx	r10, rdi, r15	# tmp650, source1, shift_flipped
 5776      D7
 5777              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5778              		.loc 1 585 52 view .LVU1923
 5779 2445 4C09D6   		or	rsi, r10	# tmp651, tmp650
 5780              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5781              		.loc 1 587 42 view .LVU1924
 5782 2448 C4E293F7 		shrx	rdi, rdi, r13	# tmp654, source1, shift
 5782      FF
 5783              	.LVL279:
 5784              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5785              		.loc 1 585 52 view .LVU1925
 5786 244d 488934D3 		mov	QWORD PTR [rbx+rdx*8], rsi	# *_615, tmp651
 5787              	.LVL280:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5788              		.loc 1 586 9 is_stmt 1 view .LVU1926
 5789              	# sieve_extend.c:586:         bitword_t source2 = bitarray[source_word+2];
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5790              		.loc 1 586 37 is_stmt 0 view .LVU1927
 5791 2451 4C8D4902 		lea	r9, 2[rcx]	# _618,
 5792              	.LVL281:
 587:sieve_extend.c ****         copy_word += 2;
 5793              		.loc 1 587 9 is_stmt 1 view .LVU1928
 5794              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5795              		.loc 1 587 63 is_stmt 0 view .LVU1929
 5796 2455 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_620, *_620
 5796      10
 5797 245a C44281F7 		shlx	r11, r8, r15	# tmp652, *_620, shift_flipped
 5797      D8
 5798              	.LVL282:
 5799              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5800              		.loc 1 587 52 view .LVU1930
 5801 245f 4C09DF   		or	rdi, r11	# tmp655, tmp652
 5802              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 5803              		.loc 1 588 19 view .LVU1931
 5804 2462 4C8D4202 		lea	r8, 2[rdx]	# copy_word,
 5805              	.LVL283:
 588:sieve_extend.c ****         source_word += 2;
 5806              		.loc 1 588 19 view .LVU1932
 5807              	.LBE305:
 5808              	# sieve_extend.c:582:     while (copy_word < fast_loop_stop_word) {
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5809              		.loc 1 582 11 view .LVU1933
 5810 2466 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 5810      30
 5811              	.LBB306:
 5812              	# sieve_extend.c:590:         distance += 2;
 590:sieve_extend.c ****     }
 5813              		.loc 1 590 18 view .LVU1934
GAS LISTING /tmp/cct11Qa0.s 			page 163


 5814 246b 4D8D5602 		lea	r10, 2[r14]	# distance,
 5815              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5816              		.loc 1 587 52 view .LVU1935
 5817 246f 48897CD3 		mov	QWORD PTR 8[rbx+rdx*8], rdi	# *_626, tmp655
 5817      08
 5818              	.LVL284:
 588:sieve_extend.c ****         source_word += 2;
 5819              		.loc 1 588 9 is_stmt 1 view .LVU1936
 589:sieve_extend.c ****         distance += 2;
 5820              		.loc 1 589 9 view .LVU1937
 590:sieve_extend.c ****     }
 5821              		.loc 1 590 9 view .LVU1938
 590:sieve_extend.c ****     }
 5822              		.loc 1 590 9 is_stmt 0 view .LVU1939
 5823              	.LBE306:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5824              		.loc 1 582 11 is_stmt 1 view .LVU1940
 5825 2474 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 5826 2477 0F86D500 		jbe	.L511	#,
 5826      0000
 5827              	.LBB307:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5828              		.loc 1 583 9 view .LVU1941
 5829              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5830              		.loc 1 585 42 is_stmt 0 view .LVU1942
 5831 247d 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_636, *_636
 5832              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5833              		.loc 1 583 37 view .LVU1943
 5834 2481 4E8D14CD 		lea	r10, 0[0+r9*8]	# _635,
 5834      00000000 
 5835              	.LVL285:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5836              		.loc 1 584 9 is_stmt 1 view .LVU1944
 5837              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5838              		.loc 1 584 19 is_stmt 0 view .LVU1945
 5839 2489 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_640
 5839      08
 5840              	.LVL286:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5841              		.loc 1 585 9 is_stmt 1 view .LVU1946
 5842              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5843              		.loc 1 585 42 is_stmt 0 view .LVU1947
 5844 248e C4E293F7 		shrx	rsi, rsi, r13	# tmp656, *_636, shift
 5844      F6
 5845              	.LVL287:
 5846              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5847              		.loc 1 585 63 view .LVU1948
 5848 2493 C46281F7 		shlx	r9, rdi, r15	# tmp658, source1, shift_flipped
 5848      CF
 5849              	.LVL288:
 5850              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/cct11Qa0.s 			page 164


 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5851              		.loc 1 585 52 view .LVU1949
 5852 2498 4C09CE   		or	rsi, r9	# tmp659, tmp658
 5853 249b 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_645, tmp659
 5854              	.LVL289:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5855              		.loc 1 586 9 is_stmt 1 view .LVU1950
 5856              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5857              		.loc 1 587 42 is_stmt 0 view .LVU1951
 5858 249f C4E293F7 		shrx	rdi, rdi, r13	# tmp662, source1, shift
 5858      FF
 5859              	.LVL290:
 5860              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5861              		.loc 1 587 63 view .LVU1952
 5862 24a4 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_650, *_650
 5862      10
 5863 24a9 C4C281F7 		shlx	rsi, r10, r15	# tmp660, *_650, shift_flipped
 5863      F2
 5864              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5865              		.loc 1 587 52 view .LVU1953
 5866 24ae 4809F7   		or	rdi, rsi	# tmp663, tmp660
 5867              	# sieve_extend.c:586:         bitword_t source2 = bitarray[source_word+2];
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5868              		.loc 1 586 37 view .LVU1954
 5869 24b1 4C8D4904 		lea	r9, 4[rcx]	# _648,
 587:sieve_extend.c ****         copy_word += 2;
 5870              		.loc 1 587 9 is_stmt 1 view .LVU1955
 5871              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5872              		.loc 1 587 52 is_stmt 0 view .LVU1956
 5873 24b5 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_656, tmp663
 5873      08
 588:sieve_extend.c ****         source_word += 2;
 5874              		.loc 1 588 9 is_stmt 1 view .LVU1957
 5875              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 5876              		.loc 1 588 19 is_stmt 0 view .LVU1958
 5877 24ba 4C8D4204 		lea	r8, 4[rdx]	# copy_word,
 5878              	.LVL291:
 589:sieve_extend.c ****         distance += 2;
 5879              		.loc 1 589 9 is_stmt 1 view .LVU1959
 590:sieve_extend.c ****     }
 5880              		.loc 1 590 9 view .LVU1960
 590:sieve_extend.c ****     }
 5881              		.loc 1 590 9 is_stmt 0 view .LVU1961
 5882              	.LBE307:
 5883              	# sieve_extend.c:582:     while (copy_word < fast_loop_stop_word) {
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5884              		.loc 1 582 11 view .LVU1962
 5885 24be 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 5886              	.LBB308:
 5887              	# sieve_extend.c:590:         distance += 2;
 590:sieve_extend.c ****     }
 5888              		.loc 1 590 18 view .LVU1963
GAS LISTING /tmp/cct11Qa0.s 			page 165


 5889 24c1 4D8D5604 		lea	r10, 4[r14]	# distance,
 5890              	.LVL292:
 590:sieve_extend.c ****     }
 5891              		.loc 1 590 18 view .LVU1964
 5892              	.LBE308:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5893              		.loc 1 582 11 is_stmt 1 view .LVU1965
 5894 24c5 0F868700 		jbe	.L511	#,
 5894      0000
 5895              	.LBB309:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5896              		.loc 1 583 9 view .LVU1966
 5897              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5898              		.loc 1 583 37 is_stmt 0 view .LVU1967
 5899 24cb 4E8D14CD 		lea	r10, 0[0+r9*8]	# _665,
 5899      00000000 
 5900              	.LVL293:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5901              		.loc 1 584 9 is_stmt 1 view .LVU1968
 5902              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 5903              		.loc 1 588 19 is_stmt 0 view .LVU1969
 5904 24d3 4883C206 		add	rdx, 6	# copy_word,
 5905              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5906              		.loc 1 584 19 view .LVU1970
 5907 24d7 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_670
 5907      08
 5908              	.LVL294:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5909              		.loc 1 585 9 is_stmt 1 view .LVU1971
 5910              	# sieve_extend.c:586:         bitword_t source2 = bitarray[source_word+2];
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5911              		.loc 1 586 37 is_stmt 0 view .LVU1972
 5912 24dc 4883C106 		add	rcx, 6	# _678,
 5913              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5914              		.loc 1 585 42 view .LVU1973
 5915 24e0 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_666, *_666
 5916              	.LVL295:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5917              		.loc 1 585 42 view .LVU1974
 5918 24e4 C4C293F7 		shrx	rsi, r9, r13	# tmp664, *_666, shift
 5918      F1
 5919              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5920              		.loc 1 585 63 view .LVU1975
 5921 24e9 C46281F7 		shlx	r9, rdi, r15	# tmp666, source1, shift_flipped
 5921      CF
 5922              	.LVL296:
 5923              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5924              		.loc 1 585 52 view .LVU1976
 5925 24ee 4C09CE   		or	rsi, r9	# tmp667, tmp666
 5926 24f1 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_675, tmp667
 5927              	.LVL297:
GAS LISTING /tmp/cct11Qa0.s 			page 166


 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5928              		.loc 1 586 9 is_stmt 1 view .LVU1977
 587:sieve_extend.c ****         copy_word += 2;
 5929              		.loc 1 587 9 view .LVU1978
 5930              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5931              		.loc 1 587 42 is_stmt 0 view .LVU1979
 5932 24f5 C4E293F7 		shrx	rdi, rdi, r13	# tmp670, source1, shift
 5932      FF
 5933              	.LVL298:
 5934              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5935              		.loc 1 587 63 view .LVU1980
 5936 24fa 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_680, *_680
 5936      10
 5937              	.LVL299:
 587:sieve_extend.c ****         copy_word += 2;
 5938              		.loc 1 587 63 view .LVU1981
 5939 24ff C4C281F7 		shlx	rsi, r10, r15	# tmp668, *_680, shift_flipped
 5939      F2
 5940              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5941              		.loc 1 587 52 view .LVU1982
 5942 2504 4809F7   		or	rdi, rsi	# tmp671, tmp668
 5943              	.LBE309:
 5944              	# sieve_extend.c:582:     while (copy_word < fast_loop_stop_word) {
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5945              		.loc 1 582 11 view .LVU1983
 5946 2507 4939D3   		cmp	r11, rdx	# fast_loop_stop_word, copy_word
 5947              	.LBB310:
 5948              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5949              		.loc 1 587 52 view .LVU1984
 5950 250a 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_686, tmp671
 5950      08
 588:sieve_extend.c ****         source_word += 2;
 5951              		.loc 1 588 9 is_stmt 1 view .LVU1985
 5952              	.LVL300:
 589:sieve_extend.c ****         distance += 2;
 5953              		.loc 1 589 9 view .LVU1986
 590:sieve_extend.c ****     }
 5954              		.loc 1 590 9 view .LVU1987
 5955              	# sieve_extend.c:590:         distance += 2;
 590:sieve_extend.c ****     }
 5956              		.loc 1 590 18 is_stmt 0 view .LVU1988
 5957 250f 4D8D5606 		lea	r10, 6[r14]	# distance,
 5958              	.LVL301:
 590:sieve_extend.c ****     }
 5959              		.loc 1 590 18 view .LVU1989
 5960              	.LBE310:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5961              		.loc 1 582 11 is_stmt 1 view .LVU1990
 5962 2513 763D     		jbe	.L511	#,
 5963              	.LBB311:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5964              		.loc 1 583 9 view .LVU1991
 5965              	# sieve_extend.c:583:         bitword_t source0 = bitarray[source_word  ];
GAS LISTING /tmp/cct11Qa0.s 			page 167


 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 5966              		.loc 1 583 37 is_stmt 0 view .LVU1992
 5967 2515 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _452,
 5967      00000000 
 5968              	.LVL302:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5969              		.loc 1 584 9 is_stmt 1 view .LVU1993
 5970              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 5971              		.loc 1 584 19 is_stmt 0 view .LVU1994
 5972 251d 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_457
 5972      08
 5973              	.LVL303:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5974              		.loc 1 585 9 is_stmt 1 view .LVU1995
 5975              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5976              		.loc 1 585 63 is_stmt 0 view .LVU1996
 5977 2522 C44281F7 		shlx	r8, r9, r15	# tmp674, source1, shift_flipped
 5977      C1
 5978              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5979              		.loc 1 585 42 view .LVU1997
 5980 2527 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_453, *_453
 5981              	.LVL304:
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5982              		.loc 1 585 42 view .LVU1998
 5983 252b C46293F7 		shrx	r10, rcx, r13	# tmp672, *_453, shift
 5983      D1
 5984              	.LVL305:
 5985              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 5986              		.loc 1 585 52 view .LVU1999
 5987 2530 4D09C2   		or	r10, r8	# tmp675, tmp674
 5988 2533 4C8914D3 		mov	QWORD PTR [rbx+rdx*8], r10	# *_462, tmp675
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 5989              		.loc 1 586 9 is_stmt 1 view .LVU2000
 5990              	.LVL306:
 587:sieve_extend.c ****         copy_word += 2;
 5991              		.loc 1 587 9 view .LVU2001
 5992              	# sieve_extend.c:590:         distance += 2;
 590:sieve_extend.c ****     }
 5993              		.loc 1 590 18 is_stmt 0 view .LVU2002
 5994 2537 4D8D5608 		lea	r10, 8[r14]	# distance,
 5995              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5996              		.loc 1 587 63 view .LVU2003
 5997 253b 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_467, *_467
 5997      10
 5998              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 5999              		.loc 1 587 42 view .LVU2004
 6000 2540 C44293F7 		shrx	r11, r9, r13	# tmp678, source1, shift
 6000      D9
 6001              	.LVL307:
 6002              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/cct11Qa0.s 			page 168


 6003              		.loc 1 587 63 view .LVU2005
 6004 2545 C4E281F7 		shlx	rdi, rsi, r15	# tmp676, *_467, shift_flipped
 6004      FE
 6005              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 6006              		.loc 1 587 52 view .LVU2006
 6007 254a 4909FB   		or	r11, rdi	# tmp679, tmp676
 6008 254d 4C895CD3 		mov	QWORD PTR 8[rbx+rdx*8], r11	# *_473, tmp679
 6008      08
 588:sieve_extend.c ****         source_word += 2;
 6009              		.loc 1 588 9 is_stmt 1 view .LVU2007
 589:sieve_extend.c ****         distance += 2;
 6010              		.loc 1 589 9 view .LVU2008
 590:sieve_extend.c ****     }
 6011              		.loc 1 590 9 view .LVU2009
 6012              	.LVL308:
 590:sieve_extend.c ****     }
 6013              		.loc 1 590 9 is_stmt 0 view .LVU2010
 6014              	.LBE311:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6015              		.loc 1 582 11 is_stmt 1 view .LVU2011
 6016              	.L511:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6017              		.loc 1 582 11 is_stmt 0 view .LVU2012
 6018 2552 4C015424 		add	QWORD PTR 88[rsp], r10	# %sfp, distance
 6018      58
 6019 2557 4C01D0   		add	rax, r10	# ivtmp.378, distance
 6020              	.L506:
 592:sieve_extend.c **** }
 6021              		.loc 1 592 5 is_stmt 1 view .LVU2013
 6022              	.LVL309:
 592:sieve_extend.c **** }
 6023              		.loc 1 592 5 is_stmt 0 view .LVU2014
 6024              	.LBE322:
 6025              	.LBE325:
 740:sieve_extend.c ****     copy_word += distance;
 6026              		.loc 1 740 5 is_stmt 1 view .LVU2015
 741:sieve_extend.c **** 
 6027              		.loc 1 741 5 view .LVU2016
 743:sieve_extend.c **** 
 6028              		.loc 1 743 6 view .LVU2017
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6029              		.loc 1 746 11 view .LVU2018
 6030              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6031              		.loc 1 746 5 is_stmt 0 view .LVU2019
 6032 255a 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 6032      40
 6033 255f 4939C2   		cmp	r10, rax	# aligned_copy_word, ivtmp.378
 6034 2562 0F821004 		jb	.L512	#,
 6034      0000
 6035 2568 4C8B5C24 		mov	r11, QWORD PTR 88[rsp]	# _183, %sfp
 6035      58
 6036 256d 488D34C5 		lea	rsi, 0[0+rax*8]	# _220,
 6036      00000000 
 6037 2575 488D7E20 		lea	rdi, 32[rsi]	# tmp691,
 6038 2579 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _226,
GAS LISTING /tmp/cct11Qa0.s 			page 169


 6038      00000000 
 6039 2581 4A8D0CDD 		lea	rcx, 40[0+r11*8]	# _218,
 6039      28000000 
 6040 2589 4839D7   		cmp	rdi, rdx	# tmp691, _226
 6041 258c 4D89DE   		mov	r14, r11	# _183, _183
 6042 258f 410F9EC1 		setle	r9b	#, tmp693
 6043 2593 4839F1   		cmp	rcx, rsi	# _218, _220
 6044 2596 410F9EC0 		setle	r8b	#, tmp695
 6045 259a 4508C1   		or	r9b, r8b	# tmp693, tmp695
 6046 259d 0F84E50A 		je	.L513	#,
 6046      0000
 6047 25a3 4C89D1   		mov	rcx, r10	# tmp697, aligned_copy_word
 6048 25a6 4829C1   		sub	rcx, rax	# tmp697, ivtmp.378
 6049 25a9 4883F905 		cmp	rcx, 5	# tmp697,
 6050 25ad 0F86D50A 		jbe	.L513	#,
 6050      0000
 6051 25b3 4801DA   		add	rdx, rbx	# vectp.316, bitarray
 6052 25b6 4983C201 		add	r10, 1	# ivtmp.378,
 6053 25ba 48C1EA03 		shr	rdx, 3	# tmp702,
 6054 25be 4C89D7   		mov	rdi, r10	# niters.315, ivtmp.378
 6055 25c1 48F7DA   		neg	rdx	# tmp703
 6056 25c4 4829C7   		sub	rdi, rax	# niters.315, ivtmp.378
 6057 25c7 83E203   		and	edx, 3	# prolog_loop_niters.317,
 6058 25ca 0F84A80A 		je	.L532	#,
 6058      0000
 6059              	.LVL310:
 747:sieve_extend.c ****     }
 6060              		.loc 1 747 9 is_stmt 1 view .LVU2020
 6061              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6062              		.loc 1 747 77 is_stmt 0 view .LVU2021
 6063 25d0 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 6064              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6065              		.loc 1 747 94 view .LVU2022
 6066 25d4 4E8B5CDB 		mov	r11, QWORD PTR 8[rbx+r11*8]	# *_573, *_573
 6066      08
 6067              	.LVL311:
 747:sieve_extend.c ****     }
 6068              		.loc 1 747 94 view .LVU2023
 6069 25d9 C44281F7 		shlx	r9, r11, r15	# tmp704,, shift_flipped
 6069      CB
 6070              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6071              		.loc 1 747 56 view .LVU2024
 6072 25de 4E8B1CF3 		mov	r11, QWORD PTR [rbx+r14*8]	# *_568, *_568
 6073              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6074              		.loc 1 747 77 view .LVU2025
 6075 25e2 4C89C1   		mov	rcx, r8	# source_word, tmp793
 6076              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6077              		.loc 1 747 56 view .LVU2026
 6078 25e5 4C895C24 		mov	QWORD PTR 56[rsp], r11	# %sfp, *_568
 6078      38
 6079 25ea C44293F7 		shrx	r11, r11, r13	# tmp706,, shift
 6079      DB
GAS LISTING /tmp/cct11Qa0.s 			page 170


 6080              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6081              		.loc 1 747 66 view .LVU2027
 6082 25ef 4D09D9   		or	r9, r11	# tmp708, tmp706
 6083 25f2 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.317,
 6084 25f6 4C890C33 		mov	QWORD PTR [rbx+rsi], r9	# *_577, tmp708
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6085              		.loc 1 746 43 is_stmt 1 view .LVU2028
 6086              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6087              		.loc 1 746 52 is_stmt 0 view .LVU2029
 6088 25fa 488D7001 		lea	rsi, 1[rax]	# copy_word,
 6089              	.LVL312:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6090              		.loc 1 746 11 is_stmt 1 view .LVU2030
 6091 25fe 7454     		je	.L514	#,
 747:sieve_extend.c ****     }
 6092              		.loc 1 747 9 view .LVU2031
 6093              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6094              		.loc 1 747 40 is_stmt 0 view .LVU2032
 6095 2600 4E8D1CC5 		lea	r11, 0[0+r8*8]	# _586,
 6095      00000000 
 6096              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6097              		.loc 1 747 94 view .LVU2033
 6098 2608 C42281F7 		shlx	r9, QWORD PTR 8[rbx+r11], r15	# tmp709, *_592, shift_flipped
 6098      4C1B08
 6099              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6100              		.loc 1 747 56 view .LVU2034
 6101 260f 4E8B1C1B 		mov	r11, QWORD PTR [rbx+r11]	# *_587, *_587
 6102 2613 C44293F7 		shrx	r11, r11, r13	# tmp711, *_587, shift
 6102      DB
 6103              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6104              		.loc 1 747 66 view .LVU2035
 6105 2618 4D09D9   		or	r9, r11	# tmp713, tmp711
 6106 261b 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.317,
 6107 261f 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_596, tmp713
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6108              		.loc 1 746 43 is_stmt 1 view .LVU2036
 6109              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6110              		.loc 1 747 77 is_stmt 0 view .LVU2037
 6111 2623 498D4E02 		lea	rcx, 2[r14]	# source_word,
 6112              	.LVL313:
 6113              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6114              		.loc 1 746 52 view .LVU2038
 6115 2627 488D7002 		lea	rsi, 2[rax]	# copy_word,
 6116              	.LVL314:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6117              		.loc 1 746 11 is_stmt 1 view .LVU2039
 6118 262b 7527     		jne	.L514	#,
 747:sieve_extend.c ****     }
 6119              		.loc 1 747 9 view .LVU2040
GAS LISTING /tmp/cct11Qa0.s 			page 171


 6120              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6121              		.loc 1 747 40 is_stmt 0 view .LVU2041
 6122 262d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _261,
 6122      00000000 
 6123              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6124              		.loc 1 747 77 view .LVU2042
 6125 2635 498D4E03 		lea	rcx, 3[r14]	# source_word,
 6126              	.LVL315:
 6127              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6128              		.loc 1 747 56 view .LVU2043
 6129 2639 4E8B0C1B 		mov	r9, QWORD PTR [rbx+r11]	# *_262, *_262
 6130              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6131              		.loc 1 747 94 view .LVU2044
 6132 263d C42281F7 		shlx	r14, QWORD PTR 8[rbx+r11], r15	# tmp714, *_267, shift_flipped
 6132      741B08
 6133              	.LVL316:
 6134              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6135              		.loc 1 747 56 view .LVU2045
 6136 2644 C44293F7 		shrx	r11, r9, r13	# tmp716, *_262, shift
 6136      D9
 6137              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6138              		.loc 1 747 66 view .LVU2046
 6139 2649 4D09DE   		or	r14, r11	# tmp718, tmp716
 6140 264c 4C8934F3 		mov	QWORD PTR [rbx+rsi*8], r14	# *_271, tmp718
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6141              		.loc 1 746 43 is_stmt 1 view .LVU2047
 6142              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6143              		.loc 1 746 52 is_stmt 0 view .LVU2048
 6144 2650 488D7003 		lea	rsi, 3[rax]	# copy_word,
 6145              	.LVL317:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6146              		.loc 1 746 11 is_stmt 1 view .LVU2049
 6147              	.L514:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6148              		.loc 1 746 11 is_stmt 0 view .LVU2050
 6149 2654 4829D7   		sub	rdi, rdx	# niters.318, prolog_loop_niters.317
 6150 2657 C441796E 		vmovd	xmm10, r12d	# _12, _12
 6150      D4
 6151 265c 4989FB   		mov	r11, rdi	# bnd.319, niters.318
 6152 265f 4801D0   		add	rax, rdx	# tmp724, prolog_loop_niters.317
 6153 2662 49C1EB02 		shr	r11, 2	# bnd.319,
 6154 2666 4901D0   		add	r8, rdx	# tmp722, prolog_loop_niters.317
 6155 2669 49C1E305 		sal	r11, 5	# _733,
 6156 266d 4E8D04C3 		lea	r8, [rbx+r8*8]	# vectp.328,
 6157 2671 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# _183, %sfp
 6157      58
 6158 2676 4D8D63E0 		lea	r12, -32[r11]	# tmp818,
 6159 267a C5F96E54 		vmovd	xmm2, DWORD PTR 72[rsp]	# _18, %sfp
 6159      2448
 6160 2680 49C1EC05 		shr	r12, 5	# tmp816,
GAS LISTING /tmp/cct11Qa0.s 			page 172


 6161 2684 4983C401 		add	r12, 1	# tmp819,
 6162 2688 4901D6   		add	r14, rdx	# _183, prolog_loop_niters.317
 6163 268b 488D14C3 		lea	rdx, [rbx+rax*8]	# vectp.333,
 6164              	# sieve_extend.c:740:     source_word += distance;
 740:sieve_extend.c ****     copy_word += distance;
 6165              		.loc 1 740 17 view .LVU2051
 6166 268f 31C0     		xor	eax, eax	# ivtmp.394
 6167 2691 4183E407 		and	r12d, 7	# tmp820,
 6168 2695 4E8D0CF3 		lea	r9, [rbx+r14*8]	# vectp.324,
 6169 2699 0F842801 		je	.L516	#,
 6169      0000
 6170 269f 4983FC01 		cmp	r12, 1	# tmp820,
 6171 26a3 0F84F200 		je	.L664	#,
 6171      0000
 6172 26a9 4983FC02 		cmp	r12, 2	# tmp820,
 6173 26ad 0F84C600 		je	.L665	#,
 6173      0000
 6174 26b3 4983FC03 		cmp	r12, 3	# tmp820,
 6175 26b7 0F849900 		je	.L666	#,
 6175      0000
 6176 26bd 4983FC04 		cmp	r12, 4	# tmp820,
 6177 26c1 7470     		je	.L667	#,
 6178 26c3 4983FC05 		cmp	r12, 5	# tmp820,
 6179 26c7 7448     		je	.L668	#,
 6180 26c9 4983FC06 		cmp	r12, 6	# tmp820,
 6181 26cd 7420     		je	.L669	#,
 747:sieve_extend.c ****     }
 6182              		.loc 1 747 9 is_stmt 1 view .LVU2052
 6183              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6184              		.loc 1 747 56 is_stmt 0 view .LVU2053
 6185 26cf C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r9]	# tmp1411, MEM[base: vectp.324_307, index: ivtmp.394_731, offset: 0
 6185      19
 6186 26d4 B8200000 		mov	eax, 32	# ivtmp.394,
 6186      00
 6187              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6188              		.loc 1 747 94 view .LVU2054
 6189 26d9 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8]	# tmp1412, MEM[base: vectp.328_314, index: ivtmp.394_731, offset: 0
 6189      20
 6190              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6191              		.loc 1 747 56 view .LVU2055
 6192 26de C44165D3 		vpsrlq	ymm11, ymm3, xmm10	# vect__38.326, tmp1411, _12
 6192      DA
 6193              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6194              		.loc 1 747 94 view .LVU2056
 6195 26e3 C5DDF3F2 		vpsllq	ymm6, ymm4, xmm2	# vect__43.330, tmp1412, _18
 6196              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6197              		.loc 1 747 66 view .LVU2057
 6198 26e7 C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__46.331, vect__38.326, vect__43.330
 6199              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6200              		.loc 1 747 29 view .LVU2058
 6201 26eb C57E7F22 		vmovdqu	YMMWORD PTR [rdx], ymm12	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B], vec
GAS LISTING /tmp/cct11Qa0.s 			page 173


 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6202              		.loc 1 746 43 is_stmt 1 view .LVU2059
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6203              		.loc 1 746 11 view .LVU2060
 6204              	.L669:
 747:sieve_extend.c ****     }
 6205              		.loc 1 747 9 view .LVU2061
 6206              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6207              		.loc 1 747 56 is_stmt 0 view .LVU2062
 6208 26ef C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rax]	# tmp1413, MEM[base: vectp.324_307, index: ivtmp.394_731, offs
 6208      2C01
 6209              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6210              		.loc 1 747 94 view .LVU2063
 6211 26f5 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rax]	# tmp1414, MEM[base: vectp.328_314, index: ivtmp.394_731, offs
 6211      3C00
 6212              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6213              		.loc 1 747 56 view .LVU2064
 6214 26fb C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.326, tmp1413, _12
 6214      F2
 6215              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6216              		.loc 1 747 94 view .LVU2065
 6217 2700 C585F3CA 		vpsllq	ymm1, ymm15, xmm2	# vect__43.330, tmp1414, _18
 6218              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6219              		.loc 1 747 66 view .LVU2066
 6220 2704 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.331, vect__38.326, vect__43.330
 6221              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6222              		.loc 1 747 29 view .LVU2067
 6223 2708 C57E7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm8	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B], 
 6223      02
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6224              		.loc 1 746 43 is_stmt 1 view .LVU2068
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6225              		.loc 1 746 11 view .LVU2069
 6226 270d 4883C020 		add	rax, 32	# ivtmp.394,
 6227              	.L668:
 747:sieve_extend.c ****     }
 6228              		.loc 1 747 9 view .LVU2070
 6229              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6230              		.loc 1 747 56 is_stmt 0 view .LVU2071
 6231 2711 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r9+rax]	# tmp1415, MEM[base: vectp.324_307, index: ivtmp.394_731, offse
 6231      0401
 6232              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6233              		.loc 1 747 94 view .LVU2072
 6234 2717 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rax]	# tmp1416, MEM[base: vectp.328_314, index: ivtmp.394_731, offse
 6234      0C00
 6235              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6236              		.loc 1 747 56 view .LVU2073
 6237 271d C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.326, tmp1415, _12
GAS LISTING /tmp/cct11Qa0.s 			page 174


 6237      EA
 6238              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6239              		.loc 1 747 94 view .LVU2074
 6240 2722 C5B5F3FA 		vpsllq	ymm7, ymm9, xmm2	# vect__43.330, tmp1416, _18
 6241              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6242              		.loc 1 747 66 view .LVU2075
 6243 2726 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.331, vect__38.326, vect__43.330
 6244              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6245              		.loc 1 747 29 view .LVU2076
 6246 272a C5FE7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm3	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B], 
 6246      02
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6247              		.loc 1 746 43 is_stmt 1 view .LVU2077
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6248              		.loc 1 746 11 view .LVU2078
 6249 272f 4883C020 		add	rax, 32	# ivtmp.394,
 6250              	.L667:
 747:sieve_extend.c ****     }
 6251              		.loc 1 747 9 view .LVU2079
 6252              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6253              		.loc 1 747 56 is_stmt 0 view .LVU2080
 6254 2733 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r9+rax]	# tmp1417, MEM[base: vectp.324_307, index: ivtmp.394_731, offs
 6254      1C01
 6255              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6256              		.loc 1 747 94 view .LVU2081
 6257 2739 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r8+rax]	# tmp1418, MEM[base: vectp.328_314, index: ivtmp.394_731, offse
 6257      3400
 6258              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6259              		.loc 1 747 56 view .LVU2082
 6260 273f C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.326, tmp1417, _12
 6260      E2
 6261              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6262              		.loc 1 747 94 view .LVU2083
 6263 2744 C54DF3E2 		vpsllq	ymm12, ymm6, xmm2	# vect__43.330, tmp1418, _18
 6264              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6265              		.loc 1 747 66 view .LVU2084
 6266 2748 C4415DEB 		vpor	ymm13, ymm4, ymm12	# vect__46.331, vect__38.326, vect__43.330
 6266      EC
 6267              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6268              		.loc 1 747 29 view .LVU2085
 6269 274d C57E7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm13	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B],
 6269      02
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6270              		.loc 1 746 43 is_stmt 1 view .LVU2086
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6271              		.loc 1 746 11 view .LVU2087
 6272 2752 4883C020 		add	rax, 32	# ivtmp.394,
 6273              	.L666:
GAS LISTING /tmp/cct11Qa0.s 			page 175


 747:sieve_extend.c ****     }
 6274              		.loc 1 747 9 view .LVU2088
 6275              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6276              		.loc 1 747 56 is_stmt 0 view .LVU2089
 6277 2756 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rax]	# tmp1419, MEM[base: vectp.324_307, index: ivtmp.394_731, offs
 6277      3401
 6278              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6279              		.loc 1 747 94 view .LVU2090
 6280 275c C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r8+rax]	# tmp1420, MEM[base: vectp.328_314, index: ivtmp.394_731, offse
 6280      0C00
 6281              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6282              		.loc 1 747 56 view .LVU2091
 6283 2762 C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.326, tmp1419, _12
 6283      FA
 6284              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6285              		.loc 1 747 94 view .LVU2092
 6286 2767 C575F3C2 		vpsllq	ymm8, ymm1, xmm2	# vect__43.330, tmp1420, _18
 6287              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6288              		.loc 1 747 66 view .LVU2093
 6289 276b C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.331, vect__38.326, vect__43.330
 6289      C0
 6290              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6291              		.loc 1 747 29 view .LVU2094
 6292 2770 C5FE7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm0	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B], 
 6292      02
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6293              		.loc 1 746 43 is_stmt 1 view .LVU2095
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6294              		.loc 1 746 11 view .LVU2096
 6295 2775 4883C020 		add	rax, 32	# ivtmp.394,
 6296              	.L665:
 747:sieve_extend.c ****     }
 6297              		.loc 1 747 9 view .LVU2097
 6298              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6299              		.loc 1 747 56 is_stmt 0 view .LVU2098
 6300 2779 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r9+rax]	# tmp1421, MEM[base: vectp.324_307, index: ivtmp.394_731, offse
 6300      2C01
 6301              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6302              		.loc 1 747 94 view .LVU2099
 6303 277f C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8+rax]	# tmp1422, MEM[base: vectp.328_314, index: ivtmp.394_731, offse
 6303      3C00
 6304              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6305              		.loc 1 747 56 view .LVU2100
 6306 2785 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.326, tmp1421, _12
 6306      CA
 6307              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6308              		.loc 1 747 94 view .LVU2101
GAS LISTING /tmp/cct11Qa0.s 			page 176


 6309 278a C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.330, tmp1422, _18
 6310              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6311              		.loc 1 747 66 view .LVU2102
 6312 278e C535EBDB 		vpor	ymm11, ymm9, ymm3	# vect__46.331, vect__38.326, vect__43.330
 6313              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6314              		.loc 1 747 29 view .LVU2103
 6315 2792 C57E7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm11	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B],
 6315      02
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6316              		.loc 1 746 43 is_stmt 1 view .LVU2104
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6317              		.loc 1 746 11 view .LVU2105
 6318 2797 4883C020 		add	rax, 32	# ivtmp.394,
 6319              	.L664:
 747:sieve_extend.c ****     }
 6320              		.loc 1 747 9 view .LVU2106
 6321              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6322              		.loc 1 747 56 is_stmt 0 view .LVU2107
 6323 279b C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r9+rax]	# tmp1423, MEM[base: vectp.324_307, index: ivtmp.394_731, offse
 6323      2401
 6324              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6325              		.loc 1 747 94 view .LVU2108
 6326 27a1 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR [r8+rax]	# tmp1424, MEM[base: vectp.328_314, index: ivtmp.394_731, offs
 6326      2400
 6327              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6328              		.loc 1 747 56 view .LVU2109
 6329 27a7 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.326, tmp1423, _12
 6329      F2
 6330              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6331              		.loc 1 747 94 view .LVU2110
 6332 27ac C51DF3EA 		vpsllq	ymm13, ymm12, xmm2	# vect__43.330, tmp1424, _18
 6333              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6334              		.loc 1 747 66 view .LVU2111
 6335 27b0 C4414DEB 		vpor	ymm14, ymm6, ymm13	# vect__46.331, vect__38.326, vect__43.330
 6335      F5
 6336              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6337              		.loc 1 747 29 view .LVU2112
 6338 27b5 C57E7F34 		vmovdqu	YMMWORD PTR [rdx+rax], ymm14	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B],
 6338      02
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6339              		.loc 1 746 43 is_stmt 1 view .LVU2113
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6340              		.loc 1 746 11 view .LVU2114
 6341 27ba 4883C020 		add	rax, 32	# ivtmp.394,
 6342 27be 4C39D8   		cmp	rax, r11	# ivtmp.394, _733
 6343 27c1 0F843B01 		je	.L745	#,
 6343      0000
 6344              	.L516:
 747:sieve_extend.c ****     }
GAS LISTING /tmp/cct11Qa0.s 			page 177


 6345              		.loc 1 747 9 discriminator 2 view .LVU2115
 6346              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6347              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU2116
 6348 27c7 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r9+rax]	# tmp1348, MEM[base: vectp.324_307, index: ivtmp.394_731, offs
 6348      3C01
 6349              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6350              		.loc 1 747 94 discriminator 2 view .LVU2117
 6351 27cd C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r8+rax]	# tmp1349, MEM[base: vectp.328_314, index: ivtmp.394_731, offse
 6351      0400
 6352              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6353              		.loc 1 747 56 discriminator 2 view .LVU2118
 6354 27d3 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.326, tmp1348, _12
 6354      CA
 6355              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6356              		.loc 1 747 94 discriminator 2 view .LVU2119
 6357 27d8 C5BDF3C2 		vpsllq	ymm0, ymm8, xmm2	# vect__43.330, tmp1349, _18
 6358              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6359              		.loc 1 747 66 discriminator 2 view .LVU2120
 6360 27dc C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.331, vect__38.326, vect__43.330
 6361              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6362              		.loc 1 747 29 discriminator 2 view .LVU2121
 6363 27e0 C5FE7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm5	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B], 
 6363      02
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6364              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU2122
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6365              		.loc 1 746 11 discriminator 2 view .LVU2123
 747:sieve_extend.c ****     }
 6366              		.loc 1 747 9 discriminator 2 view .LVU2124
 6367              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6368              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU2125
 6369 27e5 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r9+rax]	# tmp1350, MEM[base: vectp.324_307, index: ivtmp.394_731, off
 6369      4C0120
 6370              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6371              		.loc 1 747 94 discriminator 2 view .LVU2126
 6372 27ec C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 32[r8+rax]	# tmp1351, MEM[base: vectp.328_314, index: ivtmp.394_731, off
 6372      7C0020
 6373              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6374              		.loc 1 747 56 discriminator 2 view .LVU2127
 6375 27f3 C44135D3 		vpsrlq	ymm11, ymm9, xmm10	# vect__38.326, tmp1350, _12
 6375      DA
 6376              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6377              		.loc 1 747 94 discriminator 2 view .LVU2128
 6378 27f8 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.330, tmp1351, _18
 6379              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6380              		.loc 1 747 66 discriminator 2 view .LVU2129
GAS LISTING /tmp/cct11Qa0.s 			page 178


 6381 27fc C5A5EBE3 		vpor	ymm4, ymm11, ymm3	# vect__46.331, vect__38.326, vect__43.330
 6382              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6383              		.loc 1 747 29 discriminator 2 view .LVU2130
 6384 2800 C5FE7F64 		vmovdqu	YMMWORD PTR 32[rdx+rax], ymm4	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B]
 6384      0220
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6385              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU2131
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6386              		.loc 1 746 11 discriminator 2 view .LVU2132
 747:sieve_extend.c ****     }
 6387              		.loc 1 747 9 discriminator 2 view .LVU2133
 6388              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6389              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU2134
 6390 2806 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 64[r9+rax]	# tmp1352, MEM[base: vectp.324_307, index: ivtmp.394_731, off
 6390      740140
 6391              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6392              		.loc 1 747 94 discriminator 2 view .LVU2135
 6393 280d C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 64[r8+rax]	# tmp1353, MEM[base: vectp.328_314, index: ivtmp.394_731, of
 6393      6C0040
 6394              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6395              		.loc 1 747 56 discriminator 2 view .LVU2136
 6396 2814 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.326, tmp1352, _12
 6396      E2
 6397              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6398              		.loc 1 747 94 discriminator 2 view .LVU2137
 6399 2819 C515F3F2 		vpsllq	ymm14, ymm13, xmm2	# vect__43.330, tmp1353, _18
 6400              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6401              		.loc 1 747 66 discriminator 2 view .LVU2138
 6402 281d C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__46.331, vect__38.326, vect__43.330
 6402      FE
 6403              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6404              		.loc 1 747 29 discriminator 2 view .LVU2139
 6405 2822 C57E7F7C 		vmovdqu	YMMWORD PTR 64[rdx+rax], ymm15	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B
 6405      0240
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6406              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU2140
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6407              		.loc 1 746 11 discriminator 2 view .LVU2141
 747:sieve_extend.c ****     }
 6408              		.loc 1 747 9 discriminator 2 view .LVU2142
 6409              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6410              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU2143
 6411 2828 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r9+rax]	# tmp1354, MEM[base: vectp.324_307, index: ivtmp.394_731, off
 6411      4C0160
 6412              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6413              		.loc 1 747 94 discriminator 2 view .LVU2144
 6414 282f C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[r8+rax]	# tmp1355, MEM[base: vectp.328_314, index: ivtmp.394_731, off
 6414      440060
GAS LISTING /tmp/cct11Qa0.s 			page 179


 6415              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6416              		.loc 1 747 56 discriminator 2 view .LVU2145
 6417 2836 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.326, tmp1354, _12
 6417      C2
 6418              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6419              		.loc 1 747 94 discriminator 2 view .LVU2146
 6420 283b C5FDF3EA 		vpsllq	ymm5, ymm0, xmm2	# vect__43.330, tmp1355, _18
 6421              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6422              		.loc 1 747 66 discriminator 2 view .LVU2147
 6423 283f C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.331, vect__38.326, vect__43.330
 6424              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6425              		.loc 1 747 29 discriminator 2 view .LVU2148
 6426 2843 C57E7F4C 		vmovdqu	YMMWORD PTR 96[rdx+rax], ymm9	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B]
 6426      0260
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6427              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU2149
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6428              		.loc 1 746 11 discriminator 2 view .LVU2150
 747:sieve_extend.c ****     }
 6429              		.loc 1 747 9 discriminator 2 view .LVU2151
 6430              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6431              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU2152
 6432 2849 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 128[r9+rax]	# tmp1356, MEM[base: vectp.324_307, index: ivtmp.394_731, o
 6432      9C018000 
 6432      0000
 6433              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6434              		.loc 1 747 94 discriminator 2 view .LVU2153
 6435 2853 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[r8+rax]	# tmp1357, MEM[base: vectp.328_314, index: ivtmp.394_731, of
 6435      BC008000 
 6435      0000
 6436              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6437              		.loc 1 747 56 discriminator 2 view .LVU2154
 6438 285d C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.326, tmp1356, _12
 6438      E2
 6439              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6440              		.loc 1 747 94 discriminator 2 view .LVU2155
 6441 2862 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.330, tmp1357, _18
 6442              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6443              		.loc 1 747 66 discriminator 2 view .LVU2156
 6444 2866 C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__46.331, vect__38.326, vect__43.330
 6445              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6446              		.loc 1 747 29 discriminator 2 view .LVU2157
 6447 286a C5FE7FB4 		vmovdqu	YMMWORD PTR 128[rdx+rax], ymm6	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B
 6447      02800000 
 6447      00
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6448              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU2158
GAS LISTING /tmp/cct11Qa0.s 			page 180


 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6449              		.loc 1 746 11 discriminator 2 view .LVU2159
 747:sieve_extend.c ****     }
 6450              		.loc 1 747 9 discriminator 2 view .LVU2160
 6451              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6452              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU2161
 6453 2873 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rax]	# tmp1358, MEM[base: vectp.324_307, index: ivtmp.394_731, o
 6453      A401A000 
 6453      0000
 6454              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6455              		.loc 1 747 94 discriminator 2 view .LVU2162
 6456 287d C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 160[r8+rax]	# tmp1359, MEM[base: vectp.328_314, index: ivtmp.394_731, o
 6456      B400A000 
 6456      0000
 6457              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6458              		.loc 1 747 56 discriminator 2 view .LVU2163
 6459 2887 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.326, tmp1358, _12
 6459      EA
 6460              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6461              		.loc 1 747 94 discriminator 2 view .LVU2164
 6462 288c C50DF3FA 		vpsllq	ymm15, ymm14, xmm2	# vect__43.330, tmp1359, _18
 6463              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6464              		.loc 1 747 66 discriminator 2 view .LVU2165
 6465 2890 C4C115EB 		vpor	ymm1, ymm13, ymm15	# vect__46.331, vect__38.326, vect__43.330
 6465      CF
 6466              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6467              		.loc 1 747 29 discriminator 2 view .LVU2166
 6468 2895 C5FE7F8C 		vmovdqu	YMMWORD PTR 160[rdx+rax], ymm1	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0B
 6468      02A00000 
 6468      00
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6469              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU2167
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6470              		.loc 1 746 11 discriminator 2 view .LVU2168
 747:sieve_extend.c ****     }
 6471              		.loc 1 747 9 discriminator 2 view .LVU2169
 6472              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6473              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU2170
 6474 289e C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r9+rax]	# tmp1360, MEM[base: vectp.324_307, index: ivtmp.394_731, of
 6474      8401C000 
 6474      0000
 6475              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6476              		.loc 1 747 94 discriminator 2 view .LVU2171
 6477 28a8 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[r8+rax]	# tmp1361, MEM[base: vectp.328_314, index: ivtmp.394_731, of
 6477      AC00C000 
 6477      0000
 6478              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6479              		.loc 1 747 56 discriminator 2 view .LVU2172
GAS LISTING /tmp/cct11Qa0.s 			page 181


 6480 28b2 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.326, tmp1360, _12
 6480      C2
 6481              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6482              		.loc 1 747 94 discriminator 2 view .LVU2173
 6483 28b7 C555F3CA 		vpsllq	ymm9, ymm5, xmm2	# vect__43.330, tmp1361, _18
 6484              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6485              		.loc 1 747 66 discriminator 2 view .LVU2174
 6486 28bb C4417DEB 		vpor	ymm11, ymm0, ymm9	# vect__46.331, vect__38.326, vect__43.330
 6486      D9
 6487              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6488              		.loc 1 747 29 discriminator 2 view .LVU2175
 6489 28c0 C57E7F9C 		vmovdqu	YMMWORD PTR 192[rdx+rax], ymm11	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0
 6489      02C00000 
 6489      00
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6490              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU2176
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6491              		.loc 1 746 11 discriminator 2 view .LVU2177
 747:sieve_extend.c ****     }
 6492              		.loc 1 747 9 discriminator 2 view .LVU2178
 6493              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6494              		.loc 1 747 56 is_stmt 0 discriminator 2 view .LVU2179
 6495 28c9 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 224[r9+rax]	# tmp1362, MEM[base: vectp.324_307, index: ivtmp.394_731, of
 6495      A401E000 
 6495      0000
 6496              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6497              		.loc 1 747 94 discriminator 2 view .LVU2180
 6498 28d3 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rax]	# tmp1363, MEM[base: vectp.328_314, index: ivtmp.394_731, of
 6498      BC00E000 
 6498      0000
 6499              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6500              		.loc 1 747 56 discriminator 2 view .LVU2181
 6501 28dd C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.326, tmp1362, _12
 6501      F2
 6502              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6503              		.loc 1 747 94 discriminator 2 view .LVU2182
 6504 28e2 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.330, tmp1363, _18
 6505              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6506              		.loc 1 747 66 discriminator 2 view .LVU2183
 6507 28e6 C54DEBE3 		vpor	ymm12, ymm6, ymm3	# vect__46.331, vect__38.326, vect__43.330
 6508              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6509              		.loc 1 747 29 discriminator 2 view .LVU2184
 6510 28ea C57E7FA4 		vmovdqu	YMMWORD PTR 224[rdx+rax], ymm12	# MEM[base: vectp.333_323, index: ivtmp.394_731, offset: 0
 6510      02E00000 
 6510      00
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6511              		.loc 1 746 43 is_stmt 1 discriminator 2 view .LVU2185
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/cct11Qa0.s 			page 182


 6512              		.loc 1 746 11 discriminator 2 view .LVU2186
 6513 28f3 48050001 		add	rax, 256	# ivtmp.394,
 6513      0000
 6514 28f9 4C39D8   		cmp	rax, r11	# ivtmp.394, _733
 6515 28fc 0F85C5FE 		jne	.L516	#,
 6515      FFFF
 6516              	.L745:
 6517 2902 4989FE   		mov	r14, rdi	# niters_vector_mult_vf.320, niters.318
 6518 2905 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.320,
 6519 2909 4C01F1   		add	rcx, r14	# tmp.321, niters_vector_mult_vf.320
 6520 290c 4C01F6   		add	rsi, r14	# tmp.322, niters_vector_mult_vf.320
 6521 290f 4C39F7   		cmp	rdi, r14	# niters.318, niters_vector_mult_vf.320
 6522 2912 7461     		je	.L519	#,
 6523              	.LVL318:
 747:sieve_extend.c ****     }
 6524              		.loc 1 747 9 view .LVU2187
 6525              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6526              		.loc 1 746 5 is_stmt 0 view .LVU2188
 6527 2914 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 6527      40
 6528              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6529              		.loc 1 746 52 view .LVU2189
 6530 2919 488D5601 		lea	rdx, 1[rsi]	# copy_word,
 6531              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6532              		.loc 1 747 94 view .LVU2190
 6533 291d C46281F7 		shlx	r9, QWORD PTR 8[rbx+rcx*8], r15	# tmp734, *_133, shift_flipped
 6533      4CCB08
 6534              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6535              		.loc 1 747 56 view .LVU2191
 6536 2924 C46293F7 		shrx	r8, QWORD PTR [rbx+rcx*8], r13	# tmp736, *_82, shift
 6536      04CB
 6537              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6538              		.loc 1 747 66 view .LVU2192
 6539 292a 4D09C1   		or	r9, r8	# tmp738, tmp736
 6540              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6541              		.loc 1 747 77 view .LVU2193
 6542 292d 488D7901 		lea	rdi, 1[rcx]	# _301,
 6543              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6544              		.loc 1 747 66 view .LVU2194
 6545 2931 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_55, tmp738
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6546              		.loc 1 746 43 is_stmt 1 view .LVU2195
 6547              	.LVL319:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6548              		.loc 1 746 11 view .LVU2196
 6549              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6550              		.loc 1 746 5 is_stmt 0 view .LVU2197
 6551 2935 4939D3   		cmp	r11, rdx	# aligned_copy_word, copy_word
 6552 2938 723B     		jb	.L519	#,
GAS LISTING /tmp/cct11Qa0.s 			page 183


 747:sieve_extend.c ****     }
 6553              		.loc 1 747 9 is_stmt 1 view .LVU2198
 6554              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6555              		.loc 1 746 52 is_stmt 0 view .LVU2199
 6556 293a 4883C602 		add	rsi, 2	# copy_word,
 6557              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6558              		.loc 1 747 94 view .LVU2200
 6559 293e C46281F7 		shlx	r12, QWORD PTR 8[rbx+rdi*8], r15	# tmp739, *_555, shift_flipped
 6559      64FB08
 6560              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6561              		.loc 1 747 56 view .LVU2201
 6562 2945 488B04FB 		mov	rax, QWORD PTR [rbx+rdi*8]	# *_122, *_122
 6563              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6564              		.loc 1 747 77 view .LVU2202
 6565 2949 4883C102 		add	rcx, 2	# _78,
 6566              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6567              		.loc 1 747 56 view .LVU2203
 6568 294d C46293F7 		shrx	r14, rax, r13	# tmp741, *_122, shift
 6568      F0
 6569              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6570              		.loc 1 747 66 view .LVU2204
 6571 2952 4D09F4   		or	r12, r14	# tmp743, tmp741
 6572 2955 4C8924D3 		mov	QWORD PTR [rbx+rdx*8], r12	# *_559, tmp743
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6573              		.loc 1 746 43 is_stmt 1 view .LVU2205
 6574              	.LVL320:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6575              		.loc 1 746 11 view .LVU2206
 6576              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6577              		.loc 1 746 5 is_stmt 0 view .LVU2207
 6578 2959 4939F3   		cmp	r11, rsi	# aligned_copy_word, copy_word
 6579 295c 7217     		jb	.L519	#,
 747:sieve_extend.c ****     }
 6580              		.loc 1 747 9 is_stmt 1 view .LVU2208
 6581              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6582              		.loc 1 747 94 is_stmt 0 view .LVU2209
 6583 295e C46281F7 		shlx	r15, QWORD PTR 8[rbx+rcx*8], r15	# tmp744, *_293, shift_flipped
 6583      7CCB08
 6584              	.LVL321:
 6585              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6586              		.loc 1 747 56 view .LVU2210
 6587 2965 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_288, *_288
 6588              	.LVL322:
 747:sieve_extend.c ****     }
 6589              		.loc 1 747 56 view .LVU2211
 6590 2969 C46293F7 		shrx	r13, rcx, r13	# tmp746, *_288, shift
 6590      E9
 6591              	.LVL323:
GAS LISTING /tmp/cct11Qa0.s 			page 184


 6592              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 6593              		.loc 1 747 66 view .LVU2212
 6594 296e 4D09EF   		or	r15, r13	# tmp748, tmp746
 6595 2971 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_297, tmp748
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6596              		.loc 1 746 43 is_stmt 1 view .LVU2213
 6597              	.LVL324:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6598              		.loc 1 746 11 view .LVU2214
 6599              	.L519:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6600              		.loc 1 746 11 is_stmt 0 view .LVU2215
 6601 2975 4C89D0   		mov	rax, r10	# ivtmp.378, ivtmp.378
 6602              	.L512:
 750:sieve_extend.c **** 
 6603              		.loc 1 750 5 is_stmt 1 view .LVU2216
 6604              	# sieve_extend.c:750:     if (copy_word >= destination_stop_word) return;
 750:sieve_extend.c **** 
 6605              		.loc 1 750 8 is_stmt 0 view .LVU2217
 6606 2978 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 6606      50
 6607 297d 4939C0   		cmp	r8, rax	# destination_stop_word, ivtmp.378
 6608 2980 0F86B304 		jbe	.L767	#,
 6608      0000
 752:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 6609              		.loc 1 752 5 is_stmt 1 view .LVU2218
 6610              	# sieve_extend.c:752:     source_word = copy_word - size; // recalibrate
 752:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 6611              		.loc 1 752 17 is_stmt 0 view .LVU2219
 6612 2986 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# size, %sfp
 6612      18
 6613 298b 4989C5   		mov	r13, rax	# source_word, ivtmp.378
 6614              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6615              		.loc 1 756 21 view .LVU2220
 6616 298e 488D0C06 		lea	rcx, [rsi+rax]	# ivtmp.378,
 6617              	# sieve_extend.c:752:     source_word = copy_word - size; // recalibrate
 752:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 6618              		.loc 1 752 17 view .LVU2221
 6619 2992 4929F5   		sub	r13, rsi	# source_word, size
 6620              	.LVL325:
 753:sieve_extend.c **** 
 6621              		.loc 1 753 5 is_stmt 1 view .LVU2222
 6622              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6623              		.loc 1 756 5 is_stmt 0 view .LVU2223
 6624 2995 4939C8   		cmp	r8, rcx	# destination_stop_word, ivtmp.378
 6625              	# sieve_extend.c:753:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 753:sieve_extend.c **** 
 6626              		.loc 1 753 18 view .LVU2224
 6627 2998 4C8D34F5 		lea	r14, 0[0+rsi*8]	# memsize,
 6627      00000000 
 6628              	.LVL326:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6629              		.loc 1 756 5 is_stmt 1 view .LVU2225
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
GAS LISTING /tmp/cct11Qa0.s 			page 185


 6630              		.loc 1 756 11 view .LVU2226
 6631              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6632              		.loc 1 756 5 is_stmt 0 view .LVU2227
 6633 29a0 0F825F01 		jb	.L521	#,
 6633      0000
 6634 29a6 4C8D24C3 		lea	r12, [rbx+rax*8]	# tmp761,
 6635 29aa 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp762,
 6635      00000000 
 6636              	# sieve_extend.c:757:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 757:sieve_extend.c **** 
 6637              		.loc 1 757 38 view .LVU2228
 6638 29b2 4E8D3CEB 		lea	r15, [rbx+r13*8]	# _48,
 6639 29b6 4929C4   		sub	r12, rax	# _711, tmp762
 6640 29b9 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, source_word
 6640      48
 6641 29be 4989F5   		mov	r13, rsi	# size, size
 6642              	.LVL327:
 757:sieve_extend.c **** 
 6643              		.loc 1 757 38 view .LVU2229
 6644 29c1 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 6644      40
 6645              	.LVL328:
 757:sieve_extend.c **** 
 6646              		.loc 1 757 38 view .LVU2230
 6647 29c6 4C89C3   		mov	rbx, r8	# destination_stop_word, destination_stop_word
 6648              	.LVL329:
 757:sieve_extend.c **** 
 6649              		.loc 1 757 38 view .LVU2231
 6650 29c9 C5F877   		vzeroupper
 6651              	.L522:
 757:sieve_extend.c **** 
 6652              		.loc 1 757 9 is_stmt 1 discriminator 2 view .LVU2232
 6653              	.LVL330:
 6654              	.LBB326:
 6655              	.LBI326:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6656              		.loc 2 31 1 discriminator 2 view .LVU2233
 6657              	.LBB327:
 6658              		.loc 2 34 3 discriminator 2 view .LVU2234
 6659              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6660              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2235
 6661 29cc 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp764,
 6662 29d0 4C89F2   		mov	rdx, r14	#, memsize
 6663 29d3 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.378
 6663      58
 6664 29d8 4C89FE   		mov	rsi, r15	#, _48
 6665 29db E8000000 		call	memcpy@PLT	#
 6665      00
 6666              	.LVL331:
 6667              		.loc 2 34 10 discriminator 2 view .LVU2236
 6668              	.LBE327:
 6669              	.LBE326:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6670              		.loc 1 756 54 is_stmt 1 discriminator 2 view .LVU2237
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6671              		.loc 1 756 11 discriminator 2 view .LVU2238
GAS LISTING /tmp/cct11Qa0.s 			page 186


 6672 29e0 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.378, %sfp
 6672      58
 6673 29e5 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.378,
 6674              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6675              		.loc 1 756 5 is_stmt 0 discriminator 2 view .LVU2239
 6676 29e9 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.378
 6677 29ec 0F82FE00 		jb	.L757	#,
 6677      0000
 757:sieve_extend.c **** 
 6678              		.loc 1 757 9 is_stmt 1 view .LVU2240
 6679              	.LVL332:
 6680              	.LBB335:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6681              		.loc 2 31 1 view .LVU2241
 6682              	.LBB328:
 6683              		.loc 2 34 3 view .LVU2242
 6684              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6685              		.loc 2 34 10 is_stmt 0 view .LVU2243
 6686 29f2 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp1070,
 6687 29f6 4C89F2   		mov	rdx, r14	#, memsize
 6688 29f9 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.378
 6688      58
 6689              	.LVL333:
 6690              		.loc 2 34 10 view .LVU2244
 6691 29fe 4C89FE   		mov	rsi, r15	#, _48
 6692 2a01 E8000000 		call	memcpy@PLT	#
 6692      00
 6693              	.LVL334:
 6694              		.loc 2 34 10 view .LVU2245
 6695              	.LBE328:
 6696              	.LBE335:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6697              		.loc 1 756 54 is_stmt 1 view .LVU2246
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6698              		.loc 1 756 11 view .LVU2247
 6699 2a06 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.378, %sfp
 6699      58
 6700 2a0b 4E8D0C28 		lea	r9, [rax+r13]	# ivtmp.378,
 6701              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6702              		.loc 1 756 5 is_stmt 0 view .LVU2248
 6703 2a0f 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.378
 6704 2a12 0F82D800 		jb	.L757	#,
 6704      0000
 757:sieve_extend.c **** 
 6705              		.loc 1 757 9 is_stmt 1 view .LVU2249
 6706              	.LVL335:
 6707              	.LBB336:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6708              		.loc 2 31 1 view .LVU2250
 6709              	.LBB329:
 6710              		.loc 2 34 3 view .LVU2251
 6711              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6712              		.loc 2 34 10 is_stmt 0 view .LVU2252
 6713 2a18 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp1073,
 6714 2a1c 4C89F2   		mov	rdx, r14	#, memsize
GAS LISTING /tmp/cct11Qa0.s 			page 187


 6715 2a1f 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, ivtmp.378
 6715      58
 6716 2a24 4C89FE   		mov	rsi, r15	#, _48
 6717 2a27 E8000000 		call	memcpy@PLT	#
 6717      00
 6718              	.LVL336:
 6719              		.loc 2 34 10 view .LVU2253
 6720              	.LBE329:
 6721              	.LBE336:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6722              		.loc 1 756 54 is_stmt 1 view .LVU2254
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6723              		.loc 1 756 11 view .LVU2255
 6724 2a2c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.378, %sfp
 6724      58
 6725 2a31 4E8D1C28 		lea	r11, [rax+r13]	# ivtmp.378,
 6726              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6727              		.loc 1 756 5 is_stmt 0 view .LVU2256
 6728 2a35 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.378
 6729 2a38 0F82B200 		jb	.L757	#,
 6729      0000
 757:sieve_extend.c **** 
 6730              		.loc 1 757 9 is_stmt 1 view .LVU2257
 6731              	.LVL337:
 6732              	.LBB337:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6733              		.loc 2 31 1 view .LVU2258
 6734              	.LBB330:
 6735              		.loc 2 34 3 view .LVU2259
 6736              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6737              		.loc 2 34 10 is_stmt 0 view .LVU2260
 6738 2a3e 4C89F2   		mov	rdx, r14	#, memsize
 6739 2a41 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp1076,
 6740 2a45 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, ivtmp.378
 6740      58
 6741 2a4a 4C89FE   		mov	rsi, r15	#, _48
 6742 2a4d E8000000 		call	memcpy@PLT	#
 6742      00
 6743              	.LVL338:
 6744              		.loc 2 34 10 view .LVU2261
 6745              	.LBE330:
 6746              	.LBE337:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6747              		.loc 1 756 54 is_stmt 1 view .LVU2262
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6748              		.loc 1 756 11 view .LVU2263
 6749 2a52 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.378, %sfp
 6749      58
 6750 2a57 4A8D1428 		lea	rdx, [rax+r13]	# ivtmp.378,
 6751              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6752              		.loc 1 756 5 is_stmt 0 view .LVU2264
 6753 2a5b 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.378
 6754 2a5e 0F828C00 		jb	.L757	#,
 6754      0000
 757:sieve_extend.c **** 
GAS LISTING /tmp/cct11Qa0.s 			page 188


 6755              		.loc 1 757 9 is_stmt 1 view .LVU2265
 6756              	.LVL339:
 6757              	.LBB338:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6758              		.loc 2 31 1 view .LVU2266
 6759              	.LBB331:
 6760              		.loc 2 34 3 view .LVU2267
 6761              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6762              		.loc 2 34 10 is_stmt 0 view .LVU2268
 6763 2a64 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp1079,
 6764 2a68 4C89FE   		mov	rsi, r15	#, _48
 6765 2a6b 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, ivtmp.378
 6765      58
 6766 2a70 4C89F2   		mov	rdx, r14	#, memsize
 6767 2a73 E8000000 		call	memcpy@PLT	#
 6767      00
 6768              	.LVL340:
 6769              		.loc 2 34 10 view .LVU2269
 6770              	.LBE331:
 6771              	.LBE338:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6772              		.loc 1 756 54 is_stmt 1 view .LVU2270
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6773              		.loc 1 756 11 view .LVU2271
 6774 2a78 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.378, %sfp
 6774      58
 6775 2a7d 4E8D1428 		lea	r10, [rax+r13]	# ivtmp.378,
 6776              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6777              		.loc 1 756 5 is_stmt 0 view .LVU2272
 6778 2a81 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.378
 6779 2a84 726A     		jb	.L757	#,
 757:sieve_extend.c **** 
 6780              		.loc 1 757 9 is_stmt 1 view .LVU2273
 6781              	.LVL341:
 6782              	.LBB339:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6783              		.loc 2 31 1 view .LVU2274
 6784              	.LBB332:
 6785              		.loc 2 34 3 view .LVU2275
 6786              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6787              		.loc 2 34 10 is_stmt 0 view .LVU2276
 6788 2a86 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp1082,
 6789 2a8a 4C89F2   		mov	rdx, r14	#, memsize
 6790 2a8d 4C895424 		mov	QWORD PTR 88[rsp], r10	# %sfp, ivtmp.378
 6790      58
 6791 2a92 4C89FE   		mov	rsi, r15	#, _48
 6792 2a95 E8000000 		call	memcpy@PLT	#
 6792      00
 6793              	.LVL342:
 6794              		.loc 2 34 10 view .LVU2277
 6795              	.LBE332:
 6796              	.LBE339:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6797              		.loc 1 756 54 is_stmt 1 view .LVU2278
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6798              		.loc 1 756 11 view .LVU2279
GAS LISTING /tmp/cct11Qa0.s 			page 189


 6799 2a9a 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.378, %sfp
 6799      58
 6800 2a9f 4E8D0428 		lea	r8, [rax+r13]	# ivtmp.378,
 6801              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6802              		.loc 1 756 5 is_stmt 0 view .LVU2280
 6803 2aa3 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.378
 6804 2aa6 7248     		jb	.L757	#,
 757:sieve_extend.c **** 
 6805              		.loc 1 757 9 is_stmt 1 view .LVU2281
 6806              	.LVL343:
 6807              	.LBB340:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6808              		.loc 2 31 1 view .LVU2282
 6809              	.LBB333:
 6810              		.loc 2 34 3 view .LVU2283
 6811              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6812              		.loc 2 34 10 is_stmt 0 view .LVU2284
 6813 2aa8 4C89FE   		mov	rsi, r15	#, _48
 6814 2aab 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp1085,
 6815 2aaf 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, ivtmp.378
 6815      58
 6816 2ab4 4C89F2   		mov	rdx, r14	#, memsize
 6817 2ab7 E8000000 		call	memcpy@PLT	#
 6817      00
 6818              	.LVL344:
 6819              		.loc 2 34 10 view .LVU2285
 6820              	.LBE333:
 6821              	.LBE340:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6822              		.loc 1 756 54 is_stmt 1 view .LVU2286
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6823              		.loc 1 756 11 view .LVU2287
 6824 2abc 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.378, %sfp
 6824      58
 6825 2ac1 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.378,
 6826              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6827              		.loc 1 756 5 is_stmt 0 view .LVU2288
 6828 2ac5 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.378
 6829 2ac8 7226     		jb	.L757	#,
 757:sieve_extend.c **** 
 6830              		.loc 1 757 9 is_stmt 1 view .LVU2289
 6831              	.LVL345:
 6832              	.LBB341:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6833              		.loc 2 31 1 view .LVU2290
 6834              	.LBB334:
 6835              		.loc 2 34 3 view .LVU2291
 6836              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 6837              		.loc 2 34 10 is_stmt 0 view .LVU2292
 6838 2aca 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp1088,
 6839 2ace 4C89F2   		mov	rdx, r14	#, memsize
 6840 2ad1 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, ivtmp.378
 6840      58
 6841 2ad6 4C89FE   		mov	rsi, r15	#, _48
 6842 2ad9 E8000000 		call	memcpy@PLT	#
GAS LISTING /tmp/cct11Qa0.s 			page 190


 6842      00
 6843              	.LVL346:
 6844              		.loc 2 34 10 view .LVU2293
 6845              	.LBE334:
 6846              	.LBE341:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6847              		.loc 1 756 54 is_stmt 1 view .LVU2294
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6848              		.loc 1 756 11 view .LVU2295
 6849 2ade 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.378, %sfp
 6849      58
 6850              	.LVL347:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6851              		.loc 1 756 11 is_stmt 0 view .LVU2296
 6852 2ae3 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.378,
 6853              	.LVL348:
 6854              	# sieve_extend.c:756:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6855              		.loc 1 756 5 view .LVU2297
 6856 2ae7 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.378
 6857 2aea 0F83DCFE 		jnb	.L522	#,
 6857      FFFF
 6858              	.LVL349:
 6859              		.p2align 4
 6860              		.p2align 3
 6861              	.L757:
 756:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 6862              		.loc 1 756 5 view .LVU2298
 6863 2af0 4C8B6C24 		mov	r13, QWORD PTR 72[rsp]	# source_word, %sfp
 6863      48
 6864              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6865              		.loc 1 760 5 view .LVU2299
 6866 2af5 48394424 		cmp	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.378
 6866      50
 6867 2afa 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 6867      40
 6868              	.LVL350:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6869              		.loc 1 760 11 is_stmt 1 view .LVU2300
 6870              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6871              		.loc 1 760 5 is_stmt 0 view .LVU2301
 6872 2aff 0F826E02 		jb	.L768	#,
 6872      0000
 6873              	.LVL351:
 6874              	.L521:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6875              		.loc 1 760 5 view .LVU2302
 6876 2b05 4C8D3CC5 		lea	r15, 0[0+rax*8]	# _195,
 6876      00000000 
 6877 2b0d 4E8D24ED 		lea	r12, 0[0+r13*8]	# _187,
 6877      00000000 
 6878 2b15 498D7F20 		lea	rdi, 32[r15]	# tmp771,
 6879 2b19 4E8D34ED 		lea	r14, 32[0+r13*8]	# _197,
 6879      20000000 
 6880              	.LVL352:
GAS LISTING /tmp/cct11Qa0.s 			page 191


 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6881              		.loc 1 760 5 view .LVU2303
 6882 2b21 4939FC   		cmp	r12, rdi	# _187, tmp771
 6883 2b24 410F9DC1 		setge	r9b	#, tmp773
 6884 2b28 4D39F7   		cmp	r15, r14	# _195, _197
 6885 2b2b 410F9DC3 		setge	r11b	#, tmp775
 6886 2b2f 4508D9   		or	r9b, r11b	# tmp773, tmp775
 6887 2b32 0F845002 		je	.L524	#,
 6887      0000
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6888              		.loc 1 760 5 view .LVU2304
 6889 2b38 488B5424 		mov	rdx, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 6889      50
 6890 2b3d 4989D2   		mov	r10, rdx	# tmp777, destination_stop_word
 6891 2b40 4929C2   		sub	r10, rax	# tmp777, ivtmp.378
 6892 2b43 4983FA05 		cmp	r10, 5	# tmp777,
 6893 2b47 0F863B02 		jbe	.L524	#,
 6893      0000
 6894 2b4d 4901DC   		add	r12, rbx	# vectp.303, bitarray
 6895 2b50 4C8D4201 		lea	r8, 1[rdx]	# _75,
 6896 2b54 49C1EC03 		shr	r12, 3	# tmp781,
 6897 2b58 49F7DC   		neg	r12	# tmp782
 6898 2b5b 4183E403 		and	r12d, 3	# prolog_loop_niters.304,
 6899 2b5f 0F842B07 		je	.L533	#,
 6899      0000
 761:sieve_extend.c **** 
 6900              		.loc 1 761 9 is_stmt 1 view .LVU2305
 6901              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6902              		.loc 1 761 39 is_stmt 0 view .LVU2306
 6903 2b65 4A8B0CEB 		mov	rcx, QWORD PTR [rbx+r13*8]	# _114, *_111
 6904 2b69 4983FC01 		cmp	r12, 1	# prolog_loop_niters.304,
 6905              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6906              		.loc 1 760 57 view .LVU2307
 6907 2b6d 488D7001 		lea	rsi, 1[rax]	# copy_word,
 6908              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6909              		.loc 1 760 71 view .LVU2308
 6910 2b71 4D8D7501 		lea	r14, 1[r13]	# source_word,
 6911              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6912              		.loc 1 761 29 view .LVU2309
 6913 2b75 4A890C3B 		mov	QWORD PTR [rbx+r15], rcx	# *_113, _114
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6914              		.loc 1 760 48 is_stmt 1 view .LVU2310
 6915              	.LVL353:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6916              		.loc 1 760 11 view .LVU2311
 6917 2b79 7426     		je	.L525	#,
 761:sieve_extend.c **** 
 6918              		.loc 1 761 9 view .LVU2312
 6919              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6920              		.loc 1 761 39 is_stmt 0 view .LVU2313
 6921 2b7b 4E8B3CF3 		mov	r15, QWORD PTR [rbx+r14*8]	# _38, *_35
 6922 2b7f 4983FC03 		cmp	r12, 3	# prolog_loop_niters.304,
GAS LISTING /tmp/cct11Qa0.s 			page 192


 6923              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6924              		.loc 1 760 71 view .LVU2314
 6925 2b83 4D8D7502 		lea	r14, 2[r13]	# source_word,
 6926              	.LVL354:
 6927              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6928              		.loc 1 761 29 view .LVU2315
 6929 2b87 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_37, _38
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6930              		.loc 1 760 48 is_stmt 1 view .LVU2316
 6931              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6932              		.loc 1 760 57 is_stmt 0 view .LVU2317
 6933 2b8b 488D7002 		lea	rsi, 2[rax]	# copy_word,
 6934              	.LVL355:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6935              		.loc 1 760 11 is_stmt 1 view .LVU2318
 6936 2b8f 7510     		jne	.L525	#,
 761:sieve_extend.c **** 
 6937              		.loc 1 761 9 view .LVU2319
 6938              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6939              		.loc 1 761 39 is_stmt 0 view .LVU2320
 6940 2b91 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# _150, *_153
 6941              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6942              		.loc 1 760 71 view .LVU2321
 6943 2b95 4D8D7503 		lea	r14, 3[r13]	# source_word,
 6944              	.LVL356:
 6945              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6946              		.loc 1 761 29 view .LVU2322
 6947 2b99 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_151, _150
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6948              		.loc 1 760 48 is_stmt 1 view .LVU2323
 6949              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6950              		.loc 1 760 57 is_stmt 0 view .LVU2324
 6951 2b9d 488D7003 		lea	rsi, 3[rax]	# copy_word,
 6952              	.LVL357:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6953              		.loc 1 760 11 is_stmt 1 view .LVU2325
 6954              	.L525:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6955              		.loc 1 760 11 is_stmt 0 view .LVU2326
 6956 2ba1 4D29E0   		sub	r8, r12	# tmp783, prolog_loop_niters.304
 6957 2ba4 4D01E5   		add	r13, r12	# tmp784, prolog_loop_niters.304
 6958 2ba7 4929C0   		sub	r8, rax	# niters.305, ivtmp.378
 6959 2baa 4C01E0   		add	rax, r12	# tmp786, prolog_loop_niters.304
 6960 2bad 4D89C1   		mov	r9, r8	# bnd.306, niters.305
 6961 2bb0 4C8D24C3 		lea	r12, [rbx+rax*8]	# vectp.314,
 6962 2bb4 49C1E902 		shr	r9, 2	# bnd.306,
 6963              	# sieve_extend.c:752:     source_word = copy_word - size; // recalibrate
 752:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 6964              		.loc 1 752 17 view .LVU2327
 6965 2bb8 31C0     		xor	eax, eax	# ivtmp.369
GAS LISTING /tmp/cct11Qa0.s 			page 193


 6966 2bba 49C1E105 		sal	r9, 5	# _704,
 6967 2bbe 4E8D2CEB 		lea	r13, [rbx+r13*8]	# vectp.311,
 6968 2bc2 4D8D59E0 		lea	r11, -32[r9]	# tmp806,
 6969 2bc6 49C1EB05 		shr	r11, 5	# tmp804,
 6970 2bca 4983C301 		add	r11, 1	# tmp807,
 6971 2bce 4183E307 		and	r11d, 7	# tmp808,
 6972 2bd2 0F84A800 		je	.L527	#,
 6972      0000
 6973 2bd8 4983FB01 		cmp	r11, 1	# tmp808,
 6974 2bdc 0F848400 		je	.L677	#,
 6974      0000
 6975 2be2 4983FB02 		cmp	r11, 2	# tmp808,
 6976 2be6 746D     		je	.L678	#,
 6977 2be8 4983FB03 		cmp	r11, 3	# tmp808,
 6978 2bec 7456     		je	.L679	#,
 6979 2bee 4983FB04 		cmp	r11, 4	# tmp808,
 6980 2bf2 743F     		je	.L680	#,
 6981 2bf4 4983FB05 		cmp	r11, 5	# tmp808,
 6982 2bf8 7428     		je	.L681	#,
 6983 2bfa 4983FB06 		cmp	r11, 6	# tmp808,
 6984 2bfe 7411     		je	.L682	#,
 6985              	.LVL358:
 761:sieve_extend.c **** 
 6986              		.loc 1 761 9 is_stmt 1 view .LVU2328
 6987              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6988              		.loc 1 761 29 is_stmt 0 view .LVU2329
 6989 2c00 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR 0[r13]	# tmp1397, MEM[base: vectp.311_189, index: ivtmp.369_702, offset
 6989      5500
 6990 2c06 B8200000 		mov	eax, 32	# ivtmp.369,
 6990      00
 6991 2c0b C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm10	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B], tmp
 6991      1424
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6992              		.loc 1 760 48 is_stmt 1 view .LVU2330
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6993              		.loc 1 760 11 view .LVU2331
 6994              	.L682:
 761:sieve_extend.c **** 
 6995              		.loc 1 761 9 view .LVU2332
 6996              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 6997              		.loc 1 761 29 is_stmt 0 view .LVU2333
 6998 2c11 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 0[r13+rax]	# tmp1398, MEM[base: vectp.311_189, index: ivtmp.369_702, off
 6998      540500
 6999 2c18 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm2	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B], 
 6999      1404
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7000              		.loc 1 760 48 is_stmt 1 view .LVU2334
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7001              		.loc 1 760 11 view .LVU2335
 7002 2c1e 4883C020 		add	rax, 32	# ivtmp.369,
 7003              	.L681:
 761:sieve_extend.c **** 
 7004              		.loc 1 761 9 view .LVU2336
 7005              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
GAS LISTING /tmp/cct11Qa0.s 			page 194


 7006              		.loc 1 761 29 is_stmt 0 view .LVU2337
 7007 2c22 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 0[r13+rax]	# tmp1399, MEM[base: vectp.311_189, index: ivtmp.369_702, of
 7007      6C0500
 7008 2c29 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm13	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B],
 7008      2C04
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7009              		.loc 1 760 48 is_stmt 1 view .LVU2338
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7010              		.loc 1 760 11 view .LVU2339
 7011 2c2f 4883C020 		add	rax, 32	# ivtmp.369,
 7012              	.L680:
 761:sieve_extend.c **** 
 7013              		.loc 1 761 9 view .LVU2340
 7014              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7015              		.loc 1 761 29 is_stmt 0 view .LVU2341
 7016 2c33 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR 0[r13+rax]	# tmp1400, MEM[base: vectp.311_189, index: ivtmp.369_702, of
 7016      740500
 7017 2c3a C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm14	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B],
 7017      3404
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7018              		.loc 1 760 48 is_stmt 1 view .LVU2342
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7019              		.loc 1 760 11 view .LVU2343
 7020 2c40 4883C020 		add	rax, 32	# ivtmp.369,
 7021              	.L679:
 761:sieve_extend.c **** 
 7022              		.loc 1 761 9 view .LVU2344
 7023              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7024              		.loc 1 761 29 is_stmt 0 view .LVU2345
 7025 2c44 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 0[r13+rax]	# tmp1401, MEM[base: vectp.311_189, index: ivtmp.369_702, of
 7025      7C0500
 7026 2c4b C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm15	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B],
 7026      3C04
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7027              		.loc 1 760 48 is_stmt 1 view .LVU2346
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7028              		.loc 1 760 11 view .LVU2347
 7029 2c51 4883C020 		add	rax, 32	# ivtmp.369,
 7030              	.L678:
 761:sieve_extend.c **** 
 7031              		.loc 1 761 9 view .LVU2348
 7032              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7033              		.loc 1 761 29 is_stmt 0 view .LVU2349
 7034 2c55 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 0[r13+rax]	# tmp1402, MEM[base: vectp.311_189, index: ivtmp.369_702, off
 7034      4C0500
 7035 2c5c C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm1	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B], 
 7035      0C04
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7036              		.loc 1 760 48 is_stmt 1 view .LVU2350
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7037              		.loc 1 760 11 view .LVU2351
 7038 2c62 4883C020 		add	rax, 32	# ivtmp.369,
 7039              	.L677:
 761:sieve_extend.c **** 
GAS LISTING /tmp/cct11Qa0.s 			page 195


 7040              		.loc 1 761 9 view .LVU2352
 7041              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7042              		.loc 1 761 29 is_stmt 0 view .LVU2353
 7043 2c66 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 0[r13+rax]	# tmp1403, MEM[base: vectp.311_189, index: ivtmp.369_702, off
 7043      440500
 7044 2c6d C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm8	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B], 
 7044      0404
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7045              		.loc 1 760 48 is_stmt 1 view .LVU2354
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7046              		.loc 1 760 11 view .LVU2355
 7047 2c73 4883C020 		add	rax, 32	# ivtmp.369,
 7048 2c77 4C39C8   		cmp	rax, r9	# ivtmp.369, _704
 7049 2c7a 0F849600 		je	.L742	#,
 7049      0000
 7050              	.L527:
 761:sieve_extend.c **** 
 7051              		.loc 1 761 9 discriminator 2 view .LVU2356
 7052              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7053              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2357
 7054 2c80 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR 0[r13+rax]	# tmp1384, MEM[base: vectp.311_189, index: ivtmp.369_702, off
 7054      440500
 7055 2c87 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm0	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B], 
 7055      0404
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7056              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2358
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7057              		.loc 1 760 11 discriminator 2 view .LVU2359
 761:sieve_extend.c **** 
 7058              		.loc 1 761 9 discriminator 2 view .LVU2360
 7059              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7060              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2361
 7061 2c8d C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r13+rax]	# tmp1385, MEM[base: vectp.311_189, index: ivtmp.369_702, of
 7061      6C0520
 7062 2c94 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r12+rax], ymm5	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B]
 7062      6C0420
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7063              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2362
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7064              		.loc 1 760 11 discriminator 2 view .LVU2363
 761:sieve_extend.c **** 
 7065              		.loc 1 761 9 discriminator 2 view .LVU2364
 7066              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7067              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2365
 7068 2c9b C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r13+rax]	# tmp1386, MEM[base: vectp.311_189, index: ivtmp.369_702, of
 7068      4C0540
 7069 2ca2 C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rax], ymm9	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B]
 7069      4C0440
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7070              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2366
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7071              		.loc 1 760 11 discriminator 2 view .LVU2367
 761:sieve_extend.c **** 
GAS LISTING /tmp/cct11Qa0.s 			page 196


 7072              		.loc 1 761 9 discriminator 2 view .LVU2368
 7073              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7074              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2369
 7075 2ca9 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 96[r13+rax]	# tmp1387, MEM[base: vectp.311_189, index: ivtmp.369_702, o
 7075      5C0560
 7076 2cb0 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rax], ymm11	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B
 7076      5C0460
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7077              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2370
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7078              		.loc 1 760 11 discriminator 2 view .LVU2371
 761:sieve_extend.c **** 
 7079              		.loc 1 761 9 discriminator 2 view .LVU2372
 7080              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7081              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2373
 7082 2cb7 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 128[r13+rax]	# tmp1388, MEM[base: vectp.311_189, index: ivtmp.369_702, o
 7082      A4058000 
 7082      0000
 7083 2cc1 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r12+rax], ymm4	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B
 7083      A4048000 
 7083      0000
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7084              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2374
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7085              		.loc 1 760 11 discriminator 2 view .LVU2375
 761:sieve_extend.c **** 
 7086              		.loc 1 761 9 discriminator 2 view .LVU2376
 7087              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7088              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2377
 7089 2ccb C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r13+rax]	# tmp1389, MEM[base: vectp.311_189, index: ivtmp.369_702, o
 7089      B405A000 
 7089      0000
 7090 2cd5 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r12+rax], ymm6	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B
 7090      B404A000 
 7090      0000
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7091              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2378
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7092              		.loc 1 760 11 discriminator 2 view .LVU2379
 761:sieve_extend.c **** 
 7093              		.loc 1 761 9 discriminator 2 view .LVU2380
 7094              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7095              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2381
 7096 2cdf C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 192[r13+rax]	# tmp1390, MEM[base: vectp.311_189, index: ivtmp.369_702, o
 7096      BC05C000 
 7096      0000
 7097 2ce9 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rax], ymm7	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B
 7097      BC04C000 
 7097      0000
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7098              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2382
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7099              		.loc 1 760 11 discriminator 2 view .LVU2383
GAS LISTING /tmp/cct11Qa0.s 			page 197


 761:sieve_extend.c **** 
 7100              		.loc 1 761 9 discriminator 2 view .LVU2384
 7101              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7102              		.loc 1 761 29 is_stmt 0 discriminator 2 view .LVU2385
 7103 2cf3 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 224[r13+rax]	# tmp1391, MEM[base: vectp.311_189, index: ivtmp.369_702, o
 7103      9C05E000 
 7103      0000
 7104 2cfd C4C17E7F 		vmovdqu	YMMWORD PTR 224[r12+rax], ymm3	# MEM[base: vectp.314_207, index: ivtmp.369_702, offset: 0B
 7104      9C04E000 
 7104      0000
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7105              		.loc 1 760 48 is_stmt 1 discriminator 2 view .LVU2386
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7106              		.loc 1 760 11 discriminator 2 view .LVU2387
 7107 2d07 48050001 		add	rax, 256	# ivtmp.369,
 7107      0000
 7108 2d0d 4C39C8   		cmp	rax, r9	# ivtmp.369, _704
 7109 2d10 0F856AFF 		jne	.L527	#,
 7109      FFFF
 7110              	.L742:
 7111 2d16 4C89C2   		mov	rdx, r8	# niters_vector_mult_vf.307, niters.305
 7112 2d19 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.307,
 7113 2d1d 4901D6   		add	r14, rdx	# tmp.308, niters_vector_mult_vf.307
 7114 2d20 4801D6   		add	rsi, rdx	# tmp.309, niters_vector_mult_vf.307
 7115 2d23 4C39C2   		cmp	rdx, r8	# niters_vector_mult_vf.307, niters.305
 7116 2d26 0F840D01 		je	.L767	#,
 7116      0000
 7117              	.LVL359:
 761:sieve_extend.c **** 
 7118              		.loc 1 761 9 view .LVU2388
 7119              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7120              		.loc 1 760 5 is_stmt 0 view .LVU2389
 7121 2d2c 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7121      50
 7122              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7123              		.loc 1 760 57 view .LVU2390
 7124 2d31 4C8D4601 		lea	r8, 1[rsi]	# copy_word,
 7125              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7126              		.loc 1 761 39 view .LVU2391
 7127 2d35 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _90, *_141
 7128              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7129              		.loc 1 760 71 view .LVU2392
 7130 2d39 4983C601 		add	r14, 1	# source_word,
 7131              	.LVL360:
 7132              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7133              		.loc 1 760 5 view .LVU2393
 7134 2d3d 4D39C7   		cmp	r15, r8	# destination_stop_word, copy_word
 7135              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7136              		.loc 1 761 29 view .LVU2394
 7137 2d40 4C8914F3 		mov	QWORD PTR [rbx+rsi*8], r10	# *_489, _90
GAS LISTING /tmp/cct11Qa0.s 			page 198


 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7138              		.loc 1 760 48 is_stmt 1 view .LVU2395
 7139              	.LVL361:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7140              		.loc 1 760 11 view .LVU2396
 7141              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7142              		.loc 1 760 5 is_stmt 0 view .LVU2397
 7143 2d44 0F82EF00 		jb	.L767	#,
 7143      0000
 761:sieve_extend.c **** 
 7144              		.loc 1 761 9 is_stmt 1 view .LVU2398
 7145              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7146              		.loc 1 761 39 is_stmt 0 view .LVU2399
 7147 2d4a 4A8D0CF5 		lea	rcx, 0[0+r14*8]	# _96,
 7147      00000000 
 7148              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7149              		.loc 1 760 57 view .LVU2400
 7150 2d52 4883C602 		add	rsi, 2	# copy_word,
 7151              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7152              		.loc 1 761 39 view .LVU2401
 7153 2d56 4E8B34F3 		mov	r14, QWORD PTR [rbx+r14*8]	# _103, *_98
 7154              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7155              		.loc 1 760 5 view .LVU2402
 7156 2d5a 4939F7   		cmp	r15, rsi	# destination_stop_word, copy_word
 7157              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7158              		.loc 1 761 29 view .LVU2403
 7159 2d5d 4E8934C3 		mov	QWORD PTR [rbx+r8*8], r14	# *_102, _103
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7160              		.loc 1 760 48 is_stmt 1 view .LVU2404
 7161              	.LVL362:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7162              		.loc 1 760 11 view .LVU2405
 7163              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7164              		.loc 1 760 5 is_stmt 0 view .LVU2406
 7165 2d61 0F82D200 		jb	.L767	#,
 7165      0000
 761:sieve_extend.c **** 
 7166              		.loc 1 761 9 is_stmt 1 view .LVU2407
 7167              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7168              		.loc 1 761 39 is_stmt 0 view .LVU2408
 7169 2d67 488B7C0B 		mov	rdi, QWORD PTR 8[rbx+rcx]	# _34, *_83
 7169      08
 7170              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7171              		.loc 1 761 29 view .LVU2409
 7172 2d6c 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_72, _34
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7173              		.loc 1 760 48 is_stmt 1 view .LVU2410
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cct11Qa0.s 			page 199


 7174              		.loc 1 760 11 view .LVU2411
 7175 2d70 C5F877   		vzeroupper
 7176              	.L768:
 7177              	# sieve_extend.c:764:  }
 764:sieve_extend.c **** 
 7178              		.loc 1 764 2 is_stmt 0 view .LVU2412
 7179 2d73 488D65D8 		lea	rsp, -40[rbp]	#,
 7180              	.LVL363:
 764:sieve_extend.c **** 
 7181              		.loc 1 764 2 view .LVU2413
 7182 2d77 5B       		pop	rbx	#
 7183 2d78 415C     		pop	r12	#
 7184 2d7a 415D     		pop	r13	#
 7185 2d7c 415E     		pop	r14	#
 7186 2d7e 415F     		pop	r15	#
 7187 2d80 5D       		pop	rbp	#
 7188              		.cfi_remember_state
 7189              		.cfi_def_cfa 7, 8
 7190              	.LVL364:
 764:sieve_extend.c **** 
 7191              		.loc 1 764 2 view .LVU2414
 7192 2d81 C3       		ret	
 7193              	.LVL365:
 7194              		.p2align 4,,7
 7195 2d82 660F1F44 		.p2align 3
 7195      0000
 7196              	.L524:
 7197              		.cfi_restore_state
 764:sieve_extend.c **** 
 7198              		.loc 1 764 2 view .LVU2415
 7199 2d88 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7199      50
 7200 2d8d 4E8D243B 		lea	r12, [rbx+r15]	# ivtmp.364,
 7201              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7202              		.loc 1 761 39 view .LVU2416
 7203 2d91 4929C5   		sub	r13, rax	# tmp791, ivtmp.378
 7204              	.LVL366:
 761:sieve_extend.c **** 
 7205              		.loc 1 761 39 view .LVU2417
 7206 2d94 488D5CF3 		lea	rbx, 8[rbx+rsi*8]	# _701,
 7206      08
 7207 2d99 4989D9   		mov	r9, rbx	# tmp799, _701
 7208 2d9c 4D29E1   		sub	r9, r12	# tmp799, ivtmp.364
 7209 2d9f 4983E908 		sub	r9, 8	# tmp800,
 7210 2da3 49C1E903 		shr	r9, 3	# tmp798,
 7211 2da7 4983C101 		add	r9, 1	# tmp801,
 7212 2dab 4183E107 		and	r9d, 7	# tmp802,
 7213 2daf 0F849B00 		je	.L530	#,
 7213      0000
 7214 2db5 4983F901 		cmp	r9, 1	# tmp802,
 7215 2db9 746C     		je	.L683	#,
 7216 2dbb 4983F902 		cmp	r9, 2	# tmp802,
 7217 2dbf 7459     		je	.L684	#,
 7218 2dc1 4983F903 		cmp	r9, 3	# tmp802,
 7219 2dc5 7446     		je	.L685	#,
 7220 2dc7 4983F904 		cmp	r9, 4	# tmp802,
GAS LISTING /tmp/cct11Qa0.s 			page 200


 7221 2dcb 7433     		je	.L686	#,
 7222 2dcd 4983F905 		cmp	r9, 5	# tmp802,
 7223 2dd1 7420     		je	.L687	#,
 7224 2dd3 4983F906 		cmp	r9, 6	# tmp802,
 7225 2dd7 740D     		je	.L688	#,
 761:sieve_extend.c **** 
 7226              		.loc 1 761 9 is_stmt 1 view .LVU2418
 7227              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7228              		.loc 1 761 39 is_stmt 0 view .LVU2419
 7229 2dd9 4F8B1CEC 		mov	r11, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7230 2ddd 4983C408 		add	r12, 8	# ivtmp.364,
 7231              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7232              		.loc 1 761 29 view .LVU2420
 7233 2de1 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _604, offset: 0B], _170
 7233      F8
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7234              		.loc 1 760 48 is_stmt 1 view .LVU2421
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7235              		.loc 1 760 11 view .LVU2422
 7236              	.L688:
 761:sieve_extend.c **** 
 7237              		.loc 1 761 9 view .LVU2423
 7238              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7239              		.loc 1 761 39 is_stmt 0 view .LVU2424
 7240 2de6 4B8B04EC 		mov	rax, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7241 2dea 4983C408 		add	r12, 8	# ivtmp.364,
 7242              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7243              		.loc 1 761 29 view .LVU2425
 7244 2dee 49894424 		mov	QWORD PTR -8[r12], rax	# MEM[base: _604, offset: 0B], _170
 7244      F8
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7245              		.loc 1 760 48 is_stmt 1 view .LVU2426
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7246              		.loc 1 760 11 view .LVU2427
 7247              	.L687:
 761:sieve_extend.c **** 
 7248              		.loc 1 761 9 view .LVU2428
 7249              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7250              		.loc 1 761 39 is_stmt 0 view .LVU2429
 7251 2df3 4B8B14EC 		mov	rdx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7252 2df7 4983C408 		add	r12, 8	# ivtmp.364,
 7253              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7254              		.loc 1 761 29 view .LVU2430
 7255 2dfb 49895424 		mov	QWORD PTR -8[r12], rdx	# MEM[base: _604, offset: 0B], _170
 7255      F8
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7256              		.loc 1 760 48 is_stmt 1 view .LVU2431
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7257              		.loc 1 760 11 view .LVU2432
 7258              	.L686:
 761:sieve_extend.c **** 
GAS LISTING /tmp/cct11Qa0.s 			page 201


 7259              		.loc 1 761 9 view .LVU2433
 7260              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7261              		.loc 1 761 39 is_stmt 0 view .LVU2434
 7262 2e00 4F8B14EC 		mov	r10, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7263 2e04 4983C408 		add	r12, 8	# ivtmp.364,
 7264              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7265              		.loc 1 761 29 view .LVU2435
 7266 2e08 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 7266      F8
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7267              		.loc 1 760 48 is_stmt 1 view .LVU2436
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7268              		.loc 1 760 11 view .LVU2437
 7269              	.L685:
 761:sieve_extend.c **** 
 7270              		.loc 1 761 9 view .LVU2438
 7271              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7272              		.loc 1 761 39 is_stmt 0 view .LVU2439
 7273 2e0d 4F8B04EC 		mov	r8, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7274 2e11 4983C408 		add	r12, 8	# ivtmp.364,
 7275              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7276              		.loc 1 761 29 view .LVU2440
 7277 2e15 4D894424 		mov	QWORD PTR -8[r12], r8	# MEM[base: _604, offset: 0B], _170
 7277      F8
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7278              		.loc 1 760 48 is_stmt 1 view .LVU2441
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7279              		.loc 1 760 11 view .LVU2442
 7280              	.L684:
 761:sieve_extend.c **** 
 7281              		.loc 1 761 9 view .LVU2443
 7282              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7283              		.loc 1 761 39 is_stmt 0 view .LVU2444
 7284 2e1a 4F8B3CEC 		mov	r15, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7285 2e1e 4983C408 		add	r12, 8	# ivtmp.364,
 7286              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7287              		.loc 1 761 29 view .LVU2445
 7288 2e22 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _604, offset: 0B], _170
 7288      F8
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7289              		.loc 1 760 48 is_stmt 1 view .LVU2446
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7290              		.loc 1 760 11 view .LVU2447
 7291              	.L683:
 761:sieve_extend.c **** 
 7292              		.loc 1 761 9 view .LVU2448
 7293              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7294              		.loc 1 761 39 is_stmt 0 view .LVU2449
 7295 2e27 4B8B0CEC 		mov	rcx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7296 2e2b 4983C408 		add	r12, 8	# ivtmp.364,
GAS LISTING /tmp/cct11Qa0.s 			page 202


 7297              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7298              		.loc 1 761 29 view .LVU2450
 7299 2e2f 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _604, offset: 0B], _170
 7299      F8
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7300              		.loc 1 760 48 is_stmt 1 view .LVU2451
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7301              		.loc 1 760 11 view .LVU2452
 7302              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7303              		.loc 1 760 5 is_stmt 0 view .LVU2453
 7304 2e34 4939DC   		cmp	r12, rbx	# ivtmp.364, _701
 7305 2e37 7517     		jne	.L530	#,
 7306              	.LVL367:
 7307              	.L767:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7308              		.loc 1 760 5 view .LVU2454
 7309 2e39 C5F877   		vzeroupper
 7310              	# sieve_extend.c:764:  }
 764:sieve_extend.c **** 
 7311              		.loc 1 764 2 view .LVU2455
 7312 2e3c 488D65D8 		lea	rsp, -40[rbp]	#,
 7313              	.LVL368:
 764:sieve_extend.c **** 
 7314              		.loc 1 764 2 view .LVU2456
 7315 2e40 5B       		pop	rbx	#
 7316 2e41 415C     		pop	r12	#
 7317 2e43 415D     		pop	r13	#
 7318 2e45 415E     		pop	r14	#
 7319 2e47 415F     		pop	r15	#
 7320 2e49 5D       		pop	rbp	#
 7321              		.cfi_remember_state
 7322              		.cfi_def_cfa 7, 8
 7323              	.LVL369:
 764:sieve_extend.c **** 
 7324              		.loc 1 764 2 view .LVU2457
 7325 2e4a C3       		ret	
 7326              	.LVL370:
 7327 2e4b 0F1F4400 		.p2align 4,,7
 7327      00
 7328              		.p2align 3
 7329              	.L530:
 7330              		.cfi_restore_state
 761:sieve_extend.c **** 
 7331              		.loc 1 761 9 is_stmt 1 view .LVU2458
 7332              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7333              		.loc 1 761 39 is_stmt 0 view .LVU2459
 7334 2e50 4F8B34EC 		mov	r14, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7335              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7336              		.loc 1 761 29 view .LVU2460
 7337 2e54 4D893424 		mov	QWORD PTR [r12], r14	# MEM[base: _604, offset: 0B], _170
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7338              		.loc 1 760 48 is_stmt 1 view .LVU2461
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cct11Qa0.s 			page 203


 7339              		.loc 1 760 11 view .LVU2462
 761:sieve_extend.c **** 
 7340              		.loc 1 761 9 view .LVU2463
 7341              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7342              		.loc 1 761 39 is_stmt 0 view .LVU2464
 7343 2e58 4B8B7CEC 		mov	rdi, QWORD PTR 8[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7343      08
 7344              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7345              		.loc 1 761 29 view .LVU2465
 7346 2e5d 49897C24 		mov	QWORD PTR 8[r12], rdi	# MEM[base: _604, offset: 0B], _170
 7346      08
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7347              		.loc 1 760 48 is_stmt 1 view .LVU2466
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7348              		.loc 1 760 11 view .LVU2467
 761:sieve_extend.c **** 
 7349              		.loc 1 761 9 view .LVU2468
 7350              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7351              		.loc 1 761 39 is_stmt 0 view .LVU2469
 7352 2e62 4B8B74EC 		mov	rsi, QWORD PTR 16[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7352      10
 7353              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7354              		.loc 1 761 29 view .LVU2470
 7355 2e67 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _604, offset: 0B], _170
 7355      10
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7356              		.loc 1 760 48 is_stmt 1 view .LVU2471
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7357              		.loc 1 760 11 view .LVU2472
 761:sieve_extend.c **** 
 7358              		.loc 1 761 9 view .LVU2473
 7359              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7360              		.loc 1 761 39 is_stmt 0 view .LVU2474
 7361 2e6c 4F8B4CEC 		mov	r9, QWORD PTR 24[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7361      18
 7362              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7363              		.loc 1 761 29 view .LVU2475
 7364 2e71 4D894C24 		mov	QWORD PTR 24[r12], r9	# MEM[base: _604, offset: 0B], _170
 7364      18
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7365              		.loc 1 760 48 is_stmt 1 view .LVU2476
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7366              		.loc 1 760 11 view .LVU2477
 761:sieve_extend.c **** 
 7367              		.loc 1 761 9 view .LVU2478
 7368              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7369              		.loc 1 761 39 is_stmt 0 view .LVU2479
 7370 2e76 4F8B5CEC 		mov	r11, QWORD PTR 32[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7370      20
 7371              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cct11Qa0.s 			page 204


 761:sieve_extend.c **** 
 7372              		.loc 1 761 29 view .LVU2480
 7373 2e7b 4D895C24 		mov	QWORD PTR 32[r12], r11	# MEM[base: _604, offset: 0B], _170
 7373      20
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7374              		.loc 1 760 48 is_stmt 1 view .LVU2481
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7375              		.loc 1 760 11 view .LVU2482
 761:sieve_extend.c **** 
 7376              		.loc 1 761 9 view .LVU2483
 7377              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7378              		.loc 1 761 39 is_stmt 0 view .LVU2484
 7379 2e80 4B8B44EC 		mov	rax, QWORD PTR 40[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7379      28
 7380              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7381              		.loc 1 761 29 view .LVU2485
 7382 2e85 49894424 		mov	QWORD PTR 40[r12], rax	# MEM[base: _604, offset: 0B], _170
 7382      28
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7383              		.loc 1 760 48 is_stmt 1 view .LVU2486
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7384              		.loc 1 760 11 view .LVU2487
 761:sieve_extend.c **** 
 7385              		.loc 1 761 9 view .LVU2488
 7386              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7387              		.loc 1 761 39 is_stmt 0 view .LVU2489
 7388 2e8a 4B8B54EC 		mov	rdx, QWORD PTR 48[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7388      30
 7389              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7390              		.loc 1 761 29 view .LVU2490
 7391 2e8f 49895424 		mov	QWORD PTR 48[r12], rdx	# MEM[base: _604, offset: 0B], _170
 7391      30
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7392              		.loc 1 760 48 is_stmt 1 view .LVU2491
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7393              		.loc 1 760 11 view .LVU2492
 761:sieve_extend.c **** 
 7394              		.loc 1 761 9 view .LVU2493
 7395              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7396              		.loc 1 761 39 is_stmt 0 view .LVU2494
 7397 2e94 4F8B54EC 		mov	r10, QWORD PTR 56[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 7397      38
 7398 2e99 4983C440 		add	r12, 64	# ivtmp.364,
 7399              	# sieve_extend.c:761:         bitarray[copy_word] = bitarray[source_word];
 761:sieve_extend.c **** 
 7400              		.loc 1 761 29 view .LVU2495
 7401 2e9d 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 7401      F8
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7402              		.loc 1 760 48 is_stmt 1 view .LVU2496
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7403              		.loc 1 760 11 view .LVU2497
GAS LISTING /tmp/cct11Qa0.s 			page 205


 7404              	# sieve_extend.c:760:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7405              		.loc 1 760 5 is_stmt 0 view .LVU2498
 7406 2ea2 4939DC   		cmp	r12, rbx	# ivtmp.364, _701
 7407 2ea5 75A9     		jne	.L530	#,
 7408 2ea7 EB90     		jmp	.L767	#
 7409              	.LVL371:
 7410 2ea9 0F1F8000 		.p2align 4,,7
 7410      000000
 7411              		.p2align 3
 7412              	.L507:
 760:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7413              		.loc 1 760 5 view .LVU2499
 7414 2eb0 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 7414      30
 7415 2eb5 4989C1   		mov	r9, rax	# tmp823, ivtmp.378
 7416 2eb8 49F7D1   		not	r9	# tmp823
 7417 2ebb 4801D9   		add	rcx, rbx	# ivtmp.409, bitarray
 7418              	.LBB342:
 7419              	.LBB323:
 7420              	.LBB312:
 7421              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7422              		.loc 1 585 63 view .LVU2500
 7423 2ebe 4489FE   		mov	esi, r15d	# tmp1324, _18
 7424              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7425              		.loc 1 585 42 view .LVU2501
 7426 2ec1 C4E29BF7 		shrx	rdx, QWORD PTR [rcx], r12	# tmp681, MEM[base: _743, offset: 0B], _12
 7426      11
 7427 2ec6 4D01F1   		add	r9, r14	# tmp824, fast_loop_stop_word
 7428              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7429              		.loc 1 585 63 view .LVU2502
 7430 2ec9 4589FA   		mov	r10d, r15d	# _18, shift_flipped
 7431              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7432              		.loc 1 584 19 view .LVU2503
 7433 2ecc 4C8B4108 		mov	r8, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 7434              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7435              		.loc 1 585 63 view .LVU2504
 7436 2ed0 C4C2C9F7 		shlx	rdi, r8, rsi	# tmp683, source1, tmp1324
 7436      F8
 7437 2ed5 49D1E9   		shr	r9	# tmp822
 7438              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7439              		.loc 1 585 52 view .LVU2505
 7440 2ed8 4809FA   		or	rdx, rdi	# tmp684, tmp683
 7441              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7442              		.loc 1 588 19 view .LVU2506
 7443 2edb 488D7802 		lea	rdi, 2[rax]	# copy_word,
 7444 2edf 49F7D3   		not	r11	# tmp794
 7445              	.LVL372:
 7446              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/cct11Qa0.s 			page 206


 7447              		.loc 1 585 52 view .LVU2507
 7448 2ee2 488914C3 		mov	QWORD PTR [rbx+rax*8], rdx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 7449 2ee6 4183E103 		and	r9d, 3	# tmp825,
 7450              	.LVL373:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7451              		.loc 1 583 9 is_stmt 1 view .LVU2508
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7452              		.loc 1 584 9 view .LVU2509
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7453              		.loc 1 585 9 view .LVU2510
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7454              		.loc 1 586 9 view .LVU2511
 587:sieve_extend.c ****         copy_word += 2;
 7455              		.loc 1 587 9 view .LVU2512
 7456              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7457              		.loc 1 587 42 is_stmt 0 view .LVU2513
 7458 2eea C4429BF7 		shrx	r8, r8, r12	# tmp687, source1, _12
 7458      C0
 7459              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7460              		.loc 1 587 63 view .LVU2514
 7461 2eef C4E2A9F7 		shlx	rdx, QWORD PTR 16[rcx], r10	# tmp685, MEM[base: _743, offset: 16B], tmp1325
 7461      5110
 7462              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7463              		.loc 1 587 52 view .LVU2515
 7464 2ef5 4909D0   		or	r8, rdx	# tmp688, tmp685
 7465              	.LBE312:
 7466              	# sieve_extend.c:582:     while (copy_word < fast_loop_stop_word) {
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7467              		.loc 1 582 11 view .LVU2516
 7468 2ef8 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 7469 2efb 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 7470 2eff 488D5110 		lea	rdx, 16[rcx]	# ivtmp.409,
 7471              	.LBB313:
 7472              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7473              		.loc 1 587 52 view .LVU2517
 7474 2f03 4C8944C3 		mov	QWORD PTR 8[rbx+rax*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 7474      08
 7475              	.LVL374:
 588:sieve_extend.c ****         source_word += 2;
 7476              		.loc 1 588 9 is_stmt 1 view .LVU2518
 589:sieve_extend.c ****         distance += 2;
 7477              		.loc 1 589 9 view .LVU2519
 590:sieve_extend.c ****     }
 7478              		.loc 1 590 9 view .LVU2520
 590:sieve_extend.c ****     }
 7479              		.loc 1 590 9 is_stmt 0 view .LVU2521
 7480              	.LBE313:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7481              		.loc 1 582 11 is_stmt 1 view .LVU2522
 7482 2f08 0F8644F6 		jbe	.L511	#,
 7482      FFFF
 7483 2f0e 4D85C9   		test	r9, r9	# tmp825
 7484 2f11 0F848B00 		je	.L761	#,
GAS LISTING /tmp/cct11Qa0.s 			page 207


 7484      0000
 7485 2f17 4983F901 		cmp	r9, 1	# tmp825,
 7486 2f1b 7440     		je	.L695	#,
 7487 2f1d 4983F902 		cmp	r9, 2	# tmp825,
 7488 2f21 0F857403 		jne	.L770	#,
 7488      0000
 7489              	.LVL375:
 7490              	.L696:
 7491              	.LBB314:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7492              		.loc 1 583 9 view .LVU2523
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7493              		.loc 1 584 9 view .LVU2524
 7494              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7495              		.loc 1 584 19 is_stmt 0 view .LVU2525
 7496 2f27 488B7208 		mov	rsi, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7497              		.loc 1 585 9 is_stmt 1 view .LVU2526
 7498              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7499              		.loc 1 585 42 is_stmt 0 view .LVU2527
 7500 2f2b C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1171, MEM[base: _743, offset: 0B], _12
 7500      0A
 7501              	.LVL376:
 7502              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7503              		.loc 1 585 63 view .LVU2528
 7504 2f30 4589F8   		mov	r8d, r15d	# tmp1427, _18
 7505 2f33 C462B9F7 		shlx	r10, rsi, r8	# tmp1172, source1, tmp1427
 7505      D6
 7506              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7507              		.loc 1 585 52 view .LVU2529
 7508 2f38 4C09D1   		or	rcx, r10	# tmp1173, tmp1172
 7509              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7510              		.loc 1 585 63 view .LVU2530
 7511 2f3b 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 7512              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7513              		.loc 1 587 42 view .LVU2531
 7514 2f3e C4E29BF7 		shrx	rsi, rsi, r12	# tmp1176, source1, _12
 7514      F6
 7515              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7516              		.loc 1 585 52 view .LVU2532
 7517 2f43 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 7518              	.LVL377:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7519              		.loc 1 586 9 is_stmt 1 view .LVU2533
 587:sieve_extend.c ****         copy_word += 2;
 7520              		.loc 1 587 9 view .LVU2534
 7521              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7522              		.loc 1 587 63 is_stmt 0 view .LVU2535
 7523 2f47 C46289F7 		shlx	r9, QWORD PTR 16[rdx], r14	# tmp1175, MEM[base: _743, offset: 16B], tmp1428
GAS LISTING /tmp/cct11Qa0.s 			page 208


 7523      4A10
 7524              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7525              		.loc 1 587 52 view .LVU2536
 7526 2f4d 4C09CE   		or	rsi, r9	# tmp1177, tmp1175
 7527 2f50 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 7527      08
 7528              	.LVL378:
 588:sieve_extend.c ****         source_word += 2;
 7529              		.loc 1 588 9 is_stmt 1 view .LVU2537
 7530 2f55 4883C210 		add	rdx, 16	# ivtmp.409,
 7531              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7532              		.loc 1 588 19 is_stmt 0 view .LVU2538
 7533 2f59 4883C702 		add	rdi, 2	# copy_word,
 589:sieve_extend.c ****         distance += 2;
 7534              		.loc 1 589 9 is_stmt 1 view .LVU2539
 590:sieve_extend.c ****     }
 7535              		.loc 1 590 9 view .LVU2540
 590:sieve_extend.c ****     }
 7536              		.loc 1 590 9 is_stmt 0 view .LVU2541
 7537              	.LBE314:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7538              		.loc 1 582 11 is_stmt 1 view .LVU2542
 7539              	.LVL379:
 7540              	.L695:
 7541              	.LBB315:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7542              		.loc 1 583 9 view .LVU2543
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7543              		.loc 1 584 9 view .LVU2544
 7544              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7545              		.loc 1 584 19 is_stmt 0 view .LVU2545
 7546 2f5d 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7547              		.loc 1 585 9 is_stmt 1 view .LVU2546
 7548              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7549              		.loc 1 585 42 is_stmt 0 view .LVU2547
 7550 2f61 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1181, MEM[base: _743, offset: 0B], _12
 7550      0A
 7551              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7552              		.loc 1 585 63 view .LVU2548
 7553 2f66 4589F8   		mov	r8d, r15d	# tmp1429, _18
 7554 2f69 C442B9F7 		shlx	r10, r9, r8	# tmp1182, source1, tmp1429
 7554      D1
 7555              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7556              		.loc 1 585 52 view .LVU2549
 7557 2f6e 4C09D1   		or	rcx, r10	# tmp1183, tmp1182
 7558              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7559              		.loc 1 585 63 view .LVU2550
 7560 2f71 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 7561              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/cct11Qa0.s 			page 209


 587:sieve_extend.c ****         copy_word += 2;
 7562              		.loc 1 587 42 view .LVU2551
 7563 2f74 C4C29BF7 		shrx	rsi, r9, r12	# tmp1186, source1, _12
 7563      F1
 7564              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7565              		.loc 1 585 52 view .LVU2552
 7566 2f79 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 7567              	.LVL380:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7568              		.loc 1 586 9 is_stmt 1 view .LVU2553
 587:sieve_extend.c ****         copy_word += 2;
 7569              		.loc 1 587 9 view .LVU2554
 7570              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7571              		.loc 1 587 63 is_stmt 0 view .LVU2555
 7572 2f7d C4E289F7 		shlx	rcx, QWORD PTR 16[rdx], r14	# tmp1185, MEM[base: _743, offset: 16B], tmp1430
 7572      4A10
 7573              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7574              		.loc 1 587 52 view .LVU2556
 7575 2f83 4809CE   		or	rsi, rcx	# tmp1187, tmp1185
 7576 2f86 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 7576      08
 7577              	.LVL381:
 588:sieve_extend.c ****         source_word += 2;
 7578              		.loc 1 588 9 is_stmt 1 view .LVU2557
 7579              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7580              		.loc 1 588 19 is_stmt 0 view .LVU2558
 7581 2f8b 4883C702 		add	rdi, 2	# copy_word,
 589:sieve_extend.c ****         distance += 2;
 7582              		.loc 1 589 9 is_stmt 1 view .LVU2559
 590:sieve_extend.c ****     }
 7583              		.loc 1 590 9 view .LVU2560
 7584 2f8f 4883C210 		add	rdx, 16	# ivtmp.409,
 7585              	.LBE315:
 7586              	# sieve_extend.c:582:     while (copy_word < fast_loop_stop_word) {
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7587              		.loc 1 582 11 is_stmt 0 view .LVU2561
 7588 2f93 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 7588      30
 7589 2f98 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7590              		.loc 1 582 11 is_stmt 1 view .LVU2562
 7591 2f9c 0F86B0F5 		jbe	.L511	#,
 7591      FFFF
 7592              	.LVL382:
 7593              	.L761:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7594              		.loc 1 582 11 is_stmt 0 view .LVU2563
 7595 2fa2 4489F9   		mov	ecx, r15d	# _18, shift_flipped
 7596              	.L510:
 7597              	.LVL383:
 7598              	.LBB316:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7599              		.loc 1 583 9 is_stmt 1 view .LVU2564
GAS LISTING /tmp/cct11Qa0.s 			page 210


 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7600              		.loc 1 584 9 view .LVU2565
 7601              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7602              		.loc 1 584 19 is_stmt 0 view .LVU2566
 7603 2fa5 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7604              		.loc 1 585 9 is_stmt 1 view .LVU2567
 7605              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7606              		.loc 1 585 42 is_stmt 0 view .LVU2568
 7607 2fa9 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp897, MEM[base: _743, offset: 0B], _12
 7607      02
 7608              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7609              		.loc 1 585 63 view .LVU2569
 7610 2fae C442F1F7 		shlx	r14, r9, rcx	# tmp898, source1, _18
 7610      F1
 7611              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7612              		.loc 1 585 52 view .LVU2570
 7613 2fb3 4D09F0   		or	r8, r14	# tmp899, tmp898
 7614              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7615              		.loc 1 587 42 view .LVU2571
 7616 2fb6 C4429BF7 		shrx	r10, r9, r12	# tmp902, source1, _12
 7616      D1
 7617              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7618              		.loc 1 585 52 view .LVU2572
 7619 2fbb 4C8904FB 		mov	QWORD PTR [rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 7620              	.LVL384:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7621              		.loc 1 586 9 is_stmt 1 view .LVU2573
 587:sieve_extend.c ****         copy_word += 2;
 7622              		.loc 1 587 9 view .LVU2574
 7623              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7624              		.loc 1 587 63 is_stmt 0 view .LVU2575
 7625 2fbf C4E2F1F7 		shlx	rsi, QWORD PTR 16[rdx], rcx	# tmp901, MEM[base: _743, offset: 16B], _18
 7625      7210
 7626              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7627              		.loc 1 587 52 view .LVU2576
 7628 2fc5 4C09D6   		or	rsi, r10	# tmp903, tmp902
 7629 2fc8 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 7629      08
 7630              	.LVL385:
 588:sieve_extend.c ****         source_word += 2;
 7631              		.loc 1 588 9 is_stmt 1 view .LVU2577
 7632              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7633              		.loc 1 588 19 is_stmt 0 view .LVU2578
 7634 2fcd 4C8D4F02 		lea	r9, 2[rdi]	# tmp826,
 589:sieve_extend.c ****         distance += 2;
 7635              		.loc 1 589 9 is_stmt 1 view .LVU2579
 590:sieve_extend.c ****     }
GAS LISTING /tmp/cct11Qa0.s 			page 211


 7636              		.loc 1 590 9 view .LVU2580
 590:sieve_extend.c ****     }
 7637              		.loc 1 590 9 is_stmt 0 view .LVU2581
 7638              	.LBE316:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7639              		.loc 1 582 11 is_stmt 1 view .LVU2582
 7640              	.LBB317:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7641              		.loc 1 583 9 view .LVU2583
 7642              	.LVL386:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7643              		.loc 1 584 9 view .LVU2584
 7644              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7645              		.loc 1 584 19 is_stmt 0 view .LVU2585
 7646 2fd1 4C8B4218 		mov	r8, QWORD PTR 24[rdx]	# source1, MEM[base: _743, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7647              		.loc 1 585 9 is_stmt 1 view .LVU2586
 7648              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7649              		.loc 1 585 42 is_stmt 0 view .LVU2587
 7650 2fd5 C4E29BF7 		shrx	rsi, QWORD PTR 16[rdx], r12	# tmp909, MEM[base: _743, offset: 0B], _12
 7650      7210
 7651              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7652              		.loc 1 585 63 view .LVU2588
 7653 2fdb C442F1F7 		shlx	r14, r8, rcx	# tmp910, source1, _18
 7653      F0
 7654              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7655              		.loc 1 585 52 view .LVU2589
 7656 2fe0 4C09F6   		or	rsi, r14	# tmp911, tmp910
 7657 2fe3 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 7658              	.LVL387:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7659              		.loc 1 586 9 is_stmt 1 view .LVU2590
 587:sieve_extend.c ****         copy_word += 2;
 7660              		.loc 1 587 9 view .LVU2591
 7661              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7662              		.loc 1 587 42 is_stmt 0 view .LVU2592
 7663 2fe7 C4429BF7 		shrx	r8, r8, r12	# tmp914, source1, _12
 7663      C0
 7664              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7665              		.loc 1 587 63 view .LVU2593
 7666 2fec 4C8B5220 		mov	r10, QWORD PTR 32[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 7667 2ff0 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp913, MEM[base: _743, offset: 16B], _18
 7667      F2
 7668              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7669              		.loc 1 587 52 view .LVU2594
 7670 2ff5 4909F0   		or	r8, rsi	# tmp915, tmp913
 7671 2ff8 4883C240 		add	rdx, 64	# ivtmp.409,
 7672 2ffc 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 7672      08
 7673              	.LVL388:
GAS LISTING /tmp/cct11Qa0.s 			page 212


 588:sieve_extend.c ****         source_word += 2;
 7674              		.loc 1 588 9 is_stmt 1 view .LVU2595
 7675              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7676              		.loc 1 588 19 is_stmt 0 view .LVU2596
 7677 3001 4C8D4F04 		lea	r9, 4[rdi]	# copy_word,
 589:sieve_extend.c ****         distance += 2;
 7678              		.loc 1 589 9 is_stmt 1 view .LVU2597
 590:sieve_extend.c ****     }
 7679              		.loc 1 590 9 view .LVU2598
 590:sieve_extend.c ****     }
 7680              		.loc 1 590 9 is_stmt 0 view .LVU2599
 7681              	.LBE317:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7682              		.loc 1 582 11 is_stmt 1 view .LVU2600
 7683              	.LBB318:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7684              		.loc 1 583 9 view .LVU2601
 7685              	.LVL389:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7686              		.loc 1 584 9 view .LVU2602
 7687              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7688              		.loc 1 584 19 is_stmt 0 view .LVU2603
 7689 3005 4C8B52E8 		mov	r10, QWORD PTR -24[rdx]	# source1, MEM[base: _743, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7690              		.loc 1 585 9 is_stmt 1 view .LVU2604
 7691              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7692              		.loc 1 585 42 is_stmt 0 view .LVU2605
 7693 3009 C4E29BF7 		shrx	rsi, QWORD PTR -32[rdx], r12	# tmp921, MEM[base: _743, offset: 0B], _12
 7693      72E0
 7694              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7695              		.loc 1 585 63 view .LVU2606
 7696 300f C442F1F7 		shlx	r14, r10, rcx	# tmp922, source1, _18
 7696      F2
 7697              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7698              		.loc 1 585 52 view .LVU2607
 7699 3014 4C09F6   		or	rsi, r14	# tmp923, tmp922
 7700 3017 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 7701              	.LVL390:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7702              		.loc 1 586 9 is_stmt 1 view .LVU2608
 587:sieve_extend.c ****         copy_word += 2;
 7703              		.loc 1 587 9 view .LVU2609
 7704              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7705              		.loc 1 587 42 is_stmt 0 view .LVU2610
 7706 301b C4429BF7 		shrx	r10, r10, r12	# tmp926, source1, _12
 7706      D2
 7707              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7708              		.loc 1 587 63 view .LVU2611
 7709 3020 4C8B42F0 		mov	r8, QWORD PTR -16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 7710 3024 C4C2F1F7 		shlx	rsi, r8, rcx	# tmp925, MEM[base: _743, offset: 16B], _18
GAS LISTING /tmp/cct11Qa0.s 			page 213


 7710      F0
 7711              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7712              		.loc 1 587 52 view .LVU2612
 7713 3029 4909F2   		or	r10, rsi	# tmp927, tmp925
 7714 302c 4E8954CB 		mov	QWORD PTR 8[rbx+r9*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 7714      08
 7715              	.LVL391:
 588:sieve_extend.c ****         source_word += 2;
 7716              		.loc 1 588 9 is_stmt 1 view .LVU2613
 7717              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
 7718              		.loc 1 588 19 is_stmt 0 view .LVU2614
 7719 3031 4C8D4F06 		lea	r9, 6[rdi]	# copy_word,
 589:sieve_extend.c ****         distance += 2;
 7720              		.loc 1 589 9 is_stmt 1 view .LVU2615
 590:sieve_extend.c ****     }
 7721              		.loc 1 590 9 view .LVU2616
 590:sieve_extend.c ****     }
 7722              		.loc 1 590 9 is_stmt 0 view .LVU2617
 7723              	.LBE318:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7724              		.loc 1 582 11 is_stmt 1 view .LVU2618
 7725              	.LBB319:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7726              		.loc 1 583 9 view .LVU2619
 7727              	.LVL392:
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7728              		.loc 1 584 9 view .LVU2620
 7729              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7730              		.loc 1 584 19 is_stmt 0 view .LVU2621
 7731 3035 4C8B42F8 		mov	r8, QWORD PTR -8[rdx]	# source1, MEM[base: _743, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7732              		.loc 1 585 9 is_stmt 1 view .LVU2622
 7733              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7734              		.loc 1 585 42 is_stmt 0 view .LVU2623
 7735 3039 C4E29BF7 		shrx	rsi, QWORD PTR -16[rdx], r12	# tmp933, MEM[base: _743, offset: 0B], _12
 7735      72F0
 7736              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7737              		.loc 1 585 63 view .LVU2624
 7738 303f C442F1F7 		shlx	r14, r8, rcx	# tmp934, source1, _18
 7738      F0
 7739              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7740              		.loc 1 585 52 view .LVU2625
 7741 3044 4C09F6   		or	rsi, r14	# tmp935, tmp934
 7742 3047 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 7743              	.LVL393:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7744              		.loc 1 586 9 is_stmt 1 view .LVU2626
 587:sieve_extend.c ****         copy_word += 2;
 7745              		.loc 1 587 9 view .LVU2627
 7746              	# sieve_extend.c:588:         copy_word += 2;
 588:sieve_extend.c ****         source_word += 2;
GAS LISTING /tmp/cct11Qa0.s 			page 214


 7747              		.loc 1 588 19 is_stmt 0 view .LVU2628
 7748 304b 4883C708 		add	rdi, 8	# copy_word,
 7749              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7750              		.loc 1 587 42 view .LVU2629
 7751 304f C4429BF7 		shrx	r8, r8, r12	# tmp938, source1, _12
 7751      C0
 7752              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7753              		.loc 1 587 63 view .LVU2630
 7754 3054 4C8B12   		mov	r10, QWORD PTR [rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 7755 3057 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp937, MEM[base: _743, offset: 16B], _18
 7755      F2
 7756              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7757              		.loc 1 587 52 view .LVU2631
 7758 305c 4909F0   		or	r8, rsi	# tmp939, tmp937
 7759              	.LBE319:
 7760              	# sieve_extend.c:582:     while (copy_word < fast_loop_stop_word) {
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7761              		.loc 1 582 11 view .LVU2632
 7762 305f 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 7762      30
 7763 3064 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 7764              	.LBB320:
 7765              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 7766              		.loc 1 587 52 view .LVU2633
 7767 3068 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 7767      08
 7768              	.LVL394:
 588:sieve_extend.c ****         source_word += 2;
 7769              		.loc 1 588 9 is_stmt 1 view .LVU2634
 589:sieve_extend.c ****         distance += 2;
 7770              		.loc 1 589 9 view .LVU2635
 590:sieve_extend.c ****     }
 7771              		.loc 1 590 9 view .LVU2636
 590:sieve_extend.c ****     }
 7772              		.loc 1 590 9 is_stmt 0 view .LVU2637
 7773              	.LBE320:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7774              		.loc 1 582 11 is_stmt 1 view .LVU2638
 7775 306d 0F8732FF 		ja	.L510	#,
 7775      FFFF
 7776 3073 E9DAF4FF 		jmp	.L511	#
 7776      FF
 7777              	.LVL395:
 7778              		.p2align 4,,7
 7779              		.p2align 3
 7780              	.L532:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7781              		.loc 1 582 11 is_stmt 0 view .LVU2639
 7782              	.LBE323:
 7783              	.LBE342:
 7784              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7785              		.loc 1 746 5 view .LVU2640
GAS LISTING /tmp/cct11Qa0.s 			page 215


 7786 3078 4889C6   		mov	rsi, rax	# copy_word, ivtmp.378
 7787              	# sieve_extend.c:740:     source_word += distance;
 740:sieve_extend.c ****     copy_word += distance;
 7788              		.loc 1 740 17 view .LVU2641
 7789 307b 4C89D9   		mov	rcx, r11	# source_word, _183
 7790 307e 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 7791 3082 E9CDF5FF 		jmp	.L514	#
 7791      FF
 7792              		.p2align 4,,7
 7793 3087 90       		.p2align 3
 7794              	.L513:
 740:sieve_extend.c ****     copy_word += distance;
 7795              		.loc 1 740 17 view .LVU2642
 7796 3088 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 7796      58
 7797 308d 4801DA   		add	rdx, rbx	# ivtmp.386, bitarray
 7798 3090 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# tmp749, %sfp
 7798      40
 7799              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7800              		.loc 1 747 29 view .LVU2643
 7801 3095 4829F8   		sub	rax, rdi	# tmp753, _183
 7802 3098 4901FA   		add	r10, rdi	# tmp749, _183
 7803 309b 4E8D4CD3 		lea	r9, 8[rbx+r10*8]	# tmp752,
 7803      08
 7804 30a0 4929F1   		sub	r9, rsi	# tmp752, _220
 7805 30a3 4C89CE   		mov	rsi, r9	# _729, tmp752
 7806 30a6 4929D1   		sub	r9, rdx	# tmp811, ivtmp.386
 7807 30a9 4983E908 		sub	r9, 8	# tmp812,
 7808 30ad 49C1E903 		shr	r9, 3	# tmp810,
 7809 30b1 4983C101 		add	r9, 1	# tmp813,
 7810 30b5 4183E107 		and	r9d, 7	# tmp814,
 7811 30b9 0F84F900 		je	.L758	#,
 7811      0000
 7812 30bf 4983F901 		cmp	r9, 1	# tmp814,
 7813 30c3 0F84CA00 		je	.L670	#,
 7813      0000
 7814 30c9 4983F902 		cmp	r9, 2	# tmp814,
 7815 30cd 0F84A500 		je	.L671	#,
 7815      0000
 7816 30d3 4983F903 		cmp	r9, 3	# tmp814,
 7817 30d7 0F848000 		je	.L672	#,
 7817      0000
 7818 30dd 4983F904 		cmp	r9, 4	# tmp814,
 7819 30e1 745E     		je	.L673	#,
 7820 30e3 4983F905 		cmp	r9, 5	# tmp814,
 7821 30e7 743D     		je	.L674	#,
 7822 30e9 4983F906 		cmp	r9, 6	# tmp814,
 7823 30ed 741C     		je	.L675	#,
 747:sieve_extend.c ****     }
 7824              		.loc 1 747 9 is_stmt 1 view .LVU2644
 7825              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7826              		.loc 1 747 56 is_stmt 0 view .LVU2645
 7827 30ef C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1090, MEM[base: _720, offset: 0B], _12
 7827      02
 7828              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cct11Qa0.s 			page 216


 747:sieve_extend.c ****     }
 7829              		.loc 1 747 94 view .LVU2646
 7830 30f4 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1404, %sfp
 7830      2448
 7831 30fa C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1092, MEM[base: _720, offset: 8B], tmp1404
 7831      7208
 7832              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7833              		.loc 1 747 66 view .LVU2647
 7834 3100 4D09F0   		or	r8, r14	# tmp1093, tmp1092
 7835 3103 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1093
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7836              		.loc 1 746 43 is_stmt 1 view .LVU2648
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7837              		.loc 1 746 11 view .LVU2649
 7838 3107 4883C208 		add	rdx, 8	# ivtmp.386,
 7839              	.L675:
 747:sieve_extend.c ****     }
 7840              		.loc 1 747 9 view .LVU2650
 7841              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7842              		.loc 1 747 56 is_stmt 0 view .LVU2651
 7843 310b C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1095, MEM[base: _720, offset: 0B], _12
 7843      3A
 7844              	.LVL396:
 7845              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7846              		.loc 1 747 94 view .LVU2652
 7847 3110 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1405, %sfp
 7847      48
 7848 3115 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1097, MEM[base: _720, offset: 8B], tmp1405
 7848      6A08
 7849              	.LVL397:
 7850              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7851              		.loc 1 747 66 view .LVU2653
 7852 311b 4D09EF   		or	r15, r13	# tmp1098, tmp1097
 7853 311e 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1098
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7854              		.loc 1 746 43 is_stmt 1 view .LVU2654
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7855              		.loc 1 746 11 view .LVU2655
 7856 3122 4883C208 		add	rdx, 8	# ivtmp.386,
 7857              	.L674:
 747:sieve_extend.c ****     }
 7858              		.loc 1 747 9 view .LVU2656
 7859              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7860              		.loc 1 747 56 is_stmt 0 view .LVU2657
 7861 3126 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1100, MEM[base: _720, offset: 0B], _12
 7861      12
 7862              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7863              		.loc 1 747 94 view .LVU2658
 7864 312b 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1406, %sfp
 7864      48
 7865 3130 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1102, MEM[base: _720, offset: 8B], tmp1406
GAS LISTING /tmp/cct11Qa0.s 			page 217


 7865      4A08
 7866              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7867              		.loc 1 747 66 view .LVU2659
 7868 3136 4D09CA   		or	r10, r9	# tmp1103, tmp1102
 7869 3139 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1103
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7870              		.loc 1 746 43 is_stmt 1 view .LVU2660
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7871              		.loc 1 746 11 view .LVU2661
 7872 313d 4883C208 		add	rdx, 8	# ivtmp.386,
 7873              	.L673:
 747:sieve_extend.c ****     }
 7874              		.loc 1 747 9 view .LVU2662
 7875              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7876              		.loc 1 747 56 is_stmt 0 view .LVU2663
 7877 3141 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1105, MEM[base: _720, offset: 0B], _12
 7877      02
 7878              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7879              		.loc 1 747 94 view .LVU2664
 7880 3146 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1407, %sfp
 7880      2448
 7881 314c C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1107, MEM[base: _720, offset: 8B], tmp1407
 7881      7208
 7882              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7883              		.loc 1 747 66 view .LVU2665
 7884 3152 4D09F0   		or	r8, r14	# tmp1108, tmp1107
 7885 3155 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1108
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7886              		.loc 1 746 43 is_stmt 1 view .LVU2666
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7887              		.loc 1 746 11 view .LVU2667
 7888 3159 4883C208 		add	rdx, 8	# ivtmp.386,
 7889              	.L672:
 747:sieve_extend.c ****     }
 7890              		.loc 1 747 9 view .LVU2668
 7891              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7892              		.loc 1 747 56 is_stmt 0 view .LVU2669
 7893 315d C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1110, MEM[base: _720, offset: 0B], _12
 7893      3A
 7894              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7895              		.loc 1 747 94 view .LVU2670
 7896 3162 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1408, %sfp
 7896      48
 7897 3167 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1112, MEM[base: _720, offset: 8B], tmp1408
 7897      6A08
 7898              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7899              		.loc 1 747 66 view .LVU2671
 7900 316d 4D09EF   		or	r15, r13	# tmp1113, tmp1112
 7901 3170 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1113
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/cct11Qa0.s 			page 218


 7902              		.loc 1 746 43 is_stmt 1 view .LVU2672
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7903              		.loc 1 746 11 view .LVU2673
 7904 3174 4883C208 		add	rdx, 8	# ivtmp.386,
 7905              	.L671:
 747:sieve_extend.c ****     }
 7906              		.loc 1 747 9 view .LVU2674
 7907              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7908              		.loc 1 747 56 is_stmt 0 view .LVU2675
 7909 3178 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1115, MEM[base: _720, offset: 0B], _12
 7909      12
 7910              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7911              		.loc 1 747 94 view .LVU2676
 7912 317d 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1409, %sfp
 7912      48
 7913 3182 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1117, MEM[base: _720, offset: 8B], tmp1409
 7913      4A08
 7914              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7915              		.loc 1 747 66 view .LVU2677
 7916 3188 4D09CA   		or	r10, r9	# tmp1118, tmp1117
 7917 318b 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1118
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7918              		.loc 1 746 43 is_stmt 1 view .LVU2678
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7919              		.loc 1 746 11 view .LVU2679
 7920 318f 4883C208 		add	rdx, 8	# ivtmp.386,
 7921              	.L670:
 747:sieve_extend.c ****     }
 7922              		.loc 1 747 9 view .LVU2680
 7923              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7924              		.loc 1 747 56 is_stmt 0 view .LVU2681
 7925 3193 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1120, MEM[base: _720, offset: 0B], _12
 7925      02
 7926              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7927              		.loc 1 747 94 view .LVU2682
 7928 3198 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1410, %sfp
 7928      2448
 7929 319e C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1122, MEM[base: _720, offset: 8B], tmp1410
 7929      7208
 7930              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7931              		.loc 1 747 66 view .LVU2683
 7932 31a4 4D09F0   		or	r8, r14	# tmp1123, tmp1122
 7933 31a7 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1123
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7934              		.loc 1 746 43 is_stmt 1 view .LVU2684
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7935              		.loc 1 746 11 view .LVU2685
 7936 31ab 4883C208 		add	rdx, 8	# ivtmp.386,
 7937              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7938              		.loc 1 746 5 is_stmt 0 view .LVU2686
GAS LISTING /tmp/cct11Qa0.s 			page 219


 7939 31af 4839F2   		cmp	rdx, rsi	# ivtmp.386, _729
 7940 31b2 0F84C600 		je	.L744	#,
 7940      0000
 7941              	.L758:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7942              		.loc 1 746 5 view .LVU2687
 7943 31b8 448B7C24 		mov	r15d, DWORD PTR 72[rsp]	# _18, %sfp
 7943      48
 7944              	.L518:
 747:sieve_extend.c ****     }
 7945              		.loc 1 747 9 is_stmt 1 view .LVU2688
 7946              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7947              		.loc 1 747 94 is_stmt 0 view .LVU2689
 7948 31bd C46281F7 		shlx	r13, QWORD PTR 8[rdx], r15	# tmp756, MEM[base: _720, offset: 8B], _18
 7948      6A08
 7949              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7950              		.loc 1 747 56 view .LVU2690
 7951 31c3 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp754, MEM[base: _720, offset: 0B], _12
 7951      0A
 7952              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7953              		.loc 1 747 66 view .LVU2691
 7954 31c8 4C09E9   		or	rcx, r13	# tmp758, tmp756
 7955 31cb 4C8D5208 		lea	r10, 8[rdx]	# tmp815,
 7956 31cf 48890CC2 		mov	QWORD PTR [rdx+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp758
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7957              		.loc 1 746 43 is_stmt 1 view .LVU2692
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7958              		.loc 1 746 11 view .LVU2693
 747:sieve_extend.c ****     }
 7959              		.loc 1 747 9 view .LVU2694
 7960              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7961              		.loc 1 747 94 is_stmt 0 view .LVU2695
 7962 31d3 C44281F7 		shlx	r9, QWORD PTR 8[r10], r15	# tmp988, MEM[base: _720, offset: 8B], _18
 7962      4A08
 7963              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7964              		.loc 1 747 56 view .LVU2696
 7965 31d9 C4E29BF7 		shrx	rdi, QWORD PTR 8[rdx], r12	# tmp986, MEM[base: _720, offset: 0B], _12
 7965      7A08
 7966              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7967              		.loc 1 747 66 view .LVU2697
 7968 31df 4C09CF   		or	rdi, r9	# tmp989, tmp988
 7969 31e2 4C8D5A10 		lea	r11, 16[rdx]	# ivtmp.386,
 7970 31e6 488D4A18 		lea	rcx, 24[rdx]	# ivtmp.386,
 7971 31ea 49893CC2 		mov	QWORD PTR [r10+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp989
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7972              		.loc 1 746 43 is_stmt 1 view .LVU2698
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7973              		.loc 1 746 11 view .LVU2699
 747:sieve_extend.c ****     }
 7974              		.loc 1 747 9 view .LVU2700
 7975              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/cct11Qa0.s 			page 220


 747:sieve_extend.c ****     }
 7976              		.loc 1 747 56 is_stmt 0 view .LVU2701
 7977 31ee C4629BF7 		shrx	r14, QWORD PTR 16[rdx], r12	# tmp992, MEM[base: _720, offset: 0B], _12
 7977      7210
 7978              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7979              		.loc 1 747 94 view .LVU2702
 7980 31f4 C44281F7 		shlx	r8, QWORD PTR 8[r11], r15	# tmp994, MEM[base: _720, offset: 8B], _18
 7980      4308
 7981              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7982              		.loc 1 747 66 view .LVU2703
 7983 31fa 4D09C6   		or	r14, r8	# tmp995, tmp994
 7984 31fd 4D8934C3 		mov	QWORD PTR [r11+rax*8], r14	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp995
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7985              		.loc 1 746 43 is_stmt 1 view .LVU2704
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7986              		.loc 1 746 11 view .LVU2705
 747:sieve_extend.c ****     }
 7987              		.loc 1 747 9 view .LVU2706
 7988              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7989              		.loc 1 747 56 is_stmt 0 view .LVU2707
 7990 3201 C4629BF7 		shrx	r13, QWORD PTR 24[rdx], r12	# tmp998, MEM[base: _720, offset: 0B], _12
 7990      6A18
 7991              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7992              		.loc 1 747 94 view .LVU2708
 7993 3207 C46281F7 		shlx	r10, QWORD PTR 8[rcx], r15	# tmp1000, MEM[base: _720, offset: 8B], _18
 7993      5108
 7994              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 7995              		.loc 1 747 66 view .LVU2709
 7996 320d 4D09D5   		or	r13, r10	# tmp1001, tmp1000
 7997 3210 4C8D4A20 		lea	r9, 32[rdx]	# ivtmp.386,
 7998 3214 4C8D7228 		lea	r14, 40[rdx]	# ivtmp.386,
 7999 3218 4C892CC1 		mov	QWORD PTR [rcx+rax*8], r13	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1001
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8000              		.loc 1 746 43 is_stmt 1 view .LVU2710
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8001              		.loc 1 746 11 view .LVU2711
 747:sieve_extend.c ****     }
 8002              		.loc 1 747 9 view .LVU2712
 8003              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8004              		.loc 1 747 94 is_stmt 0 view .LVU2713
 8005 321c C44281F7 		shlx	r11, QWORD PTR 8[r9], r15	# tmp1006, MEM[base: _720, offset: 8B], _18
 8005      5908
 8006              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8007              		.loc 1 747 56 view .LVU2714
 8008 3222 C4E29BF7 		shrx	rdi, QWORD PTR 32[rdx], r12	# tmp1004, MEM[base: _720, offset: 0B], _12
 8008      7A20
 8009              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8010              		.loc 1 747 66 view .LVU2715
 8011 3228 4C09DF   		or	rdi, r11	# tmp1007, tmp1006
GAS LISTING /tmp/cct11Qa0.s 			page 221


 8012 322b 49893CC1 		mov	QWORD PTR [r9+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1007
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8013              		.loc 1 746 43 is_stmt 1 view .LVU2716
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8014              		.loc 1 746 11 view .LVU2717
 747:sieve_extend.c ****     }
 8015              		.loc 1 747 9 view .LVU2718
 8016              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8017              		.loc 1 747 56 is_stmt 0 view .LVU2719
 8018 322f C4E29BF7 		shrx	rcx, QWORD PTR 40[rdx], r12	# tmp1010, MEM[base: _720, offset: 0B], _12
 8018      4A28
 8019              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8020              		.loc 1 747 94 view .LVU2720
 8021 3235 C44281F7 		shlx	r8, QWORD PTR 8[r14], r15	# tmp1012, MEM[base: _720, offset: 8B], _18
 8021      4608
 8022              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8023              		.loc 1 747 66 view .LVU2721
 8024 323b 4C09C1   		or	rcx, r8	# tmp1013, tmp1012
 8025 323e 4C8D6A30 		lea	r13, 48[rdx]	# ivtmp.386,
 8026 3242 4C8D5A38 		lea	r11, 56[rdx]	# ivtmp.386,
 8027 3246 49890CC6 		mov	QWORD PTR [r14+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1013
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8028              		.loc 1 746 43 is_stmt 1 view .LVU2722
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8029              		.loc 1 746 11 view .LVU2723
 747:sieve_extend.c ****     }
 8030              		.loc 1 747 9 view .LVU2724
 8031              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8032              		.loc 1 747 56 is_stmt 0 view .LVU2725
 8033 324a C4629BF7 		shrx	r10, QWORD PTR 48[rdx], r12	# tmp1016, MEM[base: _720, offset: 0B], _12
 8033      5230
 8034              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8035              		.loc 1 747 94 view .LVU2726
 8036 3250 C44281F7 		shlx	r9, QWORD PTR 8[r13], r15	# tmp1018, MEM[base: _720, offset: 8B], _18
 8036      4D08
 8037              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8038              		.loc 1 747 66 view .LVU2727
 8039 3256 4D09CA   		or	r10, r9	# tmp1019, tmp1018
 8040 3259 4D8954C5 		mov	QWORD PTR 0[r13+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1019
 8040      00
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8041              		.loc 1 746 43 is_stmt 1 view .LVU2728
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8042              		.loc 1 746 11 view .LVU2729
 747:sieve_extend.c ****     }
 8043              		.loc 1 747 9 view .LVU2730
 8044 325e 4883C240 		add	rdx, 64	# ivtmp.386,
 8045              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8046              		.loc 1 747 56 is_stmt 0 view .LVU2731
 8047 3262 C4E29BF7 		shrx	rdi, QWORD PTR -8[rdx], r12	# tmp1022, MEM[base: _720, offset: 0B], _12
GAS LISTING /tmp/cct11Qa0.s 			page 222


 8047      7AF8
 8048              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8049              		.loc 1 747 94 view .LVU2732
 8050 3268 C44281F7 		shlx	r14, QWORD PTR 8[r11], r15	# tmp1024, MEM[base: _720, offset: 8B], _18
 8050      7308
 8051              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8052              		.loc 1 747 66 view .LVU2733
 8053 326e 4C09F7   		or	rdi, r14	# tmp1025, tmp1024
 8054              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8055              		.loc 1 746 5 view .LVU2734
 8056 3271 4839F2   		cmp	rdx, rsi	# ivtmp.386, _729
 8057              	# sieve_extend.c:747:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 747:sieve_extend.c ****     }
 8058              		.loc 1 747 66 view .LVU2735
 8059 3274 49893CC3 		mov	QWORD PTR [r11+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1025
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8060              		.loc 1 746 43 is_stmt 1 view .LVU2736
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8061              		.loc 1 746 11 view .LVU2737
 8062              	# sieve_extend.c:746:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8063              		.loc 1 746 5 is_stmt 0 view .LVU2738
 8064 3278 0F853FFF 		jne	.L518	#,
 8064      FFFF
 8065              	.L744:
 746:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8066              		.loc 1 746 5 view .LVU2739
 8067 327e 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 8067      40
 8068 3283 4C8D5201 		lea	r10, 1[rdx]	# ivtmp.378,
 8069 3287 E9E9F6FF 		jmp	.L519	#
 8069      FF
 8070              	.LVL398:
 8071 328c 0F1F4000 		.p2align 4,,7
 8072              		.p2align 3
 8073              	.L533:
 8074              	# sieve_extend.c:740:     source_word += distance;
 740:sieve_extend.c ****     copy_word += distance;
 8075              		.loc 1 740 17 view .LVU2740
 8076 3290 4889C6   		mov	rsi, rax	# copy_word, ivtmp.378
 8077              	# sieve_extend.c:752:     source_word = copy_word - size; // recalibrate
 752:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 8078              		.loc 1 752 17 view .LVU2741
 8079 3293 4D89EE   		mov	r14, r13	# source_word, source_word
 8080 3296 E906F9FF 		jmp	.L525	#
 8080      FF
 8081              	.LVL399:
 8082              	.L770:
 8083              	.LBB343:
 8084              	.LBB324:
 8085              	.LBB321:
 583:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8086              		.loc 1 583 9 is_stmt 1 view .LVU2742
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/cct11Qa0.s 			page 223


 8087              		.loc 1 584 9 view .LVU2743
 8088              	# sieve_extend.c:584:         bitword_t source1 = bitarray[source_word+1];
 584:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8089              		.loc 1 584 19 is_stmt 0 view .LVU2744
 8090 329b 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8091              		.loc 1 585 9 is_stmt 1 view .LVU2745
 8092              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8093              		.loc 1 585 42 is_stmt 0 view .LVU2746
 8094 329f C4E29BF7 		shrx	rsi, QWORD PTR [rdx], r12	# tmp1161, MEM[base: _743, offset: 0B], _12
 8094      32
 8095              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8096              		.loc 1 585 63 view .LVU2747
 8097 32a4 4589FA   		mov	r10d, r15d	# tmp1425, _18
 8098 32a7 C442A9F7 		shlx	r8, r9, r10	# tmp1162, source1, tmp1425
 8098      C1
 8099              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8100              		.loc 1 585 52 view .LVU2748
 8101 32ac 4C09C6   		or	rsi, r8	# tmp1163, tmp1162
 8102              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8103              		.loc 1 585 63 view .LVU2749
 8104 32af 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8105              	# sieve_extend.c:585:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 585:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8106              		.loc 1 585 52 view .LVU2750
 8107 32b2 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8108              	.LVL400:
 586:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8109              		.loc 1 586 9 is_stmt 1 view .LVU2751
 587:sieve_extend.c ****         copy_word += 2;
 8110              		.loc 1 587 9 view .LVU2752
 8111              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 8112              		.loc 1 587 42 is_stmt 0 view .LVU2753
 8113 32b6 C4429BF7 		shrx	r9, r9, r12	# tmp1166, source1, _12
 8113      C9
 8114              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 8115              		.loc 1 587 63 view .LVU2754
 8116 32bb 488B5210 		mov	rdx, QWORD PTR 16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8117 32bf C46289F7 		shlx	r10, rdx, r14	# tmp1165, MEM[base: _743, offset: 16B], tmp1426
 8117      D2
 8118              	# sieve_extend.c:587:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 587:sieve_extend.c ****         copy_word += 2;
 8119              		.loc 1 587 52 view .LVU2755
 8120 32c4 4D09CA   		or	r10, r9	# tmp1167, tmp1166
 8121 32c7 488D5120 		lea	rdx, 32[rcx]	# ivtmp.409,
 8122 32cb 4C8954FB 		mov	QWORD PTR 8[rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8122      08
 8123              	.LVL401:
 588:sieve_extend.c ****         source_word += 2;
 8124              		.loc 1 588 9 is_stmt 1 view .LVU2756
 8125              	# sieve_extend.c:588:         copy_word += 2;
GAS LISTING /tmp/cct11Qa0.s 			page 224


 588:sieve_extend.c ****         source_word += 2;
 8126              		.loc 1 588 19 is_stmt 0 view .LVU2757
 8127 32d0 488D7804 		lea	rdi, 4[rax]	# copy_word,
 589:sieve_extend.c ****         distance += 2;
 8128              		.loc 1 589 9 is_stmt 1 view .LVU2758
 590:sieve_extend.c ****     }
 8129              		.loc 1 590 9 view .LVU2759
 590:sieve_extend.c ****     }
 8130              		.loc 1 590 9 is_stmt 0 view .LVU2760
 8131              	.LBE321:
 582:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8132              		.loc 1 582 11 is_stmt 1 view .LVU2761
 8133 32d4 E94EFCFF 		jmp	.L696	#
 8133      FF
 8134              	.LBE324:
 8135              	.LBE343:
 8136              		.cfi_endproc
 8137              	.LFE5339:
 8139              		.section	.rodata.str1.1,"aMS",@progbits,1
 8140              	.LC4:
 8141 0000 25336A75 		.string	"%3ju "
 8141      2000
 8142              	.LC5:
 8143 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 8143      6E642025 
 8143      6A752070 
 8143      72696D65 
 8143      7320756E 
 8144              		.text
 8145 32d9 0F1F8000 		.p2align 4
 8145      000000
 8147              	show_primes.isra.0:
 8148              	.LVL402:
 8149              	.LFB5353:
 923:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8150              		.loc 1 923 13 view -0
 8151              		.cfi_startproc
 8152              	.LBB344:
 925:sieve_extend.c ****         primeCount++;
 8153              		.loc 1 925 30 view .LVU2763
 8154              	.LBE344:
 8155              	# sieve_extend.c:923: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
 923:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8156              		.loc 1 923 13 is_stmt 0 view .LVU2764
 8157 32e0 4157     		push	r15	#
 8158              		.cfi_def_cfa_offset 16
 8159              		.cfi_offset 15, -16
 8160 32e2 4156     		push	r14	#
 8161              		.cfi_def_cfa_offset 24
 8162              		.cfi_offset 14, -24
 8163 32e4 4155     		push	r13	#
 8164              		.cfi_def_cfa_offset 32
 8165              		.cfi_offset 13, -32
 8166 32e6 4154     		push	r12	#
 8167              		.cfi_def_cfa_offset 40
 8168              		.cfi_offset 12, -40
 8169 32e8 4989F4   		mov	r12, rsi	# ISRA.71, tmp168
GAS LISTING /tmp/cct11Qa0.s 			page 225


 8170 32eb 55       		push	rbp	#
 8171              		.cfi_def_cfa_offset 48
 8172              		.cfi_offset 6, -48
 8173 32ec 53       		push	rbx	#
 8174              		.cfi_def_cfa_offset 56
 8175              		.cfi_offset 3, -56
 8176 32ed 488D6424 		lea	rsp, -8[rsp]	#,
 8176      F8
 8177              		.cfi_def_cfa_offset 64
 8178              	.LBB361:
 8179              	# sieve_extend.c:925:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 925:sieve_extend.c ****         primeCount++;
 8180              		.loc 1 925 44 view .LVU2765
 8181 32f2 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.71_32(D)
 8182              	# sieve_extend.c:925:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 925:sieve_extend.c ****         primeCount++;
 8183              		.loc 1 925 5 view .LVU2766
 8184 32f5 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 8185 32f9 0F867501 		jbe	.L778	#,
 8185      0000
 8186              	# sieve_extend.c:927:         if (factor < maxFactor/2) {
 927:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8187              		.loc 1 927 31 view .LVU2767
 8188 32ff 48D1EA   		shr	rdx	# maxFactor
 8189              	.LVL403:
 927:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8190              		.loc 1 927 31 view .LVU2768
 8191 3302 4989FD   		mov	r13, rdi	# ISRA.70, tmp167
 8192              	# sieve_extend.c:925:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 925:sieve_extend.c ****         primeCount++;
 8193              		.loc 1 925 20 view .LVU2769
 8194 3305 BB010000 		mov	ebx, 1	# factor,
 8194      00
 8195              	# sieve_extend.c:927:         if (factor < maxFactor/2) {
 927:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8196              		.loc 1 927 31 view .LVU2770
 8197 330a 4889D5   		mov	rbp, rdx	# _4, maxFactor
 8198              	.LBE361:
 8199              	# sieve_extend.c:924:     counter_t primeCount = 1;    // We already have 2
 924:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 8200              		.loc 1 924 15 view .LVU2771
 8201 330d 41BF0100 		mov	r15d, 1	# primeCount,
 8201      0000
 8202              	.LBB362:
 8203              	.LBB345:
 8204              	.LBB346:
 8205              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8206              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
GAS LISTING /tmp/cct11Qa0.s 			page 226


  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/cct11Qa0.s 			page 227


  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 8207              		.loc 3 107 10 view .LVU2772
 8208 3313 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 8208      CCCCCCCC 
 8208      CCCC
 8209              	.LVL404:
 8210 331d 0F1F00   		.p2align 4
 8211              		.p2align 3
 8212              	.L777:
 8213              		.loc 3 107 10 view .LVU2773
 8214              	.LBE346:
 8215              	.LBE345:
 926:sieve_extend.c ****         if (factor < maxFactor/2) {
 8216              		.loc 1 926 9 is_stmt 1 view .LVU2774
 8217              	# sieve_extend.c:926:         primeCount++;
 926:sieve_extend.c ****         if (factor < maxFactor/2) {
 8218              		.loc 1 926 19 is_stmt 0 view .LVU2775
GAS LISTING /tmp/cct11Qa0.s 			page 228


 8219 3320 4983C701 		add	r15, 1	# primeCount,
 8220              	.LVL405:
 927:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8221              		.loc 1 927 9 is_stmt 1 view .LVU2776
 8222              	# sieve_extend.c:927:         if (factor < maxFactor/2) {
 927:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8223              		.loc 1 927 12 is_stmt 0 view .LVU2777
 8224 3324 4839DD   		cmp	rbp, rbx	# _4, factor
 8225 3327 0F87FB00 		ja	.L801	#,
 8225      0000
 8226              	.L773:
 925:sieve_extend.c ****         primeCount++;
 8227              		.loc 1 925 52 is_stmt 1 view .LVU2778
 8228              	.LVL406:
 8229              	# sieve_extend.c:925:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 925:sieve_extend.c ****         primeCount++;
 8230              		.loc 1 925 61 is_stmt 0 view .LVU2779
 8231 332d 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.70_33(D)
 8232 3331 4883C301 		add	rbx, 1	# factor,
 8233              	.LVL407:
 8234              	.L800:
 8235              	.LBB351:
 8236              	.LBI351:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 8237              		.loc 1 110 25 is_stmt 1 view .LVU2780
 8238              	.LBB352:
 111:sieve_extend.c ****     return index;
 8239              		.loc 1 111 5 view .LVU2781
 111:sieve_extend.c ****     return index;
 8240              		.loc 1 111 11 view .LVU2782
 8241              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8242              		.loc 1 111 21 is_stmt 0 view .LVU2783
 8243 3335 4889D9   		mov	rcx, rbx	# tmp124, factor
 8244 3338 48C1E906 		shr	rcx, 6	# tmp124,
 8245              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8246              		.loc 1 111 12 view .LVU2784
 8247 333c 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 8248              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8249              		.loc 1 111 11 view .LVU2785
 8250 3340 490FA3D9 		bt	r9, rbx	# *_39, factor
 8251 3344 0F83A600 		jnc	.L775	#,
 8251      0000
 111:sieve_extend.c ****     return index;
 8252              		.loc 1 111 58 is_stmt 1 view .LVU2786
 8253              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8254              		.loc 1 111 63 is_stmt 0 view .LVU2787
 8255 334a 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 8256              	.LVL408:
 8257              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8258              		.loc 1 111 21 view .LVU2788
 8259 334e 4D89D3   		mov	r11, r10	# tmp129, factor
 8260              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cct11Qa0.s 			page 229


 111:sieve_extend.c ****     return index;
 8261              		.loc 1 111 63 view .LVU2789
 8262 3351 4C89D3   		mov	rbx, r10	# factor, tmp138
 111:sieve_extend.c ****     return index;
 8263              		.loc 1 111 11 is_stmt 1 view .LVU2790
 8264              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8265              		.loc 1 111 21 is_stmt 0 view .LVU2791
 8266 3354 49C1EB06 		shr	r11, 6	# tmp129,
 8267              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8268              		.loc 1 111 12 view .LVU2792
 8269 3358 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8270              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8271              		.loc 1 111 11 view .LVU2793
 8272 335c 4C0FA3D0 		bt	rax, r10	# *_16, factor
 8273 3360 0F838A00 		jnc	.L775	#,
 8273      0000
 111:sieve_extend.c ****     return index;
 8274              		.loc 1 111 58 is_stmt 1 view .LVU2794
 8275              	.LVL409:
 8276              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8277              		.loc 1 111 63 is_stmt 0 view .LVU2795
 8278 3366 4883C301 		add	rbx, 1	# factor,
 8279              	.LVL410:
 111:sieve_extend.c ****     return index;
 8280              		.loc 1 111 11 is_stmt 1 view .LVU2796
 8281              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8282              		.loc 1 111 21 is_stmt 0 view .LVU2797
 8283 336a 4889DA   		mov	rdx, rbx	# tmp139, factor
 8284 336d 48C1EA06 		shr	rdx, 6	# tmp139,
 8285              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8286              		.loc 1 111 12 view .LVU2798
 8287 3371 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8288              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8289              		.loc 1 111 11 view .LVU2799
 8290 3375 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8291 3379 7375     		jnc	.L775	#,
 111:sieve_extend.c ****     return index;
 8292              		.loc 1 111 58 is_stmt 1 view .LVU2800
 8293              	.LVL411:
 8294              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8295              		.loc 1 111 63 is_stmt 0 view .LVU2801
 8296 337b 498D5A02 		lea	rbx, 2[r10]	# factor,
 8297              	.LVL412:
 111:sieve_extend.c ****     return index;
 8298              		.loc 1 111 11 is_stmt 1 view .LVU2802
 8299              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8300              		.loc 1 111 21 is_stmt 0 view .LVU2803
 8301 337f 4889D9   		mov	rcx, rbx	# tmp143, factor
GAS LISTING /tmp/cct11Qa0.s 			page 230


 8302 3382 48C1E906 		shr	rcx, 6	# tmp143,
 8303              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8304              		.loc 1 111 12 view .LVU2804
 8305 3386 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8306              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8307              		.loc 1 111 11 view .LVU2805
 8308 338a 490FA3D9 		bt	r9, rbx	# *_16, factor
 8309 338e 7360     		jnc	.L775	#,
 111:sieve_extend.c ****     return index;
 8310              		.loc 1 111 58 is_stmt 1 view .LVU2806
 8311              	.LVL413:
 8312              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8313              		.loc 1 111 63 is_stmt 0 view .LVU2807
 8314 3390 498D5A03 		lea	rbx, 3[r10]	# factor,
 8315              	.LVL414:
 111:sieve_extend.c ****     return index;
 8316              		.loc 1 111 11 is_stmt 1 view .LVU2808
 8317              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8318              		.loc 1 111 21 is_stmt 0 view .LVU2809
 8319 3394 4989DB   		mov	r11, rbx	# tmp147, factor
 8320 3397 49C1EB06 		shr	r11, 6	# tmp147,
 8321              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8322              		.loc 1 111 12 view .LVU2810
 8323 339b 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8324              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8325              		.loc 1 111 11 view .LVU2811
 8326 339f 480FA3D8 		bt	rax, rbx	# *_16, factor
 8327 33a3 734B     		jnc	.L775	#,
 111:sieve_extend.c ****     return index;
 8328              		.loc 1 111 58 is_stmt 1 view .LVU2812
 8329              	.LVL415:
 8330              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8331              		.loc 1 111 63 is_stmt 0 view .LVU2813
 8332 33a5 498D5A04 		lea	rbx, 4[r10]	# factor,
 8333              	.LVL416:
 111:sieve_extend.c ****     return index;
 8334              		.loc 1 111 11 is_stmt 1 view .LVU2814
 8335              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8336              		.loc 1 111 21 is_stmt 0 view .LVU2815
 8337 33a9 4889DA   		mov	rdx, rbx	# tmp151, factor
 8338 33ac 48C1EA06 		shr	rdx, 6	# tmp151,
 8339              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8340              		.loc 1 111 12 view .LVU2816
 8341 33b0 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8342              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8343              		.loc 1 111 11 view .LVU2817
 8344 33b4 480FA3DF 		bt	rdi, rbx	# *_16, factor
GAS LISTING /tmp/cct11Qa0.s 			page 231


 8345 33b8 7336     		jnc	.L775	#,
 111:sieve_extend.c ****     return index;
 8346              		.loc 1 111 58 is_stmt 1 view .LVU2818
 8347              	.LVL417:
 8348              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8349              		.loc 1 111 63 is_stmt 0 view .LVU2819
 8350 33ba 498D5A05 		lea	rbx, 5[r10]	# factor,
 8351              	.LVL418:
 111:sieve_extend.c ****     return index;
 8352              		.loc 1 111 11 is_stmt 1 view .LVU2820
 8353              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8354              		.loc 1 111 21 is_stmt 0 view .LVU2821
 8355 33be 4889D9   		mov	rcx, rbx	# tmp155, factor
 8356 33c1 48C1E906 		shr	rcx, 6	# tmp155,
 8357              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8358              		.loc 1 111 12 view .LVU2822
 8359 33c5 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8360              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8361              		.loc 1 111 11 view .LVU2823
 8362 33c9 490FA3D9 		bt	r9, rbx	# *_16, factor
 8363 33cd 7321     		jnc	.L775	#,
 111:sieve_extend.c ****     return index;
 8364              		.loc 1 111 58 is_stmt 1 view .LVU2824
 8365              	.LVL419:
 8366              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8367              		.loc 1 111 63 is_stmt 0 view .LVU2825
 8368 33cf 498D5A06 		lea	rbx, 6[r10]	# factor,
 8369              	.LVL420:
 111:sieve_extend.c ****     return index;
 8370              		.loc 1 111 11 is_stmt 1 view .LVU2826
 8371              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8372              		.loc 1 111 21 is_stmt 0 view .LVU2827
 8373 33d3 4989DB   		mov	r11, rbx	# tmp159, factor
 8374 33d6 49C1EB06 		shr	r11, 6	# tmp159,
 8375              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8376              		.loc 1 111 12 view .LVU2828
 8377 33da 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8378              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8379              		.loc 1 111 11 view .LVU2829
 8380 33de 480FA3D8 		bt	rax, rbx	# *_16, factor
 8381 33e2 730C     		jnc	.L775	#,
 111:sieve_extend.c ****     return index;
 8382              		.loc 1 111 58 is_stmt 1 view .LVU2830
 8383              	.LVL421:
 8384              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8385              		.loc 1 111 63 is_stmt 0 view .LVU2831
 8386 33e4 498D5A07 		lea	rbx, 7[r10]	# factor,
 8387              	.LVL422:
GAS LISTING /tmp/cct11Qa0.s 			page 232


 111:sieve_extend.c ****     return index;
 8388              		.loc 1 111 11 is_stmt 1 view .LVU2832
 8389 33e8 E948FFFF 		jmp	.L800	#
 8389      FF
 8390 33ed 0F1F00   		.p2align 4,,7
 8391              		.p2align 3
 8392              	.L775:
 8393              	.LVL423:
 111:sieve_extend.c ****     return index;
 8394              		.loc 1 111 11 is_stmt 0 view .LVU2833
 8395              	.LBE352:
 8396              	.LBE351:
 925:sieve_extend.c ****         primeCount++;
 8397              		.loc 1 925 30 is_stmt 1 view .LVU2834
 8398              	# sieve_extend.c:925:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 925:sieve_extend.c ****         primeCount++;
 8399              		.loc 1 925 5 is_stmt 0 view .LVU2835
 8400 33f0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 8401 33f3 0F8227FF 		jb	.L777	#,
 8401      FFFF
 8402              	.LVL424:
 8403              	.L772:
 925:sieve_extend.c ****         primeCount++;
 8404              		.loc 1 925 5 view .LVU2836
 8405              	.LBE362:
 932:sieve_extend.c **** }
 8406              		.loc 1 932 5 is_stmt 1 view .LVU2837
 8407              	.LBB363:
 8408              	.LBI363:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8409              		.loc 3 105 1 view .LVU2838
 8410              	.LBB364:
 8411              		.loc 3 107 3 view .LVU2839
 8412              	.LBE364:
 8413              	.LBE363:
 8414              	# sieve_extend.c:933: }
 933:sieve_extend.c **** 
 8415              		.loc 1 933 1 is_stmt 0 view .LVU2840
 8416 33f9 488D6424 		lea	rsp, 8[rsp]	#,
 8416      08
 8417              		.cfi_remember_state
 8418              		.cfi_def_cfa_offset 56
 8419              	.LBB368:
 8420              	.LBB365:
 8421              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8422              		.loc 3 107 10 view .LVU2841
 8423 33fe 4C89FA   		mov	rdx, r15	#, primeCount
 8424              	.LBE365:
 8425              	.LBE368:
 8426              	# sieve_extend.c:933: }
 933:sieve_extend.c **** 
 8427              		.loc 1 933 1 view .LVU2842
 8428 3401 5B       		pop	rbx	#
 8429              		.cfi_def_cfa_offset 48
 8430              	# sieve_extend.c:932:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t
 932:sieve_extend.c **** }
 8431              		.loc 1 932 5 view .LVU2843
GAS LISTING /tmp/cct11Qa0.s 			page 233


 8432 3402 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 8432      01
 8433              	.LBB369:
 8434              	.LBB366:
 8435              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8436              		.loc 3 107 10 view .LVU2844
 8437 3407 BF010000 		mov	edi, 1	#,
 8437      00
 8438 340c 31C0     		xor	eax, eax	#
 8439 340e 488D3500 		lea	rsi, .LC5[rip]	#,
 8439      000000
 8440              	.LBE366:
 8441              	.LBE369:
 8442              	# sieve_extend.c:933: }
 933:sieve_extend.c **** 
 8443              		.loc 1 933 1 view .LVU2845
 8444 3415 5D       		pop	rbp	#
 8445              		.cfi_def_cfa_offset 40
 8446 3416 415C     		pop	r12	#
 8447              		.cfi_def_cfa_offset 32
 8448 3418 415D     		pop	r13	#
 8449              		.cfi_def_cfa_offset 24
 8450 341a 415E     		pop	r14	#
 8451              		.cfi_def_cfa_offset 16
 8452 341c 415F     		pop	r15	#
 8453              		.cfi_def_cfa_offset 8
 8454              	.LBB370:
 8455              	.LBB367:
 8456              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8457              		.loc 3 107 10 view .LVU2846
 8458 341e E9000000 		jmp	__printf_chk@PLT	#
 8458      00
 8459              	.LVL425:
 8460              		.p2align 4,,7
 8461 3423 0F1F4400 		.p2align 3
 8461      00
 8462              	.L801:
 8463              		.cfi_restore_state
 8464              		.loc 3 107 10 view .LVU2847
 8465              	.LBE367:
 8466              	.LBE370:
 8467              	.LBB371:
 928:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8468              		.loc 1 928 13 is_stmt 1 view .LVU2848
 8469              	.LBB353:
 8470              	.LBI345:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8471              		.loc 3 105 1 view .LVU2849
 8472              	.LBB347:
 8473              		.loc 3 107 3 view .LVU2850
 8474              	.LBE347:
 8475              	.LBE353:
 8476              	# sieve_extend.c:928:             printf("%3ju ",(uintmax_t)factor*2+1);
 928:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8477              		.loc 1 928 13 is_stmt 0 view .LVU2851
 8478 3428 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 8478      01
GAS LISTING /tmp/cct11Qa0.s 			page 234


 8479              	.LBB354:
 8480              	.LBB348:
 8481              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8482              		.loc 3 107 10 view .LVU2852
 8483 342d BF010000 		mov	edi, 1	#,
 8483      00
 8484 3432 31C0     		xor	eax, eax	#
 8485 3434 488D3500 		lea	rsi, .LC4[rip]	#,
 8485      000000
 8486 343b E8000000 		call	__printf_chk@PLT	#
 8486      00
 8487              	.LVL426:
 8488              		.loc 3 107 10 view .LVU2853
 8489              	.LBE348:
 8490              	.LBE354:
 929:sieve_extend.c ****         }
 8491              		.loc 1 929 13 is_stmt 1 view .LVU2854
 8492              	.LBB355:
 8493              	.LBB349:
 8494              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8495              		.loc 3 107 10 is_stmt 0 view .LVU2855
 8496 3440 4C89F8   		mov	rax, r15	# tmp120, primeCount
 8497              	.LBE349:
 8498              	.LBE355:
 8499              	# sieve_extend.c:929:             if (primeCount % 10 == 0) printf("\n");
 929:sieve_extend.c ****         }
 8500              		.loc 1 929 16 view .LVU2856
 8501 3443 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 8501      99999999 
 8501      9919
 8502              	.LBB356:
 8503              	.LBB350:
 8504              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8505              		.loc 3 107 10 view .LVU2857
 8506 344d 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 8507 3451 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 8507      D001
 8508              	.LBE350:
 8509              	.LBE356:
 8510              	# sieve_extend.c:929:             if (primeCount % 10 == 0) printf("\n");
 929:sieve_extend.c ****         }
 8511              		.loc 1 929 16 view .LVU2858
 8512 3457 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 8513 345a 760C     		jbe	.L774	#,
 8514              	.L799:
 8515 345c 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.71_32(D)
 8516              	.LBB357:
 8517              	.LBB358:
 8518              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8519              		.loc 3 107 10 view .LVU2859
 8520 3460 E9C8FEFF 		jmp	.L773	#
 8520      FF
 8521              		.p2align 4,,7
 8522 3465 0F1F00   		.p2align 3
 8523              	.L774:
 8524              	.LBE358:
 8525              	.LBE357:
GAS LISTING /tmp/cct11Qa0.s 			page 235


 929:sieve_extend.c ****         }
 8526              		.loc 1 929 39 is_stmt 1 view .LVU2860
 8527              	.LVL427:
 8528              	.LBB360:
 8529              	.LBI357:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8530              		.loc 3 105 1 view .LVU2861
 8531              	.LBB359:
 8532              		.loc 3 107 3 view .LVU2862
 8533              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8534              		.loc 3 107 10 is_stmt 0 view .LVU2863
 8535 3468 BF0A0000 		mov	edi, 10	#,
 8535      00
 8536 346d E8000000 		call	putchar@PLT	#
 8536      00
 8537              	.LVL428:
 8538 3472 EBE8     		jmp	.L799	#
 8539              	.LVL429:
 8540              	.L778:
 8541              		.loc 3 107 10 view .LVU2864
 8542              	.LBE359:
 8543              	.LBE360:
 8544              	.LBE371:
 8545              	# sieve_extend.c:924:     counter_t primeCount = 1;    // We already have 2
 924:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 8546              		.loc 1 924 15 view .LVU2865
 8547 3474 41BF0100 		mov	r15d, 1	# primeCount,
 8547      0000
 8548 347a E97AFFFF 		jmp	.L772	#
 8548      FF
 8549              		.cfi_endproc
 8550              	.LFE5353:
 8552 347f 90       		.p2align 4
 8554              	sieve:
 8555              	.LVL430:
 8556              	.LFB5343:
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8557              		.loc 1 901 86 is_stmt 1 view -0
 8558              		.cfi_startproc
 902:sieve_extend.c ****     counter_t prime     = 0;
 8559              		.loc 1 902 5 view .LVU2867
 8560              	# sieve_extend.c:901: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8561              		.loc 1 901 86 is_stmt 0 view .LVU2868
 8562 3480 55       		push	rbp	#
 8563              		.cfi_def_cfa_offset 16
 8564              		.cfi_offset 6, -16
 8565 3481 4889E5   		mov	rbp, rsp	#,
 8566              		.cfi_def_cfa_register 6
 8567 3484 4157     		push	r15	#
 8568 3486 4156     		push	r14	#
 8569 3488 4155     		push	r13	#
 8570 348a 4154     		push	r12	#
 8571 348c 53       		push	rbx	#
 8572              		.cfi_offset 15, -24
 8573              		.cfi_offset 14, -32
 8574              		.cfi_offset 13, -40
GAS LISTING /tmp/cct11Qa0.s 			page 236


 8575              		.cfi_offset 12, -48
 8576              		.cfi_offset 3, -56
 8577 348d 4889FB   		mov	rbx, rdi	# maxints, tmp1225
 8578              	.LVL431:
 8579              	.LBB444:
 8580              	.LBI444:
  91:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 8581              		.loc 1 91 28 is_stmt 1 view .LVU2869
 8582              	.LBB445:
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8583              		.loc 1 92 5 view .LVU2870
 8584              	# sieve_extend.c:92:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8585              		.loc 1 92 33 is_stmt 0 view .LVU2871
 8586 3490 BF080000 		mov	edi, 8	#,
 8586      00
 8587              	.LVL432:
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8588              		.loc 1 92 33 view .LVU2872
 8589              	.LBE445:
 8590              	.LBE444:
 8591              	# sieve_extend.c:901: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8592              		.loc 1 901 86 view .LVU2873
 8593 3495 4883E4E0 		and	rsp, -32	#,
 8594              	.LBB449:
 8595              	.LBB446:
 8596              	# sieve_extend.c:93:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  93:sieve_extend.c **** 
 8597              		.loc 1 93 22 view .LVU2874
 8598 3499 4989DF   		mov	r15, rbx	# prephitmp_1485, maxints
 8599 349c 49D1EF   		shr	r15	# prephitmp_1485
 8600              	.LBE446:
 8601              	.LBE449:
 8602              	# sieve_extend.c:901: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8603              		.loc 1 901 86 view .LVU2875
 8604 349f 488D6424 		lea	rsp, -96[rsp]	#,
 8604      A0
 8605              	# sieve_extend.c:901: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8606              		.loc 1 901 86 view .LVU2876
 8607 34a4 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, tmp1226
 8607      10
 8608              	.LBB450:
 8609              	.LBB447:
 8610              	# sieve_extend.c:92:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8611              		.loc 1 92 33 view .LVU2877
 8612 34a9 BE180000 		mov	esi, 24	#,
 8612      00
 8613              	.LVL433:
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8614              		.loc 1 92 33 view .LVU2878
 8615 34ae E8000000 		call	aligned_alloc@PLT	#
 8615      00
 8616              	.LVL434:
GAS LISTING /tmp/cct11Qa0.s 			page 237


 8617              	# sieve_extend.c:93:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  93:sieve_extend.c **** 
 8618              		.loc 1 93 22 view .LVU2879
 8619 34b3 498DB700 		lea	rsi, 1024[r15]	# tmp585,
 8619      040000
 8620              	# sieve_extend.c:95:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  95:sieve_extend.c ****     sieve->bits     = size >> 1;
 8621              		.loc 1 95 23 view .LVU2880
 8622 34ba BF800000 		mov	edi, 128	#,
 8622      00
 8623              	# sieve_extend.c:92:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
  92:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8624              		.loc 1 92 33 view .LVU2881
 8625 34bf 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, <retval>
 8625      20
 8626 34c4 4989C6   		mov	r14, rax	# <retval>, tmp1227
 8627              	.LVL435:
  93:sieve_extend.c **** 
 8628              		.loc 1 93 5 is_stmt 1 view .LVU2882
 8629              	# sieve_extend.c:93:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  93:sieve_extend.c **** 
 8630              		.loc 1 93 22 is_stmt 0 view .LVU2883
 8631 34c7 48C1EE0A 		shr	rsi, 10	# tmp586,
 8632              	# sieve_extend.c:93:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  93:sieve_extend.c **** 
 8633              		.loc 1 93 12 view .LVU2884
 8634 34cb 48C1E607 		sal	rsi, 7	# memSize,
 8635              	# sieve_extend.c:93:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize
  93:sieve_extend.c **** 
 8636              		.loc 1 93 22 view .LVU2885
 8637 34cf 4C897C24 		mov	QWORD PTR 88[rsp], r15	# %sfp, prephitmp_1485
 8637      58
 8638              	.LVL436:
  95:sieve_extend.c ****     sieve->bits     = size >> 1;
 8639              		.loc 1 95 5 is_stmt 1 view .LVU2886
 8640              	# sieve_extend.c:95:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  95:sieve_extend.c ****     sieve->bits     = size >> 1;
 8641              		.loc 1 95 23 is_stmt 0 view .LVU2887
 8642 34d4 E8000000 		call	aligned_alloc@PLT	#
 8642      00
 8643              	.LVL437:
  95:sieve_extend.c ****     sieve->bits     = size >> 1;
 8644              		.loc 1 95 23 view .LVU2888
 8645 34d9 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, _95
 8645      18
 8646              	.LBE447:
 8647              	.LBE450:
 8648              	.LBB451:
 8649              	.LBB452:
 8650              	# sieve_extend.c:872:     for (;range_stop < block_stop;) {
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8651              		.loc 1 872 5 view .LVU2889
 8652 34de 4D85FF   		test	r15, r15	# prephitmp_1485
 8653              	.LBE452:
 8654              	.LBE451:
 8655              	.LBB519:
 8656              	.LBB448:
GAS LISTING /tmp/cct11Qa0.s 			page 238


 8657              	# sieve_extend.c:95:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (si
  95:sieve_extend.c ****     sieve->bits     = size >> 1;
 8658              		.loc 1 95 21 view .LVU2890
 8659 34e1 498906   		mov	QWORD PTR [r14], rax	# sieve_90->bitarray, _95
  96:sieve_extend.c ****     sieve->size     = size;
 8660              		.loc 1 96 5 is_stmt 1 view .LVU2891
 8661              	# sieve_extend.c:96:     sieve->bits     = size >> 1;
  96:sieve_extend.c ****     sieve->size     = size;
 8662              		.loc 1 96 21 is_stmt 0 view .LVU2892
 8663 34e4 4D897E08 		mov	QWORD PTR 8[r14], r15	# sieve_90->bits, prephitmp_1485
  97:sieve_extend.c **** 
 8664              		.loc 1 97 5 is_stmt 1 view .LVU2893
 8665              	# sieve_extend.c:97:     sieve->size     = size;
  97:sieve_extend.c **** 
 8666              		.loc 1 97 21 is_stmt 0 view .LVU2894
 8667 34e8 49895E10 		mov	QWORD PTR 16[r14], rbx	# sieve_90->size, maxints
 101:sieve_extend.c **** }
 8668              		.loc 1 101 5 is_stmt 1 view .LVU2895
 8669              	.LVL438:
 101:sieve_extend.c **** }
 8670              		.loc 1 101 5 is_stmt 0 view .LVU2896
 8671              	.LBE448:
 8672              	.LBE519:
 903:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 8673              		.loc 1 903 5 is_stmt 1 view .LVU2897
 904:sieve_extend.c **** 
 8674              		.loc 1 904 5 view .LVU2898
 906:sieve_extend.c **** 
 8675              		.loc 1 906 5 view .LVU2899
 909:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 8676              		.loc 1 909 5 view .LVU2900
 8677              	.LBB520:
 8678              	.LBI451:
 862:sieve_extend.c ****     register counter_t prime   = 0;
 8679              		.loc 1 862 21 view .LVU2901
 8680              	.LBB512:
 863:sieve_extend.c ****     counter_t patternsize_bits = 1;
 8681              		.loc 1 863 5 view .LVU2902
 864:sieve_extend.c ****     counter_t pattern_start    = 0;
 8682              		.loc 1 864 5 view .LVU2903
 865:sieve_extend.c ****     counter_t range_stop       = block_start;
 8683              		.loc 1 865 5 view .LVU2904
 866:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 8684              		.loc 1 866 5 view .LVU2905
 867:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 8685              		.loc 1 867 5 view .LVU2906
 868:sieve_extend.c **** 
 8686              		.loc 1 868 5 view .LVU2907
 870:sieve_extend.c ****     
 8687              		.loc 1 870 5 view .LVU2908
 8688              	# sieve_extend.c:870:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared;
 870:sieve_extend.c ****     
 8689              		.loc 1 870 24 is_stmt 0 view .LVU2909
 8690 34ec 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_95],
 8690      000000
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8691              		.loc 1 872 5 is_stmt 1 view .LVU2910
GAS LISTING /tmp/cct11Qa0.s 			page 239


 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8692              		.loc 1 872 11 view .LVU2911
 8693              	# sieve_extend.c:872:     for (;range_stop < block_stop;) {
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8694              		.loc 1 872 5 is_stmt 0 view .LVU2912
 8695 34f3 0F84F71B 		je	.L1433	#,
 8695      0000
 8696              	.LBB453:
 8697              	# sieve_extend.c:873:         prime = searchBitFalse(bitarray, prime+1);
 873:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 8698              		.loc 1 873 17 view .LVU2913
 8699 34f9 B8010000 		mov	eax, 1	# index,
 8699      00
 8700              	.LVL439:
 873:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 8701              		.loc 1 873 17 view .LVU2914
 8702              	.LBE453:
 8703              	# sieve_extend.c:863:     register counter_t prime   = 0;
 863:sieve_extend.c ****     counter_t patternsize_bits = 1;
 8704              		.loc 1 863 24 view .LVU2915
 8705 34fe 31C9     		xor	ecx, ecx	# prime
 8706              	.LBB503:
 8707              	# sieve_extend.c:878:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 878:sieve_extend.c **** 
 8708              		.loc 1 878 102 view .LVU2916
 8709 3500 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, index
 8709      50
 8710              	.LBE503:
 8711              	# sieve_extend.c:868:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 868:sieve_extend.c **** 
 8712              		.loc 1 868 18 view .LVU2917
 8713 3505 31F6     		xor	esi, esi	# block$pattern_start
 8714              	# sieve_extend.c:865:     counter_t pattern_start    = 0;
 865:sieve_extend.c ****     counter_t range_stop       = block_start;
 8715              		.loc 1 865 15 view .LVU2918
 8716 3507 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 8716      48000000 
 8716      00
 8717              	# sieve_extend.c:868:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 868:sieve_extend.c **** 
 8718              		.loc 1 868 18 view .LVU2919
 8719 3510 31D2     		xor	edx, edx	# block$pattern_size
 8720              	.LBB504:
 8721              	# sieve_extend.c:878:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 878:sieve_extend.c **** 
 8722              		.loc 1 878 102 view .LVU2920
 8723 3512 4C8B7424 		mov	r14, QWORD PTR 24[rsp]	# _95, %sfp
 8723      18
 8724              	.LVL440:
 878:sieve_extend.c **** 
 8725              		.loc 1 878 102 view .LVU2921
 8726              	.LBE504:
 8727              	# sieve_extend.c:864:     counter_t patternsize_bits = 1;
 864:sieve_extend.c ****     counter_t pattern_start    = 0;
 8728              		.loc 1 864 15 view .LVU2922
 8729 3517 41BF0100 		mov	r15d, 1	# patternsize_bits,
 8729      0000
GAS LISTING /tmp/cct11Qa0.s 			page 240


 8730              	.LVL441:
 864:sieve_extend.c ****     counter_t pattern_start    = 0;
 8731              		.loc 1 864 15 view .LVU2923
 8732 351d 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	# index, %sfp
 8732      50
 8733              	.LVL442:
 8734 3522 66662E0F 		.p2align 4
 8734      1F840000 
 8734      0000000F 
 8734      1F00
 8735              		.p2align 3
 8736              	.L803:
 8737              	.LBB505:
 8738              	.LBB454:
 8739              	.LBB455:
 112:sieve_extend.c **** }
 8740              		.loc 1 112 5 is_stmt 1 view .LVU2924
 112:sieve_extend.c **** }
 8741              		.loc 1 112 5 is_stmt 0 view .LVU2925
 8742              	.LBE455:
 8743              	.LBE454:
 874:sieve_extend.c ****         if unlikely(start > block_stop) break;
 8744              		.loc 1 874 9 is_stmt 1 view .LVU2926
 8745              	# sieve_extend.c:874:         counter_t start = prime * prime * 2 + prime * 2;
 874:sieve_extend.c ****         if unlikely(start > block_stop) break;
 8746              		.loc 1 874 45 is_stmt 0 view .LVU2927
 8747 3530 488D5F01 		lea	rbx, 1[rdi]	# index,
 8748 3534 4C8D2C3F 		lea	r13, [rdi+rdi]	# _947,
 8749              	# sieve_extend.c:874:         counter_t start = prime * prime * 2 + prime * 2;
 874:sieve_extend.c ****         if unlikely(start > block_stop) break;
 8750              		.loc 1 874 19 view .LVU2928
 8751 3538 4989DC   		mov	r12, rbx	# index, index
 8752 353b 4D0FAFE5 		imul	r12, r13	# index, _947
 8753              	.LVL443:
 875:sieve_extend.c **** 
 8754              		.loc 1 875 9 is_stmt 1 view .LVU2929
 8755              	# sieve_extend.c:875:         if unlikely(start > block_stop) break;
 875:sieve_extend.c **** 
 8756              		.loc 1 875 12 is_stmt 0 view .LVU2930
 8757 353f 4C3B6424 		cmp	r12, QWORD PTR 88[rsp]	# index, %sfp
 8757      58
 8758 3544 0F87580B 		ja	.L1434	#,
 8758      0000
 877:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 8759              		.loc 1 877 9 is_stmt 1 view .LVU2931
 8760              	# sieve_extend.c:877:         const counter_t step  = prime * 2 + 1;
 877:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 8761              		.loc 1 877 25 is_stmt 0 view .LVU2932
 8762 354a 4983C501 		add	r13, 1	# step,
 8763              	.LVL444:
 878:sieve_extend.c **** 
 8764              		.loc 1 878 9 is_stmt 1 view .LVU2933
 8765              	# sieve_extend.c:878:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 878:sieve_extend.c **** 
 8766              		.loc 1 878 12 is_stmt 0 view .LVU2934
 8767 354e 4885DB   		test	rbx, rbx	# index
 8768 3551 7516     		jne	.L809	#,
GAS LISTING /tmp/cct11Qa0.s 			page 241


 878:sieve_extend.c **** 
 8769              		.loc 1 878 41 is_stmt 1 view .LVU2935
 8770              	# sieve_extend.c:878:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 878:sieve_extend.c **** 
 8771              		.loc 1 878 102 is_stmt 0 view .LVU2936
 8772 3553 48C7C0FF 		mov	rax, -1	# tmp602,
 8772      FFFFFF
 8773 355a 31D2     		xor	edx, edx	# tmp601
 8774 355c 49F7F5   		div	r13	# step
 8775              	# sieve_extend.c:878:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 878:sieve_extend.c **** 
 8776              		.loc 1 878 47 view .LVU2937
 8777 355f 49C7C4FE 		mov	r12, -2	# tmp603,
 8777      FFFFFF
 8778              	.LVL445:
 878:sieve_extend.c **** 
 8779              		.loc 1 878 47 view .LVU2938
 8780 3566 4929D4   		sub	r12, rdx	# index, tmp601
 8781              	.LVL446:
 8782              	.L809:
 880:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 8783              		.loc 1 880 9 is_stmt 1 view .LVU2939
 8784              	# sieve_extend.c:880:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 880:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 8785              		.loc 1 880 53 is_stmt 0 view .LVU2940
 8786 3569 4C89EE   		mov	rsi, r13	# _68, step
 8787 356c 490FAFF7 		imul	rsi, r15	# _68, patternsize_bits
 8788 3570 48897424 		mov	QWORD PTR 56[rsp], rsi	# %sfp, _68
 8788      38
 8789              	# sieve_extend.c:880:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 880:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 8790              		.loc 1 880 60 view .LVU2941
 8791 3575 4C8D0436 		lea	r8, [rsi+rsi]	# _69,
 8792              	.LVL447:
 881:sieve_extend.c ****         block.pattern_start = pattern_start;
 8793              		.loc 1 881 9 is_stmt 1 view .LVU2942
 882:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 8794              		.loc 1 882 9 view .LVU2943
 883:sieve_extend.c **** 
 8795              		.loc 1 883 9 view .LVU2944
 8796              	# sieve_extend.c:883:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 883:sieve_extend.c **** 
 8797              		.loc 1 883 12 is_stmt 0 view .LVU2945
 8798 3579 4C3B4424 		cmp	r8, QWORD PTR 88[rsp]	# _69, %sfp
 8798      58
 8799 357e 0F87451B 		ja	.L1435	#,
 8799      0000
 885:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 8800              		.loc 1 885 9 is_stmt 1 view .LVU2946
 8801 3584 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	# pattern_start, %sfp
 8801      48
 8802              	# sieve_extend.c:885:         if (patternsize_bits>1) {
 885:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 8803              		.loc 1 885 12 is_stmt 0 view .LVU2947
 8804 3589 4983FF01 		cmp	r15, 1	# patternsize_bits,
 8805 358d 4C894C24 		mov	QWORD PTR 64[rsp], r9	# %sfp, pattern_start
 8805      40
GAS LISTING /tmp/cct11Qa0.s 			page 242


 8806 3592 0F873801 		ja	.L1436	#,
 8806      0000
 8807              	.LVL448:
 8808              	.L812:
 889:sieve_extend.c **** 
 8809              		.loc 1 889 9 is_stmt 1 view .LVU2948
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 8810              		.loc 1 891 9 view .LVU2949
 8811              	# sieve_extend.c:891:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 8812              		.loc 1 891 17 is_stmt 0 view .LVU2950
 8813 3598 4983FD01 		cmp	r13, 1	# step,
 8814 359c 0F868E01 		jbe	.L1437	#,
 8814      0000
 8815              	.LVL449:
 8816              	.L816:
 892:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 8817              		.loc 1 892 14 is_stmt 1 view .LVU2951
 8818              	# sieve_extend.c:892:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarra
 892:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 8819              		.loc 1 892 17 is_stmt 0 view .LVU2952
 8820 35a2 4983FD3F 		cmp	r13, 63	# step,
 8821 35a6 0F860407 		jbe	.L1438	#,
 8821      0000
 893:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 8822              		.loc 1 893 14 is_stmt 1 view .LVU2953
 8823              	# sieve_extend.c:893:         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(
 893:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 8824              		.loc 1 893 17 is_stmt 0 view .LVU2954
 8825 35ac 4981FDFF 		cmp	r13, 255	# step,
 8825      000000
 8826 35b3 0F87D704 		ja	.L843	#,
 8826      0000
 893:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 8827              		.loc 1 893 48 is_stmt 1 view .LVU2955
 8828 35b9 4C89C1   		mov	rcx, r8	#, _69
 8829 35bc 4C89EA   		mov	rdx, r13	#, step
 8830 35bf 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, _69
 8830      30
 8831 35c4 4C89E6   		mov	rsi, r12	#, index
 8832 35c7 4C89F7   		mov	rdi, r14	#, _95
 8833 35ca C5F877   		vzeroupper
 8834 35cd E84EDFFF 		call	setBitsTrue_largeRange_vector	#
 8834      FF
 8835              	.LVL450:
 8836 35d2 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# _69, %sfp
 8836      30
 8837              	.LVL451:
 8838              	.L819:
 893:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 8839              		.loc 1 893 48 is_stmt 0 view .LVU2956
 8840              	.LBE505:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8841              		.loc 1 872 11 is_stmt 1 view .LVU2957
 8842              	# sieve_extend.c:872:     for (;range_stop < block_stop;) {
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8843              		.loc 1 872 5 is_stmt 0 view .LVU2958
GAS LISTING /tmp/cct11Qa0.s 			page 243


 8844 35d7 4C3B4424 		cmp	r8, QWORD PTR 88[rsp]	# _69, %sfp
 8844      58
 8845 35dc 0F836904 		jnb	.L1439	#,
 8845      0000
 8846              	.LVL452:
 8847              	.L850:
 8848              	.LBB506:
 873:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 8849              		.loc 1 873 9 is_stmt 1 view .LVU2959
 8850              	.LBB457:
 8851              	.LBI454:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 8852              		.loc 1 110 25 view .LVU2960
 8853              	.LBB456:
 111:sieve_extend.c ****     return index;
 8854              		.loc 1 111 5 view .LVU2961
 111:sieve_extend.c ****     return index;
 8855              		.loc 1 111 11 view .LVU2962
 8856              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8857              		.loc 1 111 21 is_stmt 0 view .LVU2963
 8858 35e2 4889D8   		mov	rax, rbx	# tmp589, index
 8859 35e5 48C1E806 		shr	rax, 6	# tmp589,
 8860              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8861              		.loc 1 111 12 view .LVU2964
 8862 35e9 4D8B14C6 		mov	r10, QWORD PTR [r14+rax*8]	# *_937,* _95
 8863              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8864              		.loc 1 111 11 view .LVU2965
 8865 35ed 490FA3DA 		bt	r10, rbx	# *_937, index
 8866 35f1 0F83A900 		jnc	.L805	#,
 8866      0000
 111:sieve_extend.c ****     return index;
 8867              		.loc 1 111 58 is_stmt 1 view .LVU2966
 8868              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8869              		.loc 1 111 63 is_stmt 0 view .LVU2967
 8870 35f7 4C8D6B01 		lea	r13, 1[rbx]	# tmp893,
 8871              	.LVL453:
 8872              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8873              		.loc 1 111 21 view .LVU2968
 8874 35fb 4D89EB   		mov	r11, r13	# tmp594, index
 8875              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8876              		.loc 1 111 63 view .LVU2969
 8877 35fe 4C89EB   		mov	rbx, r13	# index, tmp893
 111:sieve_extend.c ****     return index;
 8878              		.loc 1 111 11 is_stmt 1 view .LVU2970
 8879              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8880              		.loc 1 111 21 is_stmt 0 view .LVU2971
 8881 3601 49C1EB06 		shr	r11, 6	# tmp594,
 8882              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8883              		.loc 1 111 12 view .LVU2972
GAS LISTING /tmp/cct11Qa0.s 			page 244


 8884 3605 4F8B24DE 		mov	r12, QWORD PTR [r14+r11*8]	# *_49, *_49
 8885              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8886              		.loc 1 111 11 view .LVU2973
 8887 3609 4D0FA3EC 		bt	r12, r13	# *_49, index
 8888 360d 0F838D00 		jnc	.L805	#,
 8888      0000
 111:sieve_extend.c ****     return index;
 8889              		.loc 1 111 58 is_stmt 1 view .LVU2974
 8890              	.LVL454:
 8891              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8892              		.loc 1 111 63 is_stmt 0 view .LVU2975
 8893 3613 4883C301 		add	rbx, 1	# index,
 8894              	.LVL455:
 111:sieve_extend.c ****     return index;
 8895              		.loc 1 111 11 is_stmt 1 view .LVU2976
 8896              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8897              		.loc 1 111 21 is_stmt 0 view .LVU2977
 8898 3617 4889DA   		mov	rdx, rbx	# tmp1137, index
 8899 361a 48C1EA06 		shr	rdx, 6	# tmp1137,
 8900              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8901              		.loc 1 111 12 view .LVU2978
 8902 361e 498B3CD6 		mov	rdi, QWORD PTR [r14+rdx*8]	# *_49, *_49
 8903              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8904              		.loc 1 111 11 view .LVU2979
 8905 3622 480FA3DF 		bt	rdi, rbx	# *_49, index
 8906 3626 7378     		jnc	.L805	#,
 111:sieve_extend.c ****     return index;
 8907              		.loc 1 111 58 is_stmt 1 view .LVU2980
 8908              	.LVL456:
 8909              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8910              		.loc 1 111 63 is_stmt 0 view .LVU2981
 8911 3628 498D5D02 		lea	rbx, 2[r13]	# index,
 8912              	.LVL457:
 111:sieve_extend.c ****     return index;
 8913              		.loc 1 111 11 is_stmt 1 view .LVU2982
 8914              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8915              		.loc 1 111 21 is_stmt 0 view .LVU2983
 8916 362c 4989D9   		mov	r9, rbx	# tmp1141, index
 8917 362f 49C1E906 		shr	r9, 6	# tmp1141,
 8918              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8919              		.loc 1 111 12 view .LVU2984
 8920 3633 4B8B0CCE 		mov	rcx, QWORD PTR [r14+r9*8]	# *_49, *_49
 8921              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8922              		.loc 1 111 11 view .LVU2985
 8923 3637 480FA3D9 		bt	rcx, rbx	# *_49, index
 8924 363b 7363     		jnc	.L805	#,
 111:sieve_extend.c ****     return index;
 8925              		.loc 1 111 58 is_stmt 1 view .LVU2986
GAS LISTING /tmp/cct11Qa0.s 			page 245


 8926              	.LVL458:
 8927              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8928              		.loc 1 111 63 is_stmt 0 view .LVU2987
 8929 363d 498D5D03 		lea	rbx, 3[r13]	# index,
 8930              	.LVL459:
 111:sieve_extend.c ****     return index;
 8931              		.loc 1 111 11 is_stmt 1 view .LVU2988
 8932              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8933              		.loc 1 111 21 is_stmt 0 view .LVU2989
 8934 3641 4889DE   		mov	rsi, rbx	# tmp1145, index
 8935 3644 48C1EE06 		shr	rsi, 6	# tmp1145,
 8936              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8937              		.loc 1 111 12 view .LVU2990
 8938 3648 4D8B04F6 		mov	r8, QWORD PTR [r14+rsi*8]	# *_49, *_49
 8939              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8940              		.loc 1 111 11 view .LVU2991
 8941 364c 490FA3D8 		bt	r8, rbx	# *_49, index
 8942 3650 734E     		jnc	.L805	#,
 111:sieve_extend.c ****     return index;
 8943              		.loc 1 111 58 is_stmt 1 view .LVU2992
 8944              	.LVL460:
 8945              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8946              		.loc 1 111 63 is_stmt 0 view .LVU2993
 8947 3652 498D5D04 		lea	rbx, 4[r13]	# index,
 8948              	.LVL461:
 111:sieve_extend.c ****     return index;
 8949              		.loc 1 111 11 is_stmt 1 view .LVU2994
 8950              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8951              		.loc 1 111 21 is_stmt 0 view .LVU2995
 8952 3656 4889D8   		mov	rax, rbx	# tmp1149, index
 8953 3659 48C1E806 		shr	rax, 6	# tmp1149,
 8954              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8955              		.loc 1 111 12 view .LVU2996
 8956 365d 4D8B14C6 		mov	r10, QWORD PTR [r14+rax*8]	# *_49, *_49
 8957              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8958              		.loc 1 111 11 view .LVU2997
 8959 3661 490FA3DA 		bt	r10, rbx	# *_49, index
 8960 3665 7339     		jnc	.L805	#,
 111:sieve_extend.c ****     return index;
 8961              		.loc 1 111 58 is_stmt 1 view .LVU2998
 8962              	.LVL462:
 8963              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8964              		.loc 1 111 63 is_stmt 0 view .LVU2999
 8965 3667 498D5D05 		lea	rbx, 5[r13]	# index,
 8966              	.LVL463:
 111:sieve_extend.c ****     return index;
 8967              		.loc 1 111 11 is_stmt 1 view .LVU3000
 8968              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cct11Qa0.s 			page 246


 111:sieve_extend.c ****     return index;
 8969              		.loc 1 111 21 is_stmt 0 view .LVU3001
 8970 366b 4989DB   		mov	r11, rbx	# tmp1153, index
 8971 366e 49C1EB06 		shr	r11, 6	# tmp1153,
 8972              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8973              		.loc 1 111 12 view .LVU3002
 8974 3672 4F8B24DE 		mov	r12, QWORD PTR [r14+r11*8]	# *_49, *_49
 8975              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8976              		.loc 1 111 11 view .LVU3003
 8977 3676 490FA3DC 		bt	r12, rbx	# *_49, index
 8978 367a 7324     		jnc	.L805	#,
 111:sieve_extend.c ****     return index;
 8979              		.loc 1 111 58 is_stmt 1 view .LVU3004
 8980              	.LVL464:
 8981              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8982              		.loc 1 111 63 is_stmt 0 view .LVU3005
 8983 367c 498D5D06 		lea	rbx, 6[r13]	# index,
 8984              	.LVL465:
 111:sieve_extend.c ****     return index;
 8985              		.loc 1 111 11 is_stmt 1 view .LVU3006
 8986              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8987              		.loc 1 111 21 is_stmt 0 view .LVU3007
 8988 3680 4889DA   		mov	rdx, rbx	# tmp1157, index
 8989 3683 48C1EA06 		shr	rdx, 6	# tmp1157,
 8990              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8991              		.loc 1 111 12 view .LVU3008
 8992 3687 498B3CD6 		mov	rdi, QWORD PTR [r14+rdx*8]	# *_49, *_49
 8993              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 8994              		.loc 1 111 11 view .LVU3009
 8995 368b 480FA3DF 		bt	rdi, rbx	# *_49, index
 8996 368f 730F     		jnc	.L805	#,
 111:sieve_extend.c ****     return index;
 8997              		.loc 1 111 58 is_stmt 1 view .LVU3010
 8998              	.LVL466:
 8999              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 9000              		.loc 1 111 63 is_stmt 0 view .LVU3011
 9001 3691 498D5D07 		lea	rbx, 7[r13]	# index,
 9002              	.LVL467:
 111:sieve_extend.c ****     return index;
 9003              		.loc 1 111 11 is_stmt 1 view .LVU3012
 9004 3695 E948FFFF 		jmp	.L850	#
 9004      FF
 9005              	.LVL468:
 9006 369a 660F1F44 		.p2align 4,,7
 9006      0000
 9007              		.p2align 3
 9008              	.L805:
 111:sieve_extend.c ****     return index;
 9009              		.loc 1 111 11 is_stmt 0 view .LVU3013
 9010              	.LBE456:
GAS LISTING /tmp/cct11Qa0.s 			page 247


 9011              	.LBE457:
 9012              	.LBE506:
 9013              	.LBE512:
 9014              	.LBE520:
 9015              	# sieve_extend.c:901: static struct sieve_state *sieve(const counter_t maxints, const counter_t blo
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9016              		.loc 1 901 86 view .LVU3014
 9017 36a0 4C8B6C24 		mov	r13, QWORD PTR 64[rsp]	# pattern_start, %sfp
 9017      40
 9018 36a5 4C89FA   		mov	rdx, r15	# block$pattern_size, patternsize_bits
 9019 36a8 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# prime, %sfp
 9019      50
 9020 36ad 4889DF   		mov	rdi, rbx	# index, index
 9021 36b0 488B7424 		mov	rsi, QWORD PTR 72[rsp]	# block$pattern_start, %sfp
 9021      48
 9022              	.LVL469:
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9023              		.loc 1 901 86 view .LVU3015
 9024 36b5 4C8B7C24 		mov	r15, QWORD PTR 56[rsp]	# patternsize_bits, %sfp
 9024      38
 901:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9025              		.loc 1 901 86 view .LVU3016
 9026 36ba 48895C24 		mov	QWORD PTR 80[rsp], rbx	# %sfp, index
 9026      50
 9027 36bf 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, pattern_start
 9027      48
 9028 36c4 E967FEFF 		jmp	.L803	#
 9028      FF
 9029              	.LVL470:
 9030 36c9 0F1F8000 		.p2align 4,,7
 9030      000000
 9031              		.p2align 3
 9032              	.L1436:
 9033              	.LBB521:
 9034              	.LBB513:
 9035              	.LBB507:
 886:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 9036              		.loc 1 886 13 is_stmt 1 view .LVU3017
 887:sieve_extend.c ****         }
 9037              		.loc 1 887 13 view .LVU3018
 9038              	.LBB458:
 9039              	.LBI458:
 766:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9040              		.loc 1 766 20 view .LVU3019
 9041              	.LBB459:
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9042              		.loc 1 767 5 view .LVU3020
 9043              	# sieve_extend.c:767:     if (size < WORD_SIZE_counter)   {
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9044              		.loc 1 767 8 is_stmt 0 view .LVU3021
 9045 36d0 4983FF3F 		cmp	r15, 63	# patternsize_bits,
 9046 36d4 0F86BA19 		jbe	.L1440	#,
 9046      0000
 772:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9047              		.loc 1 772 5 is_stmt 1 view .LVU3022
 9048              	.LVL471:
 773:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
GAS LISTING /tmp/cct11Qa0.s 			page 248


 9049              		.loc 1 773 5 view .LVU3023
 9050              	# sieve_extend.c:772:     const counter_t copy_start  = source_start + size;
 772:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9051              		.loc 1 772 21 is_stmt 0 view .LVU3024
 9052 36da 4F8D143F 		lea	r10, [r15+r15]	# copy_start,
 9053              	# sieve_extend.c:774:     const bitshift_t source_bit = bitindex_calc(source_start);
 774:sieve_extend.c **** 
 9054              		.loc 1 774 22 view .LVU3025
 9055 36de 4D89FB   		mov	r11, r15	# source_bit, patternsize_bits
 9056              	# sieve_extend.c:773:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 773:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9057              		.loc 1 773 22 view .LVU3026
 9058 36e1 4183E23F 		and	r10d, 63	# copy_bit,
 9059              	.LVL472:
 774:sieve_extend.c **** 
 9060              		.loc 1 774 5 is_stmt 1 view .LVU3027
 9061              	# sieve_extend.c:774:     const bitshift_t source_bit = bitindex_calc(source_start);
 774:sieve_extend.c **** 
 9062              		.loc 1 774 22 is_stmt 0 view .LVU3028
 9063 36e5 4183E33F 		and	r11d, 63	# source_bit,
 9064              	.LVL473:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9065              		.loc 1 776 5 is_stmt 1 view .LVU3029
 9066              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9067              		.loc 1 776 13 is_stmt 0 view .LVU3030
 9068 36e9 4D39DA   		cmp	r10, r11	# copy_bit, source_bit
 9069              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9070              		.loc 1 776 37 view .LVU3031
 9071 36ec 4C89C1   		mov	rcx, r8	#, _69
 9072 36ef 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, _69
 9072      30
 9073 36f4 4C89FA   		mov	rdx, r15	#, patternsize_bits
 9074 36f7 4C89FE   		mov	rsi, r15	#, patternsize_bits
 9075 36fa 4C89F7   		mov	rdi, r14	#, _95
 9076              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9077              		.loc 1 776 13 view .LVU3032
 9078 36fd 0F824B0B 		jb	.L1441	#,
 9078      0000
 9079              	.LVL474:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9080              		.loc 1 777 10 is_stmt 1 view .LVU3033
 9081              	# sieve_extend.c:777:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9082              		.loc 1 777 13 is_stmt 0 view .LVU3034
 9083 3703 0F862E0B 		jbe	.L815	#,
 9083      0000
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9084              		.loc 1 777 37 is_stmt 1 view .LVU3035
 9085 3709 C5F877   		vzeroupper
 9086 370c E8BFCFFF 		call	extendSieve_shiftright_ivdep	#
 9086      FF
 9087              	.LVL475:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9088              		.loc 1 777 37 is_stmt 0 view .LVU3036
GAS LISTING /tmp/cct11Qa0.s 			page 249


 9089 3711 4C897C24 		mov	QWORD PTR 64[rsp], r15	# %sfp, patternsize_bits
 9089      40
 9090              	.LBE459:
 9091              	.LBE458:
 9092              	# sieve_extend.c:891:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9093              		.loc 1 891 17 view .LVU3037
 9094 3716 4983FD01 		cmp	r13, 1	# step,
 9095              	.LBB463:
 9096              	.LBB460:
 9097 371a 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# _69, %sfp
 9097      30
 9098              	.LVL476:
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9099              		.loc 1 891 17 view .LVU3038
 9100              	.LBE460:
 9101              	.LBE463:
 889:sieve_extend.c **** 
 9102              		.loc 1 889 9 is_stmt 1 view .LVU3039
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9103              		.loc 1 891 9 view .LVU3040
 9104              	# sieve_extend.c:891:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 891:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9105              		.loc 1 891 17 is_stmt 0 view .LVU3041
 9106 371f 0F877DFE 		ja	.L816	#,
 9106      FFFF
 9107              	.LVL477:
 9108 3725 66662E0F 		.p2align 4
 9108      1F840000 
 9108      000000
 9109              		.p2align 3
 9110              	.L1437:
 9111              	.LBB464:
 9112              	.LBB465:
 9113              	# sieve_extend.c:226: 	register bitword_t pattern = SAFE_SHIFTBIT;
 226:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 9114              		.loc 1 226 21 view .LVU3042
 9115 3730 B8010000 		mov	eax, 1	# pattern,
 9115      00
 9116              	.LVL478:
 9117              	.L817:
 9118              	.LBB466:
 228:sieve_extend.c **** 
 9119              		.loc 1 228 9 is_stmt 1 view .LVU3043
 9120              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9121              		.loc 1 227 88 is_stmt 0 view .LVU3044
 9122 3735 4B8D4C2D 		lea	rcx, [r13+r13]	# step,
 9122      00
 9123              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9124              		.loc 1 228 29 view .LVU3045
 9125 373a C4E291F7 		shlx	rdi, rax, r13	# _103, pattern, step
 9125      F8
 9126              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9127              		.loc 1 228 17 view .LVU3046
GAS LISTING /tmp/cct11Qa0.s 			page 250


 9128 373f 4809F8   		or	rax, rdi	# pattern, _103
 9129              	.LVL479:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9130              		.loc 1 227 76 is_stmt 1 view .LVU3047
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9131              		.loc 1 227 41 view .LVU3048
 9132              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9133              		.loc 1 227 5 is_stmt 0 view .LVU3049
 9134 3742 4883F940 		cmp	rcx, 64	# step,
 9135 3746 0F87A400 		ja	.L1304	#,
 9135      0000
 228:sieve_extend.c **** 
 9136              		.loc 1 228 9 is_stmt 1 view .LVU3050
 9137              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9138              		.loc 1 227 88 is_stmt 0 view .LVU3051
 9139 374c 4E8D1CAD 		lea	r11, 0[0+r13*4]	# step,
 9139      00000000 
 9140              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9141              		.loc 1 228 29 view .LVU3052
 9142 3754 C462F1F7 		shlx	r9, rax, rcx	# _103, pattern, step
 9142      C8
 9143              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9144              		.loc 1 228 17 view .LVU3053
 9145 3759 4C09C8   		or	rax, r9	# pattern, _103
 9146              	.LVL480:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9147              		.loc 1 227 76 is_stmt 1 view .LVU3054
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9148              		.loc 1 227 41 view .LVU3055
 9149              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9150              		.loc 1 227 5 is_stmt 0 view .LVU3056
 9151 375c 4983FB40 		cmp	r11, 64	# step,
 9152 3760 0F878A00 		ja	.L1304	#,
 9152      0000
 228:sieve_extend.c **** 
 9153              		.loc 1 228 9 is_stmt 1 view .LVU3057
 9154              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9155              		.loc 1 227 88 is_stmt 0 view .LVU3058
 9156 3766 4A8D34ED 		lea	rsi, 0[0+r13*8]	# step,
 9156      00000000 
 9157              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9158              		.loc 1 228 29 view .LVU3059
 9159 376e C4E2A1F7 		shlx	rdx, rax, r11	# _103, pattern, step
 9159      D0
 9160              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9161              		.loc 1 228 17 view .LVU3060
 9162 3773 4809D0   		or	rax, rdx	# pattern, _103
 9163              	.LVL481:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
GAS LISTING /tmp/cct11Qa0.s 			page 251


 9164              		.loc 1 227 76 is_stmt 1 view .LVU3061
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9165              		.loc 1 227 41 view .LVU3062
 9166              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9167              		.loc 1 227 5 is_stmt 0 view .LVU3063
 9168 3776 4883FE40 		cmp	rsi, 64	# step,
 9169 377a 7774     		ja	.L1304	#,
 228:sieve_extend.c **** 
 9170              		.loc 1 228 9 is_stmt 1 view .LVU3064
 9171              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9172              		.loc 1 227 88 is_stmt 0 view .LVU3065
 9173 377c 4C89EF   		mov	rdi, r13	# step, step
 9174              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9175              		.loc 1 228 29 view .LVU3066
 9176 377f C462C9F7 		shlx	r10, rax, rsi	# _103, pattern, step
 9176      D0
 9177              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9178              		.loc 1 227 88 view .LVU3067
 9179 3784 48C1E704 		sal	rdi, 4	# step,
 9180              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9181              		.loc 1 228 17 view .LVU3068
 9182 3788 4C09D0   		or	rax, r10	# pattern, _103
 9183              	.LVL482:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9184              		.loc 1 227 76 is_stmt 1 view .LVU3069
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9185              		.loc 1 227 41 view .LVU3070
 9186              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9187              		.loc 1 227 5 is_stmt 0 view .LVU3071
 9188 378b 4883FF40 		cmp	rdi, 64	# step,
 9189 378f 775F     		ja	.L1304	#,
 228:sieve_extend.c **** 
 9190              		.loc 1 228 9 is_stmt 1 view .LVU3072
 9191              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9192              		.loc 1 227 88 is_stmt 0 view .LVU3073
 9193 3791 4D89E9   		mov	r9, r13	# step, step
 9194              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9195              		.loc 1 228 29 view .LVU3074
 9196 3794 C4E2C1F7 		shlx	rcx, rax, rdi	# _103, pattern, step
 9196      C8
 9197              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9198              		.loc 1 227 88 view .LVU3075
 9199 3799 49C1E105 		sal	r9, 5	# step,
 9200              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9201              		.loc 1 228 17 view .LVU3076
 9202 379d 4809C8   		or	rax, rcx	# pattern, _103
 9203              	.LVL483:
GAS LISTING /tmp/cct11Qa0.s 			page 252


 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9204              		.loc 1 227 76 is_stmt 1 view .LVU3077
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9205              		.loc 1 227 41 view .LVU3078
 9206              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9207              		.loc 1 227 5 is_stmt 0 view .LVU3079
 9208 37a0 4983F940 		cmp	r9, 64	# step,
 9209 37a4 774A     		ja	.L1304	#,
 228:sieve_extend.c **** 
 9210              		.loc 1 228 9 is_stmt 1 view .LVU3080
 9211              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9212              		.loc 1 227 88 is_stmt 0 view .LVU3081
 9213 37a6 4C89EA   		mov	rdx, r13	# step, step
 9214              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9215              		.loc 1 228 29 view .LVU3082
 9216 37a9 C462B1F7 		shlx	r11, rax, r9	# _103, pattern, step
 9216      D8
 9217              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9218              		.loc 1 227 88 view .LVU3083
 9219 37ae 48C1E206 		sal	rdx, 6	# step,
 9220              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9221              		.loc 1 228 17 view .LVU3084
 9222 37b2 4C09D8   		or	rax, r11	# pattern, _103
 9223              	.LVL484:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9224              		.loc 1 227 76 is_stmt 1 view .LVU3085
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9225              		.loc 1 227 41 view .LVU3086
 9226              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9227              		.loc 1 227 5 is_stmt 0 view .LVU3087
 9228 37b5 4883FA40 		cmp	rdx, 64	# step,
 9229 37b9 7735     		ja	.L1304	#,
 228:sieve_extend.c **** 
 9230              		.loc 1 228 9 is_stmt 1 view .LVU3088
 9231              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9232              		.loc 1 227 88 is_stmt 0 view .LVU3089
 9233 37bb 4D89EA   		mov	r10, r13	# step, step
 9234              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9235              		.loc 1 228 29 view .LVU3090
 9236 37be C4E2E9F7 		shlx	rsi, rax, rdx	# _103, pattern, step
 9236      F0
 9237              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9238              		.loc 1 227 88 view .LVU3091
 9239 37c3 49C1E207 		sal	r10, 7	# step,
 9240              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9241              		.loc 1 228 17 view .LVU3092
 9242 37c7 4809F0   		or	rax, rsi	# pattern, _103
GAS LISTING /tmp/cct11Qa0.s 			page 253


 9243              	.LVL485:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9244              		.loc 1 227 76 is_stmt 1 view .LVU3093
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9245              		.loc 1 227 41 view .LVU3094
 9246              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9247              		.loc 1 227 5 is_stmt 0 view .LVU3095
 9248 37ca 4983FA40 		cmp	r10, 64	# step,
 9249 37ce 7720     		ja	.L1304	#,
 228:sieve_extend.c **** 
 9250              		.loc 1 228 9 is_stmt 1 view .LVU3096
 9251              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9252              		.loc 1 227 88 is_stmt 0 view .LVU3097
 9253 37d0 49C1E508 		sal	r13, 8	# step,
 9254              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9255              		.loc 1 228 29 view .LVU3098
 9256 37d4 C4E2A9F7 		shlx	rdi, rax, r10	# _103, pattern, step
 9256      F8
 9257              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 9258              		.loc 1 228 17 view .LVU3099
 9259 37d9 4809F8   		or	rax, rdi	# pattern, _103
 9260              	.LVL486:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9261              		.loc 1 227 76 is_stmt 1 view .LVU3100
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9262              		.loc 1 227 41 view .LVU3101
 9263              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9264              		.loc 1 227 5 is_stmt 0 view .LVU3102
 9265 37dc 4983FD40 		cmp	r13, 64	# step,
 9266 37e0 0F864FFF 		jbe	.L817	#,
 9266      FFFF
 9267              	.LVL487:
 9268 37e6 662E0F1F 		.p2align 4
 9268      84000000 
 9268      0000
 9269              		.p2align 3
 9270              	.L1304:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9271              		.loc 1 227 5 view .LVU3103
 9272              	.LBE466:
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 9273              		.loc 1 231 5 is_stmt 1 view .LVU3104
 9274              	# sieve_extend.c:232:     register counter_t copy_word = wordindex(range_start);
 232:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 9275              		.loc 1 232 24 is_stmt 0 view .LVU3105
 9276 37f0 4C89E2   		mov	rdx, r12	# copy_word, index
 9277              	# sieve_extend.c:231:     const counter_t range_stop_word = wordindex(range_stop);
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 9278              		.loc 1 231 21 view .LVU3106
 9279 37f3 4D89C2   		mov	r10, r8	# range_stop_word, _69
 9280              	# sieve_extend.c:232:     register counter_t copy_word = wordindex(range_start);
 232:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
GAS LISTING /tmp/cct11Qa0.s 			page 254


 9281              		.loc 1 232 24 view .LVU3107
 9282 37f6 48C1EA06 		shr	rdx, 6	# copy_word,
 9283 37fa 4589C5   		mov	r13d, r8d	# tmp607, _69
 9284              	# sieve_extend.c:231:     const counter_t range_stop_word = wordindex(range_stop);
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 9285              		.loc 1 231 21 view .LVU3108
 9286 37fd 49C1EA06 		shr	r10, 6	# range_stop_word,
 9287              	.LVL488:
 232:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 9288              		.loc 1 232 5 is_stmt 1 view .LVU3109
 233:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 9289              		.loc 1 233 6 view .LVU3110
 9290 3801 488D0CD5 		lea	rcx, 0[0+rdx*8]	# _1214,
 9290      00000000 
 9291 3809 498D3C0E 		lea	rdi, [r14+rcx]	# _1215,
 9292              	# sieve_extend.c:233:      if (copy_word >= range_stop_word) { // shortcut
 233:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 9293              		.loc 1 233 9 is_stmt 0 view .LVU3111
 9294 380d 4939D2   		cmp	r10, rdx	# range_stop_word, copy_word
 9295 3810 49C7C1FF 		mov	r9, -1	# tmp1565,
 9295      FFFFFF
 9296 3817 41F7D5   		not	r13d	# tmp607
 9297 381a C46299F7 		shlx	r12, rax, r12	# _1218, pattern, index
 9297      E0
 9298              	.LVL489:
 233:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 9299              		.loc 1 233 9 view .LVU3112
 9300 381f 488B37   		mov	rsi, QWORD PTR [rdi]	# pretmp_1216, MEM[(uint64_t *)_1215]
 9301 3822 C44293F7 		shrx	r13, r9, r13	# _1222, tmp1565, tmp607
 9301      E9
 9302 3827 0F865918 		jbe	.L1442	#,
 9302      0000
 238:sieve_extend.c **** 
 9303              		.loc 1 238 5 is_stmt 1 view .LVU3113
 9304              	# sieve_extend.c:238:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 238:sieve_extend.c **** 
 9305              		.loc 1 238 27 is_stmt 0 view .LVU3114
 9306 382d 4909F4   		or	r12, rsi	# tmp612, pretmp_1216
 9307              	# sieve_extend.c:238:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 238:sieve_extend.c **** 
 9308              		.loc 1 238 23 view .LVU3115
 9309 3830 4C8D5A01 		lea	r11, 1[rdx]	# copy_word,
 9310              	.LVL490:
 9311              	# sieve_extend.c:238:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 238:sieve_extend.c **** 
 9312              		.loc 1 238 27 view .LVU3116
 9313 3834 4C8927   		mov	QWORD PTR [rdi], r12	# MEM[(uint64_t *)_1215], tmp612
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 9314              		.loc 1 242 5 is_stmt 1 view .LVU3117
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 9315              		.loc 1 243 5 view .LVU3118
 9316              	.LVL491:
 244:sieve_extend.c **** 
 9317              		.loc 1 244 5 view .LVU3119
 246:sieve_extend.c ****     #pragma unroll
 9318              		.loc 1 246 5 view .LVU3120
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/cct11Qa0.s 			page 255


 9319              		.loc 1 249 5 view .LVU3121
 9320              	.LBB467:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9321              		.loc 1 249 10 view .LVU3122
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9322              		.loc 1 249 25 view .LVU3123
 9323              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9324              		.loc 1 249 5 is_stmt 0 view .LVU3124
 9325 3837 4D89D4   		mov	r12, r10	# loop_range, range_stop_word
 9326 383a 4D29DC   		sub	r12, r11	# loop_range, copy_word
 9327              	.LVL492:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9328              		.loc 1 249 5 view .LVU3125
 9329 383d 0F84F601 		je	.L826	#,
 9329      0000
 9330 3843 498D7C0E 		lea	rdi, 8[r14+rcx]	# vectp.478,
 9330      08
 9331 3848 BE050000 		mov	esi, 5	# tmp619,
 9331      00
 9332 384d 4889FA   		mov	rdx, rdi	# tmp616, vectp.478
 9333 3850 48C1EA03 		shr	rdx, 3	# tmp616,
 9334 3854 48F7DA   		neg	rdx	# tmp617
 9335 3857 83E203   		and	edx, 3	# prolog_loop_niters.479,
 9336 385a 4C8D4A03 		lea	r9, 3[rdx]	# tmp618,
 9337 385e 4983F905 		cmp	r9, 5	# tmp618,
 9338 3862 490F43F1 		cmovnb	rsi, r9	# tmp618,, tmp901
 9339 3866 4D8D4C24 		lea	r9, -1[r12]	# tmp620,
 9339      FF
 9340 386b 4C39CE   		cmp	rsi, r9	# tmp901, tmp620
 9341 386e 0F877518 		ja	.L916	#,
 9341      0000
 9342              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9343              		.loc 1 249 20 view .LVU3126
 9344 3874 31F6     		xor	esi, esi	# i
 9345 3876 4885D2   		test	rdx, rdx	# prolog_loop_niters.479
 9346 3879 7428     		je	.L822	#,
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9347              		.loc 1 250 9 is_stmt 1 view .LVU3127
 251:sieve_extend.c ****     } 
 9348              		.loc 1 251 9 view .LVU3128
 9349              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9350              		.loc 1 251 31 is_stmt 0 view .LVU3129
 9351 387b 480907   		or	QWORD PTR [rdi], rax	# MEM[(uint64_t *)vectp.478_1469], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9352              		.loc 1 249 41 is_stmt 1 view .LVU3130
 9353              	.LVL493:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9354              		.loc 1 249 25 view .LVU3131
 9355 387e 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.479,
 9356              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9357              		.loc 1 249 42 is_stmt 0 view .LVU3132
 9358 3882 BE010000 		mov	esi, 1	# i,
 9358      00
GAS LISTING /tmp/cct11Qa0.s 			page 256


 9359 3887 741A     		je	.L822	#,
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9360              		.loc 1 250 9 is_stmt 1 view .LVU3133
 251:sieve_extend.c ****     } 
 9361              		.loc 1 251 9 view .LVU3134
 9362              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9363              		.loc 1 251 31 is_stmt 0 view .LVU3135
 9364 3889 4909440E 		or	QWORD PTR 16[r14+rcx], rax	# *_1340, pattern
 9364      10
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9365              		.loc 1 249 41 is_stmt 1 view .LVU3136
 9366              	.LVL494:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9367              		.loc 1 249 25 view .LVU3137
 9368 388e 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.479,
 9369              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9370              		.loc 1 249 42 is_stmt 0 view .LVU3138
 9371 3892 BE020000 		mov	esi, 2	# i,
 9371      00
 9372 3897 750A     		jne	.L822	#,
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9373              		.loc 1 250 9 is_stmt 1 view .LVU3139
 251:sieve_extend.c ****     } 
 9374              		.loc 1 251 9 view .LVU3140
 9375              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9376              		.loc 1 251 31 is_stmt 0 view .LVU3141
 9377 3899 4909440E 		or	QWORD PTR 24[r14+rcx], rax	# *_1456, pattern
 9377      18
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9378              		.loc 1 249 41 is_stmt 1 view .LVU3142
 9379              	.LVL495:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9380              		.loc 1 249 25 view .LVU3143
 9381              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9382              		.loc 1 249 42 is_stmt 0 view .LVU3144
 9383 389e BE030000 		mov	esi, 3	# i,
 9383      00
 9384              	.LVL496:
 9385              	.L822:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9386              		.loc 1 249 42 view .LVU3145
 9387 38a3 4C89E7   		mov	rdi, r12	# niters.480, loop_range
 9388 38a6 C4E1F96E 		vmovq	xmm2, rax	# pattern, pattern
 9388      D0
 9389 38ab 4829D7   		sub	rdi, rdx	# niters.480, prolog_loop_niters.479
 9390 38ae 4C01DA   		add	rdx, r11	# tmp624, copy_word
 9391 38b1 4889F9   		mov	rcx, rdi	# bnd.481, niters.480
 9392 38b4 498D14D6 		lea	rdx, [r14+rdx*8]	# ivtmp.590,
 9393 38b8 48C1E902 		shr	rcx, 2	# bnd.481,
 9394 38bc C4E27D59 		vpbroadcastq	ymm0, xmm2	# vect_cst__1418, pattern
 9394      C2
 9395 38c1 48C1E105 		sal	rcx, 5	# tmp627,
 9396 38c5 4C8D0C11 		lea	r9, [rcx+rdx]	# _1293,
GAS LISTING /tmp/cct11Qa0.s 			page 257


 9397 38c9 4883E920 		sub	rcx, 32	# tmp896,
 9398 38cd 48C1E905 		shr	rcx, 5	# tmp894,
 9399 38d1 4883C101 		add	rcx, 1	# tmp897,
 9400 38d5 83E107   		and	ecx, 7	# tmp898,
 9401 38d8 0F848400 		je	.L824	#,
 9401      0000
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9402              		.loc 1 249 42 view .LVU3146
 9403 38de 4883F901 		cmp	rcx, 1	# tmp898,
 9404 38e2 746C     		je	.L1138	#,
 9405 38e4 4883F902 		cmp	rcx, 2	# tmp898,
 9406 38e8 7459     		je	.L1139	#,
 9407 38ea 4883F903 		cmp	rcx, 3	# tmp898,
 9408 38ee 7446     		je	.L1140	#,
 9409 38f0 4883F904 		cmp	rcx, 4	# tmp898,
 9410 38f4 7433     		je	.L1141	#,
 9411 38f6 4883F905 		cmp	rcx, 5	# tmp898,
 9412 38fa 7420     		je	.L1142	#,
 9413 38fc 4883F906 		cmp	rcx, 6	# tmp898,
 9414 3900 740D     		je	.L1143	#,
 9415              	.LVL497:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9416              		.loc 1 250 9 is_stmt 1 view .LVU3147
 251:sieve_extend.c ****     } 
 9417              		.loc 1 251 9 view .LVU3148
 9418              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9419              		.loc 1 251 31 is_stmt 0 view .LVU3149
 9420 3902 C5FDEB0A 		vpor	ymm1, ymm0, YMMWORD PTR [rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B]
 9421 3906 4883C220 		add	rdx, 32	# ivtmp.590,
 9422 390a C5FD7F4A 		vmovdqa	YMMWORD PTR -32[rdx], ymm1	# MEM[base: _1297, offset: 0B], vect__146.487
 9422      E0
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9423              		.loc 1 249 41 is_stmt 1 view .LVU3150
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9424              		.loc 1 249 25 view .LVU3151
 9425              	.L1143:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9426              		.loc 1 250 9 view .LVU3152
 251:sieve_extend.c ****     } 
 9427              		.loc 1 251 9 view .LVU3153
 9428              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9429              		.loc 1 251 31 is_stmt 0 view .LVU3154
 9430 390f C5FDEB1A 		vpor	ymm3, ymm0, YMMWORD PTR [rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B]
 9431 3913 4883C220 		add	rdx, 32	# ivtmp.590,
 9432 3917 C5FD7F5A 		vmovdqa	YMMWORD PTR -32[rdx], ymm3	# MEM[base: _1297, offset: 0B], vect__146.487
 9432      E0
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9433              		.loc 1 249 41 is_stmt 1 view .LVU3155
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9434              		.loc 1 249 25 view .LVU3156
 9435              	.L1142:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9436              		.loc 1 250 9 view .LVU3157
 251:sieve_extend.c ****     } 
 9437              		.loc 1 251 9 view .LVU3158
GAS LISTING /tmp/cct11Qa0.s 			page 258


 9438              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9439              		.loc 1 251 31 is_stmt 0 view .LVU3159
 9440 391c C5FDEB22 		vpor	ymm4, ymm0, YMMWORD PTR [rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B]
 9441 3920 4883C220 		add	rdx, 32	# ivtmp.590,
 9442 3924 C5FD7F62 		vmovdqa	YMMWORD PTR -32[rdx], ymm4	# MEM[base: _1297, offset: 0B], vect__146.487
 9442      E0
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9443              		.loc 1 249 41 is_stmt 1 view .LVU3160
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9444              		.loc 1 249 25 view .LVU3161
 9445              	.L1141:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9446              		.loc 1 250 9 view .LVU3162
 251:sieve_extend.c ****     } 
 9447              		.loc 1 251 9 view .LVU3163
 9448              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9449              		.loc 1 251 31 is_stmt 0 view .LVU3164
 9450 3929 C5FDEB2A 		vpor	ymm5, ymm0, YMMWORD PTR [rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B]
 9451 392d 4883C220 		add	rdx, 32	# ivtmp.590,
 9452 3931 C5FD7F6A 		vmovdqa	YMMWORD PTR -32[rdx], ymm5	# MEM[base: _1297, offset: 0B], vect__146.487
 9452      E0
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9453              		.loc 1 249 41 is_stmt 1 view .LVU3165
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9454              		.loc 1 249 25 view .LVU3166
 9455              	.L1140:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9456              		.loc 1 250 9 view .LVU3167
 251:sieve_extend.c ****     } 
 9457              		.loc 1 251 9 view .LVU3168
 9458              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9459              		.loc 1 251 31 is_stmt 0 view .LVU3169
 9460 3936 C5FDEB32 		vpor	ymm6, ymm0, YMMWORD PTR [rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B]
 9461 393a 4883C220 		add	rdx, 32	# ivtmp.590,
 9462 393e C5FD7F72 		vmovdqa	YMMWORD PTR -32[rdx], ymm6	# MEM[base: _1297, offset: 0B], vect__146.487
 9462      E0
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9463              		.loc 1 249 41 is_stmt 1 view .LVU3170
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9464              		.loc 1 249 25 view .LVU3171
 9465              	.L1139:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9466              		.loc 1 250 9 view .LVU3172
 251:sieve_extend.c ****     } 
 9467              		.loc 1 251 9 view .LVU3173
 9468              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9469              		.loc 1 251 31 is_stmt 0 view .LVU3174
 9470 3943 C5FDEB3A 		vpor	ymm7, ymm0, YMMWORD PTR [rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B]
 9471 3947 4883C220 		add	rdx, 32	# ivtmp.590,
 9472 394b C5FD7F7A 		vmovdqa	YMMWORD PTR -32[rdx], ymm7	# MEM[base: _1297, offset: 0B], vect__146.487
 9472      E0
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9473              		.loc 1 249 41 is_stmt 1 view .LVU3175
GAS LISTING /tmp/cct11Qa0.s 			page 259


 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9474              		.loc 1 249 25 view .LVU3176
 9475              	.L1138:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9476              		.loc 1 250 9 view .LVU3177
 251:sieve_extend.c ****     } 
 9477              		.loc 1 251 9 view .LVU3178
 9478              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9479              		.loc 1 251 31 is_stmt 0 view .LVU3179
 9480 3950 C57DEB02 		vpor	ymm8, ymm0, YMMWORD PTR [rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B]
 9481 3954 4883C220 		add	rdx, 32	# ivtmp.590,
 9482 3958 C57D7F42 		vmovdqa	YMMWORD PTR -32[rdx], ymm8	# MEM[base: _1297, offset: 0B], vect__146.487
 9482      E0
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9483              		.loc 1 249 41 is_stmt 1 view .LVU3180
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9484              		.loc 1 249 25 view .LVU3181
 9485 395d 4939D1   		cmp	r9, rdx	# _1293, ivtmp.590
 9486 3960 746F     		je	.L1303	#,
 9487              	.L824:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9488              		.loc 1 250 9 view .LVU3182
 251:sieve_extend.c ****     } 
 9489              		.loc 1 251 9 view .LVU3183
 9490              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9491              		.loc 1 251 31 is_stmt 0 view .LVU3184
 9492 3962 C57DEB0A 		vpor	ymm9, ymm0, YMMWORD PTR [rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B]
 9493 3966 C57DEB52 		vpor	ymm10, ymm0, YMMWORD PTR 32[rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B
 9493      20
 9494 396b C57DEB5A 		vpor	ymm11, ymm0, YMMWORD PTR 64[rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B
 9494      40
 9495 3970 C57DEB62 		vpor	ymm12, ymm0, YMMWORD PTR 96[rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B
 9495      60
 9496 3975 C57DEBAA 		vpor	ymm13, ymm0, YMMWORD PTR 128[rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0
 9496      80000000 
 9497 397d C57DEBB2 		vpor	ymm14, ymm0, YMMWORD PTR 160[rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0
 9497      A0000000 
 9498 3985 C57DEBBA 		vpor	ymm15, ymm0, YMMWORD PTR 192[rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0
 9498      C0000000 
 9499 398d C5FDEB92 		vpor	ymm2, ymm0, YMMWORD PTR 224[rdx]	# vect__146.487, vect_cst__1418, MEM[base: _1297, offset: 0B
 9499      E0000000 
 9500 3995 C57D7F0A 		vmovdqa	YMMWORD PTR [rdx], ymm9	# MEM[base: _1297, offset: 0B], vect__146.487
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9501              		.loc 1 249 41 is_stmt 1 view .LVU3185
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9502              		.loc 1 249 25 view .LVU3186
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9503              		.loc 1 250 9 view .LVU3187
 251:sieve_extend.c ****     } 
 9504              		.loc 1 251 9 view .LVU3188
 9505 3999 4881C200 		add	rdx, 256	# ivtmp.590,
 9505      010000
 9506              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9507              		.loc 1 251 31 is_stmt 0 view .LVU3189
GAS LISTING /tmp/cct11Qa0.s 			page 260


 9508 39a0 C57D7F92 		vmovdqa	YMMWORD PTR -224[rdx], ymm10	# MEM[base: _1297, offset: 0B], vect__146.487
 9508      20FFFFFF 
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9509              		.loc 1 249 41 is_stmt 1 view .LVU3190
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9510              		.loc 1 249 25 view .LVU3191
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9511              		.loc 1 250 9 view .LVU3192
 251:sieve_extend.c ****     } 
 9512              		.loc 1 251 9 view .LVU3193
 9513              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9514              		.loc 1 251 31 is_stmt 0 view .LVU3194
 9515 39a8 C57D7F9A 		vmovdqa	YMMWORD PTR -192[rdx], ymm11	# MEM[base: _1297, offset: 0B], vect__146.487
 9515      40FFFFFF 
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9516              		.loc 1 249 41 is_stmt 1 view .LVU3195
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9517              		.loc 1 249 25 view .LVU3196
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9518              		.loc 1 250 9 view .LVU3197
 251:sieve_extend.c ****     } 
 9519              		.loc 1 251 9 view .LVU3198
 9520              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9521              		.loc 1 251 31 is_stmt 0 view .LVU3199
 9522 39b0 C57D7FA2 		vmovdqa	YMMWORD PTR -160[rdx], ymm12	# MEM[base: _1297, offset: 0B], vect__146.487
 9522      60FFFFFF 
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9523              		.loc 1 249 41 is_stmt 1 view .LVU3200
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9524              		.loc 1 249 25 view .LVU3201
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9525              		.loc 1 250 9 view .LVU3202
 251:sieve_extend.c ****     } 
 9526              		.loc 1 251 9 view .LVU3203
 9527              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9528              		.loc 1 251 31 is_stmt 0 view .LVU3204
 9529 39b8 C57D7F6A 		vmovdqa	YMMWORD PTR -128[rdx], ymm13	# MEM[base: _1297, offset: 0B], vect__146.487
 9529      80
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9530              		.loc 1 249 41 is_stmt 1 view .LVU3205
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9531              		.loc 1 249 25 view .LVU3206
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9532              		.loc 1 250 9 view .LVU3207
 251:sieve_extend.c ****     } 
 9533              		.loc 1 251 9 view .LVU3208
 9534              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9535              		.loc 1 251 31 is_stmt 0 view .LVU3209
 9536 39bd C57D7F72 		vmovdqa	YMMWORD PTR -96[rdx], ymm14	# MEM[base: _1297, offset: 0B], vect__146.487
 9536      A0
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9537              		.loc 1 249 41 is_stmt 1 view .LVU3210
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/cct11Qa0.s 			page 261


 9538              		.loc 1 249 25 view .LVU3211
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9539              		.loc 1 250 9 view .LVU3212
 251:sieve_extend.c ****     } 
 9540              		.loc 1 251 9 view .LVU3213
 9541              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9542              		.loc 1 251 31 is_stmt 0 view .LVU3214
 9543 39c2 C57D7F7A 		vmovdqa	YMMWORD PTR -64[rdx], ymm15	# MEM[base: _1297, offset: 0B], vect__146.487
 9543      C0
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9544              		.loc 1 249 41 is_stmt 1 view .LVU3215
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9545              		.loc 1 249 25 view .LVU3216
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9546              		.loc 1 250 9 view .LVU3217
 251:sieve_extend.c ****     } 
 9547              		.loc 1 251 9 view .LVU3218
 9548              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9549              		.loc 1 251 31 is_stmt 0 view .LVU3219
 9550 39c7 C5FD7F52 		vmovdqa	YMMWORD PTR -32[rdx], ymm2	# MEM[base: _1297, offset: 0B], vect__146.487
 9550      E0
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9551              		.loc 1 249 41 is_stmt 1 view .LVU3220
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9552              		.loc 1 249 25 view .LVU3221
 9553 39cc 4939D1   		cmp	r9, rdx	# _1293, ivtmp.590
 9554 39cf 7591     		jne	.L824	#,
 9555              	.L1303:
 9556 39d1 4889F9   		mov	rcx, rdi	# niters_vector_mult_vf.482, niters.480
 9557 39d4 4883E1FC 		and	rcx, -4	# niters_vector_mult_vf.482,
 9558 39d8 4839F9   		cmp	rcx, rdi	# niters_vector_mult_vf.482, niters.480
 9559 39db 488D1431 		lea	rdx, [rcx+rsi]	# tmp.483,
 9560 39df 7458     		je	.L826	#,
 9561              	.L821:
 9562              	.LVL498:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9563              		.loc 1 250 9 view .LVU3222
 251:sieve_extend.c ****     } 
 9564              		.loc 1 251 9 view .LVU3223
 9565              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9566              		.loc 1 251 31 is_stmt 0 view .LVU3224
 9567 39e1 498D3413 		lea	rsi, [r11+rdx]	# tmp629,
 9568              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9569              		.loc 1 249 42 view .LVU3225
 9570 39e5 488D7A01 		lea	rdi, 1[rdx]	# i,
 9571              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9572              		.loc 1 251 31 view .LVU3226
 9573 39e9 490904F6 		or	QWORD PTR [r14+rsi*8], rax	# *_145, pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9574              		.loc 1 249 41 is_stmt 1 view .LVU3227
 9575              	.LVL499:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/cct11Qa0.s 			page 262


 9576              		.loc 1 249 25 view .LVU3228
 9577              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9578              		.loc 1 249 5 is_stmt 0 view .LVU3229
 9579 39ed 4939FC   		cmp	r12, rdi	# loop_range, i
 9580 39f0 7647     		jbe	.L826	#,
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9581              		.loc 1 250 9 is_stmt 1 view .LVU3230
 251:sieve_extend.c ****     } 
 9582              		.loc 1 251 9 view .LVU3231
 9583              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9584              		.loc 1 251 31 is_stmt 0 view .LVU3232
 9585 39f2 4C01DF   		add	rdi, r11	# tmp631, copy_word
 9586              	.LVL500:
 9587              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9588              		.loc 1 249 42 view .LVU3233
 9589 39f5 4C8D4A02 		lea	r9, 2[rdx]	# i,
 9590              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9591              		.loc 1 251 31 view .LVU3234
 9592 39f9 490904FE 		or	QWORD PTR [r14+rdi*8], rax	# *_1402, pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9593              		.loc 1 249 41 is_stmt 1 view .LVU3235
 9594              	.LVL501:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9595              		.loc 1 249 25 view .LVU3236
 9596              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9597              		.loc 1 249 5 is_stmt 0 view .LVU3237
 9598 39fd 4D39CC   		cmp	r12, r9	# loop_range, i
 9599 3a00 7637     		jbe	.L826	#,
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9600              		.loc 1 250 9 is_stmt 1 view .LVU3238
 251:sieve_extend.c ****     } 
 9601              		.loc 1 251 9 view .LVU3239
 9602              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9603              		.loc 1 251 31 is_stmt 0 view .LVU3240
 9604 3a02 4D01D9   		add	r9, r11	# tmp633, copy_word
 9605              	.LVL502:
 9606              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9607              		.loc 1 249 42 view .LVU3241
 9608 3a05 488D4A03 		lea	rcx, 3[rdx]	# i,
 9609              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9610              		.loc 1 251 31 view .LVU3242
 9611 3a09 4B0904CE 		or	QWORD PTR [r14+r9*8], rax	# *_1390, pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9612              		.loc 1 249 41 is_stmt 1 view .LVU3243
 9613              	.LVL503:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9614              		.loc 1 249 25 view .LVU3244
 9615              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/cct11Qa0.s 			page 263


 9616              		.loc 1 249 5 is_stmt 0 view .LVU3245
 9617 3a0d 4939CC   		cmp	r12, rcx	# loop_range, i
 9618 3a10 7627     		jbe	.L826	#,
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9619              		.loc 1 250 9 is_stmt 1 view .LVU3246
 251:sieve_extend.c ****     } 
 9620              		.loc 1 251 9 view .LVU3247
 9621              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9622              		.loc 1 251 31 is_stmt 0 view .LVU3248
 9623 3a12 4C01D9   		add	rcx, r11	# tmp635, copy_word
 9624              	.LVL504:
 9625              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9626              		.loc 1 249 42 view .LVU3249
 9627 3a15 488D7204 		lea	rsi, 4[rdx]	# i,
 9628              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9629              		.loc 1 251 31 view .LVU3250
 9630 3a19 490904CE 		or	QWORD PTR [r14+rcx*8], rax	# *_1378, pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9631              		.loc 1 249 41 is_stmt 1 view .LVU3251
 9632              	.LVL505:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9633              		.loc 1 249 25 view .LVU3252
 9634              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9635              		.loc 1 249 5 is_stmt 0 view .LVU3253
 9636 3a1d 4939F4   		cmp	r12, rsi	# loop_range, i
 9637 3a20 7617     		jbe	.L826	#,
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9638              		.loc 1 250 9 is_stmt 1 view .LVU3254
 251:sieve_extend.c ****     } 
 9639              		.loc 1 251 9 view .LVU3255
 9640              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9641              		.loc 1 251 31 is_stmt 0 view .LVU3256
 9642 3a22 4C01DE   		add	rsi, r11	# tmp637, copy_word
 9643              	.LVL506:
 9644              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9645              		.loc 1 249 42 view .LVU3257
 9646 3a25 4883C205 		add	rdx, 5	# i,
 9647              	.LVL507:
 9648              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9649              		.loc 1 251 31 view .LVU3258
 9650 3a29 490904F6 		or	QWORD PTR [r14+rsi*8], rax	# *_1368, pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9651              		.loc 1 249 41 is_stmt 1 view .LVU3259
 9652              	.LVL508:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9653              		.loc 1 249 25 view .LVU3260
 9654              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9655              		.loc 1 249 5 is_stmt 0 view .LVU3261
 9656 3a2d 4939D4   		cmp	r12, rdx	# loop_range, i
GAS LISTING /tmp/cct11Qa0.s 			page 264


 9657 3a30 7607     		jbe	.L826	#,
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 9658              		.loc 1 250 9 is_stmt 1 view .LVU3262
 251:sieve_extend.c ****     } 
 9659              		.loc 1 251 9 view .LVU3263
 9660              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 9661              		.loc 1 251 31 is_stmt 0 view .LVU3264
 9662 3a32 4C01DA   		add	rdx, r11	# tmp639, copy_word
 9663 3a35 490904D6 		or	QWORD PTR [r14+rdx*8], rax	# *_1440, pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9664              		.loc 1 249 41 is_stmt 1 view .LVU3265
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9665              		.loc 1 249 25 view .LVU3266
 9666              	.LVL509:
 9667              	.L826:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 9668              		.loc 1 249 25 is_stmt 0 view .LVU3267
 9669              	.LBE467:
 253:sieve_extend.c **** }
 9670              		.loc 1 253 5 is_stmt 1 view .LVU3268
 9671              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 9672              		.loc 1 253 100 is_stmt 0 view .LVU3269
 9673 3a39 4C21E8   		and	rax, r13	# tmp614, _1222
 9674              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 9675              		.loc 1 253 31 view .LVU3270
 9676 3a3c 4B0904D6 		or	QWORD PTR [r14+r10*8], rax	# *_149, tmp614
 9677              	.LVL510:
 253:sieve_extend.c **** }
 9678              		.loc 1 253 31 view .LVU3271
 9679              	.LBE465:
 9680              	.LBE464:
 9681              	.LBE507:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9682              		.loc 1 872 11 is_stmt 1 view .LVU3272
 9683              	# sieve_extend.c:872:     for (;range_stop < block_stop;) {
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9684              		.loc 1 872 5 is_stmt 0 view .LVU3273
 9685 3a40 4C3B4424 		cmp	r8, QWORD PTR 88[rsp]	# _69, %sfp
 9685      58
 9686 3a45 0F8297FB 		jb	.L850	#,
 9686      FFFF
 9687              	.LVL511:
 9688              	.L1439:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9689              		.loc 1 872 5 view .LVU3274
 9690 3a4b 488B5C24 		mov	rbx, QWORD PTR 32[rsp]	# <retval>, %sfp
 9690      20
 9691 3a50 4C89FA   		mov	rdx, r15	# block$pattern_size, patternsize_bits
 9692 3a53 4C8B7424 		mov	r14, QWORD PTR 80[rsp]	# index, %sfp
 9692      50
 9693              	.LVL512:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9694              		.loc 1 872 5 view .LVU3275
 9695              	.LBE513:
GAS LISTING /tmp/cct11Qa0.s 			page 265


 9696              	.LBE521:
 9697              	.LBB522:
 9698              	.LBB523:
 9699              	# sieve_extend.c:767:     if (size < WORD_SIZE_counter)   {
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9700              		.loc 1 767 8 view .LVU3276
 9701 3a58 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 9702              	.LBE523:
 9703              	.LBE522:
 9704              	.LBB528:
 9705              	.LBB514:
 9706              	# sieve_extend.c:872:     for (;range_stop < block_stop;) {
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9707              		.loc 1 872 5 view .LVU3277
 9708 3a5c 488B7424 		mov	rsi, QWORD PTR 72[rsp]	# block$pattern_start, %sfp
 9708      48
 9709 3a61 4C8B4308 		mov	r8, QWORD PTR 8[rbx]	# prephitmp_1485, sieve_90->bits
 9710              	.LVL513:
 872:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9711              		.loc 1 872 5 view .LVU3278
 9712 3a65 4C897424 		mov	QWORD PTR 48[rsp], r14	# %sfp, index
 9712      30
 898:sieve_extend.c **** }
 9713              		.loc 1 898 5 is_stmt 1 view .LVU3279
 9714              	.LVL514:
 898:sieve_extend.c **** }
 9715              		.loc 1 898 5 is_stmt 0 view .LVU3280
 9716              	.LBE514:
 9717              	.LBE528:
 910:sieve_extend.c ****     prime = block.prime;
 9718              		.loc 1 910 5 is_stmt 1 view .LVU3281
 9719              	.LBB529:
 9720              	.LBI522:
 766:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9721              		.loc 1 766 20 view .LVU3282
 9722              	.LBB524:
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9723              		.loc 1 767 5 view .LVU3283
 9724 3a6a 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, prephitmp_1485
 9724      58
 9725              	# sieve_extend.c:767:     if (size < WORD_SIZE_counter)   {
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9726              		.loc 1 767 8 is_stmt 0 view .LVU3284
 9727 3a6f 0F874A06 		ja	.L851	#,
 9727      0000
 9728              	.LVL515:
 9729              	.L1445:
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9730              		.loc 1 767 8 view .LVU3285
 9731 3a75 C5F877   		vzeroupper
 9732              	.LVL516:
 9733              	.L804:
 768:sieve_extend.c ****         return; // rapid exit for small sizes
 9734              		.loc 1 768 9 is_stmt 1 view .LVU3286
 9735 3a78 488B4C24 		mov	rcx, QWORD PTR 88[rsp]	#, %sfp
 9735      58
 9736 3a7d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	#, %sfp
GAS LISTING /tmp/cct11Qa0.s 			page 266


 9736      18
 9737 3a82 E879C5FF 		call	extendSieve_smallSize	#
 9737      FF
 9738              	.LVL517:
 769:sieve_extend.c ****     }
 9739              		.loc 1 769 9 view .LVU3287
 9740 3a87 E9620600 		jmp	.L852	#
 9740      00
 9741              	.LVL518:
 9742 3a8c 0F1F4000 		.p2align 4,,7
 9743              		.p2align 3
 9744              	.L843:
 769:sieve_extend.c ****     }
 9745              		.loc 1 769 9 is_stmt 0 view .LVU3288
 9746              	.LBE524:
 9747              	.LBE529:
 9748              	.LBB530:
 9749              	.LBB515:
 9750              	.LBB508:
 894:sieve_extend.c ****         block.prime = prime;
 9751              		.loc 1 894 48 is_stmt 1 view .LVU3289
 9752              	.LBB471:
 9753              	.LBI471:
 375:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 9754              		.loc 1 375 20 view .LVU3290
 9755              	.LBB472:
 376:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9756              		.loc 1 376 5 view .LVU3291
 377:sieve_extend.c **** 
 9757              		.loc 1 377 5 view .LVU3292
 9758              	# sieve_extend.c:377:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 377:sieve_extend.c **** 
 9759              		.loc 1 377 74 is_stmt 0 view .LVU3293
 9760 3a90 4C89E9   		mov	rcx, r13	# tmp669, step
 9761 3a93 48C1E106 		sal	rcx, 6	# tmp669,
 9762              	# sieve_extend.c:377:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 377:sieve_extend.c **** 
 9763              		.loc 1 377 21 view .LVU3294
 9764 3a97 4A8D3421 		lea	rsi, [rcx+r12]	# range_stop_unique,
 9765              	.LVL519:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9766              		.loc 1 381 5 is_stmt 1 view .LVU3295
 9767              	.LBB473:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9768              		.loc 1 381 10 view .LVU3296
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9769              		.loc 1 381 50 view .LVU3297
 9770              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 9771              		.loc 1 381 5 is_stmt 0 view .LVU3298
 9772 3a9b 4939F4   		cmp	r12, rsi	# index, range_stop_unique
 9773 3a9e 0F8333FB 		jnb	.L819	#,
 9773      FFFF
 9774              	.LBB474:
 9775              	.LBB475:
 9776              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
GAS LISTING /tmp/cct11Qa0.s 			page 267


 9777              		.loc 1 163 20 view .LVU3299
 9778 3aa4 4C89C0   		mov	rax, r8	# range_stop_word, _69
 9779              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9780              		.loc 1 189 29 view .LVU3300
 9781 3aa7 4589C2   		mov	r10d, r8d	# tmp674, _69
 9782              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9783              		.loc 1 163 20 view .LVU3301
 9784 3aaa 48C1E806 		shr	rax, 6	# range_stop_word,
 9785              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 9786              		.loc 1 165 110 view .LVU3302
 9787 3aae 4B8D7CAD 		lea	rdi, 0[r13+r13*4]	# tmp672,
 9787      00
 9788              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9789              		.loc 1 189 29 view .LVU3303
 9790 3ab3 49C7C3FF 		mov	r11, -1	# tmp1592,
 9790      FFFFFF
 9791 3aba 41F7D2   		not	r10d	# tmp674
 9792 3abd C4C2ABF7 		shrx	rcx, r11, r10	# _293, tmp1592, tmp674
 9792      CB
 9793              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 9794              		.loc 1 165 133 view .LVU3304
 9795 3ac2 4989C2   		mov	r10, rax	# tmp678, range_stop_word
 9796 3ac5 4929FA   		sub	r10, rdi	# tmp678, tmp672
 9797              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 9798              		.loc 1 165 53 view .LVU3305
 9799 3ac8 4839F8   		cmp	rax, rdi	# range_stop_word, tmp672
 9800 3acb 4D89EB   		mov	r11, r13	# _1263, step
 9801 3ace 4F8D14D6 		lea	r10, [r14+r10*8]	# tmp680,
 9802              	.LBE475:
 9803              	.LBE474:
 9804              	# sieve_extend.c:382:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 382:sieve_extend.c ****     }
 9805              		.loc 1 382 9 view .LVU3306
 9806 3ad2 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 9806      28
 9807              	.LBB479:
 9808              	.LBB476:
 9809              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 9810              		.loc 1 165 53 view .LVU3307
 9811 3ad7 4D0F46D6 		cmovbe	r10, r14	# _95,, fast_loop_ptr
 9812              	# sieve_extend.c:171:        index_ptr+=step;
 171:sieve_extend.c ****        *index_ptr |= mask;
 9813              		.loc 1 171 17 view .LVU3308
 9814 3adb 4A8D14ED 		lea	rdx, 0[0+r13*8]	# _261,
 9814      00000000 
 9815              	# sieve_extend.c:182:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9816              		.loc 1 182 41 view .LVU3309
 9817 3ae3 4D8D0CC6 		lea	r9, [r14+rax*8]	# range_stop_ptr,
 9818              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/cct11Qa0.s 			page 268


 189:sieve_extend.c ****    }
 9819              		.loc 1 189 29 view .LVU3310
 9820 3ae7 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, _293
 9820      30
 9821              	.LBE476:
 9822              	.LBE479:
 9823              	# sieve_extend.c:382:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 382:sieve_extend.c ****     }
 9824              		.loc 1 382 9 view .LVU3311
 9825 3aec 4989F0   		mov	r8, rsi	# range_stop_unique, range_stop_unique
 9826              	.LVL520:
 382:sieve_extend.c ****     }
 9827              		.loc 1 382 9 view .LVU3312
 9828 3aef 48C1E703 		sal	rdi, 3	# tmp684,
 9829 3af3 49C1E304 		sal	r11, 4	# _1263,
 9830              	.LVL521:
 9831 3af7 660F1F84 		.p2align 4
 9831      00000000 
 9831      00
 9832              		.p2align 3
 9833              	.L849:
 382:sieve_extend.c ****     }
 9834              		.loc 1 382 9 is_stmt 1 view .LVU3313
 9835 3b00 4C89E0   		mov	rax, r12	# tmp687, index
 9836 3b03 BE010000 		mov	esi, 1	# tmp1595,
 9836      00
 9837 3b08 48C1E806 		shr	rax, 6	# tmp687,
 9838 3b0c C4E299F7 		shlx	rcx, rsi, r12	# _246, tmp1595, index
 9838      CE
 9839              	.LVL522:
 9840              	.LBB480:
 9841              	.LBI474:
 135:sieve_extend.c **** //#if __APPLE__
 9842              		.loc 1 135 20 view .LVU3314
 9843              	.LBB477:
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9844              		.loc 1 163 4 view .LVU3315
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9845              		.loc 1 164 4 view .LVU3316
 9846              	# sieve_extend.c:164:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9847              		.loc 1 164 78 is_stmt 0 view .LVU3317
 9848 3b11 498D04C6 		lea	rax, [r14+rax*8]	# index_ptr,
 9849              	.LVL523:
 165:sieve_extend.c **** 
 9850              		.loc 1 165 4 is_stmt 1 view .LVU3318
 169:sieve_extend.c ****        *index_ptr |= mask;
 9851              		.loc 1 169 4 view .LVU3319
 169:sieve_extend.c ****        *index_ptr |= mask;
 9852              		.loc 1 169 10 view .LVU3320
 9853 3b15 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 9854 3b18 0F830201 		jnb	.L844	#,
 9854      0000
 169:sieve_extend.c ****        *index_ptr |= mask;
 9855              		.loc 1 169 10 is_stmt 0 view .LVU3321
 9856 3b1e 4A8D3418 		lea	rsi, [rax+r11]	# ivtmp.631,
 9857              	.L845:
GAS LISTING /tmp/cct11Qa0.s 			page 269


 170:sieve_extend.c ****        index_ptr+=step;
 9858              		.loc 1 170 8 is_stmt 1 view .LVU3322
 9859              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9860              		.loc 1 170 19 is_stmt 0 view .LVU3323
 9861 3b22 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_614, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 9862              		.loc 1 171 8 is_stmt 1 view .LVU3324
 9863              	.LVL524:
 172:sieve_extend.c ****        index_ptr+=step;
 9864              		.loc 1 172 8 view .LVU3325
 9865              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9866              		.loc 1 172 19 is_stmt 0 view .LVU3326
 9867 3b25 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_614, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 9868              		.loc 1 173 8 is_stmt 1 view .LVU3327
 9869              	.LVL525:
 174:sieve_extend.c ****        index_ptr+=step;
 9870              		.loc 1 174 8 view .LVU3328
 9871              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9872              		.loc 1 174 19 is_stmt 0 view .LVU3329
 9873 3b29 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1257, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 9874              		.loc 1 175 8 is_stmt 1 view .LVU3330
 9875              	.LVL526:
 176:sieve_extend.c ****        index_ptr+=step;
 9876              		.loc 1 176 8 view .LVU3331
 9877              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9878              		.loc 1 176 19 is_stmt 0 view .LVU3332
 9879 3b2c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1257, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 9880              		.loc 1 177 8 is_stmt 1 view .LVU3333
 9881              	.LVL527:
 178:sieve_extend.c ****        index_ptr+=step;
 9882              		.loc 1 178 8 view .LVU3334
 9883 3b30 4801FE   		add	rsi, rdi	# ivtmp.631, tmp684
 9884              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9885              		.loc 1 178 19 is_stmt 0 view .LVU3335
 9886 3b33 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_614, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 9887              		.loc 1 179 8 is_stmt 1 view .LVU3336
 9888 3b37 4801F8   		add	rax, rdi	# index_ptr, tmp684
 9889              	.LVL528:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9890              		.loc 1 169 10 view .LVU3337
 9891 3b3a 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9892 3b3d 0F86DD00 		jbe	.L844	#,
 9892      0000
 170:sieve_extend.c ****        index_ptr+=step;
 9893              		.loc 1 170 8 view .LVU3338
 9894              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9895              		.loc 1 170 19 is_stmt 0 view .LVU3339
GAS LISTING /tmp/cct11Qa0.s 			page 270


 9896 3b43 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_614, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 9897              		.loc 1 171 8 is_stmt 1 view .LVU3340
 9898              	.LVL529:
 172:sieve_extend.c ****        index_ptr+=step;
 9899              		.loc 1 172 8 view .LVU3341
 9900              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9901              		.loc 1 172 19 is_stmt 0 view .LVU3342
 9902 3b46 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_614, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 9903              		.loc 1 173 8 is_stmt 1 view .LVU3343
 9904              	.LVL530:
 174:sieve_extend.c ****        index_ptr+=step;
 9905              		.loc 1 174 8 view .LVU3344
 9906              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9907              		.loc 1 174 19 is_stmt 0 view .LVU3345
 9908 3b4a 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1257, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 9909              		.loc 1 175 8 is_stmt 1 view .LVU3346
 9910              	.LVL531:
 176:sieve_extend.c ****        index_ptr+=step;
 9911              		.loc 1 176 8 view .LVU3347
 9912              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9913              		.loc 1 176 19 is_stmt 0 view .LVU3348
 9914 3b4d 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1257, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 9915              		.loc 1 177 8 is_stmt 1 view .LVU3349
 9916              	.LVL532:
 178:sieve_extend.c ****        index_ptr+=step;
 9917              		.loc 1 178 8 view .LVU3350
 9918 3b51 4801FE   		add	rsi, rdi	# ivtmp.631, tmp684
 9919              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9920              		.loc 1 178 19 is_stmt 0 view .LVU3351
 9921 3b54 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_614, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 9922              		.loc 1 179 8 is_stmt 1 view .LVU3352
 9923 3b58 4801F8   		add	rax, rdi	# index_ptr, tmp684
 9924              	.LVL533:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9925              		.loc 1 169 10 view .LVU3353
 9926 3b5b 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9927 3b5e 0F86BC00 		jbe	.L844	#,
 9927      0000
 170:sieve_extend.c ****        index_ptr+=step;
 9928              		.loc 1 170 8 view .LVU3354
 9929              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9930              		.loc 1 170 19 is_stmt 0 view .LVU3355
 9931 3b64 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_614, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 9932              		.loc 1 171 8 is_stmt 1 view .LVU3356
 9933              	.LVL534:
 172:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cct11Qa0.s 			page 271


 9934              		.loc 1 172 8 view .LVU3357
 9935              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9936              		.loc 1 172 19 is_stmt 0 view .LVU3358
 9937 3b67 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_614, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 9938              		.loc 1 173 8 is_stmt 1 view .LVU3359
 9939              	.LVL535:
 174:sieve_extend.c ****        index_ptr+=step;
 9940              		.loc 1 174 8 view .LVU3360
 9941              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9942              		.loc 1 174 19 is_stmt 0 view .LVU3361
 9943 3b6b 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1257, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 9944              		.loc 1 175 8 is_stmt 1 view .LVU3362
 9945              	.LVL536:
 176:sieve_extend.c ****        index_ptr+=step;
 9946              		.loc 1 176 8 view .LVU3363
 9947              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9948              		.loc 1 176 19 is_stmt 0 view .LVU3364
 9949 3b6e 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1257, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 9950              		.loc 1 177 8 is_stmt 1 view .LVU3365
 9951              	.LVL537:
 178:sieve_extend.c ****        index_ptr+=step;
 9952              		.loc 1 178 8 view .LVU3366
 9953 3b72 4801FE   		add	rsi, rdi	# ivtmp.631, tmp684
 9954              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9955              		.loc 1 178 19 is_stmt 0 view .LVU3367
 9956 3b75 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_614, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 9957              		.loc 1 179 8 is_stmt 1 view .LVU3368
 9958 3b79 4801F8   		add	rax, rdi	# index_ptr, tmp684
 9959              	.LVL538:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9960              		.loc 1 169 10 view .LVU3369
 9961 3b7c 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9962 3b7f 0F869B00 		jbe	.L844	#,
 9962      0000
 170:sieve_extend.c ****        index_ptr+=step;
 9963              		.loc 1 170 8 view .LVU3370
 9964              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 9965              		.loc 1 170 19 is_stmt 0 view .LVU3371
 9966 3b85 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_614, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 9967              		.loc 1 171 8 is_stmt 1 view .LVU3372
 9968              	.LVL539:
 172:sieve_extend.c ****        index_ptr+=step;
 9969              		.loc 1 172 8 view .LVU3373
 9970              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 9971              		.loc 1 172 19 is_stmt 0 view .LVU3374
 9972 3b88 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_614, index: _261, offset: 0B], _246
GAS LISTING /tmp/cct11Qa0.s 			page 272


 173:sieve_extend.c ****        *index_ptr |= mask;
 9973              		.loc 1 173 8 is_stmt 1 view .LVU3375
 9974              	.LVL540:
 174:sieve_extend.c ****        index_ptr+=step;
 9975              		.loc 1 174 8 view .LVU3376
 9976              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 9977              		.loc 1 174 19 is_stmt 0 view .LVU3377
 9978 3b8c 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1257, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 9979              		.loc 1 175 8 is_stmt 1 view .LVU3378
 9980              	.LVL541:
 176:sieve_extend.c ****        index_ptr+=step;
 9981              		.loc 1 176 8 view .LVU3379
 9982              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 9983              		.loc 1 176 19 is_stmt 0 view .LVU3380
 9984 3b8f 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1257, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 9985              		.loc 1 177 8 is_stmt 1 view .LVU3381
 9986              	.LVL542:
 178:sieve_extend.c ****        index_ptr+=step;
 9987              		.loc 1 178 8 view .LVU3382
 9988 3b93 4801FE   		add	rsi, rdi	# ivtmp.631, tmp684
 9989              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 9990              		.loc 1 178 19 is_stmt 0 view .LVU3383
 9991 3b96 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_614, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 9992              		.loc 1 179 8 is_stmt 1 view .LVU3384
 9993 3b9a 4801F8   		add	rax, rdi	# index_ptr, tmp684
 9994              	.LVL543:
 169:sieve_extend.c ****        *index_ptr |= mask;
 9995              		.loc 1 169 10 view .LVU3385
 9996 3b9d 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9997 3ba0 767E     		jbe	.L844	#,
 170:sieve_extend.c ****        index_ptr+=step;
 9998              		.loc 1 170 8 view .LVU3386
 9999              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10000              		.loc 1 170 19 is_stmt 0 view .LVU3387
 10001 3ba2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_614, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 10002              		.loc 1 171 8 is_stmt 1 view .LVU3388
 10003              	.LVL544:
 172:sieve_extend.c ****        index_ptr+=step;
 10004              		.loc 1 172 8 view .LVU3389
 10005              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10006              		.loc 1 172 19 is_stmt 0 view .LVU3390
 10007 3ba5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_614, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 10008              		.loc 1 173 8 is_stmt 1 view .LVU3391
 10009              	.LVL545:
 174:sieve_extend.c ****        index_ptr+=step;
 10010              		.loc 1 174 8 view .LVU3392
 10011              	# sieve_extend.c:174:        *index_ptr |= mask;
GAS LISTING /tmp/cct11Qa0.s 			page 273


 174:sieve_extend.c ****        index_ptr+=step;
 10012              		.loc 1 174 19 is_stmt 0 view .LVU3393
 10013 3ba9 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1257, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 10014              		.loc 1 175 8 is_stmt 1 view .LVU3394
 10015              	.LVL546:
 176:sieve_extend.c ****        index_ptr+=step;
 10016              		.loc 1 176 8 view .LVU3395
 10017              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10018              		.loc 1 176 19 is_stmt 0 view .LVU3396
 10019 3bac 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1257, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 10020              		.loc 1 177 8 is_stmt 1 view .LVU3397
 10021              	.LVL547:
 178:sieve_extend.c ****        index_ptr+=step;
 10022              		.loc 1 178 8 view .LVU3398
 10023 3bb0 4801FE   		add	rsi, rdi	# ivtmp.631, tmp684
 10024              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10025              		.loc 1 178 19 is_stmt 0 view .LVU3399
 10026 3bb3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_614, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 10027              		.loc 1 179 8 is_stmt 1 view .LVU3400
 10028 3bb7 4801F8   		add	rax, rdi	# index_ptr, tmp684
 10029              	.LVL548:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10030              		.loc 1 169 10 view .LVU3401
 10031 3bba 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10032 3bbd 7661     		jbe	.L844	#,
 170:sieve_extend.c ****        index_ptr+=step;
 10033              		.loc 1 170 8 view .LVU3402
 10034              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10035              		.loc 1 170 19 is_stmt 0 view .LVU3403
 10036 3bbf 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_614, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 10037              		.loc 1 171 8 is_stmt 1 view .LVU3404
 10038              	.LVL549:
 172:sieve_extend.c ****        index_ptr+=step;
 10039              		.loc 1 172 8 view .LVU3405
 10040              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10041              		.loc 1 172 19 is_stmt 0 view .LVU3406
 10042 3bc2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_614, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 10043              		.loc 1 173 8 is_stmt 1 view .LVU3407
 10044              	.LVL550:
 174:sieve_extend.c ****        index_ptr+=step;
 10045              		.loc 1 174 8 view .LVU3408
 10046              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10047              		.loc 1 174 19 is_stmt 0 view .LVU3409
 10048 3bc6 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1257, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 10049              		.loc 1 175 8 is_stmt 1 view .LVU3410
 10050              	.LVL551:
GAS LISTING /tmp/cct11Qa0.s 			page 274


 176:sieve_extend.c ****        index_ptr+=step;
 10051              		.loc 1 176 8 view .LVU3411
 10052              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10053              		.loc 1 176 19 is_stmt 0 view .LVU3412
 10054 3bc9 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1257, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 10055              		.loc 1 177 8 is_stmt 1 view .LVU3413
 10056              	.LVL552:
 178:sieve_extend.c ****        index_ptr+=step;
 10057              		.loc 1 178 8 view .LVU3414
 10058 3bcd 4801FE   		add	rsi, rdi	# ivtmp.631, tmp684
 10059              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10060              		.loc 1 178 19 is_stmt 0 view .LVU3415
 10061 3bd0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_614, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 10062              		.loc 1 179 8 is_stmt 1 view .LVU3416
 10063 3bd4 4801F8   		add	rax, rdi	# index_ptr, tmp684
 10064              	.LVL553:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10065              		.loc 1 169 10 view .LVU3417
 10066 3bd7 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10067 3bda 7644     		jbe	.L844	#,
 170:sieve_extend.c ****        index_ptr+=step;
 10068              		.loc 1 170 8 view .LVU3418
 10069              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10070              		.loc 1 170 19 is_stmt 0 view .LVU3419
 10071 3bdc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_614, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 10072              		.loc 1 171 8 is_stmt 1 view .LVU3420
 10073              	.LVL554:
 172:sieve_extend.c ****        index_ptr+=step;
 10074              		.loc 1 172 8 view .LVU3421
 10075              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10076              		.loc 1 172 19 is_stmt 0 view .LVU3422
 10077 3bdf 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_614, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 10078              		.loc 1 173 8 is_stmt 1 view .LVU3423
 10079              	.LVL555:
 174:sieve_extend.c ****        index_ptr+=step;
 10080              		.loc 1 174 8 view .LVU3424
 10081              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10082              		.loc 1 174 19 is_stmt 0 view .LVU3425
 10083 3be3 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1257, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 10084              		.loc 1 175 8 is_stmt 1 view .LVU3426
 10085              	.LVL556:
 176:sieve_extend.c ****        index_ptr+=step;
 10086              		.loc 1 176 8 view .LVU3427
 10087              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10088              		.loc 1 176 19 is_stmt 0 view .LVU3428
 10089 3be6 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1257, index: _261, offset: 0B], _246
GAS LISTING /tmp/cct11Qa0.s 			page 275


 177:sieve_extend.c ****        *index_ptr |= mask;
 10090              		.loc 1 177 8 is_stmt 1 view .LVU3429
 10091              	.LVL557:
 178:sieve_extend.c ****        index_ptr+=step;
 10092              		.loc 1 178 8 view .LVU3430
 10093 3bea 4801FE   		add	rsi, rdi	# ivtmp.631, tmp684
 10094              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10095              		.loc 1 178 19 is_stmt 0 view .LVU3431
 10096 3bed 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_614, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 10097              		.loc 1 179 8 is_stmt 1 view .LVU3432
 10098 3bf1 4801F8   		add	rax, rdi	# index_ptr, tmp684
 10099              	.LVL558:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10100              		.loc 1 169 10 view .LVU3433
 10101 3bf4 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10102 3bf7 7627     		jbe	.L844	#,
 170:sieve_extend.c ****        index_ptr+=step;
 10103              		.loc 1 170 8 view .LVU3434
 10104              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10105              		.loc 1 170 19 is_stmt 0 view .LVU3435
 10106 3bf9 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_614, offset: 0B], _246
 171:sieve_extend.c ****        *index_ptr |= mask;
 10107              		.loc 1 171 8 is_stmt 1 view .LVU3436
 10108              	.LVL559:
 172:sieve_extend.c ****        index_ptr+=step;
 10109              		.loc 1 172 8 view .LVU3437
 10110              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10111              		.loc 1 172 19 is_stmt 0 view .LVU3438
 10112 3bfc 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_614, index: _261, offset: 0B], _246
 173:sieve_extend.c ****        *index_ptr |= mask;
 10113              		.loc 1 173 8 is_stmt 1 view .LVU3439
 10114              	.LVL560:
 174:sieve_extend.c ****        index_ptr+=step;
 10115              		.loc 1 174 8 view .LVU3440
 10116              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10117              		.loc 1 174 19 is_stmt 0 view .LVU3441
 10118 3c00 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _1257, offset: 0B], _246
 175:sieve_extend.c ****        *index_ptr |= mask;
 10119              		.loc 1 175 8 is_stmt 1 view .LVU3442
 10120              	.LVL561:
 176:sieve_extend.c ****        index_ptr+=step;
 10121              		.loc 1 176 8 view .LVU3443
 10122              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10123              		.loc 1 176 19 is_stmt 0 view .LVU3444
 10124 3c03 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _1257, index: _261, offset: 0B], _246
 177:sieve_extend.c ****        *index_ptr |= mask;
 10125              		.loc 1 177 8 is_stmt 1 view .LVU3445
 10126              	.LVL562:
 178:sieve_extend.c ****        index_ptr+=step;
 10127              		.loc 1 178 8 view .LVU3446
 10128 3c07 4801FE   		add	rsi, rdi	# ivtmp.631, tmp684
GAS LISTING /tmp/cct11Qa0.s 			page 276


 10129              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10130              		.loc 1 178 19 is_stmt 0 view .LVU3447
 10131 3c0a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_614, index: _261, step: 4, offset: 0B], _246
 179:sieve_extend.c ****    }
 10132              		.loc 1 179 8 is_stmt 1 view .LVU3448
 10133 3c0e 4801F8   		add	rax, rdi	# index_ptr, tmp684
 10134              	.LVL563:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10135              		.loc 1 169 10 view .LVU3449
 10136 3c11 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10137 3c14 0F8708FF 		ja	.L845	#,
 10137      FFFF
 10138 3c1a 660F1F44 		.p2align 4
 10138      0000
 10139              		.p2align 3
 10140              	.L844:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10141              		.loc 1 182 4 view .LVU3450
 183:sieve_extend.c ****        *index_ptr |= mask;
 10142              		.loc 1 183 4 view .LVU3451
 183:sieve_extend.c ****        *index_ptr |= mask;
 10143              		.loc 1 183 10 view .LVU3452
 10144 3c20 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10145 3c23 765B     		jbe	.L846	#,
 10146              	.L847:
 184:sieve_extend.c ****        index_ptr+=step;
 10147              		.loc 1 184 8 view .LVU3453
 10148              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10149              		.loc 1 184 19 is_stmt 0 view .LVU3454
 10150 3c25 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 10151              		.loc 1 185 8 is_stmt 1 view .LVU3455
 10152              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10153              		.loc 1 185 17 is_stmt 0 view .LVU3456
 10154 3c28 4801D0   		add	rax, rdx	# index_ptr, _261
 10155              	.LVL564:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10156              		.loc 1 183 10 is_stmt 1 view .LVU3457
 10157 3c2b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10158 3c2e 7650     		jbe	.L846	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10159              		.loc 1 184 8 view .LVU3458
 10160              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10161              		.loc 1 184 19 is_stmt 0 view .LVU3459
 10162 3c30 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 10163              		.loc 1 185 8 is_stmt 1 view .LVU3460
 10164              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10165              		.loc 1 185 17 is_stmt 0 view .LVU3461
 10166 3c33 4801D0   		add	rax, rdx	# index_ptr, _261
 10167              	.LVL565:
 183:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/cct11Qa0.s 			page 277


 10168              		.loc 1 183 10 is_stmt 1 view .LVU3462
 10169 3c36 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10170 3c39 7645     		jbe	.L846	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10171              		.loc 1 184 8 view .LVU3463
 10172              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10173              		.loc 1 184 19 is_stmt 0 view .LVU3464
 10174 3c3b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 10175              		.loc 1 185 8 is_stmt 1 view .LVU3465
 10176              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10177              		.loc 1 185 17 is_stmt 0 view .LVU3466
 10178 3c3e 4801D0   		add	rax, rdx	# index_ptr, _261
 10179              	.LVL566:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10180              		.loc 1 183 10 is_stmt 1 view .LVU3467
 10181 3c41 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10182 3c44 763A     		jbe	.L846	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10183              		.loc 1 184 8 view .LVU3468
 10184              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10185              		.loc 1 184 19 is_stmt 0 view .LVU3469
 10186 3c46 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 10187              		.loc 1 185 8 is_stmt 1 view .LVU3470
 10188              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10189              		.loc 1 185 17 is_stmt 0 view .LVU3471
 10190 3c49 4801D0   		add	rax, rdx	# index_ptr, _261
 10191              	.LVL567:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10192              		.loc 1 183 10 is_stmt 1 view .LVU3472
 10193 3c4c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10194 3c4f 762F     		jbe	.L846	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10195              		.loc 1 184 8 view .LVU3473
 10196              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10197              		.loc 1 184 19 is_stmt 0 view .LVU3474
 10198 3c51 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 10199              		.loc 1 185 8 is_stmt 1 view .LVU3475
 10200              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10201              		.loc 1 185 17 is_stmt 0 view .LVU3476
 10202 3c54 4801D0   		add	rax, rdx	# index_ptr, _261
 10203              	.LVL568:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10204              		.loc 1 183 10 is_stmt 1 view .LVU3477
 10205 3c57 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10206 3c5a 7624     		jbe	.L846	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10207              		.loc 1 184 8 view .LVU3478
 10208              	# sieve_extend.c:184:        *index_ptr |= mask;
GAS LISTING /tmp/cct11Qa0.s 			page 278


 184:sieve_extend.c ****        index_ptr+=step;
 10209              		.loc 1 184 19 is_stmt 0 view .LVU3479
 10210 3c5c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 10211              		.loc 1 185 8 is_stmt 1 view .LVU3480
 10212              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10213              		.loc 1 185 17 is_stmt 0 view .LVU3481
 10214 3c5f 4801D0   		add	rax, rdx	# index_ptr, _261
 10215              	.LVL569:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10216              		.loc 1 183 10 is_stmt 1 view .LVU3482
 10217 3c62 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10218 3c65 7619     		jbe	.L846	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10219              		.loc 1 184 8 view .LVU3483
 10220              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10221              		.loc 1 184 19 is_stmt 0 view .LVU3484
 10222 3c67 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 10223              		.loc 1 185 8 is_stmt 1 view .LVU3485
 10224              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10225              		.loc 1 185 17 is_stmt 0 view .LVU3486
 10226 3c6a 4801D0   		add	rax, rdx	# index_ptr, _261
 10227              	.LVL570:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10228              		.loc 1 183 10 is_stmt 1 view .LVU3487
 10229 3c6d 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10230 3c70 760E     		jbe	.L846	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10231              		.loc 1 184 8 view .LVU3488
 10232              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10233              		.loc 1 184 19 is_stmt 0 view .LVU3489
 10234 3c72 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_886, offset: 0B], _246
 185:sieve_extend.c ****    }
 10235              		.loc 1 185 8 is_stmt 1 view .LVU3490
 10236              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10237              		.loc 1 185 17 is_stmt 0 view .LVU3491
 10238 3c75 4801D0   		add	rax, rdx	# index_ptr, _261
 10239              	.LVL571:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10240              		.loc 1 183 10 is_stmt 1 view .LVU3492
 10241 3c78 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10242 3c7b 77A8     		ja	.L847	#,
 10243 3c7d 0F1F00   		.p2align 4
 10244              		.p2align 3
 10245              	.L846:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10246              		.loc 1 188 4 view .LVU3493
 10247              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10248              		.loc 1 188 7 is_stmt 0 view .LVU3494
 10249 3c80 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
GAS LISTING /tmp/cct11Qa0.s 			page 279


 10250 3c83 741B     		je	.L1443	#,
 10251              	.LVL572:
 10252              	.L848:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10253              		.loc 1 188 7 view .LVU3495
 10254              	.LBE477:
 10255              	.LBE480:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10256              		.loc 1 381 77 is_stmt 1 view .LVU3496
 10257              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10258              		.loc 1 381 83 is_stmt 0 view .LVU3497
 10259 3c85 4D01EC   		add	r12, r13	# index, step
 10260              	.LVL573:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10261              		.loc 1 381 50 is_stmt 1 view .LVU3498
 10262              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10263              		.loc 1 381 5 is_stmt 0 view .LVU3499
 10264 3c88 4D39E0   		cmp	r8, r12	# range_stop_unique, index
 10265 3c8b 0F876FFE 		ja	.L849	#,
 10265      FFFF
 10266 3c91 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 10266      28
 10267              	.LVL574:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10268              		.loc 1 381 5 view .LVU3500
 10269 3c96 E93CF9FF 		jmp	.L819	#
 10269      FF
 10270              	.LVL575:
 10271 3c9b 0F1F4400 		.p2align 4,,7
 10271      00
 10272              		.p2align 3
 10273              	.L1443:
 10274              	.LBB481:
 10275              	.LBB478:
 189:sieve_extend.c ****    }
 10276              		.loc 1 189 7 is_stmt 1 view .LVU3501
 10277              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 10278              		.loc 1 189 27 is_stmt 0 view .LVU3502
 10279 3ca0 48234C24 		and	rcx, QWORD PTR 48[rsp]	# tmp689, %sfp
 10279      30
 10280              	.LVL576:
 10281              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 10282              		.loc 1 189 18 view .LVU3503
 10283 3ca5 490909   		or	QWORD PTR [r9], rcx	# *index_ptr_416, tmp689
 10284 3ca8 EBDB     		jmp	.L848	#
 10285              	.LVL577:
 10286 3caa 660F1F44 		.p2align 4,,7
 10286      0000
 10287              		.p2align 3
 10288              	.L1438:
 189:sieve_extend.c ****    }
 10289              		.loc 1 189 18 view .LVU3504
 10290              	.LBE478:
GAS LISTING /tmp/cct11Qa0.s 			page 280


 10291              	.LBE481:
 10292              	.LBE473:
 10293              	.LBE472:
 10294              	.LBE471:
 892:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 10295              		.loc 1 892 48 is_stmt 1 view .LVU3505
 10296              	.LBB482:
 10297              	.LBI482:
 260:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10298              		.loc 1 260 14 view .LVU3506
 10299              	.LBB483:
 261:sieve_extend.c **** 
 10300              		.loc 1 261 5 view .LVU3507
 10301              	# sieve_extend.c:261:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 261:sieve_extend.c **** 
 10302              		.loc 1 261 74 is_stmt 0 view .LVU3508
 10303 3cb0 4C89EF   		mov	rdi, r13	# tmp641, step
 10304 3cb3 48C1E706 		sal	rdi, 6	# tmp641,
 10305 3cb7 4C01E7   		add	rdi, r12	# tmp641, index
 10306 3cba 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp642
 10306      28
 10307 3cbf 410F92C1 		setc	r9b	#, _875
 10308              	# sieve_extend.c:263:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 263:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 10309              		.loc 1 263 8 view .LVU3509
 10310 3cc3 4939F8   		cmp	r8, rdi	# _69, tmp642
 10311 3cc6 450FB6D1 		movzx	r10d, r9b	# _875, _875
 10312              	.LVL578:
 263:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 10313              		.loc 1 263 5 is_stmt 1 view .LVU3510
 10314              	# sieve_extend.c:263:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 263:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 10315              		.loc 1 263 8 is_stmt 0 view .LVU3511
 10316 3cca 0F82DA02 		jb	.L831	#,
 10316      0000
 10317              	.LVL579:
 10318              	.LBB484:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10319              		.loc 1 284 54 is_stmt 1 view .LVU3512
 10320              	# sieve_extend.c:284:         for (register counter_t index = range_start; index <= range_stop_uniq
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10321              		.loc 1 284 9 is_stmt 0 view .LVU3513
 10322 3cd0 4D85D2   		test	r10, r10	# _875
 10323 3cd3 0F85FEF8 		jne	.L819	#,
 10323      FFFF
 10324              	.LBB485:
 10325              	.LBB486:
 10326              	.LBB487:
 10327              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10328              		.loc 1 163 20 view .LVU3514
 10329 3cd9 4D89C3   		mov	r11, r8	# range_stop_word, _69
 10330              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 10331              		.loc 1 165 110 view .LVU3515
 10332 3cdc 4B8D7CAD 		lea	rdi, 0[r13+r13*4]	# tmp650,
 10332      00
GAS LISTING /tmp/cct11Qa0.s 			page 281


 10333              	.LVL580:
 10334              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10335              		.loc 1 163 20 view .LVU3516
 10336 3ce1 49C1EB06 		shr	r11, 6	# range_stop_word,
 10337              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 10338              		.loc 1 189 29 view .LVU3517
 10339 3ce5 4489C0   		mov	eax, r8d	# tmp652, _69
 10340              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 10341              		.loc 1 165 133 view .LVU3518
 10342 3ce8 4D89DA   		mov	r10, r11	# tmp656, range_stop_word
 10343              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 10344              		.loc 1 189 29 view .LVU3519
 10345 3ceb F7D0     		not	eax	# tmp652
 10346              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 10347              		.loc 1 165 133 view .LVU3520
 10348 3ced 4929FA   		sub	r10, rdi	# tmp656, tmp650
 10349 3cf0 4939FB   		cmp	r11, rdi	# range_stop_word, tmp650
 10350              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 10351              		.loc 1 189 29 view .LVU3521
 10352 3cf3 48C7C6FF 		mov	rsi, -1	# tmp1580,
 10352      FFFFFF
 10353 3cfa 4F8D14D6 		lea	r10, [r14+r10*8]	# tmp658,
 10354 3cfe C4E2FBF7 		shrx	rdx, rsi, rax	# _237, tmp1580, tmp652
 10354      D6
 10355 3d03 4C89E8   		mov	rax, r13	# _1280, step
 10356 3d06 4D0F46D6 		cmovbe	r10, r14	# _95,, fast_loop_ptr
 10357              	# sieve_extend.c:182:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10358              		.loc 1 182 41 view .LVU3522
 10359 3d0a 4F8D0CDE 		lea	r9, [r14+r11*8]	# range_stop_ptr,
 10360 3d0e 48C1E004 		sal	rax, 4	# _1280,
 10361              	# sieve_extend.c:171:        index_ptr+=step;
 171:sieve_extend.c ****        *index_ptr |= mask;
 10362              		.loc 1 171 17 view .LVU3523
 10363 3d12 4A8D0CED 		lea	rcx, 0[0+r13*8]	# _205,
 10363      00000000 
 10364              	.LBE487:
 10365              	.LBE486:
 10366              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10367              		.loc 1 289 25 view .LVU3524
 10368 3d1a 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, index
 10368      08
 10369 3d1f 41BB0100 		mov	r11d, 1	# tmp665,
 10369      0000
 10370 3d25 4C890424 		mov	QWORD PTR [rsp], r8	# %sfp, _69
 10371 3d29 4889C3   		mov	rbx, rax	# _1280, _1280
 10372              	.LBB491:
 10373              	.LBB488:
 10374              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
GAS LISTING /tmp/cct11Qa0.s 			page 282


 10375              		.loc 1 189 29 view .LVU3525
 10376 3d2c 48895424 		mov	QWORD PTR 48[rsp], rdx	# %sfp, _237
 10376      30
 10377 3d31 48C1E703 		sal	rdi, 3	# tmp662,
 10378              	.LBE488:
 10379              	.LBE491:
 10380              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10381              		.loc 1 289 25 view .LVU3526
 10382 3d35 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# tmp642, %sfp
 10382      28
 10383              	.LVL581:
 10384 3d3a 660F1F44 		.p2align 4
 10384      0000
 10385              		.p2align 3
 10386              	.L842:
 285:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10387              		.loc 1 285 13 is_stmt 1 view .LVU3527
 10388              	# sieve_extend.c:285:             register counter_t index_word = wordindex(index);
 285:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10389              		.loc 1 285 32 is_stmt 0 view .LVU3528
 10390 3d40 4C89E0   		mov	rax, r12	# index_word, index
 10391              	# sieve_extend.c:286:             register bitword_t mask = SAFE_ZERO;
 286:sieve_extend.c ****             #pragma ivdep
 10392              		.loc 1 286 32 view .LVU3529
 10393 3d43 31D2     		xor	edx, edx	# mask
 10394              	# sieve_extend.c:285:             register counter_t index_word = wordindex(index);
 285:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10395              		.loc 1 285 32 view .LVU3530
 10396 3d45 48C1E806 		shr	rax, 6	# index_word,
 10397              	.LVL582:
 286:sieve_extend.c ****             #pragma ivdep
 10398              		.loc 1 286 13 is_stmt 1 view .LVU3531
 10399              	.L836:
 288:sieve_extend.c ****                 mask |= markmask(index);
 10400              		.loc 1 288 13 view .LVU3532
 289:sieve_extend.c ****                 index += step;
 10401              		.loc 1 289 17 view .LVU3533
 10402              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10403              		.loc 1 289 25 is_stmt 0 view .LVU3534
 10404 3d49 C4C299F7 		shlx	rsi, r11, r12	# tmp664, tmp665, index
 10404      F3
 10405              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10406              		.loc 1 290 23 view .LVU3535
 10407 3d4e 4D01EC   		add	r12, r13	# index, step
 10408              	.LVL583:
 10409              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10410              		.loc 1 289 22 view .LVU3536
 10411 3d51 4809F2   		or	rdx, rsi	# mask, tmp664
 10412              	.LVL584:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10413              		.loc 1 290 17 is_stmt 1 view .LVU3537
 291:sieve_extend.c ****             // #pragma ivdep
 10414              		.loc 1 291 21 view .LVU3538
GAS LISTING /tmp/cct11Qa0.s 			page 283


 10415              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10416              		.loc 1 291 36 is_stmt 0 view .LVU3539
 10417 3d54 4C89E6   		mov	rsi, r12	# tmp666, index
 10418 3d57 48C1EE06 		shr	rsi, 6	# tmp666,
 10419              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10420              		.loc 1 291 13 view .LVU3540
 10421 3d5b 4839F0   		cmp	rax, rsi	# index_word, tmp666
 10422 3d5e 0F85AC00 		jne	.L1306	#,
 10422      0000
 288:sieve_extend.c ****                 mask |= markmask(index);
 10423              		.loc 1 288 13 is_stmt 1 view .LVU3541
 289:sieve_extend.c ****                 index += step;
 10424              		.loc 1 289 17 view .LVU3542
 10425              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10426              		.loc 1 289 25 is_stmt 0 view .LVU3543
 10427 3d64 C4C299F7 		shlx	rsi, r11, r12	# tmp1205, tmp665, index
 10427      F3
 10428              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10429              		.loc 1 290 23 view .LVU3544
 10430 3d69 4D01EC   		add	r12, r13	# index, step
 10431              	.LVL585:
 10432              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10433              		.loc 1 289 22 view .LVU3545
 10434 3d6c 4809F2   		or	rdx, rsi	# mask, tmp1205
 10435              	.LVL586:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10436              		.loc 1 290 17 is_stmt 1 view .LVU3546
 291:sieve_extend.c ****             // #pragma ivdep
 10437              		.loc 1 291 21 view .LVU3547
 10438              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10439              		.loc 1 291 36 is_stmt 0 view .LVU3548
 10440 3d6f 4C89E6   		mov	rsi, r12	# tmp1206, index
 10441 3d72 48C1EE06 		shr	rsi, 6	# tmp1206,
 10442              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10443              		.loc 1 291 13 view .LVU3549
 10444 3d76 4839F0   		cmp	rax, rsi	# index_word, tmp1206
 10445 3d79 0F859100 		jne	.L1306	#,
 10445      0000
 288:sieve_extend.c ****                 mask |= markmask(index);
 10446              		.loc 1 288 13 is_stmt 1 view .LVU3550
 289:sieve_extend.c ****                 index += step;
 10447              		.loc 1 289 17 view .LVU3551
 10448              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10449              		.loc 1 289 25 is_stmt 0 view .LVU3552
 10450 3d7f C4C299F7 		shlx	rsi, r11, r12	# tmp1207, tmp665, index
 10450      F3
 10451              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10452              		.loc 1 290 23 view .LVU3553
GAS LISTING /tmp/cct11Qa0.s 			page 284


 10453 3d84 4D01EC   		add	r12, r13	# index, step
 10454              	.LVL587:
 10455              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10456              		.loc 1 289 22 view .LVU3554
 10457 3d87 4809F2   		or	rdx, rsi	# mask, tmp1207
 10458              	.LVL588:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10459              		.loc 1 290 17 is_stmt 1 view .LVU3555
 291:sieve_extend.c ****             // #pragma ivdep
 10460              		.loc 1 291 21 view .LVU3556
 10461              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10462              		.loc 1 291 36 is_stmt 0 view .LVU3557
 10463 3d8a 4C89E6   		mov	rsi, r12	# tmp1208, index
 10464 3d8d 48C1EE06 		shr	rsi, 6	# tmp1208,
 10465              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10466              		.loc 1 291 13 view .LVU3558
 10467 3d91 4839F0   		cmp	rax, rsi	# index_word, tmp1208
 10468 3d94 757A     		jne	.L1306	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 10469              		.loc 1 288 13 is_stmt 1 view .LVU3559
 289:sieve_extend.c ****                 index += step;
 10470              		.loc 1 289 17 view .LVU3560
 10471              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10472              		.loc 1 289 25 is_stmt 0 view .LVU3561
 10473 3d96 C4C299F7 		shlx	rsi, r11, r12	# tmp1209, tmp665, index
 10473      F3
 10474              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10475              		.loc 1 290 23 view .LVU3562
 10476 3d9b 4D01EC   		add	r12, r13	# index, step
 10477              	.LVL589:
 10478              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10479              		.loc 1 289 22 view .LVU3563
 10480 3d9e 4809F2   		or	rdx, rsi	# mask, tmp1209
 10481              	.LVL590:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10482              		.loc 1 290 17 is_stmt 1 view .LVU3564
 291:sieve_extend.c ****             // #pragma ivdep
 10483              		.loc 1 291 21 view .LVU3565
 10484              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10485              		.loc 1 291 36 is_stmt 0 view .LVU3566
 10486 3da1 4C89E6   		mov	rsi, r12	# tmp1210, index
 10487 3da4 48C1EE06 		shr	rsi, 6	# tmp1210,
 10488              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10489              		.loc 1 291 13 view .LVU3567
 10490 3da8 4839F0   		cmp	rax, rsi	# index_word, tmp1210
 10491 3dab 7563     		jne	.L1306	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 10492              		.loc 1 288 13 is_stmt 1 view .LVU3568
 289:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/cct11Qa0.s 			page 285


 10493              		.loc 1 289 17 view .LVU3569
 10494              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10495              		.loc 1 289 25 is_stmt 0 view .LVU3570
 10496 3dad C4C299F7 		shlx	rsi, r11, r12	# tmp1211, tmp665, index
 10496      F3
 10497              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10498              		.loc 1 290 23 view .LVU3571
 10499 3db2 4D01EC   		add	r12, r13	# index, step
 10500              	.LVL591:
 10501              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10502              		.loc 1 289 22 view .LVU3572
 10503 3db5 4809F2   		or	rdx, rsi	# mask, tmp1211
 10504              	.LVL592:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10505              		.loc 1 290 17 is_stmt 1 view .LVU3573
 291:sieve_extend.c ****             // #pragma ivdep
 10506              		.loc 1 291 21 view .LVU3574
 10507              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10508              		.loc 1 291 36 is_stmt 0 view .LVU3575
 10509 3db8 4C89E6   		mov	rsi, r12	# tmp1212, index
 10510 3dbb 48C1EE06 		shr	rsi, 6	# tmp1212,
 10511              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10512              		.loc 1 291 13 view .LVU3576
 10513 3dbf 4839F0   		cmp	rax, rsi	# index_word, tmp1212
 10514 3dc2 754C     		jne	.L1306	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 10515              		.loc 1 288 13 is_stmt 1 view .LVU3577
 289:sieve_extend.c ****                 index += step;
 10516              		.loc 1 289 17 view .LVU3578
 10517              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10518              		.loc 1 289 25 is_stmt 0 view .LVU3579
 10519 3dc4 C4C299F7 		shlx	rsi, r11, r12	# tmp1213, tmp665, index
 10519      F3
 10520              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10521              		.loc 1 290 23 view .LVU3580
 10522 3dc9 4D01EC   		add	r12, r13	# index, step
 10523              	.LVL593:
 10524              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10525              		.loc 1 289 22 view .LVU3581
 10526 3dcc 4809F2   		or	rdx, rsi	# mask, tmp1213
 10527              	.LVL594:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10528              		.loc 1 290 17 is_stmt 1 view .LVU3582
 291:sieve_extend.c ****             // #pragma ivdep
 10529              		.loc 1 291 21 view .LVU3583
 10530              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10531              		.loc 1 291 36 is_stmt 0 view .LVU3584
 10532 3dcf 4C89E6   		mov	rsi, r12	# tmp1214, index
GAS LISTING /tmp/cct11Qa0.s 			page 286


 10533 3dd2 48C1EE06 		shr	rsi, 6	# tmp1214,
 10534              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10535              		.loc 1 291 13 view .LVU3585
 10536 3dd6 4839F0   		cmp	rax, rsi	# index_word, tmp1214
 10537 3dd9 7535     		jne	.L1306	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 10538              		.loc 1 288 13 is_stmt 1 view .LVU3586
 289:sieve_extend.c ****                 index += step;
 10539              		.loc 1 289 17 view .LVU3587
 10540              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10541              		.loc 1 289 25 is_stmt 0 view .LVU3588
 10542 3ddb C4C299F7 		shlx	rsi, r11, r12	# tmp1215, tmp665, index
 10542      F3
 10543              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10544              		.loc 1 290 23 view .LVU3589
 10545 3de0 4D01EC   		add	r12, r13	# index, step
 10546              	.LVL595:
 10547              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10548              		.loc 1 289 22 view .LVU3590
 10549 3de3 4809F2   		or	rdx, rsi	# mask, tmp1215
 10550              	.LVL596:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10551              		.loc 1 290 17 is_stmt 1 view .LVU3591
 291:sieve_extend.c ****             // #pragma ivdep
 10552              		.loc 1 291 21 view .LVU3592
 10553              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10554              		.loc 1 291 36 is_stmt 0 view .LVU3593
 10555 3de6 4C89E6   		mov	rsi, r12	# tmp1216, index
 10556 3de9 48C1EE06 		shr	rsi, 6	# tmp1216,
 10557              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10558              		.loc 1 291 13 view .LVU3594
 10559 3ded 4839F0   		cmp	rax, rsi	# index_word, tmp1216
 10560 3df0 751E     		jne	.L1306	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 10561              		.loc 1 288 13 is_stmt 1 view .LVU3595
 289:sieve_extend.c ****                 index += step;
 10562              		.loc 1 289 17 view .LVU3596
 10563              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10564              		.loc 1 289 25 is_stmt 0 view .LVU3597
 10565 3df2 C4C299F7 		shlx	rsi, r11, r12	# tmp1217, tmp665, index
 10565      F3
 10566              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10567              		.loc 1 290 23 view .LVU3598
 10568 3df7 4D01EC   		add	r12, r13	# index, step
 10569              	.LVL597:
 10570              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 10571              		.loc 1 289 22 view .LVU3599
 10572 3dfa 4809F2   		or	rdx, rsi	# mask, tmp1217
GAS LISTING /tmp/cct11Qa0.s 			page 287


 10573              	.LVL598:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 10574              		.loc 1 290 17 is_stmt 1 view .LVU3600
 291:sieve_extend.c ****             // #pragma ivdep
 10575              		.loc 1 291 21 view .LVU3601
 10576              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10577              		.loc 1 291 36 is_stmt 0 view .LVU3602
 10578 3dfd 4C89E6   		mov	rsi, r12	# tmp1218, index
 10579 3e00 48C1EE06 		shr	rsi, 6	# tmp1218,
 10580              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 10581              		.loc 1 291 13 view .LVU3603
 10582 3e04 4839F0   		cmp	rax, rsi	# index_word, tmp1218
 10583 3e07 0F843CFF 		je	.L836	#,
 10583      FFFF
 10584 3e0d 0F1F00   		.p2align 4
 10585              		.p2align 3
 10586              	.L1306:
 295:sieve_extend.c ****         }
 10587              		.loc 1 295 13 is_stmt 1 view .LVU3604
 10588              	.LVL599:
 10589              	.LBB492:
 10590              	.LBI486:
 135:sieve_extend.c **** //#if __APPLE__
 10591              		.loc 1 135 20 view .LVU3605
 10592              	.LBB489:
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10593              		.loc 1 163 4 view .LVU3606
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10594              		.loc 1 164 4 view .LVU3607
 10595              	# sieve_extend.c:164:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10596              		.loc 1 164 78 is_stmt 0 view .LVU3608
 10597 3e10 498D04C6 		lea	rax, [r14+rax*8]	# index_ptr,
 10598              	.LVL600:
 165:sieve_extend.c **** 
 10599              		.loc 1 165 4 is_stmt 1 view .LVU3609
 169:sieve_extend.c ****        *index_ptr |= mask;
 10600              		.loc 1 169 4 view .LVU3610
 169:sieve_extend.c ****        *index_ptr |= mask;
 10601              		.loc 1 169 10 view .LVU3611
 10602 3e14 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 10603 3e17 0F830301 		jnb	.L837	#,
 10603      0000
 169:sieve_extend.c ****        *index_ptr |= mask;
 10604              		.loc 1 169 10 is_stmt 0 view .LVU3612
 10605 3e1d 488D3418 		lea	rsi, [rax+rbx]	# ivtmp.609,
 10606              	.L838:
 170:sieve_extend.c ****        index_ptr+=step;
 10607              		.loc 1 170 8 is_stmt 1 view .LVU3613
 10608              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10609              		.loc 1 170 19 is_stmt 0 view .LVU3614
 10610 3e21 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_885, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 10611              		.loc 1 171 8 is_stmt 1 view .LVU3615
GAS LISTING /tmp/cct11Qa0.s 			page 288


 10612              	.LVL601:
 172:sieve_extend.c ****        index_ptr+=step;
 10613              		.loc 1 172 8 view .LVU3616
 10614              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10615              		.loc 1 172 19 is_stmt 0 view .LVU3617
 10616 3e24 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_885, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 10617              		.loc 1 173 8 is_stmt 1 view .LVU3618
 10618              	.LVL602:
 174:sieve_extend.c ****        index_ptr+=step;
 10619              		.loc 1 174 8 view .LVU3619
 10620              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10621              		.loc 1 174 19 is_stmt 0 view .LVU3620
 10622 3e28 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1274, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 10623              		.loc 1 175 8 is_stmt 1 view .LVU3621
 10624              	.LVL603:
 176:sieve_extend.c ****        index_ptr+=step;
 10625              		.loc 1 176 8 view .LVU3622
 10626              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10627              		.loc 1 176 19 is_stmt 0 view .LVU3623
 10628 3e2b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1274, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 10629              		.loc 1 177 8 is_stmt 1 view .LVU3624
 10630              	.LVL604:
 178:sieve_extend.c ****        index_ptr+=step;
 10631              		.loc 1 178 8 view .LVU3625
 10632 3e2f 4801FE   		add	rsi, rdi	# ivtmp.609, tmp662
 10633              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10634              		.loc 1 178 19 is_stmt 0 view .LVU3626
 10635 3e32 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_885, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 10636              		.loc 1 179 8 is_stmt 1 view .LVU3627
 10637 3e36 4801F8   		add	rax, rdi	# index_ptr, tmp662
 10638              	.LVL605:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10639              		.loc 1 169 10 view .LVU3628
 10640 3e39 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10641 3e3c 0F86DE00 		jbe	.L837	#,
 10641      0000
 170:sieve_extend.c ****        index_ptr+=step;
 10642              		.loc 1 170 8 view .LVU3629
 10643              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10644              		.loc 1 170 19 is_stmt 0 view .LVU3630
 10645 3e42 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_885, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 10646              		.loc 1 171 8 is_stmt 1 view .LVU3631
 10647              	.LVL606:
 172:sieve_extend.c ****        index_ptr+=step;
 10648              		.loc 1 172 8 view .LVU3632
 10649              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cct11Qa0.s 			page 289


 10650              		.loc 1 172 19 is_stmt 0 view .LVU3633
 10651 3e45 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_885, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 10652              		.loc 1 173 8 is_stmt 1 view .LVU3634
 10653              	.LVL607:
 174:sieve_extend.c ****        index_ptr+=step;
 10654              		.loc 1 174 8 view .LVU3635
 10655              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10656              		.loc 1 174 19 is_stmt 0 view .LVU3636
 10657 3e49 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1274, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 10658              		.loc 1 175 8 is_stmt 1 view .LVU3637
 10659              	.LVL608:
 176:sieve_extend.c ****        index_ptr+=step;
 10660              		.loc 1 176 8 view .LVU3638
 10661              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10662              		.loc 1 176 19 is_stmt 0 view .LVU3639
 10663 3e4c 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1274, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 10664              		.loc 1 177 8 is_stmt 1 view .LVU3640
 10665              	.LVL609:
 178:sieve_extend.c ****        index_ptr+=step;
 10666              		.loc 1 178 8 view .LVU3641
 10667 3e50 4801FE   		add	rsi, rdi	# ivtmp.609, tmp662
 10668              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10669              		.loc 1 178 19 is_stmt 0 view .LVU3642
 10670 3e53 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_885, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 10671              		.loc 1 179 8 is_stmt 1 view .LVU3643
 10672 3e57 4801F8   		add	rax, rdi	# index_ptr, tmp662
 10673              	.LVL610:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10674              		.loc 1 169 10 view .LVU3644
 10675 3e5a 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10676 3e5d 0F86BD00 		jbe	.L837	#,
 10676      0000
 170:sieve_extend.c ****        index_ptr+=step;
 10677              		.loc 1 170 8 view .LVU3645
 10678              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10679              		.loc 1 170 19 is_stmt 0 view .LVU3646
 10680 3e63 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_885, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 10681              		.loc 1 171 8 is_stmt 1 view .LVU3647
 10682              	.LVL611:
 172:sieve_extend.c ****        index_ptr+=step;
 10683              		.loc 1 172 8 view .LVU3648
 10684              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10685              		.loc 1 172 19 is_stmt 0 view .LVU3649
 10686 3e66 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_885, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 10687              		.loc 1 173 8 is_stmt 1 view .LVU3650
 10688              	.LVL612:
GAS LISTING /tmp/cct11Qa0.s 			page 290


 174:sieve_extend.c ****        index_ptr+=step;
 10689              		.loc 1 174 8 view .LVU3651
 10690              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10691              		.loc 1 174 19 is_stmt 0 view .LVU3652
 10692 3e6a 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1274, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 10693              		.loc 1 175 8 is_stmt 1 view .LVU3653
 10694              	.LVL613:
 176:sieve_extend.c ****        index_ptr+=step;
 10695              		.loc 1 176 8 view .LVU3654
 10696              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10697              		.loc 1 176 19 is_stmt 0 view .LVU3655
 10698 3e6d 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1274, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 10699              		.loc 1 177 8 is_stmt 1 view .LVU3656
 10700              	.LVL614:
 178:sieve_extend.c ****        index_ptr+=step;
 10701              		.loc 1 178 8 view .LVU3657
 10702 3e71 4801FE   		add	rsi, rdi	# ivtmp.609, tmp662
 10703              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10704              		.loc 1 178 19 is_stmt 0 view .LVU3658
 10705 3e74 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_885, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 10706              		.loc 1 179 8 is_stmt 1 view .LVU3659
 10707 3e78 4801F8   		add	rax, rdi	# index_ptr, tmp662
 10708              	.LVL615:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10709              		.loc 1 169 10 view .LVU3660
 10710 3e7b 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10711 3e7e 0F869C00 		jbe	.L837	#,
 10711      0000
 170:sieve_extend.c ****        index_ptr+=step;
 10712              		.loc 1 170 8 view .LVU3661
 10713              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10714              		.loc 1 170 19 is_stmt 0 view .LVU3662
 10715 3e84 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_885, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 10716              		.loc 1 171 8 is_stmt 1 view .LVU3663
 10717              	.LVL616:
 172:sieve_extend.c ****        index_ptr+=step;
 10718              		.loc 1 172 8 view .LVU3664
 10719              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10720              		.loc 1 172 19 is_stmt 0 view .LVU3665
 10721 3e87 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_885, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 10722              		.loc 1 173 8 is_stmt 1 view .LVU3666
 10723              	.LVL617:
 174:sieve_extend.c ****        index_ptr+=step;
 10724              		.loc 1 174 8 view .LVU3667
 10725              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10726              		.loc 1 174 19 is_stmt 0 view .LVU3668
GAS LISTING /tmp/cct11Qa0.s 			page 291


 10727 3e8b 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1274, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 10728              		.loc 1 175 8 is_stmt 1 view .LVU3669
 10729              	.LVL618:
 176:sieve_extend.c ****        index_ptr+=step;
 10730              		.loc 1 176 8 view .LVU3670
 10731              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10732              		.loc 1 176 19 is_stmt 0 view .LVU3671
 10733 3e8e 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1274, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 10734              		.loc 1 177 8 is_stmt 1 view .LVU3672
 10735              	.LVL619:
 178:sieve_extend.c ****        index_ptr+=step;
 10736              		.loc 1 178 8 view .LVU3673
 10737 3e92 4801FE   		add	rsi, rdi	# ivtmp.609, tmp662
 10738              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10739              		.loc 1 178 19 is_stmt 0 view .LVU3674
 10740 3e95 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_885, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 10741              		.loc 1 179 8 is_stmt 1 view .LVU3675
 10742 3e99 4801F8   		add	rax, rdi	# index_ptr, tmp662
 10743              	.LVL620:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10744              		.loc 1 169 10 view .LVU3676
 10745 3e9c 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10746 3e9f 767F     		jbe	.L837	#,
 170:sieve_extend.c ****        index_ptr+=step;
 10747              		.loc 1 170 8 view .LVU3677
 10748              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10749              		.loc 1 170 19 is_stmt 0 view .LVU3678
 10750 3ea1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_885, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 10751              		.loc 1 171 8 is_stmt 1 view .LVU3679
 10752              	.LVL621:
 172:sieve_extend.c ****        index_ptr+=step;
 10753              		.loc 1 172 8 view .LVU3680
 10754              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10755              		.loc 1 172 19 is_stmt 0 view .LVU3681
 10756 3ea4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_885, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 10757              		.loc 1 173 8 is_stmt 1 view .LVU3682
 10758              	.LVL622:
 174:sieve_extend.c ****        index_ptr+=step;
 10759              		.loc 1 174 8 view .LVU3683
 10760              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10761              		.loc 1 174 19 is_stmt 0 view .LVU3684
 10762 3ea8 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1274, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 10763              		.loc 1 175 8 is_stmt 1 view .LVU3685
 10764              	.LVL623:
 176:sieve_extend.c ****        index_ptr+=step;
 10765              		.loc 1 176 8 view .LVU3686
GAS LISTING /tmp/cct11Qa0.s 			page 292


 10766              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10767              		.loc 1 176 19 is_stmt 0 view .LVU3687
 10768 3eab 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1274, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 10769              		.loc 1 177 8 is_stmt 1 view .LVU3688
 10770              	.LVL624:
 178:sieve_extend.c ****        index_ptr+=step;
 10771              		.loc 1 178 8 view .LVU3689
 10772 3eaf 4801FE   		add	rsi, rdi	# ivtmp.609, tmp662
 10773              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10774              		.loc 1 178 19 is_stmt 0 view .LVU3690
 10775 3eb2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_885, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 10776              		.loc 1 179 8 is_stmt 1 view .LVU3691
 10777 3eb6 4801F8   		add	rax, rdi	# index_ptr, tmp662
 10778              	.LVL625:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10779              		.loc 1 169 10 view .LVU3692
 10780 3eb9 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10781 3ebc 7662     		jbe	.L837	#,
 170:sieve_extend.c ****        index_ptr+=step;
 10782              		.loc 1 170 8 view .LVU3693
 10783              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10784              		.loc 1 170 19 is_stmt 0 view .LVU3694
 10785 3ebe 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_885, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 10786              		.loc 1 171 8 is_stmt 1 view .LVU3695
 10787              	.LVL626:
 172:sieve_extend.c ****        index_ptr+=step;
 10788              		.loc 1 172 8 view .LVU3696
 10789              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10790              		.loc 1 172 19 is_stmt 0 view .LVU3697
 10791 3ec1 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_885, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 10792              		.loc 1 173 8 is_stmt 1 view .LVU3698
 10793              	.LVL627:
 174:sieve_extend.c ****        index_ptr+=step;
 10794              		.loc 1 174 8 view .LVU3699
 10795              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10796              		.loc 1 174 19 is_stmt 0 view .LVU3700
 10797 3ec5 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1274, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 10798              		.loc 1 175 8 is_stmt 1 view .LVU3701
 10799              	.LVL628:
 176:sieve_extend.c ****        index_ptr+=step;
 10800              		.loc 1 176 8 view .LVU3702
 10801              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10802              		.loc 1 176 19 is_stmt 0 view .LVU3703
 10803 3ec8 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1274, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 10804              		.loc 1 177 8 is_stmt 1 view .LVU3704
GAS LISTING /tmp/cct11Qa0.s 			page 293


 10805              	.LVL629:
 178:sieve_extend.c ****        index_ptr+=step;
 10806              		.loc 1 178 8 view .LVU3705
 10807 3ecc 4801FE   		add	rsi, rdi	# ivtmp.609, tmp662
 10808              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10809              		.loc 1 178 19 is_stmt 0 view .LVU3706
 10810 3ecf 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_885, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 10811              		.loc 1 179 8 is_stmt 1 view .LVU3707
 10812 3ed3 4801F8   		add	rax, rdi	# index_ptr, tmp662
 10813              	.LVL630:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10814              		.loc 1 169 10 view .LVU3708
 10815 3ed6 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10816 3ed9 7645     		jbe	.L837	#,
 170:sieve_extend.c ****        index_ptr+=step;
 10817              		.loc 1 170 8 view .LVU3709
 10818              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10819              		.loc 1 170 19 is_stmt 0 view .LVU3710
 10820 3edb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_885, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 10821              		.loc 1 171 8 is_stmt 1 view .LVU3711
 10822              	.LVL631:
 172:sieve_extend.c ****        index_ptr+=step;
 10823              		.loc 1 172 8 view .LVU3712
 10824              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10825              		.loc 1 172 19 is_stmt 0 view .LVU3713
 10826 3ede 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_885, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 10827              		.loc 1 173 8 is_stmt 1 view .LVU3714
 10828              	.LVL632:
 174:sieve_extend.c ****        index_ptr+=step;
 10829              		.loc 1 174 8 view .LVU3715
 10830              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10831              		.loc 1 174 19 is_stmt 0 view .LVU3716
 10832 3ee2 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1274, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 10833              		.loc 1 175 8 is_stmt 1 view .LVU3717
 10834              	.LVL633:
 176:sieve_extend.c ****        index_ptr+=step;
 10835              		.loc 1 176 8 view .LVU3718
 10836              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10837              		.loc 1 176 19 is_stmt 0 view .LVU3719
 10838 3ee5 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1274, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 10839              		.loc 1 177 8 is_stmt 1 view .LVU3720
 10840              	.LVL634:
 178:sieve_extend.c ****        index_ptr+=step;
 10841              		.loc 1 178 8 view .LVU3721
 10842 3ee9 4801FE   		add	rsi, rdi	# ivtmp.609, tmp662
 10843              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cct11Qa0.s 			page 294


 10844              		.loc 1 178 19 is_stmt 0 view .LVU3722
 10845 3eec 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_885, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 10846              		.loc 1 179 8 is_stmt 1 view .LVU3723
 10847 3ef0 4801F8   		add	rax, rdi	# index_ptr, tmp662
 10848              	.LVL635:
 169:sieve_extend.c ****        *index_ptr |= mask;
 10849              		.loc 1 169 10 view .LVU3724
 10850 3ef3 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10851 3ef6 7628     		jbe	.L837	#,
 170:sieve_extend.c ****        index_ptr+=step;
 10852              		.loc 1 170 8 view .LVU3725
 10853              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 10854              		.loc 1 170 19 is_stmt 0 view .LVU3726
 10855 3ef8 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_885, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 10856              		.loc 1 171 8 is_stmt 1 view .LVU3727
 10857              	.LVL636:
 172:sieve_extend.c ****        index_ptr+=step;
 10858              		.loc 1 172 8 view .LVU3728
 10859              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 10860              		.loc 1 172 19 is_stmt 0 view .LVU3729
 10861 3efb 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_885, index: _205, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 10862              		.loc 1 173 8 is_stmt 1 view .LVU3730
 10863              	.LVL637:
 174:sieve_extend.c ****        index_ptr+=step;
 10864              		.loc 1 174 8 view .LVU3731
 10865              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 10866              		.loc 1 174 19 is_stmt 0 view .LVU3732
 10867 3eff 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1274, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 10868              		.loc 1 175 8 is_stmt 1 view .LVU3733
 10869              	.LVL638:
 176:sieve_extend.c ****        index_ptr+=step;
 10870              		.loc 1 176 8 view .LVU3734
 10871              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 10872              		.loc 1 176 19 is_stmt 0 view .LVU3735
 10873 3f02 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1274, index: _205, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 10874              		.loc 1 177 8 is_stmt 1 view .LVU3736
 10875              	.LVL639:
 178:sieve_extend.c ****        index_ptr+=step;
 10876              		.loc 1 178 8 view .LVU3737
 10877 3f06 4801FE   		add	rsi, rdi	# ivtmp.609, tmp662
 10878              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 10879              		.loc 1 178 19 is_stmt 0 view .LVU3738
 10880 3f09 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_885, index: _205, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 10881              		.loc 1 179 8 is_stmt 1 view .LVU3739
 10882 3f0d 4801F8   		add	rax, rdi	# index_ptr, tmp662
 10883              	.LVL640:
GAS LISTING /tmp/cct11Qa0.s 			page 295


 169:sieve_extend.c ****        *index_ptr |= mask;
 10884              		.loc 1 169 10 view .LVU3740
 10885 3f10 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 10886 3f13 0F8708FF 		ja	.L838	#,
 10886      FFFF
 10887 3f19 0F1F8000 		.p2align 4
 10887      000000
 10888              		.p2align 3
 10889              	.L837:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10890              		.loc 1 182 4 view .LVU3741
 183:sieve_extend.c ****        *index_ptr |= mask;
 10891              		.loc 1 183 4 view .LVU3742
 183:sieve_extend.c ****        *index_ptr |= mask;
 10892              		.loc 1 183 10 view .LVU3743
 10893 3f20 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10894 3f23 765B     		jbe	.L839	#,
 10895              	.L840:
 184:sieve_extend.c ****        index_ptr+=step;
 10896              		.loc 1 184 8 view .LVU3744
 10897              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10898              		.loc 1 184 19 is_stmt 0 view .LVU3745
 10899 3f25 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_883, offset: 0B], mask
 185:sieve_extend.c ****    }
 10900              		.loc 1 185 8 is_stmt 1 view .LVU3746
 10901              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10902              		.loc 1 185 17 is_stmt 0 view .LVU3747
 10903 3f28 4801C8   		add	rax, rcx	# index_ptr, _205
 10904              	.LVL641:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10905              		.loc 1 183 10 is_stmt 1 view .LVU3748
 10906 3f2b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10907 3f2e 7650     		jbe	.L839	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10908              		.loc 1 184 8 view .LVU3749
 10909              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10910              		.loc 1 184 19 is_stmt 0 view .LVU3750
 10911 3f30 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_883, offset: 0B], mask
 185:sieve_extend.c ****    }
 10912              		.loc 1 185 8 is_stmt 1 view .LVU3751
 10913              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10914              		.loc 1 185 17 is_stmt 0 view .LVU3752
 10915 3f33 4801C8   		add	rax, rcx	# index_ptr, _205
 10916              	.LVL642:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10917              		.loc 1 183 10 is_stmt 1 view .LVU3753
 10918 3f36 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10919 3f39 7645     		jbe	.L839	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10920              		.loc 1 184 8 view .LVU3754
 10921              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10922              		.loc 1 184 19 is_stmt 0 view .LVU3755
GAS LISTING /tmp/cct11Qa0.s 			page 296


 10923 3f3b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_883, offset: 0B], mask
 185:sieve_extend.c ****    }
 10924              		.loc 1 185 8 is_stmt 1 view .LVU3756
 10925              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10926              		.loc 1 185 17 is_stmt 0 view .LVU3757
 10927 3f3e 4801C8   		add	rax, rcx	# index_ptr, _205
 10928              	.LVL643:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10929              		.loc 1 183 10 is_stmt 1 view .LVU3758
 10930 3f41 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10931 3f44 763A     		jbe	.L839	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10932              		.loc 1 184 8 view .LVU3759
 10933              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10934              		.loc 1 184 19 is_stmt 0 view .LVU3760
 10935 3f46 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_883, offset: 0B], mask
 185:sieve_extend.c ****    }
 10936              		.loc 1 185 8 is_stmt 1 view .LVU3761
 10937              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10938              		.loc 1 185 17 is_stmt 0 view .LVU3762
 10939 3f49 4801C8   		add	rax, rcx	# index_ptr, _205
 10940              	.LVL644:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10941              		.loc 1 183 10 is_stmt 1 view .LVU3763
 10942 3f4c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10943 3f4f 762F     		jbe	.L839	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10944              		.loc 1 184 8 view .LVU3764
 10945              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10946              		.loc 1 184 19 is_stmt 0 view .LVU3765
 10947 3f51 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_883, offset: 0B], mask
 185:sieve_extend.c ****    }
 10948              		.loc 1 185 8 is_stmt 1 view .LVU3766
 10949              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10950              		.loc 1 185 17 is_stmt 0 view .LVU3767
 10951 3f54 4801C8   		add	rax, rcx	# index_ptr, _205
 10952              	.LVL645:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10953              		.loc 1 183 10 is_stmt 1 view .LVU3768
 10954 3f57 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10955 3f5a 7624     		jbe	.L839	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10956              		.loc 1 184 8 view .LVU3769
 10957              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10958              		.loc 1 184 19 is_stmt 0 view .LVU3770
 10959 3f5c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_883, offset: 0B], mask
 185:sieve_extend.c ****    }
 10960              		.loc 1 185 8 is_stmt 1 view .LVU3771
 10961              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10962              		.loc 1 185 17 is_stmt 0 view .LVU3772
GAS LISTING /tmp/cct11Qa0.s 			page 297


 10963 3f5f 4801C8   		add	rax, rcx	# index_ptr, _205
 10964              	.LVL646:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10965              		.loc 1 183 10 is_stmt 1 view .LVU3773
 10966 3f62 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10967 3f65 7619     		jbe	.L839	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10968              		.loc 1 184 8 view .LVU3774
 10969              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10970              		.loc 1 184 19 is_stmt 0 view .LVU3775
 10971 3f67 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_883, offset: 0B], mask
 185:sieve_extend.c ****    }
 10972              		.loc 1 185 8 is_stmt 1 view .LVU3776
 10973              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10974              		.loc 1 185 17 is_stmt 0 view .LVU3777
 10975 3f6a 4801C8   		add	rax, rcx	# index_ptr, _205
 10976              	.LVL647:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10977              		.loc 1 183 10 is_stmt 1 view .LVU3778
 10978 3f6d 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10979 3f70 760E     		jbe	.L839	#,
 184:sieve_extend.c ****        index_ptr+=step;
 10980              		.loc 1 184 8 view .LVU3779
 10981              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10982              		.loc 1 184 19 is_stmt 0 view .LVU3780
 10983 3f72 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_883, offset: 0B], mask
 185:sieve_extend.c ****    }
 10984              		.loc 1 185 8 is_stmt 1 view .LVU3781
 10985              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 10986              		.loc 1 185 17 is_stmt 0 view .LVU3782
 10987 3f75 4801C8   		add	rax, rcx	# index_ptr, _205
 10988              	.LVL648:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10989              		.loc 1 183 10 is_stmt 1 view .LVU3783
 10990 3f78 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10991 3f7b 77A8     		ja	.L840	#,
 10992 3f7d 0F1F00   		.p2align 4
 10993              		.p2align 3
 10994              	.L839:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10995              		.loc 1 188 4 view .LVU3784
 10996              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 10997              		.loc 1 188 7 is_stmt 0 view .LVU3785
 10998 3f80 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 10999 3f83 741B     		je	.L1444	#,
 11000              	.LVL649:
 11001              	.L841:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11002              		.loc 1 188 7 view .LVU3786
 11003              	.LBE489:
 11004              	.LBE492:
 11005              	.LBE485:
GAS LISTING /tmp/cct11Qa0.s 			page 298


 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11006              		.loc 1 284 54 is_stmt 1 view .LVU3787
 11007              	# sieve_extend.c:284:         for (register counter_t index = range_start; index <= range_stop_uniq
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11008              		.loc 1 284 9 is_stmt 0 view .LVU3788
 11009 3f85 4D39E0   		cmp	r8, r12	# tmp642, index
 11010 3f88 0F83B2FD 		jnb	.L842	#,
 11010      FFFF
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11011              		.loc 1 284 9 view .LVU3789
 11012 3f8e 488B5C24 		mov	rbx, QWORD PTR 8[rsp]	# index, %sfp
 11012      08
 11013 3f93 4C8B0424 		mov	r8, QWORD PTR [rsp]	# _69, %sfp
 11014 3f97 E93BF6FF 		jmp	.L819	#
 11014      FF
 11015              	.LVL650:
 11016 3f9c 0F1F4000 		.p2align 4,,7
 11017              		.p2align 3
 11018              	.L1444:
 11019              	.LBB494:
 11020              	.LBB493:
 11021              	.LBB490:
 189:sieve_extend.c ****    }
 11022              		.loc 1 189 7 is_stmt 1 view .LVU3790
 11023              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 11024              		.loc 1 189 27 is_stmt 0 view .LVU3791
 11025 3fa0 48235424 		and	rdx, QWORD PTR 48[rsp]	# tmp668, %sfp
 11025      30
 11026              	.LVL651:
 11027              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 11028              		.loc 1 189 18 view .LVU3792
 11029 3fa5 490911   		or	QWORD PTR [r9], rdx	# *index_ptr_798, tmp668
 11030 3fa8 EBDB     		jmp	.L841	#
 11031              	.LVL652:
 11032              	.L831:
 189:sieve_extend.c ****    }
 11033              		.loc 1 189 18 view .LVU3793
 11034              	.LBE490:
 11035              	.LBE493:
 11036              	.LBE494:
 11037              	.LBE484:
 11038              	.LBB495:
 11039              	.LBB496:
 11040              	.LBB497:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11041              		.loc 1 267 54 is_stmt 1 view .LVU3794
 11042              	# sieve_extend.c:267:         for (register counter_t index = range_start; index <= range_stop;) {
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11043              		.loc 1 267 9 is_stmt 0 view .LVU3795
 11044 3faa 4D39E0   		cmp	r8, r12	# _69, index
 11045 3fad 0F8224F6 		jb	.L819	#,
 11045      FFFF
 11046              	.LBB498:
 11047              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/cct11Qa0.s 			page 299


 11048              		.loc 1 272 25 view .LVU3796
 11049 3fb3 BF010000 		mov	edi, 1	# tmp645,
 11049      00
 11050              	.LVL653:
 11051 3fb8 0F1F8400 		.p2align 4
 11051      00000000 
 11052              		.p2align 3
 11053              	.L835:
 268:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11054              		.loc 1 268 13 is_stmt 1 view .LVU3797
 11055              	# sieve_extend.c:268:             register counter_t index_word = wordindex(index);
 268:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11056              		.loc 1 268 32 is_stmt 0 view .LVU3798
 11057 3fc0 4C89E1   		mov	rcx, r12	# index_word, index
 11058              	# sieve_extend.c:269:             register bitword_t mask = SAFE_ZERO;
 269:sieve_extend.c ****             #pragma ivdep
 11059              		.loc 1 269 32 view .LVU3799
 11060 3fc3 4531C9   		xor	r9d, r9d	# mask
 11061              	# sieve_extend.c:268:             register counter_t index_word = wordindex(index);
 268:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11062              		.loc 1 268 32 view .LVU3800
 11063 3fc6 48C1E906 		shr	rcx, 6	# index_word,
 11064              	.LVL654:
 269:sieve_extend.c ****             #pragma ivdep
 11065              		.loc 1 269 13 is_stmt 1 view .LVU3801
 11066              	.L834:
 271:sieve_extend.c ****                 mask |= markmask(index);
 11067              		.loc 1 271 13 view .LVU3802
 272:sieve_extend.c ****                 index += step;
 11068              		.loc 1 272 17 view .LVU3803
 11069              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11070              		.loc 1 272 25 is_stmt 0 view .LVU3804
 11071 3fca C46299F7 		shlx	r10, rdi, r12	# tmp644, tmp645, index
 11071      D7
 11072              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11073              		.loc 1 273 23 view .LVU3805
 11074 3fcf 4D01EC   		add	r12, r13	# index, step
 11075              	.LVL655:
 11076              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11077              		.loc 1 274 36 view .LVU3806
 11078 3fd2 4D89E3   		mov	r11, r12	# tmp646, index
 11079              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11080              		.loc 1 272 22 view .LVU3807
 11081 3fd5 4D09D1   		or	r9, r10	# mask, tmp644
 11082              	.LVL656:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11083              		.loc 1 273 17 is_stmt 1 view .LVU3808
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11084              		.loc 1 274 21 view .LVU3809
 11085              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11086              		.loc 1 274 36 is_stmt 0 view .LVU3810
 11087 3fd8 49C1EB06 		shr	r11, 6	# tmp646,
GAS LISTING /tmp/cct11Qa0.s 			page 300


 11088              	.LVL657:
 11089              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11090              		.loc 1 274 13 view .LVU3811
 11091 3fdc 4C39D9   		cmp	rcx, r11	# index_word, tmp646
 11092 3fdf 0F85AB00 		jne	.L1305	#,
 11092      0000
 271:sieve_extend.c ****                 mask |= markmask(index);
 11093              		.loc 1 271 13 is_stmt 1 view .LVU3812
 272:sieve_extend.c ****                 index += step;
 11094              		.loc 1 272 17 view .LVU3813
 11095              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11096              		.loc 1 272 25 is_stmt 0 view .LVU3814
 11097 3fe5 C4E299F7 		shlx	rdx, rdi, r12	# tmp1185, tmp645, index
 11097      D7
 11098              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11099              		.loc 1 273 23 view .LVU3815
 11100 3fea 4D01EC   		add	r12, r13	# index, step
 11101              	.LVL658:
 11102              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11103              		.loc 1 274 36 view .LVU3816
 11104 3fed 4C89E0   		mov	rax, r12	# tmp1186, index
 11105              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11106              		.loc 1 272 22 view .LVU3817
 11107 3ff0 4909D1   		or	r9, rdx	# mask, tmp1185
 11108              	.LVL659:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11109              		.loc 1 273 17 is_stmt 1 view .LVU3818
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11110              		.loc 1 274 21 view .LVU3819
 11111              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11112              		.loc 1 274 36 is_stmt 0 view .LVU3820
 11113 3ff3 48C1E806 		shr	rax, 6	# tmp1186,
 11114              	.LVL660:
 11115              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11116              		.loc 1 274 13 view .LVU3821
 11117 3ff7 4839C1   		cmp	rcx, rax	# index_word, tmp1186
 11118 3ffa 0F859000 		jne	.L1305	#,
 11118      0000
 271:sieve_extend.c ****                 mask |= markmask(index);
 11119              		.loc 1 271 13 is_stmt 1 view .LVU3822
 272:sieve_extend.c ****                 index += step;
 11120              		.loc 1 272 17 view .LVU3823
 11121              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11122              		.loc 1 272 25 is_stmt 0 view .LVU3824
 11123 4000 C4E299F7 		shlx	rsi, rdi, r12	# tmp1187, tmp645, index
 11123      F7
 11124              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11125              		.loc 1 273 23 view .LVU3825
GAS LISTING /tmp/cct11Qa0.s 			page 301


 11126 4005 4D01EC   		add	r12, r13	# index, step
 11127              	.LVL661:
 11128              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11129              		.loc 1 274 36 view .LVU3826
 11130 4008 4D89E2   		mov	r10, r12	# tmp1188, index
 11131              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11132              		.loc 1 272 22 view .LVU3827
 11133 400b 4909F1   		or	r9, rsi	# mask, tmp1187
 11134              	.LVL662:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11135              		.loc 1 273 17 is_stmt 1 view .LVU3828
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11136              		.loc 1 274 21 view .LVU3829
 11137              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11138              		.loc 1 274 36 is_stmt 0 view .LVU3830
 11139 400e 49C1EA06 		shr	r10, 6	# tmp1188,
 11140              	.LVL663:
 11141              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11142              		.loc 1 274 13 view .LVU3831
 11143 4012 4C39D1   		cmp	rcx, r10	# index_word, tmp1188
 11144 4015 7579     		jne	.L1305	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 11145              		.loc 1 271 13 is_stmt 1 view .LVU3832
 272:sieve_extend.c ****                 index += step;
 11146              		.loc 1 272 17 view .LVU3833
 11147              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11148              		.loc 1 272 25 is_stmt 0 view .LVU3834
 11149 4017 C46299F7 		shlx	r11, rdi, r12	# tmp1189, tmp645, index
 11149      DF
 11150              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11151              		.loc 1 273 23 view .LVU3835
 11152 401c 4D01EC   		add	r12, r13	# index, step
 11153              	.LVL664:
 11154              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11155              		.loc 1 274 36 view .LVU3836
 11156 401f 4C89E2   		mov	rdx, r12	# tmp1190, index
 11157              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11158              		.loc 1 272 22 view .LVU3837
 11159 4022 4D09D9   		or	r9, r11	# mask, tmp1189
 11160              	.LVL665:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11161              		.loc 1 273 17 is_stmt 1 view .LVU3838
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11162              		.loc 1 274 21 view .LVU3839
 11163              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11164              		.loc 1 274 36 is_stmt 0 view .LVU3840
 11165 4025 48C1EA06 		shr	rdx, 6	# tmp1190,
 11166              	.LVL666:
GAS LISTING /tmp/cct11Qa0.s 			page 302


 11167              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11168              		.loc 1 274 13 view .LVU3841
 11169 4029 4839D1   		cmp	rcx, rdx	# index_word, tmp1190
 11170 402c 7562     		jne	.L1305	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 11171              		.loc 1 271 13 is_stmt 1 view .LVU3842
 272:sieve_extend.c ****                 index += step;
 11172              		.loc 1 272 17 view .LVU3843
 11173              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11174              		.loc 1 272 25 is_stmt 0 view .LVU3844
 11175 402e C4E299F7 		shlx	rax, rdi, r12	# tmp1191, tmp645, index
 11175      C7
 11176              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11177              		.loc 1 273 23 view .LVU3845
 11178 4033 4D01EC   		add	r12, r13	# index, step
 11179              	.LVL667:
 11180              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11181              		.loc 1 274 36 view .LVU3846
 11182 4036 4C89E6   		mov	rsi, r12	# tmp1192, index
 11183              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11184              		.loc 1 272 22 view .LVU3847
 11185 4039 4909C1   		or	r9, rax	# mask, tmp1191
 11186              	.LVL668:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11187              		.loc 1 273 17 is_stmt 1 view .LVU3848
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11188              		.loc 1 274 21 view .LVU3849
 11189              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11190              		.loc 1 274 36 is_stmt 0 view .LVU3850
 11191 403c 48C1EE06 		shr	rsi, 6	# tmp1192,
 11192              	.LVL669:
 11193              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11194              		.loc 1 274 13 view .LVU3851
 11195 4040 4839F1   		cmp	rcx, rsi	# index_word, tmp1192
 11196 4043 754B     		jne	.L1305	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 11197              		.loc 1 271 13 is_stmt 1 view .LVU3852
 272:sieve_extend.c ****                 index += step;
 11198              		.loc 1 272 17 view .LVU3853
 11199              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11200              		.loc 1 272 25 is_stmt 0 view .LVU3854
 11201 4045 C46299F7 		shlx	r10, rdi, r12	# tmp1193, tmp645, index
 11201      D7
 11202              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11203              		.loc 1 273 23 view .LVU3855
 11204 404a 4D01EC   		add	r12, r13	# index, step
 11205              	.LVL670:
 11206              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
GAS LISTING /tmp/cct11Qa0.s 			page 303


 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11207              		.loc 1 274 36 view .LVU3856
 11208 404d 4D89E3   		mov	r11, r12	# tmp1194, index
 11209              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11210              		.loc 1 272 22 view .LVU3857
 11211 4050 4D09D1   		or	r9, r10	# mask, tmp1193
 11212              	.LVL671:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11213              		.loc 1 273 17 is_stmt 1 view .LVU3858
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11214              		.loc 1 274 21 view .LVU3859
 11215              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11216              		.loc 1 274 36 is_stmt 0 view .LVU3860
 11217 4053 49C1EB06 		shr	r11, 6	# tmp1194,
 11218              	.LVL672:
 11219              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11220              		.loc 1 274 13 view .LVU3861
 11221 4057 4C39D9   		cmp	rcx, r11	# index_word, tmp1194
 11222 405a 7534     		jne	.L1305	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 11223              		.loc 1 271 13 is_stmt 1 view .LVU3862
 272:sieve_extend.c ****                 index += step;
 11224              		.loc 1 272 17 view .LVU3863
 11225              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11226              		.loc 1 272 25 is_stmt 0 view .LVU3864
 11227 405c C4E299F7 		shlx	rdx, rdi, r12	# tmp1195, tmp645, index
 11227      D7
 11228              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11229              		.loc 1 273 23 view .LVU3865
 11230 4061 4D01EC   		add	r12, r13	# index, step
 11231              	.LVL673:
 11232              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11233              		.loc 1 274 36 view .LVU3866
 11234 4064 4C89E0   		mov	rax, r12	# tmp1196, index
 11235              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11236              		.loc 1 272 22 view .LVU3867
 11237 4067 4909D1   		or	r9, rdx	# mask, tmp1195
 11238              	.LVL674:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11239              		.loc 1 273 17 is_stmt 1 view .LVU3868
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11240              		.loc 1 274 21 view .LVU3869
 11241              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11242              		.loc 1 274 36 is_stmt 0 view .LVU3870
 11243 406a 48C1E806 		shr	rax, 6	# tmp1196,
 11244              	.LVL675:
 11245              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11246              		.loc 1 274 13 view .LVU3871
GAS LISTING /tmp/cct11Qa0.s 			page 304


 11247 406e 4839C1   		cmp	rcx, rax	# index_word, tmp1196
 11248 4071 751D     		jne	.L1305	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 11249              		.loc 1 271 13 is_stmt 1 view .LVU3872
 272:sieve_extend.c ****                 index += step;
 11250              		.loc 1 272 17 view .LVU3873
 11251              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11252              		.loc 1 272 25 is_stmt 0 view .LVU3874
 11253 4073 C4E299F7 		shlx	rsi, rdi, r12	# tmp1197, tmp645, index
 11253      F7
 11254              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11255              		.loc 1 273 23 view .LVU3875
 11256 4078 4D01EC   		add	r12, r13	# index, step
 11257              	.LVL676:
 11258              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11259              		.loc 1 274 36 view .LVU3876
 11260 407b 4D89E2   		mov	r10, r12	# tmp1198, index
 11261              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 11262              		.loc 1 272 22 view .LVU3877
 11263 407e 4909F1   		or	r9, rsi	# mask, tmp1197
 11264              	.LVL677:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 11265              		.loc 1 273 17 is_stmt 1 view .LVU3878
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11266              		.loc 1 274 21 view .LVU3879
 11267              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11268              		.loc 1 274 36 is_stmt 0 view .LVU3880
 11269 4081 49C1EA06 		shr	r10, 6	# tmp1198,
 11270              	.LVL678:
 11271              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 11272              		.loc 1 274 13 view .LVU3881
 11273 4085 4C39D1   		cmp	rcx, r10	# index_word, tmp1198
 11274 4088 0F843CFF 		je	.L834	#,
 11274      FFFF
 11275 408e 6690     		.p2align 4
 11276              		.p2align 3
 11277              	.L1305:
 277:sieve_extend.c ****         }
 11278              		.loc 1 277 13 is_stmt 1 view .LVU3882
 11279              	# sieve_extend.c:277:             bitarray[index_word] |= mask;
 277:sieve_extend.c ****         }
 11280              		.loc 1 277 34 is_stmt 0 view .LVU3883
 11281 4090 4D090CCE 		or	QWORD PTR [r14+rcx*8], r9	# *_187, mask
 277:sieve_extend.c ****         }
 11282              		.loc 1 277 34 view .LVU3884
 11283              	.LBE498:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11284              		.loc 1 267 54 is_stmt 1 view .LVU3885
 11285              	# sieve_extend.c:267:         for (register counter_t index = range_start; index <= range_stop;) {
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11286              		.loc 1 267 9 is_stmt 0 view .LVU3886
GAS LISTING /tmp/cct11Qa0.s 			page 305


 11287 4094 4D39E0   		cmp	r8, r12	# _69, index
 11288 4097 0F8323FF 		jnb	.L835	#,
 11288      FFFF
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11289              		.loc 1 267 9 view .LVU3887
 11290 409d E935F5FF 		jmp	.L819	#
 11290      FF
 11291              	.LVL679:
 11292              	.L1434:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11293              		.loc 1 267 9 view .LVU3888
 11294 40a2 4C8B7C24 		mov	r15, QWORD PTR 32[rsp]	# <retval>, %sfp
 11294      20
 11295 40a7 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, prime
 11295      30
 11296 40ac 498B4F08 		mov	rcx, QWORD PTR 8[r15]	# prephitmp_1485, sieve_90->bits
 11297 40b0 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, prephitmp_1485
 11297      58
 11298              	.LVL680:
 11299              	.L811:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11300              		.loc 1 267 9 view .LVU3889
 11301              	.LBE497:
 11302              	.LBE496:
 11303              	.LBE495:
 11304              	.LBE483:
 11305              	.LBE482:
 11306              	.LBE508:
 11307              	.LBE515:
 11308              	.LBE530:
 910:sieve_extend.c ****     prime = block.prime;
 11309              		.loc 1 910 5 is_stmt 1 view .LVU3890
 11310              	.LBB531:
 766:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 11311              		.loc 1 766 20 view .LVU3891
 11312              	.LBB525:
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 11313              		.loc 1 767 5 view .LVU3892
 11314              	# sieve_extend.c:767:     if (size < WORD_SIZE_counter)   {
 767:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 11315              		.loc 1 767 8 is_stmt 0 view .LVU3893
 11316 40b5 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 11317 40b9 0F86B6F9 		jbe	.L1445	#,
 11317      FFFF
 11318              	.LVL681:
 11319              	.L851:
 772:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 11320              		.loc 1 772 5 is_stmt 1 view .LVU3894
 773:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11321              		.loc 1 773 5 view .LVU3895
 11322              	# sieve_extend.c:772:     const counter_t copy_start  = source_start + size;
 772:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 11323              		.loc 1 772 21 is_stmt 0 view .LVU3896
 11324 40bf 4C8D0432 		lea	r8, [rdx+rsi]	# copy_start,
 11325              	.LVL682:
 11326              	# sieve_extend.c:774:     const bitshift_t source_bit = bitindex_calc(source_start);
 774:sieve_extend.c **** 
GAS LISTING /tmp/cct11Qa0.s 			page 306


 11327              		.loc 1 774 22 view .LVU3897
 11328 40c3 4889F0   		mov	rax, rsi	# source_bit, block$pattern_start
 11329              	# sieve_extend.c:773:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 773:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11330              		.loc 1 773 22 view .LVU3898
 11331 40c6 4183E03F 		and	r8d, 63	# copy_bit,
 11332              	.LVL683:
 774:sieve_extend.c **** 
 11333              		.loc 1 774 5 is_stmt 1 view .LVU3899
 11334              	# sieve_extend.c:774:     const bitshift_t source_bit = bitindex_calc(source_start);
 774:sieve_extend.c **** 
 11335              		.loc 1 774 22 is_stmt 0 view .LVU3900
 11336 40ca 83E03F   		and	eax, 63	# source_bit,
 11337              	.LVL684:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11338              		.loc 1 776 5 is_stmt 1 view .LVU3901
 11339              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11340              		.loc 1 776 37 is_stmt 0 view .LVU3902
 11341 40cd 488B4C24 		mov	rcx, QWORD PTR 88[rsp]	#, %sfp
 11341      58
 11342              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11343              		.loc 1 776 13 view .LVU3903
 11344 40d2 4939C0   		cmp	r8, rax	# copy_bit, source_bit
 11345              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11346              		.loc 1 776 37 view .LVU3904
 11347 40d5 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	#, %sfp
 11347      18
 11348              	# sieve_extend.c:776:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11349              		.loc 1 776 13 view .LVU3905
 11350 40da 0F82DC0F 		jb	.L1446	#,
 11350      0000
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11351              		.loc 1 777 10 is_stmt 1 view .LVU3906
 11352              	# sieve_extend.c:777:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11353              		.loc 1 777 13 is_stmt 0 view .LVU3907
 11354 40e0 0F877F01 		ja	.L1447	#,
 11354      0000
 778:sieve_extend.c **** }
 11355              		.loc 1 778 37 is_stmt 1 view .LVU3908
 11356 40e6 C5F877   		vzeroupper
 11357 40e9 E872D9FF 		call	extendSieve_aligned	#
 11357      FF
 11358              	.LVL685:
 11359              	.L852:
 778:sieve_extend.c **** }
 11360              		.loc 1 778 37 is_stmt 0 view .LVU3909
 11361              	.LBE525:
 11362              	.LBE531:
 911:sieve_extend.c **** 
 11363              		.loc 1 911 5 is_stmt 1 view .LVU3910
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11364              		.loc 1 914 5 view .LVU3911
GAS LISTING /tmp/cct11Qa0.s 			page 307


 11365              	.LBB532:
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11366              		.loc 1 914 10 view .LVU3912
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11367              		.loc 1 914 10 is_stmt 0 view .LVU3913
 11368 40ee 4C8B6424 		mov	r12, QWORD PTR 48[rsp]	# prime, %sfp
 11368      30
 11369              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11370              		.loc 1 914 83 view .LVU3914
 11371 40f3 4C8B5C24 		mov	r11, QWORD PTR 32[rsp]	# <retval>, %sfp
 11371      20
 11372              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11373              		.loc 1 914 38 view .LVU3915
 11374 40f8 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# blocksize, %sfp
 11374      10
 11375              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11376              		.loc 1 914 20 view .LVU3916
 11377 40fd 48C74424 		mov	QWORD PTR 88[rsp], 0	# %sfp,
 11377      58000000 
 11377      00
 11378 4106 498D7C24 		lea	rdi, 1[r12]	# tmp860,
 11378      01
 11379              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11380              		.loc 1 914 83 view .LVU3917
 11381 410b 498B5308 		mov	rdx, QWORD PTR 8[r11]	# _8, sieve_90->bits
 11382              	.LBB533:
 11383              	.LBB534:
 11384              	.LBB535:
 11385              	.LBB536:
 11386              	.LBB537:
 11387              	# sieve_extend.c:382:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 382:sieve_extend.c ****     }
 11388              		.loc 1 382 9 view .LVU3918
 11389 410f 41BC0100 		mov	r12d, 1	# tmp875,
 11389      0000
 11390 4115 48897C24 		mov	QWORD PTR 56[rsp], rdi	# %sfp, tmp860
 11390      38
 11391              	.LBE537:
 11392              	.LBE536:
 11393              	.LBE535:
 11394              	.LBE534:
 11395              	.LBE533:
 11396              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11397              		.loc 1 914 38 view .LVU3919
 11398 411a 4C8D7EFF 		lea	r15, -1[rsi]	# block_stop,
 11399              	.LVL686:
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11400              		.loc 1 914 63 is_stmt 1 view .LVU3920
 11401 411e 4D8B33   		mov	r14, QWORD PTR [r11]	# _30, MEM[(uint64_t * *)sieve_90]
 11402              	.LVL687:
 11403 4121 66662E0F 		.p2align 4
 11403      1F840000 
GAS LISTING /tmp/cct11Qa0.s 			page 308


 11403      0000000F 
 11403      1F4000
 11404              		.p2align 3
 11405              	.L858:
 915:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 11406              		.loc 1 915 9 view .LVU3921
 11407              	.LBB613:
 11408              	.LBB614:
 11409              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11410              		.loc 1 111 21 is_stmt 0 view .LVU3922
 11411 4130 4C8B5424 		mov	r10, QWORD PTR 48[rsp]	# prime, %sfp
 11411      30
 11412 4135 4939D7   		cmp	r15, rdx	# block_stop, _8
 11413              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11414              		.loc 1 111 12 view .LVU3923
 11415 4138 488B5C24 		mov	rbx, QWORD PTR 24[rsp]	# _95, %sfp
 11415      18
 11416 413d 4C0F47FA 		cmova	r15, rdx	# block_stop,, block_stop, _8
 11417              	.LVL688:
 111:sieve_extend.c ****     return index;
 11418              		.loc 1 111 12 view .LVU3924
 11419              	.LBE614:
 11420              	.LBE613:
 916:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 11421              		.loc 1 916 9 is_stmt 1 view .LVU3925
 11422              	.LBB617:
 11423              	.LBI613:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 11424              		.loc 1 110 25 view .LVU3926
 11425              	.LBB615:
 111:sieve_extend.c ****     return index;
 11426              		.loc 1 111 5 view .LVU3927
 111:sieve_extend.c ****     return index;
 11427              		.loc 1 111 11 view .LVU3928
 11428              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11429              		.loc 1 111 21 is_stmt 0 view .LVU3929
 11430 4141 4D89D5   		mov	r13, r10	# tmp691, prime
 11431 4144 49C1ED06 		shr	r13, 6	# tmp691,
 11432              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11433              		.loc 1 111 12 view .LVU3930
 11434 4148 4E8B0CEB 		mov	r9, QWORD PTR [rbx+r13*8]	# *_220, *_220
 11435              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11436              		.loc 1 111 11 view .LVU3931
 11437 414c 4D0FA3D1 		bt	r9, r10	# *_220, tmp1610
 11438 4150 0F833501 		jnc	.L855	#,
 11438      0000
 11439 4156 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp860, %sfp
 11439      38
 11440              	.L856:
 111:sieve_extend.c ****     return index;
 11441              		.loc 1 111 58 is_stmt 1 view .LVU3932
 11442              	.LVL689:
GAS LISTING /tmp/cct11Qa0.s 			page 309


 11443              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11444              		.loc 1 111 21 is_stmt 0 view .LVU3933
 11445 415b 4889C1   		mov	rcx, rax	# tmp696, tmp860
 11446              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11447              		.loc 1 111 63 view .LVU3934
 11448 415e 4889C6   		mov	rsi, rax	# prime, tmp860
 111:sieve_extend.c ****     return index;
 11449              		.loc 1 111 11 is_stmt 1 view .LVU3935
 11450              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11451              		.loc 1 111 21 is_stmt 0 view .LVU3936
 11452 4161 48C1E906 		shr	rcx, 6	# tmp696,
 11453              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11454              		.loc 1 111 12 view .LVU3937
 11455 4165 4C8B04CB 		mov	r8, QWORD PTR [rbx+rcx*8]	# *_34, *_34
 11456              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11457              		.loc 1 111 11 view .LVU3938
 11458 4169 490FA3C0 		bt	r8, rax	# *_34, tmp860
 11459 416d 0F830501 		jnc	.L1380	#,
 11459      0000
 11460 4173 4C8D5801 		lea	r11, 1[rax]	# tmp892,
 11461              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11462              		.loc 1 111 21 view .LVU3939
 11463 4177 4C89DF   		mov	rdi, r11	# tmp919, tmp860
 11464 417a 4C89D8   		mov	rax, r11	# tmp860, tmp892
 11465              	.LVL690:
 111:sieve_extend.c ****     return index;
 11466              		.loc 1 111 58 is_stmt 1 view .LVU3940
 11467              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11468              		.loc 1 111 21 is_stmt 0 view .LVU3941
 11469 417d 48C1EF06 		shr	rdi, 6	# tmp919,
 11470              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11471              		.loc 1 111 63 view .LVU3942
 11472 4181 4C89DE   		mov	rsi, r11	# prime, tmp860
 111:sieve_extend.c ****     return index;
 11473              		.loc 1 111 11 is_stmt 1 view .LVU3943
 11474              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11475              		.loc 1 111 12 is_stmt 0 view .LVU3944
 11476 4184 4C8B14FB 		mov	r10, QWORD PTR [rbx+rdi*8]	# *_34, *_34
 11477              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11478              		.loc 1 111 11 view .LVU3945
 11479 4188 4D0FA3DA 		bt	r10, r11	# *_34, tmp860
 11480 418c 0F83E600 		jnc	.L1380	#,
 11480      0000
 11481 4192 498D4301 		lea	rax, 1[r11]	# tmp860,
 11482              	.LVL691:
 111:sieve_extend.c ****     return index;
 11483              		.loc 1 111 58 is_stmt 1 view .LVU3946
GAS LISTING /tmp/cct11Qa0.s 			page 310


 11484              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11485              		.loc 1 111 21 is_stmt 0 view .LVU3947
 11486 4196 4989C5   		mov	r13, rax	# tmp1113, tmp860
 11487              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11488              		.loc 1 111 63 view .LVU3948
 11489 4199 4889C6   		mov	rsi, rax	# prime, tmp860
 111:sieve_extend.c ****     return index;
 11490              		.loc 1 111 11 is_stmt 1 view .LVU3949
 11491              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11492              		.loc 1 111 21 is_stmt 0 view .LVU3950
 11493 419c 49C1ED06 		shr	r13, 6	# tmp1113,
 11494              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11495              		.loc 1 111 12 view .LVU3951
 11496 41a0 4E8B0CEB 		mov	r9, QWORD PTR [rbx+r13*8]	# *_34, *_34
 11497              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11498              		.loc 1 111 11 view .LVU3952
 11499 41a4 490FA3C1 		bt	r9, rax	# *_34, tmp860
 11500 41a8 0F83CA00 		jnc	.L1380	#,
 11500      0000
 11501 41ae 498D4302 		lea	rax, 2[r11]	# tmp860,
 11502              	.LVL692:
 111:sieve_extend.c ****     return index;
 11503              		.loc 1 111 58 is_stmt 1 view .LVU3953
 11504              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11505              		.loc 1 111 21 is_stmt 0 view .LVU3954
 11506 41b2 4889C1   		mov	rcx, rax	# tmp1117, tmp860
 11507              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11508              		.loc 1 111 63 view .LVU3955
 11509 41b5 4889C6   		mov	rsi, rax	# prime, tmp860
 111:sieve_extend.c ****     return index;
 11510              		.loc 1 111 11 is_stmt 1 view .LVU3956
 11511              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11512              		.loc 1 111 21 is_stmt 0 view .LVU3957
 11513 41b8 48C1E906 		shr	rcx, 6	# tmp1117,
 11514              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11515              		.loc 1 111 12 view .LVU3958
 11516 41bc 4C8B04CB 		mov	r8, QWORD PTR [rbx+rcx*8]	# *_34, *_34
 11517              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11518              		.loc 1 111 11 view .LVU3959
 11519 41c0 490FA3C0 		bt	r8, rax	# *_34, tmp860
 11520 41c4 0F83AE00 		jnc	.L1380	#,
 11520      0000
 11521 41ca 498D4303 		lea	rax, 3[r11]	# tmp860,
 11522              	.LVL693:
 111:sieve_extend.c ****     return index;
 11523              		.loc 1 111 58 is_stmt 1 view .LVU3960
 11524              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cct11Qa0.s 			page 311


 111:sieve_extend.c ****     return index;
 11525              		.loc 1 111 21 is_stmt 0 view .LVU3961
 11526 41ce 4889C7   		mov	rdi, rax	# tmp1121, tmp860
 11527              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11528              		.loc 1 111 63 view .LVU3962
 11529 41d1 4889C6   		mov	rsi, rax	# prime, tmp860
 111:sieve_extend.c ****     return index;
 11530              		.loc 1 111 11 is_stmt 1 view .LVU3963
 11531              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11532              		.loc 1 111 21 is_stmt 0 view .LVU3964
 11533 41d4 48C1EF06 		shr	rdi, 6	# tmp1121,
 11534              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11535              		.loc 1 111 12 view .LVU3965
 11536 41d8 4C8B14FB 		mov	r10, QWORD PTR [rbx+rdi*8]	# *_34, *_34
 11537              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11538              		.loc 1 111 11 view .LVU3966
 11539 41dc 490FA3C2 		bt	r10, rax	# *_34, tmp860
 11540 41e0 0F839200 		jnc	.L1380	#,
 11540      0000
 11541 41e6 498D4304 		lea	rax, 4[r11]	# tmp860,
 11542              	.LVL694:
 111:sieve_extend.c ****     return index;
 11543              		.loc 1 111 58 is_stmt 1 view .LVU3967
 11544              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11545              		.loc 1 111 21 is_stmt 0 view .LVU3968
 11546 41ea 4989C5   		mov	r13, rax	# tmp1125, tmp860
 11547              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11548              		.loc 1 111 63 view .LVU3969
 11549 41ed 4889C6   		mov	rsi, rax	# prime, tmp860
 111:sieve_extend.c ****     return index;
 11550              		.loc 1 111 11 is_stmt 1 view .LVU3970
 11551              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11552              		.loc 1 111 21 is_stmt 0 view .LVU3971
 11553 41f0 49C1ED06 		shr	r13, 6	# tmp1125,
 11554              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11555              		.loc 1 111 12 view .LVU3972
 11556 41f4 4E8B0CEB 		mov	r9, QWORD PTR [rbx+r13*8]	# *_34, *_34
 11557              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11558              		.loc 1 111 11 view .LVU3973
 11559 41f8 490FA3C1 		bt	r9, rax	# *_34, tmp860
 11560 41fc 737A     		jnc	.L1380	#,
 11561 41fe 498D4305 		lea	rax, 5[r11]	# tmp860,
 11562              	.LVL695:
 111:sieve_extend.c ****     return index;
 11563              		.loc 1 111 58 is_stmt 1 view .LVU3974
 11564              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11565              		.loc 1 111 21 is_stmt 0 view .LVU3975
GAS LISTING /tmp/cct11Qa0.s 			page 312


 11566 4202 4889C1   		mov	rcx, rax	# tmp1129, tmp860
 11567              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11568              		.loc 1 111 63 view .LVU3976
 11569 4205 4889C6   		mov	rsi, rax	# prime, tmp860
 111:sieve_extend.c ****     return index;
 11570              		.loc 1 111 11 is_stmt 1 view .LVU3977
 11571              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11572              		.loc 1 111 21 is_stmt 0 view .LVU3978
 11573 4208 48C1E906 		shr	rcx, 6	# tmp1129,
 11574              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11575              		.loc 1 111 12 view .LVU3979
 11576 420c 4C8B04CB 		mov	r8, QWORD PTR [rbx+rcx*8]	# *_34, *_34
 11577              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11578              		.loc 1 111 11 view .LVU3980
 11579 4210 490FA3C0 		bt	r8, rax	# *_34, tmp860
 11580 4214 7362     		jnc	.L1380	#,
 11581 4216 498D4306 		lea	rax, 6[r11]	# tmp860,
 11582              	.LVL696:
 111:sieve_extend.c ****     return index;
 11583              		.loc 1 111 58 is_stmt 1 view .LVU3981
 11584              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11585              		.loc 1 111 21 is_stmt 0 view .LVU3982
 11586 421a 4889C7   		mov	rdi, rax	# tmp1133, tmp860
 11587              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11588              		.loc 1 111 63 view .LVU3983
 11589 421d 4889C6   		mov	rsi, rax	# prime, tmp860
 111:sieve_extend.c ****     return index;
 11590              		.loc 1 111 11 is_stmt 1 view .LVU3984
 11591              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11592              		.loc 1 111 21 is_stmt 0 view .LVU3985
 11593 4220 48C1EF06 		shr	rdi, 6	# tmp1133,
 11594              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11595              		.loc 1 111 12 view .LVU3986
 11596 4224 4C8B14FB 		mov	r10, QWORD PTR [rbx+rdi*8]	# *_34, *_34
 11597              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 11598              		.loc 1 111 11 view .LVU3987
 11599 4228 490FA3C2 		bt	r10, rax	# *_34, tmp860
 11600 422c 734A     		jnc	.L1380	#,
 11601 422e 498D4307 		lea	rax, 7[r11]	# tmp860,
 11602              	.LVL697:
 111:sieve_extend.c ****     return index;
 11603              		.loc 1 111 11 view .LVU3988
 11604 4232 E924FFFF 		jmp	.L856	#
 11604      FF
 11605              	.LVL698:
 11606              	.L815:
 111:sieve_extend.c ****     return index;
 11607              		.loc 1 111 11 view .LVU3989
GAS LISTING /tmp/cct11Qa0.s 			page 313


 11608              	.LBE615:
 11609              	.LBE617:
 11610              	.LBE532:
 11611              	.LBB621:
 11612              	.LBB516:
 11613              	.LBB509:
 11614              	.LBB499:
 11615              	.LBB461:
 778:sieve_extend.c **** }
 11616              		.loc 1 778 37 is_stmt 1 view .LVU3990
 11617 4237 C5F877   		vzeroupper
 11618 423a E821D8FF 		call	extendSieve_aligned	#
 11618      FF
 11619              	.LVL699:
 778:sieve_extend.c **** }
 11620              		.loc 1 778 37 is_stmt 0 view .LVU3991
 11621 423f 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# _69, %sfp
 11621      30
 11622 4244 4C897C24 		mov	QWORD PTR 64[rsp], r15	# %sfp, patternsize_bits
 11622      40
 11623 4249 E94AF3FF 		jmp	.L812	#
 11623      FF
 11624              	.LVL700:
 11625              	.L1441:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11626              		.loc 1 776 37 is_stmt 1 view .LVU3992
 11627 424e C5F877   		vzeroupper
 11628 4251 E88ADDFF 		call	extendSieve_shiftleft	#
 11628      FF
 11629              	.LVL701:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11630              		.loc 1 776 37 is_stmt 0 view .LVU3993
 11631 4256 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# _69, %sfp
 11631      30
 11632 425b 4C897C24 		mov	QWORD PTR 64[rsp], r15	# %sfp, patternsize_bits
 11632      40
 11633 4260 E933F3FF 		jmp	.L812	#
 11633      FF
 11634              	.LVL702:
 11635              	.L1447:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11636              		.loc 1 776 37 view .LVU3994
 11637              	.LBE461:
 11638              	.LBE499:
 11639              	.LBE509:
 11640              	.LBE516:
 11641              	.LBE621:
 11642              	.LBB622:
 11643              	.LBB526:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11644              		.loc 1 777 37 is_stmt 1 view .LVU3995
 11645 4265 C5F877   		vzeroupper
 11646 4268 E863C4FF 		call	extendSieve_shiftright_ivdep	#
 11646      FF
 11647              	.LVL703:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11648              		.loc 1 777 37 is_stmt 0 view .LVU3996
GAS LISTING /tmp/cct11Qa0.s 			page 314


 11649 426d E97CFEFF 		jmp	.L852	#
 11649      FF
 11650              	.LVL704:
 11651              		.p2align 4,,7
 11652 4272 660F1F44 		.p2align 3
 11652      0000
 11653              	.L1380:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11654              		.loc 1 777 37 view .LVU3997
 11655 4278 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, tmp860
 11655      38
 11656 427d 488D4001 		lea	rax, 1[rax]	# tmp860,
 11657              	.LVL705:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11658              		.loc 1 777 37 view .LVU3998
 11659 4281 48897424 		mov	QWORD PTR 48[rsp], rsi	# %sfp, prime
 11659      30
 11660 4286 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, tmp860
 11660      38
 11661              	.LVL706:
 11662              	.L855:
 777:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 11663              		.loc 1 777 37 view .LVU3999
 11664              	.LBE526:
 11665              	.LBE622:
 11666              	.LBB623:
 11667              	.LBB618:
 11668              	.LBB616:
 112:sieve_extend.c **** }
 11669              		.loc 1 112 5 is_stmt 1 view .LVU4000
 112:sieve_extend.c **** }
 11670              		.loc 1 112 5 is_stmt 0 view .LVU4001
 11671              	.LBE616:
 11672              	.LBE618:
 917:sieve_extend.c ****     } 
 11673              		.loc 1 917 9 is_stmt 1 view .LVU4002
 11674              	.LBB619:
 11675              	.LBI533:
 781:sieve_extend.c ****     counter_t prime = prime_start;
 11676              		.loc 1 781 13 view .LVU4003
 11677              	.LBB611:
 782:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 11678              		.loc 1 782 5 view .LVU4004
 783:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 11679              		.loc 1 783 5 view .LVU4005
 11680 428b 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# prime, %sfp
 11680      30
 11681              	# sieve_extend.c:783:     counter_t start = prime * prime * 2 + prime * 2;
 783:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 11682              		.loc 1 783 15 is_stmt 0 view .LVU4006
 11683 4290 488B4424 		mov	rax, QWORD PTR 56[rsp]	# index, %sfp
 11683      38
 11684 4295 4C8D041B 		lea	r8, [rbx+rbx]	# _939,
 11685 4299 490FAFC0 		imul	rax, r8	# index, _939
 11686              	.LVL707:
 784:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 11687              		.loc 1 784 5 is_stmt 1 view .LVU4007
GAS LISTING /tmp/cct11Qa0.s 			page 315


 785:sieve_extend.c **** 
 11688              		.loc 1 785 5 view .LVU4008
 787:sieve_extend.c ****     
 11689              		.loc 1 787 5 view .LVU4009
 789:sieve_extend.c ****         step  = prime * 2 + 1;
 11690              		.loc 1 789 5 view .LVU4010
 789:sieve_extend.c ****         step  = prime * 2 + 1;
 11691              		.loc 1 789 11 view .LVU4011
 11692 429d 4939C7   		cmp	r15, rax	# block_stop, index
 11693 42a0 0F828104 		jb	.L871	#,
 11693      0000
 790:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 11694              		.loc 1 790 9 view .LVU4012
 11695              	# sieve_extend.c:790:         step  = prime * 2 + 1;
 790:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 11696              		.loc 1 790 15 is_stmt 0 view .LVU4013
 11697 42a6 4983C001 		add	r8, 1	# step,
 11698              	.LVL708:
 791:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11699              		.loc 1 791 9 is_stmt 1 view .LVU4014
 11700              	# sieve_extend.c:791:         if unlikely(step > SMALLSTEP_FASTER) break;
 791:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11701              		.loc 1 791 12 is_stmt 0 view .LVU4015
 11702 42aa 4983F802 		cmp	r8, 2	# step,
 11703 42ae 0F87A404 		ja	.L920	#,
 11703      0000
 11704              	.LBB554:
 11705              	.LBB555:
 11706              	# sieve_extend.c:231:     const counter_t range_stop_word = wordindex(range_stop);
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 11707              		.loc 1 231 21 view .LVU4016
 11708 42b4 4C89FA   		mov	rdx, r15	# range_stop_word, block_stop
 11709              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 11710              		.loc 1 253 102 view .LVU4017
 11711 42b7 4589FB   		mov	r11d, r15d	# tmp861, block_stop
 11712              	# sieve_extend.c:231:     const counter_t range_stop_word = wordindex(range_stop);
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 11713              		.loc 1 231 21 view .LVU4018
 11714 42ba 48C1EA06 		shr	rdx, 6	# range_stop_word,
 11715              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 11716              		.loc 1 253 102 view .LVU4019
 11717 42be 41F7D3   		not	r11d	# tmp861
 11718              	# sieve_extend.c:231:     const counter_t range_stop_word = wordindex(range_stop);
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 11719              		.loc 1 231 21 view .LVU4020
 11720 42c1 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, range_stop_word
 11720      50
 11721              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 11722              		.loc 1 253 31 view .LVU4021
 11723 42c6 4D8D14D6 		lea	r10, [r14+rdx*8]	# _496,
 11724 42ca 4883EA01 		sub	rdx, 1	# _556,
 11725              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 11726              		.loc 1 253 102 view .LVU4022
GAS LISTING /tmp/cct11Qa0.s 			page 316


 11727 42ce 49C7C5FF 		mov	r13, -1	# tmp1625,
 11727      FFFFFF
 11728 42d5 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# prime, %sfp
 11728      30
 11729 42da C442A3F7 		shrx	r9, r13, r11	# _507, tmp1625, tmp1626
 11729      CD
 11730 42df 44895C24 		mov	DWORD PTR 40[rsp], r11d	# %sfp, tmp861
 11730      28
 11731 42e4 498D1CD6 		lea	rbx, [r14+rdx*8]	# _1304,
 11732 42e8 48895424 		mov	QWORD PTR 64[rsp], rdx	# %sfp, _556
 11732      40
 11733 42ed 4C894C24 		mov	QWORD PTR 72[rsp], r9	# %sfp, _507
 11733      48
 11734 42f2 4C8B5C24 		mov	r11, QWORD PTR 88[rsp]	# block_start, %sfp
 11734      58
 11735 42f7 660F1F84 		.p2align 4
 11735      00000000 
 11735      00
 11736              		.p2align 3
 11737              	.L861:
 11738              	.LVL709:
 253:sieve_extend.c **** }
 11739              		.loc 1 253 102 view .LVU4023
 11740              	.LBE555:
 11741              	.LBE554:
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 11742              		.loc 1 792 9 is_stmt 1 view .LVU4024
 11743              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 11744              		.loc 1 792 12 is_stmt 0 view .LVU4025
 11745 4300 488D4F01 		lea	rcx, 1[rdi]	# index,
 11746 4304 4C39D9   		cmp	rcx, r11	# index, block_start
 11747 4307 7712     		ja	.L862	#,
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 11748              		.loc 1 792 47 is_stmt 1 view .LVU4026
 11749              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 11750              		.loc 1 792 67 is_stmt 0 view .LVU4027
 11751 4309 4A8D041F 		lea	rax, [rdi+r11]	# _311,
 11752              	.LVL710:
 11753              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 11754              		.loc 1 792 108 view .LVU4028
 11755 430d 31D2     		xor	edx, edx	# tmp708
 11756              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 11757              		.loc 1 792 75 view .LVU4029
 11758 430f 4801C7   		add	rdi, rax	# tmp706, _311
 11759              	.LVL711:
 11760              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 11761              		.loc 1 792 108 view .LVU4030
 11762 4312 49F7F0   		div	r8	# step
 11763              	.LVL712:
 11764              	# sieve_extend.c:792:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 792:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 11765              		.loc 1 792 53 view .LVU4031
GAS LISTING /tmp/cct11Qa0.s 			page 317


 11766 4315 4889F8   		mov	rax, rdi	# tmp706, tmp706
 11767 4318 4829D0   		sub	rax, rdx	# tmp706, tmp708
 11768              	.LVL713:
 11769              	.L862:
 793:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 11770              		.loc 1 793 9 is_stmt 1 view .LVU4032
 11771              	.LBB563:
 11772              	.LBI554:
 222:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 11773              		.loc 1 222 20 view .LVU4033
 11774              	.LBB560:
 223:sieve_extend.c **** 
 11775              		.loc 1 223 5 view .LVU4034
 226:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 11776              		.loc 1 226 2 view .LVU4035
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11777              		.loc 1 227 5 view .LVU4036
 11778              	.LBB556:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11779              		.loc 1 227 10 view .LVU4037
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11780              		.loc 1 227 41 view .LVU4038
 11781              	.LBE556:
 11782              	.LBE560:
 11783              	.LBE563:
 11784 431b 4D89C5   		mov	r13, r8	# patternsize, step
 11785              	.LBB564:
 11786              	.LBB561:
 11787              	# sieve_extend.c:226: 	register bitword_t pattern = SAFE_SHIFTBIT;
 226:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 11788              		.loc 1 226 21 is_stmt 0 view .LVU4039
 11789 431e BE010000 		mov	esi, 1	# pattern,
 11789      00
 11790              	.LVL714:
 11791              	.L863:
 11792              	.LBB557:
 228:sieve_extend.c **** 
 11793              		.loc 1 228 9 is_stmt 1 view .LVU4040
 11794              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11795              		.loc 1 227 88 is_stmt 0 view .LVU4041
 11796 4323 4F8D4C2D 		lea	r9, [r13+r13]	# patternsize,
 11796      00
 11797              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11798              		.loc 1 228 29 view .LVU4042
 11799 4328 C4E291F7 		shlx	rdi, rsi, r13	# _450, pattern, patternsize
 11799      FE
 11800              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11801              		.loc 1 228 17 view .LVU4043
 11802 432d 4809FE   		or	rsi, rdi	# pattern, _450
 11803              	.LVL715:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11804              		.loc 1 227 76 is_stmt 1 view .LVU4044
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11805              		.loc 1 227 41 view .LVU4045
GAS LISTING /tmp/cct11Qa0.s 			page 318


 11806              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11807              		.loc 1 227 5 is_stmt 0 view .LVU4046
 11808 4330 4983F940 		cmp	r9, 64	# patternsize,
 11809 4334 0F87A600 		ja	.L1302	#,
 11809      0000
 228:sieve_extend.c **** 
 11810              		.loc 1 228 9 is_stmt 1 view .LVU4047
 11811              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11812              		.loc 1 227 88 is_stmt 0 view .LVU4048
 11813 433a 4A8D3CAD 		lea	rdi, 0[0+r13*4]	# patternsize,
 11813      00000000 
 11814              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11815              		.loc 1 228 29 view .LVU4049
 11816 4342 C4E2B1F7 		shlx	rdx, rsi, r9	# _450, pattern, patternsize
 11816      D6
 11817              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11818              		.loc 1 228 17 view .LVU4050
 11819 4347 4809D6   		or	rsi, rdx	# pattern, _450
 11820              	.LVL716:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11821              		.loc 1 227 76 is_stmt 1 view .LVU4051
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11822              		.loc 1 227 41 view .LVU4052
 11823              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11824              		.loc 1 227 5 is_stmt 0 view .LVU4053
 11825 434a 4883FF40 		cmp	rdi, 64	# patternsize,
 11826 434e 0F878C00 		ja	.L1302	#,
 11826      0000
 228:sieve_extend.c **** 
 11827              		.loc 1 228 9 is_stmt 1 view .LVU4054
 11828              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11829              		.loc 1 227 88 is_stmt 0 view .LVU4055
 11830 4354 4A8D14ED 		lea	rdx, 0[0+r13*8]	# patternsize,
 11830      00000000 
 11831              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11832              		.loc 1 228 29 view .LVU4056
 11833 435c C462C1F7 		shlx	r9, rsi, rdi	# _450, pattern, patternsize
 11833      CE
 11834              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11835              		.loc 1 228 17 view .LVU4057
 11836 4361 4C09CE   		or	rsi, r9	# pattern, _450
 11837              	.LVL717:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11838              		.loc 1 227 76 is_stmt 1 view .LVU4058
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11839              		.loc 1 227 41 view .LVU4059
 11840              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11841              		.loc 1 227 5 is_stmt 0 view .LVU4060
GAS LISTING /tmp/cct11Qa0.s 			page 319


 11842 4364 4883FA40 		cmp	rdx, 64	# patternsize,
 11843 4368 7776     		ja	.L1302	#,
 228:sieve_extend.c **** 
 11844              		.loc 1 228 9 is_stmt 1 view .LVU4061
 11845              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11846              		.loc 1 227 88 is_stmt 0 view .LVU4062
 11847 436a 4D89E9   		mov	r9, r13	# patternsize, patternsize
 11848              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11849              		.loc 1 228 29 view .LVU4063
 11850 436d C4E2E9F7 		shlx	rdi, rsi, rdx	# _450, pattern, patternsize
 11850      FE
 11851              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11852              		.loc 1 227 88 view .LVU4064
 11853 4372 49C1E104 		sal	r9, 4	# patternsize,
 11854              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11855              		.loc 1 228 17 view .LVU4065
 11856 4376 4809FE   		or	rsi, rdi	# pattern, _450
 11857              	.LVL718:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11858              		.loc 1 227 76 is_stmt 1 view .LVU4066
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11859              		.loc 1 227 41 view .LVU4067
 11860              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11861              		.loc 1 227 5 is_stmt 0 view .LVU4068
 11862 4379 4983F940 		cmp	r9, 64	# patternsize,
 11863 437d 7761     		ja	.L1302	#,
 228:sieve_extend.c **** 
 11864              		.loc 1 228 9 is_stmt 1 view .LVU4069
 11865              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11866              		.loc 1 227 88 is_stmt 0 view .LVU4070
 11867 437f 4C89EF   		mov	rdi, r13	# patternsize, patternsize
 11868              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11869              		.loc 1 228 29 view .LVU4071
 11870 4382 C4E2B1F7 		shlx	rdx, rsi, r9	# _450, pattern, patternsize
 11870      D6
 11871              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11872              		.loc 1 227 88 view .LVU4072
 11873 4387 48C1E705 		sal	rdi, 5	# patternsize,
 11874              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11875              		.loc 1 228 17 view .LVU4073
 11876 438b 4809D6   		or	rsi, rdx	# pattern, _450
 11877              	.LVL719:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11878              		.loc 1 227 76 is_stmt 1 view .LVU4074
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11879              		.loc 1 227 41 view .LVU4075
 11880              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
GAS LISTING /tmp/cct11Qa0.s 			page 320


 11881              		.loc 1 227 5 is_stmt 0 view .LVU4076
 11882 438e 4883FF40 		cmp	rdi, 64	# patternsize,
 11883 4392 774C     		ja	.L1302	#,
 228:sieve_extend.c **** 
 11884              		.loc 1 228 9 is_stmt 1 view .LVU4077
 11885              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11886              		.loc 1 227 88 is_stmt 0 view .LVU4078
 11887 4394 4C89EA   		mov	rdx, r13	# patternsize, patternsize
 11888              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11889              		.loc 1 228 29 view .LVU4079
 11890 4397 C462C1F7 		shlx	r9, rsi, rdi	# _450, pattern, patternsize
 11890      CE
 11891              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11892              		.loc 1 227 88 view .LVU4080
 11893 439c 48C1E206 		sal	rdx, 6	# patternsize,
 11894              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11895              		.loc 1 228 17 view .LVU4081
 11896 43a0 4C09CE   		or	rsi, r9	# pattern, _450
 11897              	.LVL720:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11898              		.loc 1 227 76 is_stmt 1 view .LVU4082
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11899              		.loc 1 227 41 view .LVU4083
 11900              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11901              		.loc 1 227 5 is_stmt 0 view .LVU4084
 11902 43a3 4883FA40 		cmp	rdx, 64	# patternsize,
 11903 43a7 7737     		ja	.L1302	#,
 228:sieve_extend.c **** 
 11904              		.loc 1 228 9 is_stmt 1 view .LVU4085
 11905              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11906              		.loc 1 227 88 is_stmt 0 view .LVU4086
 11907 43a9 4D89E9   		mov	r9, r13	# patternsize, patternsize
 11908              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11909              		.loc 1 228 29 view .LVU4087
 11910 43ac C4E2E9F7 		shlx	rdi, rsi, rdx	# _450, pattern, patternsize
 11910      FE
 11911              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11912              		.loc 1 227 88 view .LVU4088
 11913 43b1 49C1E107 		sal	r9, 7	# patternsize,
 11914              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11915              		.loc 1 228 17 view .LVU4089
 11916 43b5 4809FE   		or	rsi, rdi	# pattern, _450
 11917              	.LVL721:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11918              		.loc 1 227 76 is_stmt 1 view .LVU4090
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11919              		.loc 1 227 41 view .LVU4091
 11920              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
GAS LISTING /tmp/cct11Qa0.s 			page 321


 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11921              		.loc 1 227 5 is_stmt 0 view .LVU4092
 11922 43b8 4983F940 		cmp	r9, 64	# patternsize,
 11923 43bc 7722     		ja	.L1302	#,
 228:sieve_extend.c **** 
 11924              		.loc 1 228 9 is_stmt 1 view .LVU4093
 11925              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11926              		.loc 1 227 88 is_stmt 0 view .LVU4094
 11927 43be 49C1E508 		sal	r13, 8	# patternsize,
 11928              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11929              		.loc 1 228 29 view .LVU4095
 11930 43c2 C4E2B1F7 		shlx	rdx, rsi, r9	# _450, pattern, patternsize
 11930      D6
 11931              	# sieve_extend.c:228:         pattern |= (pattern << patternsize);
 228:sieve_extend.c **** 
 11932              		.loc 1 228 17 view .LVU4096
 11933 43c7 4809D6   		or	rsi, rdx	# pattern, _450
 11934              	.LVL722:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11935              		.loc 1 227 76 is_stmt 1 view .LVU4097
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11936              		.loc 1 227 41 view .LVU4098
 11937              	# sieve_extend.c:227:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11938              		.loc 1 227 5 is_stmt 0 view .LVU4099
 11939 43ca 4983FD40 		cmp	r13, 64	# patternsize,
 11940 43ce 0F864FFF 		jbe	.L863	#,
 11940      FFFF
 11941              	.LVL723:
 11942 43d4 66662E0F 		.p2align 4
 11942      1F840000 
 11942      00000090 
 11943              		.p2align 3
 11944              	.L1302:
 227:sieve_extend.c ****         pattern |= (pattern << patternsize);
 11945              		.loc 1 227 5 view .LVU4100
 11946              	.LBE557:
 231:sieve_extend.c ****     register counter_t copy_word = wordindex(range_start);
 11947              		.loc 1 231 5 is_stmt 1 view .LVU4101
 232:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 11948              		.loc 1 232 5 view .LVU4102
 11949              	# sieve_extend.c:232:     register counter_t copy_word = wordindex(range_start);
 232:sieve_extend.c ****      if (copy_word >= range_stop_word) { // shortcut
 11950              		.loc 1 232 24 is_stmt 0 view .LVU4103
 11951 43e0 4989C1   		mov	r9, rax	# copy_word, index
 11952 43e3 C4E2F9F7 		shlx	rdx, rsi, rax	# _1323, pattern, index
 11952      D6
 11953 43e8 49C1E906 		shr	r9, 6	# copy_word,
 11954              	.LVL724:
 233:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 11955              		.loc 1 233 6 is_stmt 1 view .LVU4104
 11956              	# sieve_extend.c:233:      if (copy_word >= range_stop_word) { // shortcut
 233:sieve_extend.c ****        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(range_stop));
 11957              		.loc 1 233 9 is_stmt 0 view .LVU4105
 11958 43ec 4C394C24 		cmp	QWORD PTR 80[rsp], r9	# %sfp, copy_word
GAS LISTING /tmp/cct11Qa0.s 			page 322


 11958      50
 11959 43f1 4B8D3CCE 		lea	rdi, [r14+r9*8]	# _1320,
 11960 43f5 4C8B2F   		mov	r13, QWORD PTR [rdi]	# pretmp_1321, *_1320
 11961 43f8 0F86B202 		jbe	.L1448	#,
 11961      0000
 238:sieve_extend.c **** 
 11962              		.loc 1 238 5 is_stmt 1 view .LVU4106
 11963              	.LVL725:
 11964              	# sieve_extend.c:238:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 238:sieve_extend.c **** 
 11965              		.loc 1 238 27 is_stmt 0 view .LVU4107
 11966 43fe 4C09EA   		or	rdx, r13	# tmp715, pretmp_1321
 11967              	# sieve_extend.c:242:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 11968              		.loc 1 242 28 view .LVU4108
 11969 4401 83E03F   		and	eax, 63	# tmp716,
 11970              	.LVL726:
 11971              	# sieve_extend.c:238:     bitarray[copy_word++] |= (pattern << bitindex(range_start));
 238:sieve_extend.c **** 
 11972              		.loc 1 238 27 view .LVU4109
 11973 4404 488917   		mov	QWORD PTR [rdi], rdx	# *_1320, tmp715
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 11974              		.loc 1 242 5 is_stmt 1 view .LVU4110
 11975              	# sieve_extend.c:242:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 11976              		.loc 1 242 55 is_stmt 0 view .LVU4111
 11977 4407 31D2     		xor	edx, edx	# tmp718
 11978 4409 49F7F0   		div	r8	# step
 11979              	# sieve_extend.c:243:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 11980              		.loc 1 243 25 view .LVU4112
 11981 440c B8400000 		mov	eax, 64	# tmp726,
 11981      00
 11982              	# sieve_extend.c:242:     pattern = (pattern << (bitindex_calc(range_start) % step)); // correct fo
 242:sieve_extend.c ****     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 11983              		.loc 1 242 13 view .LVU4113
 11984 4411 C4E2E9F7 		shlx	rsi, rsi, rdx	# pattern, pattern, tmp718
 11984      F6
 11985              	.LVL727:
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 11986              		.loc 1 243 5 is_stmt 1 view .LVU4114
 11987              	# sieve_extend.c:243:     register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 243:sieve_extend.c ****     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - pattern_shift;
 11988              		.loc 1 243 25 is_stmt 0 view .LVU4115
 11989 4416 31D2     		xor	edx, edx	# tmp725
 11990 4418 49F7F0   		div	r8	# step
 11991 441b 4989D5   		mov	r13, rdx	# tmp725, tmp725
 11992              	.LVL728:
 244:sieve_extend.c **** 
 11993              		.loc 1 244 5 is_stmt 1 view .LVU4116
 246:sieve_extend.c ****     #pragma unroll
 11994              		.loc 1 246 5 view .LVU4117
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11995              		.loc 1 249 5 view .LVU4118
 11996              	.LBB558:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11997              		.loc 1 249 10 view .LVU4119
GAS LISTING /tmp/cct11Qa0.s 			page 323


 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 11998              		.loc 1 249 25 view .LVU4120
 11999 441e 89D0     		mov	eax, edx	# _1512, tmp725
 12000              	.LBE558:
 12001              	# sieve_extend.c:244:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 244:sieve_extend.c **** 
 12002              		.loc 1 244 84 is_stmt 0 view .LVU4121
 12003 4420 BA200000 		mov	edx, 32	# tmp730,
 12003      00
 12004              	.LVL729:
 244:sieve_extend.c **** 
 12005              		.loc 1 244 84 view .LVU4122
 12006 4425 4C29EA   		sub	rdx, r13	# tmp730, tmp725
 12007              	# sieve_extend.c:244:     register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_
 244:sieve_extend.c **** 
 12008              		.loc 1 244 25 view .LVU4123
 12009 4428 4801D2   		add	rdx, rdx	# pattern_shift_flipped
 12010              	.LVL730:
 12011              	.LBB559:
 12012              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12013              		.loc 1 249 5 view .LVU4124
 12014 442b 4C394C24 		cmp	QWORD PTR 64[rsp], r9	# %sfp, copy_word
 12014      40
 12015 4430 4189D0   		mov	r8d, edx	# _1513, pattern_shift_flipped
 12016              	.LVL731:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12017              		.loc 1 249 5 view .LVU4125
 12018 4433 0F847901 		je	.L866	#,
 12018      0000
 12019 4439 4989D9   		mov	r9, rbx	# tmp887, _1304
 12020              	.LVL732:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12021              		.loc 1 249 5 view .LVU4126
 12022 443c 4929F9   		sub	r9, rdi	# tmp887, ivtmp.569
 12023 443f 4983E908 		sub	r9, 8	# tmp888,
 12024 4443 49C1E903 		shr	r9, 3	# tmp886,
 12025 4447 4983C101 		add	r9, 1	# tmp889,
 12026 444b 4183E107 		and	r9d, 7	# tmp890,
 12027 444f 0F84C800 		je	.L867	#,
 12027      0000
 12028 4455 4983F901 		cmp	r9, 1	# tmp890,
 12029 4459 0F84A000 		je	.L1151	#,
 12029      0000
 12030 445f 4983F902 		cmp	r9, 2	# tmp890,
 12031 4463 0F848100 		je	.L1152	#,
 12031      0000
 12032 4469 4983F903 		cmp	r9, 3	# tmp890,
 12033 446d 7466     		je	.L1153	#,
 12034 446f 4983F904 		cmp	r9, 4	# tmp890,
 12035 4473 744B     		je	.L1154	#,
 12036 4475 4983F905 		cmp	r9, 5	# tmp890,
 12037 4479 7430     		je	.L1155	#,
 12038 447b 4983F906 		cmp	r9, 6	# tmp890,
 12039 447f 7415     		je	.L1156	#,
 12040              	.LVL733:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
GAS LISTING /tmp/cct11Qa0.s 			page 324


 12041              		.loc 1 250 9 is_stmt 1 view .LVU4127
 12042              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12043              		.loc 1 250 28 is_stmt 0 view .LVU4128
 12044 4481 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
 12044      CE
 12045              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12046              		.loc 1 250 57 view .LVU4129
 12047 4486 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
 12047      F6
 12048              	.LVL734:
 12049              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12050              		.loc 1 250 17 view .LVU4130
 12051 448b 4C09CE   		or	rsi, r9	# pattern, _484
 12052              	.LVL735:
 251:sieve_extend.c ****     } 
 12053              		.loc 1 251 9 is_stmt 1 view .LVU4131
 12054              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12055              		.loc 1 251 31 is_stmt 0 view .LVU4132
 12056 448e 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12057              		.loc 1 249 41 is_stmt 1 view .LVU4133
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12058              		.loc 1 249 25 view .LVU4134
 12059 4492 4883C708 		add	rdi, 8	# ivtmp.569,
 12060              	.LVL736:
 12061              	.L1156:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12062              		.loc 1 250 9 view .LVU4135
 12063              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12064              		.loc 1 250 28 is_stmt 0 view .LVU4136
 12065 4496 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
 12065      CE
 12066              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12067              		.loc 1 250 57 view .LVU4137
 12068 449b C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
 12068      F6
 12069              	.LVL737:
 12070              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12071              		.loc 1 250 17 view .LVU4138
 12072 44a0 4C09CE   		or	rsi, r9	# pattern, _484
 12073              	.LVL738:
 251:sieve_extend.c ****     } 
 12074              		.loc 1 251 9 is_stmt 1 view .LVU4139
 12075              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12076              		.loc 1 251 31 is_stmt 0 view .LVU4140
 12077 44a3 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12078              		.loc 1 249 41 is_stmt 1 view .LVU4141
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
GAS LISTING /tmp/cct11Qa0.s 			page 325


 12079              		.loc 1 249 25 view .LVU4142
 12080 44a7 4883C708 		add	rdi, 8	# ivtmp.569,
 12081              	.LVL739:
 12082              	.L1155:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12083              		.loc 1 250 9 view .LVU4143
 12084              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12085              		.loc 1 250 28 is_stmt 0 view .LVU4144
 12086 44ab C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
 12086      CE
 12087              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12088              		.loc 1 250 57 view .LVU4145
 12089 44b0 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
 12089      F6
 12090              	.LVL740:
 12091              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12092              		.loc 1 250 17 view .LVU4146
 12093 44b5 4C09CE   		or	rsi, r9	# pattern, _484
 12094              	.LVL741:
 251:sieve_extend.c ****     } 
 12095              		.loc 1 251 9 is_stmt 1 view .LVU4147
 12096              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12097              		.loc 1 251 31 is_stmt 0 view .LVU4148
 12098 44b8 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12099              		.loc 1 249 41 is_stmt 1 view .LVU4149
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12100              		.loc 1 249 25 view .LVU4150
 12101 44bc 4883C708 		add	rdi, 8	# ivtmp.569,
 12102              	.LVL742:
 12103              	.L1154:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12104              		.loc 1 250 9 view .LVU4151
 12105              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12106              		.loc 1 250 28 is_stmt 0 view .LVU4152
 12107 44c0 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
 12107      CE
 12108              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12109              		.loc 1 250 57 view .LVU4153
 12110 44c5 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
 12110      F6
 12111              	.LVL743:
 12112              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12113              		.loc 1 250 17 view .LVU4154
 12114 44ca 4C09CE   		or	rsi, r9	# pattern, _484
 12115              	.LVL744:
 251:sieve_extend.c ****     } 
 12116              		.loc 1 251 9 is_stmt 1 view .LVU4155
 12117              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
GAS LISTING /tmp/cct11Qa0.s 			page 326


 12118              		.loc 1 251 31 is_stmt 0 view .LVU4156
 12119 44cd 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12120              		.loc 1 249 41 is_stmt 1 view .LVU4157
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12121              		.loc 1 249 25 view .LVU4158
 12122 44d1 4883C708 		add	rdi, 8	# ivtmp.569,
 12123              	.LVL745:
 12124              	.L1153:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12125              		.loc 1 250 9 view .LVU4159
 12126              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12127              		.loc 1 250 28 is_stmt 0 view .LVU4160
 12128 44d5 C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
 12128      CE
 12129              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12130              		.loc 1 250 57 view .LVU4161
 12131 44da C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
 12131      F6
 12132              	.LVL746:
 12133              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12134              		.loc 1 250 17 view .LVU4162
 12135 44df 4C09CE   		or	rsi, r9	# pattern, _484
 12136              	.LVL747:
 251:sieve_extend.c ****     } 
 12137              		.loc 1 251 9 is_stmt 1 view .LVU4163
 12138              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12139              		.loc 1 251 31 is_stmt 0 view .LVU4164
 12140 44e2 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12141              		.loc 1 249 41 is_stmt 1 view .LVU4165
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12142              		.loc 1 249 25 view .LVU4166
 12143 44e6 4883C708 		add	rdi, 8	# ivtmp.569,
 12144              	.LVL748:
 12145              	.L1152:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12146              		.loc 1 250 9 view .LVU4167
 12147              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12148              		.loc 1 250 28 is_stmt 0 view .LVU4168
 12149 44ea C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
 12149      CE
 12150              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12151              		.loc 1 250 57 view .LVU4169
 12152 44ef C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
 12152      F6
 12153              	.LVL749:
 12154              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12155              		.loc 1 250 17 view .LVU4170
 12156 44f4 4C09CE   		or	rsi, r9	# pattern, _484
GAS LISTING /tmp/cct11Qa0.s 			page 327


 12157              	.LVL750:
 251:sieve_extend.c ****     } 
 12158              		.loc 1 251 9 is_stmt 1 view .LVU4171
 12159              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12160              		.loc 1 251 31 is_stmt 0 view .LVU4172
 12161 44f7 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12162              		.loc 1 249 41 is_stmt 1 view .LVU4173
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12163              		.loc 1 249 25 view .LVU4174
 12164 44fb 4883C708 		add	rdi, 8	# ivtmp.569,
 12165              	.LVL751:
 12166              	.L1151:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12167              		.loc 1 250 9 view .LVU4175
 12168              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12169              		.loc 1 250 28 is_stmt 0 view .LVU4176
 12170 44ff C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
 12170      CE
 12171              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12172              		.loc 1 250 57 view .LVU4177
 12173 4504 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
 12173      F6
 12174              	.LVL752:
 12175              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12176              		.loc 1 250 17 view .LVU4178
 12177 4509 4C09CE   		or	rsi, r9	# pattern, _484
 12178              	.LVL753:
 251:sieve_extend.c ****     } 
 12179              		.loc 1 251 9 is_stmt 1 view .LVU4179
 12180              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12181              		.loc 1 251 31 is_stmt 0 view .LVU4180
 12182 450c 48097708 		or	QWORD PTR 8[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12183              		.loc 1 249 41 is_stmt 1 view .LVU4181
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12184              		.loc 1 249 25 view .LVU4182
 12185 4510 4883C708 		add	rdi, 8	# ivtmp.569,
 12186              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12187              		.loc 1 249 5 is_stmt 0 view .LVU4183
 12188 4514 4839FB   		cmp	rbx, rdi	# _1304, ivtmp.569
 12189 4517 0F849500 		je	.L866	#,
 12189      0000
 12190              	.LVL754:
 12191              	.L867:
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12192              		.loc 1 250 9 is_stmt 1 view .LVU4184
 12193              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12194              		.loc 1 250 28 is_stmt 0 view .LVU4185
 12195 451d C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
GAS LISTING /tmp/cct11Qa0.s 			page 328


 12195      CE
 12196              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12197              		.loc 1 250 57 view .LVU4186
 12198 4522 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
 12198      F6
 12199              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12200              		.loc 1 250 17 view .LVU4187
 12201 4527 4909F1   		or	r9, rsi	# pattern, _486
 251:sieve_extend.c ****     } 
 12202              		.loc 1 251 9 is_stmt 1 view .LVU4188
 12203              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12204              		.loc 1 250 28 is_stmt 0 view .LVU4189
 12205 452a C4C2FBF7 		shrx	rsi, r9, rax	# _484, pattern, _1512
 12205      F1
 12206              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12207              		.loc 1 251 31 view .LVU4190
 12208 452f 4C094F08 		or	QWORD PTR 8[rdi], r9	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12209              		.loc 1 249 41 is_stmt 1 view .LVU4191
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12210              		.loc 1 249 25 view .LVU4192
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12211              		.loc 1 250 9 view .LVU4193
 12212              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12213              		.loc 1 250 57 is_stmt 0 view .LVU4194
 12214 4533 C442B9F7 		shlx	r9, r9, r8	# _486, pattern, _1513
 12214      C9
 12215              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12216              		.loc 1 250 17 view .LVU4195
 12217 4538 4C09CE   		or	rsi, r9	# pattern, _486
 251:sieve_extend.c ****     } 
 12218              		.loc 1 251 9 is_stmt 1 view .LVU4196
 12219              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12220              		.loc 1 250 28 is_stmt 0 view .LVU4197
 12221 453b C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
 12221      CE
 12222              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12223              		.loc 1 251 31 view .LVU4198
 12224 4540 48097710 		or	QWORD PTR 16[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12225              		.loc 1 249 41 is_stmt 1 view .LVU4199
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12226              		.loc 1 249 25 view .LVU4200
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12227              		.loc 1 250 9 view .LVU4201
 12228              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12229              		.loc 1 250 57 is_stmt 0 view .LVU4202
 12230 4544 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
GAS LISTING /tmp/cct11Qa0.s 			page 329


 12230      F6
 12231              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12232              		.loc 1 250 17 view .LVU4203
 12233 4549 4909F1   		or	r9, rsi	# pattern, _486
 251:sieve_extend.c ****     } 
 12234              		.loc 1 251 9 is_stmt 1 view .LVU4204
 12235              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12236              		.loc 1 250 28 is_stmt 0 view .LVU4205
 12237 454c C4C2FBF7 		shrx	rsi, r9, rax	# _484, pattern, _1512
 12237      F1
 12238              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12239              		.loc 1 251 31 view .LVU4206
 12240 4551 4C094F18 		or	QWORD PTR 24[rdi], r9	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12241              		.loc 1 249 41 is_stmt 1 view .LVU4207
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12242              		.loc 1 249 25 view .LVU4208
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12243              		.loc 1 250 9 view .LVU4209
 12244              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12245              		.loc 1 250 57 is_stmt 0 view .LVU4210
 12246 4555 C442B9F7 		shlx	r9, r9, r8	# _486, pattern, _1513
 12246      C9
 12247              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12248              		.loc 1 250 17 view .LVU4211
 12249 455a 4C09CE   		or	rsi, r9	# pattern, _486
 251:sieve_extend.c ****     } 
 12250              		.loc 1 251 9 is_stmt 1 view .LVU4212
 12251              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12252              		.loc 1 250 28 is_stmt 0 view .LVU4213
 12253 455d C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
 12253      CE
 12254              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12255              		.loc 1 251 31 view .LVU4214
 12256 4562 48097720 		or	QWORD PTR 32[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12257              		.loc 1 249 41 is_stmt 1 view .LVU4215
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12258              		.loc 1 249 25 view .LVU4216
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12259              		.loc 1 250 9 view .LVU4217
 12260              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12261              		.loc 1 250 57 is_stmt 0 view .LVU4218
 12262 4566 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
 12262      F6
 12263              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12264              		.loc 1 250 17 view .LVU4219
 12265 456b 4909F1   		or	r9, rsi	# pattern, _486
GAS LISTING /tmp/cct11Qa0.s 			page 330


 251:sieve_extend.c ****     } 
 12266              		.loc 1 251 9 is_stmt 1 view .LVU4220
 12267              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12268              		.loc 1 250 28 is_stmt 0 view .LVU4221
 12269 456e C4C2FBF7 		shrx	rsi, r9, rax	# _484, pattern, _1512
 12269      F1
 12270              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12271              		.loc 1 251 31 view .LVU4222
 12272 4573 4C094F28 		or	QWORD PTR 40[rdi], r9	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12273              		.loc 1 249 41 is_stmt 1 view .LVU4223
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12274              		.loc 1 249 25 view .LVU4224
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12275              		.loc 1 250 9 view .LVU4225
 12276              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12277              		.loc 1 250 57 is_stmt 0 view .LVU4226
 12278 4577 C442B9F7 		shlx	r9, r9, r8	# _486, pattern, _1513
 12278      C9
 12279              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12280              		.loc 1 250 17 view .LVU4227
 12281 457c 4C09CE   		or	rsi, r9	# pattern, _486
 251:sieve_extend.c ****     } 
 12282              		.loc 1 251 9 is_stmt 1 view .LVU4228
 12283              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12284              		.loc 1 250 28 is_stmt 0 view .LVU4229
 12285 457f C462FBF7 		shrx	r9, rsi, rax	# _484, pattern, _1512
 12285      CE
 12286              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12287              		.loc 1 251 31 view .LVU4230
 12288 4584 48097730 		or	QWORD PTR 48[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12289              		.loc 1 249 41 is_stmt 1 view .LVU4231
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12290              		.loc 1 249 25 view .LVU4232
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12291              		.loc 1 250 9 view .LVU4233
 12292              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12293              		.loc 1 250 57 is_stmt 0 view .LVU4234
 12294 4588 C4E2B9F7 		shlx	rsi, rsi, r8	# _486, pattern, _1513
 12294      F6
 12295              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12296              		.loc 1 250 17 view .LVU4235
 12297 458d 4909F1   		or	r9, rsi	# pattern, _486
 251:sieve_extend.c ****     } 
 12298              		.loc 1 251 9 is_stmt 1 view .LVU4236
 12299              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12300              		.loc 1 250 28 is_stmt 0 view .LVU4237
GAS LISTING /tmp/cct11Qa0.s 			page 331


 12301 4590 C4C2FBF7 		shrx	rsi, r9, rax	# _484, pattern, _1512
 12301      F1
 12302              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12303              		.loc 1 251 31 view .LVU4238
 12304 4595 4C094F38 		or	QWORD PTR 56[rdi], r9	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12305              		.loc 1 249 41 is_stmt 1 view .LVU4239
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12306              		.loc 1 249 25 view .LVU4240
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12307              		.loc 1 250 9 view .LVU4241
 12308              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12309              		.loc 1 250 57 is_stmt 0 view .LVU4242
 12310 4599 C442B9F7 		shlx	r9, r9, r8	# _486, pattern, _1513
 12310      C9
 12311              	.LVL755:
 12312              	# sieve_extend.c:250:         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flip
 250:sieve_extend.c ****         bitarray[copy_word+i] |= pattern;
 12313              		.loc 1 250 17 view .LVU4243
 12314 459e 4C09CE   		or	rsi, r9	# pattern, _486
 12315              	.LVL756:
 251:sieve_extend.c ****     } 
 12316              		.loc 1 251 9 is_stmt 1 view .LVU4244
 12317              	# sieve_extend.c:251:         bitarray[copy_word+i] |= pattern;
 251:sieve_extend.c ****     } 
 12318              		.loc 1 251 31 is_stmt 0 view .LVU4245
 12319 45a1 48097740 		or	QWORD PTR 64[rdi], rsi	# MEM[base: _1309, offset: 8B], pattern
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12320              		.loc 1 249 41 is_stmt 1 view .LVU4246
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12321              		.loc 1 249 25 view .LVU4247
 12322 45a5 4883C740 		add	rdi, 64	# ivtmp.569,
 12323              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12324              		.loc 1 249 5 is_stmt 0 view .LVU4248
 12325 45a9 4839FB   		cmp	rbx, rdi	# _1304, ivtmp.569
 12326 45ac 0F856BFF 		jne	.L867	#,
 12326      FFFF
 12327              	.LVL757:
 12328              	.L866:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 12329              		.loc 1 249 5 view .LVU4249
 12330              	.LBE559:
 253:sieve_extend.c **** }
 12331              		.loc 1 253 5 is_stmt 1 view .LVU4250
 12332              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 12333              		.loc 1 253 44 is_stmt 0 view .LVU4251
 12334 45b2 C4E293F7 		shrx	rdi, rsi, r13	# tmp735, pattern, tmp725
 12334      FE
 12335              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 12336              		.loc 1 253 73 view .LVU4252
 12337 45b7 C462E9F7 		shlx	r13, rsi, rdx	# tmp736, pattern, pattern_shift_flipped
 12337      EE
GAS LISTING /tmp/cct11Qa0.s 			page 332


 12338              	.LVL758:
 12339              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 12340              		.loc 1 253 62 view .LVU4253
 12341 45bc 4909FD   		or	r13, rdi	# tmp737, tmp735
 12342              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 12343              		.loc 1 253 100 view .LVU4254
 12344 45bf 4C236C24 		and	r13, QWORD PTR 72[rsp]	# tmp738, %sfp
 12344      48
 12345              	# sieve_extend.c:253:     bitarray[range_stop_word] |= ((pattern >> pattern_shift) | (pattern << pa
 253:sieve_extend.c **** }
 12346              		.loc 1 253 31 view .LVU4255
 12347 45c4 4D092A   		or	QWORD PTR [r10], r13	# *_496, tmp738
 12348              	.LVL759:
 12349              	.L865:
 253:sieve_extend.c **** }
 12350              		.loc 1 253 31 view .LVU4256
 12351              	.LBE561:
 12352              	.LBE564:
 794:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 12353              		.loc 1 794 9 is_stmt 1 view .LVU4257
 12354              	.LBB565:
 12355              	.LBI565:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12356              		.loc 1 110 25 view .LVU4258
 12357              	.LBB566:
 111:sieve_extend.c ****     return index;
 12358              		.loc 1 111 5 view .LVU4259
 111:sieve_extend.c ****     return index;
 12359              		.loc 1 111 11 view .LVU4260
 12360              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12361              		.loc 1 111 21 is_stmt 0 view .LVU4261
 12362 45c7 4889C8   		mov	rax, rcx	# tmp739, index
 12363 45ca 48C1E806 		shr	rax, 6	# tmp739,
 12364              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12365              		.loc 1 111 12 view .LVU4262
 12366 45ce 498B14C6 		mov	rdx, QWORD PTR [r14+rax*8]	# *_127,* _30
 12367              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12368              		.loc 1 111 11 view .LVU4263
 12369 45d2 480FA3CA 		bt	rdx, rcx	# *_127, index
 12370 45d6 0F83A400 		jnc	.L868	#,
 12370      0000
 111:sieve_extend.c ****     return index;
 12371              		.loc 1 111 58 is_stmt 1 view .LVU4264
 12372              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12373              		.loc 1 111 63 is_stmt 0 view .LVU4265
 12374 45dc 4C8D4101 		lea	r8, 1[rcx]	# tmp885,
 12375              	.LVL760:
 12376              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12377              		.loc 1 111 21 view .LVU4266
 12378 45e0 4C89C6   		mov	rsi, r8	# tmp744, index
GAS LISTING /tmp/cct11Qa0.s 			page 333


 12379              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12380              		.loc 1 111 63 view .LVU4267
 12381 45e3 4C89C1   		mov	rcx, r8	# index, tmp885
 111:sieve_extend.c ****     return index;
 12382              		.loc 1 111 11 is_stmt 1 view .LVU4268
 12383              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12384              		.loc 1 111 21 is_stmt 0 view .LVU4269
 12385 45e6 48C1EE06 		shr	rsi, 6	# tmp744,
 12386              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12387              		.loc 1 111 12 view .LVU4270
 12388 45ea 4D8B0CF6 		mov	r9, QWORD PTR [r14+rsi*8]	# *_320, *_320
 12389              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12390              		.loc 1 111 11 view .LVU4271
 12391 45ee 4D0FA3C1 		bt	r9, r8	# *_320, index
 12392 45f2 0F838800 		jnc	.L868	#,
 12392      0000
 111:sieve_extend.c ****     return index;
 12393              		.loc 1 111 58 is_stmt 1 view .LVU4272
 12394              	.LVL761:
 12395              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12396              		.loc 1 111 63 is_stmt 0 view .LVU4273
 12397 45f8 4883C101 		add	rcx, 1	# index,
 12398              	.LVL762:
 111:sieve_extend.c ****     return index;
 12399              		.loc 1 111 11 is_stmt 1 view .LVU4274
 12400              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12401              		.loc 1 111 21 is_stmt 0 view .LVU4275
 12402 45fc 4889CF   		mov	rdi, rcx	# tmp1058, index
 12403 45ff 48C1EF06 		shr	rdi, 6	# tmp1058,
 12404              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12405              		.loc 1 111 12 view .LVU4276
 12406 4603 4D8B2CFE 		mov	r13, QWORD PTR [r14+rdi*8]	# *_320, *_320
 12407              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12408              		.loc 1 111 11 view .LVU4277
 12409 4607 490FA3CD 		bt	r13, rcx	# *_320, index
 12410 460b 7373     		jnc	.L868	#,
 111:sieve_extend.c ****     return index;
 12411              		.loc 1 111 58 is_stmt 1 view .LVU4278
 12412              	.LVL763:
 12413              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12414              		.loc 1 111 63 is_stmt 0 view .LVU4279
 12415 460d 498D4802 		lea	rcx, 2[r8]	# index,
 12416              	.LVL764:
 111:sieve_extend.c ****     return index;
 12417              		.loc 1 111 11 is_stmt 1 view .LVU4280
 12418              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12419              		.loc 1 111 21 is_stmt 0 view .LVU4281
GAS LISTING /tmp/cct11Qa0.s 			page 334


 12420 4611 4889C8   		mov	rax, rcx	# tmp1062, index
 12421 4614 48C1E806 		shr	rax, 6	# tmp1062,
 12422              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12423              		.loc 1 111 12 view .LVU4282
 12424 4618 498B14C6 		mov	rdx, QWORD PTR [r14+rax*8]	# *_320, *_320
 12425              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12426              		.loc 1 111 11 view .LVU4283
 12427 461c 480FA3CA 		bt	rdx, rcx	# *_320, index
 12428 4620 735E     		jnc	.L868	#,
 111:sieve_extend.c ****     return index;
 12429              		.loc 1 111 58 is_stmt 1 view .LVU4284
 12430              	.LVL765:
 12431              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12432              		.loc 1 111 63 is_stmt 0 view .LVU4285
 12433 4622 498D4803 		lea	rcx, 3[r8]	# index,
 12434              	.LVL766:
 111:sieve_extend.c ****     return index;
 12435              		.loc 1 111 11 is_stmt 1 view .LVU4286
 12436              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12437              		.loc 1 111 21 is_stmt 0 view .LVU4287
 12438 4626 4889CE   		mov	rsi, rcx	# tmp1066, index
 12439 4629 48C1EE06 		shr	rsi, 6	# tmp1066,
 12440              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12441              		.loc 1 111 12 view .LVU4288
 12442 462d 4D8B0CF6 		mov	r9, QWORD PTR [r14+rsi*8]	# *_320, *_320
 12443              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12444              		.loc 1 111 11 view .LVU4289
 12445 4631 490FA3C9 		bt	r9, rcx	# *_320, index
 12446 4635 7349     		jnc	.L868	#,
 111:sieve_extend.c ****     return index;
 12447              		.loc 1 111 58 is_stmt 1 view .LVU4290
 12448              	.LVL767:
 12449              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12450              		.loc 1 111 63 is_stmt 0 view .LVU4291
 12451 4637 498D4804 		lea	rcx, 4[r8]	# index,
 12452              	.LVL768:
 111:sieve_extend.c ****     return index;
 12453              		.loc 1 111 11 is_stmt 1 view .LVU4292
 12454              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12455              		.loc 1 111 21 is_stmt 0 view .LVU4293
 12456 463b 4889CF   		mov	rdi, rcx	# tmp1070, index
 12457 463e 48C1EF06 		shr	rdi, 6	# tmp1070,
 12458              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12459              		.loc 1 111 12 view .LVU4294
 12460 4642 4D8B2CFE 		mov	r13, QWORD PTR [r14+rdi*8]	# *_320, *_320
 12461              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12462              		.loc 1 111 11 view .LVU4295
GAS LISTING /tmp/cct11Qa0.s 			page 335


 12463 4646 490FA3CD 		bt	r13, rcx	# *_320, index
 12464 464a 7334     		jnc	.L868	#,
 111:sieve_extend.c ****     return index;
 12465              		.loc 1 111 58 is_stmt 1 view .LVU4296
 12466              	.LVL769:
 12467              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12468              		.loc 1 111 63 is_stmt 0 view .LVU4297
 12469 464c 498D4805 		lea	rcx, 5[r8]	# index,
 12470              	.LVL770:
 111:sieve_extend.c ****     return index;
 12471              		.loc 1 111 11 is_stmt 1 view .LVU4298
 12472              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12473              		.loc 1 111 21 is_stmt 0 view .LVU4299
 12474 4650 4889C8   		mov	rax, rcx	# tmp1074, index
 12475 4653 48C1E806 		shr	rax, 6	# tmp1074,
 12476              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12477              		.loc 1 111 12 view .LVU4300
 12478 4657 498B14C6 		mov	rdx, QWORD PTR [r14+rax*8]	# *_320, *_320
 12479              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12480              		.loc 1 111 11 view .LVU4301
 12481 465b 480FA3CA 		bt	rdx, rcx	# *_320, index
 12482 465f 731F     		jnc	.L868	#,
 111:sieve_extend.c ****     return index;
 12483              		.loc 1 111 58 is_stmt 1 view .LVU4302
 12484              	.LVL771:
 12485              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12486              		.loc 1 111 63 is_stmt 0 view .LVU4303
 12487 4661 498D4806 		lea	rcx, 6[r8]	# index,
 12488              	.LVL772:
 111:sieve_extend.c ****     return index;
 12489              		.loc 1 111 11 is_stmt 1 view .LVU4304
 12490              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12491              		.loc 1 111 21 is_stmt 0 view .LVU4305
 12492 4665 4889CE   		mov	rsi, rcx	# tmp1078, index
 12493 4668 48C1EE06 		shr	rsi, 6	# tmp1078,
 12494              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12495              		.loc 1 111 12 view .LVU4306
 12496 466c 4D8B0CF6 		mov	r9, QWORD PTR [r14+rsi*8]	# *_320, *_320
 12497              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12498              		.loc 1 111 11 view .LVU4307
 12499 4670 490FA3C9 		bt	r9, rcx	# *_320, index
 12500 4674 730A     		jnc	.L868	#,
 111:sieve_extend.c ****     return index;
 12501              		.loc 1 111 58 is_stmt 1 view .LVU4308
 12502              	.LVL773:
 12503              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 12504              		.loc 1 111 63 is_stmt 0 view .LVU4309
 12505 4676 498D4807 		lea	rcx, 7[r8]	# index,
GAS LISTING /tmp/cct11Qa0.s 			page 336


 12506              	.LVL774:
 111:sieve_extend.c ****     return index;
 12507              		.loc 1 111 11 is_stmt 1 view .LVU4310
 12508 467a E948FFFF 		jmp	.L865	#
 12508      FF
 12509 467f 90       		.p2align 4,,7
 12510              		.p2align 3
 12511              	.L868:
 112:sieve_extend.c **** }
 12512              		.loc 1 112 5 view .LVU4311
 12513              	.LVL775:
 112:sieve_extend.c **** }
 12514              		.loc 1 112 5 is_stmt 0 view .LVU4312
 12515              	.LBE566:
 12516              	.LBE565:
 795:sieve_extend.c ****     }
 12517              		.loc 1 795 9 is_stmt 1 view .LVU4313
 12518              	# sieve_extend.c:795:         start = prime * prime * 2 + prime * 2;
 795:sieve_extend.c ****     }
 12519              		.loc 1 795 35 is_stmt 0 view .LVU4314
 12520 4680 4C8D4901 		lea	r9, 1[rcx]	# _413,
 12521 4684 4C8D0409 		lea	r8, [rcx+rcx]	# _955,
 12522              	.LVL776:
 12523              	# sieve_extend.c:795:         start = prime * prime * 2 + prime * 2;
 795:sieve_extend.c ****     }
 12524              		.loc 1 795 15 view .LVU4315
 12525 4688 4C89C8   		mov	rax, r9	# index, _413
 12526 468b 490FAFC0 		imul	rax, r8	# index, _955
 12527              	.LVL777:
 789:sieve_extend.c ****         step  = prime * 2 + 1;
 12528              		.loc 1 789 11 is_stmt 1 view .LVU4316
 12529 468f 4939C7   		cmp	r15, rax	# block_stop, index
 12530 4692 0F828600 		jb	.L1432	#,
 12530      0000
 790:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 12531              		.loc 1 790 9 view .LVU4317
 12532              	# sieve_extend.c:790:         step  = prime * 2 + 1;
 790:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 12533              		.loc 1 790 15 is_stmt 0 view .LVU4318
 12534 4698 4983C001 		add	r8, 1	# step,
 12535              	.LVL778:
 791:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12536              		.loc 1 791 9 is_stmt 1 view .LVU4319
 12537              	# sieve_extend.c:791:         if unlikely(step > SMALLSTEP_FASTER) break;
 791:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12538              		.loc 1 791 12 is_stmt 0 view .LVU4320
 12539 469c 4983F802 		cmp	r8, 2	# step,
 12540 46a0 0F87CA00 		ja	.L860	#,
 12540      0000
 12541 46a6 4889CF   		mov	rdi, rcx	# prime, index
 12542 46a9 E952FCFF 		jmp	.L861	#
 12542      FF
 12543              	.LVL779:
 12544 46ae 6690     		.p2align 4,,7
 12545              		.p2align 3
 12546              	.L1448:
 12547              	.LBB567:
GAS LISTING /tmp/cct11Qa0.s 			page 337


 12548              	.LBB562:
 234:sieve_extend.c ****        return;
 12549              		.loc 1 234 8 is_stmt 1 view .LVU4321
 12550              	# sieve_extend.c:234:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 234:sieve_extend.c ****        return;
 12551              		.loc 1 234 67 is_stmt 0 view .LVU4322
 12552 46b0 48235424 		and	rdx, QWORD PTR 72[rsp]	# tmp713, %sfp
 12552      48
 12553              	# sieve_extend.c:234:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 234:sieve_extend.c ****        return;
 12554              		.loc 1 234 28 view .LVU4323
 12555 46b5 4909D5   		or	r13, rdx	# tmp714, tmp713
 12556 46b8 4C892F   		mov	QWORD PTR [rdi], r13	# *_1320, tmp714
 235:sieve_extend.c ****     }
 12557              		.loc 1 235 8 is_stmt 1 view .LVU4324
 12558 46bb E907FFFF 		jmp	.L865	#
 12558      FF
 12559              	.LVL780:
 12560              		.p2align 4,,7
 12561              		.p2align 3
 12562              	.L905:
 235:sieve_extend.c ****     }
 12563              		.loc 1 235 8 is_stmt 0 view .LVU4325
 12564              	.LBE562:
 12565              	.LBE567:
 12566              	.LBB568:
 12567              	.LBB569:
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12568              		.loc 1 306 41 is_stmt 1 view .LVU4326
 12569              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12570              		.loc 1 306 5 is_stmt 0 view .LVU4327
 12571 46c0 4939C7   		cmp	r15, rax	# block_stop, index
 12572 46c3 0F83A008 		jnb	.L909	#,
 12572      0000
 12573              	.LVL781:
 12574 46c9 0F1F8000 		.p2align 4
 12574      000000
 12575              		.p2align 3
 12576              	.L910:
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 12577              		.loc 1 306 5 view .LVU4328
 12578              	.LBE569:
 12579              	.LBE568:
 848:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 12580              		.loc 1 848 9 is_stmt 1 view .LVU4329
 12581              	.LBB571:
 12582              	.LBI571:
 116:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 12583              		.loc 1 116 25 view .LVU4330
 12584              	.LBB572:
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 12585              		.loc 1 119 4 view .LVU4331
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 12586              		.loc 1 120 4 view .LVU4332
 12587              	# sieve_extend.c:119:    register counter_t index_word = wordindex(index);
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
GAS LISTING /tmp/cct11Qa0.s 			page 338


 12588              		.loc 1 119 23 is_stmt 0 view .LVU4333
 12589 46d0 4C89C8   		mov	rax, r9	# index_word, _413
 12590              	# sieve_extend.c:120:    bitshift_t index_bit  = bitindex_calc(index);
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 12591              		.loc 1 120 15 view .LVU4334
 12592 46d3 4C89CF   		mov	rdi, r9	# index_bit, _413
 12593              	.LVL782:
 12594              	# sieve_extend.c:119:    register counter_t index_word = wordindex(index);
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 12595              		.loc 1 119 23 view .LVU4335
 12596 46d6 48C1E806 		shr	rax, 6	# index_word,
 12597              	.LVL783:
 12598              	# sieve_extend.c:120:    bitshift_t index_bit  = bitindex_calc(index);
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 12599              		.loc 1 120 15 view .LVU4336
 12600 46da 83E73F   		and	edi, 63	# index_bit,
 12601              	.LVL784:
 121:sieve_extend.c ****    index += distance;
 12602              		.loc 1 121 4 is_stmt 1 view .LVU4337
 12603              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 12604              		.loc 1 121 89 is_stmt 0 view .LVU4338
 12605 46dd 498B1CC6 		mov	rbx, QWORD PTR [r14+rax*8]	# *_674, *_674
 12606 46e1 C4E2C3F7 		shrx	rcx, rbx, rdi	# tmp833, *_674, index_bit
 12606      CB
 12607              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 12608              		.loc 1 121 66 view .LVU4339
 12609 46e6 48F7D1   		not	rcx	# tmp835
 12610              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 12611              		.loc 1 121 76 view .LVU4340
 12612 46e9 4C8D04C5 		lea	r8, 0[0+rax*8]	# _673,
 12612      00000000 
 12613              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 12614              		.loc 1 121 25 view .LVU4341
 12615 46f1 F3480FBC 		tzcnt	rsi, rcx	# distance, tmp835
 12615      F1
 12616              	.LVL785:
 122:sieve_extend.c ****    distance += index_bit;
 12617              		.loc 1 122 4 is_stmt 1 view .LVU4342
 12618              	# sieve_extend.c:122:    index += distance;
 122:sieve_extend.c ****    distance += index_bit;
 12619              		.loc 1 122 10 is_stmt 0 view .LVU4343
 12620 46f6 498D0C31 		lea	rcx, [r9+rsi]	# index,
 12621              	.LVL786:
 123:sieve_extend.c **** 
 12622              		.loc 1 123 4 is_stmt 1 view .LVU4344
 125:sieve_extend.c ****        index_word++;
 12623              		.loc 1 125 4 view .LVU4345
 125:sieve_extend.c ****        index_word++;
 12624              		.loc 1 125 10 view .LVU4346
 12625              	# sieve_extend.c:123:    distance += index_bit;
 123:sieve_extend.c **** 
 12626              		.loc 1 123 13 is_stmt 0 view .LVU4347
 12627 46fa 4801FE   		add	rsi, rdi	# distance, index_bit
GAS LISTING /tmp/cct11Qa0.s 			page 339


 12628              	.LVL787:
 12629              	# sieve_extend.c:125:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 125:sieve_extend.c ****        index_word++;
 12630              		.loc 1 125 10 view .LVU4348
 12631 46fd 4883FE40 		cmp	rsi, 64	# distance,
 12632 4701 0F844909 		je	.L1449	#,
 12632      0000
 131:sieve_extend.c **** }
 12633              		.loc 1 131 4 is_stmt 1 view .LVU4349
 12634              	.LVL788:
 131:sieve_extend.c **** }
 12635              		.loc 1 131 4 is_stmt 0 view .LVU4350
 12636              	.LBE572:
 12637              	.LBE571:
 849:sieve_extend.c ****     }
 12638              		.loc 1 849 9 is_stmt 1 view .LVU4351
 12639              	# sieve_extend.c:849:         start = prime * prime * 2 + prime * 2;
 849:sieve_extend.c ****     }
 12640              		.loc 1 849 35 is_stmt 0 view .LVU4352
 12641 4707 4C8D4901 		lea	r9, 1[rcx]	# _413,
 12642              	# sieve_extend.c:849:         start = prime * prime * 2 + prime * 2;
 849:sieve_extend.c ****     }
 12643              		.loc 1 849 15 view .LVU4353
 12644 470b 4C89C8   		mov	rax, r9	# tmp850, _413
 12645 470e 480FAFC1 		imul	rax, rcx	# tmp850, index
 12646 4712 4801C0   		add	rax, rax	# index
 12647              	.LVL789:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 12648              		.loc 1 843 11 is_stmt 1 view .LVU4354
 12649 4715 4939C7   		cmp	r15, rax	# block_stop, index
 12650 4718 0F832208 		jnb	.L896	#,
 12650      0000
 12651              	.L1432:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 12652              		.loc 1 843 11 is_stmt 0 view .LVU4355
 12653 471e 4C8B5424 		mov	r10, QWORD PTR 32[rsp]	# <retval>, %sfp
 12653      20
 12654 4723 498B5208 		mov	rdx, QWORD PTR 8[r10]	# _8, sieve_90->bits
 12655              	.LVL790:
 12656              	.L871:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 12657              		.loc 1 843 11 view .LVU4356
 12658              	.LBE611:
 12659              	.LBE619:
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12660              		.loc 1 914 91 is_stmt 1 view .LVU4357
 12661              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12662              		.loc 1 914 103 is_stmt 0 view .LVU4358
 12663 4727 4C8B6C24 		mov	r13, QWORD PTR 16[rsp]	# blocksize, %sfp
 12663      10
 12664 472c 4C016C24 		add	QWORD PTR 88[rsp], r13	# %sfp, blocksize
 12664      58
 12665              	.LVL791:
 12666              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12667              		.loc 1 914 128 view .LVU4359
GAS LISTING /tmp/cct11Qa0.s 			page 340


 12668 4731 4F8D3C2F 		lea	r15, [r15+r13]	# block_stop,
 12669              	.LVL792:
 12670              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12671              		.loc 1 914 103 view .LVU4360
 12672 4735 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# block_start, %sfp
 12672      58
 12673              	.LVL793:
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12674              		.loc 1 914 63 is_stmt 1 view .LVU4361
 12675              	# sieve_extend.c:914:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 914:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12676              		.loc 1 914 5 is_stmt 0 view .LVU4362
 12677 473a 4839FA   		cmp	rdx, rdi	# _8, block_start
 12678 473d 0F83EDF9 		jnb	.L858	#,
 12678      FFFF
 12679              	.LBE623:
 12680              	# sieve_extend.c:921: }
 921:sieve_extend.c **** 
 12681              		.loc 1 921 1 view .LVU4363
 12682 4743 488B4424 		mov	rax, QWORD PTR 32[rsp]	#, %sfp
 12682      20
 12683 4748 488D65D8 		lea	rsp, -40[rbp]	#,
 12684              	.LVL794:
 921:sieve_extend.c **** 
 12685              		.loc 1 921 1 view .LVU4364
 12686 474c 5B       		pop	rbx	#
 12687 474d 415C     		pop	r12	#
 12688 474f 415D     		pop	r13	#
 12689 4751 415E     		pop	r14	#
 12690 4753 415F     		pop	r15	#
 12691              	.LVL795:
 921:sieve_extend.c **** 
 12692              		.loc 1 921 1 view .LVU4365
 12693 4755 5D       		pop	rbp	#
 12694              		.cfi_remember_state
 12695              		.cfi_def_cfa 7, 8
 12696              	.LVL796:
 921:sieve_extend.c **** 
 12697              		.loc 1 921 1 view .LVU4366
 12698 4756 C3       		ret	
 12699              	.LVL797:
 12700              		.p2align 4,,7
 12701 4757 90       		.p2align 3
 12702              	.L920:
 12703              		.cfi_restore_state
 12704              	.LBB624:
 12705              	.LBB620:
 12706              	.LBB612:
 12707              	# sieve_extend.c:791:         if unlikely(step > SMALLSTEP_FASTER) break;
 791:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12708              		.loc 1 791 12 view .LVU4367
 12709 4758 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# prime, %sfp
 12709      30
 12710 475d 4489FA   		mov	edx, r15d	# tmp861, block_stop
 12711 4760 F7D2     		not	edx	# tmp861
 12712 4762 89542428 		mov	DWORD PTR 40[rsp], edx	# %sfp, tmp861
GAS LISTING /tmp/cct11Qa0.s 			page 341


 12713 4766 4C89E9   		mov	rcx, r13	# index, prime
 12714 4769 4D8D4D01 		lea	r9, 1[r13]	# _413,
 12715 476d 0F1F00   		.p2align 4
 12716              		.p2align 3
 12717              	.L860:
 12718              	.LVL798:
 798:sieve_extend.c ****         step  = prime * 2 + 1;
 12719              		.loc 1 798 11 is_stmt 1 view .LVU4368
 799:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 12720              		.loc 1 799 9 view .LVU4369
 800:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12721              		.loc 1 800 9 view .LVU4370
 12722              	# sieve_extend.c:800:         if unlikely(step > MEDIUMSTEP_FASTER) break;
 800:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12723              		.loc 1 800 12 is_stmt 0 view .LVU4371
 12724 4770 4983F840 		cmp	r8, 64	# step,
 12725 4774 0F87FC03 		ja	.L872	#,
 12725      0000
 12726              	.LBB574:
 12727              	.LBB575:
 12728              	.LBB576:
 12729              	.LBB577:
 12730              	.LBB578:
 12731              	.LBB579:
 12732              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12733              		.loc 1 163 20 view .LVU4372
 12734 477a 4C89FE   		mov	rsi, r15	# range_stop_word, block_stop
 12735              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 12736              		.loc 1 189 29 view .LVU4373
 12737 477d 48C7C3FF 		mov	rbx, -1	# tmp1692,
 12737      FFFFFF
 12738              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12739              		.loc 1 163 20 view .LVU4374
 12740 4784 48C1EE06 		shr	rsi, 6	# range_stop_word,
 12741              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 12742              		.loc 1 189 29 view .LVU4375
 12743 4788 440FB654 		movzx	r10d, BYTE PTR 40[rsp]	# tmp1693, %sfp
 12743      2428
 12744              	# sieve_extend.c:182:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 12745              		.loc 1 182 41 view .LVU4376
 12746 478e 4D8D1CF6 		lea	r11, [r14+rsi*8]	# range_stop_ptr,
 12747              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 12748              		.loc 1 163 20 view .LVU4377
 12749 4792 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, range_stop_word
 12749      40
 12750              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 12751              		.loc 1 189 29 view .LVU4378
 12752 4797 C4E2ABF7 		shrx	rdi, rbx, r10	# _584, tmp1692, tmp1693
 12752      FB
 12753 479c 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, _584
GAS LISTING /tmp/cct11Qa0.s 			page 342


 12753      48
 12754              	.LVL799:
 12755 47a1 66662E0F 		.p2align 4
 12755      1F840000 
 12755      0000000F 
 12755      1F4000
 12756              		.p2align 3
 12757              	.L912:
 189:sieve_extend.c ****    }
 12758              		.loc 1 189 29 view .LVU4379
 12759              	.LBE579:
 12760              	.LBE578:
 12761              	.LBE577:
 12762              	.LBE576:
 12763              	.LBE575:
 12764              	.LBE574:
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 12765              		.loc 1 801 9 is_stmt 1 view .LVU4380
 12766              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 12767              		.loc 1 801 12 is_stmt 0 view .LVU4381
 12768 47b0 4C8B6C24 		mov	r13, QWORD PTR 88[rsp]	# block_start, %sfp
 12768      58
 12769 47b5 4D39E9   		cmp	r9, r13	# _413, block_start
 12770 47b8 7712     		ja	.L873	#,
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 12771              		.loc 1 801 47 is_stmt 1 view .LVU4382
 12772              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 12773              		.loc 1 801 67 is_stmt 0 view .LVU4383
 12774 47ba 4A8D0429 		lea	rax, [rcx+r13]	# _340,
 12775              	.LVL800:
 12776              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 12777              		.loc 1 801 108 view .LVU4384
 12778 47be 31D2     		xor	edx, edx	# tmp752
 12779              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 12780              		.loc 1 801 75 view .LVU4385
 12781 47c0 4801C1   		add	rcx, rax	# tmp750, _340
 12782              	.LVL801:
 12783              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 12784              		.loc 1 801 108 view .LVU4386
 12785 47c3 49F7F0   		div	r8	# step
 12786              	.LVL802:
 12787              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 12788              		.loc 1 801 53 view .LVU4387
 12789 47c6 4889C8   		mov	rax, rcx	# tmp750, tmp750
 12790 47c9 4829D0   		sub	rax, rdx	# tmp750, tmp752
 12791              	.LVL803:
 12792              	.L873:
 802:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 12793              		.loc 1 802 9 is_stmt 1 view .LVU4388
 12794              	.LBB596:
 12795              	.LBI574:
GAS LISTING /tmp/cct11Qa0.s 			page 343


 260:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 12796              		.loc 1 260 14 view .LVU4389
 12797              	.LBB594:
 261:sieve_extend.c **** 
 12798              		.loc 1 261 5 view .LVU4390
 12799              	# sieve_extend.c:261:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 261:sieve_extend.c **** 
 12800              		.loc 1 261 74 is_stmt 0 view .LVU4391
 12801 47cc 4D89C5   		mov	r13, r8	# tmp754, step
 12802 47cf 31C9     		xor	ecx, ecx	# _212
 12803 47d1 49C1E506 		sal	r13, 6	# tmp754,
 12804 47d5 4901C5   		add	r13, rax	# tmp755, index
 12805 47d8 0F92C1   		setc	cl	#, _212
 12806              	.LVL804:
 263:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 12807              		.loc 1 263 5 is_stmt 1 view .LVU4392
 12808              	# sieve_extend.c:263:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 263:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 12809              		.loc 1 263 8 is_stmt 0 view .LVU4393
 12810 47db 4D39EF   		cmp	r15, r13	# block_stop, tmp755
 12811 47de 0F823406 		jb	.L876	#,
 12811      0000
 12812              	.LVL805:
 12813              	.LBB588:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12814              		.loc 1 284 54 is_stmt 1 view .LVU4394
 12815              	# sieve_extend.c:284:         for (register counter_t index = range_start; index <= range_stop_uniq
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12816              		.loc 1 284 9 is_stmt 0 view .LVU4395
 12817 47e4 4885C9   		test	rcx, rcx	# _212
 12818 47e7 0F858502 		jne	.L880	#,
 12818      0000
 12819              	.LBB586:
 12820              	.LBB583:
 12821              	.LBB580:
 12822              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 12823              		.loc 1 165 133 view .LVU4396
 12824 47ed 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	# range_stop_word, %sfp
 12824      40
 12825              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 12826              		.loc 1 165 110 view .LVU4397
 12827 47f2 4F8D1480 		lea	r10, [r8+r8*4]	# tmp768,
 12828 47f6 4C89C2   		mov	rdx, r8	# _1372, step
 12829              	# sieve_extend.c:171:        index_ptr+=step;
 171:sieve_extend.c ****        *index_ptr |= mask;
 12830              		.loc 1 171 17 view .LVU4398
 12831 47f9 4A8D34C5 		lea	rsi, 0[0+r8*8]	# _552,
 12831      00000000 
 12832              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 12833              		.loc 1 165 133 view .LVU4399
 12834 4801 4889FB   		mov	rbx, rdi	# tmp770, range_stop_word
 12835 4804 4C29D3   		sub	rbx, r10	# tmp770, tmp768
 12836 4807 4C39D7   		cmp	rdi, r10	# range_stop_word, tmp768
 12837 480a 498D1CDE 		lea	rbx, [r14+rbx*8]	# tmp772,
GAS LISTING /tmp/cct11Qa0.s 			page 344


 12838 480e 490F46DE 		cmovbe	rbx, r14	# _30,, fast_loop_ptr
 12839 4812 48C1E204 		sal	rdx, 4	# _1372,
 12840 4816 49C1E203 		sal	r10, 3	# tmp776,
 12841 481a 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, _1372
 12841      50
 12842              	.LVL806:
 12843 481f 90       		.p2align 4
 12844              		.p2align 3
 12845              	.L889:
 165:sieve_extend.c **** 
 12846              		.loc 1 165 133 view .LVU4400
 12847              	.LBE580:
 12848              	.LBE583:
 285:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12849              		.loc 1 285 13 is_stmt 1 view .LVU4401
 12850              	# sieve_extend.c:285:             register counter_t index_word = wordindex(index);
 285:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12851              		.loc 1 285 32 is_stmt 0 view .LVU4402
 12852 4820 4889C2   		mov	rdx, rax	# index_word, index
 12853              	# sieve_extend.c:286:             register bitword_t mask = SAFE_ZERO;
 286:sieve_extend.c ****             #pragma ivdep
 12854              		.loc 1 286 32 view .LVU4403
 12855 4823 31C9     		xor	ecx, ecx	# mask
 12856              	# sieve_extend.c:285:             register counter_t index_word = wordindex(index);
 285:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12857              		.loc 1 285 32 view .LVU4404
 12858 4825 48C1EA06 		shr	rdx, 6	# index_word,
 12859              	.LVL807:
 286:sieve_extend.c ****             #pragma ivdep
 12860              		.loc 1 286 13 is_stmt 1 view .LVU4405
 12861              	.L883:
 288:sieve_extend.c ****                 mask |= markmask(index);
 12862              		.loc 1 288 13 view .LVU4406
 289:sieve_extend.c ****                 index += step;
 12863              		.loc 1 289 17 view .LVU4407
 12864              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12865              		.loc 1 289 25 is_stmt 0 view .LVU4408
 12866 4829 C4C2F9F7 		shlx	rdi, r12, rax	# tmp778, tmp875, index
 12866      FC
 12867              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12868              		.loc 1 290 23 view .LVU4409
 12869 482e 4C01C0   		add	rax, r8	# index, step
 12870              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12871              		.loc 1 289 22 view .LVU4410
 12872 4831 4809F9   		or	rcx, rdi	# mask, tmp778
 12873              	.LVL808:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12874              		.loc 1 290 17 is_stmt 1 view .LVU4411
 291:sieve_extend.c ****             // #pragma ivdep
 12875              		.loc 1 291 21 view .LVU4412
 12876              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12877              		.loc 1 291 36 is_stmt 0 view .LVU4413
 12878 4834 4889C7   		mov	rdi, rax	# tmp780, index
GAS LISTING /tmp/cct11Qa0.s 			page 345


 12879 4837 48C1EF06 		shr	rdi, 6	# tmp780,
 12880              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12881              		.loc 1 291 13 view .LVU4414
 12882 483b 4839FA   		cmp	rdx, rdi	# index_word, tmp780
 12883 483e 0F85AC00 		jne	.L1301	#,
 12883      0000
 288:sieve_extend.c ****                 mask |= markmask(index);
 12884              		.loc 1 288 13 is_stmt 1 view .LVU4415
 289:sieve_extend.c ****                 index += step;
 12885              		.loc 1 289 17 view .LVU4416
 12886              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12887              		.loc 1 289 25 is_stmt 0 view .LVU4417
 12888 4844 C4C2F9F7 		shlx	rdi, r12, rax	# tmp1044, tmp875, index
 12888      FC
 12889              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12890              		.loc 1 290 23 view .LVU4418
 12891 4849 4C01C0   		add	rax, r8	# index, step
 12892              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12893              		.loc 1 289 22 view .LVU4419
 12894 484c 4809F9   		or	rcx, rdi	# mask, tmp1044
 12895              	.LVL809:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12896              		.loc 1 290 17 is_stmt 1 view .LVU4420
 291:sieve_extend.c ****             // #pragma ivdep
 12897              		.loc 1 291 21 view .LVU4421
 12898              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12899              		.loc 1 291 36 is_stmt 0 view .LVU4422
 12900 484f 4889C7   		mov	rdi, rax	# tmp1045, index
 12901 4852 48C1EF06 		shr	rdi, 6	# tmp1045,
 12902              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12903              		.loc 1 291 13 view .LVU4423
 12904 4856 4839FA   		cmp	rdx, rdi	# index_word, tmp1045
 12905 4859 0F859100 		jne	.L1301	#,
 12905      0000
 288:sieve_extend.c ****                 mask |= markmask(index);
 12906              		.loc 1 288 13 is_stmt 1 view .LVU4424
 289:sieve_extend.c ****                 index += step;
 12907              		.loc 1 289 17 view .LVU4425
 12908              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12909              		.loc 1 289 25 is_stmt 0 view .LVU4426
 12910 485f C4C2F9F7 		shlx	rdi, r12, rax	# tmp1046, tmp875, index
 12910      FC
 12911              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12912              		.loc 1 290 23 view .LVU4427
 12913 4864 4C01C0   		add	rax, r8	# index, step
 12914              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12915              		.loc 1 289 22 view .LVU4428
 12916 4867 4809F9   		or	rcx, rdi	# mask, tmp1046
GAS LISTING /tmp/cct11Qa0.s 			page 346


 12917              	.LVL810:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12918              		.loc 1 290 17 is_stmt 1 view .LVU4429
 291:sieve_extend.c ****             // #pragma ivdep
 12919              		.loc 1 291 21 view .LVU4430
 12920              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12921              		.loc 1 291 36 is_stmt 0 view .LVU4431
 12922 486a 4889C7   		mov	rdi, rax	# tmp1047, index
 12923 486d 48C1EF06 		shr	rdi, 6	# tmp1047,
 12924              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12925              		.loc 1 291 13 view .LVU4432
 12926 4871 4839FA   		cmp	rdx, rdi	# index_word, tmp1047
 12927 4874 757A     		jne	.L1301	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 12928              		.loc 1 288 13 is_stmt 1 view .LVU4433
 289:sieve_extend.c ****                 index += step;
 12929              		.loc 1 289 17 view .LVU4434
 12930              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12931              		.loc 1 289 25 is_stmt 0 view .LVU4435
 12932 4876 C4C2F9F7 		shlx	rdi, r12, rax	# tmp1048, tmp875, index
 12932      FC
 12933              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12934              		.loc 1 290 23 view .LVU4436
 12935 487b 4C01C0   		add	rax, r8	# index, step
 12936              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12937              		.loc 1 289 22 view .LVU4437
 12938 487e 4809F9   		or	rcx, rdi	# mask, tmp1048
 12939              	.LVL811:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12940              		.loc 1 290 17 is_stmt 1 view .LVU4438
 291:sieve_extend.c ****             // #pragma ivdep
 12941              		.loc 1 291 21 view .LVU4439
 12942              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12943              		.loc 1 291 36 is_stmt 0 view .LVU4440
 12944 4881 4889C7   		mov	rdi, rax	# tmp1049, index
 12945 4884 48C1EF06 		shr	rdi, 6	# tmp1049,
 12946              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12947              		.loc 1 291 13 view .LVU4441
 12948 4888 4839FA   		cmp	rdx, rdi	# index_word, tmp1049
 12949 488b 7563     		jne	.L1301	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 12950              		.loc 1 288 13 is_stmt 1 view .LVU4442
 289:sieve_extend.c ****                 index += step;
 12951              		.loc 1 289 17 view .LVU4443
 12952              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12953              		.loc 1 289 25 is_stmt 0 view .LVU4444
 12954 488d C4C2F9F7 		shlx	rdi, r12, rax	# tmp1050, tmp875, index
 12954      FC
 12955              	# sieve_extend.c:290:                 index += step;
GAS LISTING /tmp/cct11Qa0.s 			page 347


 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12956              		.loc 1 290 23 view .LVU4445
 12957 4892 4C01C0   		add	rax, r8	# index, step
 12958              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12959              		.loc 1 289 22 view .LVU4446
 12960 4895 4809F9   		or	rcx, rdi	# mask, tmp1050
 12961              	.LVL812:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12962              		.loc 1 290 17 is_stmt 1 view .LVU4447
 291:sieve_extend.c ****             // #pragma ivdep
 12963              		.loc 1 291 21 view .LVU4448
 12964              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12965              		.loc 1 291 36 is_stmt 0 view .LVU4449
 12966 4898 4889C7   		mov	rdi, rax	# tmp1051, index
 12967 489b 48C1EF06 		shr	rdi, 6	# tmp1051,
 12968              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12969              		.loc 1 291 13 view .LVU4450
 12970 489f 4839FA   		cmp	rdx, rdi	# index_word, tmp1051
 12971 48a2 754C     		jne	.L1301	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 12972              		.loc 1 288 13 is_stmt 1 view .LVU4451
 289:sieve_extend.c ****                 index += step;
 12973              		.loc 1 289 17 view .LVU4452
 12974              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12975              		.loc 1 289 25 is_stmt 0 view .LVU4453
 12976 48a4 C4C2F9F7 		shlx	rdi, r12, rax	# tmp1052, tmp875, index
 12976      FC
 12977              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12978              		.loc 1 290 23 view .LVU4454
 12979 48a9 4C01C0   		add	rax, r8	# index, step
 12980              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12981              		.loc 1 289 22 view .LVU4455
 12982 48ac 4809F9   		or	rcx, rdi	# mask, tmp1052
 12983              	.LVL813:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 12984              		.loc 1 290 17 is_stmt 1 view .LVU4456
 291:sieve_extend.c ****             // #pragma ivdep
 12985              		.loc 1 291 21 view .LVU4457
 12986              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12987              		.loc 1 291 36 is_stmt 0 view .LVU4458
 12988 48af 4889C7   		mov	rdi, rax	# tmp1053, index
 12989 48b2 48C1EF06 		shr	rdi, 6	# tmp1053,
 12990              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 12991              		.loc 1 291 13 view .LVU4459
 12992 48b6 4839FA   		cmp	rdx, rdi	# index_word, tmp1053
 12993 48b9 7535     		jne	.L1301	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 12994              		.loc 1 288 13 is_stmt 1 view .LVU4460
 289:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/cct11Qa0.s 			page 348


 12995              		.loc 1 289 17 view .LVU4461
 12996              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 12997              		.loc 1 289 25 is_stmt 0 view .LVU4462
 12998 48bb C4C2F9F7 		shlx	rdi, r12, rax	# tmp1054, tmp875, index
 12998      FC
 12999              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 13000              		.loc 1 290 23 view .LVU4463
 13001 48c0 4C01C0   		add	rax, r8	# index, step
 13002              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 13003              		.loc 1 289 22 view .LVU4464
 13004 48c3 4809F9   		or	rcx, rdi	# mask, tmp1054
 13005              	.LVL814:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 13006              		.loc 1 290 17 is_stmt 1 view .LVU4465
 291:sieve_extend.c ****             // #pragma ivdep
 13007              		.loc 1 291 21 view .LVU4466
 13008              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 13009              		.loc 1 291 36 is_stmt 0 view .LVU4467
 13010 48c6 4889C7   		mov	rdi, rax	# tmp1055, index
 13011 48c9 48C1EF06 		shr	rdi, 6	# tmp1055,
 13012              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 13013              		.loc 1 291 13 view .LVU4468
 13014 48cd 4839FA   		cmp	rdx, rdi	# index_word, tmp1055
 13015 48d0 751E     		jne	.L1301	#,
 288:sieve_extend.c ****                 mask |= markmask(index);
 13016              		.loc 1 288 13 is_stmt 1 view .LVU4469
 289:sieve_extend.c ****                 index += step;
 13017              		.loc 1 289 17 view .LVU4470
 13018              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 13019              		.loc 1 289 25 is_stmt 0 view .LVU4471
 13020 48d2 C4C2F9F7 		shlx	rdi, r12, rax	# tmp1056, tmp875, index
 13020      FC
 13021              	# sieve_extend.c:290:                 index += step;
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 13022              		.loc 1 290 23 view .LVU4472
 13023 48d7 4C01C0   		add	rax, r8	# index, step
 13024              	# sieve_extend.c:289:                 mask |= markmask(index);
 289:sieve_extend.c ****                 index += step;
 13025              		.loc 1 289 22 view .LVU4473
 13026 48da 4809F9   		or	rcx, rdi	# mask, tmp1056
 13027              	.LVL815:
 290:sieve_extend.c ****             } while (index_word == wordindex(index));
 13028              		.loc 1 290 17 is_stmt 1 view .LVU4474
 291:sieve_extend.c ****             // #pragma ivdep
 13029              		.loc 1 291 21 view .LVU4475
 13030              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
 291:sieve_extend.c ****             // #pragma ivdep
 13031              		.loc 1 291 36 is_stmt 0 view .LVU4476
 13032 48dd 4889C7   		mov	rdi, rax	# tmp1057, index
 13033 48e0 48C1EF06 		shr	rdi, 6	# tmp1057,
 13034              	# sieve_extend.c:291:             } while (index_word == wordindex(index));
GAS LISTING /tmp/cct11Qa0.s 			page 349


 291:sieve_extend.c ****             // #pragma ivdep
 13035              		.loc 1 291 13 view .LVU4477
 13036 48e4 4839FA   		cmp	rdx, rdi	# index_word, tmp1057
 13037 48e7 0F843CFF 		je	.L883	#,
 13037      FFFF
 13038 48ed 0F1F00   		.p2align 4
 13039              		.p2align 3
 13040              	.L1301:
 295:sieve_extend.c ****         }
 13041              		.loc 1 295 13 is_stmt 1 view .LVU4478
 13042              	.LVL816:
 13043              	.LBB584:
 13044              	.LBI578:
 135:sieve_extend.c **** //#if __APPLE__
 13045              		.loc 1 135 20 view .LVU4479
 13046              	.LBB581:
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 13047              		.loc 1 163 4 view .LVU4480
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13048              		.loc 1 164 4 view .LVU4481
 13049              	# sieve_extend.c:164:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13050              		.loc 1 164 78 is_stmt 0 view .LVU4482
 13051 48f0 498D14D6 		lea	rdx, [r14+rdx*8]	# index_ptr,
 13052              	.LVL817:
 165:sieve_extend.c **** 
 13053              		.loc 1 165 4 is_stmt 1 view .LVU4483
 169:sieve_extend.c ****        *index_ptr |= mask;
 13054              		.loc 1 169 4 view .LVU4484
 169:sieve_extend.c ****        *index_ptr |= mask;
 13055              		.loc 1 169 10 view .LVU4485
 13056 48f4 4839DA   		cmp	rdx, rbx	# index_ptr, fast_loop_ptr
 13057 48f7 0F830301 		jnb	.L884	#,
 13057      0000
 169:sieve_extend.c ****        *index_ptr |= mask;
 13058              		.loc 1 169 10 is_stmt 0 view .LVU4486
 13059 48fd 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	# _1372, %sfp
 13059      50
 13060 4902 4801D7   		add	rdi, rdx	# ivtmp.549, index_ptr
 13061              	.L885:
 170:sieve_extend.c ****        index_ptr+=step;
 13062              		.loc 1 170 8 is_stmt 1 view .LVU4487
 13063              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13064              		.loc 1 170 19 is_stmt 0 view .LVU4488
 13065 4905 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_615, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 13066              		.loc 1 171 8 is_stmt 1 view .LVU4489
 13067              	.LVL818:
 172:sieve_extend.c ****        index_ptr+=step;
 13068              		.loc 1 172 8 view .LVU4490
 13069              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13070              		.loc 1 172 19 is_stmt 0 view .LVU4491
 13071 4908 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_615, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 13072              		.loc 1 173 8 is_stmt 1 view .LVU4492
GAS LISTING /tmp/cct11Qa0.s 			page 350


 13073              	.LVL819:
 174:sieve_extend.c ****        index_ptr+=step;
 13074              		.loc 1 174 8 view .LVU4493
 13075              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13076              		.loc 1 174 19 is_stmt 0 view .LVU4494
 13077 490c 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1325, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 13078              		.loc 1 175 8 is_stmt 1 view .LVU4495
 13079              	.LVL820:
 176:sieve_extend.c ****        index_ptr+=step;
 13080              		.loc 1 176 8 view .LVU4496
 13081              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13082              		.loc 1 176 19 is_stmt 0 view .LVU4497
 13083 490f 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1325, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 13084              		.loc 1 177 8 is_stmt 1 view .LVU4498
 13085              	.LVL821:
 178:sieve_extend.c ****        index_ptr+=step;
 13086              		.loc 1 178 8 view .LVU4499
 13087 4913 4C01D7   		add	rdi, r10	# ivtmp.549, tmp776
 13088              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13089              		.loc 1 178 19 is_stmt 0 view .LVU4500
 13090 4916 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_615, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 13091              		.loc 1 179 8 is_stmt 1 view .LVU4501
 13092 491a 4C01D2   		add	rdx, r10	# index_ptr, tmp776
 13093              	.LVL822:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13094              		.loc 1 169 10 view .LVU4502
 13095 491d 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13096 4920 0F86DA00 		jbe	.L884	#,
 13096      0000
 170:sieve_extend.c ****        index_ptr+=step;
 13097              		.loc 1 170 8 view .LVU4503
 13098              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13099              		.loc 1 170 19 is_stmt 0 view .LVU4504
 13100 4926 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_615, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 13101              		.loc 1 171 8 is_stmt 1 view .LVU4505
 13102              	.LVL823:
 172:sieve_extend.c ****        index_ptr+=step;
 13103              		.loc 1 172 8 view .LVU4506
 13104              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13105              		.loc 1 172 19 is_stmt 0 view .LVU4507
 13106 4929 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_615, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 13107              		.loc 1 173 8 is_stmt 1 view .LVU4508
 13108              	.LVL824:
 174:sieve_extend.c ****        index_ptr+=step;
 13109              		.loc 1 174 8 view .LVU4509
 13110              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cct11Qa0.s 			page 351


 13111              		.loc 1 174 19 is_stmt 0 view .LVU4510
 13112 492d 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1325, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 13113              		.loc 1 175 8 is_stmt 1 view .LVU4511
 13114              	.LVL825:
 176:sieve_extend.c ****        index_ptr+=step;
 13115              		.loc 1 176 8 view .LVU4512
 13116              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13117              		.loc 1 176 19 is_stmt 0 view .LVU4513
 13118 4930 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1325, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 13119              		.loc 1 177 8 is_stmt 1 view .LVU4514
 13120              	.LVL826:
 178:sieve_extend.c ****        index_ptr+=step;
 13121              		.loc 1 178 8 view .LVU4515
 13122 4934 4C01D7   		add	rdi, r10	# ivtmp.549, tmp776
 13123              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13124              		.loc 1 178 19 is_stmt 0 view .LVU4516
 13125 4937 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_615, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 13126              		.loc 1 179 8 is_stmt 1 view .LVU4517
 13127 493b 4C01D2   		add	rdx, r10	# index_ptr, tmp776
 13128              	.LVL827:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13129              		.loc 1 169 10 view .LVU4518
 13130 493e 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13131 4941 0F86B900 		jbe	.L884	#,
 13131      0000
 170:sieve_extend.c ****        index_ptr+=step;
 13132              		.loc 1 170 8 view .LVU4519
 13133              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13134              		.loc 1 170 19 is_stmt 0 view .LVU4520
 13135 4947 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_615, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 13136              		.loc 1 171 8 is_stmt 1 view .LVU4521
 13137              	.LVL828:
 172:sieve_extend.c ****        index_ptr+=step;
 13138              		.loc 1 172 8 view .LVU4522
 13139              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13140              		.loc 1 172 19 is_stmt 0 view .LVU4523
 13141 494a 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_615, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 13142              		.loc 1 173 8 is_stmt 1 view .LVU4524
 13143              	.LVL829:
 174:sieve_extend.c ****        index_ptr+=step;
 13144              		.loc 1 174 8 view .LVU4525
 13145              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13146              		.loc 1 174 19 is_stmt 0 view .LVU4526
 13147 494e 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1325, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 13148              		.loc 1 175 8 is_stmt 1 view .LVU4527
 13149              	.LVL830:
GAS LISTING /tmp/cct11Qa0.s 			page 352


 176:sieve_extend.c ****        index_ptr+=step;
 13150              		.loc 1 176 8 view .LVU4528
 13151              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13152              		.loc 1 176 19 is_stmt 0 view .LVU4529
 13153 4951 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1325, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 13154              		.loc 1 177 8 is_stmt 1 view .LVU4530
 13155              	.LVL831:
 178:sieve_extend.c ****        index_ptr+=step;
 13156              		.loc 1 178 8 view .LVU4531
 13157 4955 4C01D7   		add	rdi, r10	# ivtmp.549, tmp776
 13158              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13159              		.loc 1 178 19 is_stmt 0 view .LVU4532
 13160 4958 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_615, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 13161              		.loc 1 179 8 is_stmt 1 view .LVU4533
 13162 495c 4C01D2   		add	rdx, r10	# index_ptr, tmp776
 13163              	.LVL832:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13164              		.loc 1 169 10 view .LVU4534
 13165 495f 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13166 4962 0F869800 		jbe	.L884	#,
 13166      0000
 170:sieve_extend.c ****        index_ptr+=step;
 13167              		.loc 1 170 8 view .LVU4535
 13168              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13169              		.loc 1 170 19 is_stmt 0 view .LVU4536
 13170 4968 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_615, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 13171              		.loc 1 171 8 is_stmt 1 view .LVU4537
 13172              	.LVL833:
 172:sieve_extend.c ****        index_ptr+=step;
 13173              		.loc 1 172 8 view .LVU4538
 13174              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13175              		.loc 1 172 19 is_stmt 0 view .LVU4539
 13176 496b 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_615, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 13177              		.loc 1 173 8 is_stmt 1 view .LVU4540
 13178              	.LVL834:
 174:sieve_extend.c ****        index_ptr+=step;
 13179              		.loc 1 174 8 view .LVU4541
 13180              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13181              		.loc 1 174 19 is_stmt 0 view .LVU4542
 13182 496f 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1325, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 13183              		.loc 1 175 8 is_stmt 1 view .LVU4543
 13184              	.LVL835:
 176:sieve_extend.c ****        index_ptr+=step;
 13185              		.loc 1 176 8 view .LVU4544
 13186              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13187              		.loc 1 176 19 is_stmt 0 view .LVU4545
GAS LISTING /tmp/cct11Qa0.s 			page 353


 13188 4972 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1325, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 13189              		.loc 1 177 8 is_stmt 1 view .LVU4546
 13190              	.LVL836:
 178:sieve_extend.c ****        index_ptr+=step;
 13191              		.loc 1 178 8 view .LVU4547
 13192 4976 4C01D7   		add	rdi, r10	# ivtmp.549, tmp776
 13193              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13194              		.loc 1 178 19 is_stmt 0 view .LVU4548
 13195 4979 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_615, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 13196              		.loc 1 179 8 is_stmt 1 view .LVU4549
 13197 497d 4C01D2   		add	rdx, r10	# index_ptr, tmp776
 13198              	.LVL837:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13199              		.loc 1 169 10 view .LVU4550
 13200 4980 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13201 4983 767B     		jbe	.L884	#,
 170:sieve_extend.c ****        index_ptr+=step;
 13202              		.loc 1 170 8 view .LVU4551
 13203              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13204              		.loc 1 170 19 is_stmt 0 view .LVU4552
 13205 4985 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_615, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 13206              		.loc 1 171 8 is_stmt 1 view .LVU4553
 13207              	.LVL838:
 172:sieve_extend.c ****        index_ptr+=step;
 13208              		.loc 1 172 8 view .LVU4554
 13209              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13210              		.loc 1 172 19 is_stmt 0 view .LVU4555
 13211 4988 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_615, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 13212              		.loc 1 173 8 is_stmt 1 view .LVU4556
 13213              	.LVL839:
 174:sieve_extend.c ****        index_ptr+=step;
 13214              		.loc 1 174 8 view .LVU4557
 13215              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13216              		.loc 1 174 19 is_stmt 0 view .LVU4558
 13217 498c 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1325, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 13218              		.loc 1 175 8 is_stmt 1 view .LVU4559
 13219              	.LVL840:
 176:sieve_extend.c ****        index_ptr+=step;
 13220              		.loc 1 176 8 view .LVU4560
 13221              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13222              		.loc 1 176 19 is_stmt 0 view .LVU4561
 13223 498f 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1325, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 13224              		.loc 1 177 8 is_stmt 1 view .LVU4562
 13225              	.LVL841:
 178:sieve_extend.c ****        index_ptr+=step;
 13226              		.loc 1 178 8 view .LVU4563
GAS LISTING /tmp/cct11Qa0.s 			page 354


 13227 4993 4C01D7   		add	rdi, r10	# ivtmp.549, tmp776
 13228              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13229              		.loc 1 178 19 is_stmt 0 view .LVU4564
 13230 4996 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_615, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 13231              		.loc 1 179 8 is_stmt 1 view .LVU4565
 13232 499a 4C01D2   		add	rdx, r10	# index_ptr, tmp776
 13233              	.LVL842:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13234              		.loc 1 169 10 view .LVU4566
 13235 499d 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13236 49a0 765E     		jbe	.L884	#,
 170:sieve_extend.c ****        index_ptr+=step;
 13237              		.loc 1 170 8 view .LVU4567
 13238              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13239              		.loc 1 170 19 is_stmt 0 view .LVU4568
 13240 49a2 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_615, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 13241              		.loc 1 171 8 is_stmt 1 view .LVU4569
 13242              	.LVL843:
 172:sieve_extend.c ****        index_ptr+=step;
 13243              		.loc 1 172 8 view .LVU4570
 13244              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13245              		.loc 1 172 19 is_stmt 0 view .LVU4571
 13246 49a5 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_615, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 13247              		.loc 1 173 8 is_stmt 1 view .LVU4572
 13248              	.LVL844:
 174:sieve_extend.c ****        index_ptr+=step;
 13249              		.loc 1 174 8 view .LVU4573
 13250              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13251              		.loc 1 174 19 is_stmt 0 view .LVU4574
 13252 49a9 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1325, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 13253              		.loc 1 175 8 is_stmt 1 view .LVU4575
 13254              	.LVL845:
 176:sieve_extend.c ****        index_ptr+=step;
 13255              		.loc 1 176 8 view .LVU4576
 13256              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13257              		.loc 1 176 19 is_stmt 0 view .LVU4577
 13258 49ac 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1325, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 13259              		.loc 1 177 8 is_stmt 1 view .LVU4578
 13260              	.LVL846:
 178:sieve_extend.c ****        index_ptr+=step;
 13261              		.loc 1 178 8 view .LVU4579
 13262 49b0 4C01D7   		add	rdi, r10	# ivtmp.549, tmp776
 13263              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13264              		.loc 1 178 19 is_stmt 0 view .LVU4580
 13265 49b3 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_615, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
GAS LISTING /tmp/cct11Qa0.s 			page 355


 13266              		.loc 1 179 8 is_stmt 1 view .LVU4581
 13267 49b7 4C01D2   		add	rdx, r10	# index_ptr, tmp776
 13268              	.LVL847:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13269              		.loc 1 169 10 view .LVU4582
 13270 49ba 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13271 49bd 7641     		jbe	.L884	#,
 170:sieve_extend.c ****        index_ptr+=step;
 13272              		.loc 1 170 8 view .LVU4583
 13273              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13274              		.loc 1 170 19 is_stmt 0 view .LVU4584
 13275 49bf 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_615, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 13276              		.loc 1 171 8 is_stmt 1 view .LVU4585
 13277              	.LVL848:
 172:sieve_extend.c ****        index_ptr+=step;
 13278              		.loc 1 172 8 view .LVU4586
 13279              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13280              		.loc 1 172 19 is_stmt 0 view .LVU4587
 13281 49c2 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_615, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 13282              		.loc 1 173 8 is_stmt 1 view .LVU4588
 13283              	.LVL849:
 174:sieve_extend.c ****        index_ptr+=step;
 13284              		.loc 1 174 8 view .LVU4589
 13285              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13286              		.loc 1 174 19 is_stmt 0 view .LVU4590
 13287 49c6 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1325, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 13288              		.loc 1 175 8 is_stmt 1 view .LVU4591
 13289              	.LVL850:
 176:sieve_extend.c ****        index_ptr+=step;
 13290              		.loc 1 176 8 view .LVU4592
 13291              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13292              		.loc 1 176 19 is_stmt 0 view .LVU4593
 13293 49c9 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1325, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 13294              		.loc 1 177 8 is_stmt 1 view .LVU4594
 13295              	.LVL851:
 178:sieve_extend.c ****        index_ptr+=step;
 13296              		.loc 1 178 8 view .LVU4595
 13297 49cd 4C01D7   		add	rdi, r10	# ivtmp.549, tmp776
 13298              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13299              		.loc 1 178 19 is_stmt 0 view .LVU4596
 13300 49d0 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_615, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 13301              		.loc 1 179 8 is_stmt 1 view .LVU4597
 13302 49d4 4C01D2   		add	rdx, r10	# index_ptr, tmp776
 13303              	.LVL852:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13304              		.loc 1 169 10 view .LVU4598
 13305 49d7 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
GAS LISTING /tmp/cct11Qa0.s 			page 356


 13306 49da 7624     		jbe	.L884	#,
 170:sieve_extend.c ****        index_ptr+=step;
 13307              		.loc 1 170 8 view .LVU4599
 13308              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13309              		.loc 1 170 19 is_stmt 0 view .LVU4600
 13310 49dc 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_615, offset: 0B], mask
 171:sieve_extend.c ****        *index_ptr |= mask;
 13311              		.loc 1 171 8 is_stmt 1 view .LVU4601
 13312              	.LVL853:
 172:sieve_extend.c ****        index_ptr+=step;
 13313              		.loc 1 172 8 view .LVU4602
 13314              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13315              		.loc 1 172 19 is_stmt 0 view .LVU4603
 13316 49df 48090C32 		or	QWORD PTR [rdx+rsi], rcx	# MEM[base: index_ptr_615, index: _552, offset: 0B], mask
 173:sieve_extend.c ****        *index_ptr |= mask;
 13317              		.loc 1 173 8 is_stmt 1 view .LVU4604
 13318              	.LVL854:
 174:sieve_extend.c ****        index_ptr+=step;
 13319              		.loc 1 174 8 view .LVU4605
 13320              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13321              		.loc 1 174 19 is_stmt 0 view .LVU4606
 13322 49e3 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1325, offset: 0B], mask
 175:sieve_extend.c ****        *index_ptr |= mask;
 13323              		.loc 1 175 8 is_stmt 1 view .LVU4607
 13324              	.LVL855:
 176:sieve_extend.c ****        index_ptr+=step;
 13325              		.loc 1 176 8 view .LVU4608
 13326              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13327              		.loc 1 176 19 is_stmt 0 view .LVU4609
 13328 49e6 48090C37 		or	QWORD PTR [rdi+rsi], rcx	# MEM[base: _1325, index: _552, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;
 13329              		.loc 1 177 8 is_stmt 1 view .LVU4610
 13330              	.LVL856:
 178:sieve_extend.c ****        index_ptr+=step;
 13331              		.loc 1 178 8 view .LVU4611
 13332 49ea 4C01D7   		add	rdi, r10	# ivtmp.549, tmp776
 13333              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13334              		.loc 1 178 19 is_stmt 0 view .LVU4612
 13335 49ed 48090CB2 		or	QWORD PTR [rdx+rsi*4], rcx	# MEM[base: index_ptr_615, index: _552, step: 4, offset: 0B], mask
 179:sieve_extend.c ****    }
 13336              		.loc 1 179 8 is_stmt 1 view .LVU4613
 13337 49f1 4C01D2   		add	rdx, r10	# index_ptr, tmp776
 13338              	.LVL857:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13339              		.loc 1 169 10 view .LVU4614
 13340 49f4 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13341 49f7 0F8708FF 		ja	.L885	#,
 13341      FFFF
 13342 49fd 0F1F00   		.p2align 4
 13343              		.p2align 3
 13344              	.L884:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
GAS LISTING /tmp/cct11Qa0.s 			page 357


 13345              		.loc 1 182 4 view .LVU4615
 183:sieve_extend.c ****        *index_ptr |= mask;
 13346              		.loc 1 183 4 view .LVU4616
 183:sieve_extend.c ****        *index_ptr |= mask;
 13347              		.loc 1 183 10 view .LVU4617
 13348 4a00 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13349 4a03 765B     		jbe	.L886	#,
 13350              	.L887:
 184:sieve_extend.c ****        index_ptr+=step;
 13351              		.loc 1 184 8 view .LVU4618
 13352              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13353              		.loc 1 184 19 is_stmt 0 view .LVU4619
 13354 4a05 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_871, offset: 0B], mask
 185:sieve_extend.c ****    }
 13355              		.loc 1 185 8 is_stmt 1 view .LVU4620
 13356              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13357              		.loc 1 185 17 is_stmt 0 view .LVU4621
 13358 4a08 4801F2   		add	rdx, rsi	# index_ptr, _552
 13359              	.LVL858:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13360              		.loc 1 183 10 is_stmt 1 view .LVU4622
 13361 4a0b 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13362 4a0e 7650     		jbe	.L886	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13363              		.loc 1 184 8 view .LVU4623
 13364              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13365              		.loc 1 184 19 is_stmt 0 view .LVU4624
 13366 4a10 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_871, offset: 0B], mask
 185:sieve_extend.c ****    }
 13367              		.loc 1 185 8 is_stmt 1 view .LVU4625
 13368              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13369              		.loc 1 185 17 is_stmt 0 view .LVU4626
 13370 4a13 4801F2   		add	rdx, rsi	# index_ptr, _552
 13371              	.LVL859:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13372              		.loc 1 183 10 is_stmt 1 view .LVU4627
 13373 4a16 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13374 4a19 7645     		jbe	.L886	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13375              		.loc 1 184 8 view .LVU4628
 13376              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13377              		.loc 1 184 19 is_stmt 0 view .LVU4629
 13378 4a1b 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_871, offset: 0B], mask
 185:sieve_extend.c ****    }
 13379              		.loc 1 185 8 is_stmt 1 view .LVU4630
 13380              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13381              		.loc 1 185 17 is_stmt 0 view .LVU4631
 13382 4a1e 4801F2   		add	rdx, rsi	# index_ptr, _552
 13383              	.LVL860:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13384              		.loc 1 183 10 is_stmt 1 view .LVU4632
GAS LISTING /tmp/cct11Qa0.s 			page 358


 13385 4a21 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13386 4a24 763A     		jbe	.L886	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13387              		.loc 1 184 8 view .LVU4633
 13388              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13389              		.loc 1 184 19 is_stmt 0 view .LVU4634
 13390 4a26 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_871, offset: 0B], mask
 185:sieve_extend.c ****    }
 13391              		.loc 1 185 8 is_stmt 1 view .LVU4635
 13392              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13393              		.loc 1 185 17 is_stmt 0 view .LVU4636
 13394 4a29 4801F2   		add	rdx, rsi	# index_ptr, _552
 13395              	.LVL861:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13396              		.loc 1 183 10 is_stmt 1 view .LVU4637
 13397 4a2c 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13398 4a2f 762F     		jbe	.L886	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13399              		.loc 1 184 8 view .LVU4638
 13400              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13401              		.loc 1 184 19 is_stmt 0 view .LVU4639
 13402 4a31 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_871, offset: 0B], mask
 185:sieve_extend.c ****    }
 13403              		.loc 1 185 8 is_stmt 1 view .LVU4640
 13404              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13405              		.loc 1 185 17 is_stmt 0 view .LVU4641
 13406 4a34 4801F2   		add	rdx, rsi	# index_ptr, _552
 13407              	.LVL862:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13408              		.loc 1 183 10 is_stmt 1 view .LVU4642
 13409 4a37 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13410 4a3a 7624     		jbe	.L886	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13411              		.loc 1 184 8 view .LVU4643
 13412              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13413              		.loc 1 184 19 is_stmt 0 view .LVU4644
 13414 4a3c 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_871, offset: 0B], mask
 185:sieve_extend.c ****    }
 13415              		.loc 1 185 8 is_stmt 1 view .LVU4645
 13416              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13417              		.loc 1 185 17 is_stmt 0 view .LVU4646
 13418 4a3f 4801F2   		add	rdx, rsi	# index_ptr, _552
 13419              	.LVL863:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13420              		.loc 1 183 10 is_stmt 1 view .LVU4647
 13421 4a42 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13422 4a45 7619     		jbe	.L886	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13423              		.loc 1 184 8 view .LVU4648
 13424              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cct11Qa0.s 			page 359


 13425              		.loc 1 184 19 is_stmt 0 view .LVU4649
 13426 4a47 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_871, offset: 0B], mask
 185:sieve_extend.c ****    }
 13427              		.loc 1 185 8 is_stmt 1 view .LVU4650
 13428              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13429              		.loc 1 185 17 is_stmt 0 view .LVU4651
 13430 4a4a 4801F2   		add	rdx, rsi	# index_ptr, _552
 13431              	.LVL864:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13432              		.loc 1 183 10 is_stmt 1 view .LVU4652
 13433 4a4d 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13434 4a50 760E     		jbe	.L886	#,
 184:sieve_extend.c ****        index_ptr+=step;
 13435              		.loc 1 184 8 view .LVU4653
 13436              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13437              		.loc 1 184 19 is_stmt 0 view .LVU4654
 13438 4a52 48090A   		or	QWORD PTR [rdx], rcx	# MEM[base: index_ptr_871, offset: 0B], mask
 185:sieve_extend.c ****    }
 13439              		.loc 1 185 8 is_stmt 1 view .LVU4655
 13440              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 13441              		.loc 1 185 17 is_stmt 0 view .LVU4656
 13442 4a55 4801F2   		add	rdx, rsi	# index_ptr, _552
 13443              	.LVL865:
 183:sieve_extend.c ****        *index_ptr |= mask;
 13444              		.loc 1 183 10 is_stmt 1 view .LVU4657
 13445 4a58 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13446 4a5b 77A8     		ja	.L887	#,
 13447 4a5d 0F1F00   		.p2align 4
 13448              		.p2align 3
 13449              	.L886:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 13450              		.loc 1 188 4 view .LVU4658
 13451              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 13452              		.loc 1 188 7 is_stmt 0 view .LVU4659
 13453 4a60 4939D3   		cmp	r11, rdx	# range_stop_ptr, index_ptr
 13454 4a63 0F849F03 		je	.L1450	#,
 13454      0000
 13455              	.LVL866:
 13456              	.L888:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 13457              		.loc 1 188 7 view .LVU4660
 13458              	.LBE581:
 13459              	.LBE584:
 13460              	.LBE586:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13461              		.loc 1 284 54 is_stmt 1 view .LVU4661
 13462              	# sieve_extend.c:284:         for (register counter_t index = range_start; index <= range_stop_uniq
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13463              		.loc 1 284 9 is_stmt 0 view .LVU4662
 13464 4a69 4939C5   		cmp	r13, rax	# tmp755, index
 13465 4a6c 0F83AEFD 		jnb	.L889	#,
 13465      FFFF
 13466              	.LVL867:
GAS LISTING /tmp/cct11Qa0.s 			page 360


 13467              	.L880:
 284:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13468              		.loc 1 284 9 view .LVU4663
 13469              	.LBE588:
 13470              	.LBE594:
 13471              	.LBE596:
 803:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 13472              		.loc 1 803 9 is_stmt 1 view .LVU4664
 13473              	.LBB597:
 13474              	.LBI597:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 13475              		.loc 1 110 25 view .LVU4665
 13476              	.LBB598:
 111:sieve_extend.c ****     return index;
 13477              		.loc 1 111 5 view .LVU4666
 111:sieve_extend.c ****     return index;
 13478              		.loc 1 111 11 view .LVU4667
 13479              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13480              		.loc 1 111 21 is_stmt 0 view .LVU4668
 13481 4a72 4D89C8   		mov	r8, r9	# tmp756, _413
 13482              	.LVL868:
 111:sieve_extend.c ****     return index;
 13483              		.loc 1 111 21 view .LVU4669
 13484              	.LBE598:
 13485              	.LBE597:
 13486              	# sieve_extend.c:801:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 801:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13487              		.loc 1 801 12 view .LVU4670
 13488 4a75 4C89C9   		mov	rcx, r9	# index, _413
 13489              	.LBB600:
 13490              	.LBB599:
 13491              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13492              		.loc 1 111 21 view .LVU4671
 13493 4a78 49C1E806 		shr	r8, 6	# tmp756,
 13494              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13495              		.loc 1 111 12 view .LVU4672
 13496 4a7c 4B8B04C6 		mov	rax, QWORD PTR [r14+r8*8]	# *_54, *_54
 13497              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13498              		.loc 1 111 11 view .LVU4673
 13499 4a80 4C0FA3C8 		bt	rax, r9	# *_54, _413
 13500 4a84 0F83C600 		jnc	.L879	#,
 13500      0000
 13501              	.LVL869:
 13502              	.L878:
 111:sieve_extend.c ****     return index;
 13503              		.loc 1 111 58 is_stmt 1 view .LVU4674
 13504              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13505              		.loc 1 111 63 is_stmt 0 view .LVU4675
 13506 4a8a 4C8D4901 		lea	r9, 1[rcx]	# tmp884,
 13507              	.LVL870:
 13508              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
GAS LISTING /tmp/cct11Qa0.s 			page 361


 13509              		.loc 1 111 21 view .LVU4676
 13510 4a8e 4D89CD   		mov	r13, r9	# tmp783, index
 13511              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13512              		.loc 1 111 63 view .LVU4677
 13513 4a91 4C89C9   		mov	rcx, r9	# index, tmp884
 111:sieve_extend.c ****     return index;
 13514              		.loc 1 111 11 is_stmt 1 view .LVU4678
 13515              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13516              		.loc 1 111 21 is_stmt 0 view .LVU4679
 13517 4a94 49C1ED06 		shr	r13, 6	# tmp783,
 13518              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13519              		.loc 1 111 12 view .LVU4680
 13520 4a98 4F8B14EE 		mov	r10, QWORD PTR [r14+r13*8]	# *_349, *_349
 13521              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13522              		.loc 1 111 11 view .LVU4681
 13523 4a9c 4D0FA3CA 		bt	r10, r9	# *_349, index
 13524 4aa0 0F83AA00 		jnc	.L879	#,
 13524      0000
 111:sieve_extend.c ****     return index;
 13525              		.loc 1 111 58 is_stmt 1 view .LVU4682
 13526              	.LVL871:
 13527              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13528              		.loc 1 111 63 is_stmt 0 view .LVU4683
 13529 4aa6 4883C101 		add	rcx, 1	# index,
 13530              	.LVL872:
 111:sieve_extend.c ****     return index;
 13531              		.loc 1 111 11 is_stmt 1 view .LVU4684
 13532              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13533              		.loc 1 111 21 is_stmt 0 view .LVU4685
 13534 4aaa 4889CB   		mov	rbx, rcx	# tmp996, index
 13535 4aad 48C1EB06 		shr	rbx, 6	# tmp996,
 13536              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13537              		.loc 1 111 12 view .LVU4686
 13538 4ab1 498B14DE 		mov	rdx, QWORD PTR [r14+rbx*8]	# *_349, *_349
 13539              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13540              		.loc 1 111 11 view .LVU4687
 13541 4ab5 480FA3CA 		bt	rdx, rcx	# *_349, index
 13542 4ab9 0F839100 		jnc	.L879	#,
 13542      0000
 111:sieve_extend.c ****     return index;
 13543              		.loc 1 111 58 is_stmt 1 view .LVU4688
 13544              	.LVL873:
 13545              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13546              		.loc 1 111 63 is_stmt 0 view .LVU4689
 13547 4abf 498D4902 		lea	rcx, 2[r9]	# index,
 13548              	.LVL874:
 111:sieve_extend.c ****     return index;
 13549              		.loc 1 111 11 is_stmt 1 view .LVU4690
GAS LISTING /tmp/cct11Qa0.s 			page 362


 13550              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13551              		.loc 1 111 21 is_stmt 0 view .LVU4691
 13552 4ac3 4889CF   		mov	rdi, rcx	# tmp1000, index
 13553 4ac6 48C1EF06 		shr	rdi, 6	# tmp1000,
 13554              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13555              		.loc 1 111 12 view .LVU4692
 13556 4aca 498B34FE 		mov	rsi, QWORD PTR [r14+rdi*8]	# *_349, *_349
 13557              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13558              		.loc 1 111 11 view .LVU4693
 13559 4ace 480FA3CE 		bt	rsi, rcx	# *_349, index
 13560 4ad2 737C     		jnc	.L879	#,
 111:sieve_extend.c ****     return index;
 13561              		.loc 1 111 58 is_stmt 1 view .LVU4694
 13562              	.LVL875:
 13563              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13564              		.loc 1 111 63 is_stmt 0 view .LVU4695
 13565 4ad4 498D4903 		lea	rcx, 3[r9]	# index,
 13566              	.LVL876:
 111:sieve_extend.c ****     return index;
 13567              		.loc 1 111 11 is_stmt 1 view .LVU4696
 13568              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13569              		.loc 1 111 21 is_stmt 0 view .LVU4697
 13570 4ad8 4989C8   		mov	r8, rcx	# tmp1004, index
 13571 4adb 49C1E806 		shr	r8, 6	# tmp1004,
 13572              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13573              		.loc 1 111 12 view .LVU4698
 13574 4adf 4B8B04C6 		mov	rax, QWORD PTR [r14+r8*8]	# *_349, *_349
 13575              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13576              		.loc 1 111 11 view .LVU4699
 13577 4ae3 480FA3C8 		bt	rax, rcx	# *_349, index
 13578 4ae7 7367     		jnc	.L879	#,
 111:sieve_extend.c ****     return index;
 13579              		.loc 1 111 58 is_stmt 1 view .LVU4700
 13580              	.LVL877:
 13581              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13582              		.loc 1 111 63 is_stmt 0 view .LVU4701
 13583 4ae9 498D4904 		lea	rcx, 4[r9]	# index,
 13584              	.LVL878:
 111:sieve_extend.c ****     return index;
 13585              		.loc 1 111 11 is_stmt 1 view .LVU4702
 13586              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13587              		.loc 1 111 21 is_stmt 0 view .LVU4703
 13588 4aed 4989CD   		mov	r13, rcx	# tmp1008, index
 13589 4af0 49C1ED06 		shr	r13, 6	# tmp1008,
 13590              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13591              		.loc 1 111 12 view .LVU4704
 13592 4af4 4F8B14EE 		mov	r10, QWORD PTR [r14+r13*8]	# *_349, *_349
GAS LISTING /tmp/cct11Qa0.s 			page 363


 13593              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13594              		.loc 1 111 11 view .LVU4705
 13595 4af8 490FA3CA 		bt	r10, rcx	# *_349, index
 13596 4afc 7352     		jnc	.L879	#,
 111:sieve_extend.c ****     return index;
 13597              		.loc 1 111 58 is_stmt 1 view .LVU4706
 13598              	.LVL879:
 13599              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13600              		.loc 1 111 63 is_stmt 0 view .LVU4707
 13601 4afe 498D4905 		lea	rcx, 5[r9]	# index,
 13602              	.LVL880:
 111:sieve_extend.c ****     return index;
 13603              		.loc 1 111 11 is_stmt 1 view .LVU4708
 13604              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13605              		.loc 1 111 21 is_stmt 0 view .LVU4709
 13606 4b02 4889CB   		mov	rbx, rcx	# tmp1012, index
 13607 4b05 48C1EB06 		shr	rbx, 6	# tmp1012,
 13608              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13609              		.loc 1 111 12 view .LVU4710
 13610 4b09 498B14DE 		mov	rdx, QWORD PTR [r14+rbx*8]	# *_349, *_349
 13611              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13612              		.loc 1 111 11 view .LVU4711
 13613 4b0d 480FA3CA 		bt	rdx, rcx	# *_349, index
 13614 4b11 733D     		jnc	.L879	#,
 111:sieve_extend.c ****     return index;
 13615              		.loc 1 111 58 is_stmt 1 view .LVU4712
 13616              	.LVL881:
 13617              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13618              		.loc 1 111 63 is_stmt 0 view .LVU4713
 13619 4b13 498D4906 		lea	rcx, 6[r9]	# index,
 13620              	.LVL882:
 111:sieve_extend.c ****     return index;
 13621              		.loc 1 111 11 is_stmt 1 view .LVU4714
 13622              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13623              		.loc 1 111 21 is_stmt 0 view .LVU4715
 13624 4b17 4889CF   		mov	rdi, rcx	# tmp1016, index
 13625 4b1a 48C1EF06 		shr	rdi, 6	# tmp1016,
 13626              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13627              		.loc 1 111 12 view .LVU4716
 13628 4b1e 498B34FE 		mov	rsi, QWORD PTR [r14+rdi*8]	# *_349, *_349
 13629              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13630              		.loc 1 111 11 view .LVU4717
 13631 4b22 480FA3CE 		bt	rsi, rcx	# *_349, index
 13632 4b26 7328     		jnc	.L879	#,
 111:sieve_extend.c ****     return index;
 13633              		.loc 1 111 58 is_stmt 1 view .LVU4718
 13634              	.LVL883:
 13635              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cct11Qa0.s 			page 364


 111:sieve_extend.c ****     return index;
 13636              		.loc 1 111 63 is_stmt 0 view .LVU4719
 13637 4b28 498D4907 		lea	rcx, 7[r9]	# index,
 13638              	.LVL884:
 111:sieve_extend.c ****     return index;
 13639              		.loc 1 111 11 is_stmt 1 view .LVU4720
 13640              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13641              		.loc 1 111 21 is_stmt 0 view .LVU4721
 13642 4b2c 4989C9   		mov	r9, rcx	# tmp1020, index
 13643 4b2f 49C1E906 		shr	r9, 6	# tmp1020,
 13644              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13645              		.loc 1 111 12 view .LVU4722
 13646 4b33 4F8B04CE 		mov	r8, QWORD PTR [r14+r9*8]	# *_349, *_349
 13647              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 13648              		.loc 1 111 11 view .LVU4723
 13649 4b37 490FA3C8 		bt	r8, rcx	# *_349, index
 13650 4b3b 0F8249FF 		jc	.L878	#,
 13650      FFFF
 13651              	.LVL885:
 13652 4b41 66662E0F 		.p2align 4
 13652      1F840000 
 13652      0000000F 
 13652      1F4000
 13653              		.p2align 3
 13654              	.L879:
 112:sieve_extend.c **** }
 13655              		.loc 1 112 5 is_stmt 1 view .LVU4724
 112:sieve_extend.c **** }
 13656              		.loc 1 112 5 is_stmt 0 view .LVU4725
 13657              	.LBE599:
 13658              	.LBE600:
 804:sieve_extend.c ****     }
 13659              		.loc 1 804 9 is_stmt 1 view .LVU4726
 13660              	# sieve_extend.c:804:         start = prime * prime * 2 + prime * 2;
 804:sieve_extend.c ****     }
 13661              		.loc 1 804 35 is_stmt 0 view .LVU4727
 13662 4b50 4C8D4901 		lea	r9, 1[rcx]	# _413,
 13663 4b54 4C8D0409 		lea	r8, [rcx+rcx]	# _29,
 13664              	.LVL886:
 13665              	# sieve_extend.c:804:         start = prime * prime * 2 + prime * 2;
 804:sieve_extend.c ****     }
 13666              		.loc 1 804 15 view .LVU4728
 13667 4b58 4C89C8   		mov	rax, r9	# index, _413
 13668 4b5b 490FAFC0 		imul	rax, r8	# index, _29
 13669              	.LVL887:
 798:sieve_extend.c ****         step  = prime * 2 + 1;
 13670              		.loc 1 798 11 is_stmt 1 view .LVU4729
 13671 4b5f 4939C7   		cmp	r15, rax	# block_stop, index
 13672 4b62 0F82B6FB 		jb	.L1432	#,
 13672      FFFF
 799:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 13673              		.loc 1 799 9 view .LVU4730
 13674              	# sieve_extend.c:799:         step  = prime * 2 + 1;
 799:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
GAS LISTING /tmp/cct11Qa0.s 			page 365


 13675              		.loc 1 799 15 is_stmt 0 view .LVU4731
 13676 4b68 4983C001 		add	r8, 1	# step,
 13677              	.LVL888:
 800:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13678              		.loc 1 800 9 is_stmt 1 view .LVU4732
 13679              	# sieve_extend.c:800:         if unlikely(step > MEDIUMSTEP_FASTER) break;
 800:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13680              		.loc 1 800 12 is_stmt 0 view .LVU4733
 13681 4b6c 4983F840 		cmp	r8, 64	# step,
 13682 4b70 0F863AFC 		jbe	.L912	#,
 13682      FFFF
 13683              	.LVL889:
 13684              	.L872:
 825:sieve_extend.c ****         step  = prime * 2 + 1;
 13685              		.loc 1 825 11 is_stmt 1 view .LVU4734
 826:sieve_extend.c ****         if unlikely(step > VECTOR_SIZE_counter*3/4) break;
 13686              		.loc 1 826 9 view .LVU4735
 827:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13687              		.loc 1 827 9 view .LVU4736
 834:sieve_extend.c ****         step  = prime * 2 + 1;
 13688              		.loc 1 834 11 view .LVU4737
 13689              	.LBB601:
 13690              	.LBB551:
 13691              	.LBB548:
 13692              	.LBB538:
 13693              	.LBB539:
 13694              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 13695              		.loc 1 163 20 is_stmt 0 view .LVU4738
 13696 4b76 4D89FB   		mov	r11, r15	# range_stop_word, block_stop
 13697              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 13698              		.loc 1 189 29 view .LVU4739
 13699 4b79 49C7C5FF 		mov	r13, -1	# tmp1697,
 13699      FFFFFF
 13700              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 13701              		.loc 1 163 20 view .LVU4740
 13702 4b80 49C1EB06 		shr	r11, 6	# range_stop_word,
 13703              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 13704              		.loc 1 189 29 view .LVU4741
 13705 4b84 0FB65C24 		movzx	ebx, BYTE PTR 40[rsp]	# tmp1698, %sfp
 13705      28
 13706              	# sieve_extend.c:182:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 13707              		.loc 1 182 41 view .LVU4742
 13708 4b89 4F8D14DE 		lea	r10, [r14+r11*8]	# range_stop_ptr,
 13709              	# sieve_extend.c:163:    const counter_t range_stop_word = wordindex(range_stop);
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 13710              		.loc 1 163 20 view .LVU4743
 13711 4b8d 4C895C24 		mov	QWORD PTR 64[rsp], r11	# %sfp, range_stop_word
 13711      40
 13712              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 13713              		.loc 1 189 29 view .LVU4744
 13714 4b92 C4C2E3F7 		shrx	rdx, r13, rbx	# _667, tmp1697, tmp1698
GAS LISTING /tmp/cct11Qa0.s 			page 366


 13714      D5
 13715 4b97 48895424 		mov	QWORD PTR 72[rsp], rdx	# %sfp, _667
 13715      48
 13716              	.LVL890:
 13717 4b9c 0F1F4000 		.p2align 4
 13718              		.p2align 3
 13719              	.L913:
 189:sieve_extend.c ****    }
 13720              		.loc 1 189 29 view .LVU4745
 13721              	.LBE539:
 13722              	.LBE538:
 13723              	.LBE548:
 13724              	.LBE551:
 13725              	.LBE601:
 835:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13726              		.loc 1 835 9 is_stmt 1 view .LVU4746
 13727              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 13728              		.loc 1 836 12 is_stmt 0 view .LVU4747
 13729 4ba0 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# block_start, %sfp
 13729      58
 13730              	# sieve_extend.c:835:         step  = prime * 2 + 1;
 835:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13731              		.loc 1 835 15 view .LVU4748
 13732 4ba5 4C8D5C09 		lea	r11, 1[rcx+rcx]	# step,
 13732      01
 13733              	.LVL891:
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 13734              		.loc 1 836 9 is_stmt 1 view .LVU4749
 13735              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 13736              		.loc 1 836 12 is_stmt 0 view .LVU4750
 13737 4baa 4939F9   		cmp	r9, rdi	# _413, block_start
 13738 4bad 7713     		ja	.L891	#,
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 13739              		.loc 1 836 47 is_stmt 1 view .LVU4751
 13740              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 13741              		.loc 1 836 67 is_stmt 0 view .LVU4752
 13742 4baf 488D0439 		lea	rax, [rcx+rdi]	# _395,
 13743              	.LVL892:
 13744              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 13745              		.loc 1 836 108 view .LVU4753
 13746 4bb3 31D2     		xor	edx, edx	# tmp792
 13747              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 13748              		.loc 1 836 75 view .LVU4754
 13749 4bb5 488D3408 		lea	rsi, [rax+rcx]	# tmp790,
 13750              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 13751              		.loc 1 836 108 view .LVU4755
 13752 4bb9 49F7F3   		div	r11	# step
 13753              	.LVL893:
 13754              	# sieve_extend.c:836:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 836:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 13755              		.loc 1 836 53 view .LVU4756
GAS LISTING /tmp/cct11Qa0.s 			page 367


 13756 4bbc 4889F0   		mov	rax, rsi	# tmp790, tmp790
 13757 4bbf 4829D0   		sub	rax, rdx	# tmp790, tmp792
 13758              	.LVL894:
 13759              	.L891:
 837:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 13760              		.loc 1 837 9 is_stmt 1 view .LVU4757
 13761              	# sieve_extend.c:837:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 837:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 13762              		.loc 1 837 12 is_stmt 0 view .LVU4758
 13763 4bc2 4D89DD   		mov	r13, r11	# tmp794, step
 13764 4bc5 49C1E506 		sal	r13, 6	# tmp794,
 13765 4bc9 4901C5   		add	r13, rax	# _401, index
 13766 4bcc 4D39EF   		cmp	r15, r13	# block_stop, _401
 13767 4bcf 0F825B03 		jb	.L892	#,
 13767      0000
 13768              	.LVL895:
 13769              	.LBB602:
 13770              	.LBB552:
 13771              	.LBB549:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13772              		.loc 1 381 50 is_stmt 1 view .LVU4759
 13773              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 13774              		.loc 1 381 5 is_stmt 0 view .LVU4760
 13775 4bd5 4C39E8   		cmp	rax, r13	# index, _401
 13776 4bd8 0F83C301 		jnb	.L903	#,
 13776      0000
 13777              	.LBB544:
 13778              	.LBB540:
 13779              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 13780              		.loc 1 165 133 view .LVU4761
 13781 4bde 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	# range_stop_word, %sfp
 13781      40
 13782              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 13783              		.loc 1 165 110 view .LVU4762
 13784 4be3 4F8D049B 		lea	r8, [r11+r11*4]	# tmp804,
 13785 4be7 4C89DE   		mov	rsi, r11	# _1358, step
 13786              	# sieve_extend.c:171:        index_ptr+=step;
 171:sieve_extend.c ****        *index_ptr |= mask;
 13787              		.loc 1 171 17 view .LVU4763
 13788 4bea 4A8D0CDD 		lea	rcx, 0[0+r11*8]	# _635,
 13788      00000000 
 13789              	.LVL896:
 13790              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 13791              		.loc 1 165 133 view .LVU4764
 13792 4bf2 4889FB   		mov	rbx, rdi	# tmp806, range_stop_word
 13793 4bf5 4C29C3   		sub	rbx, r8	# tmp806, tmp804
 13794              	# sieve_extend.c:165:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 165:sieve_extend.c **** 
 13795              		.loc 1 165 53 view .LVU4765
 13796 4bf8 4C39C7   		cmp	rdi, r8	# range_stop_word, tmp804
 13797 4bfb 498D1CDE 		lea	rbx, [r14+rbx*8]	# tmp808,
 13798 4bff 490F46DE 		cmovbe	rbx, r14	# _30,, fast_loop_ptr
 13799 4c03 48C1E604 		sal	rsi, 4	# _1358,
GAS LISTING /tmp/cct11Qa0.s 			page 368


 13800 4c07 49C1E003 		sal	r8, 3	# tmp812,
 13801 4c0b 48897424 		mov	QWORD PTR 80[rsp], rsi	# %sfp, _1358
 13801      50
 13802              		.p2align 4
 13803              		.p2align 3
 13804              	.L902:
 165:sieve_extend.c **** 
 13805              		.loc 1 165 53 view .LVU4766
 13806              	.LBE540:
 13807              	.LBE544:
 382:sieve_extend.c ****     }
 13808              		.loc 1 382 9 is_stmt 1 view .LVU4767
 13809 4c10 4889C2   		mov	rdx, rax	# tmp815, index
 13810 4c13 C4C2F9F7 		shlx	rsi, r12, rax	# _620, tmp875, index
 13810      F4
 13811              	.LVL897:
 13812              	.LBB545:
 13813              	.LBI538:
 135:sieve_extend.c **** //#if __APPLE__
 13814              		.loc 1 135 20 view .LVU4768
 13815              	.LBB541:
 163:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 13816              		.loc 1 163 4 view .LVU4769
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13817              		.loc 1 164 4 view .LVU4770
 13818              	.LBE541:
 13819              	.LBE545:
 13820              	# sieve_extend.c:382:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 382:sieve_extend.c ****     }
 13821              		.loc 1 382 9 is_stmt 0 view .LVU4771
 13822 4c18 48C1EA06 		shr	rdx, 6	# tmp815,
 13823              	.LBB546:
 13824              	.LBB542:
 13825              	# sieve_extend.c:164:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 164:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13826              		.loc 1 164 78 view .LVU4772
 13827 4c1c 498D14D6 		lea	rdx, [r14+rdx*8]	# index_ptr,
 13828              	.LVL898:
 165:sieve_extend.c **** 
 13829              		.loc 1 165 4 is_stmt 1 view .LVU4773
 169:sieve_extend.c ****        *index_ptr |= mask;
 13830              		.loc 1 169 4 view .LVU4774
 169:sieve_extend.c ****        *index_ptr |= mask;
 13831              		.loc 1 169 10 view .LVU4775
 13832 4c20 4839DA   		cmp	rdx, rbx	# index_ptr, fast_loop_ptr
 13833 4c23 0F830701 		jnb	.L897	#,
 13833      0000
 169:sieve_extend.c ****        *index_ptr |= mask;
 13834              		.loc 1 169 10 is_stmt 0 view .LVU4776
 13835 4c29 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	# _1358, %sfp
 13835      50
 13836 4c2e 4801D7   		add	rdi, rdx	# ivtmp.509, index_ptr
 13837              	.L898:
 170:sieve_extend.c ****        index_ptr+=step;
 13838              		.loc 1 170 8 is_stmt 1 view .LVU4777
 13839              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cct11Qa0.s 			page 369


 13840              		.loc 1 170 19 is_stmt 0 view .LVU4778
 13841 4c31 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_916, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 13842              		.loc 1 171 8 is_stmt 1 view .LVU4779
 13843              	.LVL899:
 172:sieve_extend.c ****        index_ptr+=step;
 13844              		.loc 1 172 8 view .LVU4780
 13845              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13846              		.loc 1 172 19 is_stmt 0 view .LVU4781
 13847 4c34 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_916, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 13848              		.loc 1 173 8 is_stmt 1 view .LVU4782
 13849              	.LVL900:
 174:sieve_extend.c ****        index_ptr+=step;
 13850              		.loc 1 174 8 view .LVU4783
 13851              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13852              		.loc 1 174 19 is_stmt 0 view .LVU4784
 13853 4c38 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1331, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 13854              		.loc 1 175 8 is_stmt 1 view .LVU4785
 13855              	.LVL901:
 176:sieve_extend.c ****        index_ptr+=step;
 13856              		.loc 1 176 8 view .LVU4786
 13857              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13858              		.loc 1 176 19 is_stmt 0 view .LVU4787
 13859 4c3b 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1331, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 13860              		.loc 1 177 8 is_stmt 1 view .LVU4788
 13861              	.LVL902:
 178:sieve_extend.c ****        index_ptr+=step;
 13862              		.loc 1 178 8 view .LVU4789
 13863 4c3f 4C01C7   		add	rdi, r8	# ivtmp.509, tmp812
 13864              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13865              		.loc 1 178 19 is_stmt 0 view .LVU4790
 13866 4c42 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_916, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 13867              		.loc 1 179 8 is_stmt 1 view .LVU4791
 13868 4c46 4C01C2   		add	rdx, r8	# index_ptr, tmp812
 13869              	.LVL903:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13870              		.loc 1 169 10 view .LVU4792
 13871 4c49 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13872 4c4c 0F86DE00 		jbe	.L897	#,
 13872      0000
 170:sieve_extend.c ****        index_ptr+=step;
 13873              		.loc 1 170 8 view .LVU4793
 13874              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13875              		.loc 1 170 19 is_stmt 0 view .LVU4794
 13876 4c52 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_916, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 13877              		.loc 1 171 8 is_stmt 1 view .LVU4795
 13878              	.LVL904:
GAS LISTING /tmp/cct11Qa0.s 			page 370


 172:sieve_extend.c ****        index_ptr+=step;
 13879              		.loc 1 172 8 view .LVU4796
 13880              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13881              		.loc 1 172 19 is_stmt 0 view .LVU4797
 13882 4c55 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_916, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 13883              		.loc 1 173 8 is_stmt 1 view .LVU4798
 13884              	.LVL905:
 174:sieve_extend.c ****        index_ptr+=step;
 13885              		.loc 1 174 8 view .LVU4799
 13886              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13887              		.loc 1 174 19 is_stmt 0 view .LVU4800
 13888 4c59 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1331, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 13889              		.loc 1 175 8 is_stmt 1 view .LVU4801
 13890              	.LVL906:
 176:sieve_extend.c ****        index_ptr+=step;
 13891              		.loc 1 176 8 view .LVU4802
 13892              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13893              		.loc 1 176 19 is_stmt 0 view .LVU4803
 13894 4c5c 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1331, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 13895              		.loc 1 177 8 is_stmt 1 view .LVU4804
 13896              	.LVL907:
 178:sieve_extend.c ****        index_ptr+=step;
 13897              		.loc 1 178 8 view .LVU4805
 13898 4c60 4C01C7   		add	rdi, r8	# ivtmp.509, tmp812
 13899              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13900              		.loc 1 178 19 is_stmt 0 view .LVU4806
 13901 4c63 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_916, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 13902              		.loc 1 179 8 is_stmt 1 view .LVU4807
 13903 4c67 4C01C2   		add	rdx, r8	# index_ptr, tmp812
 13904              	.LVL908:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13905              		.loc 1 169 10 view .LVU4808
 13906 4c6a 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13907 4c6d 0F86BD00 		jbe	.L897	#,
 13907      0000
 170:sieve_extend.c ****        index_ptr+=step;
 13908              		.loc 1 170 8 view .LVU4809
 13909              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13910              		.loc 1 170 19 is_stmt 0 view .LVU4810
 13911 4c73 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_916, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 13912              		.loc 1 171 8 is_stmt 1 view .LVU4811
 13913              	.LVL909:
 172:sieve_extend.c ****        index_ptr+=step;
 13914              		.loc 1 172 8 view .LVU4812
 13915              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13916              		.loc 1 172 19 is_stmt 0 view .LVU4813
GAS LISTING /tmp/cct11Qa0.s 			page 371


 13917 4c76 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_916, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 13918              		.loc 1 173 8 is_stmt 1 view .LVU4814
 13919              	.LVL910:
 174:sieve_extend.c ****        index_ptr+=step;
 13920              		.loc 1 174 8 view .LVU4815
 13921              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13922              		.loc 1 174 19 is_stmt 0 view .LVU4816
 13923 4c7a 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1331, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 13924              		.loc 1 175 8 is_stmt 1 view .LVU4817
 13925              	.LVL911:
 176:sieve_extend.c ****        index_ptr+=step;
 13926              		.loc 1 176 8 view .LVU4818
 13927              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13928              		.loc 1 176 19 is_stmt 0 view .LVU4819
 13929 4c7d 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1331, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 13930              		.loc 1 177 8 is_stmt 1 view .LVU4820
 13931              	.LVL912:
 178:sieve_extend.c ****        index_ptr+=step;
 13932              		.loc 1 178 8 view .LVU4821
 13933 4c81 4C01C7   		add	rdi, r8	# ivtmp.509, tmp812
 13934              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13935              		.loc 1 178 19 is_stmt 0 view .LVU4822
 13936 4c84 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_916, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 13937              		.loc 1 179 8 is_stmt 1 view .LVU4823
 13938 4c88 4C01C2   		add	rdx, r8	# index_ptr, tmp812
 13939              	.LVL913:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13940              		.loc 1 169 10 view .LVU4824
 13941 4c8b 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13942 4c8e 0F869C00 		jbe	.L897	#,
 13942      0000
 170:sieve_extend.c ****        index_ptr+=step;
 13943              		.loc 1 170 8 view .LVU4825
 13944              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13945              		.loc 1 170 19 is_stmt 0 view .LVU4826
 13946 4c94 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_916, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 13947              		.loc 1 171 8 is_stmt 1 view .LVU4827
 13948              	.LVL914:
 172:sieve_extend.c ****        index_ptr+=step;
 13949              		.loc 1 172 8 view .LVU4828
 13950              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13951              		.loc 1 172 19 is_stmt 0 view .LVU4829
 13952 4c97 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_916, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 13953              		.loc 1 173 8 is_stmt 1 view .LVU4830
 13954              	.LVL915:
 174:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cct11Qa0.s 			page 372


 13955              		.loc 1 174 8 view .LVU4831
 13956              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13957              		.loc 1 174 19 is_stmt 0 view .LVU4832
 13958 4c9b 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1331, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 13959              		.loc 1 175 8 is_stmt 1 view .LVU4833
 13960              	.LVL916:
 176:sieve_extend.c ****        index_ptr+=step;
 13961              		.loc 1 176 8 view .LVU4834
 13962              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13963              		.loc 1 176 19 is_stmt 0 view .LVU4835
 13964 4c9e 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1331, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 13965              		.loc 1 177 8 is_stmt 1 view .LVU4836
 13966              	.LVL917:
 178:sieve_extend.c ****        index_ptr+=step;
 13967              		.loc 1 178 8 view .LVU4837
 13968 4ca2 4C01C7   		add	rdi, r8	# ivtmp.509, tmp812
 13969              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 13970              		.loc 1 178 19 is_stmt 0 view .LVU4838
 13971 4ca5 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_916, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 13972              		.loc 1 179 8 is_stmt 1 view .LVU4839
 13973 4ca9 4C01C2   		add	rdx, r8	# index_ptr, tmp812
 13974              	.LVL918:
 169:sieve_extend.c ****        *index_ptr |= mask;
 13975              		.loc 1 169 10 view .LVU4840
 13976 4cac 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 13977 4caf 767F     		jbe	.L897	#,
 170:sieve_extend.c ****        index_ptr+=step;
 13978              		.loc 1 170 8 view .LVU4841
 13979              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 13980              		.loc 1 170 19 is_stmt 0 view .LVU4842
 13981 4cb1 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_916, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 13982              		.loc 1 171 8 is_stmt 1 view .LVU4843
 13983              	.LVL919:
 172:sieve_extend.c ****        index_ptr+=step;
 13984              		.loc 1 172 8 view .LVU4844
 13985              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 13986              		.loc 1 172 19 is_stmt 0 view .LVU4845
 13987 4cb4 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_916, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 13988              		.loc 1 173 8 is_stmt 1 view .LVU4846
 13989              	.LVL920:
 174:sieve_extend.c ****        index_ptr+=step;
 13990              		.loc 1 174 8 view .LVU4847
 13991              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 13992              		.loc 1 174 19 is_stmt 0 view .LVU4848
 13993 4cb8 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1331, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/cct11Qa0.s 			page 373


 13994              		.loc 1 175 8 is_stmt 1 view .LVU4849
 13995              	.LVL921:
 176:sieve_extend.c ****        index_ptr+=step;
 13996              		.loc 1 176 8 view .LVU4850
 13997              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 13998              		.loc 1 176 19 is_stmt 0 view .LVU4851
 13999 4cbb 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1331, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 14000              		.loc 1 177 8 is_stmt 1 view .LVU4852
 14001              	.LVL922:
 178:sieve_extend.c ****        index_ptr+=step;
 14002              		.loc 1 178 8 view .LVU4853
 14003 4cbf 4C01C7   		add	rdi, r8	# ivtmp.509, tmp812
 14004              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 14005              		.loc 1 178 19 is_stmt 0 view .LVU4854
 14006 4cc2 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_916, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 14007              		.loc 1 179 8 is_stmt 1 view .LVU4855
 14008 4cc6 4C01C2   		add	rdx, r8	# index_ptr, tmp812
 14009              	.LVL923:
 169:sieve_extend.c ****        *index_ptr |= mask;
 14010              		.loc 1 169 10 view .LVU4856
 14011 4cc9 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 14012 4ccc 7662     		jbe	.L897	#,
 170:sieve_extend.c ****        index_ptr+=step;
 14013              		.loc 1 170 8 view .LVU4857
 14014              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 14015              		.loc 1 170 19 is_stmt 0 view .LVU4858
 14016 4cce 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_916, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 14017              		.loc 1 171 8 is_stmt 1 view .LVU4859
 14018              	.LVL924:
 172:sieve_extend.c ****        index_ptr+=step;
 14019              		.loc 1 172 8 view .LVU4860
 14020              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 14021              		.loc 1 172 19 is_stmt 0 view .LVU4861
 14022 4cd1 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_916, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 14023              		.loc 1 173 8 is_stmt 1 view .LVU4862
 14024              	.LVL925:
 174:sieve_extend.c ****        index_ptr+=step;
 14025              		.loc 1 174 8 view .LVU4863
 14026              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 14027              		.loc 1 174 19 is_stmt 0 view .LVU4864
 14028 4cd5 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1331, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 14029              		.loc 1 175 8 is_stmt 1 view .LVU4865
 14030              	.LVL926:
 176:sieve_extend.c ****        index_ptr+=step;
 14031              		.loc 1 176 8 view .LVU4866
 14032              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cct11Qa0.s 			page 374


 14033              		.loc 1 176 19 is_stmt 0 view .LVU4867
 14034 4cd8 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1331, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 14035              		.loc 1 177 8 is_stmt 1 view .LVU4868
 14036              	.LVL927:
 178:sieve_extend.c ****        index_ptr+=step;
 14037              		.loc 1 178 8 view .LVU4869
 14038 4cdc 4C01C7   		add	rdi, r8	# ivtmp.509, tmp812
 14039              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 14040              		.loc 1 178 19 is_stmt 0 view .LVU4870
 14041 4cdf 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_916, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 14042              		.loc 1 179 8 is_stmt 1 view .LVU4871
 14043 4ce3 4C01C2   		add	rdx, r8	# index_ptr, tmp812
 14044              	.LVL928:
 169:sieve_extend.c ****        *index_ptr |= mask;
 14045              		.loc 1 169 10 view .LVU4872
 14046 4ce6 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 14047 4ce9 7645     		jbe	.L897	#,
 170:sieve_extend.c ****        index_ptr+=step;
 14048              		.loc 1 170 8 view .LVU4873
 14049              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 14050              		.loc 1 170 19 is_stmt 0 view .LVU4874
 14051 4ceb 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_916, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 14052              		.loc 1 171 8 is_stmt 1 view .LVU4875
 14053              	.LVL929:
 172:sieve_extend.c ****        index_ptr+=step;
 14054              		.loc 1 172 8 view .LVU4876
 14055              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 14056              		.loc 1 172 19 is_stmt 0 view .LVU4877
 14057 4cee 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_916, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 14058              		.loc 1 173 8 is_stmt 1 view .LVU4878
 14059              	.LVL930:
 174:sieve_extend.c ****        index_ptr+=step;
 14060              		.loc 1 174 8 view .LVU4879
 14061              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 14062              		.loc 1 174 19 is_stmt 0 view .LVU4880
 14063 4cf2 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1331, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 14064              		.loc 1 175 8 is_stmt 1 view .LVU4881
 14065              	.LVL931:
 176:sieve_extend.c ****        index_ptr+=step;
 14066              		.loc 1 176 8 view .LVU4882
 14067              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 14068              		.loc 1 176 19 is_stmt 0 view .LVU4883
 14069 4cf5 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1331, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 14070              		.loc 1 177 8 is_stmt 1 view .LVU4884
 14071              	.LVL932:
 178:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cct11Qa0.s 			page 375


 14072              		.loc 1 178 8 view .LVU4885
 14073 4cf9 4C01C7   		add	rdi, r8	# ivtmp.509, tmp812
 14074              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 14075              		.loc 1 178 19 is_stmt 0 view .LVU4886
 14076 4cfc 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_916, index: _635, step: 4, offset: 0B], _620
 179:sieve_extend.c ****    }
 14077              		.loc 1 179 8 is_stmt 1 view .LVU4887
 14078 4d00 4C01C2   		add	rdx, r8	# index_ptr, tmp812
 14079              	.LVL933:
 169:sieve_extend.c ****        *index_ptr |= mask;
 14080              		.loc 1 169 10 view .LVU4888
 14081 4d03 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 14082 4d06 7628     		jbe	.L897	#,
 170:sieve_extend.c ****        index_ptr+=step;
 14083              		.loc 1 170 8 view .LVU4889
 14084              	# sieve_extend.c:170:        *index_ptr |= mask;
 170:sieve_extend.c ****        index_ptr+=step;
 14085              		.loc 1 170 19 is_stmt 0 view .LVU4890
 14086 4d08 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_916, offset: 0B], _620
 171:sieve_extend.c ****        *index_ptr |= mask;
 14087              		.loc 1 171 8 is_stmt 1 view .LVU4891
 14088              	.LVL934:
 172:sieve_extend.c ****        index_ptr+=step;
 14089              		.loc 1 172 8 view .LVU4892
 14090              	# sieve_extend.c:172:        *index_ptr |= mask;
 172:sieve_extend.c ****        index_ptr+=step;
 14091              		.loc 1 172 19 is_stmt 0 view .LVU4893
 14092 4d0b 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_916, index: _635, offset: 0B], _620
 173:sieve_extend.c ****        *index_ptr |= mask;
 14093              		.loc 1 173 8 is_stmt 1 view .LVU4894
 14094              	.LVL935:
 174:sieve_extend.c ****        index_ptr+=step;
 14095              		.loc 1 174 8 view .LVU4895
 14096              	# sieve_extend.c:174:        *index_ptr |= mask;
 174:sieve_extend.c ****        index_ptr+=step;
 14097              		.loc 1 174 19 is_stmt 0 view .LVU4896
 14098 4d0f 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1331, offset: 0B], _620
 175:sieve_extend.c ****        *index_ptr |= mask;
 14099              		.loc 1 175 8 is_stmt 1 view .LVU4897
 14100              	.LVL936:
 176:sieve_extend.c ****        index_ptr+=step;
 14101              		.loc 1 176 8 view .LVU4898
 14102              	# sieve_extend.c:176:        *index_ptr |= mask;
 176:sieve_extend.c ****        index_ptr+=step;
 14103              		.loc 1 176 19 is_stmt 0 view .LVU4899
 14104 4d12 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1331, index: _635, offset: 0B], _620
 177:sieve_extend.c ****        *index_ptr |= mask;
 14105              		.loc 1 177 8 is_stmt 1 view .LVU4900
 14106              	.LVL937:
 178:sieve_extend.c ****        index_ptr+=step;
 14107              		.loc 1 178 8 view .LVU4901
 14108 4d16 4C01C7   		add	rdi, r8	# ivtmp.509, tmp812
 14109              	# sieve_extend.c:178:        *index_ptr |= mask;
 178:sieve_extend.c ****        index_ptr+=step;
 14110              		.loc 1 178 19 is_stmt 0 view .LVU4902
 14111 4d19 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_916, index: _635, step: 4, offset: 0B], _620
GAS LISTING /tmp/cct11Qa0.s 			page 376


 179:sieve_extend.c ****    }
 14112              		.loc 1 179 8 is_stmt 1 view .LVU4903
 14113 4d1d 4C01C2   		add	rdx, r8	# index_ptr, tmp812
 14114              	.LVL938:
 169:sieve_extend.c ****        *index_ptr |= mask;
 14115              		.loc 1 169 10 view .LVU4904
 14116 4d20 4839D3   		cmp	rbx, rdx	# fast_loop_ptr, index_ptr
 14117 4d23 0F8708FF 		ja	.L898	#,
 14117      FFFF
 14118 4d29 0F1F8000 		.p2align 4
 14118      000000
 14119              		.p2align 3
 14120              	.L897:
 182:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 14121              		.loc 1 182 4 view .LVU4905
 183:sieve_extend.c ****        *index_ptr |= mask;
 14122              		.loc 1 183 4 view .LVU4906
 183:sieve_extend.c ****        *index_ptr |= mask;
 14123              		.loc 1 183 10 view .LVU4907
 14124 4d30 4939D2   		cmp	r10, rdx	# range_stop_ptr, index_ptr
 14125 4d33 765B     		jbe	.L899	#,
 14126              	.L900:
 184:sieve_extend.c ****        index_ptr+=step;
 14127              		.loc 1 184 8 view .LVU4908
 14128              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14129              		.loc 1 184 19 is_stmt 0 view .LVU4909
 14130 4d35 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_912, offset: 0B], _620
 185:sieve_extend.c ****    }
 14131              		.loc 1 185 8 is_stmt 1 view .LVU4910
 14132              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 14133              		.loc 1 185 17 is_stmt 0 view .LVU4911
 14134 4d38 4801CA   		add	rdx, rcx	# index_ptr, _635
 14135              	.LVL939:
 183:sieve_extend.c ****        *index_ptr |= mask;
 14136              		.loc 1 183 10 is_stmt 1 view .LVU4912
 14137 4d3b 4939D2   		cmp	r10, rdx	# range_stop_ptr, index_ptr
 14138 4d3e 7650     		jbe	.L899	#,
 184:sieve_extend.c ****        index_ptr+=step;
 14139              		.loc 1 184 8 view .LVU4913
 14140              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14141              		.loc 1 184 19 is_stmt 0 view .LVU4914
 14142 4d40 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_912, offset: 0B], _620
 185:sieve_extend.c ****    }
 14143              		.loc 1 185 8 is_stmt 1 view .LVU4915
 14144              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 14145              		.loc 1 185 17 is_stmt 0 view .LVU4916
 14146 4d43 4801CA   		add	rdx, rcx	# index_ptr, _635
 14147              	.LVL940:
 183:sieve_extend.c ****        *index_ptr |= mask;
 14148              		.loc 1 183 10 is_stmt 1 view .LVU4917
 14149 4d46 4939D2   		cmp	r10, rdx	# range_stop_ptr, index_ptr
 14150 4d49 7645     		jbe	.L899	#,
 184:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cct11Qa0.s 			page 377


 14151              		.loc 1 184 8 view .LVU4918
 14152              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14153              		.loc 1 184 19 is_stmt 0 view .LVU4919
 14154 4d4b 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_912, offset: 0B], _620
 185:sieve_extend.c ****    }
 14155              		.loc 1 185 8 is_stmt 1 view .LVU4920
 14156              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 14157              		.loc 1 185 17 is_stmt 0 view .LVU4921
 14158 4d4e 4801CA   		add	rdx, rcx	# index_ptr, _635
 14159              	.LVL941:
 183:sieve_extend.c ****        *index_ptr |= mask;
 14160              		.loc 1 183 10 is_stmt 1 view .LVU4922
 14161 4d51 4939D2   		cmp	r10, rdx	# range_stop_ptr, index_ptr
 14162 4d54 763A     		jbe	.L899	#,
 184:sieve_extend.c ****        index_ptr+=step;
 14163              		.loc 1 184 8 view .LVU4923
 14164              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14165              		.loc 1 184 19 is_stmt 0 view .LVU4924
 14166 4d56 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_912, offset: 0B], _620
 185:sieve_extend.c ****    }
 14167              		.loc 1 185 8 is_stmt 1 view .LVU4925
 14168              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 14169              		.loc 1 185 17 is_stmt 0 view .LVU4926
 14170 4d59 4801CA   		add	rdx, rcx	# index_ptr, _635
 14171              	.LVL942:
 183:sieve_extend.c ****        *index_ptr |= mask;
 14172              		.loc 1 183 10 is_stmt 1 view .LVU4927
 14173 4d5c 4939D2   		cmp	r10, rdx	# range_stop_ptr, index_ptr
 14174 4d5f 762F     		jbe	.L899	#,
 184:sieve_extend.c ****        index_ptr+=step;
 14175              		.loc 1 184 8 view .LVU4928
 14176              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14177              		.loc 1 184 19 is_stmt 0 view .LVU4929
 14178 4d61 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_912, offset: 0B], _620
 185:sieve_extend.c ****    }
 14179              		.loc 1 185 8 is_stmt 1 view .LVU4930
 14180              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 14181              		.loc 1 185 17 is_stmt 0 view .LVU4931
 14182 4d64 4801CA   		add	rdx, rcx	# index_ptr, _635
 14183              	.LVL943:
 183:sieve_extend.c ****        *index_ptr |= mask;
 14184              		.loc 1 183 10 is_stmt 1 view .LVU4932
 14185 4d67 4939D2   		cmp	r10, rdx	# range_stop_ptr, index_ptr
 14186 4d6a 7624     		jbe	.L899	#,
 184:sieve_extend.c ****        index_ptr+=step;
 14187              		.loc 1 184 8 view .LVU4933
 14188              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14189              		.loc 1 184 19 is_stmt 0 view .LVU4934
 14190 4d6c 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_912, offset: 0B], _620
 185:sieve_extend.c ****    }
GAS LISTING /tmp/cct11Qa0.s 			page 378


 14191              		.loc 1 185 8 is_stmt 1 view .LVU4935
 14192              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 14193              		.loc 1 185 17 is_stmt 0 view .LVU4936
 14194 4d6f 4801CA   		add	rdx, rcx	# index_ptr, _635
 14195              	.LVL944:
 183:sieve_extend.c ****        *index_ptr |= mask;
 14196              		.loc 1 183 10 is_stmt 1 view .LVU4937
 14197 4d72 4939D2   		cmp	r10, rdx	# range_stop_ptr, index_ptr
 14198 4d75 7619     		jbe	.L899	#,
 184:sieve_extend.c ****        index_ptr+=step;
 14199              		.loc 1 184 8 view .LVU4938
 14200              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14201              		.loc 1 184 19 is_stmt 0 view .LVU4939
 14202 4d77 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_912, offset: 0B], _620
 185:sieve_extend.c ****    }
 14203              		.loc 1 185 8 is_stmt 1 view .LVU4940
 14204              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 14205              		.loc 1 185 17 is_stmt 0 view .LVU4941
 14206 4d7a 4801CA   		add	rdx, rcx	# index_ptr, _635
 14207              	.LVL945:
 183:sieve_extend.c ****        *index_ptr |= mask;
 14208              		.loc 1 183 10 is_stmt 1 view .LVU4942
 14209 4d7d 4939D2   		cmp	r10, rdx	# range_stop_ptr, index_ptr
 14210 4d80 760E     		jbe	.L899	#,
 184:sieve_extend.c ****        index_ptr+=step;
 14211              		.loc 1 184 8 view .LVU4943
 14212              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14213              		.loc 1 184 19 is_stmt 0 view .LVU4944
 14214 4d82 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_912, offset: 0B], _620
 185:sieve_extend.c ****    }
 14215              		.loc 1 185 8 is_stmt 1 view .LVU4945
 14216              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****    }
 14217              		.loc 1 185 17 is_stmt 0 view .LVU4946
 14218 4d85 4801CA   		add	rdx, rcx	# index_ptr, _635
 14219              	.LVL946:
 183:sieve_extend.c ****        *index_ptr |= mask;
 14220              		.loc 1 183 10 is_stmt 1 view .LVU4947
 14221 4d88 4939D2   		cmp	r10, rdx	# range_stop_ptr, index_ptr
 14222 4d8b 77A8     		ja	.L900	#,
 14223 4d8d 0F1F00   		.p2align 4
 14224              		.p2align 3
 14225              	.L899:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14226              		.loc 1 188 4 view .LVU4948
 14227              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14228              		.loc 1 188 7 is_stmt 0 view .LVU4949
 14229 4d90 4939D2   		cmp	r10, rdx	# range_stop_ptr, index_ptr
 14230 4d93 7463     		je	.L1451	#,
 14231              	.LVL947:
 14232              	.L901:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/cct11Qa0.s 			page 379


 14233              		.loc 1 188 7 view .LVU4950
 14234              	.LBE542:
 14235              	.LBE546:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 14236              		.loc 1 381 77 is_stmt 1 view .LVU4951
 14237              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 14238              		.loc 1 381 83 is_stmt 0 view .LVU4952
 14239 4d95 4C01D8   		add	rax, r11	# index, step
 14240              	.LVL948:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 14241              		.loc 1 381 50 is_stmt 1 view .LVU4953
 14242              	# sieve_extend.c:381:     for (register counter_t index = range_start; index < range_stop_unique; i
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 14243              		.loc 1 381 5 is_stmt 0 view .LVU4954
 14244 4d98 4939C5   		cmp	r13, rax	# _401, index
 14245 4d9b 0F876FFE 		ja	.L902	#,
 14245      FFFF
 14246              	.L903:
 14247              	.LVL949:
 381:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 14248              		.loc 1 381 5 view .LVU4955
 14249              	.LBE549:
 14250              	.LBE552:
 14251              	.LBE602:
 839:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14252              		.loc 1 839 9 is_stmt 1 view .LVU4956
 14253              	.LBB603:
 14254              	.LBI603:
 116:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 14255              		.loc 1 116 25 view .LVU4957
 14256              	.LBB604:
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 14257              		.loc 1 119 4 view .LVU4958
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 14258              		.loc 1 120 4 view .LVU4959
 14259              	# sieve_extend.c:119:    register counter_t index_word = wordindex(index);
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 14260              		.loc 1 119 23 is_stmt 0 view .LVU4960
 14261 4da1 4C89C8   		mov	rax, r9	# index_word, _413
 14262              	.LVL950:
 14263              	# sieve_extend.c:120:    bitshift_t index_bit  = bitindex_calc(index);
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 14264              		.loc 1 120 15 view .LVU4961
 14265 4da4 4D89CB   		mov	r11, r9	# index_bit, _413
 14266              	.LVL951:
 14267              	# sieve_extend.c:119:    register counter_t index_word = wordindex(index);
 119:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 14268              		.loc 1 119 23 view .LVU4962
 14269 4da7 48C1E806 		shr	rax, 6	# index_word,
 14270              	.LVL952:
 14271              	# sieve_extend.c:120:    bitshift_t index_bit  = bitindex_calc(index);
 120:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 14272              		.loc 1 120 15 view .LVU4963
 14273 4dab 4183E33F 		and	r11d, 63	# index_bit,
 14274              	.LVL953:
 121:sieve_extend.c ****    index += distance;
GAS LISTING /tmp/cct11Qa0.s 			page 380


 14275              		.loc 1 121 4 is_stmt 1 view .LVU4964
 14276              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 14277              		.loc 1 121 89 is_stmt 0 view .LVU4965
 14278 4daf 4D8B04C6 		mov	r8, QWORD PTR [r14+rax*8]	# *_591, *_591
 14279 4db3 C4C2A3F7 		shrx	rcx, r8, r11	# tmp797, *_591, index_bit
 14279      C8
 14280              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 14281              		.loc 1 121 66 view .LVU4966
 14282 4db8 48F7D1   		not	rcx	# tmp799
 14283              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 14284              		.loc 1 121 76 view .LVU4967
 14285 4dbb 4C8D2CC5 		lea	r13, 0[0+rax*8]	# _590,
 14285      00000000 
 14286              	# sieve_extend.c:121:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 121:sieve_extend.c ****    index += distance;
 14287              		.loc 1 121 25 view .LVU4968
 14288 4dc3 F3480FBC 		tzcnt	rbx, rcx	# distance, tmp799
 14288      D9
 14289              	.LVL954:
 122:sieve_extend.c ****    distance += index_bit;
 14290              		.loc 1 122 4 is_stmt 1 view .LVU4969
 14291              	# sieve_extend.c:122:    index += distance;
 122:sieve_extend.c ****    distance += index_bit;
 14292              		.loc 1 122 10 is_stmt 0 view .LVU4970
 14293 4dc8 498D0C19 		lea	rcx, [r9+rbx]	# index,
 14294              	.LVL955:
 123:sieve_extend.c **** 
 14295              		.loc 1 123 4 is_stmt 1 view .LVU4971
 125:sieve_extend.c ****        index_word++;
 14296              		.loc 1 125 4 view .LVU4972
 125:sieve_extend.c ****        index_word++;
 14297              		.loc 1 125 10 view .LVU4973
 14298              	# sieve_extend.c:123:    distance += index_bit;
 123:sieve_extend.c **** 
 14299              		.loc 1 123 13 is_stmt 0 view .LVU4974
 14300 4dcc 4C01DB   		add	rbx, r11	# distance, index_bit
 14301              	.LVL956:
 14302              	# sieve_extend.c:125:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 125:sieve_extend.c ****        index_word++;
 14303              		.loc 1 125 10 view .LVU4975
 14304 4dcf 4883FB40 		cmp	rbx, 64	# distance,
 14305 4dd3 0F843F01 		je	.L1452	#,
 14305      0000
 14306              	.LVL957:
 14307              	.L1298:
 131:sieve_extend.c **** }
 14308              		.loc 1 131 4 is_stmt 1 view .LVU4976
 131:sieve_extend.c **** }
 14309              		.loc 1 131 4 is_stmt 0 view .LVU4977
 14310              	.LBE604:
 14311              	.LBE603:
 840:sieve_extend.c ****     }
 14312              		.loc 1 840 9 is_stmt 1 view .LVU4978
 14313              	# sieve_extend.c:840:         start = prime * prime * 2 + prime * 2;
GAS LISTING /tmp/cct11Qa0.s 			page 381


 840:sieve_extend.c ****     }
 14314              		.loc 1 840 35 is_stmt 0 view .LVU4979
 14315 4dd9 4C8D4901 		lea	r9, 1[rcx]	# _413,
 14316              	# sieve_extend.c:840:         start = prime * prime * 2 + prime * 2;
 840:sieve_extend.c ****     }
 14317              		.loc 1 840 15 view .LVU4980
 14318 4ddd 4C89C8   		mov	rax, r9	# tmp825, _413
 14319 4de0 480FAFC1 		imul	rax, rcx	# tmp825, index
 14320              	.LVL958:
 840:sieve_extend.c ****     }
 14321              		.loc 1 840 15 view .LVU4981
 14322 4de4 4801C0   		add	rax, rax	# index
 14323              	.LVL959:
 834:sieve_extend.c ****         step  = prime * 2 + 1;
 14324              		.loc 1 834 11 is_stmt 1 view .LVU4982
 14325 4de7 4939C7   		cmp	r15, rax	# block_stop, index
 14326 4dea 0F83B0FD 		jnb	.L913	#,
 14326      FFFF
 834:sieve_extend.c ****         step  = prime * 2 + 1;
 14327              		.loc 1 834 11 is_stmt 0 view .LVU4983
 14328 4df0 E929F9FF 		jmp	.L1432	#
 14328      FF
 14329              	.LVL960:
 14330              		.p2align 4,,7
 14331 4df5 0F1F00   		.p2align 3
 14332              	.L1451:
 14333              	.LBB606:
 14334              	.LBB553:
 14335              	.LBB550:
 14336              	.LBB547:
 14337              	.LBB543:
 189:sieve_extend.c ****    }
 14338              		.loc 1 189 7 is_stmt 1 view .LVU4984
 14339              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 14340              		.loc 1 189 27 is_stmt 0 view .LVU4985
 14341 4df8 48237424 		and	rsi, QWORD PTR 72[rsp]	# tmp817, %sfp
 14341      48
 14342              	.LVL961:
 14343              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 14344              		.loc 1 189 18 view .LVU4986
 14345 4dfd 490932   		or	QWORD PTR [r10], rsi	# *index_ptr_915, tmp817
 14346 4e00 EB93     		jmp	.L901	#
 14347              	.LVL962:
 14348              		.p2align 4,,7
 14349 4e02 660F1F44 		.p2align 3
 14349      0000
 14350              	.L1450:
 189:sieve_extend.c ****    }
 14351              		.loc 1 189 18 view .LVU4987
 14352              	.LBE543:
 14353              	.LBE547:
 14354              	.LBE550:
 14355              	.LBE553:
 14356              	.LBE606:
 14357              	.LBB607:
GAS LISTING /tmp/cct11Qa0.s 			page 382


 14358              	.LBB595:
 14359              	.LBB589:
 14360              	.LBB587:
 14361              	.LBB585:
 14362              	.LBB582:
 189:sieve_extend.c ****    }
 14363              		.loc 1 189 7 is_stmt 1 view .LVU4988
 14364              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 14365              		.loc 1 189 27 is_stmt 0 view .LVU4989
 14366 4e08 48234C24 		and	rcx, QWORD PTR 72[rsp]	# tmp782, %sfp
 14366      48
 14367              	.LVL963:
 14368              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 14369              		.loc 1 189 18 view .LVU4990
 14370 4e0d 49090B   		or	QWORD PTR [r11], rcx	# *index_ptr_874, tmp782
 14371 4e10 E954FCFF 		jmp	.L888	#
 14371      FF
 14372              	.LVL964:
 14373              		.p2align 4,,7
 14374 4e15 0F1F00   		.p2align 3
 14375              	.L876:
 189:sieve_extend.c ****    }
 14376              		.loc 1 189 18 view .LVU4991
 14377              	.LBE582:
 14378              	.LBE585:
 14379              	.LBE587:
 14380              	.LBE589:
 14381              	.LBB590:
 14382              	.LBB591:
 14383              	.LBB592:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14384              		.loc 1 267 54 is_stmt 1 view .LVU4992
 14385              	# sieve_extend.c:267:         for (register counter_t index = range_start; index <= range_stop;) {
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14386              		.loc 1 267 9 is_stmt 0 view .LVU4993
 14387 4e18 4939C7   		cmp	r15, rax	# block_stop, index
 14388 4e1b 0F8251FC 		jb	.L880	#,
 14388      FFFF
 14389              	.LVL965:
 14390 4e21 66662E0F 		.p2align 4
 14390      1F840000 
 14390      0000000F 
 14390      1F4000
 14391              		.p2align 3
 14392              	.L882:
 14393              	.LBB593:
 268:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14394              		.loc 1 268 13 is_stmt 1 view .LVU4994
 14395              	# sieve_extend.c:268:             register counter_t index_word = wordindex(index);
 268:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14396              		.loc 1 268 32 is_stmt 0 view .LVU4995
 14397 4e30 4989C5   		mov	r13, rax	# index_word, index
 14398              	# sieve_extend.c:269:             register bitword_t mask = SAFE_ZERO;
 269:sieve_extend.c ****             #pragma ivdep
 14399              		.loc 1 269 32 view .LVU4996
GAS LISTING /tmp/cct11Qa0.s 			page 383


 14400 4e33 4531D2   		xor	r10d, r10d	# mask
 14401              	# sieve_extend.c:268:             register counter_t index_word = wordindex(index);
 268:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14402              		.loc 1 268 32 view .LVU4997
 14403 4e36 49C1ED06 		shr	r13, 6	# index_word,
 14404              	.LVL966:
 269:sieve_extend.c ****             #pragma ivdep
 14405              		.loc 1 269 13 is_stmt 1 view .LVU4998
 14406              	.L881:
 271:sieve_extend.c ****                 mask |= markmask(index);
 14407              		.loc 1 271 13 view .LVU4999
 272:sieve_extend.c ****                 index += step;
 14408              		.loc 1 272 17 view .LVU5000
 14409              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14410              		.loc 1 272 25 is_stmt 0 view .LVU5001
 14411 4e3a C4C2F9F7 		shlx	rsi, r12, rax	# tmp762, tmp875, index
 14411      F4
 14412              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14413              		.loc 1 273 23 view .LVU5002
 14414 4e3f 4C01C0   		add	rax, r8	# index, step
 14415              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14416              		.loc 1 274 36 view .LVU5003
 14417 4e42 4889C3   		mov	rbx, rax	# tmp764, index
 14418              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14419              		.loc 1 272 22 view .LVU5004
 14420 4e45 4909F2   		or	r10, rsi	# mask, tmp762
 14421              	.LVL967:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14422              		.loc 1 273 17 is_stmt 1 view .LVU5005
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14423              		.loc 1 274 21 view .LVU5006
 14424              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14425              		.loc 1 274 36 is_stmt 0 view .LVU5007
 14426 4e48 48C1EB06 		shr	rbx, 6	# tmp764,
 14427              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14428              		.loc 1 274 13 view .LVU5008
 14429 4e4c 4939DD   		cmp	r13, rbx	# index_word, tmp764
 14430 4e4f 0F85AB00 		jne	.L1300	#,
 14430      0000
 271:sieve_extend.c ****                 mask |= markmask(index);
 14431              		.loc 1 271 13 is_stmt 1 view .LVU5009
 272:sieve_extend.c ****                 index += step;
 14432              		.loc 1 272 17 view .LVU5010
 14433              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14434              		.loc 1 272 25 is_stmt 0 view .LVU5011
 14435 4e55 C4C2F9F7 		shlx	rcx, r12, rax	# tmp1024, tmp875, index
 14435      CC
 14436              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14437              		.loc 1 273 23 view .LVU5012
GAS LISTING /tmp/cct11Qa0.s 			page 384


 14438 4e5a 4C01C0   		add	rax, r8	# index, step
 14439              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14440              		.loc 1 274 36 view .LVU5013
 14441 4e5d 4889C2   		mov	rdx, rax	# tmp1025, index
 14442              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14443              		.loc 1 272 22 view .LVU5014
 14444 4e60 4909CA   		or	r10, rcx	# mask, tmp1024
 14445              	.LVL968:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14446              		.loc 1 273 17 is_stmt 1 view .LVU5015
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14447              		.loc 1 274 21 view .LVU5016
 14448              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14449              		.loc 1 274 36 is_stmt 0 view .LVU5017
 14450 4e63 48C1EA06 		shr	rdx, 6	# tmp1025,
 14451              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14452              		.loc 1 274 13 view .LVU5018
 14453 4e67 4939D5   		cmp	r13, rdx	# index_word, tmp1025
 14454 4e6a 0F859000 		jne	.L1300	#,
 14454      0000
 271:sieve_extend.c ****                 mask |= markmask(index);
 14455              		.loc 1 271 13 is_stmt 1 view .LVU5019
 272:sieve_extend.c ****                 index += step;
 14456              		.loc 1 272 17 view .LVU5020
 14457              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14458              		.loc 1 272 25 is_stmt 0 view .LVU5021
 14459 4e70 C4C2F9F7 		shlx	rdi, r12, rax	# tmp1026, tmp875, index
 14459      FC
 14460              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14461              		.loc 1 273 23 view .LVU5022
 14462 4e75 4C01C0   		add	rax, r8	# index, step
 14463              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14464              		.loc 1 274 36 view .LVU5023
 14465 4e78 4889C6   		mov	rsi, rax	# tmp1027, index
 14466              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14467              		.loc 1 272 22 view .LVU5024
 14468 4e7b 4909FA   		or	r10, rdi	# mask, tmp1026
 14469              	.LVL969:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14470              		.loc 1 273 17 is_stmt 1 view .LVU5025
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14471              		.loc 1 274 21 view .LVU5026
 14472              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14473              		.loc 1 274 36 is_stmt 0 view .LVU5027
 14474 4e7e 48C1EE06 		shr	rsi, 6	# tmp1027,
 14475              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14476              		.loc 1 274 13 view .LVU5028
GAS LISTING /tmp/cct11Qa0.s 			page 385


 14477 4e82 4939F5   		cmp	r13, rsi	# index_word, tmp1027
 14478 4e85 7579     		jne	.L1300	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 14479              		.loc 1 271 13 is_stmt 1 view .LVU5029
 272:sieve_extend.c ****                 index += step;
 14480              		.loc 1 272 17 view .LVU5030
 14481              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14482              		.loc 1 272 25 is_stmt 0 view .LVU5031
 14483 4e87 C4C2F9F7 		shlx	rbx, r12, rax	# tmp1028, tmp875, index
 14483      DC
 14484              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14485              		.loc 1 273 23 view .LVU5032
 14486 4e8c 4C01C0   		add	rax, r8	# index, step
 14487              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14488              		.loc 1 274 36 view .LVU5033
 14489 4e8f 4889C1   		mov	rcx, rax	# tmp1029, index
 14490              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14491              		.loc 1 272 22 view .LVU5034
 14492 4e92 4909DA   		or	r10, rbx	# mask, tmp1028
 14493              	.LVL970:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14494              		.loc 1 273 17 is_stmt 1 view .LVU5035
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14495              		.loc 1 274 21 view .LVU5036
 14496              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14497              		.loc 1 274 36 is_stmt 0 view .LVU5037
 14498 4e95 48C1E906 		shr	rcx, 6	# tmp1029,
 14499              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14500              		.loc 1 274 13 view .LVU5038
 14501 4e99 4939CD   		cmp	r13, rcx	# index_word, tmp1029
 14502 4e9c 7562     		jne	.L1300	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 14503              		.loc 1 271 13 is_stmt 1 view .LVU5039
 272:sieve_extend.c ****                 index += step;
 14504              		.loc 1 272 17 view .LVU5040
 14505              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14506              		.loc 1 272 25 is_stmt 0 view .LVU5041
 14507 4e9e C4C2F9F7 		shlx	rdx, r12, rax	# tmp1030, tmp875, index
 14507      D4
 14508              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14509              		.loc 1 273 23 view .LVU5042
 14510 4ea3 4C01C0   		add	rax, r8	# index, step
 14511              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14512              		.loc 1 274 36 view .LVU5043
 14513 4ea6 4889C7   		mov	rdi, rax	# tmp1031, index
 14514              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14515              		.loc 1 272 22 view .LVU5044
GAS LISTING /tmp/cct11Qa0.s 			page 386


 14516 4ea9 4909D2   		or	r10, rdx	# mask, tmp1030
 14517              	.LVL971:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14518              		.loc 1 273 17 is_stmt 1 view .LVU5045
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14519              		.loc 1 274 21 view .LVU5046
 14520              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14521              		.loc 1 274 36 is_stmt 0 view .LVU5047
 14522 4eac 48C1EF06 		shr	rdi, 6	# tmp1031,
 14523              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14524              		.loc 1 274 13 view .LVU5048
 14525 4eb0 4939FD   		cmp	r13, rdi	# index_word, tmp1031
 14526 4eb3 754B     		jne	.L1300	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 14527              		.loc 1 271 13 is_stmt 1 view .LVU5049
 272:sieve_extend.c ****                 index += step;
 14528              		.loc 1 272 17 view .LVU5050
 14529              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14530              		.loc 1 272 25 is_stmt 0 view .LVU5051
 14531 4eb5 C4C2F9F7 		shlx	rsi, r12, rax	# tmp1032, tmp875, index
 14531      F4
 14532              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14533              		.loc 1 273 23 view .LVU5052
 14534 4eba 4C01C0   		add	rax, r8	# index, step
 14535              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14536              		.loc 1 274 36 view .LVU5053
 14537 4ebd 4889C3   		mov	rbx, rax	# tmp1033, index
 14538              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14539              		.loc 1 272 22 view .LVU5054
 14540 4ec0 4909F2   		or	r10, rsi	# mask, tmp1032
 14541              	.LVL972:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14542              		.loc 1 273 17 is_stmt 1 view .LVU5055
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14543              		.loc 1 274 21 view .LVU5056
 14544              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14545              		.loc 1 274 36 is_stmt 0 view .LVU5057
 14546 4ec3 48C1EB06 		shr	rbx, 6	# tmp1033,
 14547              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14548              		.loc 1 274 13 view .LVU5058
 14549 4ec7 4939DD   		cmp	r13, rbx	# index_word, tmp1033
 14550 4eca 7534     		jne	.L1300	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 14551              		.loc 1 271 13 is_stmt 1 view .LVU5059
 272:sieve_extend.c ****                 index += step;
 14552              		.loc 1 272 17 view .LVU5060
 14553              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14554              		.loc 1 272 25 is_stmt 0 view .LVU5061
GAS LISTING /tmp/cct11Qa0.s 			page 387


 14555 4ecc C4C2F9F7 		shlx	rcx, r12, rax	# tmp1034, tmp875, index
 14555      CC
 14556              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14557              		.loc 1 273 23 view .LVU5062
 14558 4ed1 4C01C0   		add	rax, r8	# index, step
 14559              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14560              		.loc 1 274 36 view .LVU5063
 14561 4ed4 4889C2   		mov	rdx, rax	# tmp1035, index
 14562              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14563              		.loc 1 272 22 view .LVU5064
 14564 4ed7 4909CA   		or	r10, rcx	# mask, tmp1034
 14565              	.LVL973:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14566              		.loc 1 273 17 is_stmt 1 view .LVU5065
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14567              		.loc 1 274 21 view .LVU5066
 14568              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14569              		.loc 1 274 36 is_stmt 0 view .LVU5067
 14570 4eda 48C1EA06 		shr	rdx, 6	# tmp1035,
 14571              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14572              		.loc 1 274 13 view .LVU5068
 14573 4ede 4939D5   		cmp	r13, rdx	# index_word, tmp1035
 14574 4ee1 751D     		jne	.L1300	#,
 271:sieve_extend.c ****                 mask |= markmask(index);
 14575              		.loc 1 271 13 is_stmt 1 view .LVU5069
 272:sieve_extend.c ****                 index += step;
 14576              		.loc 1 272 17 view .LVU5070
 14577              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14578              		.loc 1 272 25 is_stmt 0 view .LVU5071
 14579 4ee3 C4C2F9F7 		shlx	rdi, r12, rax	# tmp1036, tmp875, index
 14579      FC
 14580              	# sieve_extend.c:273:                 index += step;
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14581              		.loc 1 273 23 view .LVU5072
 14582 4ee8 4C01C0   		add	rax, r8	# index, step
 14583              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14584              		.loc 1 274 36 view .LVU5073
 14585 4eeb 4889C6   		mov	rsi, rax	# tmp1037, index
 14586              	# sieve_extend.c:272:                 mask |= markmask(index);
 272:sieve_extend.c ****                 index += step;
 14587              		.loc 1 272 22 view .LVU5074
 14588 4eee 4909FA   		or	r10, rdi	# mask, tmp1036
 14589              	.LVL974:
 273:sieve_extend.c ****             } while (index_word == wordindex(index));
 14590              		.loc 1 273 17 is_stmt 1 view .LVU5075
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14591              		.loc 1 274 21 view .LVU5076
 14592              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14593              		.loc 1 274 36 is_stmt 0 view .LVU5077
GAS LISTING /tmp/cct11Qa0.s 			page 388


 14594 4ef1 48C1EE06 		shr	rsi, 6	# tmp1037,
 14595              	# sieve_extend.c:274:             } while (index_word == wordindex(index));
 274:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14596              		.loc 1 274 13 view .LVU5078
 14597 4ef5 4939F5   		cmp	r13, rsi	# index_word, tmp1037
 14598 4ef8 0F843CFF 		je	.L881	#,
 14598      FFFF
 14599 4efe 6690     		.p2align 4
 14600              		.p2align 3
 14601              	.L1300:
 277:sieve_extend.c ****         }
 14602              		.loc 1 277 13 is_stmt 1 view .LVU5079
 14603              	# sieve_extend.c:277:             bitarray[index_word] |= mask;
 277:sieve_extend.c ****         }
 14604              		.loc 1 277 34 is_stmt 0 view .LVU5080
 14605 4f00 4F0914EE 		or	QWORD PTR [r14+r13*8], r10	# *_534, mask
 277:sieve_extend.c ****         }
 14606              		.loc 1 277 34 view .LVU5081
 14607              	.LBE593:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14608              		.loc 1 267 54 is_stmt 1 view .LVU5082
 14609              	# sieve_extend.c:267:         for (register counter_t index = range_start; index <= range_stop;) {
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14610              		.loc 1 267 9 is_stmt 0 view .LVU5083
 14611 4f04 4939C7   		cmp	r15, rax	# block_stop, index
 14612 4f07 0F8323FF 		jnb	.L882	#,
 14612      FFFF
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14613              		.loc 1 267 9 view .LVU5084
 14614 4f0d E960FBFF 		jmp	.L880	#
 14614      FF
 14615              	.LVL975:
 14616              		.p2align 4,,7
 14617 4f12 660F1F44 		.p2align 3
 14617      0000
 14618              	.L1452:
 267:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14619              		.loc 1 267 9 view .LVU5085
 14620              	.LBE592:
 14621              	.LBE591:
 14622              	.LBE590:
 14623              	.LBE595:
 14624              	.LBE607:
 14625              	.LBB608:
 14626              	.LBB605:
 126:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 14627              		.loc 1 126 8 is_stmt 1 view .LVU5086
 127:sieve_extend.c ****        index += distance;
 14628              		.loc 1 127 8 view .LVU5087
 14629              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 14630              		.loc 1 127 48 is_stmt 0 view .LVU5088
 14631 4f18 4F8B4C2E 		mov	r9, QWORD PTR 8[r14+r13]	# *_603, *_603
 14631      08
 14632 4f1d 49F7D1   		not	r9	# tmp818
 14633              	.LVL976:
 128:sieve_extend.c ****    }
GAS LISTING /tmp/cct11Qa0.s 			page 389


 14634              		.loc 1 128 8 is_stmt 1 view .LVU5089
 14635              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 14636              		.loc 1 127 17 is_stmt 0 view .LVU5090
 14637 4f20 F3490FBC 		tzcnt	rsi, r9	# distance, tmp818
 14637      F1
 14638              	.LVL977:
 14639              	# sieve_extend.c:128:        index += distance;
 128:sieve_extend.c ****    }
 14640              		.loc 1 128 14 view .LVU5091
 14641 4f25 4801F1   		add	rcx, rsi	# index, distance
 14642              	.LVL978:
 125:sieve_extend.c ****        index_word++;
 14643              		.loc 1 125 10 is_stmt 1 view .LVU5092
 131:sieve_extend.c **** }
 14644              		.loc 1 131 4 view .LVU5093
 131:sieve_extend.c **** }
 14645              		.loc 1 131 4 is_stmt 0 view .LVU5094
 14646              	.LBE605:
 14647              	.LBE608:
 840:sieve_extend.c ****     }
 14648              		.loc 1 840 9 is_stmt 1 view .LVU5095
 14649 4f28 E9ACFEFF 		jmp	.L1298	#
 14649      FF
 14650              	.LVL979:
 14651 4f2d 0F1F00   		.p2align 4,,7
 14652              		.p2align 3
 14653              	.L892:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 14654              		.loc 1 843 11 view .LVU5096
 14655 4f30 4C8B5424 		mov	r10, QWORD PTR 88[rsp]	# block_start, %sfp
 14655      58
 14656 4f35 4939C7   		cmp	r15, rax	# block_stop, index
 14657 4f38 0F82E0F7 		jb	.L1432	#,
 14657      FFFF
 14658              	.LVL980:
 14659 4f3e 6690     		.p2align 4
 14660              		.p2align 3
 14661              	.L896:
 844:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14662              		.loc 1 844 9 view .LVU5097
 14663              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 14664              		.loc 1 845 12 is_stmt 0 view .LVU5098
 14665 4f40 4D39D1   		cmp	r9, r10	# _413, block_start
 14666              	# sieve_extend.c:844:         step  = prime * 2 + 1;
 844:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14667              		.loc 1 844 15 view .LVU5099
 14668 4f43 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 14668      01
 14669              	.LVL981:
 845:sieve_extend.c ****         if likely(start <= block_stop)
 14670              		.loc 1 845 9 is_stmt 1 view .LVU5100
 14671              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 14672              		.loc 1 845 12 is_stmt 0 view .LVU5101
 14673 4f48 0F8772F7 		ja	.L905	#,
GAS LISTING /tmp/cct11Qa0.s 			page 390


 14673      FFFF
 845:sieve_extend.c ****         if likely(start <= block_stop)
 14674              		.loc 1 845 47 is_stmt 1 view .LVU5102
 14675              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 14676              		.loc 1 845 67 is_stmt 0 view .LVU5103
 14677 4f4e 4A8D0411 		lea	rax, [rcx+r10]	# _417,
 14678              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 14679              		.loc 1 845 108 view .LVU5104
 14680 4f52 31D2     		xor	edx, edx	# tmp829
 14681              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 14682              		.loc 1 845 75 view .LVU5105
 14683 4f54 4801C1   		add	rcx, rax	# tmp827, _417
 14684              	.LVL982:
 14685              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 14686              		.loc 1 845 108 view .LVU5106
 14687 4f57 48F7F7   		div	rdi	# step
 14688              	.LVL983:
 14689              	# sieve_extend.c:845:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 845:sieve_extend.c ****         if likely(start <= block_stop)
 14690              		.loc 1 845 53 view .LVU5107
 14691 4f5a 4889C8   		mov	rax, rcx	# tmp827, tmp827
 14692 4f5d 4829D0   		sub	rax, rdx	# tmp827, tmp829
 14693              	.LVL984:
 846:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 14694              		.loc 1 846 9 is_stmt 1 view .LVU5108
 14695              	# sieve_extend.c:846:         if likely(start <= block_stop)
 846:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 14696              		.loc 1 846 12 is_stmt 0 view .LVU5109
 14697 4f60 4939C7   		cmp	r15, rax	# block_stop, index
 14698 4f63 0F8267F7 		jb	.L910	#,
 14698      FFFF
 14699              	.LVL985:
 14700              	.L909:
 14701              	.LBB609:
 14702              	.LBB570:
 307:sieve_extend.c ****     }
 14703              		.loc 1 307 9 is_stmt 1 view .LVU5110
 14704              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14705              		.loc 1 307 36 is_stmt 0 view .LVU5111
 14706 4f69 4989C3   		mov	r11, rax	# tmp838, index
 14707              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14708              		.loc 1 307 39 view .LVU5112
 14709 4f6c C442F9F7 		shlx	r13, r12, rax	# tmp841, tmp875, index
 14709      EC
 14710              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14711              		.loc 1 307 36 view .LVU5113
 14712 4f71 49C1EB06 		shr	r11, 6	# tmp838,
 14713              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14714              		.loc 1 306 68 view .LVU5114
GAS LISTING /tmp/cct11Qa0.s 			page 391


 14715 4f75 4801F8   		add	rax, rdi	# index, step
 14716              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14717              		.loc 1 307 36 view .LVU5115
 14718 4f78 4F092CDE 		or	QWORD PTR [r14+r11*8], r13	# *_428, tmp841
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14719              		.loc 1 306 62 is_stmt 1 view .LVU5116
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14720              		.loc 1 306 41 view .LVU5117
 14721              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14722              		.loc 1 306 5 is_stmt 0 view .LVU5118
 14723 4f7c 4939C7   		cmp	r15, rax	# block_stop, index
 14724 4f7f 0F824BF7 		jb	.L910	#,
 14724      FFFF
 307:sieve_extend.c ****     }
 14725              		.loc 1 307 9 is_stmt 1 view .LVU5119
 14726              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14727              		.loc 1 307 36 is_stmt 0 view .LVU5120
 14728 4f85 4989C0   		mov	r8, rax	# tmp956, index
 14729              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14730              		.loc 1 307 39 view .LVU5121
 14731 4f88 C4C2F9F7 		shlx	rcx, r12, rax	# tmp959, tmp875, index
 14731      CC
 14732              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14733              		.loc 1 307 36 view .LVU5122
 14734 4f8d 49C1E806 		shr	r8, 6	# tmp956,
 14735              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14736              		.loc 1 306 68 view .LVU5123
 14737 4f91 4801F8   		add	rax, rdi	# index, step
 14738              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14739              		.loc 1 307 36 view .LVU5124
 14740 4f94 4B090CC6 		or	QWORD PTR [r14+r8*8], rcx	# *_428, tmp959
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14741              		.loc 1 306 62 is_stmt 1 view .LVU5125
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14742              		.loc 1 306 41 view .LVU5126
 14743              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14744              		.loc 1 306 5 is_stmt 0 view .LVU5127
 14745 4f98 4939C7   		cmp	r15, rax	# block_stop, index
 14746 4f9b 0F822FF7 		jb	.L910	#,
 14746      FFFF
 307:sieve_extend.c ****     }
 14747              		.loc 1 307 9 is_stmt 1 view .LVU5128
 14748              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14749              		.loc 1 307 36 is_stmt 0 view .LVU5129
 14750 4fa1 4889C3   		mov	rbx, rax	# tmp961, index
 14751              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14752              		.loc 1 307 39 view .LVU5130
GAS LISTING /tmp/cct11Qa0.s 			page 392


 14753 4fa4 C4C2F9F7 		shlx	rsi, r12, rax	# tmp964, tmp875, index
 14753      F4
 14754              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14755              		.loc 1 307 36 view .LVU5131
 14756 4fa9 48C1EB06 		shr	rbx, 6	# tmp961,
 14757              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14758              		.loc 1 306 68 view .LVU5132
 14759 4fad 4801F8   		add	rax, rdi	# index, step
 14760              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14761              		.loc 1 307 36 view .LVU5133
 14762 4fb0 490934DE 		or	QWORD PTR [r14+rbx*8], rsi	# *_428, tmp964
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14763              		.loc 1 306 62 is_stmt 1 view .LVU5134
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14764              		.loc 1 306 41 view .LVU5135
 14765              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14766              		.loc 1 306 5 is_stmt 0 view .LVU5136
 14767 4fb4 4939C7   		cmp	r15, rax	# block_stop, index
 14768 4fb7 0F8213F7 		jb	.L910	#,
 14768      FFFF
 307:sieve_extend.c ****     }
 14769              		.loc 1 307 9 is_stmt 1 view .LVU5137
 14770              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14771              		.loc 1 307 36 is_stmt 0 view .LVU5138
 14772 4fbd 4889C2   		mov	rdx, rax	# tmp966, index
 14773              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14774              		.loc 1 307 39 view .LVU5139
 14775 4fc0 C442F9F7 		shlx	r11, r12, rax	# tmp969, tmp875, index
 14775      DC
 14776              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14777              		.loc 1 307 36 view .LVU5140
 14778 4fc5 48C1EA06 		shr	rdx, 6	# tmp966,
 14779              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14780              		.loc 1 306 68 view .LVU5141
 14781 4fc9 4801F8   		add	rax, rdi	# index, step
 14782              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14783              		.loc 1 307 36 view .LVU5142
 14784 4fcc 4D091CD6 		or	QWORD PTR [r14+rdx*8], r11	# *_428, tmp969
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14785              		.loc 1 306 62 is_stmt 1 view .LVU5143
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14786              		.loc 1 306 41 view .LVU5144
 14787              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14788              		.loc 1 306 5 is_stmt 0 view .LVU5145
 14789 4fd0 4939C7   		cmp	r15, rax	# block_stop, index
 14790 4fd3 0F82F7F6 		jb	.L910	#,
 14790      FFFF
GAS LISTING /tmp/cct11Qa0.s 			page 393


 307:sieve_extend.c ****     }
 14791              		.loc 1 307 9 is_stmt 1 view .LVU5146
 14792              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14793              		.loc 1 307 36 is_stmt 0 view .LVU5147
 14794 4fd9 4989C5   		mov	r13, rax	# tmp971, index
 14795              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14796              		.loc 1 307 39 view .LVU5148
 14797 4fdc C442F9F7 		shlx	r8, r12, rax	# tmp974, tmp875, index
 14797      C4
 14798              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14799              		.loc 1 307 36 view .LVU5149
 14800 4fe1 49C1ED06 		shr	r13, 6	# tmp971,
 14801              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14802              		.loc 1 306 68 view .LVU5150
 14803 4fe5 4801F8   		add	rax, rdi	# index, step
 14804              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14805              		.loc 1 307 36 view .LVU5151
 14806 4fe8 4F0904EE 		or	QWORD PTR [r14+r13*8], r8	# *_428, tmp974
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14807              		.loc 1 306 62 is_stmt 1 view .LVU5152
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14808              		.loc 1 306 41 view .LVU5153
 14809              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14810              		.loc 1 306 5 is_stmt 0 view .LVU5154
 14811 4fec 4939C7   		cmp	r15, rax	# block_stop, index
 14812 4fef 0F82DBF6 		jb	.L910	#,
 14812      FFFF
 307:sieve_extend.c ****     }
 14813              		.loc 1 307 9 is_stmt 1 view .LVU5155
 14814              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14815              		.loc 1 307 36 is_stmt 0 view .LVU5156
 14816 4ff5 4889C3   		mov	rbx, rax	# tmp976, index
 14817              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14818              		.loc 1 307 39 view .LVU5157
 14819 4ff8 C4C2F9F7 		shlx	rcx, r12, rax	# tmp979, tmp875, index
 14819      CC
 14820              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14821              		.loc 1 307 36 view .LVU5158
 14822 4ffd 48C1EB06 		shr	rbx, 6	# tmp976,
 14823              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14824              		.loc 1 306 68 view .LVU5159
 14825 5001 4801F8   		add	rax, rdi	# index, step
 14826              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14827              		.loc 1 307 36 view .LVU5160
 14828 5004 49090CDE 		or	QWORD PTR [r14+rbx*8], rcx	# *_428, tmp979
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/cct11Qa0.s 			page 394


 14829              		.loc 1 306 62 is_stmt 1 view .LVU5161
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14830              		.loc 1 306 41 view .LVU5162
 14831              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14832              		.loc 1 306 5 is_stmt 0 view .LVU5163
 14833 5008 4939C7   		cmp	r15, rax	# block_stop, index
 14834 500b 0F82BFF6 		jb	.L910	#,
 14834      FFFF
 307:sieve_extend.c ****     }
 14835              		.loc 1 307 9 is_stmt 1 view .LVU5164
 14836              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14837              		.loc 1 307 36 is_stmt 0 view .LVU5165
 14838 5011 4889C6   		mov	rsi, rax	# tmp981, index
 14839              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14840              		.loc 1 307 39 view .LVU5166
 14841 5014 C4C2F9F7 		shlx	rdx, r12, rax	# tmp984, tmp875, index
 14841      D4
 14842              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14843              		.loc 1 307 36 view .LVU5167
 14844 5019 48C1EE06 		shr	rsi, 6	# tmp981,
 14845              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14846              		.loc 1 306 68 view .LVU5168
 14847 501d 4801F8   		add	rax, rdi	# index, step
 14848              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14849              		.loc 1 307 36 view .LVU5169
 14850 5020 490914F6 		or	QWORD PTR [r14+rsi*8], rdx	# *_428, tmp984
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14851              		.loc 1 306 62 is_stmt 1 view .LVU5170
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14852              		.loc 1 306 41 view .LVU5171
 14853              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14854              		.loc 1 306 5 is_stmt 0 view .LVU5172
 14855 5024 4939C7   		cmp	r15, rax	# block_stop, index
 14856 5027 0F82A3F6 		jb	.L910	#,
 14856      FFFF
 307:sieve_extend.c ****     }
 14857              		.loc 1 307 9 is_stmt 1 view .LVU5173
 14858              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14859              		.loc 1 307 36 is_stmt 0 view .LVU5174
 14860 502d 4989C3   		mov	r11, rax	# tmp986, index
 14861              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14862              		.loc 1 307 39 view .LVU5175
 14863 5030 C442F9F7 		shlx	r13, r12, rax	# tmp989, tmp875, index
 14863      EC
 14864              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14865              		.loc 1 307 36 view .LVU5176
 14866 5035 49C1EB06 		shr	r11, 6	# tmp986,
GAS LISTING /tmp/cct11Qa0.s 			page 395


 14867              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14868              		.loc 1 306 68 view .LVU5177
 14869 5039 4801F8   		add	rax, rdi	# index, step
 14870              	# sieve_extend.c:307:         bitarray[wordindex(index)] |= markmask(index);
 307:sieve_extend.c ****     }
 14871              		.loc 1 307 36 view .LVU5178
 14872 503c 4F092CDE 		or	QWORD PTR [r14+r11*8], r13	# *_428, tmp989
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14873              		.loc 1 306 62 is_stmt 1 view .LVU5179
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14874              		.loc 1 306 41 view .LVU5180
 14875              	# sieve_extend.c:306:     for (counter_t index = range_start; index <= range_stop; index += step) {
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14876              		.loc 1 306 5 is_stmt 0 view .LVU5181
 14877 5040 4939C7   		cmp	r15, rax	# block_stop, index
 14878 5043 0F8320FF 		jnb	.L909	#,
 14878      FFFF
 14879 5049 E982F6FF 		jmp	.L910	#
 14879      FF
 14880              	.LVL986:
 14881 504e 6690     		.p2align 4,,7
 14882              		.p2align 3
 14883              	.L1449:
 306:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 14884              		.loc 1 306 5 view .LVU5182
 14885              	.LBE570:
 14886              	.LBE609:
 14887              	.LBB610:
 14888              	.LBB573:
 126:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 14889              		.loc 1 126 8 is_stmt 1 view .LVU5183
 127:sieve_extend.c ****        index += distance;
 14890              		.loc 1 127 8 view .LVU5184
 14891              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 14892              		.loc 1 127 48 is_stmt 0 view .LVU5185
 14893 5050 4F8B4C06 		mov	r9, QWORD PTR 8[r14+r8]	# *_686, *_686
 14893      08
 14894 5055 49F7D1   		not	r9	# tmp843
 14895              	.LVL987:
 128:sieve_extend.c ****    }
 14896              		.loc 1 128 8 is_stmt 1 view .LVU5186
 14897              	# sieve_extend.c:127:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 127:sieve_extend.c ****        index += distance;
 14898              		.loc 1 127 17 is_stmt 0 view .LVU5187
 14899 5058 F3490FBC 		tzcnt	rdx, r9	# distance, tmp843
 14899      D1
 14900              	.LVL988:
 14901              	# sieve_extend.c:128:        index += distance;
 128:sieve_extend.c ****    }
 14902              		.loc 1 128 14 view .LVU5188
 14903 505d 4801D1   		add	rcx, rdx	# index, distance
 14904              	.LVL989:
 125:sieve_extend.c ****        index_word++;
 14905              		.loc 1 125 10 is_stmt 1 view .LVU5189
 131:sieve_extend.c **** }
GAS LISTING /tmp/cct11Qa0.s 			page 396


 14906              		.loc 1 131 4 view .LVU5190
 131:sieve_extend.c **** }
 14907              		.loc 1 131 4 is_stmt 0 view .LVU5191
 14908              	.LBE573:
 14909              	.LBE610:
 849:sieve_extend.c ****     }
 14910              		.loc 1 849 9 is_stmt 1 view .LVU5192
 14911              	# sieve_extend.c:849:         start = prime * prime * 2 + prime * 2;
 849:sieve_extend.c ****     }
 14912              		.loc 1 849 35 is_stmt 0 view .LVU5193
 14913 5060 4C8D4901 		lea	r9, 1[rcx]	# _413,
 14914              	# sieve_extend.c:849:         start = prime * prime * 2 + prime * 2;
 849:sieve_extend.c ****     }
 14915              		.loc 1 849 15 view .LVU5194
 14916 5064 4D89CB   		mov	r11, r9	# tmp848, _413
 14917 5067 4C0FAFD9 		imul	r11, rcx	# tmp848, index
 14918 506b 4B8D041B 		lea	rax, [r11+r11]	# index,
 14919              	.LVL990:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 14920              		.loc 1 843 11 is_stmt 1 view .LVU5195
 14921 506f 4939C7   		cmp	r15, rax	# block_stop, index
 14922 5072 0F83C8FE 		jnb	.L896	#,
 14922      FFFF
 14923 5078 4C8B5424 		mov	r10, QWORD PTR 32[rsp]	# <retval>, %sfp
 14923      20
 14924 507d 498B5208 		mov	rdx, QWORD PTR 8[r10]	# _8, sieve_90->bits
 14925 5081 E9A1F6FF 		jmp	.L871	#
 14925      FF
 14926              	.LVL991:
 14927              	.L1442:
 843:sieve_extend.c ****         step  = prime * 2 + 1;
 14928              		.loc 1 843 11 is_stmt 0 view .LVU5196
 14929              	.LBE612:
 14930              	.LBE620:
 14931              	.LBE624:
 14932              	.LBB625:
 14933              	.LBB517:
 14934              	.LBB510:
 14935              	.LBB500:
 14936              	.LBB469:
 234:sieve_extend.c ****        return;
 14937              		.loc 1 234 8 is_stmt 1 view .LVU5197
 14938              	# sieve_extend.c:234:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 234:sieve_extend.c ****        return;
 14939              		.loc 1 234 67 is_stmt 0 view .LVU5198
 14940 5086 4D21EC   		and	r12, r13	# tmp610, _1222
 14941              	# sieve_extend.c:234:        bitarray[copy_word] |= ((pattern << bitindex(range_start)) & chopmask(
 234:sieve_extend.c ****        return;
 14942              		.loc 1 234 28 view .LVU5199
 14943 5089 4C09E6   		or	rsi, r12	# tmp611, tmp610
 14944 508c 488937   		mov	QWORD PTR [rdi], rsi	# MEM[(uint64_t *)_1215], tmp611
 235:sieve_extend.c ****     }
 14945              		.loc 1 235 8 is_stmt 1 view .LVU5200
 14946 508f E943E5FF 		jmp	.L819	#
 14946      FF
 14947              	.LVL992:
 14948              	.L1440:
GAS LISTING /tmp/cct11Qa0.s 			page 397


 235:sieve_extend.c ****     }
 14949              		.loc 1 235 8 is_stmt 0 view .LVU5201
 14950              	.LBE469:
 14951              	.LBE500:
 14952              	.LBB501:
 14953              	.LBB462:
 768:sieve_extend.c ****         return; // rapid exit for small sizes
 14954              		.loc 1 768 9 is_stmt 1 view .LVU5202
 14955 5094 4C89C1   		mov	rcx, r8	#, _69
 14956 5097 4C89FA   		mov	rdx, r15	#, patternsize_bits
 14957 509a 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, _69
 14957      30
 14958 509f 4C89FE   		mov	rsi, r15	#, patternsize_bits
 14959 50a2 4C89F7   		mov	rdi, r14	#, _95
 14960 50a5 C5F877   		vzeroupper
 14961 50a8 E853AFFF 		call	extendSieve_smallSize	#
 14961      FF
 14962              	.LVL993:
 769:sieve_extend.c ****     }
 14963              		.loc 1 769 9 view .LVU5203
 14964 50ad 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# _69, %sfp
 14964      30
 14965 50b2 4C897C24 		mov	QWORD PTR 64[rsp], r15	# %sfp, patternsize_bits
 14965      40
 14966 50b7 E9DCE4FF 		jmp	.L812	#
 14966      FF
 14967              	.LVL994:
 14968              	.L1446:
 769:sieve_extend.c ****     }
 14969              		.loc 1 769 9 is_stmt 0 view .LVU5204
 14970              	.LBE462:
 14971              	.LBE501:
 14972              	.LBE510:
 14973              	.LBE517:
 14974              	.LBE625:
 14975              	.LBB626:
 14976              	.LBB527:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 14977              		.loc 1 776 37 is_stmt 1 view .LVU5205
 14978 50bc C5F877   		vzeroupper
 14979 50bf E81CCFFF 		call	extendSieve_shiftleft	#
 14979      FF
 14980              	.LVL995:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 14981              		.loc 1 776 37 is_stmt 0 view .LVU5206
 14982 50c4 E925F0FF 		jmp	.L852	#
 14982      FF
 14983              	.LVL996:
 14984              	.L1435:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 14985              		.loc 1 776 37 view .LVU5207
 14986 50c9 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# <retval>, %sfp
 14986      20
 14987              	.LVL997:
 776:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 14988              		.loc 1 776 37 view .LVU5208
 14989              	.LBE527:
GAS LISTING /tmp/cct11Qa0.s 			page 398


 14990              	.LBE626:
 14991              	.LBB627:
 14992              	.LBB518:
 14993              	.LBB511:
 14994              	# sieve_extend.c:883:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 883:sieve_extend.c **** 
 14995              		.loc 1 883 12 view .LVU5209
 14996 50ce 4C89FA   		mov	rdx, r15	# block$pattern_size, patternsize_bits
 14997 50d1 488B7424 		mov	rsi, QWORD PTR 72[rsp]	# block$pattern_start, %sfp
 14997      48
 14998 50d6 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, prime
 14998      30
 14999 50db 4D8B4E08 		mov	r9, QWORD PTR 8[r14]	# prephitmp_1485, sieve_90->bits
 15000 50df 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, prephitmp_1485
 15000      58
 15001              	.LVL998:
 883:sieve_extend.c **** 
 15002              		.loc 1 883 12 view .LVU5210
 15003 50e4 E9CCEFFF 		jmp	.L811	#
 15003      FF
 15004              	.LVL999:
 15005              	.L916:
 15006              	.LBB502:
 15007              	.LBB470:
 15008              	.LBB468:
 15009              	# sieve_extend.c:249:     for (counter_t i=0; i < loop_range; i++) {
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 15010              		.loc 1 249 20 view .LVU5211
 15011 50e9 31D2     		xor	edx, edx	# tmp.483
 15012 50eb E9F1E8FF 		jmp	.L821	#
 15012      FF
 15013              	.LVL1000:
 15014              	.L1433:
 249:sieve_extend.c ****         pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 15015              		.loc 1 249 20 view .LVU5212
 15016              	.LBE468:
 15017              	.LBE470:
 15018              	.LBE502:
 15019              	.LBE511:
 15020              	# sieve_extend.c:868:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 868:sieve_extend.c **** 
 15021              		.loc 1 868 18 view .LVU5213
 15022 50f0 31F6     		xor	esi, esi	# block$pattern_start
 15023 50f2 31D2     		xor	edx, edx	# block$pattern_size
 15024              	# sieve_extend.c:863:     register counter_t prime   = 0;
 863:sieve_extend.c ****     counter_t patternsize_bits = 1;
 15025              		.loc 1 863 24 view .LVU5214
 15026 50f4 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 15026      30000000 
 15026      00
 15027 50fd E976E9FF 		jmp	.L804	#
 15027      FF
 15028              	.LBE518:
 15029              	.LBE627:
 15030              		.cfi_endproc
 15031              	.LFE5343:
 15033 5102 66662E0F 		.p2align 4
GAS LISTING /tmp/cct11Qa0.s 			page 399


 15033      1F840000 
 15033      0000000F 
 15033      1F00
 15035              	tune_benchmark:
 15036              	.LVL1001:
 15037              	.LFB5350:
1026:sieve_extend.c **** 
1027:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 15038              		.loc 1 1027 94 is_stmt 1 view -0
 15039              		.cfi_startproc
 15040              		.loc 1 1027 94 is_stmt 0 view .LVU5216
 15041 5110 4154     		push	r12	#
 15042              		.cfi_def_cfa_offset 16
 15043              		.cfi_offset 12, -16
 15044              	# sieve_extend.c:1028:     counter_t passes = 0;
1028:sieve_extend.c ****     counter_t passes = 0;
 15045              		.loc 1 1028 15 view .LVU5217
 15046 5112 4531E4   		xor	r12d, r12d	# passes
 15047              	# sieve_extend.c:1027: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1027:sieve_extend.c ****     counter_t passes = 0;
 15048              		.loc 1 1027 94 view .LVU5218
 15049 5115 55       		push	rbp	#
 15050              		.cfi_def_cfa_offset 24
 15051              		.cfi_offset 6, -24
 15052 5116 53       		push	rbx	#
 15053              		.cfi_def_cfa_offset 32
 15054              		.cfi_offset 3, -32
 15055 5117 488D6424 		lea	rsp, -48[rsp]	#,
 15055      D0
 15056              		.cfi_def_cfa_offset 80
 15057              	# sieve_extend.c:1027: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1027:sieve_extend.c ****     counter_t passes = 0;
 15058              		.loc 1 1027 94 view .LVU5219
 15059 511c 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 15059      25280000 
 15059      00
 15060 5125 48894424 		mov	QWORD PTR 40[rsp], rax	# D.35368, tmp160
 15060      28
 15061 512a 31C0     		xor	eax, eax	# tmp160
 15062              		.loc 1 1028 5 is_stmt 1 view .LVU5220
 15063              	.LVL1002:
1029:sieve_extend.c ****     double elapsed_time = 0;
 15064              		.loc 1 1029 5 view .LVU5221
1030:sieve_extend.c ****     struct timespec start_time,end_time;
 15065              		.loc 1 1030 5 view .LVU5222
1031:sieve_extend.c ****     struct sieve_state *sieve_instance;
 15066              		.loc 1 1031 5 view .LVU5223
1032:sieve_extend.c **** 
1033:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 15067              		.loc 1 1033 5 view .LVU5224
 15068              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 15069              		.loc 1 1033 44 is_stmt 0 view .LVU5225
 15070 512c 488D04B6 		lea	rax, [rsi+rsi*4]	# tmp113,
 15071 5130 488D1446 		lea	rdx, [rsi+rax*2]	# tmp115,
 15072 5134 488D1CD7 		lea	rbx, [rdi+rdx*8]	# _2,
 15073              	# sieve_extend.c:1036:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1034:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
GAS LISTING /tmp/cct11Qa0.s 			page 400


1035:sieve_extend.c **** 
1036:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15074              		.loc 1 1036 5 view .LVU5226
 15075 5138 BF010000 		mov	edi, 1	#,
 15075      00
 15076              	.LVL1003:
 15077              	# sieve_extend.c:1034:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1034:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 15078              		.loc 1 1034 30 view .LVU5227
 15079 513d 488B7328 		mov	rsi, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 15080              	.LVL1004:
 15081              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1033:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 15082              		.loc 1 1033 29 view .LVU5228
 15083 5141 488B4B20 		mov	rcx, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 15084              	# sieve_extend.c:1034:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1034:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 15085              		.loc 1 1034 30 view .LVU5229
 15086 5145 48893500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rsi	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 15086      000000
 15087              	# sieve_extend.c:1036:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15088              		.loc 1 1036 5 view .LVU5230
 15089 514c 4889E6   		mov	rsi, rsp	# tmp119,
 15090              	# sieve_extend.c:1033:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1033:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 15091              		.loc 1 1033 29 view .LVU5231
 15092 514f 48890D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rcx	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 15092      000000
1034:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 15093              		.loc 1 1034 5 is_stmt 1 view .LVU5232
 15094              		.loc 1 1036 5 view .LVU5233
 15095 5156 E8000000 		call	clock_gettime@PLT	#
 15095      00
 15096              	.LVL1005:
1037:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 15097              		.loc 1 1037 5 view .LVU5234
 15098              		.loc 1 1037 11 view .LVU5235
 15099 515b C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 15100 515f C5F92F63 		vcomisd	xmm4, QWORD PTR 56[rbx]	# elapsed_time, _2->sample_duration
 15100      38
 15101 5164 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _56,
 15101      00000000 
 15102 516c 7674     		jbe	.L1454	#,
 15103 516e E99C0000 		jmp	.L1455	#
 15103      00
 15104              	.LVL1006:
 15105              		.p2align 4,,7
 15106 5173 0F1F4400 		.p2align 3
 15106      00
 15107              	.L1458:
1038:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15108              		.loc 1 1038 9 view .LVU5236
 15109              	# sieve_extend.c:1038:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
 15110              		.loc 1 1038 26 is_stmt 0 view .LVU5237
 15111 5178 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 15112              	# sieve_extend.c:1040:         passes++;
1039:sieve_extend.c ****         delete_sieve(sieve_instance);
GAS LISTING /tmp/cct11Qa0.s 			page 401


1040:sieve_extend.c ****         passes++;
 15113              		.loc 1 1040 15 view .LVU5238
 15114 517c 4983C401 		add	r12, 1	# passes,
 15115              	.LVL1007:
 15116              	# sieve_extend.c:1038:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1038:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15117              		.loc 1 1038 26 view .LVU5239
 15118 5180 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 15119 5183 E8F8E2FF 		call	sieve	#
 15119      FF
 15120              	.LVL1008:
 15121              	.LBB628:
 15122              	.LBB629:
 15123              	# sieve_extend.c:105:     free(sieve->bitarray);
 105:sieve_extend.c ****     free(sieve);
 15124              		.loc 1 105 5 view .LVU5240
 15125 5188 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_35->bitarray
 15126              	.LBE629:
 15127              	.LBE628:
 15128              	# sieve_extend.c:1038:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1038:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15129              		.loc 1 1038 26 view .LVU5241
 15130 518b 4889C5   		mov	rbp, rax	# sieve_instance, tmp151
 15131              	.LVL1009:
1039:sieve_extend.c ****         delete_sieve(sieve_instance);
 15132              		.loc 1 1039 9 is_stmt 1 view .LVU5242
 15133              	.LBB631:
 15134              	.LBI628:
 104:sieve_extend.c ****     free(sieve->bitarray);
 15135              		.loc 1 104 13 view .LVU5243
 15136              	.LBB630:
 105:sieve_extend.c ****     free(sieve);
 15137              		.loc 1 105 5 view .LVU5244
 15138 518e E8000000 		call	free@PLT	#
 15138      00
 15139              	.LVL1010:
 106:sieve_extend.c **** }
 15140              		.loc 1 106 5 view .LVU5245
 15141 5193 4889EF   		mov	rdi, rbp	#, sieve_instance
 15142 5196 E8000000 		call	free@PLT	#
 15142      00
 15143              	.LVL1011:
 106:sieve_extend.c **** }
 15144              		.loc 1 106 5 is_stmt 0 view .LVU5246
 15145              	.LBE630:
 15146              	.LBE631:
 15147              		.loc 1 1040 9 is_stmt 1 view .LVU5247
1041:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15148              		.loc 1 1041 9 view .LVU5248
 15149 519b 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 15149      10
 15150 51a0 BF010000 		mov	edi, 1	#,
 15150      00
 15151 51a5 E8000000 		call	clock_gettime@PLT	#
 15151      00
 15152              	.LVL1012:
1042:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
GAS LISTING /tmp/cct11Qa0.s 			page 402


 15153              		.loc 1 1042 9 view .LVU5249
 15154              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15155              		.loc 1 1042 58 is_stmt 0 view .LVU5250
 15156 51aa C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 15156      442418
 15157              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15158              		.loc 1 1042 64 view .LVU5251
 15159 51b1 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 15159      0C24
 15160              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15161              		.loc 1 1042 104 view .LVU5252
 15162 51b7 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 15162      5C2408
 15163              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15164              		.loc 1 1042 40 view .LVU5253
 15165 51be C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 15165      542410
 15166 51c5 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _58, tmp124,
 15166      05000000 
 15166      00
 15167 51ce C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _59, tmp127,
 15167      1D000000 
 15167      00
 15168              	# sieve_extend.c:1042:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15169              		.loc 1 1042 22 view .LVU5254
 15170 51d7 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _58, _59
 15171              	.LVL1013:
1037:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15172              		.loc 1 1037 11 is_stmt 1 view .LVU5255
 15173 51db C5F92F63 		vcomisd	xmm4, QWORD PTR 56[rbx]	# elapsed_time, _2->sample_duration
 15173      38
 15174 51e0 7706     		ja	.L1469	#,
 15175              	.LVL1014:
 15176              	.L1454:
 15177              	# sieve_extend.c:1037:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1037:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15178              		.loc 1 1037 79 is_stmt 0 discriminator 1 view .LVU5256
 15179 51e2 4C396330 		cmp	QWORD PTR 48[rbx], r12	# _2->sample_max, passes
 15180 51e6 7790     		ja	.L1458	#,
 15181              	.L1469:
1037:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15182              		.loc 1 1037 79 discriminator 1 view .LVU5257
 15183 51e8 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 15183      F4
 15184 51ed 4D85E4   		test	r12, r12	# passes
 15185 51f0 7919     		jns	.L1460	#,
1037:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15186              		.loc 1 1037 79 discriminator 1 view .LVU5258
 15187 51f2 4C89E7   		mov	rdi, r12	# tmp135, passes
 15188 51f5 4D89E0   		mov	r8, r12	# tmp136, passes
 15189 51f8 48D1EF   		shr	rdi	# tmp135
 15190 51fb 4183E001 		and	r8d, 1	# tmp136,
 15191 51ff 4C09C7   		or	rdi, r8	# tmp148, tmp136
 15192 5202 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rdi	# tmp134, tmp148
 15192      EF
 15193 5207 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 15194              	.L1460:
GAS LISTING /tmp/cct11Qa0.s 			page 403


1037:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 15195              		.loc 1 1037 79 discriminator 1 view .LVU5259
 15196 520b C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _56, tmp133, elapsed_time
 15197              	.LVL1015:
 15198              	.L1455:
1043:sieve_extend.c ****     }
1044:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 15199              		.loc 1 1044 5 is_stmt 1 view .LVU5260
 15200              	# sieve_extend.c:1044:     tuning_result[tuning_result_index].passes = passes;
 15201              		.loc 1 1044 47 is_stmt 0 view .LVU5261
 15202 520f 4C896340 		mov	QWORD PTR 64[rbx], r12	# _2->passes, passes
1045:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 15203              		.loc 1 1045 5 is_stmt 1 view .LVU5262
 15204              	# sieve_extend.c:1045:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 15205              		.loc 1 1045 53 is_stmt 0 view .LVU5263
 15206 5213 C5FB1163 		vmovsd	QWORD PTR 72[rbx], xmm4	# _2->elapsed_time, elapsed_time
 15206      48
1046:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 15207              		.loc 1 1046 5 is_stmt 1 view .LVU5264
 15208              	# sieve_extend.c:1046:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 15209              		.loc 1 1046 44 is_stmt 0 view .LVU5265
 15210 5218 C5FB117B 		vmovsd	QWORD PTR 80[rbx], xmm7	# _2->avg, _56
 15210      50
 15211              	# sieve_extend.c:1047: }
1047:sieve_extend.c **** }
 15212              		.loc 1 1047 1 view .LVU5266
 15213 521d 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.35368
 15213      28
 15214 5222 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 15214      25280000 
 15214      00
 15215 522b 750A     		jne	.L1470	#,
 15216 522d 488D6424 		lea	rsp, 48[rsp]	#,
 15216      30
 15217              		.cfi_remember_state
 15218              		.cfi_def_cfa_offset 32
 15219 5232 5B       		pop	rbx	#
 15220              		.cfi_def_cfa_offset 24
 15221 5233 5D       		pop	rbp	#
 15222              		.cfi_def_cfa_offset 16
 15223 5234 415C     		pop	r12	#
 15224              		.cfi_def_cfa_offset 8
 15225 5236 C3       		ret	
 15226              	.L1470:
 15227              		.cfi_restore_state
 15228 5237 E8000000 		call	__stack_chk_fail@PLT	#
 15228      00
 15229              	.LVL1016:
 15230              		.cfi_endproc
 15231              	.LFE5350:
 15233 523c 0F1F4000 		.p2align 4
 15234              		.globl	shiftvec
 15236              	shiftvec:
 15237              	.LVL1017:
 15238              	.LFB5334:
 488:sieve_extend.c ****     int i = 0;
 15239              		.loc 1 488 1 is_stmt 1 view -0
GAS LISTING /tmp/cct11Qa0.s 			page 404


 15240              		.cfi_startproc
 488:sieve_extend.c ****     int i = 0;
 15241              		.loc 1 488 1 is_stmt 0 view .LVU5268
 15242 5240 F30F1EFA 		endbr64	
 489:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 15243              		.loc 1 489 5 is_stmt 1 view .LVU5269
 15244              	.LVL1018:
 491:sieve_extend.c ****     {
 15245              		.loc 1 491 5 view .LVU5270
 491:sieve_extend.c ****     {
 15246              		.loc 1 491 12 view .LVU5271
 15247              	# sieve_extend.c:491:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 491:sieve_extend.c ****     {
 15248              		.loc 1 491 5 is_stmt 0 view .LVU5272
 15249 5244 83FA04   		cmp	edx, 4	# size,
 15250 5247 0F8E9D03 		jle	.L1516	#,
 15250      0000
 15251 524d 41BB4000 		mov	r11d, 64	# tmp130,
 15251      0000
 15252 5253 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 15253 5257 4489D8   		mov	eax, r11d	# _4, tmp130
 15254 525a C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 15255 525e 29C8     		sub	eax, ecx	# _4, shift
 15256              	.LBB632:
 15257              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15258              		.loc 1 494 25 view .LVU5273
 15259 5260 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_114, off
 15259      1655
 15260              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15261              		.loc 1 494 34 view .LVU5274
 15262 5266 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.670_114, offset: 0B]
 15263 526a C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 15263      C0
 15264 526f 41C1E802 		shr	r8d, 2	# _25,
 15265 5273 41B90100 		mov	r9d, 1	# ivtmp.667,
 15265      0000
 15266              	.LBE632:
 15267              	.LBB633:
 15268              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15269              		.loc 1 496 34 view .LVU5275
 15270 5279 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.657, vect__102.656, _4
 15271              	.LBE633:
 15272              	.LBB634:
 15273              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15274              		.loc 1 494 34 view .LVU5276
 15275 527d C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.661, tmp269, shift
 15276 5281 458D5001 		lea	r10d, 1[r8]	# tmp164,
 15277 5285 4589C3   		mov	r11d, r8d	# tmp169, _25
 15278              	.LBE634:
 15279              	.LBB635:
 15280              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15281              		.loc 1 496 22 view .LVU5277
GAS LISTING /tmp/cct11Qa0.s 			page 405


 15282 5288 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.662, vect__57.657, vect__104.661
 15283 528c 4183E307 		and	r11d, 7	# tmp169,
 15284              	.LVL1019:
 496:sieve_extend.c ****     }
 15285              		.loc 1 496 22 view .LVU5278
 15286              	.LBE635:
 15287              	.LBB636:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15288              		.loc 1 493 25 is_stmt 1 view .LVU5279
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15289              		.loc 1 494 13 view .LVU5280
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15290              		.loc 1 493 32 view .LVU5281
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15291              		.loc 1 493 25 view .LVU5282
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15292              		.loc 1 494 13 view .LVU5283
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15293              		.loc 1 493 32 view .LVU5284
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15294              		.loc 1 493 25 view .LVU5285
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15295              		.loc 1 494 13 view .LVU5286
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15296              		.loc 1 493 32 view .LVU5287
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15297              		.loc 1 493 25 view .LVU5288
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15298              		.loc 1 494 13 view .LVU5289
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15299              		.loc 1 493 32 view .LVU5290
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15300              		.loc 1 493 25 view .LVU5291
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15301              		.loc 1 493 25 is_stmt 0 view .LVU5292
 15302              	.LBE636:
 15303              	.LBB637:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15304              		.loc 1 495 25 is_stmt 1 view .LVU5293
 496:sieve_extend.c ****     }
 15305              		.loc 1 496 13 view .LVU5294
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15306              		.loc 1 495 32 view .LVU5295
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15307              		.loc 1 495 25 view .LVU5296
 496:sieve_extend.c ****     }
 15308              		.loc 1 496 13 view .LVU5297
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15309              		.loc 1 495 32 view .LVU5298
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15310              		.loc 1 495 25 view .LVU5299
 496:sieve_extend.c ****     }
 15311              		.loc 1 496 13 view .LVU5300
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15312              		.loc 1 495 32 view .LVU5301
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15313              		.loc 1 495 25 view .LVU5302
GAS LISTING /tmp/cct11Qa0.s 			page 406


 496:sieve_extend.c ****     }
 15314              		.loc 1 496 13 view .LVU5303
 15315 5290 4183FA01 		cmp	r10d, 1	# tmp164,
 15316 5294 B8200000 		mov	eax, 32	# ivtmp.670,
 15316      00
 15317              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15318              		.loc 1 496 22 is_stmt 0 view .LVU5304
 15319 5299 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], vect__58
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15320              		.loc 1 495 32 is_stmt 1 view .LVU5305
 15321              	.LVL1020:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15322              		.loc 1 495 25 view .LVU5306
 15323              	.LBE637:
 491:sieve_extend.c ****     {
 15324              		.loc 1 491 24 view .LVU5307
 491:sieve_extend.c ****     {
 15325              		.loc 1 491 12 view .LVU5308
 15326 529d 0F866002 		jbe	.L1514	#,
 15326      0000
 15327 52a3 4585DB   		test	r11d, r11d	# tmp169
 15328 52a6 0F841E01 		je	.L1474	#,
 15328      0000
 15329 52ac 4183FB01 		cmp	r11d, 1	# tmp169,
 15330 52b0 0F84E500 		je	.L1501	#,
 15330      0000
 15331 52b6 4183FB02 		cmp	r11d, 2	# tmp169,
 15332 52ba 0F84B600 		je	.L1502	#,
 15332      0000
 15333 52c0 4183FB03 		cmp	r11d, 3	# tmp169,
 15334 52c4 0F848700 		je	.L1503	#,
 15334      0000
 15335 52ca 4183FB04 		cmp	r11d, 4	# tmp169,
 15336 52ce 745B     		je	.L1504	#,
 15337 52d0 4183FB05 		cmp	r11d, 5	# tmp169,
 15338 52d4 7430     		je	.L1505	#,
 15339 52d6 4183FB06 		cmp	r11d, 6	# tmp169,
 15340 52da 0F85DC02 		jne	.L1517	#,
 15340      0000
 15341              	.L1506:
 15342              	.LVL1021:
 15343              	.LBB638:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15344              		.loc 1 493 25 view .LVU5309
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15345              		.loc 1 494 13 view .LVU5310
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15346              		.loc 1 493 32 view .LVU5311
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15347              		.loc 1 493 25 view .LVU5312
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15348              		.loc 1 494 13 view .LVU5313
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15349              		.loc 1 493 32 view .LVU5314
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15350              		.loc 1 493 25 view .LVU5315
GAS LISTING /tmp/cct11Qa0.s 			page 407


 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15351              		.loc 1 494 13 view .LVU5316
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15352              		.loc 1 493 32 view .LVU5317
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15353              		.loc 1 493 25 view .LVU5318
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15354              		.loc 1 494 13 view .LVU5319
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15355              		.loc 1 493 32 view .LVU5320
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15356              		.loc 1 493 25 view .LVU5321
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15357              		.loc 1 493 25 is_stmt 0 view .LVU5322
 15358              	.LBE638:
 15359              	.LBB639:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15360              		.loc 1 495 25 is_stmt 1 view .LVU5323
 496:sieve_extend.c ****     }
 15361              		.loc 1 496 13 view .LVU5324
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15362              		.loc 1 495 32 view .LVU5325
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15363              		.loc 1 495 25 view .LVU5326
 496:sieve_extend.c ****     }
 15364              		.loc 1 496 13 view .LVU5327
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15365              		.loc 1 495 32 view .LVU5328
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15366              		.loc 1 495 25 view .LVU5329
 496:sieve_extend.c ****     }
 15367              		.loc 1 496 13 view .LVU5330
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15368              		.loc 1 495 32 view .LVU5331
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15369              		.loc 1 495 25 view .LVU5332
 496:sieve_extend.c ****     }
 15370              		.loc 1 496 13 view .LVU5333
 15371              	.LBE639:
 15372              	.LBB640:
 15373              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15374              		.loc 1 494 25 is_stmt 0 view .LVU5334
 15375 52e0 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_114
 15375      240655
 15376 52e7 4183C101 		add	r9d, 1	# ivtmp.667,
 15377              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15378              		.loc 1 494 34 view .LVU5335
 15379 52eb C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.670_114, offset: 
 15379      06
 15380              	.LBE640:
 15381              	.LBB641:
 15382              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15383              		.loc 1 496 34 view .LVU5336
 15384 52f0 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.657, vect__102.656, _4
GAS LISTING /tmp/cct11Qa0.s 			page 408


 15385              	.LBE641:
 15386              	.LBB642:
 15387              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15388              		.loc 1 494 34 view .LVU5337
 15389 52f4 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.661, tmp279, shift
 15390              	.LBE642:
 15391              	.LBB643:
 15392              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15393              		.loc 1 496 22 view .LVU5338
 15394 52f8 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.662, vect__57.657, vect__104.661
 15394      D7
 15395 52fd C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], vect
 15395      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15396              		.loc 1 495 32 is_stmt 1 view .LVU5339
 15397              	.LVL1022:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15398              		.loc 1 495 25 view .LVU5340
 15399              	.LBE643:
 491:sieve_extend.c ****     {
 15400              		.loc 1 491 24 view .LVU5341
 491:sieve_extend.c ****     {
 15401              		.loc 1 491 12 view .LVU5342
 15402 5302 4883C020 		add	rax, 32	# ivtmp.670,
 15403              	.L1505:
 15404              	.LVL1023:
 15405              	.LBB644:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15406              		.loc 1 493 25 view .LVU5343
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15407              		.loc 1 494 13 view .LVU5344
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15408              		.loc 1 493 32 view .LVU5345
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15409              		.loc 1 493 25 view .LVU5346
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15410              		.loc 1 494 13 view .LVU5347
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15411              		.loc 1 493 32 view .LVU5348
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15412              		.loc 1 493 25 view .LVU5349
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15413              		.loc 1 494 13 view .LVU5350
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15414              		.loc 1 493 32 view .LVU5351
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15415              		.loc 1 493 25 view .LVU5352
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15416              		.loc 1 494 13 view .LVU5353
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15417              		.loc 1 493 32 view .LVU5354
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15418              		.loc 1 493 25 view .LVU5355
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15419              		.loc 1 493 25 is_stmt 0 view .LVU5356
GAS LISTING /tmp/cct11Qa0.s 			page 409


 15420              	.LBE644:
 15421              	.LBB645:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15422              		.loc 1 495 25 is_stmt 1 view .LVU5357
 496:sieve_extend.c ****     }
 15423              		.loc 1 496 13 view .LVU5358
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15424              		.loc 1 495 32 view .LVU5359
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15425              		.loc 1 495 25 view .LVU5360
 496:sieve_extend.c ****     }
 15426              		.loc 1 496 13 view .LVU5361
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15427              		.loc 1 495 32 view .LVU5362
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15428              		.loc 1 495 25 view .LVU5363
 496:sieve_extend.c ****     }
 15429              		.loc 1 496 13 view .LVU5364
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15430              		.loc 1 495 32 view .LVU5365
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15431              		.loc 1 495 25 view .LVU5366
 496:sieve_extend.c ****     }
 15432              		.loc 1 496 13 view .LVU5367
 15433              	.LBE645:
 15434              	.LBB646:
 15435              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15436              		.loc 1 494 25 is_stmt 0 view .LVU5368
 15437 5306 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_114,
 15437      2C0655
 15438 530d 4183C101 		add	r9d, 1	# ivtmp.667,
 15439              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15440              		.loc 1 494 34 view .LVU5369
 15441 5311 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.670_114, offset: 0
 15441      06
 15442              	.LBE646:
 15443              	.LBB647:
 15444              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15445              		.loc 1 496 34 view .LVU5370
 15446 5316 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.657, vect__102.656, _4
 15447              	.LBE647:
 15448              	.LBB648:
 15449              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15450              		.loc 1 494 34 view .LVU5371
 15451 531a C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.661, tmp280, shift
 15452              	.LBE648:
 15453              	.LBB649:
 15454              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15455              		.loc 1 496 22 view .LVU5372
 15456 531e C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.662, vect__57.657, vect__104.661
 15457 5322 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], vect
 15457      07
GAS LISTING /tmp/cct11Qa0.s 			page 410


 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15458              		.loc 1 495 32 is_stmt 1 view .LVU5373
 15459              	.LVL1024:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15460              		.loc 1 495 25 view .LVU5374
 15461              	.LBE649:
 491:sieve_extend.c ****     {
 15462              		.loc 1 491 24 view .LVU5375
 491:sieve_extend.c ****     {
 15463              		.loc 1 491 12 view .LVU5376
 15464 5327 4883C020 		add	rax, 32	# ivtmp.670,
 15465              	.L1504:
 15466              	.LVL1025:
 15467              	.LBB650:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15468              		.loc 1 493 25 view .LVU5377
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15469              		.loc 1 494 13 view .LVU5378
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15470              		.loc 1 493 32 view .LVU5379
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15471              		.loc 1 493 25 view .LVU5380
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15472              		.loc 1 494 13 view .LVU5381
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15473              		.loc 1 493 32 view .LVU5382
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15474              		.loc 1 493 25 view .LVU5383
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15475              		.loc 1 494 13 view .LVU5384
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15476              		.loc 1 493 32 view .LVU5385
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15477              		.loc 1 493 25 view .LVU5386
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15478              		.loc 1 494 13 view .LVU5387
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15479              		.loc 1 493 32 view .LVU5388
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15480              		.loc 1 493 25 view .LVU5389
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15481              		.loc 1 493 25 is_stmt 0 view .LVU5390
 15482              	.LBE650:
 15483              	.LBB651:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15484              		.loc 1 495 25 is_stmt 1 view .LVU5391
 496:sieve_extend.c ****     }
 15485              		.loc 1 496 13 view .LVU5392
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15486              		.loc 1 495 32 view .LVU5393
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15487              		.loc 1 495 25 view .LVU5394
 496:sieve_extend.c ****     }
 15488              		.loc 1 496 13 view .LVU5395
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15489              		.loc 1 495 32 view .LVU5396
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cct11Qa0.s 			page 411


 15490              		.loc 1 495 25 view .LVU5397
 496:sieve_extend.c ****     }
 15491              		.loc 1 496 13 view .LVU5398
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15492              		.loc 1 495 32 view .LVU5399
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15493              		.loc 1 495 25 view .LVU5400
 496:sieve_extend.c ****     }
 15494              		.loc 1 496 13 view .LVU5401
 15495              	.LBE651:
 15496              	.LBB652:
 15497              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15498              		.loc 1 494 25 is_stmt 0 view .LVU5402
 15499 532b C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_114,
 15499      040655
 15500 5332 4183C101 		add	r9d, 1	# ivtmp.667,
 15501              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15502              		.loc 1 494 34 view .LVU5403
 15503 5336 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.670_114, offset: 
 15503      06
 15504              	.LBE652:
 15505              	.LBB653:
 15506              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15507              		.loc 1 496 34 view .LVU5404
 15508 533b C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.657, vect__102.656, _4
 15509              	.LBE653:
 15510              	.LBB654:
 15511              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15512              		.loc 1 494 34 view .LVU5405
 15513 533f C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.661, tmp281, shift
 15514              	.LBE654:
 15515              	.LBB655:
 15516              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15517              		.loc 1 496 22 view .LVU5406
 15518 5343 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.662, vect__57.657, vect__104.661
 15518      E3
 15519 5348 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], vec
 15519      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15520              		.loc 1 495 32 is_stmt 1 view .LVU5407
 15521              	.LVL1026:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15522              		.loc 1 495 25 view .LVU5408
 15523              	.LBE655:
 491:sieve_extend.c ****     {
 15524              		.loc 1 491 24 view .LVU5409
 491:sieve_extend.c ****     {
 15525              		.loc 1 491 12 view .LVU5410
 15526 534d 4883C020 		add	rax, 32	# ivtmp.670,
 15527              	.L1503:
 15528              	.LVL1027:
 15529              	.LBB656:
GAS LISTING /tmp/cct11Qa0.s 			page 412


 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15530              		.loc 1 493 25 view .LVU5411
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15531              		.loc 1 494 13 view .LVU5412
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15532              		.loc 1 493 32 view .LVU5413
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15533              		.loc 1 493 25 view .LVU5414
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15534              		.loc 1 494 13 view .LVU5415
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15535              		.loc 1 493 32 view .LVU5416
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15536              		.loc 1 493 25 view .LVU5417
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15537              		.loc 1 494 13 view .LVU5418
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15538              		.loc 1 493 32 view .LVU5419
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15539              		.loc 1 493 25 view .LVU5420
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15540              		.loc 1 494 13 view .LVU5421
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15541              		.loc 1 493 32 view .LVU5422
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15542              		.loc 1 493 25 view .LVU5423
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15543              		.loc 1 493 25 is_stmt 0 view .LVU5424
 15544              	.LBE656:
 15545              	.LBB657:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15546              		.loc 1 495 25 is_stmt 1 view .LVU5425
 496:sieve_extend.c ****     }
 15547              		.loc 1 496 13 view .LVU5426
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15548              		.loc 1 495 32 view .LVU5427
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15549              		.loc 1 495 25 view .LVU5428
 496:sieve_extend.c ****     }
 15550              		.loc 1 496 13 view .LVU5429
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15551              		.loc 1 495 32 view .LVU5430
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15552              		.loc 1 495 25 view .LVU5431
 496:sieve_extend.c ****     }
 15553              		.loc 1 496 13 view .LVU5432
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15554              		.loc 1 495 32 view .LVU5433
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15555              		.loc 1 495 25 view .LVU5434
 496:sieve_extend.c ****     }
 15556              		.loc 1 496 13 view .LVU5435
 15557              	.LBE657:
 15558              	.LBB658:
 15559              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15560              		.loc 1 494 25 is_stmt 0 view .LVU5436
GAS LISTING /tmp/cct11Qa0.s 			page 413


 15561 5351 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_114
 15561      2C0655
 15562 5358 4183C101 		add	r9d, 1	# ivtmp.667,
 15563              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15564              		.loc 1 494 34 view .LVU5437
 15565 535c C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.670_114, offset: 
 15565      06
 15566              	.LBE658:
 15567              	.LBB659:
 15568              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15569              		.loc 1 496 34 view .LVU5438
 15570 5361 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.657, vect__102.656, _4
 15571              	.LBE659:
 15572              	.LBB660:
 15573              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15574              		.loc 1 494 34 view .LVU5439
 15575 5365 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.661, tmp282, shift
 15576              	.LBE660:
 15577              	.LBB661:
 15578              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15579              		.loc 1 496 22 view .LVU5440
 15580 5369 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.662, vect__57.657, vect__104.661
 15581 536d C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], vect
 15581      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15582              		.loc 1 495 32 is_stmt 1 view .LVU5441
 15583              	.LVL1028:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15584              		.loc 1 495 25 view .LVU5442
 15585              	.LBE661:
 491:sieve_extend.c ****     {
 15586              		.loc 1 491 24 view .LVU5443
 491:sieve_extend.c ****     {
 15587              		.loc 1 491 12 view .LVU5444
 15588 5372 4883C020 		add	rax, 32	# ivtmp.670,
 15589              	.L1502:
 15590              	.LVL1029:
 15591              	.LBB662:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15592              		.loc 1 493 25 view .LVU5445
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15593              		.loc 1 494 13 view .LVU5446
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15594              		.loc 1 493 32 view .LVU5447
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15595              		.loc 1 493 25 view .LVU5448
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15596              		.loc 1 494 13 view .LVU5449
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15597              		.loc 1 493 32 view .LVU5450
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15598              		.loc 1 493 25 view .LVU5451
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/cct11Qa0.s 			page 414


 15599              		.loc 1 494 13 view .LVU5452
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15600              		.loc 1 493 32 view .LVU5453
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15601              		.loc 1 493 25 view .LVU5454
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15602              		.loc 1 494 13 view .LVU5455
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15603              		.loc 1 493 32 view .LVU5456
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15604              		.loc 1 493 25 view .LVU5457
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15605              		.loc 1 493 25 is_stmt 0 view .LVU5458
 15606              	.LBE662:
 15607              	.LBB663:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15608              		.loc 1 495 25 is_stmt 1 view .LVU5459
 496:sieve_extend.c ****     }
 15609              		.loc 1 496 13 view .LVU5460
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15610              		.loc 1 495 32 view .LVU5461
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15611              		.loc 1 495 25 view .LVU5462
 496:sieve_extend.c ****     }
 15612              		.loc 1 496 13 view .LVU5463
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15613              		.loc 1 495 32 view .LVU5464
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15614              		.loc 1 495 25 view .LVU5465
 496:sieve_extend.c ****     }
 15615              		.loc 1 496 13 view .LVU5466
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15616              		.loc 1 495 32 view .LVU5467
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15617              		.loc 1 495 25 view .LVU5468
 496:sieve_extend.c ****     }
 15618              		.loc 1 496 13 view .LVU5469
 15619              	.LBE663:
 15620              	.LBB664:
 15621              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15622              		.loc 1 494 25 is_stmt 0 view .LVU5470
 15623 5376 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_114,
 15623      240655
 15624 537d 4183C101 		add	r9d, 1	# ivtmp.667,
 15625              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15626              		.loc 1 494 34 view .LVU5471
 15627 5381 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.670_114, offset: 0
 15627      06
 15628              	.LBE664:
 15629              	.LBB665:
 15630              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15631              		.loc 1 496 34 view .LVU5472
 15632 5386 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.657, vect__102.656, _4
 15633              	.LBE665:
GAS LISTING /tmp/cct11Qa0.s 			page 415


 15634              	.LBB666:
 15635              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15636              		.loc 1 494 34 view .LVU5473
 15637 538a C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.661, tmp283, shift
 15638              	.LBE666:
 15639              	.LBB667:
 15640              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15641              		.loc 1 496 22 view .LVU5474
 15642 538e C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.662, vect__57.657, vect__104.661
 15643 5392 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], vect
 15643      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15644              		.loc 1 495 32 is_stmt 1 view .LVU5475
 15645              	.LVL1030:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15646              		.loc 1 495 25 view .LVU5476
 15647              	.LBE667:
 491:sieve_extend.c ****     {
 15648              		.loc 1 491 24 view .LVU5477
 491:sieve_extend.c ****     {
 15649              		.loc 1 491 12 view .LVU5478
 15650 5397 4883C020 		add	rax, 32	# ivtmp.670,
 15651              	.L1501:
 15652              	.LVL1031:
 15653              	.LBB668:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15654              		.loc 1 493 25 view .LVU5479
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15655              		.loc 1 494 13 view .LVU5480
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15656              		.loc 1 493 32 view .LVU5481
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15657              		.loc 1 493 25 view .LVU5482
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15658              		.loc 1 494 13 view .LVU5483
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15659              		.loc 1 493 32 view .LVU5484
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15660              		.loc 1 493 25 view .LVU5485
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15661              		.loc 1 494 13 view .LVU5486
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15662              		.loc 1 493 32 view .LVU5487
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15663              		.loc 1 493 25 view .LVU5488
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15664              		.loc 1 494 13 view .LVU5489
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15665              		.loc 1 493 32 view .LVU5490
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15666              		.loc 1 493 25 view .LVU5491
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15667              		.loc 1 493 25 is_stmt 0 view .LVU5492
 15668              	.LBE668:
 15669              	.LBB669:
GAS LISTING /tmp/cct11Qa0.s 			page 416


 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15670              		.loc 1 495 25 is_stmt 1 view .LVU5493
 496:sieve_extend.c ****     }
 15671              		.loc 1 496 13 view .LVU5494
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15672              		.loc 1 495 32 view .LVU5495
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15673              		.loc 1 495 25 view .LVU5496
 496:sieve_extend.c ****     }
 15674              		.loc 1 496 13 view .LVU5497
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15675              		.loc 1 495 32 view .LVU5498
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15676              		.loc 1 495 25 view .LVU5499
 496:sieve_extend.c ****     }
 15677              		.loc 1 496 13 view .LVU5500
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15678              		.loc 1 495 32 view .LVU5501
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15679              		.loc 1 495 25 view .LVU5502
 496:sieve_extend.c ****     }
 15680              		.loc 1 496 13 view .LVU5503
 15681              	.LBE669:
 15682              	.LBB670:
 15683              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15684              		.loc 1 494 25 is_stmt 0 view .LVU5504
 15685 539b C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_114,
 15685      0C0655
 15686 53a2 4183C101 		add	r9d, 1	# ivtmp.667,
 15687              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15688              		.loc 1 494 34 view .LVU5505
 15689 53a6 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.670_114, offset: 
 15689      06
 15690              	.LBE670:
 15691              	.LBB671:
 15692              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15693              		.loc 1 496 34 view .LVU5506
 15694 53ab C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.657, vect__102.656, _4
 15695              	.LBE671:
 15696              	.LBB672:
 15697              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15698              		.loc 1 494 34 view .LVU5507
 15699 53af C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.661, tmp284, shift
 15700              	.LBE672:
 15701              	.LBB673:
 15702              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15703              		.loc 1 496 22 view .LVU5508
 15704 53b3 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.662, vect__57.657, vect__104.661
 15704      EC
 15705 53b8 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], vec
 15705      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cct11Qa0.s 			page 417


 15706              		.loc 1 495 32 is_stmt 1 view .LVU5509
 15707              	.LVL1032:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15708              		.loc 1 495 25 view .LVU5510
 15709              	.LBE673:
 491:sieve_extend.c ****     {
 15710              		.loc 1 491 24 view .LVU5511
 491:sieve_extend.c ****     {
 15711              		.loc 1 491 12 view .LVU5512
 15712 53bd 4883C020 		add	rax, 32	# ivtmp.670,
 15713 53c1 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.667
 15714 53c4 0F863901 		jbe	.L1514	#,
 15714      0000
 15715              	.L1474:
 15716              	.LVL1033:
 15717              	.LBB674:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15718              		.loc 1 493 25 view .LVU5513
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15719              		.loc 1 494 13 view .LVU5514
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15720              		.loc 1 493 32 view .LVU5515
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15721              		.loc 1 493 25 view .LVU5516
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15722              		.loc 1 494 13 view .LVU5517
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15723              		.loc 1 493 32 view .LVU5518
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15724              		.loc 1 493 25 view .LVU5519
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15725              		.loc 1 494 13 view .LVU5520
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15726              		.loc 1 493 32 view .LVU5521
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15727              		.loc 1 493 25 view .LVU5522
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15728              		.loc 1 494 13 view .LVU5523
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15729              		.loc 1 493 32 view .LVU5524
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15730              		.loc 1 493 25 view .LVU5525
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15731              		.loc 1 493 25 is_stmt 0 view .LVU5526
 15732              	.LBE674:
 15733              	.LBB675:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15734              		.loc 1 495 25 is_stmt 1 view .LVU5527
 496:sieve_extend.c ****     }
 15735              		.loc 1 496 13 view .LVU5528
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15736              		.loc 1 495 32 view .LVU5529
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15737              		.loc 1 495 25 view .LVU5530
 496:sieve_extend.c ****     }
 15738              		.loc 1 496 13 view .LVU5531
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cct11Qa0.s 			page 418


 15739              		.loc 1 495 32 view .LVU5532
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15740              		.loc 1 495 25 view .LVU5533
 496:sieve_extend.c ****     }
 15741              		.loc 1 496 13 view .LVU5534
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15742              		.loc 1 495 32 view .LVU5535
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15743              		.loc 1 495 25 view .LVU5536
 496:sieve_extend.c ****     }
 15744              		.loc 1 496 13 view .LVU5537
 15745              	.LBE675:
 15746              	.LBB676:
 15747              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15748              		.loc 1 494 25 is_stmt 0 view .LVU5538
 15749 53ca C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_114
 15749      340655
 15750 53d1 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_11
 15750      74062055 
 15751              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15752              		.loc 1 494 34 view .LVU5539
 15753 53d9 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.670_114, offset: 0
 15753      06
 15754              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15755              		.loc 1 494 25 view .LVU5540
 15756 53de C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_1
 15756      54064055 
 15757              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15758              		.loc 1 494 34 view .LVU5541
 15759 53e6 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.670_114, offset:
 15759      0620
 15760 53ec 4183C108 		add	r9d, 8	# ivtmp.667,
 15761              	.LBE676:
 15762              	.LBB677:
 15763              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15764              		.loc 1 496 34 view .LVU5542
 15765 53f0 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.657, vect__102.656, _4
 15766 53f4 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.657, vect__102.656, _4
 15767              	.LBE677:
 15768              	.LBB678:
 15769              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15770              		.loc 1 494 34 view .LVU5543
 15771 53f8 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.661, tmp270, shift
 15772 53fc C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.661, tmp271, shift
 15773 5400 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.670_114, offset
 15773      0640
 15774              	.LBE678:
 15775              	.LBB679:
 15776              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15777              		.loc 1 496 22 view .LVU5544
GAS LISTING /tmp/cct11Qa0.s 			page 419


 15778 5406 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.662, vect__57.657, vect__104.661
 15779              	.LBE679:
 15780              	.LBB680:
 15781              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15782              		.loc 1 494 34 view .LVU5545
 15783 540a C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.670_114, offset
 15783      06800000 
 15783      00
 15784              	.LBE680:
 15785              	.LBB681:
 15786              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15787              		.loc 1 496 22 view .LVU5546
 15788 5413 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.662, vect__57.657, vect__104.661
 15788      C8
 15789              	.LBE681:
 15790              	.LBB682:
 15791              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15792              		.loc 1 494 25 view .LVU5547
 15793 5418 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_1
 15793      7C066055 
 15794 5420 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_1
 15794      BC068000 
 15794      000055
 15795              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15796              		.loc 1 494 34 view .LVU5548
 15797 542b C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.670_114, offset:
 15797      0660
 15798              	.LBE682:
 15799              	.LBB683:
 15800              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15801              		.loc 1 496 34 view .LVU5549
 15802 5431 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.657, vect__102.656, _4
 15803              	.LBE683:
 15804              	.LBB684:
 15805              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15806              		.loc 1 494 34 view .LVU5550
 15807 5435 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.661, tmp272, shift
 15808              	.LBE684:
 15809              	.LBB685:
 15810              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15811              		.loc 1 496 34 view .LVU5551
 15812 5439 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.657, vect__102.656, _4
 15813              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15814              		.loc 1 496 22 view .LVU5552
 15815 543d C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], vect
 15815      07
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15816              		.loc 1 495 32 is_stmt 1 view .LVU5553
 15817              	.LVL1034:
GAS LISTING /tmp/cct11Qa0.s 			page 420


 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15818              		.loc 1 495 25 view .LVU5554
 15819              	.LBE685:
 491:sieve_extend.c ****     {
 15820              		.loc 1 491 24 view .LVU5555
 491:sieve_extend.c ****     {
 15821              		.loc 1 491 12 view .LVU5556
 15822              	.LBB686:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15823              		.loc 1 493 25 view .LVU5557
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15824              		.loc 1 494 13 view .LVU5558
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15825              		.loc 1 493 32 view .LVU5559
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15826              		.loc 1 493 25 view .LVU5560
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15827              		.loc 1 494 13 view .LVU5561
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15828              		.loc 1 493 32 view .LVU5562
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15829              		.loc 1 493 25 view .LVU5563
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15830              		.loc 1 494 13 view .LVU5564
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15831              		.loc 1 493 32 view .LVU5565
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15832              		.loc 1 493 25 view .LVU5566
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15833              		.loc 1 494 13 view .LVU5567
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15834              		.loc 1 493 32 view .LVU5568
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15835              		.loc 1 493 25 view .LVU5569
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15836              		.loc 1 493 25 is_stmt 0 view .LVU5570
 15837              	.LBE686:
 15838              	.LBB687:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15839              		.loc 1 495 25 is_stmt 1 view .LVU5571
 496:sieve_extend.c ****     }
 15840              		.loc 1 496 13 view .LVU5572
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15841              		.loc 1 495 32 view .LVU5573
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15842              		.loc 1 495 25 view .LVU5574
 496:sieve_extend.c ****     }
 15843              		.loc 1 496 13 view .LVU5575
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15844              		.loc 1 495 32 view .LVU5576
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15845              		.loc 1 495 25 view .LVU5577
 496:sieve_extend.c ****     }
 15846              		.loc 1 496 13 view .LVU5578
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15847              		.loc 1 495 32 view .LVU5579
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cct11Qa0.s 			page 421


 15848              		.loc 1 495 25 view .LVU5580
 496:sieve_extend.c ****     }
 15849              		.loc 1 496 13 view .LVU5581
 15850              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15851              		.loc 1 496 22 is_stmt 0 view .LVU5582
 15852 5442 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.662, vect__57.657, vect__104.661
 15852      F5
 15853              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15854              		.loc 1 496 34 view .LVU5583
 15855 5447 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.657, vect__102.656, _4
 15856              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15857              		.loc 1 496 22 view .LVU5584
 15858 544b C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], ve
 15858      0720
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15859              		.loc 1 495 32 is_stmt 1 view .LVU5585
 15860              	.LVL1035:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15861              		.loc 1 495 25 view .LVU5586
 15862              	.LBE687:
 491:sieve_extend.c ****     {
 15863              		.loc 1 491 24 view .LVU5587
 491:sieve_extend.c ****     {
 15864              		.loc 1 491 12 view .LVU5588
 15865              	.LBB688:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15866              		.loc 1 493 25 view .LVU5589
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15867              		.loc 1 494 13 view .LVU5590
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15868              		.loc 1 493 32 view .LVU5591
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15869              		.loc 1 493 25 view .LVU5592
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15870              		.loc 1 494 13 view .LVU5593
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15871              		.loc 1 493 32 view .LVU5594
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15872              		.loc 1 493 25 view .LVU5595
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15873              		.loc 1 494 13 view .LVU5596
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15874              		.loc 1 493 32 view .LVU5597
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15875              		.loc 1 493 25 view .LVU5598
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15876              		.loc 1 494 13 view .LVU5599
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15877              		.loc 1 493 32 view .LVU5600
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15878              		.loc 1 493 25 view .LVU5601
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15879              		.loc 1 493 25 is_stmt 0 view .LVU5602
 15880              	.LBE688:
GAS LISTING /tmp/cct11Qa0.s 			page 422


 15881              	.LBB689:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15882              		.loc 1 495 25 is_stmt 1 view .LVU5603
 496:sieve_extend.c ****     }
 15883              		.loc 1 496 13 view .LVU5604
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15884              		.loc 1 495 32 view .LVU5605
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15885              		.loc 1 495 25 view .LVU5606
 496:sieve_extend.c ****     }
 15886              		.loc 1 496 13 view .LVU5607
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15887              		.loc 1 495 32 view .LVU5608
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15888              		.loc 1 495 25 view .LVU5609
 496:sieve_extend.c ****     }
 15889              		.loc 1 496 13 view .LVU5610
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15890              		.loc 1 495 32 view .LVU5611
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15891              		.loc 1 495 25 view .LVU5612
 496:sieve_extend.c ****     }
 15892              		.loc 1 496 13 view .LVU5613
 15893              	.LBE689:
 15894              	.LBB690:
 15895              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15896              		.loc 1 494 25 is_stmt 0 view .LVU5614
 15897 5451 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_
 15897      9C06A000 
 15897      000055
 15898              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15899              		.loc 1 494 34 view .LVU5615
 15900 545c C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.661, tmp273, shift
 15901 5460 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.661, tmp274, shift
 15902 5464 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.670_114, offse
 15902      06A00000 
 15902      00
 15903              	.LBE690:
 15904              	.LBB691:
 15905              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15906              		.loc 1 496 22 view .LVU5616
 15907 546d C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.662, vect__57.657, vect__104.661
 15908              	.LBE691:
 15909              	.LBB692:
 15910              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15911              		.loc 1 494 34 view .LVU5617
 15912 5471 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.670_114, offset
 15912      06E00000 
 15912      00
 15913              	.LBE692:
 15914              	.LBB693:
 15915              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
GAS LISTING /tmp/cct11Qa0.s 			page 423


 15916              		.loc 1 496 22 view .LVU5618
 15917 547a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.662, vect__57.657, vect__104.661
 15917      D1
 15918              	.LBE693:
 15919              	.LBB694:
 15920              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15921              		.loc 1 494 25 view .LVU5619
 15922 547f C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_1
 15922      9406C000 
 15922      000055
 15923 548a C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_1
 15923      8406E000 
 15923      000055
 15924              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15925              		.loc 1 494 34 view .LVU5620
 15926 5495 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.670_114, offset
 15926      06C00000 
 15926      00
 15927              	.LBE694:
 15928              	.LBB695:
 15929              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15930              		.loc 1 496 22 view .LVU5621
 15931 549e C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], v
 15931      0740
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15932              		.loc 1 495 32 is_stmt 1 view .LVU5622
 15933              	.LVL1036:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15934              		.loc 1 495 25 view .LVU5623
 15935              	.LBE695:
 491:sieve_extend.c ****     {
 15936              		.loc 1 491 24 view .LVU5624
 491:sieve_extend.c ****     {
 15937              		.loc 1 491 12 view .LVU5625
 15938              	.LBB696:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15939              		.loc 1 493 25 view .LVU5626
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15940              		.loc 1 494 13 view .LVU5627
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15941              		.loc 1 493 32 view .LVU5628
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15942              		.loc 1 493 25 view .LVU5629
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15943              		.loc 1 494 13 view .LVU5630
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15944              		.loc 1 493 32 view .LVU5631
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15945              		.loc 1 493 25 view .LVU5632
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15946              		.loc 1 494 13 view .LVU5633
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15947              		.loc 1 493 32 view .LVU5634
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cct11Qa0.s 			page 424


 15948              		.loc 1 493 25 view .LVU5635
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15949              		.loc 1 494 13 view .LVU5636
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15950              		.loc 1 493 32 view .LVU5637
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15951              		.loc 1 493 25 view .LVU5638
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15952              		.loc 1 493 25 is_stmt 0 view .LVU5639
 15953              	.LBE696:
 15954              	.LBB697:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15955              		.loc 1 495 25 is_stmt 1 view .LVU5640
 496:sieve_extend.c ****     }
 15956              		.loc 1 496 13 view .LVU5641
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15957              		.loc 1 495 32 view .LVU5642
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15958              		.loc 1 495 25 view .LVU5643
 496:sieve_extend.c ****     }
 15959              		.loc 1 496 13 view .LVU5644
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15960              		.loc 1 495 32 view .LVU5645
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15961              		.loc 1 495 25 view .LVU5646
 496:sieve_extend.c ****     }
 15962              		.loc 1 496 13 view .LVU5647
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15963              		.loc 1 495 32 view .LVU5648
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15964              		.loc 1 495 25 view .LVU5649
 496:sieve_extend.c ****     }
 15965              		.loc 1 496 13 view .LVU5650
 15966              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15967              		.loc 1 496 34 is_stmt 0 view .LVU5651
 15968 54a4 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.657, vect__102.656, _4
 15969              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 15970              		.loc 1 496 22 view .LVU5652
 15971 54a8 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], ve
 15971      0760
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15972              		.loc 1 495 32 is_stmt 1 view .LVU5653
 15973              	.LVL1037:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15974              		.loc 1 495 25 view .LVU5654
 15975              	.LBE697:
 491:sieve_extend.c ****     {
 15976              		.loc 1 491 24 view .LVU5655
 491:sieve_extend.c ****     {
 15977              		.loc 1 491 12 view .LVU5656
 15978              	.LBB698:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15979              		.loc 1 493 25 view .LVU5657
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15980              		.loc 1 494 13 view .LVU5658
GAS LISTING /tmp/cct11Qa0.s 			page 425


 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15981              		.loc 1 493 32 view .LVU5659
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15982              		.loc 1 493 25 view .LVU5660
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15983              		.loc 1 494 13 view .LVU5661
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15984              		.loc 1 493 32 view .LVU5662
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15985              		.loc 1 493 25 view .LVU5663
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15986              		.loc 1 494 13 view .LVU5664
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15987              		.loc 1 493 32 view .LVU5665
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15988              		.loc 1 493 25 view .LVU5666
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 15989              		.loc 1 494 13 view .LVU5667
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15990              		.loc 1 493 32 view .LVU5668
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15991              		.loc 1 493 25 view .LVU5669
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 15992              		.loc 1 493 25 is_stmt 0 view .LVU5670
 15993              	.LBE698:
 15994              	.LBB699:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15995              		.loc 1 495 25 is_stmt 1 view .LVU5671
 496:sieve_extend.c ****     }
 15996              		.loc 1 496 13 view .LVU5672
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15997              		.loc 1 495 32 view .LVU5673
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 15998              		.loc 1 495 25 view .LVU5674
 496:sieve_extend.c ****     }
 15999              		.loc 1 496 13 view .LVU5675
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16000              		.loc 1 495 32 view .LVU5676
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16001              		.loc 1 495 25 view .LVU5677
 496:sieve_extend.c ****     }
 16002              		.loc 1 496 13 view .LVU5678
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16003              		.loc 1 495 32 view .LVU5679
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16004              		.loc 1 495 25 view .LVU5680
 496:sieve_extend.c ****     }
 16005              		.loc 1 496 13 view .LVU5681
 16006              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 16007              		.loc 1 496 22 is_stmt 0 view .LVU5682
 16008 54ae C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], 
 16008      07800000 
 16008      00
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16009              		.loc 1 495 32 is_stmt 1 view .LVU5683
 16010              	.LVL1038:
GAS LISTING /tmp/cct11Qa0.s 			page 426


 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16011              		.loc 1 495 25 view .LVU5684
 16012              	.LBE699:
 491:sieve_extend.c ****     {
 16013              		.loc 1 491 24 view .LVU5685
 491:sieve_extend.c ****     {
 16014              		.loc 1 491 12 view .LVU5686
 16015              	.LBB700:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16016              		.loc 1 493 25 view .LVU5687
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16017              		.loc 1 494 13 view .LVU5688
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16018              		.loc 1 493 32 view .LVU5689
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16019              		.loc 1 493 25 view .LVU5690
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16020              		.loc 1 494 13 view .LVU5691
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16021              		.loc 1 493 32 view .LVU5692
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16022              		.loc 1 493 25 view .LVU5693
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16023              		.loc 1 494 13 view .LVU5694
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16024              		.loc 1 493 32 view .LVU5695
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16025              		.loc 1 493 25 view .LVU5696
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16026              		.loc 1 494 13 view .LVU5697
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16027              		.loc 1 493 32 view .LVU5698
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16028              		.loc 1 493 25 view .LVU5699
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16029              		.loc 1 493 25 is_stmt 0 view .LVU5700
 16030              	.LBE700:
 16031              	.LBB701:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16032              		.loc 1 495 25 is_stmt 1 view .LVU5701
 496:sieve_extend.c ****     }
 16033              		.loc 1 496 13 view .LVU5702
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16034              		.loc 1 495 32 view .LVU5703
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16035              		.loc 1 495 25 view .LVU5704
 496:sieve_extend.c ****     }
 16036              		.loc 1 496 13 view .LVU5705
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16037              		.loc 1 495 32 view .LVU5706
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16038              		.loc 1 495 25 view .LVU5707
 496:sieve_extend.c ****     }
 16039              		.loc 1 496 13 view .LVU5708
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16040              		.loc 1 495 32 view .LVU5709
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cct11Qa0.s 			page 427


 16041              		.loc 1 495 25 view .LVU5710
 496:sieve_extend.c ****     }
 16042              		.loc 1 496 13 view .LVU5711
 16043              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 16044              		.loc 1 496 34 is_stmt 0 view .LVU5712
 16045 54b7 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.657, vect__102.656, _4
 16046              	.LBE701:
 16047              	.LBB702:
 16048              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16049              		.loc 1 494 34 view .LVU5713
 16050 54bb C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.661, tmp275, shift
 16051              	.LBE702:
 16052              	.LBB703:
 16053              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 16054              		.loc 1 496 34 view .LVU5714
 16055 54bf C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.657, vect__102.656, _4
 16056              	.LBE703:
 16057              	.LBB704:
 16058              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16059              		.loc 1 494 34 view .LVU5715
 16060 54c3 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.661, tmp276, shift
 16061 54c7 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.661, tmp277, shift
 16062              	.LBE704:
 16063              	.LBB705:
 16064              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 16065              		.loc 1 496 22 view .LVU5716
 16066 54cb C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.662, vect__57.657, vect__104.661
 16066      FE
 16067 54d0 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.662, vect__57.657, vect__104.661
 16068 54d4 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], 
 16068      07A00000 
 16068      00
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16069              		.loc 1 495 32 is_stmt 1 view .LVU5717
 16070              	.LVL1039:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16071              		.loc 1 495 25 view .LVU5718
 16072              	.LBE705:
 491:sieve_extend.c ****     {
 16073              		.loc 1 491 24 view .LVU5719
 491:sieve_extend.c ****     {
 16074              		.loc 1 491 12 view .LVU5720
 16075              	.LBB706:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16076              		.loc 1 493 25 view .LVU5721
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16077              		.loc 1 494 13 view .LVU5722
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16078              		.loc 1 493 32 view .LVU5723
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16079              		.loc 1 493 25 view .LVU5724
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/cct11Qa0.s 			page 428


 16080              		.loc 1 494 13 view .LVU5725
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16081              		.loc 1 493 32 view .LVU5726
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16082              		.loc 1 493 25 view .LVU5727
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16083              		.loc 1 494 13 view .LVU5728
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16084              		.loc 1 493 32 view .LVU5729
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16085              		.loc 1 493 25 view .LVU5730
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16086              		.loc 1 494 13 view .LVU5731
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16087              		.loc 1 493 32 view .LVU5732
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16088              		.loc 1 493 25 view .LVU5733
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16089              		.loc 1 493 25 is_stmt 0 view .LVU5734
 16090              	.LBE706:
 16091              	.LBB707:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16092              		.loc 1 495 25 is_stmt 1 view .LVU5735
 496:sieve_extend.c ****     }
 16093              		.loc 1 496 13 view .LVU5736
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16094              		.loc 1 495 32 view .LVU5737
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16095              		.loc 1 495 25 view .LVU5738
 496:sieve_extend.c ****     }
 16096              		.loc 1 496 13 view .LVU5739
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16097              		.loc 1 495 32 view .LVU5740
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16098              		.loc 1 495 25 view .LVU5741
 496:sieve_extend.c ****     }
 16099              		.loc 1 496 13 view .LVU5742
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16100              		.loc 1 495 32 view .LVU5743
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16101              		.loc 1 495 25 view .LVU5744
 496:sieve_extend.c ****     }
 16102              		.loc 1 496 13 view .LVU5745
 16103              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 16104              		.loc 1 496 22 is_stmt 0 view .LVU5746
 16105 54dd C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.662, vect__57.657, vect__104.661
 16105      DA
 16106 54e2 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], v
 16106      07C00000 
 16106      00
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16107              		.loc 1 495 32 is_stmt 1 view .LVU5747
 16108              	.LVL1040:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16109              		.loc 1 495 25 view .LVU5748
 16110              	.LBE707:
GAS LISTING /tmp/cct11Qa0.s 			page 429


 491:sieve_extend.c ****     {
 16111              		.loc 1 491 24 view .LVU5749
 491:sieve_extend.c ****     {
 16112              		.loc 1 491 12 view .LVU5750
 16113              	.LBB708:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16114              		.loc 1 493 25 view .LVU5751
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16115              		.loc 1 494 13 view .LVU5752
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16116              		.loc 1 493 32 view .LVU5753
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16117              		.loc 1 493 25 view .LVU5754
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16118              		.loc 1 494 13 view .LVU5755
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16119              		.loc 1 493 32 view .LVU5756
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16120              		.loc 1 493 25 view .LVU5757
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16121              		.loc 1 494 13 view .LVU5758
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16122              		.loc 1 493 32 view .LVU5759
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16123              		.loc 1 493 25 view .LVU5760
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16124              		.loc 1 494 13 view .LVU5761
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16125              		.loc 1 493 32 view .LVU5762
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16126              		.loc 1 493 25 view .LVU5763
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16127              		.loc 1 493 25 is_stmt 0 view .LVU5764
 16128              	.LBE708:
 16129              	.LBB709:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16130              		.loc 1 495 25 is_stmt 1 view .LVU5765
 496:sieve_extend.c ****     }
 16131              		.loc 1 496 13 view .LVU5766
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16132              		.loc 1 495 32 view .LVU5767
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16133              		.loc 1 495 25 view .LVU5768
 496:sieve_extend.c ****     }
 16134              		.loc 1 496 13 view .LVU5769
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16135              		.loc 1 495 32 view .LVU5770
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16136              		.loc 1 495 25 view .LVU5771
 496:sieve_extend.c ****     }
 16137              		.loc 1 496 13 view .LVU5772
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16138              		.loc 1 495 32 view .LVU5773
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16139              		.loc 1 495 25 view .LVU5774
 496:sieve_extend.c ****     }
 16140              		.loc 1 496 13 view .LVU5775
GAS LISTING /tmp/cct11Qa0.s 			page 430


 16141              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 16142              		.loc 1 496 22 is_stmt 0 view .LVU5776
 16143 54eb C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], 
 16143      07E00000 
 16143      00
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16144              		.loc 1 495 32 is_stmt 1 view .LVU5777
 16145              	.LVL1041:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16146              		.loc 1 495 25 view .LVU5778
 16147              	.LBE709:
 491:sieve_extend.c ****     {
 16148              		.loc 1 491 24 view .LVU5779
 491:sieve_extend.c ****     {
 16149              		.loc 1 491 12 view .LVU5780
 16150 54f4 48050001 		add	rax, 256	# ivtmp.670,
 16150      0000
 16151 54fa 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.667
 16152 54fd 0F87C7FE 		ja	.L1474	#,
 16152      FFFF
 16153              	.L1514:
 16154 5503 4589C3   		mov	r11d, r8d	# _25, _25
 16155 5506 428D0495 		lea	eax, 0[0+r10*4]	# i,
 16155      00000000 
 16156 550e 4983C301 		add	r11, 1	# tmp140,
 16157 5512 49C1E305 		sal	r11, 5	# _105,
 16158 5516 4C01DF   		add	rdi, r11	# dst, _105
 16159 5519 4C01DE   		add	rsi, r11	# src, _105
 16160 551c C5F877   		vzeroupper
 16161              	.LVL1042:
 16162              	.L1475:
 498:sieve_extend.c ****     {
 16163              		.loc 1 498 12 view .LVU5781
 16164              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 16165              		.loc 1 498 5 is_stmt 0 view .LVU5782
 16166 551f 39C2     		cmp	edx, eax	# size, i
 16167 5521 0F8E9400 		jle	.L1518	#,
 16167      0000
 16168              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16169              		.loc 1 500 35 view .LVU5783
 16170 5527 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 16171 552b 41B84000 		mov	r8d, 64	# tmp142,
 16171      0000
 16172              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16173              		.loc 1 500 23 view .LVU5784
 16174 5531 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 16174      0E
 16175 5536 4129C8   		sub	r8d, ecx	# _97, shift
 500:sieve_extend.c ****     }    
 16176              		.loc 1 500 9 is_stmt 1 view .LVU5785
 16177              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16178              		.loc 1 500 43 is_stmt 0 view .LVU5786
GAS LISTING /tmp/cct11Qa0.s 			page 431


 16179 5539 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 16179      DA
 16180              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16181              		.loc 1 500 32 view .LVU5787
 16182 553e 4D09D9   		or	r9, r11	# tmp146, tmp145
 16183 5541 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 498:sieve_extend.c ****     {
 16184              		.loc 1 498 22 is_stmt 1 view .LVU5788
 16185              	.LVL1043:
 498:sieve_extend.c ****     {
 16186              		.loc 1 498 12 view .LVU5789
 16187              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 16188              		.loc 1 498 22 is_stmt 0 view .LVU5790
 16189 5544 448D4801 		lea	r9d, 1[rax]	# i,
 16190              	.LVL1044:
 16191              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 16192              		.loc 1 498 5 view .LVU5791
 16193 5548 4439CA   		cmp	edx, r9d	# size, i
 16194 554b 7E6D     		jle	.L1515	#,
 500:sieve_extend.c ****     }    
 16195              		.loc 1 500 9 is_stmt 1 view .LVU5792
 16196              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16197              		.loc 1 500 35 is_stmt 0 view .LVU5793
 16198 554d 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 16199              	.LVL1045:
 16200              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16201              		.loc 1 500 23 view .LVU5794
 16202 5551 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
 16202      D2
 16203              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16204              		.loc 1 500 43 view .LVU5795
 16205 5556 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 16205      D9
 16206              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16207              		.loc 1 500 32 view .LVU5796
 16208 555b 4D09DA   		or	r10, r11	# tmp150, tmp149
 16209 555e 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 498:sieve_extend.c ****     {
 16210              		.loc 1 498 22 is_stmt 1 view .LVU5797
 16211              	.LVL1046:
 498:sieve_extend.c ****     {
 16212              		.loc 1 498 12 view .LVU5798
 16213              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 16214              		.loc 1 498 22 is_stmt 0 view .LVU5799
 16215 5562 448D5002 		lea	r10d, 2[rax]	# i,
 16216              	.LVL1047:
 16217              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 16218              		.loc 1 498 5 view .LVU5800
GAS LISTING /tmp/cct11Qa0.s 			page 432


 16219 5566 4439D2   		cmp	edx, r10d	# size, i
 16220 5569 7E4F     		jle	.L1515	#,
 500:sieve_extend.c ****     }    
 16221              		.loc 1 500 9 is_stmt 1 view .LVU5801
 16222              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16223              		.loc 1 500 35 is_stmt 0 view .LVU5802
 16224 556b 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 16225              	.LVL1048:
 16226              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16227              		.loc 1 500 23 view .LVU5803
 16228 556f C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 16228      C9
 16229              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16230              		.loc 1 500 43 view .LVU5804
 16231 5574 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
 16231      DA
 16232              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16233              		.loc 1 500 32 view .LVU5805
 16234 5579 4D09D9   		or	r9, r11	# tmp154, tmp153
 16235 557c 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 498:sieve_extend.c ****     {
 16236              		.loc 1 498 22 is_stmt 1 view .LVU5806
 16237              	.LVL1049:
 498:sieve_extend.c ****     {
 16238              		.loc 1 498 12 view .LVU5807
 16239              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 16240              		.loc 1 498 22 is_stmt 0 view .LVU5808
 16241 5580 448D4803 		lea	r9d, 3[rax]	# i,
 16242              	.LVL1050:
 16243              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 16244              		.loc 1 498 5 view .LVU5809
 16245 5584 4439CA   		cmp	edx, r9d	# size, i
 16246 5587 7E31     		jle	.L1515	#,
 500:sieve_extend.c ****     }    
 16247              		.loc 1 500 9 is_stmt 1 view .LVU5810
 16248              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16249              		.loc 1 500 35 is_stmt 0 view .LVU5811
 16250 5589 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 16251              	.LVL1051:
 16252              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 16253              		.loc 1 498 22 view .LVU5812
 16254 558d 83C004   		add	eax, 4	# i,
 16255              	.LVL1052:
 16256              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16257              		.loc 1 500 23 view .LVU5813
 16258 5590 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 16258      D2
 16259              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
GAS LISTING /tmp/cct11Qa0.s 			page 433


 500:sieve_extend.c ****     }    
 16260              		.loc 1 500 43 view .LVU5814
 16261 5595 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 16261      D9
 16262              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16263              		.loc 1 500 32 view .LVU5815
 16264 559a 4D09DA   		or	r10, r11	# tmp158, tmp157
 16265              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 16266              		.loc 1 498 5 view .LVU5816
 16267 559d 39C2     		cmp	edx, eax	# size, i
 16268              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16269              		.loc 1 500 32 view .LVU5817
 16270 559f 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 498:sieve_extend.c ****     {
 16271              		.loc 1 498 22 is_stmt 1 view .LVU5818
 16272              	.LVL1053:
 498:sieve_extend.c ****     {
 16273              		.loc 1 498 12 view .LVU5819
 16274              	# sieve_extend.c:498:     for (; i < size; ++i,++src,++dst)
 498:sieve_extend.c ****     {
 16275              		.loc 1 498 5 is_stmt 0 view .LVU5820
 16276 55a3 7E15     		jle	.L1515	#,
 500:sieve_extend.c ****     }    
 16277              		.loc 1 500 9 is_stmt 1 discriminator 2 view .LVU5821
 16278              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16279              		.loc 1 500 43 is_stmt 0 discriminator 2 view .LVU5822
 16280 55a5 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 16281              	.LVL1054:
 16282              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16283              		.loc 1 500 23 discriminator 2 view .LVU5823
 16284 55a9 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 16284      C9
 16285              	.LVL1055:
 16286              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16287              		.loc 1 500 43 discriminator 2 view .LVU5824
 16288 55ae C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 16288      F2
 16289              	.LVL1056:
 16290              	# sieve_extend.c:500:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 500:sieve_extend.c ****     }    
 16291              		.loc 1 500 32 discriminator 2 view .LVU5825
 16292 55b3 4809F1   		or	rcx, rsi	# tmp163, tmp160
 16293 55b6 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 498:sieve_extend.c ****     {
 16294              		.loc 1 498 22 is_stmt 1 discriminator 2 view .LVU5826
 16295              	.LVL1057:
 498:sieve_extend.c ****     {
 16296              		.loc 1 498 12 discriminator 2 view .LVU5827
 16297              	.L1515:
 16298              	# sieve_extend.c:502: }
 502:sieve_extend.c **** 
GAS LISTING /tmp/cct11Qa0.s 			page 434


 16299              		.loc 1 502 1 is_stmt 0 view .LVU5828
 16300 55ba C3       		ret	
 16301              	.LVL1058:
 16302              	.L1518:
 502:sieve_extend.c **** 
 16303              		.loc 1 502 1 view .LVU5829
 16304 55bb C3       		ret	
 16305              	.LVL1059:
 16306              	.L1517:
 16307              	.LBB710:
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16308              		.loc 1 493 25 is_stmt 1 view .LVU5830
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16309              		.loc 1 494 13 view .LVU5831
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16310              		.loc 1 493 32 view .LVU5832
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16311              		.loc 1 493 25 view .LVU5833
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16312              		.loc 1 494 13 view .LVU5834
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16313              		.loc 1 493 32 view .LVU5835
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16314              		.loc 1 493 25 view .LVU5836
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16315              		.loc 1 494 13 view .LVU5837
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16316              		.loc 1 493 32 view .LVU5838
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16317              		.loc 1 493 25 view .LVU5839
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16318              		.loc 1 494 13 view .LVU5840
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16319              		.loc 1 493 32 view .LVU5841
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16320              		.loc 1 493 25 view .LVU5842
 493:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16321              		.loc 1 493 25 is_stmt 0 view .LVU5843
 16322              	.LBE710:
 16323              	.LBB711:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16324              		.loc 1 495 25 is_stmt 1 view .LVU5844
 496:sieve_extend.c ****     }
 16325              		.loc 1 496 13 view .LVU5845
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16326              		.loc 1 495 32 view .LVU5846
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16327              		.loc 1 495 25 view .LVU5847
 496:sieve_extend.c ****     }
 16328              		.loc 1 496 13 view .LVU5848
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16329              		.loc 1 495 32 view .LVU5849
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16330              		.loc 1 495 25 view .LVU5850
 496:sieve_extend.c ****     }
 16331              		.loc 1 496 13 view .LVU5851
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cct11Qa0.s 			page 435


 16332              		.loc 1 495 32 view .LVU5852
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16333              		.loc 1 495 25 view .LVU5853
 496:sieve_extend.c ****     }
 16334              		.loc 1 496 13 view .LVU5854
 16335              	.LBE711:
 16336              	.LBB712:
 16337              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16338              		.loc 1 494 25 is_stmt 0 view .LVU5855
 16339 55bc C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.656, MEM[base: src_35(D), index: ivtmp.670_114, o
 16339      7E2055
 16340 55c3 41B90200 		mov	r9d, 2	# ivtmp.667,
 16340      0000
 16341              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16342              		.loc 1 494 34 view .LVU5856
 16343 55c9 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.670_114, offset: 0B]
 16343      20
 16344 55ce B8400000 		mov	eax, 64	# ivtmp.670,
 16344      00
 16345              	.LBE712:
 16346              	.LBB713:
 16347              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 16348              		.loc 1 496 34 view .LVU5857
 16349 55d3 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.657, vect__102.656, _4
 16350              	.LBE713:
 16351              	.LBB714:
 16352              	# sieve_extend.c:494:             *(dst+j) = (*(src+j))<<shift;
 494:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16353              		.loc 1 494 34 view .LVU5858
 16354 55d7 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.661, tmp278, shift
 16355              	.LBE714:
 16356              	.LBB715:
 16357              	# sieve_extend.c:496:             *(dst+j) |= (*(src+1)>>(64-shift));
 496:sieve_extend.c ****     }
 16358              		.loc 1 496 22 view .LVU5859
 16359 55db C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.662, vect__57.657, vect__104.661
 16359      DA
 16360 55e0 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.670_114, offset: 0B], vect_
 16360      20
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16361              		.loc 1 495 32 is_stmt 1 view .LVU5860
 16362              	.LVL1060:
 495:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16363              		.loc 1 495 25 view .LVU5861
 16364              	.LBE715:
 491:sieve_extend.c ****     {
 16365              		.loc 1 491 24 view .LVU5862
 491:sieve_extend.c ****     {
 16366              		.loc 1 491 12 view .LVU5863
 16367 55e5 E9F6FCFF 		jmp	.L1506	#
 16367      FF
 16368              	.LVL1061:
 16369              	.L1516:
 16370              	# sieve_extend.c:489:     int i = 0;
GAS LISTING /tmp/cct11Qa0.s 			page 436


 489:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 16371              		.loc 1 489 9 is_stmt 0 view .LVU5864
 16372 55ea 31C0     		xor	eax, eax	# i
 16373 55ec E92EFFFF 		jmp	.L1475	#
 16373      FF
 16374              		.cfi_endproc
 16375              	.LFE5334:
 16377              		.section	.rodata.str1.8,"aMS",@progbits,1
 16378              		.align 8
 16379              	.LC9:
 16380 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 16380      6C743A20 
 16380      53696576 
 16380      6573697A 
 16380      6520256A 
 16381 0055 000000   		.align 8
 16382              	.LC10:
 16383 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 16383      616C6964 
 16383      20726573 
 16383      756C742E 
 16383      20536965 
 16384              		.section	.rodata.str1.1
 16385              	.LC11:
 16386 0023 44656570 		.string	"DeepAnalyzing"
 16386      416E616C 
 16386      797A696E 
 16386      6700
 16387              		.section	.rodata.str1.8
 16388 00bb 00000000 		.align 8
 16388      00
 16389              	.LC12:
 16390 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 16390      65722025 
 16390      6A752028 
 16390      256A7529 
 16390      20776173 
 16391              		.align 8
 16392              	.LC13:
 16393 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 16393      65722025 
 16393      6A752028 
 16393      256A7529 
 16393      20776173 
 16394              		.text
 16395 55f1 66662E0F 		.p2align 4
 16395      1F840000 
 16395      0000000F 
 16395      1F4000
 16396              		.globl	validatePrimeCount
 16398              	validatePrimeCount:
 16399              	.LVL1062:
 16400              	.LFB5347:
 964:sieve_extend.c **** 
 16401              		.loc 1 964 76 is_stmt 1 view -0
 16402              		.cfi_startproc
 964:sieve_extend.c **** 
GAS LISTING /tmp/cct11Qa0.s 			page 437


 16403              		.loc 1 964 76 is_stmt 0 view .LVU5866
 16404 5600 F30F1EFA 		endbr64	
 966:sieve_extend.c ****     counter_t valid_primes = 0;
 16405              		.loc 1 966 5 is_stmt 1 view .LVU5867
 16406              	# sieve_extend.c:964: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
 964:sieve_extend.c **** 
 16407              		.loc 1 964 76 is_stmt 0 view .LVU5868
 16408 5604 4157     		push	r15	#
 16409              		.cfi_def_cfa_offset 16
 16410              		.cfi_offset 15, -16
 16411 5606 4156     		push	r14	#
 16412              		.cfi_def_cfa_offset 24
 16413              		.cfi_offset 14, -24
 16414 5608 4155     		push	r13	#
 16415              		.cfi_def_cfa_offset 32
 16416              		.cfi_offset 13, -32
 16417 560a 4154     		push	r12	#
 16418              		.cfi_def_cfa_offset 40
 16419              		.cfi_offset 12, -40
 16420 560c 55       		push	rbp	#
 16421              		.cfi_def_cfa_offset 48
 16422              		.cfi_offset 6, -48
 16423 560d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 16424 5610 53       		push	rbx	#
 16425              		.cfi_def_cfa_offset 56
 16426              		.cfi_offset 3, -56
 16427 5611 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 16428 5613 488D6424 		lea	rsp, -56[rsp]	#,
 16428      C8
 16429              		.cfi_def_cfa_offset 112
 16430              	# sieve_extend.c:966:     counter_t primecount = count_primes(sieve);
 966:sieve_extend.c ****     counter_t valid_primes = 0;
 16431              		.loc 1 966 28 view .LVU5869
 16432 5618 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 16433 561b 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 16434              	.LVL1063:
 16435              	.LBB737:
 16436              	.LBI737:
 935:sieve_extend.c ****     counter_t primeCount = 1;
 16437              		.loc 1 935 18 is_stmt 1 view .LVU5870
 16438              	.LBB738:
 16439              	.LBB739:
 937:sieve_extend.c ****     return primeCount;
 16440              		.loc 1 937 30 view .LVU5871
 16441 561f 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 16442              	# sieve_extend.c:937:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 937:sieve_extend.c ****     return primeCount;
 16443              		.loc 1 937 5 is_stmt 0 view .LVU5872
 16444 5623 4883FF01 		cmp	rdi, 1	# _25,
 16445 5627 0F860B05 		jbe	.L1520	#,
 16445      0000
 16446              	# sieve_extend.c:937:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 937:sieve_extend.c ****     return primeCount;
 16447              		.loc 1 937 20 view .LVU5873
 16448 562d B8010000 		mov	eax, 1	# factor,
 16448      00
 16449              	.LBE739:
GAS LISTING /tmp/cct11Qa0.s 			page 438


 16450              	# sieve_extend.c:936:     counter_t primeCount = 1;
 936:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 16451              		.loc 1 936 15 view .LVU5874
 16452 5632 41B80100 		mov	r8d, 1	# primeCount,
 16452      0000
 16453              	.LVL1064:
 16454 5638 0F1F8400 		.p2align 4
 16454      00000000 
 16455              		.p2align 3
 16456              	.L1523:
 16457              	.LBB742:
 937:sieve_extend.c ****     return primeCount;
 16458              		.loc 1 937 104 is_stmt 1 view .LVU5875
 16459              	# sieve_extend.c:937:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 937:sieve_extend.c ****     return primeCount;
 16460              		.loc 1 937 114 is_stmt 0 view .LVU5876
 16461 5640 4983C001 		add	r8, 1	# primeCount,
 16462              	.LVL1065:
 937:sieve_extend.c ****     return primeCount;
 16463              		.loc 1 937 52 is_stmt 1 view .LVU5877
 16464              	# sieve_extend.c:937:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 937:sieve_extend.c ****     return primeCount;
 16465              		.loc 1 937 61 is_stmt 0 view .LVU5878
 16466 5644 4883C001 		add	rax, 1	# factor,
 16467              	.LVL1066:
 16468              	.L1663:
 16469              	.LBB740:
 16470              	.LBI740:
 110:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 16471              		.loc 1 110 25 is_stmt 1 view .LVU5879
 16472              	.LBB741:
 111:sieve_extend.c ****     return index;
 16473              		.loc 1 111 5 view .LVU5880
 111:sieve_extend.c ****     return index;
 16474              		.loc 1 111 11 view .LVU5881
 16475              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16476              		.loc 1 111 21 is_stmt 0 view .LVU5882
 16477 5648 4889C1   		mov	rcx, rax	# tmp162, factor
 16478 564b 48C1E906 		shr	rcx, 6	# tmp162,
 16479              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16480              		.loc 1 111 12 view .LVU5883
 16481 564f 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 16482              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16483              		.loc 1 111 11 view .LVU5884
 16484 5653 490FA3C3 		bt	r11, rax	# *_106, factor
 16485 5657 0F83AB00 		jnc	.L1521	#,
 16485      0000
 111:sieve_extend.c ****     return index;
 16486              		.loc 1 111 58 is_stmt 1 view .LVU5885
 16487              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16488              		.loc 1 111 63 is_stmt 0 view .LVU5886
 16489 565d 4C8D6001 		lea	r12, 1[rax]	# tmp235,
 16490              	.LVL1067:
GAS LISTING /tmp/cct11Qa0.s 			page 439


 16491              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16492              		.loc 1 111 21 view .LVU5887
 16493 5661 4D89E5   		mov	r13, r12	# tmp167, factor
 16494              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16495              		.loc 1 111 63 view .LVU5888
 16496 5664 4C89E0   		mov	rax, r12	# factor, tmp235
 111:sieve_extend.c ****     return index;
 16497              		.loc 1 111 11 is_stmt 1 view .LVU5889
 16498              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16499              		.loc 1 111 21 is_stmt 0 view .LVU5890
 16500 5667 49C1ED06 		shr	r13, 6	# tmp167,
 16501              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16502              		.loc 1 111 12 view .LVU5891
 16503 566b 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 16504              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16505              		.loc 1 111 11 view .LVU5892
 16506 566f 4D0FA3E7 		bt	r15, r12	# *_35, factor
 16507 5673 0F838F00 		jnc	.L1521	#,
 16507      0000
 111:sieve_extend.c ****     return index;
 16508              		.loc 1 111 58 is_stmt 1 view .LVU5893
 16509              	.LVL1068:
 16510              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16511              		.loc 1 111 63 is_stmt 0 view .LVU5894
 16512 5679 4883C001 		add	rax, 1	# factor,
 16513              	.LVL1069:
 111:sieve_extend.c ****     return index;
 16514              		.loc 1 111 11 is_stmt 1 view .LVU5895
 16515              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16516              		.loc 1 111 21 is_stmt 0 view .LVU5896
 16517 567d 4989C6   		mov	r14, rax	# tmp279, factor
 16518 5680 49C1EE06 		shr	r14, 6	# tmp279,
 16519              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16520              		.loc 1 111 12 view .LVU5897
 16521 5684 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 16522              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16523              		.loc 1 111 11 view .LVU5898
 16524 5688 480FA3C6 		bt	rsi, rax	# *_35, factor
 16525 568c 737A     		jnc	.L1521	#,
 111:sieve_extend.c ****     return index;
 16526              		.loc 1 111 58 is_stmt 1 view .LVU5899
 16527              	.LVL1070:
 16528              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16529              		.loc 1 111 63 is_stmt 0 view .LVU5900
 16530 568e 498D4424 		lea	rax, 2[r12]	# factor,
 16530      02
 16531              	.LVL1071:
GAS LISTING /tmp/cct11Qa0.s 			page 440


 111:sieve_extend.c ****     return index;
 16532              		.loc 1 111 11 is_stmt 1 view .LVU5901
 16533              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16534              		.loc 1 111 21 is_stmt 0 view .LVU5902
 16535 5693 4989C2   		mov	r10, rax	# tmp283, factor
 16536 5696 49C1EA06 		shr	r10, 6	# tmp283,
 16537              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16538              		.loc 1 111 12 view .LVU5903
 16539 569a 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 16540              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16541              		.loc 1 111 11 view .LVU5904
 16542 569e 480FA3C1 		bt	rcx, rax	# *_35, factor
 16543 56a2 7364     		jnc	.L1521	#,
 111:sieve_extend.c ****     return index;
 16544              		.loc 1 111 58 is_stmt 1 view .LVU5905
 16545              	.LVL1072:
 16546              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16547              		.loc 1 111 63 is_stmt 0 view .LVU5906
 16548 56a4 498D4424 		lea	rax, 3[r12]	# factor,
 16548      03
 16549              	.LVL1073:
 111:sieve_extend.c ****     return index;
 16550              		.loc 1 111 11 is_stmt 1 view .LVU5907
 16551              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16552              		.loc 1 111 21 is_stmt 0 view .LVU5908
 16553 56a9 4989C3   		mov	r11, rax	# tmp287, factor
 16554 56ac 49C1EB06 		shr	r11, 6	# tmp287,
 16555              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16556              		.loc 1 111 12 view .LVU5909
 16557 56b0 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 16558              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16559              		.loc 1 111 11 view .LVU5910
 16560 56b4 490FA3C5 		bt	r13, rax	# *_35, factor
 16561 56b8 734E     		jnc	.L1521	#,
 111:sieve_extend.c ****     return index;
 16562              		.loc 1 111 58 is_stmt 1 view .LVU5911
 16563              	.LVL1074:
 16564              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16565              		.loc 1 111 63 is_stmt 0 view .LVU5912
 16566 56ba 498D4424 		lea	rax, 4[r12]	# factor,
 16566      04
 16567              	.LVL1075:
 111:sieve_extend.c ****     return index;
 16568              		.loc 1 111 11 is_stmt 1 view .LVU5913
 16569              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16570              		.loc 1 111 21 is_stmt 0 view .LVU5914
 16571 56bf 4989C7   		mov	r15, rax	# tmp291, factor
 16572 56c2 49C1EF06 		shr	r15, 6	# tmp291,
GAS LISTING /tmp/cct11Qa0.s 			page 441


 16573              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16574              		.loc 1 111 12 view .LVU5915
 16575 56c6 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 16576              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16577              		.loc 1 111 11 view .LVU5916
 16578 56ca 490FA3C6 		bt	r14, rax	# *_35, factor
 16579 56ce 7338     		jnc	.L1521	#,
 111:sieve_extend.c ****     return index;
 16580              		.loc 1 111 58 is_stmt 1 view .LVU5917
 16581              	.LVL1076:
 16582              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16583              		.loc 1 111 63 is_stmt 0 view .LVU5918
 16584 56d0 498D4424 		lea	rax, 5[r12]	# factor,
 16584      05
 16585              	.LVL1077:
 111:sieve_extend.c ****     return index;
 16586              		.loc 1 111 11 is_stmt 1 view .LVU5919
 16587              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16588              		.loc 1 111 21 is_stmt 0 view .LVU5920
 16589 56d5 4889C6   		mov	rsi, rax	# tmp295, factor
 16590 56d8 48C1EE06 		shr	rsi, 6	# tmp295,
 16591              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16592              		.loc 1 111 12 view .LVU5921
 16593 56dc 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 16594              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16595              		.loc 1 111 11 view .LVU5922
 16596 56e0 490FA3C2 		bt	r10, rax	# *_35, factor
 16597 56e4 7322     		jnc	.L1521	#,
 111:sieve_extend.c ****     return index;
 16598              		.loc 1 111 58 is_stmt 1 view .LVU5923
 16599              	.LVL1078:
 16600              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16601              		.loc 1 111 63 is_stmt 0 view .LVU5924
 16602 56e6 498D4424 		lea	rax, 6[r12]	# factor,
 16602      06
 16603              	.LVL1079:
 111:sieve_extend.c ****     return index;
 16604              		.loc 1 111 11 is_stmt 1 view .LVU5925
 16605              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16606              		.loc 1 111 21 is_stmt 0 view .LVU5926
 16607 56eb 4889C1   		mov	rcx, rax	# tmp299, factor
 16608 56ee 48C1E906 		shr	rcx, 6	# tmp299,
 16609              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16610              		.loc 1 111 12 view .LVU5927
 16611 56f2 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 16612              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16613              		.loc 1 111 11 view .LVU5928
GAS LISTING /tmp/cct11Qa0.s 			page 442


 16614 56f6 490FA3C3 		bt	r11, rax	# *_35, factor
 16615 56fa 730C     		jnc	.L1521	#,
 111:sieve_extend.c ****     return index;
 16616              		.loc 1 111 58 is_stmt 1 view .LVU5929
 16617              	.LVL1080:
 16618              	# sieve_extend.c:111:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 111:sieve_extend.c ****     return index;
 16619              		.loc 1 111 63 is_stmt 0 view .LVU5930
 16620 56fc 498D4424 		lea	rax, 7[r12]	# factor,
 16620      07
 16621              	.LVL1081:
 111:sieve_extend.c ****     return index;
 16622              		.loc 1 111 11 is_stmt 1 view .LVU5931
 16623 5701 E942FFFF 		jmp	.L1663	#
 16623      FF
 16624              		.p2align 4,,7
 16625 5706 6690     		.p2align 3
 16626              	.L1521:
 16627              	.LVL1082:
 111:sieve_extend.c ****     return index;
 16628              		.loc 1 111 11 is_stmt 0 view .LVU5932
 16629              	.LBE741:
 16630              	.LBE740:
 937:sieve_extend.c ****     return primeCount;
 16631              		.loc 1 937 30 is_stmt 1 view .LVU5933
 16632              	# sieve_extend.c:937:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 937:sieve_extend.c ****     return primeCount;
 16633              		.loc 1 937 5 is_stmt 0 view .LVU5934
 16634 5708 4839C7   		cmp	rdi, rax	# _25, factor
 16635 570b 0F872FFF 		ja	.L1523	#,
 16635      FFFF
 937:sieve_extend.c ****     return primeCount;
 16636              		.loc 1 937 5 view .LVU5935
 16637              	.LBE742:
 938:sieve_extend.c **** }
 16638              		.loc 1 938 5 is_stmt 1 view .LVU5936
 16639              	.LVL1083:
 938:sieve_extend.c **** }
 16640              		.loc 1 938 5 is_stmt 0 view .LVU5937
 16641              	.LBE738:
 16642              	.LBE737:
 967:sieve_extend.c ****     switch(sieve->size) {
 16643              		.loc 1 967 5 is_stmt 1 view .LVU5938
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 16644              		.loc 1 968 5 view .LVU5939
 16645 5711 83FB03   		cmp	ebx, 3	# option_verboselevel,
 16646 5714 0F9FC2   		setg	dl	#, tmp172
 16647 5717 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 16647      860100
 16648 571e 0F842D06 		je	.L1524	#,
 16648      0000
 16649 5724 0F86CC02 		jbe	.L1664	#,
 16649      0000
 16650 572a 4981F900 		cmp	r9, 100000000	# pretmp_199,
 16650      E1F505
 16651 5731 0F84D905 		je	.L1532	#,
 16651      0000
GAS LISTING /tmp/cct11Qa0.s 			page 443


 16652              		.p2align 4,,4
 16653 5737 0F863303 		jbe	.L1665	#,
 16653      0000
 16654 573d 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 16654      CA9A3B
 16655 5744 0F85EB05 		jne	.L1530	#,
 16655      0000
 16656 574a 4981F82E 		cmp	r8, 50847534	# primeCount,
 16656      DF0703
 16657              	# sieve_extend.c:977:         case 1000000000:    valid_primes = 50847534; break;
 977:sieve_extend.c ****         default:            valid_primes= 0;
 16658              		.loc 1 977 42 is_stmt 0 view .LVU5940
 16659 5751 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 16659      03
 16660 5756 410F94C4 		sete	r12b	#, tmp189
 16661 575a 4421E2   		and	edx, r12d	# _251, tmp189
 16662 575d 4981F82E 		cmp	r8, 50847534	# primeCount,
 16662      DF0703
 16663 5764 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 16664 5768 410F95C6 		setne	r14b	#, _135
 977:sieve_extend.c ****         default:            valid_primes= 0;
 16665              		.loc 1 977 29 is_stmt 1 view .LVU5941
 16666              	.LVL1084:
 977:sieve_extend.c ****         default:            valid_primes= 0;
 16667              		.loc 1 977 54 view .LVU5942
 16668 576c 0F1F4000 		.p2align 4
 16669              		.p2align 3
 16670              	.L1537:
 981:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 16671              		.loc 1 981 5 view .LVU5943
 982:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 16672              		.loc 1 982 5 view .LVU5944
 16673              	# sieve_extend.c:982:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is 
 982:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 16674              		.loc 1 982 8 is_stmt 0 view .LVU5945
 16675 5770 84D2     		test	dl, dl	# _251
 16676 5772 0F841704 		je	.L1538	#,
 16676      0000
 982:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 16677              		.loc 1 982 45 is_stmt 1 discriminator 1 view .LVU5946
 16678              	.LVL1085:
 16679              	.LBB744:
 16680              	.LBI744:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16681              		.loc 3 105 1 discriminator 1 view .LVU5947
 16682              	.LBB745:
 16683              		.loc 3 107 3 discriminator 1 view .LVU5948
 16684              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16685              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU5949
 16686 5778 4C89CA   		mov	rdx, r9	#, pretmp_199
 16687 577b 488D3500 		lea	rsi, .LC9[rip]	#,
 16687      000000
 16688 5782 BF010000 		mov	edi, 1	#,
 16688      00
 16689 5787 31C0     		xor	eax, eax	#
 16690 5789 E8000000 		call	__printf_chk@PLT	#
 16690      00
GAS LISTING /tmp/cct11Qa0.s 			page 444


 16691              	.LVL1086:
 16692              		.loc 3 107 10 discriminator 1 view .LVU5950
 16693              	.LBE745:
 16694              	.LBE744:
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 16695              		.loc 1 983 5 is_stmt 1 discriminator 1 view .LVU5951
 16696              	.L1539:
 987:sieve_extend.c ****     return (valid);
 16697              		.loc 1 987 5 view .LVU5952
 16698              	# sieve_extend.c:987:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
 987:sieve_extend.c ****     return (valid);
 16699              		.loc 1 987 8 is_stmt 0 view .LVU5953
 16700 578e 83FB02   		cmp	ebx, 2	# option_verboselevel,
 16701 5791 0F8E4C02 		jle	.L1519	#,
 16701      0000
 16702 5797 4584F6   		test	r14b, r14b	# _135
 16703 579a 0F844302 		je	.L1519	#,
 16703      0000
 987:sieve_extend.c ****     return (valid);
 16704              		.loc 1 987 45 is_stmt 1 discriminator 1 view .LVU5954
 16705              	.LBB746:
 16706              	.LBI746:
 941:sieve_extend.c ****     printf("DeepAnalyzing\n");
 16707              		.loc 1 941 13 discriminator 1 view .LVU5955
 16708              	.LVL1087:
 16709              	.LBB747:
 942:sieve_extend.c ****     counter_t warn_prime = 0;
 16710              		.loc 1 942 5 discriminator 1 view .LVU5956
 16711              	.LBB748:
 16712              	.LBI748:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16713              		.loc 3 105 1 discriminator 1 view .LVU5957
 16714              	.LBB749:
 16715              		.loc 3 107 3 discriminator 1 view .LVU5958
 16716              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16717              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU5959
 16718 57a0 488D3D00 		lea	rdi, .LC11[rip]	#,
 16718      000000
 16719 57a7 E8000000 		call	puts@PLT	#
 16719      00
 16720              	.LVL1088:
 16721              		.loc 3 107 10 discriminator 1 view .LVU5960
 16722              	.LBE749:
 16723              	.LBE748:
 943:sieve_extend.c ****     counter_t warn_nonprime = 0;
 16724              		.loc 1 943 5 is_stmt 1 discriminator 1 view .LVU5961
 944:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 16725              		.loc 1 944 5 discriminator 1 view .LVU5962
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16726              		.loc 1 945 5 discriminator 1 view .LVU5963
 16727              	.LBB750:
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16728              		.loc 1 945 10 discriminator 1 view .LVU5964
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16729              		.loc 1 945 31 discriminator 1 view .LVU5965
 16730              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
GAS LISTING /tmp/cct11Qa0.s 			page 445


 16731              		.loc 1 945 44 is_stmt 0 discriminator 1 view .LVU5966
 16732 57ac 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 16733              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16734              		.loc 1 945 5 discriminator 1 view .LVU5967
 16735 57b0 4883FF01 		cmp	rdi, 1	# _137,
 16736 57b4 0F862902 		jbe	.L1519	#,
 16736      0000
 16737              	.LBB751:
 16738              	.LBB752:
 16739              	.LBB753:
 16740              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16741              		.loc 3 107 10 view .LVU5968
 16742 57ba 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 16742      24
 16743              	.LBE753:
 16744              	.LBE752:
 16745              	.LBE751:
 16746              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16747              		.loc 1 945 5 view .LVU5969
 16748 57bf 41BE0200 		mov	r14d, 2	# ivtmp.703,
 16748      0000
 16749 57c5 41BC0300 		mov	r12d, 3	# ivtmp.701,
 16749      0000
 16750              	.LBE750:
 16751              	# sieve_extend.c:943:     counter_t warn_prime = 0;
 943:sieve_extend.c ****     counter_t warn_nonprime = 0;
 16752              		.loc 1 943 15 view .LVU5970
 16753 57cb 4531C0   		xor	r8d, r8d	# warn_prime
 16754              	# sieve_extend.c:944:     counter_t warn_nonprime = 0;
 944:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 16755              		.loc 1 944 15 view .LVU5971
 16756 57ce 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 16756      18000000 
 16756      00
 16757              	.LBB772:
 16758              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 16759              		.loc 1 945 20 view .LVU5972
 16760 57d7 41BF0100 		mov	r15d, 1	# prime,
 16760      0000
 16761              	.LBB760:
 16762              	.LBB757:
 16763              	.LBB754:
 16764              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16765              		.loc 3 107 10 view .LVU5973
 16766 57dd 4989ED   		mov	r13, rbp	# sieve, sieve
 16767              	.LVL1089:
 16768              		.p2align 4
 16769              		.p2align 3
 16770              	.L1549:
 16771              		.loc 3 107 10 view .LVU5974
 16772              	.LBE754:
 16773              	.LBE757:
 16774              	.LBE760:
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/cct11Qa0.s 			page 446


 16775              		.loc 1 946 9 is_stmt 1 view .LVU5975
 16776              	# sieve_extend.c:946:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 16777              		.loc 1 946 29 is_stmt 0 view .LVU5976
 16778 57e0 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 16779              	# sieve_extend.c:946:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 16780              		.loc 1 946 30 view .LVU5977
 16781 57e4 4C89FB   		mov	rbx, r15	# tmp198, prime
 16782 57e7 48C1EB06 		shr	rbx, 6	# tmp198,
 16783              	# sieve_extend.c:946:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 16784              		.loc 1 946 71 view .LVU5978
 16785 57eb 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 16785      00
 16786 57f0 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 16786      C9
 16787              	# sieve_extend.c:946:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { 
 946:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 16788              		.loc 1 946 12 view .LVU5979
 16789 57f5 83E101   		and	ecx, 1	# c,
 16790 57f8 0F84BA02 		je	.L1541	#,
 16790      0000
 16791              	.LVL1090:
 16792              	.LBB761:
 16793              	.LBB762:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16794              		.loc 1 955 32 is_stmt 1 view .LVU5980
 16795              	.LBE762:
 16796              	# sieve_extend.c:954:             counter_t c_prime = 0;
 954:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 16797              		.loc 1 954 23 is_stmt 0 view .LVU5981
 16798 57fe 31ED     		xor	ebp, ebp	# c_prime
 16799              	.LBB763:
 16800              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16801              		.loc 1 955 13 view .LVU5982
 16802 5800 4885FF   		test	rdi, rdi	# _137
 16803 5803 BE030000 		mov	esi, 3	# ivtmp.693,
 16803      00
 16804 5808 0F84E103 		je	.L1653	#,
 16804      0000
 16805 580e 4989FB   		mov	r11, rdi	# tmp231, _137
 16806 5811 4929CB   		sub	r11, rcx	# tmp231, c
 16807 5814 4183E303 		and	r11d, 3	# tmp231,
 16808 5818 4D89DA   		mov	r10, r11	# tmp232, tmp231
 16809 581b 0F84BF00 		je	.L1542	#,
 16809      0000
 16810              	.LVL1091:
 956:sieve_extend.c ****             }
 16811              		.loc 1 956 17 is_stmt 1 view .LVU5983
 16812              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16813              		.loc 1 956 48 is_stmt 0 view .LVU5984
 16814 5821 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 16815 5825 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.703
 16816 5828 7411     		je	.L1594	#,
GAS LISTING /tmp/cct11Qa0.s 			page 447


 16817              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16818              		.loc 1 956 33 view .LVU5985
 16819 582a 31D2     		xor	edx, edx	# tmp241
 16820 582c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.701
 16821 582f 48F7F6   		div	rsi	# ivtmp.693
 16822              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16823              		.loc 1 956 82 view .LVU5986
 16824 5832 31ED     		xor	ebp, ebp	# c_prime
 956:sieve_extend.c ****             }
 16825              		.loc 1 956 82 view .LVU5987
 16826 5834 4885D2   		test	rdx, rdx	# tmp241
 16827 5837 400F94C5 		sete	bpl	#, c_prime
 16828              	.LVL1092:
 16829              	.L1594:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16830              		.loc 1 955 68 is_stmt 1 view .LVU5988
 16831              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16832              		.loc 1 955 69 is_stmt 0 view .LVU5989
 16833 583b 4883C101 		add	rcx, 1	# c,
 16834              	.LVL1093:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16835              		.loc 1 955 32 is_stmt 1 view .LVU5990
 16836              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16837              		.loc 1 955 13 is_stmt 0 view .LVU5991
 16838 583f 4839F9   		cmp	rcx, rdi	# c, _137
 16839 5842 0F877801 		ja	.L1548	#,
 16839      0000
 16840              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16841              		.loc 1 955 51 view .LVU5992
 16842 5848 4989C9   		mov	r9, rcx	# tmp244, c
 16843 584b BE050000 		mov	esi, 5	# ivtmp.693,
 16843      00
 16844 5850 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 16845              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16846              		.loc 1 955 47 view .LVU5993
 16847 5854 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.701
 16848 5857 0F876301 		ja	.L1548	#,
 16848      0000
 16849 585d 4983FA01 		cmp	r10, 1	# tmp232,
 16850 5861 747D     		je	.L1542	#,
 16851 5863 4983FA02 		cmp	r10, 2	# tmp232,
 16852 5867 7438     		je	.L1625	#,
 956:sieve_extend.c ****             }
 16853              		.loc 1 956 17 is_stmt 1 view .LVU5994
 16854              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16855              		.loc 1 956 48 is_stmt 0 view .LVU5995
 16856 5869 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 16857 586d 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.703
 16858 5870 7417     		je	.L1596	#,
 16859              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
GAS LISTING /tmp/cct11Qa0.s 			page 448


 956:sieve_extend.c ****             }
 16860              		.loc 1 956 33 view .LVU5996
 16861 5872 31D2     		xor	edx, edx	# tmp247
 16862 5874 4C89E0   		mov	rax, r12	# tmp248, ivtmp.701
 16863 5877 48F7F6   		div	rsi	# ivtmp.693
 16864              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16865              		.loc 1 956 20 view .LVU5997
 16866 587a 4885D2   		test	rdx, rdx	# tmp247
 16867 587d 410F94C3 		sete	r11b	#, tmp249
 16868              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16869              		.loc 1 956 82 view .LVU5998
 16870 5881 4180FB01 		cmp	r11b, 1	# tmp249,
 16871 5885 4883DDFF 		sbb	rbp, -1	# c_prime,
 16872              	.LVL1094:
 16873              	.L1596:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16874              		.loc 1 955 68 is_stmt 1 view .LVU5999
 16875              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16876              		.loc 1 955 69 is_stmt 0 view .LVU6000
 16877 5889 4883C101 		add	rcx, 1	# c,
 16878              	.LVL1095:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16879              		.loc 1 955 32 is_stmt 1 view .LVU6001
 16880 588d 4883C602 		add	rsi, 2	# ivtmp.693,
 16881              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16882              		.loc 1 955 51 is_stmt 0 view .LVU6002
 16883 5891 4989CA   		mov	r10, rcx	# tmp250, c
 16884 5894 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 16885              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16886              		.loc 1 955 47 view .LVU6003
 16887 5898 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.701
 16888 589b 0F871F01 		ja	.L1548	#,
 16888      0000
 16889              	.L1625:
 956:sieve_extend.c ****             }
 16890              		.loc 1 956 17 is_stmt 1 view .LVU6004
 16891              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16892              		.loc 1 956 48 is_stmt 0 view .LVU6005
 16893 58a1 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 16894 58a5 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.703
 16895 58a8 7415     		je	.L1599	#,
 16896              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16897              		.loc 1 956 33 view .LVU6006
 16898 58aa 31D2     		xor	edx, edx	# tmp253
 16899 58ac 4C89E0   		mov	rax, r12	# tmp254, ivtmp.701
 16900 58af 48F7F6   		div	rsi	# ivtmp.693
 16901              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16902              		.loc 1 956 20 view .LVU6007
 16903 58b2 4885D2   		test	rdx, rdx	# tmp253
GAS LISTING /tmp/cct11Qa0.s 			page 449


 16904 58b5 0F94C3   		sete	bl	#, tmp255
 16905              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16906              		.loc 1 956 82 view .LVU6008
 16907 58b8 80FB01   		cmp	bl, 1	# tmp255,
 16908 58bb 4883DDFF 		sbb	rbp, -1	# c_prime,
 16909              	.LVL1096:
 16910              	.L1599:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16911              		.loc 1 955 68 is_stmt 1 view .LVU6009
 16912              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16913              		.loc 1 955 69 is_stmt 0 view .LVU6010
 16914 58bf 4883C101 		add	rcx, 1	# c,
 16915              	.LVL1097:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16916              		.loc 1 955 32 is_stmt 1 view .LVU6011
 16917 58c3 4883C602 		add	rsi, 2	# ivtmp.693,
 16918              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16919              		.loc 1 955 51 is_stmt 0 view .LVU6012
 16920 58c7 4989CB   		mov	r11, rcx	# tmp256, c
 16921 58ca 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 16922              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16923              		.loc 1 955 47 view .LVU6013
 16924 58ce 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.701
 16925 58d1 0F87E900 		ja	.L1548	#,
 16925      0000
 16926              	.LVL1098:
 16927 58d7 660F1F84 		.p2align 4
 16927      00000000 
 16927      00
 16928              		.p2align 3
 16929              	.L1542:
 956:sieve_extend.c ****             }
 16930              		.loc 1 956 17 is_stmt 1 view .LVU6014
 16931              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16932              		.loc 1 956 48 is_stmt 0 view .LVU6015
 16933 58e0 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 16934 58e4 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.703
 16935 58e7 7417     		je	.L1547	#,
 16936              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16937              		.loc 1 956 33 view .LVU6016
 16938 58e9 31D2     		xor	edx, edx	# tmp214
 16939 58eb 4C89E0   		mov	rax, r12	# tmp215, ivtmp.701
 16940 58ee 48F7F6   		div	rsi	# ivtmp.693
 16941              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16942              		.loc 1 956 20 view .LVU6017
 16943 58f1 4885D2   		test	rdx, rdx	# tmp214
 16944 58f4 410F94C1 		sete	r9b	#, tmp217
 16945              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16946              		.loc 1 956 82 view .LVU6018
GAS LISTING /tmp/cct11Qa0.s 			page 450


 16947 58f8 4180F901 		cmp	r9b, 1	# tmp217,
 16948 58fc 4883DDFF 		sbb	rbp, -1	# c_prime,
 16949              	.LVL1099:
 16950              	.L1547:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16951              		.loc 1 955 68 is_stmt 1 view .LVU6019
 16952              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16953              		.loc 1 955 69 is_stmt 0 view .LVU6020
 16954 5900 4883C101 		add	rcx, 1	# tmp234,
 16955              	.LVL1100:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16956              		.loc 1 955 32 is_stmt 1 view .LVU6021
 16957              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16958              		.loc 1 955 13 is_stmt 0 view .LVU6022
 16959 5904 4839F9   		cmp	rcx, rdi	# tmp234, _137
 16960 5907 0F87B300 		ja	.L1548	#,
 16960      0000
 16961              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16962              		.loc 1 955 51 view .LVU6023
 16963 590d 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 16964 5910 4883C602 		add	rsi, 2	# tmp233,
 16965 5914 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 16966              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16967              		.loc 1 955 47 view .LVU6024
 16968 5918 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.701
 16969 591b 0F879F00 		ja	.L1548	#,
 16969      0000
 956:sieve_extend.c ****             }
 16970              		.loc 1 956 17 is_stmt 1 view .LVU6025
 16971              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16972              		.loc 1 956 48 is_stmt 0 view .LVU6026
 16973 5921 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 16974 5925 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.703
 16975 5928 7417     		je	.L1603	#,
 16976              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16977              		.loc 1 956 33 view .LVU6027
 16978 592a 31D2     		xor	edx, edx	# tmp259
 16979 592c 4C89E0   		mov	rax, r12	# tmp260, ivtmp.701
 16980 592f 48F7F6   		div	rsi	# tmp233
 16981              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16982              		.loc 1 956 20 view .LVU6028
 16983 5932 4885D2   		test	rdx, rdx	# tmp259
 16984 5935 410F94C2 		sete	r10b	#, tmp261
 16985              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 16986              		.loc 1 956 82 view .LVU6029
 16987 5939 4180FA01 		cmp	r10b, 1	# tmp261,
 16988 593d 4883DDFF 		sbb	rbp, -1	# c_prime,
 16989              	.LVL1101:
 16990              	.L1603:
GAS LISTING /tmp/cct11Qa0.s 			page 451


 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16991              		.loc 1 955 68 is_stmt 1 view .LVU6030
 16992              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16993              		.loc 1 955 69 is_stmt 0 view .LVU6031
 16994 5941 4C8D4901 		lea	r9, 1[rcx]	# c,
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16995              		.loc 1 955 32 is_stmt 1 view .LVU6032
 16996 5945 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.693,
 16997              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 16998              		.loc 1 955 51 is_stmt 0 view .LVU6033
 16999 5949 4D89CB   		mov	r11, r9	# tmp264, c
 17000 594c 4D0FAFD9 		imul	r11, r9	# tmp264, c
 17001              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17002              		.loc 1 955 47 view .LVU6034
 17003 5950 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.701
 17004 5953 776B     		ja	.L1548	#,
 956:sieve_extend.c ****             }
 17005              		.loc 1 956 17 is_stmt 1 view .LVU6035
 17006              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 17007              		.loc 1 956 48 is_stmt 0 view .LVU6036
 17008 5955 4D01C9   		add	r9, r9	# tmp265
 17009 5958 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.703
 17010 595b 7417     		je	.L1605	#,
 17011              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 17012              		.loc 1 956 33 view .LVU6037
 17013 595d 31D2     		xor	edx, edx	# tmp267
 17014 595f 4C89E0   		mov	rax, r12	# tmp268, ivtmp.701
 17015 5962 48F7F3   		div	rbx	# ivtmp.693
 17016              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 17017              		.loc 1 956 20 view .LVU6038
 17018 5965 4885D2   		test	rdx, rdx	# tmp267
 17019 5968 410F94C2 		sete	r10b	#, tmp269
 17020              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 17021              		.loc 1 956 82 view .LVU6039
 17022 596c 4180FA01 		cmp	r10b, 1	# tmp269,
 17023 5970 4883DDFF 		sbb	rbp, -1	# c_prime,
 17024              	.LVL1102:
 17025              	.L1605:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17026              		.loc 1 955 68 is_stmt 1 view .LVU6040
 17027              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17028              		.loc 1 955 69 is_stmt 0 view .LVU6041
 17029 5974 4C8D4902 		lea	r9, 2[rcx]	# c,
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17030              		.loc 1 955 32 is_stmt 1 view .LVU6042
 17031 5978 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.693,
 17032              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17033              		.loc 1 955 51 is_stmt 0 view .LVU6043
GAS LISTING /tmp/cct11Qa0.s 			page 452


 17034 597c 4D89CB   		mov	r11, r9	# tmp272, c
 17035 597f 4D0FAFD9 		imul	r11, r9	# tmp272, c
 17036              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17037              		.loc 1 955 47 view .LVU6044
 17038 5983 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.701
 17039 5986 7738     		ja	.L1548	#,
 956:sieve_extend.c ****             }
 17040              		.loc 1 956 17 is_stmt 1 view .LVU6045
 17041              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 17042              		.loc 1 956 48 is_stmt 0 view .LVU6046
 17043 5988 4D01C9   		add	r9, r9	# tmp273
 17044 598b 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.703
 17045 598e 7417     		je	.L1607	#,
 17046              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 17047              		.loc 1 956 33 view .LVU6047
 17048 5990 31D2     		xor	edx, edx	# tmp275
 17049 5992 4C89E0   		mov	rax, r12	# tmp276, ivtmp.701
 17050 5995 48F7F3   		div	rbx	# ivtmp.693
 17051              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 17052              		.loc 1 956 20 view .LVU6048
 17053 5998 4885D2   		test	rdx, rdx	# tmp275
 17054 599b 410F94C2 		sete	r10b	#, tmp277
 17055              	# sieve_extend.c:956:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 956:sieve_extend.c ****             }
 17056              		.loc 1 956 82 view .LVU6049
 17057 599f 4180FA01 		cmp	r10b, 1	# tmp277,
 17058 59a3 4883DDFF 		sbb	rbp, -1	# c_prime,
 17059              	.LVL1103:
 17060              	.L1607:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17061              		.loc 1 955 68 is_stmt 1 view .LVU6050
 17062              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17063              		.loc 1 955 69 is_stmt 0 view .LVU6051
 17064 59a7 4883C103 		add	rcx, 3	# c,
 17065              	.LVL1104:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17066              		.loc 1 955 32 is_stmt 1 view .LVU6052
 17067 59ab 4883C606 		add	rsi, 6	# ivtmp.693,
 17068              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17069              		.loc 1 955 51 is_stmt 0 view .LVU6053
 17070 59af 4989C9   		mov	r9, rcx	# tmp278, c
 17071 59b2 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 17072              	# sieve_extend.c:955:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17073              		.loc 1 955 47 view .LVU6054
 17074 59b6 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.701
 17075 59b9 0F8621FF 		jbe	.L1542	#,
 17075      FFFF
 17076              	.LVL1105:
 17077 59bf 90       		.p2align 4
 17078              		.p2align 3
GAS LISTING /tmp/cct11Qa0.s 			page 453


 17079              	.L1548:
 955:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 17080              		.loc 1 955 47 view .LVU6055
 17081              	.LBE763:
 958:sieve_extend.c ****         }
 17082              		.loc 1 958 13 is_stmt 1 view .LVU6056
 17083              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 17084              		.loc 1 958 16 is_stmt 0 view .LVU6057
 17085 59c0 4885ED   		test	rbp, rbp	# c_prime
 17086 59c3 0F840D02 		je	.L1666	#,
 17086      0000
 17087              	.LVL1106:
 17088              	.L1545:
 958:sieve_extend.c ****         }
 17089              		.loc 1 958 16 view .LVU6058
 17090              	.LBE761:
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17091              		.loc 1 945 52 is_stmt 1 view .LVU6059
 17092              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17093              		.loc 1 945 57 is_stmt 0 view .LVU6060
 17094 59c9 4983C701 		add	r15, 1	# prime,
 17095              	.LVL1107:
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17096              		.loc 1 945 31 is_stmt 1 view .LVU6061
 17097 59cd 4983C402 		add	r12, 2	# ivtmp.701,
 17098 59d1 4983C602 		add	r14, 2	# ivtmp.703,
 17099              	# sieve_extend.c:945:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17100              		.loc 1 945 5 is_stmt 0 view .LVU6062
 17101 59d5 4939FF   		cmp	r15, rdi	# prime, _137
 17102 59d8 0F8202FE 		jb	.L1549	#,
 17102      FFFF
 17103              	.LVL1108:
 17104              	.L1655:
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17105              		.loc 1 945 5 view .LVU6063
 17106 59de 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 17106      24
 17107              	.LVL1109:
 17108              	.L1519:
 945:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17109              		.loc 1 945 5 view .LVU6064
 17110              	.LBE772:
 17111              	.LBE747:
 17112              	.LBE746:
 17113              	# sieve_extend.c:989: }
 989:sieve_extend.c **** 
 17114              		.loc 1 989 1 view .LVU6065
 17115 59e3 488D6424 		lea	rsp, 56[rsp]	#,
 17115      38
 17116              		.cfi_remember_state
 17117              		.cfi_def_cfa_offset 56
 17118 59e8 4489E8   		mov	eax, r13d	#, <retval>
 17119 59eb 5B       		pop	rbx	#
 17120              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/cct11Qa0.s 			page 454


 17121 59ec 5D       		pop	rbp	#
 17122              		.cfi_def_cfa_offset 40
 17123 59ed 415C     		pop	r12	#
 17124              		.cfi_def_cfa_offset 32
 17125 59ef 415D     		pop	r13	#
 17126              		.cfi_def_cfa_offset 24
 17127 59f1 415E     		pop	r14	#
 17128              		.cfi_def_cfa_offset 16
 17129 59f3 415F     		pop	r15	#
 17130              		.cfi_def_cfa_offset 8
 17131 59f5 C3       		ret	
 17132              	.LVL1110:
 17133              	.L1664:
 17134              		.cfi_restore_state
 17135              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17136              		.loc 1 968 5 view .LVU6066
 17137 59f6 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 17137      030000
 17138 59fd 0F84E602 		je	.L1526	#,
 17138      0000
 17139 5a03 7633     		jbe	.L1667	#,
 17140 5a05 4981F910 		cmp	r9, 10000	# pretmp_199,
 17140      270000
 17141 5a0c 0F852303 		jne	.L1530	#,
 17141      0000
 17142 5a12 4981F8CD 		cmp	r8, 1229	# primeCount,
 17142      040000
 17143              	# sieve_extend.c:972:         case 10000:         valid_primes = 1229;     break;
 972:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17144              		.loc 1 972 42 view .LVU6067
 17145 5a19 B9CD0400 		mov	ecx, 1229	# valid_primes,
 17145      00
 17146 5a1e 400F94C6 		sete	sil	#, tmp179
 17147 5a22 21F2     		and	edx, esi	# _251, tmp179
 17148 5a24 4981F8CD 		cmp	r8, 1229	# primeCount,
 17148      040000
 17149 5a2b 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 17150 5a2f 410F95C6 		setne	r14b	#, _135
 972:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17151              		.loc 1 972 29 is_stmt 1 view .LVU6068
 17152              	.LVL1111:
 972:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17153              		.loc 1 972 54 view .LVU6069
 17154              	# sieve_extend.c:972:         case 10000:         valid_primes = 1229;     break;
 972:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 17155              		.loc 1 972 9 is_stmt 0 view .LVU6070
 17156 5a33 E938FDFF 		jmp	.L1537	#
 17156      FF
 17157              	.LVL1112:
 17158              	.L1667:
 17159              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17160              		.loc 1 968 5 view .LVU6071
 17161 5a38 4983F90A 		cmp	r9, 10	# pretmp_199,
 17162 5a3c 0F841A02 		je	.L1528	#,
 17162      0000
GAS LISTING /tmp/cct11Qa0.s 			page 455


 17163 5a42 4983F964 		cmp	r9, 100	# pretmp_199,
 17164 5a46 0F85E902 		jne	.L1530	#,
 17164      0000
 17165 5a4c 4983F819 		cmp	r8, 25	# primeCount,
 17166 5a50 0F94C1   		sete	cl	#, tmp173
 17167 5a53 21CA     		and	edx, ecx	# _251, tmp173
 17168 5a55 4983F819 		cmp	r8, 25	# primeCount,
 17169 5a59 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 17170 5a5d 410F95C6 		setne	r14b	#, _135
 17171              	# sieve_extend.c:970:         case 100:           valid_primes = 25;       break;
 970:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 17172              		.loc 1 970 42 view .LVU6072
 17173 5a61 B9190000 		mov	ecx, 25	# valid_primes,
 17173      00
 17174 5a66 E905FDFF 		jmp	.L1537	#
 17174      FF
 17175 5a6b 0F1F4400 		.p2align 4,,7
 17175      00
 17176              		.p2align 3
 17177              	.L1665:
 17178              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17179              		.loc 1 968 5 view .LVU6073
 17180 5a70 4981F940 		cmp	r9, 1000000	# pretmp_199,
 17180      420F00
 17181 5a77 0F84B801 		je	.L1534	#,
 17181      0000
 17182 5a7d 4981F980 		cmp	r9, 10000000	# pretmp_199,
 17182      969800
 17183 5a84 0F85AB02 		jne	.L1530	#,
 17183      0000
 17184 5a8a 4981F803 		cmp	r8, 664579	# primeCount,
 17184      240A00
 17185              	# sieve_extend.c:975:         case 10000000:      valid_primes = 664579;   break;
 975:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17186              		.loc 1 975 42 view .LVU6074
 17187 5a91 B903240A 		mov	ecx, 664579	# valid_primes,
 17187      00
 17188 5a96 410F94C7 		sete	r15b	#, tmp185
 17189 5a9a 4421FA   		and	edx, r15d	# _251, tmp185
 17190 5a9d 4981F803 		cmp	r8, 664579	# primeCount,
 17190      240A00
 17191 5aa4 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 17192 5aa8 410F95C6 		setne	r14b	#, _135
 975:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17193              		.loc 1 975 29 is_stmt 1 view .LVU6075
 17194              	.LVL1113:
 975:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17195              		.loc 1 975 54 view .LVU6076
 17196              	# sieve_extend.c:975:         case 10000000:      valid_primes = 664579;   break;
 975:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 17197              		.loc 1 975 9 is_stmt 0 view .LVU6077
 17198 5aac E9BFFCFF 		jmp	.L1537	#
 17198      FF
 17199              	.LVL1114:
 17200              		.p2align 4,,7
 17201 5ab1 0F1F8000 		.p2align 3
GAS LISTING /tmp/cct11Qa0.s 			page 456


 17201      000000
 17202              	.L1541:
 17203              	.LBB777:
 17204              	.LBB775:
 17205              	.LBB773:
 17206              	.LBB770:
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17207              		.loc 1 947 32 is_stmt 1 view .LVU6078
 17208              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17209              		.loc 1 947 13 is_stmt 0 view .LVU6079
 17210 5ab8 4885FF   		test	rdi, rdi	# _137
 17211 5abb 0F841DFF 		je	.L1655	#,
 17211      FFFF
 17212              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17213              		.loc 1 947 27 view .LVU6080
 17214 5ac1 BB010000 		mov	ebx, 1	# c,
 17214      00
 17215 5ac6 EB20     		jmp	.L1546	#
 17216              	.LVL1115:
 17217              		.p2align 4,,7
 17218              		.p2align 3
 17219              	.L1555:
 17220              	# sieve_extend.c:949:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 949:sieve_extend.c ****                 }
 17221              		.loc 1 949 35 view .LVU6081
 17222 5ac8 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 17223              	.LVL1116:
 17224              	.L1544:
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17225              		.loc 1 947 68 is_stmt 1 view .LVU6082
 17226              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17227              		.loc 1 947 69 is_stmt 0 view .LVU6083
 17228 5acb 4883C301 		add	rbx, 1	# c,
 17229              	.LVL1117:
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17230              		.loc 1 947 32 is_stmt 1 view .LVU6084
 17231              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17232              		.loc 1 947 13 is_stmt 0 view .LVU6085
 17233 5acf 4839FB   		cmp	rbx, rdi	# c, _137
 17234 5ad2 0F87F1FE 		ja	.L1545	#,
 17234      FFFF
 17235              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17236              		.loc 1 947 51 view .LVU6086
 17237 5ad8 4989DB   		mov	r11, rbx	# tmp209, c
 17238 5adb 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 17239              	# sieve_extend.c:947:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 947:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 17240              		.loc 1 947 47 view .LVU6087
 17241 5adf 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.701
 17242 5ae2 0F87E1FE 		ja	.L1545	#,
 17242      FFFF
 17243              	.LVL1118:
GAS LISTING /tmp/cct11Qa0.s 			page 457


 17244              	.L1546:
 948:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17245              		.loc 1 948 17 is_stmt 1 view .LVU6088
 17246 5ae8 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
 17247 5aec 31D2     		xor	edx, edx	# tmp204
 17248 5aee 4C89E0   		mov	rax, r12	# tmp203, ivtmp.701
 17249              	# sieve_extend.c:948:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 948:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17250              		.loc 1 948 39 is_stmt 0 view .LVU6089
 17251 5af1 488D7501 		lea	rsi, 1[rbp]	# _55,
 17252 5af5 48F7F6   		div	rsi	# _55
 17253              	# sieve_extend.c:948:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 948:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17254              		.loc 1 948 48 view .LVU6090
 17255 5af8 4885D2   		test	rdx, rdx	# tmp204
 17256 5afb 75CE     		jne	.L1544	#,
 948:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 17257              		.loc 1 948 48 view .LVU6091
 17258 5afd 4939EE   		cmp	r14, rbp	# ivtmp.703, _216
 17259 5b00 74C9     		je	.L1544	#,
 949:sieve_extend.c ****                 }
 17260              		.loc 1 949 21 is_stmt 1 view .LVU6092
 17261              	# sieve_extend.c:949:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 949:sieve_extend.c ****                 }
 17262              		.loc 1 949 24 is_stmt 0 view .LVU6093
 17263 5b02 4983F81D 		cmp	r8, 29	# warn_prime,
 17264              	# sieve_extend.c:949:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 949:sieve_extend.c ****                 }
 17265              		.loc 1 949 35 view .LVU6094
 17266 5b06 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 17267              	.LVL1119:
 17268              	# sieve_extend.c:949:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 949:sieve_extend.c ****                 }
 17269              		.loc 1 949 24 view .LVU6095
 17270 5b0a 77BC     		ja	.L1555	#,
 949:sieve_extend.c ****                 }
 17271              		.loc 1 949 44 is_stmt 1 view .LVU6096
 17272              	.LVL1120:
 17273              	.LBB758:
 17274              	.LBI752:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17275              		.loc 3 105 1 view .LVU6097
 17276              	.LBB755:
 17277              		.loc 3 107 3 view .LVU6098
 17278              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17279              		.loc 3 107 10 is_stmt 0 view .LVU6099
 17280 5b0c 4989F0   		mov	r8, rsi	#, _55
 17281 5b0f 4989C1   		mov	r9, rax	#, tmp203
 17282 5b12 BF010000 		mov	edi, 1	#,
 17282      00
 17283 5b17 4C89F9   		mov	rcx, r15	#, prime
 17284 5b1a 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.701
 17285 5b1e 4C89E2   		mov	rdx, r12	#, ivtmp.701
 17286 5b21 488D3500 		lea	rsi, .LC12[rip]	#,
 17286      000000
 17287 5b28 31C0     		xor	eax, eax	#
 17288 5b2a E8000000 		call	__printf_chk@PLT	#
GAS LISTING /tmp/cct11Qa0.s 			page 458


 17288      00
 17289              	.LVL1121:
 17290 5b2f 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17291              	.LBE755:
 17292              	.LBE758:
 17293              	# sieve_extend.c:949:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 949:sieve_extend.c ****                 }
 17294              		.loc 1 949 35 view .LVU6100
 17295 5b33 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 17296              	.LBB759:
 17297              	.LBB756:
 17298              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17299              		.loc 3 107 10 view .LVU6101
 17300 5b36 EB93     		jmp	.L1544	#
 17301              	.LVL1122:
 17302              	.L1520:
 17303              		.loc 3 107 10 view .LVU6102
 17304              	.LBE756:
 17305              	.LBE759:
 17306              	.LBE770:
 17307              	.LBE773:
 17308              	.LBE775:
 17309              	.LBE777:
 17310              	.LBB778:
 17311              	.LBB743:
 938:sieve_extend.c **** }
 17312              		.loc 1 938 5 is_stmt 1 view .LVU6103
 938:sieve_extend.c **** }
 17313              		.loc 1 938 5 is_stmt 0 view .LVU6104
 17314              	.LBE743:
 17315              	.LBE778:
 967:sieve_extend.c ****     switch(sieve->size) {
 17316              		.loc 1 967 5 is_stmt 1 view .LVU6105
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17317              		.loc 1 968 5 view .LVU6106
 17318 5b38 4531ED   		xor	r13d, r13d	# <retval>
 17319 5b3b 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 17319      860100
 17320 5b42 41BE0100 		mov	r14d, 1	# _135,
 17320      0000
 17321 5b48 41B80100 		mov	r8d, 1	# primeCount,
 17321      0000
 17322 5b4e 0F842302 		je	.L1558	#,
 17322      0000
 17323 5b54 0F872301 		ja	.L1550	#,
 17323      0000
 17324 5b5a 4983F964 		cmp	r9, 100	# pretmp_199,
 17325 5b5e B9190000 		mov	ecx, 25	# valid_primes,
 17325      00
 17326 5b63 742A     		je	.L1538	#,
 17327              		.p2align 4,,2
 17328 5b65 0F864001 		jbe	.L1668	#,
 17328      0000
 17329 5b6b 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 17329      030000
 17330              	# sieve_extend.c:971:         case 1000:          valid_primes = 168;      break;
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
GAS LISTING /tmp/cct11Qa0.s 			page 459


 17331              		.loc 1 971 42 is_stmt 0 view .LVU6107
 17332 5b72 B9A80000 		mov	ecx, 168	# valid_primes,
 17332      00
 17333              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17334              		.loc 1 968 5 view .LVU6108
 17335 5b77 7416     		je	.L1538	#,
 17336 5b79 4981F910 		cmp	r9, 10000	# pretmp_199,
 17336      270000
 17337 5b80 B9CD0400 		mov	ecx, 1229	# tmp223,
 17337      00
 17338 5b85 41BA0000 		mov	r10d, 0	# tmp224,
 17338      0000
 17339 5b8b 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 17340              	.LVL1123:
 17341              	.L1538:
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17342              		.loc 1 983 5 is_stmt 1 view .LVU6109
 17343              	# sieve_extend.c:983:     if (!valid && option_verboselevel >= 1) {
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17344              		.loc 1 983 39 is_stmt 0 view .LVU6110
 17345 5b8f 85DB     		test	ebx, ebx	# option_verboselevel
 17346 5b91 410F9FC4 		setg	r12b	#, tmp194
 17347              	# sieve_extend.c:983:     if (!valid && option_verboselevel >= 1) {
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17348              		.loc 1 983 8 view .LVU6111
 17349 5b95 4520F4   		and	r12b, r14b	# _7, _135
 17350 5b98 0F84F0FB 		je	.L1539	#,
 17350      FFFF
 984:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 17351              		.loc 1 984 9 is_stmt 1 view .LVU6112
 17352              	.LVL1124:
 17353              	.LBB779:
 17354              	.LBI779:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17355              		.loc 3 105 1 view .LVU6113
 17356              	.LBB780:
 17357              		.loc 3 107 3 view .LVU6114
 17358              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17359              		.loc 3 107 10 is_stmt 0 view .LVU6115
 17360 5b9e 31C0     		xor	eax, eax	#
 17361 5ba0 4C89CA   		mov	rdx, r9	#, pretmp_199
 17362 5ba3 488D3500 		lea	rsi, .LC10[rip]	#,
 17362      000000
 17363 5baa BF010000 		mov	edi, 1	#,
 17363      00
 17364 5baf E8000000 		call	__printf_chk@PLT	#
 17364      00
 17365              	.LVL1125:
 17366              		.loc 3 107 10 view .LVU6116
 17367              	.LBE780:
 17368              	.LBE779:
 985:sieve_extend.c ****     }
 17369              		.loc 1 985 9 is_stmt 1 view .LVU6117
 17370              	# sieve_extend.c:985:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_sh
 985:sieve_extend.c ****     }
 17371              		.loc 1 985 12 is_stmt 0 view .LVU6118
GAS LISTING /tmp/cct11Qa0.s 			page 460


 17372 5bb4 83FB01   		cmp	ebx, 1	# option_verboselevel,
 17373 5bb7 0F8426FE 		je	.L1519	#,
 17373      FFFF
 985:sieve_extend.c ****     }
 17374              		.loc 1 985 49 is_stmt 1 discriminator 1 view .LVU6119
 17375 5bbd 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 17376 5bc1 BA640000 		mov	edx, 100	#,
 17376      00
 17377 5bc6 4889EF   		mov	rdi, rbp	#, sieve
 17378              	# sieve_extend.c:983:     if (!valid && option_verboselevel >= 1) {
 983:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17379              		.loc 1 983 9 is_stmt 0 discriminator 1 view .LVU6120
 17380 5bc9 4589E6   		mov	r14d, r12d	# _135, _7
 17381              	# sieve_extend.c:985:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_sh
 985:sieve_extend.c ****     }
 17382              		.loc 1 985 49 discriminator 1 view .LVU6121
 17383 5bcc E80FD7FF 		call	show_primes.isra.0	#
 17383      FF
 17384              	.LVL1126:
 17385 5bd1 E9B8FBFF 		jmp	.L1539	#
 17385      FF
 17386              	.LVL1127:
 17387              	.L1666:
 17388              	.LBB781:
 17389              	.LBB776:
 17390              	.LBB774:
 17391              	.LBB771:
 17392              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 17393              		.loc 1 958 44 view .LVU6122
 17394 5bd6 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 17394      18
 17395              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 17396              		.loc 1 958 28 view .LVU6123
 17397 5bdb 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 17398              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 17399              		.loc 1 958 44 view .LVU6124
 17400 5bdf 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 17401              	.LVL1128:
 17402              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 17403              		.loc 1 958 28 view .LVU6125
 17404 5be3 761D     		jbe	.L1553	#,
 17405              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 17406              		.loc 1 958 44 view .LVU6126
 17407 5be5 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 17407      18
 17408 5bea E9DAFDFF 		jmp	.L1545	#
 17408      FF
 17409              	.LVL1129:
 17410              	.L1653:
 958:sieve_extend.c ****         }
 17411              		.loc 1 958 44 view .LVU6127
 17412 5bef 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
GAS LISTING /tmp/cct11Qa0.s 			page 461


 17412      18
 17413              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 17414              		.loc 1 958 28 view .LVU6128
 17415 5bf4 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 17416              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 17417              		.loc 1 958 44 view .LVU6129
 17418 5bf8 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 17419              	.LVL1130:
 17420              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 17421              		.loc 1 958 28 view .LVU6130
 17422 5bfc 0F87DCFD 		ja	.L1655	#,
 17422      FFFF
 17423              	.LVL1131:
 17424              	.L1553:
 17425              	.LBB764:
 17426              	.LBB765:
 17427              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17428              		.loc 3 107 10 view .LVU6131
 17429 5c02 BF010000 		mov	edi, 1	#,
 17429      00
 17430              	.LBE765:
 17431              	.LBE764:
 17432              	# sieve_extend.c:958:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 958:sieve_extend.c ****         }
 17433              		.loc 1 958 53 view .LVU6132
 17434 5c07 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 17434      01
 17435              	.LBB768:
 17436              	.LBB766:
 17437              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17438              		.loc 3 107 10 view .LVU6133
 17439 5c0c 4C89F9   		mov	rcx, r15	#, prime
 17440 5c0f 488D3500 		lea	rsi, .LC13[rip]	#,
 17440      000000
 17441 5c16 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 17441      28
 17442              	.LBE766:
 17443              	.LBE768:
 958:sieve_extend.c ****         }
 17444              		.loc 1 958 53 is_stmt 1 view .LVU6134
 17445              	.LVL1132:
 17446              	.LBB769:
 17447              	.LBI764:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17448              		.loc 3 105 1 view .LVU6135
 17449              	.LBB767:
 17450              		.loc 3 107 3 view .LVU6136
 17451              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17452              		.loc 3 107 10 is_stmt 0 view .LVU6137
 17453 5c1b 31C0     		xor	eax, eax	#
 17454 5c1d E8000000 		call	__printf_chk@PLT	#
 17454      00
 17455              	.LVL1133:
 17456              		.loc 3 107 10 view .LVU6138
GAS LISTING /tmp/cct11Qa0.s 			page 462


 17457 5c22 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 17458 5c26 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 17458      28
 17459 5c2b 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 17459      18
 17460 5c30 E994FDFF 		jmp	.L1545	#
 17460      FF
 17461              	.LVL1134:
 17462              	.L1534:
 17463              		.loc 3 107 10 view .LVU6139
 17464 5c35 4981F8A2 		cmp	r8, 78498	# primeCount,
 17464      320100
 17465              	.LBE767:
 17466              	.LBE769:
 17467              	.LBE771:
 17468              	.LBE774:
 17469              	.LBE776:
 17470              	.LBE781:
 17471              	# sieve_extend.c:974:         case 1000000:       valid_primes = 78498;    break;
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17472              		.loc 1 974 42 view .LVU6140
 17473 5c3c B9A23201 		mov	ecx, 78498	# valid_primes,
 17473      00
 17474 5c41 410F94C5 		sete	r13b	#, tmp183
 17475 5c45 4421EA   		and	edx, r13d	# _251, tmp183
 17476 5c48 4981F8A2 		cmp	r8, 78498	# primeCount,
 17476      320100
 17477 5c4f 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 17478 5c53 410F95C6 		setne	r14b	#, _135
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17479              		.loc 1 974 29 is_stmt 1 view .LVU6141
 17480              	.LVL1135:
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17481              		.loc 1 974 54 view .LVU6142
 17482              	# sieve_extend.c:974:         case 1000000:       valid_primes = 78498;    break;
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17483              		.loc 1 974 9 is_stmt 0 view .LVU6143
 17484 5c57 E914FBFF 		jmp	.L1537	#
 17484      FF
 17485              	.LVL1136:
 17486              	.L1528:
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17487              		.loc 1 974 9 view .LVU6144
 17488 5c5c 4983F804 		cmp	r8, 4	# primeCount,
 17489              	# sieve_extend.c:969:         case 10:            valid_primes = 4;        break;
 969:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 17490              		.loc 1 969 42 view .LVU6145
 17491 5c60 B9040000 		mov	ecx, 4	# valid_primes,
 17491      00
 17492 5c65 410F94C2 		sete	r10b	#, tmp175
 17493 5c69 4421D2   		and	edx, r10d	# _251, tmp175
 17494 5c6c 4983F804 		cmp	r8, 4	# primeCount,
 17495 5c70 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 17496 5c74 410F95C6 		setne	r14b	#, _135
 17497 5c78 E9F3FAFF 		jmp	.L1537	#
 17497      FF
 17498              	.LVL1137:
GAS LISTING /tmp/cct11Qa0.s 			page 463


 17499              	.L1550:
 17500              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17501              		.loc 1 968 5 view .LVU6146
 17502 5c7d 4981F900 		cmp	r9, 100000000	# pretmp_199,
 17502      E1F505
 17503              	# sieve_extend.c:976:         case 100000000:     valid_primes = 5761455;  break;
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17504              		.loc 1 976 42 view .LVU6147
 17505 5c84 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 17505      00
 17506              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17507              		.loc 1 968 5 view .LVU6148
 17508 5c89 0F8400FF 		je	.L1538	#,
 17508      FFFF
 17509 5c8f 762C     		jbe	.L1669	#,
 17510 5c91 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 17510      CA9A3B
 17511 5c98 B92EDF07 		mov	ecx, 50847534	# tmp227,
 17511      03
 17512 5c9d B8000000 		mov	eax, 0	# tmp228,
 17512      00
 17513 5ca2 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 17514 5ca6 E9E4FEFF 		jmp	.L1538	#
 17514      FF
 17515              	.L1668:
 17516 5cab 31C9     		xor	ecx, ecx	# valid_primes
 17517 5cad 4983F90A 		cmp	r9, 10	# pretmp_199,
 17518 5cb1 0F94C1   		sete	cl	#, valid_primes
 17519 5cb4 48C1E102 		sal	rcx, 2	# valid_primes,
 17520 5cb8 E9D2FEFF 		jmp	.L1538	#
 17520      FF
 17521              	.L1669:
 17522 5cbd 4981F940 		cmp	r9, 1000000	# pretmp_199,
 17522      420F00
 17523              	# sieve_extend.c:974:         case 1000000:       valid_primes = 78498;    break;
 974:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 17524              		.loc 1 974 42 view .LVU6149
 17525 5cc4 B9A23201 		mov	ecx, 78498	# valid_primes,
 17525      00
 17526              	# sieve_extend.c:968:     switch(sieve->size) {
 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17527              		.loc 1 968 5 view .LVU6150
 17528 5cc9 0F84C0FE 		je	.L1538	#,
 17528      FFFF
 17529 5ccf 4981F980 		cmp	r9, 10000000	# pretmp_199,
 17529      969800
 17530 5cd6 B903240A 		mov	ecx, 664579	# tmp225,
 17530      00
 17531 5cdb BE000000 		mov	esi, 0	# tmp226,
 17531      00
 17532 5ce0 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 17533 5ce4 E9A6FEFF 		jmp	.L1538	#
 17533      FF
 17534              	.LVL1138:
 17535              	.L1526:
GAS LISTING /tmp/cct11Qa0.s 			page 464


 968:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17536              		.loc 1 968 5 view .LVU6151
 17537 5ce9 4981F8A8 		cmp	r8, 168	# primeCount,
 17537      000000
 17538              	# sieve_extend.c:971:         case 1000:          valid_primes = 168;      break;
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17539              		.loc 1 971 42 view .LVU6152
 17540 5cf0 B9A80000 		mov	ecx, 168	# valid_primes,
 17540      00
 17541 5cf5 410F94C6 		sete	r14b	#, tmp177
 17542 5cf9 4421F2   		and	edx, r14d	# _251, tmp177
 17543 5cfc 4981F8A8 		cmp	r8, 168	# primeCount,
 17543      000000
 17544 5d03 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 17545 5d07 410F95C6 		setne	r14b	#, _135
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17546              		.loc 1 971 29 is_stmt 1 view .LVU6153
 17547              	.LVL1139:
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17548              		.loc 1 971 54 view .LVU6154
 17549              	# sieve_extend.c:971:         case 1000:          valid_primes = 168;      break;
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17550              		.loc 1 971 9 is_stmt 0 view .LVU6155
 17551 5d0b E960FAFF 		jmp	.L1537	#
 17551      FF
 17552              	.LVL1140:
 17553              	.L1532:
 971:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 17554              		.loc 1 971 9 view .LVU6156
 17555 5d10 4981F8AF 		cmp	r8, 5761455	# primeCount,
 17555      E95700
 17556              	# sieve_extend.c:976:         case 100000000:     valid_primes = 5761455;  break;
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17557              		.loc 1 976 42 view .LVU6157
 17558 5d17 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 17558      00
 17559 5d1c 0F94C0   		sete	al	#, tmp187
 17560 5d1f 21C2     		and	edx, eax	# _251, tmp187
 17561 5d21 4981F8AF 		cmp	r8, 5761455	# primeCount,
 17561      E95700
 17562 5d28 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 17563 5d2c 410F95C6 		setne	r14b	#, _135
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17564              		.loc 1 976 29 is_stmt 1 view .LVU6158
 17565              	.LVL1141:
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17566              		.loc 1 976 54 view .LVU6159
 17567              	# sieve_extend.c:976:         case 100000000:     valid_primes = 5761455;  break;
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17568              		.loc 1 976 9 is_stmt 0 view .LVU6160
 17569 5d30 E93BFAFF 		jmp	.L1537	#
 17569      FF
 17570              	.LVL1142:
 17571              	.L1530:
 976:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 17572              		.loc 1 976 9 view .LVU6161
 17573 5d35 4D85C0   		test	r8, r8	# primeCount
GAS LISTING /tmp/cct11Qa0.s 			page 465


 17574 5d38 410F94C3 		sete	r11b	#, tmp191
 17575 5d3c 4421DA   		and	edx, r11d	# _251, tmp191
 17576 5d3f 4D85C0   		test	r8, r8	# primeCount
 17577 5d42 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 17578 5d46 410F95C6 		setne	r14b	#, _135
 978:sieve_extend.c ****     }
 17579              		.loc 1 978 29 is_stmt 1 view .LVU6162
 17580              	# sieve_extend.c:978:         default:            valid_primes= 0;
 978:sieve_extend.c ****     }
 17581              		.loc 1 978 41 is_stmt 0 view .LVU6163
 17582 5d4a 31C9     		xor	ecx, ecx	# valid_primes
 17583 5d4c E91FFAFF 		jmp	.L1537	#
 17583      FF
 17584              	.L1524:
 978:sieve_extend.c ****     }
 17585              		.loc 1 978 41 view .LVU6164
 17586 5d51 4981F878 		cmp	r8, 9592	# primeCount,
 17586      250000
 17587              	# sieve_extend.c:973:         case 100000:        valid_primes = 9592;     break;
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 17588              		.loc 1 973 42 view .LVU6165
 17589 5d58 B9782500 		mov	ecx, 9592	# valid_primes,
 17589      00
 17590 5d5d 400F94C7 		sete	dil	#, tmp181
 17591 5d61 21FA     		and	edx, edi	# _251, tmp181
 17592 5d63 4981F878 		cmp	r8, 9592	# primeCount,
 17592      250000
 17593 5d6a 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 17594 5d6e 410F95C6 		setne	r14b	#, _135
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 17595              		.loc 1 973 29 is_stmt 1 view .LVU6166
 17596              	.LVL1143:
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 17597              		.loc 1 973 54 view .LVU6167
 17598              	# sieve_extend.c:973:         case 100000:        valid_primes = 9592;     break;
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 17599              		.loc 1 973 9 is_stmt 0 view .LVU6168
 17600 5d72 E9F9F9FF 		jmp	.L1537	#
 17600      FF
 17601              	.LVL1144:
 17602              	.L1558:
 17603              	# sieve_extend.c:973:         case 100000:        valid_primes = 9592;     break;
 973:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 17604              		.loc 1 973 42 view .LVU6169
 17605 5d77 B9782500 		mov	ecx, 9592	# valid_primes,
 17605      00
 17606 5d7c E90EFEFF 		jmp	.L1538	#
 17606      FF
 17607              		.cfi_endproc
 17608              	.LFE5347:
 17610              		.section	.rodata.str1.8
 17611 0145 000000   		.align 8
 17612              	.LC14:
 17613 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 17613      653A2025 
 17613      73205B6F 
 17613      7074696F 
GAS LISTING /tmp/cct11Qa0.s 			page 466


 17613      6E735D20 
 17614              		.section	.rodata.str1.1
 17615              	.LC15:
 17616 0031 4F707469 		.string	"Options:\n"
 17616      6F6E733A 
 17616      0A00
 17617              		.section	.rodata.str1.8
 17618 0167 00       		.align 8
 17619              	.LC16:
 17620 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 17620      76657262 
 17620      6F736520 
 17620      3C6C6576 
 17620      656C3E20 
 17621 01a3 00000000 		.align 8
 17621      00
 17622              	.LC17:
 17623 01a8 20202020 		.string	"                     1 - show phase progress\n"
 17623      20202020 
 17623      20202020 
 17623      20202020 
 17623      20202020 
 17624 01d6 0000     		.align 8
 17625              	.LC18:
 17626 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 17626      20202020 
 17626      20202020 
 17626      20202020 
 17626      20202020 
 17627 0219 00000000 		.align 8
 17627      000000
 17628              	.LC19:
 17629 0220 20202020 		.string	"                     3 - show actual work\n"
 17629      20202020 
 17629      20202020 
 17629      20202020 
 17629      20202020 
 17630 024b 00000000 		.align 8
 17630      00
 17631              	.LC20:
 17632 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 17632      63686563 
 17632      6B202020 
 17632      20202020 
 17632      20202020 
 17633 028d 000000   		.align 8
 17634              	.LC21:
 17635 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 17635      73686F77 
 17635      203C6D61 
 17635      78696D75 
 17635      6D3E2020 
 17636 02ce 0000     		.align 8
 17637              	.LC22:
 17638 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 17638      74756E65 
 17638      20203C6C 
GAS LISTING /tmp/cct11Qa0.s 			page 467


 17638      6576656C 
 17638      3E202020 
 17639 031d 000000   		.align 8
 17640              	.LC23:
 17641 0320 20202020 		.string	"                     1 - fast tuning\n"
 17641      20202020 
 17641      20202020 
 17641      20202020 
 17641      20202020 
 17642 0346 0000     		.align 8
 17643              	.LC24:
 17644 0348 20202020 		.string	"                     2 - refined tuning\n"
 17644      20202020 
 17644      20202020 
 17644      20202020 
 17644      20202020 
 17645 0371 00000000 		.align 8
 17645      000000
 17646              	.LC25:
 17647 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 17647      20202020 
 17647      20202020 
 17647      20202020 
 17647      20202020 
 17648              		.text
 17649 5d81 66662E0F 		.p2align 4
 17649      1F840000 
 17649      0000000F 
 17649      1F4000
 17650              		.globl	usage
 17652              	usage:
 17653              	.LVL1145:
 17654              	.LFB5348:
 991:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 17655              		.loc 1 991 24 is_stmt 1 view -0
 17656              		.cfi_startproc
 991:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 17657              		.loc 1 991 24 is_stmt 0 view .LVU6171
 17658 5d90 F30F1EFA 		endbr64	
 17659 5d94 50       		push	rax	#
 17660              		.cfi_def_cfa_offset 16
 17661 5d95 58       		pop	rax	#
 17662              		.cfi_def_cfa_offset 8
 992:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 17663              		.loc 1 992 5 is_stmt 1 view .LVU6172
 17664              	.LVL1146:
 17665              	.LBB782:
 17666              	.LBI782:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17667              		.loc 3 98 1 view .LVU6173
 17668              	.LBB783:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17669              		.loc 3 100 3 view .LVU6174
 17670              	.LBE783:
 17671              	.LBE782:
 17672              	# sieve_extend.c:991: void usage(char *name) {
 991:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
GAS LISTING /tmp/cct11Qa0.s 			page 468


 17673              		.loc 1 991 24 is_stmt 0 view .LVU6175
 17674 5d96 488D6424 		lea	rsp, -8[rsp]	#,
 17674      F8
 17675              		.cfi_def_cfa_offset 16
 17676              	# sieve_extend.c:991: void usage(char *name) {
 991:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 17677              		.loc 1 991 24 view .LVU6176
 17678 5d9b 4889F9   		mov	rcx, rdi	# name, tmp107
 17679              	.LBB785:
 17680              	.LBB784:
 17681              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17682              		.loc 3 100 10 view .LVU6177
 17683 5d9e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 17683      000000
 17684              	.LVL1147:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17685              		.loc 3 100 10 view .LVU6178
 17686 5da5 488D1500 		lea	rdx, .LC14[rip]	#,
 17686      000000
 17687 5dac BE010000 		mov	esi, 1	#,
 17687      00
 17688 5db1 31C0     		xor	eax, eax	#
 17689 5db3 E8000000 		call	__fprintf_chk@PLT	#
 17689      00
 17690              	.LVL1148:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17691              		.loc 3 100 10 view .LVU6179
 17692              	.LBE784:
 17693              	.LBE785:
 993:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 17694              		.loc 1 993 5 is_stmt 1 view .LVU6180
 17695              	.LBB786:
 17696              	.LBI786:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17697              		.loc 3 98 1 view .LVU6181
 17698              	.LBB787:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17699              		.loc 3 100 3 view .LVU6182
 17700              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17701              		.loc 3 100 10 is_stmt 0 view .LVU6183
 17702 5db8 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17702      000000
 17703 5dbf BA090000 		mov	edx, 9	#,
 17703      00
 17704 5dc4 BE010000 		mov	esi, 1	#,
 17704      00
 17705 5dc9 488D3D00 		lea	rdi, .LC15[rip]	#,
 17705      000000
 17706 5dd0 E8000000 		call	fwrite@PLT	#
 17706      00
 17707              	.LVL1149:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17708              		.loc 3 100 10 view .LVU6184
 17709              	.LBE787:
 17710              	.LBE786:
GAS LISTING /tmp/cct11Qa0.s 			page 469


 994:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 17711              		.loc 1 994 5 is_stmt 1 view .LVU6185
 17712              	.LBB788:
 17713              	.LBI788:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17714              		.loc 3 98 1 view .LVU6186
 17715              	.LBB789:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17716              		.loc 3 100 3 view .LVU6187
 17717              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17718              		.loc 3 100 10 is_stmt 0 view .LVU6188
 17719 5dd5 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17719      000000
 17720 5ddc BA3A0000 		mov	edx, 58	#,
 17720      00
 17721 5de1 BE010000 		mov	esi, 1	#,
 17721      00
 17722 5de6 488D3D00 		lea	rdi, .LC16[rip]	#,
 17722      000000
 17723 5ded E8000000 		call	fwrite@PLT	#
 17723      00
 17724              	.LVL1150:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17725              		.loc 3 100 10 view .LVU6189
 17726              	.LBE789:
 17727              	.LBE788:
 995:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 17728              		.loc 1 995 5 is_stmt 1 view .LVU6190
 17729              	.LBB790:
 17730              	.LBI790:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17731              		.loc 3 98 1 view .LVU6191
 17732              	.LBB791:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17733              		.loc 3 100 3 view .LVU6192
 17734              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17735              		.loc 3 100 10 is_stmt 0 view .LVU6193
 17736 5df2 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17736      000000
 17737 5df9 BA2D0000 		mov	edx, 45	#,
 17737      00
 17738 5dfe BE010000 		mov	esi, 1	#,
 17738      00
 17739 5e03 488D3D00 		lea	rdi, .LC17[rip]	#,
 17739      000000
 17740 5e0a E8000000 		call	fwrite@PLT	#
 17740      00
 17741              	.LVL1151:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17742              		.loc 3 100 10 view .LVU6194
 17743              	.LBE791:
 17744              	.LBE790:
 996:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 17745              		.loc 1 996 5 is_stmt 1 view .LVU6195
 17746              	.LBB792:
GAS LISTING /tmp/cct11Qa0.s 			page 470


 17747              	.LBI792:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17748              		.loc 3 98 1 view .LVU6196
 17749              	.LBB793:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17750              		.loc 3 100 3 view .LVU6197
 17751              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17752              		.loc 3 100 10 is_stmt 0 view .LVU6198
 17753 5e0f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17753      000000
 17754 5e16 BA400000 		mov	edx, 64	#,
 17754      00
 17755 5e1b BE010000 		mov	esi, 1	#,
 17755      00
 17756 5e20 488D3D00 		lea	rdi, .LC18[rip]	#,
 17756      000000
 17757 5e27 E8000000 		call	fwrite@PLT	#
 17757      00
 17758              	.LVL1152:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17759              		.loc 3 100 10 view .LVU6199
 17760              	.LBE793:
 17761              	.LBE792:
 997:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 17762              		.loc 1 997 5 is_stmt 1 view .LVU6200
 17763              	.LBB794:
 17764              	.LBI794:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17765              		.loc 3 98 1 view .LVU6201
 17766              	.LBB795:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17767              		.loc 3 100 3 view .LVU6202
 17768              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17769              		.loc 3 100 10 is_stmt 0 view .LVU6203
 17770 5e2c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17770      000000
 17771 5e33 BA2A0000 		mov	edx, 42	#,
 17771      00
 17772 5e38 BE010000 		mov	esi, 1	#,
 17772      00
 17773 5e3d 488D3D00 		lea	rdi, .LC19[rip]	#,
 17773      000000
 17774 5e44 E8000000 		call	fwrite@PLT	#
 17774      00
 17775              	.LVL1153:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17776              		.loc 3 100 10 view .LVU6204
 17777              	.LBE795:
 17778              	.LBE794:
 998:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 17779              		.loc 1 998 5 is_stmt 1 view .LVU6205
 17780              	.LBB796:
 17781              	.LBI796:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17782              		.loc 3 98 1 view .LVU6206
GAS LISTING /tmp/cct11Qa0.s 			page 471


 17783              	.LBB797:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17784              		.loc 3 100 3 view .LVU6207
 17785              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17786              		.loc 3 100 10 is_stmt 0 view .LVU6208
 17787 5e49 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17787      000000
 17788 5e50 BA3C0000 		mov	edx, 60	#,
 17788      00
 17789 5e55 BE010000 		mov	esi, 1	#,
 17789      00
 17790 5e5a 488D3D00 		lea	rdi, .LC20[rip]	#,
 17790      000000
 17791 5e61 E8000000 		call	fwrite@PLT	#
 17791      00
 17792              	.LVL1154:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17793              		.loc 3 100 10 view .LVU6209
 17794              	.LBE797:
 17795              	.LBE796:
 999:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 17796              		.loc 1 999 5 is_stmt 1 view .LVU6210
 17797              	.LBB798:
 17798              	.LBI798:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17799              		.loc 3 98 1 view .LVU6211
 17800              	.LBB799:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17801              		.loc 3 100 3 view .LVU6212
 17802              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17803              		.loc 3 100 10 is_stmt 0 view .LVU6213
 17804 5e66 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17804      000000
 17805 5e6d BA3D0000 		mov	edx, 61	#,
 17805      00
 17806 5e72 BE010000 		mov	esi, 1	#,
 17806      00
 17807 5e77 488D3D00 		lea	rdi, .LC21[rip]	#,
 17807      000000
 17808 5e7e E8000000 		call	fwrite@PLT	#
 17808      00
 17809              	.LVL1155:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17810              		.loc 3 100 10 view .LVU6214
 17811              	.LBE799:
 17812              	.LBE798:
1000:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 17813              		.loc 1 1000 5 is_stmt 1 view .LVU6215
 17814              	.LBB800:
 17815              	.LBI800:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17816              		.loc 3 98 1 view .LVU6216
 17817              	.LBB801:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17818              		.loc 3 100 3 view .LVU6217
GAS LISTING /tmp/cct11Qa0.s 			page 472


 17819              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17820              		.loc 3 100 10 is_stmt 0 view .LVU6218
 17821 5e83 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17821      000000
 17822 5e8a BA4C0000 		mov	edx, 76	#,
 17822      00
 17823 5e8f BE010000 		mov	esi, 1	#,
 17823      00
 17824 5e94 488D3D00 		lea	rdi, .LC22[rip]	#,
 17824      000000
 17825 5e9b E8000000 		call	fwrite@PLT	#
 17825      00
 17826              	.LVL1156:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17827              		.loc 3 100 10 view .LVU6219
 17828              	.LBE801:
 17829              	.LBE800:
1001:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 17830              		.loc 1 1001 5 is_stmt 1 view .LVU6220
 17831              	.LBB802:
 17832              	.LBI802:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17833              		.loc 3 98 1 view .LVU6221
 17834              	.LBB803:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17835              		.loc 3 100 3 view .LVU6222
 17836              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17837              		.loc 3 100 10 is_stmt 0 view .LVU6223
 17838 5ea0 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17838      000000
 17839 5ea7 BA250000 		mov	edx, 37	#,
 17839      00
 17840 5eac BE010000 		mov	esi, 1	#,
 17840      00
 17841 5eb1 488D3D00 		lea	rdi, .LC23[rip]	#,
 17841      000000
 17842 5eb8 E8000000 		call	fwrite@PLT	#
 17842      00
 17843              	.LVL1157:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17844              		.loc 3 100 10 view .LVU6224
 17845              	.LBE803:
 17846              	.LBE802:
1002:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 17847              		.loc 1 1002 5 is_stmt 1 view .LVU6225
 17848              	.LBB804:
 17849              	.LBI804:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17850              		.loc 3 98 1 view .LVU6226
 17851              	.LBB805:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17852              		.loc 3 100 3 view .LVU6227
 17853              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17854              		.loc 3 100 10 is_stmt 0 view .LVU6228
GAS LISTING /tmp/cct11Qa0.s 			page 473


 17855 5ebd 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17855      000000
 17856 5ec4 BA280000 		mov	edx, 40	#,
 17856      00
 17857 5ec9 BE010000 		mov	esi, 1	#,
 17857      00
 17858 5ece 488D3D00 		lea	rdi, .LC24[rip]	#,
 17858      000000
 17859 5ed5 E8000000 		call	fwrite@PLT	#
 17859      00
 17860              	.LVL1158:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17861              		.loc 3 100 10 view .LVU6229
 17862              	.LBE805:
 17863              	.LBE804:
1003:sieve_extend.c ****     exit(1);
 17864              		.loc 1 1003 5 is_stmt 1 view .LVU6230
 17865              	.LBB806:
 17866              	.LBI806:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17867              		.loc 3 98 1 view .LVU6231
 17868              	.LBB807:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17869              		.loc 3 100 3 view .LVU6232
 17870              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17871              		.loc 3 100 10 is_stmt 0 view .LVU6233
 17872 5eda 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 17872      000000
 17873 5ee1 488D3D00 		lea	rdi, .LC25[rip]	#,
 17873      000000
 17874 5ee8 BA350000 		mov	edx, 53	#,
 17874      00
 17875 5eed BE010000 		mov	esi, 1	#,
 17875      00
 17876 5ef2 E8000000 		call	fwrite@PLT	#
 17876      00
 17877              	.LVL1159:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17878              		.loc 3 100 10 view .LVU6234
 17879              	.LBE807:
 17880              	.LBE806:
1004:sieve_extend.c **** }
 17881              		.loc 1 1004 5 is_stmt 1 view .LVU6235
 17882 5ef7 BF010000 		mov	edi, 1	#,
 17882      00
 17883 5efc E8000000 		call	exit@PLT	#
 17883      00
 17884              	.LVL1160:
 17885              		.cfi_endproc
 17886              	.LFE5348:
 17888              		.section	.rodata.str1.1
 17889              	.LC27:
 17890 003b 56616C69 		.string	"Validating... "
 17890      64617469 
 17890      6E672E2E 
 17890      2E2000
GAS LISTING /tmp/cct11Qa0.s 			page 474


 17891              	.LC28:
 17892 004a 2D2D6865 		.string	"--help"
 17892      6C7000
 17893              	.LC29:
 17894 0051 2D2D7665 		.string	"--verbose"
 17894      72626F73 
 17894      6500
 17895              	.LC30:
 17896 005b 4E6F2076 		.string	"No verbose level specified\n"
 17896      6572626F 
 17896      7365206C 
 17896      6576656C 
 17896      20737065 
 17897              	.LC31:
 17898 0077 256400   		.string	"%d"
 17899              		.section	.rodata.str1.8
 17900 03ae 0000     		.align 8
 17901              	.LC32:
 17902 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 17902      723A2049 
 17902      6E76616C 
 17902      6964206D 
 17902      65617375 
 17903              		.section	.rodata.str1.1
 17904              	.LC33:
 17905 007a 56657262 		.string	"Verbose level set to %d\n"
 17905      6F736520 
 17905      6C657665 
 17905      6C207365 
 17905      7420746F 
 17906              	.LC34:
 17907 0093 2D2D6368 		.string	"--check"
 17907      65636B00 
 17908              	.LC35:
 17909 009b 2D2D7475 		.string	"--tune"
 17909      6E6500
 17910              	.LC36:
 17911 00a2 4E6F2074 		.string	"No tune level specified\n"
 17911      756E6520 
 17911      6C657665 
 17911      6C207370 
 17911      65636966 
 17912              		.section	.rodata.str1.8
 17913 03d5 000000   		.align 8
 17914              	.LC37:
 17915 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 17915      723A2049 
 17915      6E76616C 
 17915      69642074 
 17915      756E6520 
 17916              		.section	.rodata.str1.1
 17917              	.LC38:
 17918 00bb 54756E65 		.string	"Tune level set to %d\n"
 17918      206C6576 
 17918      656C2073 
 17918      65742074 
 17918      6F202564 
GAS LISTING /tmp/cct11Qa0.s 			page 475


 17919              	.LC39:
 17920 00d1 2D2D7368 		.string	"--show"
 17920      6F7700
 17921              	.LC40:
 17922 00d8 4E6F2073 		.string	"No show maximum specified\n"
 17922      686F7720 
 17922      6D617869 
 17922      6D756D20 
 17922      73706563 
 17923              	.LC41:
 17924 00f3 256A7500 		.string	"%ju"
 17925              		.section	.rodata.str1.8
 17926 03f7 00       		.align 8
 17927              	.LC42:
 17928 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 17928      723A2049 
 17928      6E76616C 
 17928      69642073 
 17928      686F7720 
 17929              		.section	.rodata.str1.1
 17930              	.LC43:
 17931 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 17931      206D6178 
 17931      696D756D 
 17931      20736574 
 17931      20746F20 
 17932              	.LC44:
 17933 0110 496E7661 		.string	"Invalid size %s\n"
 17933      6C696420 
 17933      73697A65 
 17933      2025730A 
 17933      00
 17934              	.LC45:
 17935 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 17935      6865636B 
 17935      696E6720 
 17935      73697A65 
 17935      20256A75 
 17936              	.LC46:
 17937 013a 2E626C6F 		.string	".blocksize %ju-"
 17937      636B7369 
 17937      7A652025 
 17937      6A752D00 
 17938              	.LC47:
 17939 014a 76616C69 		.string	"valid;"
 17939      643B00
 17940              	.LC48:
 17941 0151 2E2E2E56 		.string	"...Valid algorithm"
 17941      616C6964 
 17941      20616C67 
 17941      6F726974 
 17941      686D00
 17942              	.LC49:
 17943 0164 54756E69 		.string	"Tuning..."
 17943      6E672E2E 
 17943      2E00
 17944              		.section	.rodata.str1.8
GAS LISTING /tmp/cct11Qa0.s 			page 476


 17945 0419 00000000 		.align 8
 17945      000000
 17946              	.LC50:
 17947 0420 2E283E29 		.string	".(>)blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %
 17947      626C6F63 
 17947      6B73697A 
 17947      655F6269 
 17947      74732025 
 17948 04a7 00       		.align 8
 17949              	.LC51:
 17950 04a8 2E2E2E62 		.string	"...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep %2
 17950      6C6F636B 
 17950      73697A65 
 17950      5F626974 
 17950      73202531 
 17951 052e 0000     		.align 8
 17952              	.LC52:
 17953 0530 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 17953      72657375 
 17953      6C74732E 
 17953      20496E69 
 17953      74616C20 
 17954              		.section	.rodata.str1.1
 17955              	.LC53:
 17956 016e 42657374 		.string	"Best options"
 17956      206F7074 
 17956      696F6E73 
 17956      00
 17957              		.section	.rodata.str1.8
 17958 0582 00000000 		.align 8
 17958      0000
 17959              	.LC54:
 17960 0588 28256A75 		.string	"(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; mediumstep
 17960      2920626C 
 17960      6F636B73 
 17960      697A655F 
 17960      62697473 
 17961 0611 00000000 		.align 8
 17961      000000
 17962              	.LC55:
 17963 0618 2E426573 		.string	".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; passes %3j
 17963      74207265 
 17963      73756C74 
 17963      3A20626C 
 17963      6F636B73 
 17964              		.align 8
 17965              	.LC56:
 17966 0690 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju\n"
 17966      686D6172 
 17966      6B696E67 
 17966      2E2E2E20 
 17966      77697468 
 17967 06c3 00000000 		.align 8
 17967      00
 17968              	.LC58:
 17969 06c8 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 17969      65727661 
GAS LISTING /tmp/cct11Qa0.s 			page 477


 17969      6E64616D 
 17969      5F657874 
 17969      656E643B 
 17970 070a 00000000 		.align 8
 17970      0000
 17971              	.LC59:
 17972 0710 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 17972      6573202D 
 17972      20706572 
 17972      20352073 
 17972      65636F6E 
 17973              		.section	.rodata.str1.1
 17974              	.LC60:
 17975 017b 53686F77 		.string	"Show result set:"
 17975      20726573 
 17975      756C7420 
 17975      7365743A 
 17975      00
 17976              		.section	.text.startup,"ax",@progbits
 17977              		.p2align 4
 17978              		.globl	main
 17980              	main:
 17981              	.LVL1161:
 17982              	.LFB5352:
1048:sieve_extend.c **** 
1049:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1050:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1051:sieve_extend.c **** 
1052:sieve_extend.c ****     double best_avg = 0;
1053:sieve_extend.c ****     best_blocksize_bits = 0;
1054:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1055:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1056:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1057:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1058:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1059:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1060:sieve_extend.c ****     double sample_duration = default_sample_duration;
1061:sieve_extend.c **** 
1062:sieve_extend.c ****     // determines the size of the resultset
1063:sieve_extend.c ****     switch (tune_level) {
1064:sieve_extend.c ****         case 1:
1065:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1066:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1067:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1068:sieve_extend.c ****             sample_max = 4;
1069:sieve_extend.c ****             sample_duration = 0.1;
1070:sieve_extend.c ****             break;
1071:sieve_extend.c ****         case 2:
1072:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1073:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1074:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1075:sieve_extend.c ****             sample_max = 4;
1076:sieve_extend.c ****             sample_duration = 0.2;
1077:sieve_extend.c ****             break;
1078:sieve_extend.c ****         case 3:
1079:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1080:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
GAS LISTING /tmp/cct11Qa0.s 			page 478


1081:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1082:sieve_extend.c ****             sample_max = 4;
1083:sieve_extend.c ****             sample_duration = 0.4;
1084:sieve_extend.c ****             break;
1085:sieve_extend.c ****     }
1086:sieve_extend.c ****     
1087:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
1088:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1089:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1090:sieve_extend.c ****     counter_t tuning_results=0;
1091:sieve_extend.c ****     counter_t tuning_result_index=0;
1092:sieve_extend.c ****     
1093:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1094:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1095:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1096:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
1097:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1098:sieve_extend.c **** 
1099:sieve_extend.c ****                     // set variables
1100:sieve_extend.c ****                     tuning_results++;
1101:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
1102:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
1103:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
1104:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1105:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
1106:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1107:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1108:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1109:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
1110:sieve_extend.c **** 
1111:sieve_extend.c ****                     if ( tuning_result[tuning_result_index].avg > best_avg) {
1112:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
1113:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
1114:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
1115:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
1116:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
1117:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1118:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1119:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1120:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1121:sieve_extend.c ****                     }
1122:sieve_extend.c ****                     if (option_verboselevel >= 3) printf("...blocksize_bits %10ju; blocksize %4jukb
1123:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
1124:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)t
1125:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_re
1126:sieve_extend.c ****                         tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_resul
1127:sieve_extend.c ****                     tuning_result_index++;
1128:sieve_extend.c ****                 }
1129:sieve_extend.c ****             }
1130:sieve_extend.c ****         }
1131:sieve_extend.c ****     }
1132:sieve_extend.c ****     if (option_verboselevel >= 2) {
1133:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
1134:sieve_extend.c ****         printf("Best options\n");
1135:sieve_extend.c ****     }
1136:sieve_extend.c ****     counter_t step=0;
1137:sieve_extend.c ****     while (tuning_results>4) {
GAS LISTING /tmp/cct11Qa0.s 			page 479


1138:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1139:sieve_extend.c ****         step++;
1140:sieve_extend.c ****         if (option_verboselevel >= 2) {
1141:sieve_extend.c ****             tuning_result_index = 0;
1142:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
1143:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1144:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1145:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1146:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1147:sieve_extend.c ****             if (option_verboselevel >= 3) {
1148:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1149:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
1150:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
1151:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax
1152:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tunin
1153:sieve_extend.c ****                             tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_r
1154:sieve_extend.c ****                 }
1155:sieve_extend.c ****             }
1156:sieve_extend.c ****         }
1157:sieve_extend.c **** 
1158:sieve_extend.c ****         tuning_results = tuning_results / 2;
1159:sieve_extend.c **** 
1160:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1161:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1162:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1163:sieve_extend.c ****         }
1164:sieve_extend.c ****         
1165:sieve_extend.c ****     }
1166:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1167:sieve_extend.c ****     if (option_verboselevel >= 1) {
1168:sieve_extend.c ****         tuning_result_index = 0;
1169:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
1170:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
1171:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].smallstep_faster,(uintmax_t)tuning_re
1172:sieve_extend.c ****                 (uintmax_t)tuning_result[tuning_result_index].passes, (uintmax_t) tuning_result[tun
1173:sieve_extend.c ****                 tuning_result[tuning_result_index].elapsed_time, tuning_result[tuning_result_index]
1174:sieve_extend.c ****     }
1175:sieve_extend.c **** 
1176:sieve_extend.c ****     free(tuning_result);
1177:sieve_extend.c ****     return best_result;
1178:sieve_extend.c **** }
1179:sieve_extend.c **** 
1180:sieve_extend.c **** int main(int argc, char *argv[]) {
 17983              		.loc 1 1180 34 view -0
 17984              		.cfi_startproc
 17985              		.loc 1 1180 34 is_stmt 0 view .LVU6237
 17986 0000 F30F1EFA 		endbr64	
 17987 0004 4157     		push	r15	#
 17988              		.cfi_def_cfa_offset 16
 17989              		.cfi_offset 15, -16
 17990 0006 4156     		push	r14	#
 17991              		.cfi_def_cfa_offset 24
 17992              		.cfi_offset 14, -24
 17993 0008 4155     		push	r13	#
 17994              		.cfi_def_cfa_offset 32
 17995              		.cfi_offset 13, -32
 17996 000a 4154     		push	r12	#
GAS LISTING /tmp/cct11Qa0.s 			page 480


 17997              		.cfi_def_cfa_offset 40
 17998              		.cfi_offset 12, -40
 17999 000c 55       		push	rbp	#
 18000              		.cfi_def_cfa_offset 48
 18001              		.cfi_offset 6, -48
 18002 000d 53       		push	rbx	#
 18003              		.cfi_def_cfa_offset 56
 18004              		.cfi_offset 3, -56
 18005 000e 488DA424 		lea	rsp, -216[rsp]	#,
 18005      28FFFFFF 
 18006              		.cfi_def_cfa_offset 272
 18007              	# sieve_extend.c:1180: int main(int argc, char *argv[]) {
 18008              		.loc 1 1180 34 view .LVU6238
 18009 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp534, MEM[(<address-space-1> long unsigned int *)40B]
 18009      25280000 
 18009      00
 18010 001f 48898424 		mov	QWORD PTR 200[rsp], rax	# D.35620, tmp534
 18010      C8000000 
 18011 0027 31C0     		xor	eax, eax	# tmp534
1181:sieve_extend.c **** 
1182:sieve_extend.c ****     
1183:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 18012              		.loc 1 1183 5 is_stmt 1 view .LVU6239
 18013              	# sieve_extend.c:1183:     counter_t option_maxFactor  = default_sieve_limit;
 18014              		.loc 1 1183 15 is_stmt 0 view .LVU6240
 18015 0029 48C78424 		mov	QWORD PTR 144[rsp], 1000000	# option_maxFactor,
 18015      90000000 
 18015      40420F00 
1184:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 18016              		.loc 1 1184 5 is_stmt 1 view .LVU6241
 18017              	.LBB893:
 18018              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1185:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1186:sieve_extend.c ****     int option_check = default_check_level;
1187:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1188:sieve_extend.c **** 
1189:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 18019              		.loc 1 1189 5 is_stmt 0 view .LVU6242
 18020 0035 83FF01   		cmp	edi, 1	# argc,
 18021              	.LBE893:
 18022              	# sieve_extend.c:1184:     counter_t option_showMaxFactor = default_showMaxFactor;
1184:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 18023              		.loc 1 1184 15 view .LVU6243
 18024 0038 48C78424 		mov	QWORD PTR 152[rsp], 0	# option_showMaxFactor,
 18024      98000000 
 18024      00000000 
1185:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 18025              		.loc 1 1185 5 is_stmt 1 view .LVU6244
 18026              	# sieve_extend.c:1185:     int option_verboselevel = default_verbose_level;
1185:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 18027              		.loc 1 1185 9 is_stmt 0 view .LVU6245
 18028 0044 C7842488 		mov	DWORD PTR 136[rsp], 2	# option_verboselevel,
 18028      00000002 
 18028      000000
1186:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 18029              		.loc 1 1186 5 is_stmt 1 view .LVU6246
 18030              	.LVL1162:
GAS LISTING /tmp/cct11Qa0.s 			page 481


1187:sieve_extend.c **** 
 18031              		.loc 1 1187 5 view .LVU6247
 18032              	# sieve_extend.c:1187:     int option_tunelevel = default_tune_level;
1187:sieve_extend.c **** 
 18033              		.loc 1 1187 9 is_stmt 0 view .LVU6248
 18034 004f C784248C 		mov	DWORD PTR 140[rsp], 1	# option_tunelevel,
 18034      00000001 
 18034      000000
 18035              		.loc 1 1189 5 is_stmt 1 view .LVU6249
 18036              	.LBB918:
 18037              		.loc 1 1189 10 view .LVU6250
 18038              	.LVL1163:
 18039              		.loc 1 1189 21 view .LVU6251
 18040              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
 18041              		.loc 1 1189 5 is_stmt 0 view .LVU6252
 18042 005a 0F8E1C05 		jle	.L1689	#,
 18042      0000
 18043 0060 89FD     		mov	ebp, edi	# argc, tmp488
 18044 0062 4989F4   		mov	r12, rsi	# argv, tmp489
 18045              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
 18046              		.loc 1 1189 14 view .LVU6253
 18047 0065 BB010000 		mov	ebx, 1	# arg,
 18047      00
 18048 006a 4C8D2D00 		lea	r13, .LC28[rip]	# tmp428,
 18048      000000
 18049              	# sieve_extend.c:1191:         else if (strcmp(argv[arg], "--verbose")==0) {
1190:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1191:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18050              		.loc 1 1191 18 view .LVU6254
 18051 0071 4C8D3500 		lea	r14, .LC29[rip]	# tmp443,
 18051      000000
 18052 0078 EB66     		jmp	.L1673	#
 18053              	.LVL1164:
 18054 007a 660F1F44 		.p2align 4,,7
 18054      0000
 18055              		.p2align 3
 18056              	.L1805:
1192:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18057              		.loc 1 1192 13 is_stmt 1 view .LVU6255
 18058              	# sieve_extend.c:1192:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 18059              		.loc 1 1192 16 is_stmt 0 view .LVU6256
 18060 0080 83C301   		add	ebx, 1	# arg,
 18061              	.LVL1165:
 18062              		.loc 1 1192 16 view .LVU6257
 18063 0083 39DD     		cmp	ebp, ebx	# argc, arg
 18064 0085 0F8E510D 		jle	.L1803	#,
 18064      0000
1193:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 18065              		.loc 1 1193 13 is_stmt 1 view .LVU6258
 18066              	# sieve_extend.c:1193:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18067              		.loc 1 1193 28 is_stmt 0 view .LVU6259
 18068 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 18068      08
 18069              	# sieve_extend.c:1193:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18070              		.loc 1 1193 17 view .LVU6260
 18071 0090 488D9424 		lea	rdx, 136[rsp]	# tmp285,
 18071      88000000 
GAS LISTING /tmp/cct11Qa0.s 			page 482


 18072 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 18073 009b 31C0     		xor	eax, eax	#
 18074 009d 488D3500 		lea	rsi, .LC31[rip]	#,
 18074      000000
 18075 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 18075      00
 18076              	.LVL1166:
 18077              	# sieve_extend.c:1193:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18078              		.loc 1 1193 16 view .LVU6261
 18079 00a9 83F801   		cmp	eax, 1	# tmp490,
 18080 00ac 0F85E204 		jne	.L1678	#,
 18080      0000
 18081              	# sieve_extend.c:1193:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18082              		.loc 1 1193 91 discriminator 1 view .LVU6262
 18083 00b2 8B942488 		mov	edx, DWORD PTR 136[rsp]	# option_verboselevel.16_19, option_verboselevel
 18083      000000
 18084              	# sieve_extend.c:1193:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 18085              		.loc 1 1193 68 discriminator 1 view .LVU6263
 18086 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 18087 00bc 0F8FD204 		jg	.L1678	#,
 18087      0000
1194:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1195:sieve_extend.c ****             }
1196:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 18088              		.loc 1 1196 13 is_stmt 1 view .LVU6264
 18089              	.LVL1167:
 18090              	.LBB894:
 18091              	.LBI894:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18092              		.loc 3 105 1 view .LVU6265
 18093              	.LBB895:
 18094              		.loc 3 107 3 view .LVU6266
 18095              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18096              		.loc 3 107 10 is_stmt 0 view .LVU6267
 18097 00c2 488D3500 		lea	rsi, .LC33[rip]	#,
 18097      000000
 18098 00c9 BF010000 		mov	edi, 1	#,
 18098      00
 18099 00ce 31C0     		xor	eax, eax	#
 18100 00d0 E8000000 		call	__printf_chk@PLT	#
 18100      00
 18101              	.LVL1168:
 18102              	.L1680:
 18103              		.loc 3 107 10 view .LVU6268
 18104              	.LBE895:
 18105              	.LBE894:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18106              		.loc 1 1189 33 is_stmt 1 discriminator 2 view .LVU6269
 18107              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18108              		.loc 1 1189 36 is_stmt 0 discriminator 2 view .LVU6270
 18109 00d5 83C301   		add	ebx, 1	# arg,
 18110              	.LVL1169:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18111              		.loc 1 1189 21 is_stmt 1 discriminator 2 view .LVU6271
 18112              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
GAS LISTING /tmp/cct11Qa0.s 			page 483


 18113              		.loc 1 1189 5 is_stmt 0 discriminator 2 view .LVU6272
 18114 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 18115 00da 0F8E0001 		jle	.L1804	#,
 18115      0000
 18116              	.LVL1170:
 18117              	.L1673:
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18118              		.loc 1 1190 9 is_stmt 1 view .LVU6273
 18119              	# sieve_extend.c:1190:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18120              		.loc 1 1190 24 is_stmt 0 view .LVU6274
 18121 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 18122              	# sieve_extend.c:1190:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18123              		.loc 1 1190 13 view .LVU6275
 18124 00e3 41B90700 		mov	r9d, 7	# tmp274,
 18124      0000
 18125              	# sieve_extend.c:1190:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18126              		.loc 1 1190 24 view .LVU6276
 18127 00e9 48C1E003 		sal	rax, 3	# _2,
 18128              	# sieve_extend.c:1190:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18129              		.loc 1 1190 13 view .LVU6277
 18130 00ed 4C89EF   		mov	rdi, r13	# tmp273, tmp428
 18131              	# sieve_extend.c:1190:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18132              		.loc 1 1190 24 view .LVU6278
 18133 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 18134              	# sieve_extend.c:1190:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18135              		.loc 1 1190 13 view .LVU6279
 18136 00f4 4C89C9   		mov	rcx, r9	# tmp454, tmp274
 18137 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 18138 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 18139 00fd F3A6     		repz cmpsb
 18140 00ff 0F97C2   		seta	dl	#, tmp275
 18141 0102 80DA00   		sbb	dl, 0	# _5
 18142              	# sieve_extend.c:1190:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1190:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 18143              		.loc 1 1190 12 view .LVU6280
 18144 0105 84D2     		test	dl, dl	# _5
 18145 0107 0F84A404 		je	.L1801	#,
 18145      0000
1191:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18146              		.loc 1 1191 14 is_stmt 1 view .LVU6281
 18147              	# sieve_extend.c:1191:         else if (strcmp(argv[arg], "--verbose")==0) {
1191:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18148              		.loc 1 1191 18 is_stmt 0 view .LVU6282
 18149 010d B90A0000 		mov	ecx, 10	# tmp280,
 18149      00
 18150 0112 4C89C6   		mov	rsi, r8	# _4, _4
 18151 0115 4C89F7   		mov	rdi, r14	# tmp279, tmp443
 18152 0118 F3A6     		repz cmpsb
 18153 011a 410F97C2 		seta	r10b	#, tmp281
 18154 011e 4180DA00 		sbb	r10b, 0	# _11
 18155              	# sieve_extend.c:1191:         else if (strcmp(argv[arg], "--verbose")==0) {
GAS LISTING /tmp/cct11Qa0.s 			page 484


1191:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 18156              		.loc 1 1191 17 view .LVU6283
 18157 0122 4584D2   		test	r10b, r10b	# _11
 18158 0125 0F8455FF 		je	.L1805	#,
 18158      FFFF
1197:sieve_extend.c ****         } 
1198:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18159              		.loc 1 1198 14 is_stmt 1 view .LVU6284
 18160              	# sieve_extend.c:1198:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18161              		.loc 1 1198 18 is_stmt 0 view .LVU6285
 18162 012b B9080000 		mov	ecx, 8	# tmp290,
 18162      00
 18163 0130 4C89C6   		mov	rsi, r8	# _4, _4
 18164 0133 488D3D00 		lea	rdi, .LC34[rip]	# tmp289,
 18164      000000
 18165 013a F3A6     		repz cmpsb
 18166 013c 410F97C3 		seta	r11b	#, tmp291
 18167 0140 4180DB00 		sbb	r11b, 0	# _23
 18168              	# sieve_extend.c:1198:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 18169              		.loc 1 1198 17 view .LVU6286
 18170 0144 4584DB   		test	r11b, r11b	# _23
 18171 0147 748C     		je	.L1680	#,
1199:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18172              		.loc 1 1199 14 is_stmt 1 view .LVU6287
 18173              	# sieve_extend.c:1199:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18174              		.loc 1 1199 18 is_stmt 0 view .LVU6288
 18175 0149 4C89C6   		mov	rsi, r8	# _4, _4
 18176 014c 488D3D00 		lea	rdi, .LC35[rip]	# tmp295,
 18176      000000
 18177 0153 4C89C9   		mov	rcx, r9	# tmp460, tmp274
 18178 0156 F3A6     		repz cmpsb
 18179 0158 0F97C2   		seta	dl	#, tmp297
 18180 015b 80DA00   		sbb	dl, 0	# _24
 18181              	# sieve_extend.c:1199:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18182              		.loc 1 1199 17 view .LVU6289
 18183 015e 84D2     		test	dl, dl	# _24
 18184 0160 0F855A01 		jne	.L1681	#,
 18184      0000
 18185              		.loc 1 1199 52 is_stmt 1 discriminator 1 view .LVU6290
 18186              	# sieve_extend.c:1199:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 18187              		.loc 1 1199 68 is_stmt 0 discriminator 1 view .LVU6291
 18188 0166 C784248C 		mov	DWORD PTR 140[rsp], 0	# option_tunelevel,
 18188      00000000 
 18188      000000
1200:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 18189              		.loc 1 1200 13 is_stmt 1 discriminator 1 view .LVU6292
 18190              	# sieve_extend.c:1200:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 18191              		.loc 1 1200 16 is_stmt 0 discriminator 1 view .LVU6293
 18192 0171 83C301   		add	ebx, 1	# arg,
 18193              	.LVL1171:
 18194              		.loc 1 1200 16 discriminator 1 view .LVU6294
 18195 0174 39DD     		cmp	ebp, ebx	# argc, arg
 18196 0176 0F8EA00C 		jle	.L1806	#,
 18196      0000
1201:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 18197              		.loc 1 1201 13 is_stmt 1 view .LVU6295
 18198              	# sieve_extend.c:1201:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
GAS LISTING /tmp/cct11Qa0.s 			page 485


 18199              		.loc 1 1201 28 is_stmt 0 view .LVU6296
 18200 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 18200      08
 18201              	# sieve_extend.c:1201:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18202              		.loc 1 1201 17 view .LVU6297
 18203 0181 488D9424 		lea	rdx, 140[rsp]	# tmp301,
 18203      8C000000 
 18204 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 18205 018c 31C0     		xor	eax, eax	#
 18206 018e 488D3500 		lea	rsi, .LC31[rip]	#,
 18206      000000
 18207 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 18207      00
 18208              	.LVL1172:
 18209              	# sieve_extend.c:1201:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18210              		.loc 1 1201 16 view .LVU6298
 18211 019a 83F801   		cmp	eax, 1	# tmp491,
 18212 019d 0F855B0C 		jne	.L1683	#,
 18212      0000
 18213              	# sieve_extend.c:1201:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18214              		.loc 1 1201 85 discriminator 1 view .LVU6299
 18215 01a3 8B94248C 		mov	edx, DWORD PTR 140[rsp]	# option_tunelevel.20_32, option_tunelevel
 18215      000000
 18216              	# sieve_extend.c:1201:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 18217              		.loc 1 1201 65 discriminator 1 view .LVU6300
 18218 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 18219 01ad 0F8F4B0C 		jg	.L1683	#,
 18219      0000
1202:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1203:sieve_extend.c ****             }
1204:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 18220              		.loc 1 1204 13 is_stmt 1 view .LVU6301
 18221              	.LVL1173:
 18222              	.LBB896:
 18223              	.LBI896:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18224              		.loc 3 105 1 view .LVU6302
 18225              	.LBB897:
 18226              		.loc 3 107 3 view .LVU6303
 18227              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18228              		.loc 3 107 10 is_stmt 0 view .LVU6304
 18229 01b3 31C0     		xor	eax, eax	#
 18230 01b5 488D3500 		lea	rsi, .LC38[rip]	#,
 18230      000000
 18231 01bc BF010000 		mov	edi, 1	#,
 18231      00
 18232              	.LBE897:
 18233              	.LBE896:
 18234              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18235              		.loc 1 1189 36 view .LVU6305
 18236 01c1 83C301   		add	ebx, 1	# arg,
 18237              	.LVL1174:
 18238              	.LBB899:
 18239              	.LBB898:
 18240              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18241              		.loc 3 107 10 view .LVU6306
GAS LISTING /tmp/cct11Qa0.s 			page 486


 18242 01c4 E8000000 		call	__printf_chk@PLT	#
 18242      00
 18243              	.LVL1175:
 18244              		.loc 3 107 10 view .LVU6307
 18245              	.LBE898:
 18246              	.LBE899:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18247              		.loc 1 1189 33 is_stmt 1 view .LVU6308
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18248              		.loc 1 1189 21 view .LVU6309
 18249              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18250              		.loc 1 1189 5 is_stmt 0 view .LVU6310
 18251 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 18252 01cb 0F8F0FFF 		jg	.L1673	#,
 18252      FFFF
 18253 01d1 66662E0F 		.p2align 4
 18253      1F840000 
 18253      0000000F 
 18253      1F4000
 18254              		.p2align 3
 18255              	.L1804:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18256              		.loc 1 1189 5 view .LVU6311
 18257              	.LBE918:
1205:sieve_extend.c ****         }
1206:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1207:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1208:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1209:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1210:sieve_extend.c ****             }
1211:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1212:sieve_extend.c ****         }
1213:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1214:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1215:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1216:sieve_extend.c ****         }
1217:sieve_extend.c ****     }
1218:sieve_extend.c **** 
1219:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 18258              		.loc 1 1219 5 is_stmt 1 view .LVU6312
1220:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1221:sieve_extend.c ****         printf("\nResult set:\n");
1222:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1223:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,3);
1224:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1225:sieve_extend.c ****         else printf("The sieve is VALID\n");
1226:sieve_extend.c ****         delete_sieve(sieve_instance);
1227:sieve_extend.c ****         exit(0);
1228:sieve_extend.c ****     }
1229:sieve_extend.c **** 
1230:sieve_extend.c ****     struct timespec start_time,end_time;
 18259              		.loc 1 1230 5 view .LVU6313
1231:sieve_extend.c **** 
1232:sieve_extend.c ****     if (option_check) {
 18260              		.loc 1 1232 5 view .LVU6314
1233:sieve_extend.c ****         // Count the number of primes and validate the result
GAS LISTING /tmp/cct11Qa0.s 			page 487


1234:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 18261              		.loc 1 1234 9 view .LVU6315
 18262              	# sieve_extend.c:1234:         if (option_verboselevel >= 1) printf("Validating... ");
 18263              		.loc 1 1234 12 is_stmt 0 view .LVU6316
 18264 01e0 8BAC2488 		mov	ebp, DWORD PTR 136[rsp]	#, option_verboselevel
 18264      000000
 18265              	.LVL1176:
 18266              		.loc 1 1234 12 view .LVU6317
 18267 01e7 85ED     		test	ebp, ebp	#
 18268 01e9 0F8F8D03 		jg	.L1689	#,
 18268      0000
 18269              	.LVL1177:
 18270              	.L1674:
1235:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18271              		.loc 1 1235 9 is_stmt 1 view .LVU6318
 18272              	# sieve_extend.c:1235:         if (option_verboselevel >= 2) printf("\n");
 18273              		.loc 1 1235 12 is_stmt 0 view .LVU6319
 18274 01ef 83BC2488 		cmp	DWORD PTR 136[rsp], 1	# option_verboselevel,
 18274      00000001 
 18275 01f7 7E0A     		jle	.L1690	#,
 18276              		.loc 1 1235 39 is_stmt 1 view .LVU6320
 18277              	.LVL1178:
 18278              	.LBB919:
 18279              	.LBI919:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18280              		.loc 3 105 1 view .LVU6321
 18281              	.LBB920:
 18282              		.loc 3 107 3 view .LVU6322
 18283              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18284              		.loc 3 107 10 is_stmt 0 view .LVU6323
 18285 01f9 BF0A0000 		mov	edi, 10	#,
 18285      00
 18286 01fe E8000000 		call	putchar@PLT	#
 18286      00
 18287              	.LVL1179:
 18288              	.L1690:
 18289              		.loc 3 107 10 view .LVU6324
 18290              	.LBE920:
 18291              	.LBE919:
 18292              	.LBB921:
 18293              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18294              		.loc 1 1189 14 view .LVU6325
 18295 0203 C7442420 		mov	DWORD PTR 32[rsp], 7	# %sfp,
 18295      07000000 
 18296 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 18296      0000
 18297              	.LBE921:
 18298              	.LBB922:
 18299              	.LBB923:
 18300              	.LBB924:
 18301              	.LBB925:
 18302              	.LBB926:
 18303              	.LBB927:
 18304              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18305              		.loc 3 107 10 view .LVU6326
 18306 0211 4C8D3500 		lea	r14, .LC46[rip]	# tmp442,
GAS LISTING /tmp/cct11Qa0.s 			page 488


 18306      000000
 18307              	.L1697:
 18308              	.LVL1180:
 18309              		.loc 3 107 10 view .LVU6327
 18310              	.LBE927:
 18311              	.LBE926:
 18312              	.LBE925:
 18313              	.LBE924:
1236:sieve_extend.c **** 
1237:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1238:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1239:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18314              		.loc 1 1239 13 is_stmt 1 view .LVU6328
 18315              	# sieve_extend.c:1239:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 18316              		.loc 1 1239 37 is_stmt 0 view .LVU6329
 18317 0218 8B842488 		mov	eax, DWORD PTR 136[rsp]	# prephitmp_382, option_verboselevel
 18317      000000
 18318              	# sieve_extend.c:1239:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 18319              		.loc 1 1239 16 view .LVU6330
 18320 021f 83F801   		cmp	eax, 1	# prephitmp_382,
 18321 0222 7E1D     		jle	.L1691	#,
 18322              		.loc 1 1239 43 is_stmt 1 view .LVU6331
 18323              	.LVL1181:
 18324              	.LBB943:
 18325              	.LBI943:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18326              		.loc 3 105 1 view .LVU6332
 18327              	.LBB944:
 18328              		.loc 3 107 3 view .LVU6333
 18329              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18330              		.loc 3 107 10 is_stmt 0 view .LVU6334
 18331 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 18332 0227 488D3500 		lea	rsi, .LC45[rip]	#,
 18332      000000
 18333 022e BF010000 		mov	edi, 1	#,
 18333      00
 18334 0233 31C0     		xor	eax, eax	#
 18335 0235 E8000000 		call	__printf_chk@PLT	#
 18335      00
 18336              	.LVL1182:
 18337 023a 8B842488 		mov	eax, DWORD PTR 136[rsp]	# prephitmp_382, option_verboselevel
 18337      000000
 18338              	.LVL1183:
 18339              	.L1691:
 18340              		.loc 3 107 10 view .LVU6335
 18341              	.LBE944:
 18342              	.LBE943:
 18343              	.LBE923:
 18344              	.LBE922:
 18345              	.LBB953:
 18346              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18347              		.loc 1 1189 14 view .LVU6336
 18348 0241 41BC0500 		mov	r12d, 5	# ivtmp_213,
 18348      0000
 18349 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 18349      00
GAS LISTING /tmp/cct11Qa0.s 			page 489


 18350 024c EB56     		jmp	.L1695	#
 18351              	.LVL1184:
 18352 024e 6690     		.p2align 4,,7
 18353              		.p2align 3
 18354              	.L1692:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18355              		.loc 1 1189 14 view .LVU6337
 18356              	.LBE953:
 18357              	.LBB954:
 18358              	.LBB950:
 18359              	.LBB945:
 18360              	.LBB938:
1240:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1241:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1242:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1243:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18361              		.loc 1 1243 17 is_stmt 1 view .LVU6338
 18362              	# sieve_extend.c:1243:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 18363              		.loc 1 1243 40 is_stmt 0 view .LVU6339
 18364 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 18365 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 18366 0256 E8000000 		call	sieve	#
 18366      00
 18367              	.LVL1185:
 18368              	# sieve_extend.c:1244:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1244:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 18369              		.loc 1 1244 29 view .LVU6340
 18370 025b 8BB42488 		mov	esi, DWORD PTR 136[rsp]	#, option_verboselevel
 18370      000000
 18371              	# sieve_extend.c:1243:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1243:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 18372              		.loc 1 1243 40 view .LVU6341
 18373 0262 4989C7   		mov	r15, rax	# sieve_instance_check, tmp494
 18374              	.LVL1186:
 18375              		.loc 1 1244 17 is_stmt 1 view .LVU6342
 18376              	# sieve_extend.c:1244:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 18377              		.loc 1 1244 29 is_stmt 0 view .LVU6343
 18378 0265 4889C7   		mov	rdi, rax	#, sieve_instance_check
 18379 0268 E8000000 		call	validatePrimeCount	#
 18379      00
 18380              	.LVL1187:
 18381              	.LBB929:
 18382              	.LBB930:
 18383              	# sieve_extend.c:105:     free(sieve->bitarray);
 105:sieve_extend.c ****     free(sieve);
 18384              		.loc 1 105 5 view .LVU6344
 18385 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_check_126->bitarray
 18386              	.LBE930:
 18387              	.LBE929:
 18388              	# sieve_extend.c:1244:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 18389              		.loc 1 1244 29 view .LVU6345
 18390 0270 89C3     		mov	ebx, eax	# valid, tmp495
 18391              	.LVL1188:
1245:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 18392              		.loc 1 1245 17 is_stmt 1 view .LVU6346
 18393              	.LBB932:
 18394              	.LBI929:
GAS LISTING /tmp/cct11Qa0.s 			page 490


 104:sieve_extend.c ****     free(sieve->bitarray);
 18395              		.loc 1 104 13 view .LVU6347
 18396              	.LBB931:
 105:sieve_extend.c ****     free(sieve);
 18397              		.loc 1 105 5 view .LVU6348
 18398 0272 E8000000 		call	free@PLT	#
 18398      00
 18399              	.LVL1189:
 106:sieve_extend.c **** }
 18400              		.loc 1 106 5 view .LVU6349
 18401 0277 4C89FF   		mov	rdi, r15	#, sieve_instance_check
 18402 027a E8000000 		call	free@PLT	#
 18402      00
 18403              	.LVL1190:
 106:sieve_extend.c **** }
 18404              		.loc 1 106 5 is_stmt 0 view .LVU6350
 18405              	.LBE931:
 18406              	.LBE932:
1246:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 18407              		.loc 1 1246 17 is_stmt 1 view .LVU6351
 18408              	# sieve_extend.c:1246:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 18409              		.loc 1 1246 20 is_stmt 0 view .LVU6352
 18410 027f 85DB     		test	ebx, ebx	# valid
 18411 0281 0F84C902 		je	.L1731	#,
 18411      0000
 18412              		.loc 1 1246 44 is_stmt 1 discriminator 2 view .LVU6353
 18413              	# sieve_extend.c:1246:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 18414              		.loc 1 1246 68 is_stmt 0 discriminator 2 view .LVU6354
 18415 0287 8B842488 		mov	eax, DWORD PTR 136[rsp]	# prephitmp_382, option_verboselevel
 18415      000000
 18416              	# sieve_extend.c:1246:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 18417              		.loc 1 1246 47 discriminator 2 view .LVU6355
 18418 028e 83F802   		cmp	eax, 2	# prephitmp_382,
 18419 0291 0F8FE900 		jg	.L1807	#,
 18419      0000
 18420              	.LBE938:
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18421              		.loc 1 1241 75 is_stmt 1 discriminator 2 view .LVU6356
 18422              	# sieve_extend.c:1241:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18423              		.loc 1 1241 90 is_stmt 0 discriminator 2 view .LVU6357
 18424 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 18425              	.LVL1191:
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18426              		.loc 1 1241 49 is_stmt 1 discriminator 2 view .LVU6358
 18427              	# sieve_extend.c:1241:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18428              		.loc 1 1241 13 is_stmt 0 discriminator 2 view .LVU6359
 18429 029a 4183EC01 		sub	r12d, 1	# ivtmp_213,
 18430 029e 0F840301 		je	.L1808	#,
 18430      0000
 18431              	.LVL1192:
 18432              	.L1695:
 18433              	.LBB939:
1242:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18434              		.loc 1 1242 17 is_stmt 1 view .LVU6360
 18435              	# sieve_extend.c:1242:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
GAS LISTING /tmp/cct11Qa0.s 			page 491


1242:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18436              		.loc 1 1242 20 is_stmt 0 view .LVU6361
 18437 02a4 83F802   		cmp	eax, 2	# prephitmp_382,
 18438 02a7 7EA7     		jle	.L1692	#,
1242:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 18439              		.loc 1 1242 47 is_stmt 1 view .LVU6362
 18440              	.LVL1193:
 18441              	.LBB933:
 18442              	.LBI926:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18443              		.loc 3 105 1 view .LVU6363
 18444              	.LBB928:
 18445              		.loc 3 107 3 view .LVU6364
 18446              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18447              		.loc 3 107 10 is_stmt 0 view .LVU6365
 18448 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 18449 02ac 4C89F6   		mov	rsi, r14	#, tmp442
 18450 02af BF010000 		mov	edi, 1	#,
 18450      00
 18451 02b4 31C0     		xor	eax, eax	#
 18452 02b6 E8000000 		call	__printf_chk@PLT	#
 18452      00
 18453              	.LVL1194:
 18454 02bb EB93     		jmp	.L1692	#
 18455              	.LVL1195:
 18456 02bd 0F1F00   		.p2align 4,,7
 18457              		.p2align 3
 18458              	.L1681:
 18459              		.loc 3 107 10 view .LVU6366
 18460              	.LBE928:
 18461              	.LBE933:
 18462              	.LBE939:
 18463              	.LBE945:
 18464              	.LBE950:
 18465              	.LBE954:
 18466              	.LBB955:
1206:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18467              		.loc 1 1206 14 is_stmt 1 view .LVU6367
 18468              	# sieve_extend.c:1206:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1206:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18469              		.loc 1 1206 18 is_stmt 0 view .LVU6368
 18470 02c0 4C89C9   		mov	rcx, r9	# tmp274, tmp274
 18471 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 18472 02c6 488D3D00 		lea	rdi, .LC39[rip]	# tmp305,
 18472      000000
 18473 02cd F3A6     		repz cmpsb
 18474 02cf 410F97C1 		seta	r9b	#, tmp307
 18475 02d3 4180D900 		sbb	r9b, 0	# _36
 18476              	# sieve_extend.c:1206:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1206:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18477              		.loc 1 1206 17 view .LVU6369
 18478 02d7 4584C9   		test	r9b, r9b	# _36
 18479 02da 756C     		jne	.L1685	#,
1206:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 18480              		.loc 1 1206 52 is_stmt 1 discriminator 1 view .LVU6370
 18481              	# sieve_extend.c:1206:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1206:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
GAS LISTING /tmp/cct11Qa0.s 			page 492


 18482              		.loc 1 1206 72 is_stmt 0 discriminator 1 view .LVU6371
 18483 02dc 48C78424 		mov	QWORD PTR 152[rsp], 0	# option_showMaxFactor,
 18483      98000000 
 18483      00000000 
1207:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18484              		.loc 1 1207 13 is_stmt 1 discriminator 1 view .LVU6372
 18485              	# sieve_extend.c:1207:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1207:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18486              		.loc 1 1207 16 is_stmt 0 discriminator 1 view .LVU6373
 18487 02e8 83C301   		add	ebx, 1	# arg,
 18488              	.LVL1196:
1207:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18489              		.loc 1 1207 16 discriminator 1 view .LVU6374
 18490 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 18491 02ed 0F8E540B 		jle	.L1809	#,
 18491      0000
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18492              		.loc 1 1208 13 is_stmt 1 view .LVU6375
 18493              	# sieve_extend.c:1208:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18494              		.loc 1 1208 28 is_stmt 0 view .LVU6376
 18495 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 18495      08
 18496              	# sieve_extend.c:1208:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18497              		.loc 1 1208 17 view .LVU6377
 18498 02f8 488D9424 		lea	rdx, 152[rsp]	# tmp311,
 18498      98000000 
 18499 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 18500 0303 31C0     		xor	eax, eax	#
 18501 0305 488D3500 		lea	rsi, .LC41[rip]	#,
 18501      000000
 18502 030c E8000000 		call	__isoc99_sscanf@PLT	#
 18502      00
 18503              	.LVL1197:
 18504              	# sieve_extend.c:1208:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18505              		.loc 1 1208 16 view .LVU6378
 18506 0311 83F801   		cmp	eax, 1	# tmp492,
 18507 0314 0F85F30A 		jne	.L1687	#,
 18507      0000
 18508              	# sieve_extend.c:1208:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18509              		.loc 1 1208 106 discriminator 1 view .LVU6379
 18510 031a 488B9424 		mov	rdx, QWORD PTR 152[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 18510      98000000 
 18511              	# sieve_extend.c:1208:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1208:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 18512              		.loc 1 1208 82 discriminator 1 view .LVU6380
 18513 0322 483B9424 		cmp	rdx, QWORD PTR 144[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 18513      90000000 
 18514 032a 0F87DD0A 		ja	.L1687	#,
 18514      0000
1211:sieve_extend.c ****         }
 18515              		.loc 1 1211 13 is_stmt 1 view .LVU6381
 18516              	.LVL1198:
 18517              	.LBB900:
GAS LISTING /tmp/cct11Qa0.s 			page 493


 18518              	.LBI900:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18519              		.loc 3 105 1 view .LVU6382
 18520              	.LBB901:
 18521              		.loc 3 107 3 view .LVU6383
 18522              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18523              		.loc 3 107 10 is_stmt 0 view .LVU6384
 18524 0330 488D3500 		lea	rsi, .LC43[rip]	#,
 18524      000000
 18525 0337 BF010000 		mov	edi, 1	#,
 18525      00
 18526 033c 31C0     		xor	eax, eax	#
 18527 033e E8000000 		call	__printf_chk@PLT	#
 18527      00
 18528              	.LVL1199:
 18529 0343 E98DFDFF 		jmp	.L1680	#
 18529      FF
 18530              	.LVL1200:
 18531              		.p2align 4,,7
 18532              		.p2align 3
 18533              	.L1685:
 18534              		.loc 3 107 10 view .LVU6385
 18535              	.LBE901:
 18536              	.LBE900:
1213:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 18537              		.loc 1 1213 14 is_stmt 1 view .LVU6386
 18538              	# sieve_extend.c:1213:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1213:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 18539              		.loc 1 1213 18 is_stmt 0 view .LVU6387
 18540 0348 31C0     		xor	eax, eax	#
 18541 034a 488D9424 		lea	rdx, 144[rsp]	# tmp313,
 18541      90000000 
 18542 0352 488D3500 		lea	rsi, .LC41[rip]	#,
 18542      000000
 18543 0359 4C89C7   		mov	rdi, r8	#, _4
 18544 035c E8000000 		call	__isoc99_sscanf@PLT	#
 18544      00
 18545              	.LVL1201:
 18546              	# sieve_extend.c:1213:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1213:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 18547              		.loc 1 1213 17 view .LVU6388
 18548 0361 83F801   		cmp	eax, 1	# tmp493,
 18549 0364 0F846BFD 		je	.L1680	#,
 18549      FFFF
1214:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 18550              		.loc 1 1214 13 is_stmt 1 view .LVU6389
 18551              	.LVL1202:
 18552              	.LBB902:
 18553              	.LBI902:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18554              		.loc 3 98 1 view .LVU6390
 18555              	.LBB903:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18556              		.loc 3 100 3 view .LVU6391
 18557              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18558              		.loc 3 100 10 is_stmt 0 view .LVU6392
GAS LISTING /tmp/cct11Qa0.s 			page 494


 18559 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 18560 036d 488D1500 		lea	rdx, .LC44[rip]	#,
 18560      000000
 18561 0374 E9250200 		jmp	.L1800	#
 18561      00
 18562              	.LVL1203:
 18563 0379 0F1F8000 		.p2align 4,,7
 18563      000000
 18564              		.p2align 3
 18565              	.L1807:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18566              		.loc 3 100 10 view .LVU6393
 18567              	.LBE903:
 18568              	.LBE902:
 18569              	.LBE955:
 18570              	.LBB956:
 18571              	.LBB951:
 18572              	.LBB946:
 18573              	.LBB940:
 18574              		.loc 1 1246 74 is_stmt 1 view .LVU6394
 18575              	.LBB934:
 18576              	.LBI934:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18577              		.loc 3 105 1 view .LVU6395
 18578              	.LBB935:
 18579              		.loc 3 107 3 view .LVU6396
 18580              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18581              		.loc 3 107 10 is_stmt 0 view .LVU6397
 18582 0380 31C0     		xor	eax, eax	#
 18583 0382 488D3500 		lea	rsi, .LC47[rip]	#,
 18583      000000
 18584 0389 BF010000 		mov	edi, 1	#,
 18584      00
 18585              	.LBE935:
 18586              	.LBE934:
 18587              	.LBE940:
 18588              	# sieve_extend.c:1241:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18589              		.loc 1 1241 90 view .LVU6398
 18590 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 18591              	.LVL1204:
 18592              	.LBB941:
 18593              	.LBB937:
 18594              	.LBB936:
 18595              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18596              		.loc 3 107 10 view .LVU6399
 18597 0391 E8000000 		call	__printf_chk@PLT	#
 18597      00
 18598              	.LVL1205:
 18599 0396 8B842488 		mov	eax, DWORD PTR 136[rsp]	# prephitmp_382, option_verboselevel
 18599      000000
 18600              	.LVL1206:
 18601              		.loc 3 107 10 view .LVU6400
 18602              	.LBE936:
 18603              	.LBE937:
 18604              	.LBE941:
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
GAS LISTING /tmp/cct11Qa0.s 			page 495


 18605              		.loc 1 1241 75 is_stmt 1 view .LVU6401
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18606              		.loc 1 1241 49 view .LVU6402
 18607              	# sieve_extend.c:1241:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18608              		.loc 1 1241 13 is_stmt 0 view .LVU6403
 18609 039d 4183EC01 		sub	r12d, 1	# ivtmp_213,
 18610 03a1 0F85FDFE 		jne	.L1695	#,
 18610      FFFF
 18611              	.L1808:
1241:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18612              		.loc 1 1241 13 view .LVU6404
 18613              	.LBE946:
1247:sieve_extend.c ****             }
1248:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 18614              		.loc 1 1248 13 is_stmt 1 view .LVU6405
 18615              	# sieve_extend.c:1248:             if (option_verboselevel >= 2) printf("\n");
 18616              		.loc 1 1248 16 is_stmt 0 view .LVU6406
 18617 03a7 83F801   		cmp	eax, 1	# prephitmp_382,
 18618 03aa 7E0A     		jle	.L1696	#,
 18619              		.loc 1 1248 43 is_stmt 1 view .LVU6407
 18620              	.LVL1207:
 18621              	.LBB947:
 18622              	.LBI947:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18623              		.loc 3 105 1 view .LVU6408
 18624              	.LBB948:
 18625              		.loc 3 107 3 view .LVU6409
 18626              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18627              		.loc 3 107 10 is_stmt 0 view .LVU6410
 18628 03ac BF0A0000 		mov	edi, 10	#,
 18628      00
 18629 03b1 E8000000 		call	putchar@PLT	#
 18629      00
 18630              	.LVL1208:
 18631              	.L1696:
 18632              		.loc 3 107 10 view .LVU6411
 18633              	.LBE948:
 18634              	.LBE947:
 18635              	.LBE951:
1238:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18636              		.loc 1 1238 77 is_stmt 1 discriminator 2 view .LVU6412
 18637              	# sieve_extend.c:1238:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1238:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18638              		.loc 1 1238 93 is_stmt 0 discriminator 2 view .LVU6413
 18639 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp319,
 18639      00
 18640              	.LVL1209:
1238:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18641              		.loc 1 1238 93 discriminator 2 view .LVU6414
 18642 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 18643              	.LVL1210:
1238:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18644              		.loc 1 1238 47 is_stmt 1 discriminator 2 view .LVU6415
 18645              	# sieve_extend.c:1238:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1238:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18646              		.loc 1 1238 9 is_stmt 0 discriminator 2 view .LVU6416
GAS LISTING /tmp/cct11Qa0.s 			page 496


 18647 03be 836C2420 		sub	DWORD PTR 32[rsp], 1	# %sfp,
 18647      01
 18648 03c3 0F854FFE 		jne	.L1697	#,
 18648      FFFF
 18649              	.LBE956:
1249:sieve_extend.c ****         }
1250:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 18650              		.loc 1 1250 9 is_stmt 1 view .LVU6417
 18651              	# sieve_extend.c:1250:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 18652              		.loc 1 1250 12 is_stmt 0 view .LVU6418
 18653 03c9 83BC2488 		cmp	DWORD PTR 136[rsp], 0	# option_verboselevel,
 18653      00000000 
 18654 03d1 0F8F6008 		jg	.L1810	#,
 18654      0000
1251:sieve_extend.c ****     }
1252:sieve_extend.c ****     
1253:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 18655              		.loc 1 1253 5 is_stmt 1 view .LVU6419
 18656              	.LVL1211:
1254:sieve_extend.c ****     if (option_tunelevel) {
 18657              		.loc 1 1254 5 view .LVU6420
 18658              	# sieve_extend.c:1254:     if (option_tunelevel) {
 18659              		.loc 1 1254 9 is_stmt 0 view .LVU6421
 18660 03d7 448B8424 		mov	r8d, DWORD PTR 140[rsp]	# option_tunelevel.40_342, option_tunelevel
 18660      8C000000 
 18661              	# sieve_extend.c:1253:     counter_t best_blocksize_bits = default_blocksize;
1253:sieve_extend.c ****     if (option_tunelevel) {
 18662              		.loc 1 1253 15 view .LVU6422
 18663 03df 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 18663      0300
 18664              	# sieve_extend.c:1254:     if (option_tunelevel) {
 18665              		.loc 1 1254 8 view .LVU6423
 18666 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.40_342
 18667 03e8 0F858F02 		jne	.L1811	#,
 18667      0000
 18668              	.LVL1212:
 18669              	.L1724:
 18670              	.LBB957:
1255:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1256:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1257:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1258:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1259:sieve_extend.c ****     }
1260:sieve_extend.c **** 
1261:sieve_extend.c ****     double max_time = default_sieve_duration;
1262:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1263:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
1264:sieve_extend.c ****         counter_t passes = 0;
 18671              		.loc 1 1264 9 is_stmt 1 view .LVU6424
1265:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 18672              		.loc 1 1265 9 view .LVU6425
1266:sieve_extend.c ****         double elapsed_time = 0;
 18673              		.loc 1 1266 9 view .LVU6426
1267:sieve_extend.c ****         struct sieve_state *sieve_instance;
 18674              		.loc 1 1267 9 view .LVU6427
1268:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 18675              		.loc 1 1268 9 view .LVU6428
GAS LISTING /tmp/cct11Qa0.s 			page 497


 18676 03ee 488DB424 		lea	rsi, 160[rsp]	# tmp402,
 18676      A0000000 
 18677 03f6 BF010000 		mov	edi, 1	#,
 18677      00
 18678 03fb E8000000 		call	clock_gettime@PLT	#
 18678      00
 18679              	.LVL1213:
1269:sieve_extend.c ****         while (elapsed_time <= max_time) {
 18680              		.loc 1 1269 9 view .LVU6429
 18681              		.loc 1 1269 15 view .LVU6430
 18682              	# sieve_extend.c:1264:         counter_t passes = 0;
1264:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 18683              		.loc 1 1264 19 is_stmt 0 view .LVU6431
 18684 0400 4531FF   		xor	r15d, r15d	# passes
 18685 0403 4C8DAC24 		lea	r13, 176[rsp]	# tmp427,
 18685      B0000000 
 18686              	.LVL1214:
 18687              	.L1725:
1270:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 18688              		.loc 1 1270 13 is_stmt 1 view .LVU6432
 18689              	# sieve_extend.c:1270:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 18690              		.loc 1 1270 30 is_stmt 0 view .LVU6433
 18691 040b 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	#, option_maxFactor
 18691      90000000 
 18692 0413 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 18693              	# sieve_extend.c:1272:             passes++;
1271:sieve_extend.c ****             delete_sieve(sieve_instance);
1272:sieve_extend.c ****             passes++;
 18694              		.loc 1 1272 19 view .LVU6434
 18695 0416 4983C701 		add	r15, 1	# passes,
 18696              	# sieve_extend.c:1270:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1270:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 18697              		.loc 1 1270 30 view .LVU6435
 18698 041a E8000000 		call	sieve	#
 18698      00
 18699              	.LVL1215:
 18700              	.LBB958:
 18701              	.LBB959:
 18702              	# sieve_extend.c:105:     free(sieve->bitarray);
 105:sieve_extend.c ****     free(sieve);
 18703              		.loc 1 105 5 view .LVU6436
 18704 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_143->bitarray
 18705              	.LBE959:
 18706              	.LBE958:
 18707              	# sieve_extend.c:1270:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1270:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 18708              		.loc 1 1270 30 view .LVU6437
 18709 0422 4889C5   		mov	rbp, rax	# sieve_instance, tmp497
 18710              	.LVL1216:
1271:sieve_extend.c ****             delete_sieve(sieve_instance);
 18711              		.loc 1 1271 13 is_stmt 1 view .LVU6438
 18712              	.LBB963:
 18713              	.LBI958:
 104:sieve_extend.c ****     free(sieve->bitarray);
 18714              		.loc 1 104 13 view .LVU6439
 18715              	.LBB960:
 105:sieve_extend.c ****     free(sieve);
GAS LISTING /tmp/cct11Qa0.s 			page 498


 18716              		.loc 1 105 5 view .LVU6440
 18717 0425 E8000000 		call	free@PLT	#
 18717      00
 18718              	.LVL1217:
 106:sieve_extend.c **** }
 18719              		.loc 1 106 5 view .LVU6441
 18720 042a 4889EF   		mov	rdi, rbp	#, sieve_instance
 18721 042d E8000000 		call	free@PLT	#
 18721      00
 18722              	.LVL1218:
 106:sieve_extend.c **** }
 18723              		.loc 1 106 5 is_stmt 0 view .LVU6442
 18724              	.LBE960:
 18725              	.LBE963:
 18726              		.loc 1 1272 13 is_stmt 1 view .LVU6443
1273:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 18727              		.loc 1 1273 13 view .LVU6444
 18728 0432 4C89EE   		mov	rsi, r13	#, tmp427
 18729 0435 BF010000 		mov	edi, 1	#,
 18729      00
 18730 043a E8000000 		call	clock_gettime@PLT	#
 18730      00
 18731              	.LVL1219:
1274:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 18732              		.loc 1 1274 13 view .LVU6445
 18733              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18734              		.loc 1 1274 62 is_stmt 0 view .LVU6446
 18735 043f C4E1DB2A 		vcvtsi2sd	xmm4, xmm4, QWORD PTR 184[rsp]	# tmp405, end_time.tv_nsec
 18735      A424B800 
 18735      0000
 18736              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18737              		.loc 1 1274 68 view .LVU6447
 18738 0449 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 160[rsp]	# tmp406, start_time.tv_sec
 18738      AC24A000 
 18738      0000
 18739              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18740              		.loc 1 1274 108 view .LVU6448
 18741 0453 C4E1CB2A 		vcvtsi2sd	xmm6, xmm6, QWORD PTR 168[rsp]	# tmp408, start_time.tv_nsec
 18741      B424A800 
 18741      0000
 18742              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18743              		.loc 1 1274 44 view .LVU6449
 18744 045d C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 176[rsp]	# tmp409, end_time.tv_sec
 18744      8424B000 
 18744      0000
 18745              	# sieve_extend.c:1269:         while (elapsed_time <= max_time) {
1269:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 18746              		.loc 1 1269 15 view .LVU6450
 18747 0467 C57B100D 		vmovsd	xmm9, QWORD PTR .LC57[rip]	# tmp582,
 18747      00000000 
 18748 046f C4E2D19B 		vfmsub132sd	xmm4, xmm5, QWORD PTR .LC8[rip]	# _285, tmp406,
 18748      25000000 
 18748      00
 18749 0478 C4E2B99D 		vfnmadd132sd	xmm6, xmm8, QWORD PTR .LC8[rip]	# _286, tmp409,
 18749      35000000 
 18749      00
 18750              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
GAS LISTING /tmp/cct11Qa0.s 			page 499


 18751              		.loc 1 1274 26 view .LVU6451
 18752 0481 C5DB58C6 		vaddsd	xmm0, xmm4, xmm6	# elapsed_time, _285, _286
 18753              	.LVL1220:
1269:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 18754              		.loc 1 1269 15 is_stmt 1 view .LVU6452
 18755 0485 C5792FC8 		vcomisd	xmm9, xmm0	# tmp582, elapsed_time
 18756 0489 0F828500 		jb	.L1797	#,
 18756      0000
 18757              	.LVL1221:
1270:sieve_extend.c ****             delete_sieve(sieve_instance);
 18758              		.loc 1 1270 13 view .LVU6453
 18759              	# sieve_extend.c:1270:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1270:sieve_extend.c ****             delete_sieve(sieve_instance);
 18760              		.loc 1 1270 30 is_stmt 0 view .LVU6454
 18761 048f 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	#, option_maxFactor
 18761      90000000 
 18762 0497 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 18763              	# sieve_extend.c:1272:             passes++;
1272:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 18764              		.loc 1 1272 19 view .LVU6455
 18765 049a 4983C701 		add	r15, 1	# passes,
 18766              	# sieve_extend.c:1270:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1270:sieve_extend.c ****             delete_sieve(sieve_instance);
 18767              		.loc 1 1270 30 view .LVU6456
 18768 049e E8000000 		call	sieve	#
 18768      00
 18769              	.LVL1222:
 18770              	.LBB964:
 18771              	.LBB961:
 18772              	# sieve_extend.c:105:     free(sieve->bitarray);
 105:sieve_extend.c ****     free(sieve);
 18773              		.loc 1 105 5 view .LVU6457
 18774 04a3 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_143->bitarray
 18775              	.LBE961:
 18776              	.LBE964:
 18777              	# sieve_extend.c:1270:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1270:sieve_extend.c ****             delete_sieve(sieve_instance);
 18778              		.loc 1 1270 30 view .LVU6458
 18779 04a6 4889C3   		mov	rbx, rax	# sieve_instance, tmp499
1271:sieve_extend.c ****             passes++;
 18780              		.loc 1 1271 13 is_stmt 1 view .LVU6459
 18781              	.LVL1223:
 18782              	.LBB965:
 104:sieve_extend.c ****     free(sieve->bitarray);
 18783              		.loc 1 104 13 view .LVU6460
 18784              	.LBB962:
 105:sieve_extend.c ****     free(sieve);
 18785              		.loc 1 105 5 view .LVU6461
 18786 04a9 E8000000 		call	free@PLT	#
 18786      00
 18787              	.LVL1224:
 106:sieve_extend.c **** }
 18788              		.loc 1 106 5 view .LVU6462
 18789 04ae 4889DF   		mov	rdi, rbx	#, sieve_instance
 18790 04b1 E8000000 		call	free@PLT	#
 18790      00
 18791              	.LVL1225:
GAS LISTING /tmp/cct11Qa0.s 			page 500


 106:sieve_extend.c **** }
 18792              		.loc 1 106 5 is_stmt 0 view .LVU6463
 18793              	.LBE962:
 18794              	.LBE965:
1272:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 18795              		.loc 1 1272 13 is_stmt 1 view .LVU6464
1273:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 18796              		.loc 1 1273 13 view .LVU6465
 18797 04b6 4C89EE   		mov	rsi, r13	#, tmp427
 18798 04b9 BF010000 		mov	edi, 1	#,
 18798      00
 18799 04be E8000000 		call	clock_gettime@PLT	#
 18799      00
 18800              	.LVL1226:
 18801              		.loc 1 1274 13 view .LVU6466
 18802              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18803              		.loc 1 1274 62 is_stmt 0 view .LVU6467
 18804 04c3 C461AB2A 		vcvtsi2sd	xmm10, xmm10, QWORD PTR 184[rsp]	# tmp482, end_time.tv_nsec
 18804      9424B800 
 18804      0000
 18805              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18806              		.loc 1 1274 68 view .LVU6468
 18807 04cd C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 160[rsp]	# tmp483, start_time.tv_sec
 18807      9C24A000 
 18807      0000
 18808              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18809              		.loc 1 1274 108 view .LVU6469
 18810 04d7 C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 168[rsp]	# tmp485, start_time.tv_nsec
 18810      A424A800 
 18810      0000
 18811              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18812              		.loc 1 1274 44 view .LVU6470
 18813 04e1 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 176[rsp]	# tmp486, end_time.tv_sec
 18813      AC24B000 
 18813      0000
 18814              	# sieve_extend.c:1269:         while (elapsed_time <= max_time) {
1269:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 18815              		.loc 1 1269 15 view .LVU6471
 18816 04eb C57B1035 		vmovsd	xmm14, QWORD PTR .LC57[rip]	# tmp589,
 18816      00000000 
 18817 04f3 C462A19B 		vfmsub132sd	xmm10, xmm11, QWORD PTR .LC8[rip]	# _285, tmp483,
 18817      15000000 
 18817      00
 18818 04fc C462919D 		vfnmadd132sd	xmm12, xmm13, QWORD PTR .LC8[rip]	# _286, tmp486,
 18818      25000000 
 18818      00
 18819              	# sieve_extend.c:1274:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18820              		.loc 1 1274 26 view .LVU6472
 18821 0505 C4C12B58 		vaddsd	xmm0, xmm10, xmm12	# elapsed_time, _285, _286
 18821      C4
 18822              	.LVL1227:
1269:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 18823              		.loc 1 1269 15 is_stmt 1 view .LVU6473
 18824 050a C5792FF0 		vcomisd	xmm14, xmm0	# tmp589, elapsed_time
 18825 050e 0F83F7FE 		jnb	.L1725	#,
 18825      FFFF
 18826              	.L1797:
GAS LISTING /tmp/cct11Qa0.s 			page 501


1275:sieve_extend.c ****         }
1276:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 18827              		.loc 1 1276 9 view .LVU6474
 18828              	.LVL1228:
 18829              	.LBB966:
 18830              	.LBI966:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18831              		.loc 3 105 1 view .LVU6475
 18832              	.LBB967:
 18833              		.loc 3 107 3 view .LVU6476
 18834              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18835              		.loc 3 107 10 is_stmt 0 view .LVU6477
 18836 0514 4C89FA   		mov	rdx, r15	#, passes
 18837 0517 488D3500 		lea	rsi, .LC58[rip]	#,
 18837      000000
 18838 051e BF010000 		mov	edi, 1	#,
 18838      00
 18839 0523 B8010000 		mov	eax, 1	#,
 18839      00
 18840 0528 C5FB1144 		vmovsd	QWORD PTR 32[rsp], xmm0	# %sfp, elapsed_time
 18840      2420
 18841 052e E8000000 		call	__printf_chk@PLT	#
 18841      00
 18842              	.LVL1229:
 18843              		.loc 3 107 10 view .LVU6478
 18844              	.LBE967:
 18845              	.LBE966:
1277:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 18846              		.loc 1 1277 9 is_stmt 1 view .LVU6479
 18847              	# sieve_extend.c:1277:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 18848              		.loc 1 1277 12 is_stmt 0 view .LVU6480
 18849 0533 83BC2488 		cmp	DWORD PTR 136[rsp], 0	# option_verboselevel,
 18849      00000000 
 18850 053b 0F8FCB00 		jg	.L1812	#,
 18850      0000
 18851              	.LVL1230:
 18852              	.L1723:
 18853              		.loc 1 1277 12 view .LVU6481
 18854              	.LBE957:
1278:sieve_extend.c ****     }
1279:sieve_extend.c ****     
1280:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 18855              		.loc 1 1280 5 is_stmt 1 view .LVU6482
 18856              	# sieve_extend.c:1280:     if (option_showMaxFactor > 0) {
 18857              		.loc 1 1280 8 is_stmt 0 view .LVU6483
 18858 0541 4883BC24 		cmp	QWORD PTR 152[rsp], 0	# option_showMaxFactor,
 18858      98000000 
 18858      00
 18859 054a 756E     		jne	.L1813	#,
 18860 054c 0F1F4000 		.p2align 4
 18861              		.p2align 3
 18862              	.L1731:
 18863              	.LBB974:
 18864              	.LBB952:
 18865              	.LBB949:
 18866              	.LBB942:
1246:sieve_extend.c ****             }
GAS LISTING /tmp/cct11Qa0.s 			page 502


 18867              		.loc 1 1246 29 is_stmt 1 discriminator 1 view .LVU6484
 18868              	.LBE942:
 18869              	.LBE949:
 18870              	.LBE952:
 18871              	.LBE974:
 18872              	# sieve_extend.c:1287: }
1281:sieve_extend.c ****         printf("Show result set:\n");
1282:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1283:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1284:sieve_extend.c ****         delete_sieve(sieve_instance);
1285:sieve_extend.c ****         printf("\n");
1286:sieve_extend.c ****     }
1287:sieve_extend.c **** }
 18873              		.loc 1 1287 1 is_stmt 0 discriminator 1 view .LVU6485
 18874 0550 488B8424 		mov	rax, QWORD PTR 200[rsp]	# tmp535, D.35620
 18874      C8000000 
 18875 0558 64483304 		xor	rax, QWORD PTR fs:40	# tmp535, MEM[(<address-space-1> long unsigned int *)40B]
 18875      25280000 
 18875      00
 18876 0561 0F85DB08 		jne	.L1814	#,
 18876      0000
 18877              	# sieve_extend.c:1287: }
 18878              		.loc 1 1287 1 view .LVU6486
 18879 0567 488DA424 		lea	rsp, 216[rsp]	#,
 18879      D8000000 
 18880              		.cfi_remember_state
 18881              		.cfi_def_cfa_offset 56
 18882 056f 31C0     		xor	eax, eax	#
 18883 0571 5B       		pop	rbx	#
 18884              		.cfi_def_cfa_offset 48
 18885 0572 5D       		pop	rbp	#
 18886              		.cfi_def_cfa_offset 40
 18887 0573 415C     		pop	r12	#
 18888              		.cfi_def_cfa_offset 32
 18889 0575 415D     		pop	r13	#
 18890              		.cfi_def_cfa_offset 24
 18891 0577 415E     		pop	r14	#
 18892              		.cfi_def_cfa_offset 16
 18893 0579 415F     		pop	r15	#
 18894              		.cfi_def_cfa_offset 8
 18895 057b C3       		ret	
 18896              	.L1689:
 18897              		.cfi_restore_state
1234:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18898              		.loc 1 1234 39 is_stmt 1 view .LVU6487
 18899              	.LVL1231:
 18900              	.LBB975:
 18901              	.LBI975:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18902              		.loc 3 105 1 view .LVU6488
 18903              	.LBB976:
 18904              		.loc 3 107 3 view .LVU6489
 18905              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18906              		.loc 3 107 10 is_stmt 0 view .LVU6490
 18907 057c 488D3500 		lea	rsi, .LC27[rip]	#,
 18907      000000
 18908 0583 BF010000 		mov	edi, 1	#,
GAS LISTING /tmp/cct11Qa0.s 			page 503


 18908      00
 18909 0588 31C0     		xor	eax, eax	#
 18910 058a E8000000 		call	__printf_chk@PLT	#
 18910      00
 18911              	.LVL1232:
 18912 058f E95BFCFF 		jmp	.L1674	#
 18912      FF
 18913              	.LVL1233:
 18914              	.L1678:
 18915              		.loc 3 107 10 view .LVU6491
 18916              	.LBE976:
 18917              	.LBE975:
 18918              	.LBB977:
1194:sieve_extend.c ****             }
 18919              		.loc 1 1194 17 is_stmt 1 view .LVU6492
 18920              	.LBB904:
 18921              	.LBI904:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18922              		.loc 3 98 1 view .LVU6493
 18923              	.LBB905:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18924              		.loc 3 100 3 view .LVU6494
 18925              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18926              		.loc 3 100 10 is_stmt 0 view .LVU6495
 18927 0594 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 18928 0597 488D1500 		lea	rdx, .LC32[rip]	#,
 18928      000000
 18929              	.LVL1234:
 18930              	.L1800:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18931              		.loc 3 100 10 view .LVU6496
 18932              	.LBE905:
 18933              	.LBE904:
 18934              	.LBB906:
 18935              	.LBB907:
 18936 059e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 18936      000000
 18937 05a5 BE010000 		mov	esi, 1	#,
 18937      00
 18938 05aa 31C0     		xor	eax, eax	#
 18939 05ac E8000000 		call	__fprintf_chk@PLT	#
 18939      00
 18940              	.LVL1235:
 18941              	.L1801:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18942              		.loc 3 100 10 view .LVU6497
 18943              	.LBE907:
 18944              	.LBE906:
1202:sieve_extend.c ****             }
 18945              		.loc 1 1202 80 is_stmt 1 view .LVU6498
 18946 05b1 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 18947 05b5 E8000000 		call	usage	#
 18947      00
 18948              	.LVL1236:
 18949              	.L1813:
1202:sieve_extend.c ****             }
GAS LISTING /tmp/cct11Qa0.s 			page 504


 18950              		.loc 1 1202 80 is_stmt 0 view .LVU6499
 18951              	.LBE977:
 18952              	.LBB978:
1281:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 18953              		.loc 1 1281 9 is_stmt 1 view .LVU6500
 18954              	.LBB979:
 18955              	.LBI979:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18956              		.loc 3 105 1 view .LVU6501
 18957              	.LBB980:
 18958              		.loc 3 107 3 view .LVU6502
 18959              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18960              		.loc 3 107 10 is_stmt 0 view .LVU6503
 18961 05ba 488D3D00 		lea	rdi, .LC60[rip]	#,
 18961      000000
 18962 05c1 E8000000 		call	puts@PLT	#
 18962      00
 18963              	.LVL1237:
 18964              		.loc 3 107 10 view .LVU6504
 18965              	.LBE980:
 18966              	.LBE979:
1282:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 18967              		.loc 1 1282 9 is_stmt 1 view .LVU6505
 18968              	# sieve_extend.c:1282:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1282:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 18969              		.loc 1 1282 46 is_stmt 0 view .LVU6506
 18970 05c6 488BBC24 		mov	rdi, QWORD PTR 144[rsp]	# option_maxFactor.50_91, option_maxFactor
 18970      90000000 
 18971 05ce 4889FE   		mov	rsi, rdi	#, option_maxFactor.50_91
 18972 05d1 E8000000 		call	sieve	#
 18972      00
 18973              	.LVL1238:
 18974              	# sieve_extend.c:1283:         show_primes(sieve_instance, option_showMaxFactor);
1283:sieve_extend.c ****         delete_sieve(sieve_instance);
 18975              		.loc 1 1283 9 view .LVU6507
 18976 05d6 488B9424 		mov	rdx, QWORD PTR 152[rsp]	#, option_showMaxFactor
 18976      98000000 
 18977              	# sieve_extend.c:1282:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1282:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 18978              		.loc 1 1282 46 view .LVU6508
 18979 05de 4989C6   		mov	r14, rax	# sieve_instance, tmp498
 18980              	.LVL1239:
1283:sieve_extend.c ****         delete_sieve(sieve_instance);
 18981              		.loc 1 1283 9 is_stmt 1 view .LVU6509
 18982 05e1 488D7008 		lea	rsi, 8[rax]	# tmp424,
 18983 05e5 4889C7   		mov	rdi, rax	#, sieve_instance
 18984 05e8 E8000000 		call	show_primes.isra.0	#
 18984      00
 18985              	.LVL1240:
1284:sieve_extend.c ****         printf("\n");
 18986              		.loc 1 1284 9 view .LVU6510
 18987              	.LBB981:
 18988              	.LBI981:
 104:sieve_extend.c ****     free(sieve->bitarray);
 18989              		.loc 1 104 13 view .LVU6511
 18990              	.LBB982:
 105:sieve_extend.c ****     free(sieve);
GAS LISTING /tmp/cct11Qa0.s 			page 505


 18991              		.loc 1 105 5 view .LVU6512
 18992 05ed 498B3E   		mov	rdi, QWORD PTR [r14]	#, sieve_instance_148->bitarray
 18993 05f0 E8000000 		call	free@PLT	#
 18993      00
 18994              	.LVL1241:
 106:sieve_extend.c **** }
 18995              		.loc 1 106 5 view .LVU6513
 18996 05f5 4C89F7   		mov	rdi, r14	#, sieve_instance
 18997 05f8 E8000000 		call	free@PLT	#
 18997      00
 18998              	.LVL1242:
 106:sieve_extend.c **** }
 18999              		.loc 1 106 5 is_stmt 0 view .LVU6514
 19000              	.LBE982:
 19001              	.LBE981:
1285:sieve_extend.c ****     }
 19002              		.loc 1 1285 9 is_stmt 1 view .LVU6515
 19003              	.LBB983:
 19004              	.LBI983:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19005              		.loc 3 105 1 view .LVU6516
 19006              	.LBB984:
 19007              		.loc 3 107 3 view .LVU6517
 19008              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19009              		.loc 3 107 10 is_stmt 0 view .LVU6518
 19010 05fd BF0A0000 		mov	edi, 10	#,
 19010      00
 19011 0602 E8000000 		call	putchar@PLT	#
 19011      00
 19012              	.LVL1243:
 19013 0607 E944FFFF 		jmp	.L1731	#
 19013      FF
 19014              	.LVL1244:
 19015              	.L1812:
 19016              		.loc 3 107 10 view .LVU6519
 19017              	.LBE984:
 19018              	.LBE983:
 19019              	.LBE978:
 19020              	.LBB985:
1277:sieve_extend.c ****     }
 19021              		.loc 1 1277 39 is_stmt 1 discriminator 1 view .LVU6520
 19022              	.LBB968:
 19023              	.LBI968:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19024              		.loc 3 105 1 discriminator 1 view .LVU6521
 19025              	.LBB969:
 19026              		.loc 3 107 3 discriminator 1 view .LVU6522
 19027              	.LBE969:
 19028              	.LBE968:
 19029              	# sieve_extend.c:1277:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1277:sieve_extend.c ****     }
 19030              		.loc 1 1277 39 is_stmt 0 discriminator 1 view .LVU6523
 19031 060c C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp412, passes
 19031      C7
 19032 0611 4D85FF   		test	r15, r15	# passes
 19033 0614 C57B107C 		vmovsd	xmm15, QWORD PTR 32[rsp]	# elapsed_time, %sfp
 19033      2420
GAS LISTING /tmp/cct11Qa0.s 			page 506


 19034 061a 7918     		jns	.L1728	#,
 19035 061c 4C89F9   		mov	rcx, r15	# tmp414, passes
 19036 061f 4C89FE   		mov	rsi, r15	# tmp415, passes
 19037 0622 48D1E9   		shr	rcx	# tmp414
 19038 0625 83E601   		and	esi, 1	# tmp415,
 19039 0628 4809F1   		or	rcx, rsi	# tmp478, tmp415
 19040 062b C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rcx	# tmp413, tmp478
 19040      F9
 19041 0630 C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp412, tmp413, tmp413
 19042              	.L1728:
1277:sieve_extend.c ****     }
 19043              		.loc 1 1277 39 discriminator 1 view .LVU6524
 19044 0634 C4C17B5E 		vdivsd	xmm1, xmm0, xmm15	# tmp416, tmp412, elapsed_time
 19044      CF
 19045              	# sieve_extend.c:1277:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1277:sieve_extend.c ****     }
 19046              		.loc 1 1277 95 discriminator 1 view .LVU6525
 19047 0639 4F8D04BF 		lea	r8, [r15+r15*4]	# tmp417,
 19048              	# sieve_extend.c:1277:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1277:sieve_extend.c ****     }
 19049              		.loc 1 1277 39 discriminator 1 view .LVU6526
 19050 063d 4D85C0   		test	r8, r8	# tmp417
 19051 0640 C4C1E32A 		vcvtsi2sd	xmm3, xmm3, r8	# tmp418, tmp417
 19051      D8
 19052 0645 7916     		jns	.L1730	#,
 19053 0647 4C89C0   		mov	rax, r8	# tmp420, tmp417
 19054 064a 4183E001 		and	r8d, 1	# tmp421,
 19055 064e 48D1E8   		shr	rax	# tmp420
 19056 0651 4C09C0   		or	rax, r8	# tmp479, tmp421
 19057 0654 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, rax	# tmp419, tmp479
 19057      D0
 19058 0659 C5EB58DA 		vaddsd	xmm3, xmm2, xmm2	# tmp418, tmp419, tmp419
 19059              	.L1730:
 19060 065d C4C1635E 		vdivsd	xmm0, xmm3, xmm15	# tmp422, tmp418, elapsed_time
 19060      C7
 19061              	.LBB971:
 19062              	.LBB970:
 19063              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19064              		.loc 3 107 10 discriminator 1 view .LVU6527
 19065 0662 488D3500 		lea	rsi, .LC59[rip]	#,
 19065      000000
 19066 0669 BF010000 		mov	edi, 1	#,
 19066      00
 19067 066e B8020000 		mov	eax, 2	#,
 19067      00
 19068 0673 E8000000 		call	__printf_chk@PLT	#
 19068      00
 19069              	.LVL1245:
 19070 0678 E9C4FEFF 		jmp	.L1723	#
 19070      FF
 19071              	.LVL1246:
 19072              	.L1811:
 19073              		.loc 3 107 10 discriminator 1 view .LVU6528
 19074              	.LBE970:
 19075              	.LBE971:
 19076              	.LBE985:
 19077              	.LBB986:
GAS LISTING /tmp/cct11Qa0.s 			page 507


1255:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19078              		.loc 1 1255 9 is_stmt 1 view .LVU6529
 19079              	# sieve_extend.c:1255:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1255:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19080              		.loc 1 1255 44 is_stmt 0 view .LVU6530
 19081 067d 448B9424 		mov	r10d, DWORD PTR 136[rsp]	# option_verboselevel.41_63, option_verboselevel
 19081      88000000 
 19082 0685 4183E801 		sub	r8d, 1	#,
 19083 0689 4C8B9C24 		mov	r11, QWORD PTR 144[rsp]	# option_maxFactor.42_64, option_maxFactor
 19083      90000000 
 19084 0691 4183F802 		cmp	r8d, 2	# _209,
 19085 0695 44895424 		mov	DWORD PTR 112[rsp], r10d	# %sfp, option_verboselevel.41_63
 19085      70
 19086 069a 4C895C24 		mov	QWORD PTR 104[rsp], r11	# %sfp, option_maxFactor.42_64
 19086      68
 19087              	.LVL1247:
 19088              	.LBB987:
 19089              	.LBI987:
1049:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19090              		.loc 1 1049 27 is_stmt 1 view .LVU6531
 19091              	.LBB988:
1050:sieve_extend.c **** 
 19092              		.loc 1 1050 5 view .LVU6532
1052:sieve_extend.c ****     best_blocksize_bits = 0;
 19093              		.loc 1 1052 5 view .LVU6533
1053:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19094              		.loc 1 1053 5 view .LVU6534
1054:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19095              		.loc 1 1054 5 view .LVU6535
1055:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19096              		.loc 1 1055 5 view .LVU6536
1056:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 19097              		.loc 1 1056 5 view .LVU6537
1057:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 19098              		.loc 1 1057 5 view .LVU6538
1058:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 19099              		.loc 1 1058 5 view .LVU6539
1059:sieve_extend.c ****     double sample_duration = default_sample_duration;
 19100              		.loc 1 1059 5 view .LVU6540
1060:sieve_extend.c **** 
 19101              		.loc 1 1060 5 view .LVU6541
1063:sieve_extend.c ****         case 1:
 19102              		.loc 1 1063 5 view .LVU6542
 19103 069f 0F866A06 		jbe	.L1732	#,
 19103      0000
 19104 06a5 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC26[rip]	# sample_duration,
 19104      00000000 
 19105 06ad 48C74424 		mov	QWORD PTR 80[rsp], 5	# %sfp,
 19105      50050000 
 19105      00
 19106 06b6 48C74424 		mov	QWORD PTR 88[rsp], 128	# %sfp,
 19106      58800000 
 19106      00
 19107 06bf 48C74424 		mov	QWORD PTR 120[rsp], 4	# %sfp,
 19107      78040000 
 19107      00
 19108 06c8 C5FB117C 		vmovsd	QWORD PTR 96[rsp], xmm7	# %sfp, sample_duration
GAS LISTING /tmp/cct11Qa0.s 			page 508


 19108      2460
 19109              	.LVL1248:
 19110              	.L1702:
1088:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19111              		.loc 1 1088 5 view .LVU6543
 19112              	# sieve_extend.c:1088:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1088:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19113              		.loc 1 1088 33 is_stmt 0 view .LVU6544
 19114 06ce B8400000 		mov	eax, 64	# tmp330,
 19114      00
 19115 06d3 31D2     		xor	edx, edx	# tmp329
 19116 06d5 48F77424 		div	QWORD PTR 120[rsp]	# %sfp
 19116      78
 19117              	# sieve_extend.c:1088:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1088:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19118              		.loc 1 1088 194 view .LVU6545
 19119 06da 31D2     		xor	edx, edx	# tmp337
 19120              	# sieve_extend.c:1090:     counter_t tuning_results=0;
1090:sieve_extend.c ****     counter_t tuning_result_index=0;
 19121              		.loc 1 1090 15 view .LVU6546
 19122 06dc 4531E4   		xor	r12d, r12d	# tuning_results
 19123              	.LBB989:
 19124              	# sieve_extend.c:1093:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19125              		.loc 1 1093 20 view .LVU6547
 19126 06df 4531FF   		xor	r15d, r15d	# smallstep_faster
 19127              	.LBE989:
 19128              	# sieve_extend.c:1088:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1088:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19129              		.loc 1 1088 83 view .LVU6548
 19130 06e2 488D7801 		lea	rdi, 1[rax]	# _223,
 19131              	.LVL1249:
1089:sieve_extend.c ****     counter_t tuning_results=0;
 19132              		.loc 1 1089 5 is_stmt 1 view .LVU6549
 19133              	# sieve_extend.c:1088:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1088:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 19134              		.loc 1 1088 194 is_stmt 0 view .LVU6550
 19135 06e6 B8001000 		mov	eax, 4096	# tmp338,
 19135      00
 19136 06eb 48F77424 		div	QWORD PTR 88[rsp]	# %sfp
 19136      58
 19137              	# sieve_extend.c:1089:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1089:sieve_extend.c ****     counter_t tuning_results=0;
 19138              		.loc 1 1089 41 view .LVU6551
 19139 06f0 480FAFC7 		imul	rax, rdi	# tmp343, _223
 19140 06f4 480FAFF8 		imul	rdi, rax	# tmp344, tmp343
 19141              	.LVL1250:
1089:sieve_extend.c ****     counter_t tuning_results=0;
 19142              		.loc 1 1089 41 view .LVU6552
 19143 06f8 48C1E708 		sal	rdi, 8	# tmp345,
 19144 06fc E8000000 		call	malloc@PLT	#
 19144      00
 19145              	.LVL1251:
1090:sieve_extend.c ****     counter_t tuning_result_index=0;
 19146              		.loc 1 1090 5 is_stmt 1 view .LVU6553
1091:sieve_extend.c ****     
 19147              		.loc 1 1091 5 view .LVU6554
GAS LISTING /tmp/cct11Qa0.s 			page 509


1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19148              		.loc 1 1093 5 view .LVU6555
 19149              	.LBB1002:
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19150              		.loc 1 1093 10 view .LVU6556
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19151              		.loc 1 1093 42 view .LVU6557
 19152              	.LBE1002:
 19153              	# sieve_extend.c:1052:     double best_avg = 0;
1052:sieve_extend.c ****     best_blocksize_bits = 0;
 19154              		.loc 1 1052 12 is_stmt 0 view .LVU6558
 19155 0701 C5E957D2 		vxorpd	xmm2, xmm2, xmm2	# best_avg
 19156              	# sieve_extend.c:1055:     counter_t best_mediumstep_faster = 0;
1055:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19157              		.loc 1 1055 15 view .LVU6559
 19158 0705 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 19158      48000000 
 19158      00
 19159              	# sieve_extend.c:1054:     counter_t best_smallstep_faster = 0;
1054:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19160              		.loc 1 1054 15 view .LVU6560
 19161 070e 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 19161      40000000 
 19161      00
 19162              	# sieve_extend.c:1053:     best_blocksize_bits = 0;
1053:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19163              		.loc 1 1053 25 view .LVU6561
 19164 0717 48C74424 		mov	QWORD PTR 56[rsp], 0	# %sfp,
 19164      38000000 
 19164      00
 19165 0720 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, tuning_result
 19165      30
 19166              	# sieve_extend.c:1052:     double best_avg = 0;
1052:sieve_extend.c ****     best_blocksize_bits = 0;
 19167              		.loc 1 1052 12 view .LVU6562
 19168 0725 C5FB1154 		vmovsd	QWORD PTR 32[rsp], xmm2	# %sfp, best_avg
 19168      2420
 19169              	.LVL1252:
 19170              	.L1704:
 19171              	.LBB1003:
 19172              	.LBB990:
1094:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19173              		.loc 1 1094 62 is_stmt 1 view .LVU6563
 19174              	.LBB991:
 19175              	# sieve_extend.c:1095:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19176              		.loc 1 1095 28 is_stmt 0 view .LVU6564
 19177 072b 4D89FE   		mov	r14, r15	# mediumstep_faster, smallstep_faster
 19178              	.LVL1253:
 19179 072e 6690     		.p2align 4
 19180              		.p2align 3
 19181              	.L1714:
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19182              		.loc 1 1095 46 is_stmt 1 view .LVU6565
 19183              	.LBB992:
 19184              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
GAS LISTING /tmp/cct11Qa0.s 			page 510


 19185              		.loc 1 1096 32 is_stmt 0 view .LVU6566
 19186 0730 C7442474 		mov	DWORD PTR 116[rsp], 6	# %sfp,
 19186      06000000 
 19187              	.LBE992:
 19188              	# sieve_extend.c:1095:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19189              		.loc 1 1095 28 view .LVU6567
 19190 0738 48C74424 		mov	QWORD PTR 40[rsp], 256	# %sfp,
 19190      28000100 
 19190      00
 19191              	.LVL1254:
 19192 0741 66662E0F 		.p2align 4
 19192      1F840000 
 19192      0000000F 
 19192      1F4000
 19193              		.p2align 3
 19194              	.L1712:
 19195              	.LBB1001:
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19196              		.loc 1 1096 45 is_stmt 1 view .LVU6568
 19197              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19198              		.loc 1 1096 130 is_stmt 0 view .LVU6569
 19199 0750 488B5C24 		mov	rbx, QWORD PTR 40[rsp]	# ivtmp.744, %sfp
 19199      28
 19200 0755 4F8D04A4 		lea	r8, [r12+r12*4]	# tmp368,
 19201 0759 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# tuning_result, %sfp
 19201      30
 19202 075e 4F8D1444 		lea	r10, [r12+r8*2]	# tmp370,
 19203              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19204              		.loc 1 1096 32 view .LVU6570
 19205 0762 31ED     		xor	ebp, ebp	# free_bits
 19206              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19207              		.loc 1 1096 130 view .LVU6571
 19208 0764 48C1E30D 		sal	rbx, 13	# ivtmp.744,
 19209 0768 4F8D2CD3 		lea	r13, [r11+r10*8]	# ivtmp.743,
 19210 076c EB3E     		jmp	.L1710	#
 19211              	.LVL1255:
 19212 076e 6690     		.p2align 4,,7
 19213              		.p2align 3
 19214              	.L1707:
 19215              	.LBB993:
1112:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 19216              		.loc 1 1112 25 is_stmt 1 view .LVU6572
1113:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 19217              		.loc 1 1113 25 view .LVU6573
1114:sieve_extend.c ****                         best_mediumstep_faster = mediumstep_faster;
 19218              		.loc 1 1114 25 view .LVU6574
1115:sieve_extend.c ****                         if (option_verboselevel >=2) printf(".(>)blocksize_bits %10ju; blocksize %4
 19219              		.loc 1 1115 25 view .LVU6575
1116:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19220              		.loc 1 1116 25 view .LVU6576
 19221              	# sieve_extend.c:1116:                         if (option_verboselevel >=2) printf(".(>)blocksize_b
1116:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19222              		.loc 1 1116 28 is_stmt 0 view .LVU6577
GAS LISTING /tmp/cct11Qa0.s 			page 511


 19223 0770 837C2470 		cmp	DWORD PTR 112[rsp], 1	# %sfp,
 19223      01
 19224 0775 0F8FED00 		jg	.L1815	#,
 19224      0000
1116:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19225              		.loc 1 1116 28 view .LVU6578
 19226 077b 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 19226      48
 19227 0780 4C897C24 		mov	QWORD PTR 64[rsp], r15	# %sfp, smallstep_faster
 19227      40
 19228              	# sieve_extend.c:1112:                         best_avg = tuning_result[tuning_result_index].avg;
1112:sieve_extend.c ****                         best_blocksize_bits = blocksize_bits;
 19229              		.loc 1 1112 34 view .LVU6579
 19230 0785 C5FB1154 		vmovsd	QWORD PTR 32[rsp], xmm2	# %sfp, _242
 19230      2420
 19231              	# sieve_extend.c:1113:                         best_blocksize_bits = blocksize_bits;
1113:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 19232              		.loc 1 1113 45 view .LVU6580
 19233 078b 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.744
 19233      38
 19234              	.LVL1256:
 19235              	.L1705:
1127:sieve_extend.c ****                 }
 19236              		.loc 1 1127 21 is_stmt 1 view .LVU6581
1127:sieve_extend.c ****                 }
 19237              		.loc 1 1127 21 is_stmt 0 view .LVU6582
 19238              	.LBE993:
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19239              		.loc 1 1096 137 is_stmt 1 view .LVU6583
 19240              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19241              		.loc 1 1096 147 is_stmt 0 view .LVU6584
 19242 0790 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# freebits_steps, %sfp
 19242      58
 19243 0795 4983C558 		add	r13, 88	# ivtmp.743,
 19244 0799 4801D5   		add	rbp, rdx	# free_bits, freebits_steps
 19245              	.LVL1257:
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19246              		.loc 1 1096 45 is_stmt 1 view .LVU6585
 19247 079c 4829D3   		sub	rbx, rdx	# ivtmp.744, freebits_steps
 19248              	.LVL1258:
 19249              	# sieve_extend.c:1096:                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_li
1096:sieve_extend.c ****                     counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 19250              		.loc 1 1096 17 is_stmt 0 view .LVU6586
 19251 079f 4881FDFF 		cmp	rbp, 4095	# free_bits,
 19251      0F0000
 19252 07a6 0F872401 		ja	.L1706	#,
 19252      0000
 19253              	.LVL1259:
 19254              	.L1710:
 19255              	.LBB1000:
1097:sieve_extend.c **** 
 19256              		.loc 1 1097 21 is_stmt 1 view .LVU6587
1100:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 19257              		.loc 1 1100 21 view .LVU6588
 19258              	# sieve_extend.c:1101:                     tuning_result[tuning_result_index].maxints = maxints;
1101:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
GAS LISTING /tmp/cct11Qa0.s 			page 512


 19259              		.loc 1 1101 64 is_stmt 0 view .LVU6589
 19260 07ac 488B7C24 		mov	rdi, QWORD PTR 104[rsp]	# option_maxFactor.42_64, %sfp
 19260      68
 19261 07b1 4C89E6   		mov	rsi, r12	# tuning_results, tuning_results
 19262              	# sieve_extend.c:1103:                     tuning_result[tuning_result_index].sample_max = sample_m
1103:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 19263              		.loc 1 1103 67 view .LVU6590
 19264 07b4 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# sample_max, %sfp
 19264      50
 19265              	# sieve_extend.c:1100:                     tuning_results++;
1100:sieve_extend.c ****                     tuning_result[tuning_result_index].maxints = maxints;
 19266              		.loc 1 1100 35 view .LVU6591
 19267 07b9 4983C401 		add	r12, 1	# tuning_results,
 19268              	.LVL1260:
1101:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 19269              		.loc 1 1101 21 is_stmt 1 view .LVU6592
 19270              	# sieve_extend.c:1104:                     tuning_result[tuning_result_index].blocksize_kb = blocks
1104:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 19271              		.loc 1 1104 69 is_stmt 0 view .LVU6593
 19272 07bd 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# blocksize_kb, %sfp
 19272      28
 19273              	# sieve_extend.c:1101:                     tuning_result[tuning_result_index].maxints = maxints;
1101:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_duration = sample_duration;
 19274              		.loc 1 1101 64 view .LVU6594
 19275 07c2 49897D00 		mov	QWORD PTR 0[r13], rdi	# MEM[base: _300, offset: 0B], option_maxFactor.42_64
1102:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 19276              		.loc 1 1102 21 is_stmt 1 view .LVU6595
 19277              	# sieve_extend.c:1109:                     tune_benchmark(tuning_result, tuning_result_index);
1109:sieve_extend.c **** 
 19278              		.loc 1 1109 21 is_stmt 0 view .LVU6596
 19279 07c6 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	#, %sfp
 19279      30
 19280              	# sieve_extend.c:1102:                     tuning_result[tuning_result_index].sample_duration = sam
1102:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 19281              		.loc 1 1102 72 view .LVU6597
 19282 07cb C5FB105C 		vmovsd	xmm3, QWORD PTR 96[rsp]	# sample_duration, %sfp
 19282      2460
 19283              	# sieve_extend.c:1103:                     tuning_result[tuning_result_index].sample_max = sample_m
1103:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 19284              		.loc 1 1103 67 view .LVU6598
 19285 07d1 49894D30 		mov	QWORD PTR 48[r13], rcx	# MEM[base: _300, offset: 48B], sample_max
 19286              	# sieve_extend.c:1104:                     tuning_result[tuning_result_index].blocksize_kb = blocks
1104:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 19287              		.loc 1 1104 69 view .LVU6599
 19288 07d5 4D894D10 		mov	QWORD PTR 16[r13], r9	# MEM[base: _300, offset: 16B], blocksize_kb
 19289              	# sieve_extend.c:1105:                     tuning_result[tuning_result_index].free_bits = free_bits
1105:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 19290              		.loc 1 1105 66 view .LVU6600
 19291 07d9 49896D18 		mov	QWORD PTR 24[r13], rbp	# MEM[base: _300, offset: 24B], free_bits
 19292              	# sieve_extend.c:1106:                     tuning_result[tuning_result_index].blocksize_bits = bloc
1106:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 19293              		.loc 1 1106 71 view .LVU6601
 19294 07dd 49895D08 		mov	QWORD PTR 8[r13], rbx	# MEM[base: _300, offset: 8B], ivtmp.744
 19295              	# sieve_extend.c:1107:                     tuning_result[tuning_result_index].smallstep_faster = sm
1107:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 19296              		.loc 1 1107 73 view .LVU6602
 19297 07e1 4D897D20 		mov	QWORD PTR 32[r13], r15	# MEM[base: _300, offset: 32B], smallstep_faster
GAS LISTING /tmp/cct11Qa0.s 			page 513


 19298              	# sieve_extend.c:1108:                     tuning_result[tuning_result_index].mediumstep_faster = m
1108:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 19299              		.loc 1 1108 74 view .LVU6603
 19300 07e5 4D897528 		mov	QWORD PTR 40[r13], r14	# MEM[base: _300, offset: 40B], mediumstep_faster
 19301              	# sieve_extend.c:1102:                     tuning_result[tuning_result_index].sample_duration = sam
1102:sieve_extend.c ****                     tuning_result[tuning_result_index].sample_max = sample_max;
 19302              		.loc 1 1102 72 view .LVU6604
 19303 07e9 C4C17B11 		vmovsd	QWORD PTR 56[r13], xmm3	# MEM[base: _300, offset: 56B], sample_duration
 19303      5D38
1103:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 19304              		.loc 1 1103 21 is_stmt 1 view .LVU6605
1104:sieve_extend.c ****                     tuning_result[tuning_result_index].free_bits = free_bits;
 19305              		.loc 1 1104 21 view .LVU6606
1105:sieve_extend.c ****                     tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 19306              		.loc 1 1105 21 view .LVU6607
1106:sieve_extend.c ****                     tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 19307              		.loc 1 1106 21 view .LVU6608
1107:sieve_extend.c ****                     tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 19308              		.loc 1 1107 21 view .LVU6609
1108:sieve_extend.c ****                     tune_benchmark(tuning_result, tuning_result_index);
 19309              		.loc 1 1108 21 view .LVU6610
1109:sieve_extend.c **** 
 19310              		.loc 1 1109 21 view .LVU6611
 19311 07ef E8000000 		call	tune_benchmark	#
 19311      00
 19312              	.LVL1261:
1111:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 19313              		.loc 1 1111 21 view .LVU6612
 19314              	# sieve_extend.c:1111:                     if ( tuning_result[tuning_result_index].avg > best_avg) 
1111:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 19315              		.loc 1 1111 60 is_stmt 0 view .LVU6613
 19316 07f4 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r13]	# _242, MEM[base: _300, offset: 80B]
 19316      5550
 19317              	# sieve_extend.c:1111:                     if ( tuning_result[tuning_result_index].avg > best_avg) 
1111:sieve_extend.c ****                         best_avg = tuning_result[tuning_result_index].avg;
 19318              		.loc 1 1111 24 view .LVU6614
 19319 07fa C5F92F54 		vcomisd	xmm2, QWORD PTR 32[rsp]	# _242, %sfp
 19319      2420
 19320 0800 0F876AFF 		ja	.L1707	#,
 19320      FFFF
 19321              	.L1708:
1122:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19322              		.loc 1 1122 21 is_stmt 1 view .LVU6615
 19323              	# sieve_extend.c:1122:                     if (option_verboselevel >= 3) printf("...blocksize_bits 
1122:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19324              		.loc 1 1122 24 is_stmt 0 view .LVU6616
 19325 0806 837C2470 		cmp	DWORD PTR 112[rsp], 2	# %sfp,
 19325      02
 19326 080b 7E83     		jle	.L1705	#,
1122:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19327              		.loc 1 1122 51 is_stmt 1 view .LVU6617
 19328              	.LVL1262:
 19329              	.LBB994:
 19330              	.LBI994:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19331              		.loc 3 105 1 view .LVU6618
 19332              	.LBB995:
GAS LISTING /tmp/cct11Qa0.s 			page 514


 19333              		.loc 3 107 3 view .LVU6619
 19334              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19335              		.loc 3 107 10 is_stmt 0 view .LVU6620
 19336 080d 4D8B5530 		mov	r10, QWORD PTR 48[r13]	# MEM[base: _300, offset: 48B], MEM[base: _300, offset: 48B]
 19337 0811 488D3500 		lea	rsi, .LC51[rip]	#,
 19337      000000
 19338 0818 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r13]	# MEM[base: _300, offset: 72B], MEM[base: _300, offset: 72B]
 19338      4548
 19339 081e B8030000 		mov	eax, 3	#,
 19339      00
 19340 0823 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _300, offset: 16B], MEM[base: _300, offset: 16B]
 19341 0827 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _300, offset: 8B], MEM[base: _300, offset: 8B]
 19342 082b 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _300, offset: 48B]
 19342      10
 19343 0830 4D8B5D40 		mov	r11, QWORD PTR 64[r13]	# MEM[base: _300, offset: 64B], MEM[base: _300, offset: 64B]
 19344 0834 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _300, offset: 64B]
 19344      08
 19345 0839 498B7D28 		mov	rdi, QWORD PTR 40[r13]	# MEM[base: _300, offset: 40B], MEM[base: _300, offset: 40B]
 19346 083d 48893C24 		mov	QWORD PTR [rsp], rdi	#, MEM[base: _300, offset: 40B]
 19347 0841 BF010000 		mov	edi, 1	#,
 19347      00
 19348 0846 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _300, offset: 32B]
 19349 084a 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _300, offset: 24B]
 19350 084e C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r13]	#, MEM[base: _300, offset: 80B]
 19350      5550
 19351 0854 C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r13]	#, MEM[base: _300, offset: 56B]
 19351      4D38
 19352 085a E8000000 		call	__printf_chk@PLT	#
 19352      00
 19353              	.LVL1263:
 19354 085f E92CFFFF 		jmp	.L1705	#
 19354      FF
 19355              	.LVL1264:
 19356              		.p2align 4,,7
 19357 0864 0F1F4000 		.p2align 3
 19358              	.L1815:
 19359              		.loc 3 107 10 view .LVU6621
 19360              	.LBE995:
 19361              	.LBE994:
1116:sieve_extend.c ****                         (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_t)tu
 19362              		.loc 1 1116 54 is_stmt 1 view .LVU6622
 19363              	.LBB996:
 19364              	.LBI996:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19365              		.loc 3 105 1 view .LVU6623
 19366              	.LBB997:
 19367              		.loc 3 107 3 view .LVU6624
 19368              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19369              		.loc 3 107 10 is_stmt 0 view .LVU6625
 19370 0868 498B7530 		mov	rsi, QWORD PTR 48[r13]	# MEM[base: _300, offset: 48B], MEM[base: _300, offset: 48B]
 19371 086c BF010000 		mov	edi, 1	#,
 19371      00
 19372 0871 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r13]	# MEM[base: _300, offset: 72B], MEM[base: _300, offset: 72B]
 19372      4548
 19373 0877 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _300, offset: 16B], MEM[base: _300, offset: 16B]
 19374 087b 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _300, offset: 8B], MEM[base: _300, offset: 8B]
 19375 087f 48897424 		mov	QWORD PTR 16[rsp], rsi	#, MEM[base: _300, offset: 48B]
GAS LISTING /tmp/cct11Qa0.s 			page 515


 19375      10
 19376 0884 488D3500 		lea	rsi, .LC50[rip]	#,
 19376      000000
 19377 088b 498B4540 		mov	rax, QWORD PTR 64[r13]	# MEM[base: _300, offset: 64B], MEM[base: _300, offset: 64B]
 19378 088f C5FB1154 		vmovsd	QWORD PTR 32[rsp], xmm2	# %sfp, _242
 19378      2420
 19379 0895 48894424 		mov	QWORD PTR 8[rsp], rax	#, MEM[base: _300, offset: 64B]
 19379      08
 19380 089a B8030000 		mov	eax, 3	#,
 19380      00
 19381 089f 4D8B4528 		mov	r8, QWORD PTR 40[r13]	# MEM[base: _300, offset: 40B], MEM[base: _300, offset: 40B]
 19382 08a3 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[base: _300, offset: 40B]
 19383 08a7 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _300, offset: 32B]
 19384 08ab 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _300, offset: 24B]
 19385 08af C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r13]	#, MEM[base: _300, offset: 56B]
 19385      4D38
 19386 08b5 E8000000 		call	__printf_chk@PLT	#
 19386      00
 19387              	.LVL1265:
 19388              		.loc 3 107 10 view .LVU6626
 19389 08ba 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 19389      48
 19390 08bf 4C897C24 		mov	QWORD PTR 64[rsp], r15	# %sfp, smallstep_faster
 19390      40
 19391              	.LBE997:
 19392              	.LBE996:
 19393              	# sieve_extend.c:1113:                         best_blocksize_bits = blocksize_bits;
1113:sieve_extend.c ****                         best_smallstep_faster = smallstep_faster;
 19394              		.loc 1 1113 45 view .LVU6627
 19395 08c4 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.744
 19395      38
 19396              	.LBB999:
 19397              	.LBB998:
 19398              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19399              		.loc 3 107 10 view .LVU6628
 19400 08c9 E938FFFF 		jmp	.L1708	#
 19400      FF
 19401              	.LVL1266:
 19402 08ce 6690     		.p2align 4,,7
 19403              		.p2align 3
 19404              	.L1706:
 19405              		.loc 3 107 10 view .LVU6629
 19406              	.LBE998:
 19407              	.LBE999:
 19408              	.LBE1000:
 19409              	.LBE1001:
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19410              		.loc 1 1095 63 is_stmt 1 view .LVU6630
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19411              		.loc 1 1095 46 view .LVU6631
 19412              	# sieve_extend.c:1095:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19413              		.loc 1 1095 76 is_stmt 0 view .LVU6632
 19414 08d0 48D16C24 		shr	QWORD PTR 40[rsp]	# %sfp
 19414      28
 19415              	.LVL1267:
 19416              	# sieve_extend.c:1095:             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /
GAS LISTING /tmp/cct11Qa0.s 			page 516


1095:sieve_extend.c ****                 for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) && (fr
 19417              		.loc 1 1095 13 view .LVU6633
 19418 08d5 836C2474 		sub	DWORD PTR 116[rsp], 1	# %sfp,
 19418      01
 19419 08da 0F8570FE 		jne	.L1712	#,
 19419      FFFF
 19420              	.LBE991:
1094:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19421              		.loc 1 1094 94 is_stmt 1 view .LVU6634
 19422              	# sieve_extend.c:1094:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1094:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19423              		.loc 1 1094 112 is_stmt 0 view .LVU6635
 19424 08e0 4C037424 		add	r14, QWORD PTR 120[rsp]	# mediumstep_faster, %sfp
 19424      78
 19425              	.LVL1268:
1094:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19426              		.loc 1 1094 62 is_stmt 1 view .LVU6636
 19427              	# sieve_extend.c:1094:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1094:sieve_extend.c ****             for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 19428              		.loc 1 1094 9 is_stmt 0 view .LVU6637
 19429 08e5 4983FE40 		cmp	r14, 64	# mediumstep_faster,
 19430 08e9 0F8641FE 		jbe	.L1714	#,
 19430      FFFF
 19431              	.LBE990:
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19432              		.loc 1 1093 75 is_stmt 1 view .LVU6638
 19433              	# sieve_extend.c:1093:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19434              		.loc 1 1093 92 is_stmt 0 view .LVU6639
 19435 08ef 4C037C24 		add	r15, QWORD PTR 120[rsp]	# smallstep_faster, %sfp
 19435      78
 19436              	.LVL1269:
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19437              		.loc 1 1093 42 is_stmt 1 view .LVU6640
 19438              	# sieve_extend.c:1093:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19439              		.loc 1 1093 5 is_stmt 0 view .LVU6641
 19440 08f4 4983FF20 		cmp	r15, 32	# smallstep_faster,
 19441 08f8 0F862DFE 		jbe	.L1704	#,
 19441      FFFF
 19442 08fe 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# tuning_result, %sfp
 19442      30
 19443              	.LVL1270:
1093:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 19444              		.loc 1 1093 5 view .LVU6642
 19445              	.LBE1003:
1132:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19446              		.loc 1 1132 5 is_stmt 1 view .LVU6643
 19447              	# sieve_extend.c:1132:     if (option_verboselevel >= 2) {
1132:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19448              		.loc 1 1132 8 is_stmt 0 view .LVU6644
 19449 0903 837C2470 		cmp	DWORD PTR 112[rsp], 1	# %sfp,
 19449      01
 19450 0908 7E31     		jle	.L1715	#,
1133:sieve_extend.c ****         printf("Best options\n");
 19451              		.loc 1 1133 9 is_stmt 1 view .LVU6645
 19452              	.LVL1271:
GAS LISTING /tmp/cct11Qa0.s 			page 517


 19453              	.LBB1004:
 19454              	.LBI1004:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19455              		.loc 3 105 1 view .LVU6646
 19456              	.LBB1005:
 19457              		.loc 3 107 3 view .LVU6647
 19458              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19459              		.loc 3 107 10 is_stmt 0 view .LVU6648
 19460 090a 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	#, %sfp
 19460      48
 19461 090f BF010000 		mov	edi, 1	#,
 19461      00
 19462 0914 4C8B4424 		mov	r8, QWORD PTR 64[rsp]	#, %sfp
 19462      40
 19463 0919 4C89E2   		mov	rdx, r12	#, tuning_results
 19464 091c 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	#, %sfp
 19464      38
 19465 0921 488D3500 		lea	rsi, .LC52[rip]	#,
 19465      000000
 19466 0928 31C0     		xor	eax, eax	#
 19467 092a E8000000 		call	__printf_chk@PLT	#
 19467      00
 19468              	.LVL1272:
 19469              		.loc 3 107 10 view .LVU6649
 19470              	.LBE1005:
 19471              	.LBE1004:
1134:sieve_extend.c ****     }
 19472              		.loc 1 1134 9 is_stmt 1 view .LVU6650
 19473              	.LBB1006:
 19474              	.LBI1006:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19475              		.loc 3 105 1 view .LVU6651
 19476              	.LBB1007:
 19477              		.loc 3 107 3 view .LVU6652
 19478              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19479              		.loc 3 107 10 is_stmt 0 view .LVU6653
 19480 092f 488D3D00 		lea	rdi, .LC53[rip]	#,
 19480      000000
 19481 0936 E8000000 		call	puts@PLT	#
 19481      00
 19482              	.LVL1273:
 19483              	.L1715:
 19484              		.loc 3 107 10 view .LVU6654
 19485              	.LBE1007:
 19486              	.LBE1006:
 19487              	.LBB1008:
 19488              	# sieve_extend.c:1148:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19489              		.loc 1 1148 75 view .LVU6655
 19490 093b 4C8B7424 		mov	r14, QWORD PTR 80[rsp]	# sample_max, %sfp
 19490      50
 19491              	.LVL1274:
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19492              		.loc 1 1148 75 view .LVU6656
 19493              	.LBE1008:
 19494              	.LBB1013:
 19495              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
GAS LISTING /tmp/cct11Qa0.s 			page 518


1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19496              		.loc 1 1160 24 view .LVU6657
 19497 0940 4531ED   		xor	r13d, r13d	# step
 19498              	.LVL1275:
 19499              	.L1720:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19500              		.loc 1 1160 24 view .LVU6658
 19501              	.LBE1013:
1137:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 19502              		.loc 1 1137 11 is_stmt 1 view .LVU6659
 19503 0943 4983FC04 		cmp	r12, 4	# tuning_results,
 19504 0947 0F864403 		jbe	.L1816	#,
 19504      0000
1138:sieve_extend.c ****         step++;
 19505              		.loc 1 1138 9 view .LVU6660
 19506 094d 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 19506      000000
 19507 0954 BA580000 		mov	edx, 88	#,
 19507      00
 19508 0959 4C89E6   		mov	rsi, r12	#, tuning_results
 19509 095c 4C89FF   		mov	rdi, r15	#, tuning_result
 19510 095f E8000000 		call	qsort@PLT	#
 19510      00
 19511              	.LVL1276:
1139:sieve_extend.c ****         if (option_verboselevel >= 2) {
 19512              		.loc 1 1139 9 view .LVU6661
 19513              	# sieve_extend.c:1139:         step++;
1139:sieve_extend.c ****         if (option_verboselevel >= 2) {
 19514              		.loc 1 1139 13 is_stmt 0 view .LVU6662
 19515 0964 4983C501 		add	r13, 1	# step,
 19516              	.LVL1277:
1140:sieve_extend.c ****             tuning_result_index = 0;
 19517              		.loc 1 1140 9 is_stmt 1 view .LVU6663
 19518              	# sieve_extend.c:1140:         if (option_verboselevel >= 2) {
1140:sieve_extend.c ****             tuning_result_index = 0;
 19519              		.loc 1 1140 12 is_stmt 0 view .LVU6664
 19520 0968 837C2470 		cmp	DWORD PTR 112[rsp], 1	# %sfp,
 19520      01
 19521 096d 0F8FEB01 		jg	.L1716	#,
 19521      0000
 19522              	.L1718:
1158:sieve_extend.c **** 
 19523              		.loc 1 1158 9 is_stmt 1 view .LVU6665
 19524              	# sieve_extend.c:1158:         tuning_results = tuning_results / 2;
1158:sieve_extend.c **** 
 19525              		.loc 1 1158 24 is_stmt 0 view .LVU6666
 19526 0973 49D1EC   		shr	r12	# tuning_results
 19527              	.LVL1278:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19528              		.loc 1 1160 9 is_stmt 1 view .LVU6667
 19529              	.LBB1014:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19530              		.loc 1 1160 14 view .LVU6668
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19531              		.loc 1 1160 29 view .LVU6669
 19532              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/cct11Qa0.s 			page 519


 19533              		.loc 1 1160 24 is_stmt 0 view .LVU6670
 19534 0976 31ED     		xor	ebp, ebp	# i
 19535 0978 4C89E0   		mov	rax, r12	# tmp451, tuning_results
 19536 097b 498D5F30 		lea	rbx, 48[r15]	# ivtmp.725,
 19537 097f 83E007   		and	eax, 7	# tmp451,
 19538 0982 0F84D200 		je	.L1717	#,
 19538      0000
 19539 0988 4883F801 		cmp	rax, 1	# tmp451,
 19540 098c 0F84A900 		je	.L1775	#,
 19540      0000
 19541 0992 4883F802 		cmp	rax, 2	# tmp451,
 19542 0996 0F848900 		je	.L1776	#,
 19542      0000
 19543 099c 4883F803 		cmp	rax, 3	# tmp451,
 19544 09a0 746D     		je	.L1777	#,
 19545 09a2 4883F804 		cmp	rax, 4	# tmp451,
 19546 09a6 7451     		je	.L1778	#,
 19547 09a8 4883F805 		cmp	rax, 5	# tmp451,
 19548 09ac 7435     		je	.L1779	#,
 19549 09ae 4883F806 		cmp	rax, 6	# tmp451,
 19550 09b2 7419     		je	.L1780	#,
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19551              		.loc 1 1161 13 is_stmt 1 view .LVU6671
 19552 09b4 31F6     		xor	esi, esi	#
 19553 09b6 4C89FF   		mov	rdi, r15	#, tuning_result
 19554 09b9 E8000000 		call	tune_benchmark	#
 19554      00
 19555              	.LVL1279:
1162:sieve_extend.c ****         }
 19556              		.loc 1 1162 13 view .LVU6672
 19557              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19558              		.loc 1 1160 48 is_stmt 0 view .LVU6673
 19559 09be BD010000 		mov	ebp, 1	# i,
 19559      00
 19560              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19561              		.loc 1 1162 41 view .LVU6674
 19562 09c3 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19563              		.loc 1 1160 47 is_stmt 1 view .LVU6675
 19564              	.LVL1280:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19565              		.loc 1 1160 29 view .LVU6676
 19566 09c6 498D9F88 		lea	rbx, 136[r15]	# ivtmp.725,
 19566      000000
 19567              	.L1780:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19568              		.loc 1 1161 13 view .LVU6677
 19569 09cd 4889EE   		mov	rsi, rbp	#, i
 19570 09d0 4C89FF   		mov	rdi, r15	#, tuning_result
 19571 09d3 E8000000 		call	tune_benchmark	#
 19571      00
 19572              	.LVL1281:
1162:sieve_extend.c ****         }
 19573              		.loc 1 1162 13 view .LVU6678
 19574              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
GAS LISTING /tmp/cct11Qa0.s 			page 520


1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19575              		.loc 1 1160 48 is_stmt 0 view .LVU6679
 19576 09d8 4883C501 		add	rbp, 1	# i,
 19577              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19578              		.loc 1 1162 41 view .LVU6680
 19579 09dc 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19580              		.loc 1 1160 47 is_stmt 1 view .LVU6681
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19581              		.loc 1 1160 29 view .LVU6682
 19582 09df 4883C358 		add	rbx, 88	# ivtmp.725,
 19583              	.L1779:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19584              		.loc 1 1161 13 view .LVU6683
 19585 09e3 4889EE   		mov	rsi, rbp	#, i
 19586 09e6 4C89FF   		mov	rdi, r15	#, tuning_result
 19587 09e9 E8000000 		call	tune_benchmark	#
 19587      00
 19588              	.LVL1282:
1162:sieve_extend.c ****         }
 19589              		.loc 1 1162 13 view .LVU6684
 19590              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19591              		.loc 1 1160 48 is_stmt 0 view .LVU6685
 19592 09ee 4883C501 		add	rbp, 1	# i,
 19593              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19594              		.loc 1 1162 41 view .LVU6686
 19595 09f2 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19596              		.loc 1 1160 47 is_stmt 1 view .LVU6687
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19597              		.loc 1 1160 29 view .LVU6688
 19598 09f5 4883C358 		add	rbx, 88	# ivtmp.725,
 19599              	.L1778:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19600              		.loc 1 1161 13 view .LVU6689
 19601 09f9 4889EE   		mov	rsi, rbp	#, i
 19602 09fc 4C89FF   		mov	rdi, r15	#, tuning_result
 19603 09ff E8000000 		call	tune_benchmark	#
 19603      00
 19604              	.LVL1283:
1162:sieve_extend.c ****         }
 19605              		.loc 1 1162 13 view .LVU6690
 19606              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19607              		.loc 1 1160 48 is_stmt 0 view .LVU6691
 19608 0a04 4883C501 		add	rbp, 1	# i,
 19609              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19610              		.loc 1 1162 41 view .LVU6692
 19611 0a08 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19612              		.loc 1 1160 47 is_stmt 1 view .LVU6693
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19613              		.loc 1 1160 29 view .LVU6694
GAS LISTING /tmp/cct11Qa0.s 			page 521


 19614 0a0b 4883C358 		add	rbx, 88	# ivtmp.725,
 19615              	.L1777:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19616              		.loc 1 1161 13 view .LVU6695
 19617 0a0f 4889EE   		mov	rsi, rbp	#, i
 19618 0a12 4C89FF   		mov	rdi, r15	#, tuning_result
 19619 0a15 E8000000 		call	tune_benchmark	#
 19619      00
 19620              	.LVL1284:
1162:sieve_extend.c ****         }
 19621              		.loc 1 1162 13 view .LVU6696
 19622              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19623              		.loc 1 1160 48 is_stmt 0 view .LVU6697
 19624 0a1a 4883C501 		add	rbp, 1	# i,
 19625              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19626              		.loc 1 1162 41 view .LVU6698
 19627 0a1e 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19628              		.loc 1 1160 47 is_stmt 1 view .LVU6699
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19629              		.loc 1 1160 29 view .LVU6700
 19630 0a21 4883C358 		add	rbx, 88	# ivtmp.725,
 19631              	.L1776:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19632              		.loc 1 1161 13 view .LVU6701
 19633 0a25 4889EE   		mov	rsi, rbp	#, i
 19634 0a28 4C89FF   		mov	rdi, r15	#, tuning_result
 19635 0a2b E8000000 		call	tune_benchmark	#
 19635      00
 19636              	.LVL1285:
1162:sieve_extend.c ****         }
 19637              		.loc 1 1162 13 view .LVU6702
 19638              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19639              		.loc 1 1160 48 is_stmt 0 view .LVU6703
 19640 0a30 4883C501 		add	rbp, 1	# i,
 19641              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19642              		.loc 1 1162 41 view .LVU6704
 19643 0a34 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19644              		.loc 1 1160 47 is_stmt 1 view .LVU6705
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19645              		.loc 1 1160 29 view .LVU6706
 19646 0a37 4883C358 		add	rbx, 88	# ivtmp.725,
 19647              	.L1775:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19648              		.loc 1 1161 13 view .LVU6707
 19649 0a3b 4889EE   		mov	rsi, rbp	#, i
 19650 0a3e 4C89FF   		mov	rdi, r15	#, tuning_result
 19651              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19652              		.loc 1 1160 48 is_stmt 0 view .LVU6708
 19653 0a41 4883C501 		add	rbp, 1	# i,
 19654              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/cct11Qa0.s 			page 522


1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19655              		.loc 1 1161 13 view .LVU6709
 19656 0a45 E8000000 		call	tune_benchmark	#
 19656      00
 19657              	.LVL1286:
1162:sieve_extend.c ****         }
 19658              		.loc 1 1162 13 is_stmt 1 view .LVU6710
 19659              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19660              		.loc 1 1162 41 is_stmt 0 view .LVU6711
 19661 0a4a 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19662              		.loc 1 1160 47 is_stmt 1 view .LVU6712
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19663              		.loc 1 1160 29 view .LVU6713
 19664 0a4d 4883C358 		add	rbx, 88	# ivtmp.725,
 19665              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19666              		.loc 1 1160 9 is_stmt 0 view .LVU6714
 19667 0a51 4939EC   		cmp	r12, rbp	# tuning_results, i
 19668 0a54 0F84E9FE 		je	.L1720	#,
 19668      FFFF
 19669              	.L1717:
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19670              		.loc 1 1161 13 is_stmt 1 view .LVU6715
 19671 0a5a 4889EE   		mov	rsi, rbp	#, i
 19672 0a5d 4C89FF   		mov	rdi, r15	#, tuning_result
 19673 0a60 E8000000 		call	tune_benchmark	#
 19673      00
 19674              	.LVL1287:
1162:sieve_extend.c ****         }
 19675              		.loc 1 1162 13 view .LVU6716
 19676 0a65 4C8D5358 		lea	r10, 88[rbx]	# tmp453,
 19677              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19678              		.loc 1 1162 41 is_stmt 0 view .LVU6717
 19679 0a69 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19680              		.loc 1 1160 47 is_stmt 1 view .LVU6718
 19681              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19682              		.loc 1 1160 48 is_stmt 0 view .LVU6719
 19683 0a6c 488D7501 		lea	rsi, 1[rbp]	# tmp452,
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19684              		.loc 1 1160 29 is_stmt 1 view .LVU6720
 19685              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19686              		.loc 1 1161 13 is_stmt 0 view .LVU6721
 19687 0a70 4C89FF   		mov	rdi, r15	#, tuning_result
 19688 0a73 4C895424 		mov	QWORD PTR 32[rsp], r10	# %sfp, tmp453
 19688      20
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19689              		.loc 1 1161 13 is_stmt 1 view .LVU6722
 19690 0a78 E8000000 		call	tune_benchmark	#
 19690      00
 19691              	.LVL1288:
1162:sieve_extend.c ****         }
GAS LISTING /tmp/cct11Qa0.s 			page 523


 19692              		.loc 1 1162 13 view .LVU6723
 19693              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19694              		.loc 1 1162 41 is_stmt 0 view .LVU6724
 19695 0a7d 4C8B5C24 		mov	r11, QWORD PTR 32[rsp]	# tmp453, %sfp
 19695      20
 19696 0a82 488DBBB0 		lea	rdi, 176[rbx]	# ivtmp.725,
 19696      000000
 19697 0a89 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, ivtmp.725
 19697      20
 19698              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19699              		.loc 1 1160 48 view .LVU6725
 19700 0a8e 488D7502 		lea	rsi, 2[rbp]	# i,
 19701              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19702              		.loc 1 1161 13 view .LVU6726
 19703 0a92 4C89FF   		mov	rdi, r15	#, tuning_result
 19704              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19705              		.loc 1 1162 41 view .LVU6727
 19706 0a95 4D0133   		add	QWORD PTR [r11], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19707              		.loc 1 1160 47 is_stmt 1 view .LVU6728
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19708              		.loc 1 1160 29 view .LVU6729
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19709              		.loc 1 1161 13 view .LVU6730
 19710 0a98 E8000000 		call	tune_benchmark	#
 19710      00
 19711              	.LVL1289:
1162:sieve_extend.c ****         }
 19712              		.loc 1 1162 13 view .LVU6731
 19713              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19714              		.loc 1 1162 41 is_stmt 0 view .LVU6732
 19715 0a9d 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# ivtmp.725, %sfp
 19715      20
 19716 0aa2 4C8D8B08 		lea	r9, 264[rbx]	# ivtmp.725,
 19716      010000
 19717              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19718              		.loc 1 1160 48 view .LVU6733
 19719 0aa9 488D7503 		lea	rsi, 3[rbp]	# i,
 19720              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19721              		.loc 1 1161 13 view .LVU6734
 19722 0aad 4C89FF   		mov	rdi, r15	#, tuning_result
 19723 0ab0 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, ivtmp.725
 19723      20
 19724              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19725              		.loc 1 1162 41 view .LVU6735
 19726 0ab5 4C0132   		add	QWORD PTR [rdx], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19727              		.loc 1 1160 47 is_stmt 1 view .LVU6736
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/cct11Qa0.s 			page 524


 19728              		.loc 1 1160 29 view .LVU6737
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19729              		.loc 1 1161 13 view .LVU6738
 19730 0ab8 E8000000 		call	tune_benchmark	#
 19730      00
 19731              	.LVL1290:
1162:sieve_extend.c ****         }
 19732              		.loc 1 1162 13 view .LVU6739
 19733              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19734              		.loc 1 1162 41 is_stmt 0 view .LVU6740
 19735 0abd 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# ivtmp.725, %sfp
 19735      20
 19736 0ac2 4C8D8360 		lea	r8, 352[rbx]	# ivtmp.725,
 19736      010000
 19737 0ac9 4C894424 		mov	QWORD PTR 32[rsp], r8	# %sfp, ivtmp.725
 19737      20
 19738              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19739              		.loc 1 1161 13 view .LVU6741
 19740 0ace 4C89FF   		mov	rdi, r15	#, tuning_result
 19741              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19742              		.loc 1 1162 41 view .LVU6742
 19743 0ad1 4C0136   		add	QWORD PTR [rsi], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19744              		.loc 1 1160 47 is_stmt 1 view .LVU6743
 19745              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19746              		.loc 1 1160 48 is_stmt 0 view .LVU6744
 19747 0ad4 488D7504 		lea	rsi, 4[rbp]	# i,
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19748              		.loc 1 1160 29 is_stmt 1 view .LVU6745
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19749              		.loc 1 1161 13 view .LVU6746
 19750 0ad8 E8000000 		call	tune_benchmark	#
 19750      00
 19751              	.LVL1291:
1162:sieve_extend.c ****         }
 19752              		.loc 1 1162 13 view .LVU6747
 19753              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19754              		.loc 1 1162 41 is_stmt 0 view .LVU6748
 19755 0add 488B4C24 		mov	rcx, QWORD PTR 32[rsp]	# ivtmp.725, %sfp
 19755      20
 19756 0ae2 488D83B8 		lea	rax, 440[rbx]	# ivtmp.725,
 19756      010000
 19757              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19758              		.loc 1 1160 48 view .LVU6749
 19759 0ae9 488D7505 		lea	rsi, 5[rbp]	# i,
 19760              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19761              		.loc 1 1161 13 view .LVU6750
 19762 0aed 4C89FF   		mov	rdi, r15	#, tuning_result
 19763 0af0 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, ivtmp.725
 19763      20
GAS LISTING /tmp/cct11Qa0.s 			page 525


 19764              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19765              		.loc 1 1162 41 view .LVU6751
 19766 0af5 4C0131   		add	QWORD PTR [rcx], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19767              		.loc 1 1160 47 is_stmt 1 view .LVU6752
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19768              		.loc 1 1160 29 view .LVU6753
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19769              		.loc 1 1161 13 view .LVU6754
 19770 0af8 E8000000 		call	tune_benchmark	#
 19770      00
 19771              	.LVL1292:
1162:sieve_extend.c ****         }
 19772              		.loc 1 1162 13 view .LVU6755
 19773              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19774              		.loc 1 1162 41 is_stmt 0 view .LVU6756
 19775 0afd 4C8B5424 		mov	r10, QWORD PTR 32[rsp]	# ivtmp.725, %sfp
 19775      20
 19776 0b02 4C8D9B10 		lea	r11, 528[rbx]	# ivtmp.725,
 19776      020000
 19777              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19778              		.loc 1 1160 48 view .LVU6757
 19779 0b09 488D7506 		lea	rsi, 6[rbp]	# i,
 19780              	# sieve_extend.c:1161:             tune_benchmark(tuning_result, i);
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19781              		.loc 1 1161 13 view .LVU6758
 19782 0b0d 4C89FF   		mov	rdi, r15	#, tuning_result
 19783 0b10 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, ivtmp.725
 19783      20
 19784              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19785              		.loc 1 1162 41 view .LVU6759
 19786 0b15 4D0132   		add	QWORD PTR [r10], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19787              		.loc 1 1160 47 is_stmt 1 view .LVU6760
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19788              		.loc 1 1160 29 view .LVU6761
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19789              		.loc 1 1161 13 view .LVU6762
 19790 0b18 E8000000 		call	tune_benchmark	#
 19790      00
 19791              	.LVL1293:
1162:sieve_extend.c ****         }
 19792              		.loc 1 1162 13 view .LVU6763
 19793              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19794              		.loc 1 1162 41 is_stmt 0 view .LVU6764
 19795 0b1d 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# ivtmp.725, %sfp
 19795      20
 19796 0b22 488D9368 		lea	rdx, 616[rbx]	# ivtmp.725,
 19796      020000
 19797              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19798              		.loc 1 1160 48 view .LVU6765
GAS LISTING /tmp/cct11Qa0.s 			page 526


 19799 0b29 488D7507 		lea	rsi, 7[rbp]	# i,
 19800 0b2d 4883C508 		add	rbp, 8	# i,
 19801 0b31 48895424 		mov	QWORD PTR 32[rsp], rdx	# %sfp, ivtmp.725
 19801      20
 19802 0b36 4881C3C0 		add	rbx, 704	# ivtmp.725,
 19802      020000
 19803              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19804              		.loc 1 1162 41 view .LVU6766
 19805 0b3d 4C0137   		add	QWORD PTR [rdi], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19806              		.loc 1 1160 47 is_stmt 1 view .LVU6767
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19807              		.loc 1 1160 29 view .LVU6768
1161:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19808              		.loc 1 1161 13 view .LVU6769
 19809 0b40 4C89FF   		mov	rdi, r15	#, tuning_result
 19810 0b43 E8000000 		call	tune_benchmark	#
 19810      00
 19811              	.LVL1294:
1162:sieve_extend.c ****         }
 19812              		.loc 1 1162 13 view .LVU6770
 19813              	# sieve_extend.c:1162:             tuning_result[i].sample_max += sample_max;
1162:sieve_extend.c ****         }
 19814              		.loc 1 1162 41 is_stmt 0 view .LVU6771
 19815 0b48 4C8B4C24 		mov	r9, QWORD PTR 32[rsp]	# ivtmp.725, %sfp
 19815      20
 19816 0b4d 4D0131   		add	QWORD PTR [r9], r14	# MEM[base: _77, offset: 0B], sample_max
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19817              		.loc 1 1160 47 is_stmt 1 view .LVU6772
 19818              	.LVL1295:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19819              		.loc 1 1160 29 view .LVU6773
 19820              	# sieve_extend.c:1160:         for (counter_t i=0; i<tuning_results; i++) {
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19821              		.loc 1 1160 9 is_stmt 0 view .LVU6774
 19822 0b50 4939EC   		cmp	r12, rbp	# tuning_results, i
 19823 0b53 0F8501FF 		jne	.L1717	#,
 19823      FFFF
 19824 0b59 E9E5FDFF 		jmp	.L1720	#
 19824      FF
 19825              	.LVL1296:
 19826              	.L1716:
1160:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19827              		.loc 1 1160 9 view .LVU6775
 19828              	.LBE1014:
1141:sieve_extend.c ****             printf("(%ju) blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %2ju; 
 19829              		.loc 1 1141 13 is_stmt 1 view .LVU6776
1142:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 19830              		.loc 1 1142 13 view .LVU6777
 19831              	.LBB1015:
 19832              	.LBI1015:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19833              		.loc 3 105 1 view .LVU6778
 19834              	.LBB1016:
 19835              		.loc 3 107 3 view .LVU6779
 19836              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/cct11Qa0.s 			page 527


 19837              		.loc 3 107 10 is_stmt 0 view .LVU6780
 19838 0b5e 4D8B5730 		mov	r10, QWORD PTR 48[r15]	# tuning_result_229->sample_max, tuning_result_229->sample_max
 19839 0b62 488D3500 		lea	rsi, .LC54[rip]	#,
 19839      000000
 19840 0b69 C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r15]	# tuning_result_229->elapsed_time, tuning_result_229->elapsed_time
 19840      4748
 19841 0b6f B8030000 		mov	eax, 3	#,
 19841      00
 19842 0b74 498B4F08 		mov	rcx, QWORD PTR 8[r15]	# tuning_result_229->blocksize_bits, tuning_result_229->blocksize_bits
 19843 0b78 4C895424 		mov	QWORD PTR 24[rsp], r10	#, tuning_result_229->sample_max
 19843      18
 19844 0b7d 4D8B5F40 		mov	r11, QWORD PTR 64[r15]	# tuning_result_229->passes, tuning_result_229->passes
 19845 0b81 4C895C24 		mov	QWORD PTR 16[rsp], r11	#, tuning_result_229->passes
 19845      10
 19846 0b86 498B7F28 		mov	rdi, QWORD PTR 40[r15]	# tuning_result_229->mediumstep_faster, tuning_result_229->mediumstep_f
 19847 0b8a 48897C24 		mov	QWORD PTR 8[rsp], rdi	#, tuning_result_229->mediumstep_faster
 19847      08
 19848 0b8f BF010000 		mov	edi, 1	#,
 19848      00
 19849 0b94 498B5720 		mov	rdx, QWORD PTR 32[r15]	# tuning_result_229->smallstep_faster, tuning_result_229->smallstep_fas
 19850 0b98 48891424 		mov	QWORD PTR [rsp], rdx	#, tuning_result_229->smallstep_faster
 19851 0b9c 4C89EA   		mov	rdx, r13	#, step
 19852 0b9f 4D8B4F18 		mov	r9, QWORD PTR 24[r15]	#, tuning_result_229->free_bits
 19853 0ba3 4D8B4710 		mov	r8, QWORD PTR 16[r15]	#, tuning_result_229->blocksize_kb
 19854 0ba7 C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r15]	#, tuning_result_229->avg
 19854      5750
 19855 0bad C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r15]	#, tuning_result_229->sample_duration
 19855      4F38
 19856 0bb3 E8000000 		call	__printf_chk@PLT	#
 19856      00
 19857              	.LVL1297:
 19858              		.loc 3 107 10 view .LVU6781
 19859              	.LBE1016:
 19860              	.LBE1015:
1147:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 19861              		.loc 1 1147 13 is_stmt 1 view .LVU6782
 19862              	# sieve_extend.c:1147:             if (option_verboselevel >= 3) {
1147:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 19863              		.loc 1 1147 16 is_stmt 0 view .LVU6783
 19864 0bb8 837C2470 		cmp	DWORD PTR 112[rsp], 2	# %sfp,
 19864      02
 19865 0bbd 0F84B0FD 		je	.L1718	#,
 19865      FFFF
 19866 0bc3 498D5F08 		lea	rbx, 8[r15]	# ivtmp.731,
 19867              	.LBB1017:
 19868              	# sieve_extend.c:1148:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19869              		.loc 1 1148 32 view .LVU6784
 19870 0bc7 31ED     		xor	ebp, ebp	# tuning_result_index
 19871              	.L1719:
 19872              	.LVL1298:
1149:sieve_extend.c ****                             (uintmax_t)tuning_result[tuning_result_index].blocksize_bits, (uintmax_
 19873              		.loc 1 1149 21 is_stmt 1 view .LVU6785
 19874              	.LBB1009:
 19875              	.LBI1009:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19876              		.loc 3 105 1 view .LVU6786
GAS LISTING /tmp/cct11Qa0.s 			page 528


 19877              	.LBB1010:
 19878              		.loc 3 107 3 view .LVU6787
 19879              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19880              		.loc 3 107 10 is_stmt 0 view .LVU6788
 19881 0bc9 4C8B4B28 		mov	r9, QWORD PTR 40[rbx]	# MEM[base: _60, offset: 40B], MEM[base: _60, offset: 40B]
 19882 0bcd BF010000 		mov	edi, 1	#,
 19882      00
 19883 0bd2 488B4B08 		mov	rcx, QWORD PTR 8[rbx]	# MEM[base: _60, offset: 8B], MEM[base: _60, offset: 8B]
 19884 0bd6 B8030000 		mov	eax, 3	#,
 19884      00
 19885 0bdb C5FB1043 		vmovsd	xmm0, QWORD PTR 64[rbx]	# MEM[base: _60, offset: 64B], MEM[base: _60, offset: 64B]
 19885      40
 19886              	.LBE1010:
 19887              	.LBE1009:
 19888              	# sieve_extend.c:1148:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19889              		.loc 1 1148 118 view .LVU6789
 19890 0be0 4883C501 		add	rbp, 1	# tuning_result_index,
 19891              	.LVL1299:
 19892              	.LBB1012:
 19893              	.LBB1011:
 19894              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19895              		.loc 3 107 10 view .LVU6790
 19896 0be4 4C894C24 		mov	QWORD PTR 16[rsp], r9	#, MEM[base: _60, offset: 40B]
 19896      10
 19897 0be9 4883C358 		add	rbx, 88	# ivtmp.731,
 19898 0bed 488B73E0 		mov	rsi, QWORD PTR -32[rbx]	# MEM[base: _60, offset: 56B], MEM[base: _60, offset: 56B]
 19899 0bf1 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[base: _60, offset: 56B]
 19899      08
 19900 0bf6 488D3500 		lea	rsi, .LC51[rip]	#,
 19900      000000
 19901 0bfd 4C8B43C8 		mov	r8, QWORD PTR -56[rbx]	# MEM[base: _60, offset: 32B], MEM[base: _60, offset: 32B]
 19902 0c01 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[base: _60, offset: 32B]
 19903 0c05 4C8B4BC0 		mov	r9, QWORD PTR -64[rbx]	#, MEM[base: _60, offset: 24B]
 19904 0c09 4C8B43B8 		mov	r8, QWORD PTR -72[rbx]	#, MEM[base: _60, offset: 16B]
 19905 0c0d 488B53A8 		mov	rdx, QWORD PTR -88[rbx]	#, MEM[base: _60, offset: 0B]
 19906 0c11 C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _60, offset: 72B]
 19906      F0
 19907 0c16 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _60, offset: 48B]
 19907      D8
 19908 0c1b E8000000 		call	__printf_chk@PLT	#
 19908      00
 19909              	.LVL1300:
 19910              		.loc 3 107 10 view .LVU6791
 19911              	.LBE1011:
 19912              	.LBE1012:
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19913              		.loc 1 1148 99 is_stmt 1 view .LVU6792
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19914              		.loc 1 1148 55 view .LVU6793
 19915              	# sieve_extend.c:1148:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19916              		.loc 1 1148 75 is_stmt 0 view .LVU6794
 19917 0c20 4983FC0A 		cmp	r12, 10	# tuning_results,
 19918 0c24 B90A0000 		mov	ecx, 10	# tmp391,
 19918      00
 19919 0c29 490F46CC 		cmovbe	rcx, r12	# tuning_results,, tmp391
GAS LISTING /tmp/cct11Qa0.s 			page 529


 19920              	# sieve_extend.c:1148:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19921              		.loc 1 1148 17 view .LVU6795
 19922 0c2d 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp391
 19923 0c30 7297     		jb	.L1719	#,
 19924 0c32 E93CFDFF 		jmp	.L1718	#
 19924      FF
 19925              	.LVL1301:
 19926              	.L1810:
1148:sieve_extend.c ****                     printf("...blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; smallstep: %
 19927              		.loc 1 1148 17 view .LVU6796
 19928              	.LBE1017:
 19929              	.LBE988:
 19930              	.LBE987:
 19931              	.LBE986:
1250:sieve_extend.c ****     }
 19932              		.loc 1 1250 39 is_stmt 1 view .LVU6797
 19933              	.LBB1030:
 19934              	.LBI1030:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19935              		.loc 3 105 1 view .LVU6798
 19936              	.LBB1031:
 19937              		.loc 3 107 3 view .LVU6799
 19938              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19939              		.loc 3 107 10 is_stmt 0 view .LVU6800
 19940 0c37 488D3D00 		lea	rdi, .LC48[rip]	#,
 19940      000000
 19941              	.LBE1031:
 19942              	.LBE1030:
 19943              	# sieve_extend.c:1253:     counter_t best_blocksize_bits = default_blocksize;
1253:sieve_extend.c ****     if (option_tunelevel) {
 19944              		.loc 1 1253 15 view .LVU6801
 19945 0c3e 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 19945      0300
 19946              	.LBB1033:
 19947              	.LBB1032:
 19948              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19949              		.loc 3 107 10 view .LVU6802
 19950 0c44 E8000000 		call	puts@PLT	#
 19950      00
 19951              	.LVL1302:
 19952              		.loc 3 107 10 view .LVU6803
 19953              	.LBE1032:
 19954              	.LBE1033:
1253:sieve_extend.c ****     if (option_tunelevel) {
 19955              		.loc 1 1253 5 is_stmt 1 view .LVU6804
1254:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19956              		.loc 1 1254 5 view .LVU6805
 19957              	# sieve_extend.c:1254:     if (option_tunelevel) {
1254:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19958              		.loc 1 1254 9 is_stmt 0 view .LVU6806
 19959 0c49 448B8424 		mov	r8d, DWORD PTR 140[rsp]	# option_tunelevel.40_62, option_tunelevel
 19959      8C000000 
 19960              	# sieve_extend.c:1254:     if (option_tunelevel) {
1254:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19961              		.loc 1 1254 8 view .LVU6807
 19962 0c51 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
GAS LISTING /tmp/cct11Qa0.s 			page 530


 19963 0c54 0F852E01 		jne	.L1817	#,
 19963      0000
 19964              	.LVL1303:
 19965              	.L1699:
 19966              	.LBB1034:
1263:sieve_extend.c ****         counter_t passes = 0;
 19967              		.loc 1 1263 9 is_stmt 1 view .LVU6808
 19968              	# sieve_extend.c:1263:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1263:sieve_extend.c ****         counter_t passes = 0;
 19969              		.loc 1 1263 12 is_stmt 0 view .LVU6809
 19970 0c5a 83BC2488 		cmp	DWORD PTR 136[rsp], 0	# option_verboselevel,
 19970      00000000 
 19971 0c62 0F8E86F7 		jle	.L1724	#,
 19971      FFFF
1263:sieve_extend.c ****         counter_t passes = 0;
 19972              		.loc 1 1263 39 is_stmt 1 discriminator 1 view .LVU6810
 19973              	.LVL1304:
 19974              	.LBB972:
 19975              	.LBI972:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19976              		.loc 3 105 1 discriminator 1 view .LVU6811
 19977              	.LBB973:
 19978              		.loc 3 107 3 discriminator 1 view .LVU6812
 19979              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19980              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6813
 19981 0c68 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 19981      000000
 19982 0c6f 4C89F2   		mov	rdx, r14	#, best_result$blocksize_bits
 19983 0c72 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 19983      000000
 19984 0c79 488D3500 		lea	rsi, .LC56[rip]	#,
 19984      000000
 19985 0c80 BF010000 		mov	edi, 1	#,
 19985      00
 19986 0c85 31C0     		xor	eax, eax	#
 19987 0c87 E8000000 		call	__printf_chk@PLT	#
 19987      00
 19988              	.LVL1305:
 19989 0c8c E95DF7FF 		jmp	.L1724	#
 19989      FF
 19990              	.LVL1306:
 19991              	.L1816:
 19992              		.loc 3 107 10 discriminator 1 view .LVU6814
 19993              	.LBE973:
 19994              	.LBE972:
 19995              	.LBE1034:
 19996              	.LBB1035:
 19997              	.LBB1027:
 19998              	.LBB1024:
1166:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19999              		.loc 1 1166 5 is_stmt 1 view .LVU6815
 20000              	# sieve_extend.c:1166:     tuning_result_type best_result = tuning_result[0];
1166:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20001              		.loc 1 1166 24 is_stmt 0 view .LVU6816
 20002 0c91 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 20003              	.LVL1307:
 20004              	# sieve_extend.c:1167:     if (option_verboselevel >= 1) {
GAS LISTING /tmp/cct11Qa0.s 			page 531


1167:sieve_extend.c ****         tuning_result_index = 0;
 20005              		.loc 1 1167 8 view .LVU6817
 20006 0c95 837C2470 		cmp	DWORD PTR 112[rsp], 0	# %sfp,
 20006      00
 20007              	# sieve_extend.c:1166:     tuning_result_type best_result = tuning_result[0];
1166:sieve_extend.c ****     if (option_verboselevel >= 1) {
 20008              		.loc 1 1166 24 view .LVU6818
 20009 0c9a 498B6F20 		mov	rbp, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 20010 0c9e 498B5F28 		mov	rbx, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
1167:sieve_extend.c ****         tuning_result_index = 0;
 20011              		.loc 1 1167 5 is_stmt 1 view .LVU6819
 20012              	# sieve_extend.c:1167:     if (option_verboselevel >= 1) {
1167:sieve_extend.c ****         tuning_result_index = 0;
 20013              		.loc 1 1167 8 is_stmt 0 view .LVU6820
 20014 0ca2 7E47     		jle	.L1722	#,
1168:sieve_extend.c ****         printf(".Best result: blocksize %4jukb; free_bits %ju; smallstep: %ju; mediumstep %ju; pass
 20015              		.loc 1 1168 9 is_stmt 1 view .LVU6821
 20016              	.LVL1308:
1169:sieve_extend.c ****                  (uintmax_t)tuning_result[tuning_result_index].blocksize_kb,(uintmax_t)tuning_resul
 20017              		.loc 1 1169 9 view .LVU6822
 20018              	.LBB1018:
 20019              	.LBI1018:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20020              		.loc 3 105 1 view .LVU6823
 20021              	.LBB1019:
 20022              		.loc 3 107 3 view .LVU6824
 20023              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20024              		.loc 3 107 10 is_stmt 0 view .LVU6825
 20025 0ca4 4D8B4F30 		mov	r9, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_229 + 48B], MEM[(struct
 20026 0ca8 4989E8   		mov	r8, rbp	#, best_result$smallstep_faster
 20027 0cab C4C17B10 		vmovsd	xmm0, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_229 + 72B], MEM[(s
 20027      4748
 20028 0cb1 488D3500 		lea	rsi, .LC55[rip]	#,
 20028      000000
 20029 0cb8 498B4F18 		mov	rcx, QWORD PTR 24[r15]	# MEM[(struct tuning_result_type *)tuning_result_229 + 24B], MEM[(struc
 20030 0cbc BF010000 		mov	edi, 1	#,
 20030      00
 20031 0cc1 498B5710 		mov	rdx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_229 + 16B], MEM[(struc
 20032 0cc5 B8030000 		mov	eax, 3	#,
 20032      00
 20033 0cca 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_229 + 48B]
 20033      08
 20034              	.LVL1309:
 20035              		.loc 3 107 10 view .LVU6826
 20036 0ccf 4989D9   		mov	r9, rbx	#, best_result$mediumstep_faster
 20037 0cd2 4D8B6740 		mov	r12, QWORD PTR 64[r15]	# MEM[(struct tuning_result_type *)tuning_result_229 + 64B], MEM[(struc
 20038              	.LVL1310:
 20039              		.loc 3 107 10 view .LVU6827
 20040 0cd6 4C892424 		mov	QWORD PTR [rsp], r12	#, MEM[(struct tuning_result_type *)tuning_result_229 + 64B]
 20041 0cda C4C17B10 		vmovsd	xmm2, QWORD PTR 80[r15]	#, MEM[(struct tuning_result_type *)tuning_result_229 + 80B]
 20041      5750
 20042 0ce0 C4C17B10 		vmovsd	xmm1, QWORD PTR 56[r15]	#, MEM[(struct tuning_result_type *)tuning_result_229 + 56B]
 20042      4F38
 20043 0ce6 E8000000 		call	__printf_chk@PLT	#
 20043      00
 20044              	.LVL1311:
 20045              	.L1722:
GAS LISTING /tmp/cct11Qa0.s 			page 532


 20046              		.loc 3 107 10 view .LVU6828
 20047              	.LBE1019:
 20048              	.LBE1018:
1176:sieve_extend.c ****     return best_result;
 20049              		.loc 1 1176 5 is_stmt 1 view .LVU6829
 20050 0ceb 4C89FF   		mov	rdi, r15	#, tuning_result
 20051 0cee E8000000 		call	free@PLT	#
 20051      00
 20052              	.LVL1312:
1177:sieve_extend.c **** }
 20053              		.loc 1 1177 5 view .LVU6830
1177:sieve_extend.c **** }
 20054              		.loc 1 1177 5 is_stmt 0 view .LVU6831
 20055              	.LBE1024:
 20056              	.LBE1027:
1256:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 20057              		.loc 1 1256 9 is_stmt 1 view .LVU6832
 20058              	# sieve_extend.c:1256:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1256:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 20059              		.loc 1 1256 33 is_stmt 0 view .LVU6833
 20060 0cf3 48892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rbp	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 20060      000000
1257:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 20061              		.loc 1 1257 9 is_stmt 1 view .LVU6834
 20062              	.LBE1035:
 20063              	# sieve_extend.c:1262:     if (best_blocksize_bits > 0) {
1262:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20064              		.loc 1 1262 8 is_stmt 0 view .LVU6835
 20065 0cfa 4D85F6   		test	r14, r14	# best_result$blocksize_bits
 20066              	.LBB1036:
 20067              	# sieve_extend.c:1257:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1257:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 20068              		.loc 1 1257 34 view .LVU6836
 20069 0cfd 48891D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbx	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 20069      000000
1258:sieve_extend.c ****     }
 20070              		.loc 1 1258 9 is_stmt 1 view .LVU6837
 20071              	.LVL1313:
1258:sieve_extend.c ****     }
 20072              		.loc 1 1258 9 is_stmt 0 view .LVU6838
 20073              	.LBE1036:
1261:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 20074              		.loc 1 1261 5 is_stmt 1 view .LVU6839
1262:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20075              		.loc 1 1262 5 view .LVU6840
 20076              	# sieve_extend.c:1262:     if (best_blocksize_bits > 0) {
1262:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20077              		.loc 1 1262 8 is_stmt 0 view .LVU6841
 20078 0d04 0F8437F8 		je	.L1723	#,
 20078      FFFF
 20079 0d0a E94BFFFF 		jmp	.L1699	#
 20079      FF
 20080              	.LVL1314:
 20081              	.L1732:
1262:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20082              		.loc 1 1262 8 view .LVU6842
 20083 0d0f 488D3D00 		lea	rdi, CSWTCH.107[rip]	# tmp321,
GAS LISTING /tmp/cct11Qa0.s 			page 533


 20083      000000
 20084 0d16 4C8D0D00 		lea	r9, CSWTCH.108[rip]	# tmp323,
 20084      000000
 20085 0d1d 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.107
 20086 0d21 488D2D00 		lea	rbp, CSWTCH.109[rip]	# tmp325,
 20086      000000
 20087              	.LVL1315:
1262:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju\n",
 20088              		.loc 1 1262 8 view .LVU6843
 20089 0d28 4F8B24C1 		mov	r12, QWORD PTR [r9+r8*8]	# freebits_steps, CSWTCH.108
 20090 0d2c C4A17B10 		vmovsd	xmm0, QWORD PTR 0[rbp+r8*8]	# sample_duration, CSWTCH.109
 20090      44C500
 20091 0d33 48894C24 		mov	QWORD PTR 120[rsp], rcx	# %sfp, smallstep_faster_steps
 20091      78
 20092 0d38 4C896424 		mov	QWORD PTR 88[rsp], r12	# %sfp, freebits_steps
 20092      58
 20093              	.LBB1037:
 20094              	# sieve_extend.c:1189:     for (int arg=1; arg < argc; arg++) {
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 20095              		.loc 1 1189 14 view .LVU6844
 20096 0d3d 48C74424 		mov	QWORD PTR 80[rsp], 4	# %sfp,
 20096      50040000 
 20096      00
 20097 0d46 C5FB1144 		vmovsd	QWORD PTR 96[rsp], xmm0	# %sfp, sample_duration
 20097      2460
 20098              	.L1700:
 20099              	.LVL1316:
1189:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 20100              		.loc 1 1189 14 view .LVU6845
 20101              	.LBE1037:
 20102              	.LBB1038:
 20103              	.LBB1028:
 20104              	.LBB1025:
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20105              		.loc 1 1087 5 is_stmt 1 view .LVU6846
 20106              	# sieve_extend.c:1087:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20107              		.loc 1 1087 8 is_stmt 0 view .LVU6847
 20108 0d4c 448B7C24 		mov	r15d, DWORD PTR 112[rsp]	# option_verboselevel.41_63, %sfp
 20108      70
 20109              	.LVL1317:
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20110              		.loc 1 1087 8 view .LVU6848
 20111 0d51 4585FF   		test	r15d, r15d	# option_verboselevel.41_63
 20112 0d54 4489FB   		mov	ebx, r15d	# option_verboselevel.41_63, option_verboselevel.41_63
 20113              	.LVL1318:
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20114              		.loc 1 1087 8 view .LVU6849
 20115 0d57 0F8E71F9 		jle	.L1702	#,
 20115      FFFF
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20116              		.loc 1 1087 35 is_stmt 1 view .LVU6850
 20117              	.LVL1319:
 20118              	.LBB1020:
 20119              	.LBI1020:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20120              		.loc 3 105 1 view .LVU6851
GAS LISTING /tmp/cct11Qa0.s 			page 534


 20121              	.LBB1021:
 20122              		.loc 3 107 3 view .LVU6852
 20123              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20124              		.loc 3 107 10 is_stmt 0 view .LVU6853
 20125 0d5d 31C0     		xor	eax, eax	#
 20126 0d5f 488D3500 		lea	rsi, .LC49[rip]	#,
 20126      000000
 20127 0d66 BF010000 		mov	edi, 1	#,
 20127      00
 20128 0d6b E8000000 		call	__printf_chk@PLT	#
 20128      00
 20129              	.LVL1320:
 20130              		.loc 3 107 10 view .LVU6854
 20131              	.LBE1021:
 20132              	.LBE1020:
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20133              		.loc 1 1087 56 is_stmt 1 view .LVU6855
 20134              	# sieve_extend.c:1087:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20135              		.loc 1 1087 59 is_stmt 0 view .LVU6856
 20136 0d70 83EB01   		sub	ebx, 1	# option_verboselevel.41_63,
 20137 0d73 0F8455F9 		je	.L1702	#,
 20137      FFFF
1087:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 20138              		.loc 1 1087 86 is_stmt 1 view .LVU6857
 20139              	.LVL1321:
 20140              	.LBB1022:
 20141              	.LBI1022:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20142              		.loc 3 105 1 view .LVU6858
 20143              	.LBB1023:
 20144              		.loc 3 107 3 view .LVU6859
 20145              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20146              		.loc 3 107 10 is_stmt 0 view .LVU6860
 20147 0d79 BF0A0000 		mov	edi, 10	#,
 20147      00
 20148 0d7e E8000000 		call	putchar@PLT	#
 20148      00
 20149              	.LVL1322:
 20150 0d83 E946F9FF 		jmp	.L1702	#
 20150      FF
 20151              	.LVL1323:
 20152              	.L1817:
 20153              		.loc 3 107 10 view .LVU6861
 20154              	.LBE1023:
 20155              	.LBE1022:
 20156              	.LBE1025:
 20157              	.LBE1028:
1255:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20158              		.loc 1 1255 9 is_stmt 1 view .LVU6862
 20159              	# sieve_extend.c:1255:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1255:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20160              		.loc 1 1255 44 is_stmt 0 view .LVU6863
 20161 0d88 8B942488 		mov	edx, DWORD PTR 136[rsp]	# option_verboselevel.41_63, option_verboselevel
 20161      000000
 20162 0d8f 4183E801 		sub	r8d, 1	#,
 20163 0d93 488BB424 		mov	rsi, QWORD PTR 144[rsp]	# option_maxFactor.42_64, option_maxFactor
GAS LISTING /tmp/cct11Qa0.s 			page 535


 20163      90000000 
 20164 0d9b 4183F802 		cmp	r8d, 2	# _209,
 20165 0d9f 89542470 		mov	DWORD PTR 112[rsp], edx	# %sfp, option_verboselevel.41_63
 20166 0da3 48897424 		mov	QWORD PTR 104[rsp], rsi	# %sfp, option_maxFactor.42_64
 20166      68
 20167              	.LVL1324:
 20168              	.LBB1029:
1049:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 20169              		.loc 1 1049 27 is_stmt 1 view .LVU6864
 20170              	.LBB1026:
1050:sieve_extend.c **** 
 20171              		.loc 1 1050 5 view .LVU6865
1052:sieve_extend.c ****     best_blocksize_bits = 0;
 20172              		.loc 1 1052 5 view .LVU6866
1053:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20173              		.loc 1 1053 5 view .LVU6867
1054:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20174              		.loc 1 1054 5 view .LVU6868
1055:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 20175              		.loc 1 1055 5 view .LVU6869
1056:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 20176              		.loc 1 1056 5 view .LVU6870
1057:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 20177              		.loc 1 1057 5 view .LVU6871
1058:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 20178              		.loc 1 1058 5 view .LVU6872
1059:sieve_extend.c ****     double sample_duration = default_sample_duration;
 20179              		.loc 1 1059 5 view .LVU6873
1060:sieve_extend.c **** 
 20180              		.loc 1 1060 5 view .LVU6874
1063:sieve_extend.c ****         case 1:
 20181              		.loc 1 1063 5 view .LVU6875
 20182 0da8 0F8661FF 		jbe	.L1732	#,
 20182      FFFF
 20183 0dae C5FB100D 		vmovsd	xmm1, QWORD PTR .LC26[rip]	# sample_duration,
 20183      00000000 
 20184 0db6 48C74424 		mov	QWORD PTR 80[rsp], 5	# %sfp,
 20184      50050000 
 20184      00
 20185 0dbf 48C74424 		mov	QWORD PTR 88[rsp], 128	# %sfp,
 20185      58800000 
 20185      00
 20186 0dc8 48C74424 		mov	QWORD PTR 120[rsp], 4	# %sfp,
 20186      78040000 
 20186      00
 20187 0dd1 C5FB114C 		vmovsd	QWORD PTR 96[rsp], xmm1	# %sfp, sample_duration
 20187      2460
 20188 0dd7 E970FFFF 		jmp	.L1700	#
 20188      FF
 20189              	.LVL1325:
 20190              	.L1803:
1063:sieve_extend.c ****         case 1:
 20191              		.loc 1 1063 5 is_stmt 0 view .LVU6876
 20192              	.LBE1026:
 20193              	.LBE1029:
 20194              	.LBE1038:
 20195              	.LBB1039:
GAS LISTING /tmp/cct11Qa0.s 			page 536


1192:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 20196              		.loc 1 1192 34 is_stmt 1 discriminator 1 view .LVU6877
 20197              	.LBB909:
 20198              	.LBI909:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20199              		.loc 3 98 1 discriminator 1 view .LVU6878
 20200              	.LBB910:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20201              		.loc 3 100 3 discriminator 1 view .LVU6879
 20202              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20203              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6880
 20204 0ddc 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 20204      000000
 20205 0de3 BA1B0000 		mov	edx, 27	#,
 20205      00
 20206 0de8 BE010000 		mov	esi, 1	#,
 20206      00
 20207 0ded 488D3D00 		lea	rdi, .LC30[rip]	#,
 20207      000000
 20208 0df4 E8000000 		call	fwrite@PLT	#
 20208      00
 20209              	.LVL1326:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20210              		.loc 3 100 10 discriminator 1 view .LVU6881
 20211              	.LBE910:
 20212              	.LBE909:
1192:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 20213              		.loc 1 1192 83 is_stmt 1 discriminator 1 view .LVU6882
 20214 0df9 E9B3F7FF 		jmp	.L1801	#
 20214      FF
 20215              	.L1683:
1202:sieve_extend.c ****             }
 20216              		.loc 1 1202 17 view .LVU6883
 20217              	.LVL1327:
 20218              	.LBB911:
 20219              	.LBI906:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20220              		.loc 3 98 1 view .LVU6884
 20221              	.LBB908:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20222              		.loc 3 100 3 view .LVU6885
 20223              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20224              		.loc 3 100 10 is_stmt 0 view .LVU6886
 20225 0dfe 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 20226 0e01 488D1500 		lea	rdx, .LC37[rip]	#,
 20226      000000
 20227 0e08 E991F7FF 		jmp	.L1800	#
 20227      FF
 20228              	.LVL1328:
 20229              	.L1687:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20230              		.loc 3 100 10 view .LVU6887
 20231              	.LBE908:
 20232              	.LBE911:
1209:sieve_extend.c ****             }
GAS LISTING /tmp/cct11Qa0.s 			page 537


 20233              		.loc 1 1209 17 is_stmt 1 view .LVU6888
 20234              	.LBB912:
 20235              	.LBI912:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20236              		.loc 3 98 1 view .LVU6889
 20237              	.LBB913:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20238              		.loc 3 100 3 view .LVU6890
 20239              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20240              		.loc 3 100 10 is_stmt 0 view .LVU6891
 20241 0e0d 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 20242 0e10 488D1500 		lea	rdx, .LC42[rip]	#,
 20242      000000
 20243 0e17 E982F7FF 		jmp	.L1800	#
 20243      FF
 20244              	.LVL1329:
 20245              	.L1806:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20246              		.loc 3 100 10 view .LVU6892
 20247              	.LBE913:
 20248              	.LBE912:
1200:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 20249              		.loc 1 1200 34 is_stmt 1 discriminator 1 view .LVU6893
 20250              	.LBB914:
 20251              	.LBI914:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20252              		.loc 3 98 1 discriminator 1 view .LVU6894
 20253              	.LBB915:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20254              		.loc 3 100 3 discriminator 1 view .LVU6895
 20255              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20256              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6896
 20257 0e1c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 20257      000000
 20258 0e23 488D3D00 		lea	rdi, .LC36[rip]	#,
 20258      000000
 20259 0e2a BA180000 		mov	edx, 24	#,
 20259      00
 20260 0e2f BE010000 		mov	esi, 1	#,
 20260      00
 20261 0e34 E8000000 		call	fwrite@PLT	#
 20261      00
 20262              	.LVL1330:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20263              		.loc 3 100 10 discriminator 1 view .LVU6897
 20264              	.LBE915:
 20265              	.LBE914:
1200:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 20266              		.loc 1 1200 80 is_stmt 1 discriminator 1 view .LVU6898
 20267 0e39 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 20268 0e3d E8000000 		call	usage	#
 20268      00
 20269              	.LVL1331:
 20270              	.L1814:
1200:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
GAS LISTING /tmp/cct11Qa0.s 			page 538


 20271              		.loc 1 1200 80 is_stmt 0 discriminator 1 view .LVU6899
 20272              	.LBE1039:
 20273              	# sieve_extend.c:1287: }
 20274              		.loc 1 1287 1 view .LVU6900
 20275 0e42 E8000000 		call	__stack_chk_fail@PLT	#
 20275      00
 20276              	.LVL1332:
 20277              	.L1809:
 20278              	.LBB1040:
1207:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 20279              		.loc 1 1207 34 is_stmt 1 discriminator 1 view .LVU6901
 20280              	.LBB916:
 20281              	.LBI916:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20282              		.loc 3 98 1 discriminator 1 view .LVU6902
 20283              	.LBB917:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20284              		.loc 3 100 3 discriminator 1 view .LVU6903
 20285              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20286              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6904
 20287 0e47 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 20287      000000
 20288 0e4e 488D3D00 		lea	rdi, .LC40[rip]	#,
 20288      000000
 20289 0e55 BA1A0000 		mov	edx, 26	#,
 20289      00
 20290 0e5a BE010000 		mov	esi, 1	#,
 20290      00
 20291 0e5f E8000000 		call	fwrite@PLT	#
 20291      00
 20292              	.LVL1333:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20293              		.loc 3 100 10 discriminator 1 view .LVU6905
 20294              	.LBE917:
 20295              	.LBE916:
1207:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 20296              		.loc 1 1207 82 is_stmt 1 discriminator 1 view .LVU6906
 20297 0e64 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_156(D)
 20298 0e68 E8000000 		call	usage	#
 20298      00
 20299              	.LVL1334:
 20300              	.LBE1040:
 20301              		.cfi_endproc
 20302              	.LFE5352:
 20304              		.section	.rodata
 20305              		.align 16
 20308              	CSWTCH.109:
 20309 0000 9A999999 		.long	2576980378
 20310 0004 9999B93F 		.long	1069128089
 20311 0008 9A999999 		.long	2576980378
 20312 000c 9999C93F 		.long	1070176665
 20313 0010 9A999999 		.long	2576980378
 20314 0014 9999D93F 		.long	1071225241
 20315 0018 00000000 		.align 16
 20315      00000000 
 20318              	CSWTCH.108:
GAS LISTING /tmp/cct11Qa0.s 			page 539


 20319 0020 00080000 		.quad	2048
 20319      00000000 
 20320 0028 00040000 		.quad	1024
 20320      00000000 
 20321 0030 40000000 		.quad	64
 20321      00000000 
 20322 0038 00000000 		.align 16
 20322      00000000 
 20325              	CSWTCH.107:
 20326 0040 10000000 		.quad	16
 20326      00000000 
 20327 0048 08000000 		.quad	8
 20327      00000000 
 20328 0050 04000000 		.quad	4
 20328      00000000 
 20329              		.globl	debug_hitpoint
 20330              		.bss
 20331              		.align 32
 20334              	debug_hitpoint:
 20335 0000 00000000 		.zero	40
 20335      00000000 
 20335      00000000 
 20335      00000000 
 20335      00000000 
 20336              		.globl	global_MEDIUMSTEP_FASTER
 20337              		.data
 20338              		.align 8
 20341              	global_MEDIUMSTEP_FASTER:
 20342 0000 40000000 		.quad	64
 20342      00000000 
 20343              		.globl	global_SMALLSTEP_FASTER
 20344              		.align 8
 20347              	global_SMALLSTEP_FASTER:
 20348 0008 40000000 		.quad	64
 20348      00000000 
 20349              		.section	.rodata.cst32,"aM",@progbits,32
 20350              		.align 32
 20351              	.LC0:
 20352 0000 00000000 		.quad	0
 20352      00000000 
 20353 0008 01000000 		.quad	1
 20353      00000000 
 20354 0010 02000000 		.quad	2
 20354      00000000 
 20355 0018 03000000 		.quad	3
 20355      00000000 
 20356              		.align 32
 20357              	.LC1:
 20358 0020 08000000 		.quad	8
 20358      00000000 
 20359 0028 08000000 		.quad	8
 20359      00000000 
 20360 0030 08000000 		.quad	8
 20360      00000000 
 20361 0038 08000000 		.quad	8
 20361      00000000 
 20362              		.align 32
GAS LISTING /tmp/cct11Qa0.s 			page 540


 20363              	.LC2:
 20364 0040 04000000 		.quad	4
 20364      00000000 
 20365 0048 04000000 		.quad	4
 20365      00000000 
 20366 0050 04000000 		.quad	4
 20366      00000000 
 20367 0058 04000000 		.quad	4
 20367      00000000 
 20368              		.align 32
 20369              	.LC3:
 20370 0060 3F000000 		.long	63
 20371 0064 3F000000 		.long	63
 20372 0068 3F000000 		.long	63
 20373 006c 3F000000 		.long	63
 20374 0070 3F000000 		.long	63
 20375 0074 3F000000 		.long	63
 20376 0078 3F000000 		.long	63
 20377 007c 3F000000 		.long	63
 20378              		.section	.rodata.cst8,"aM",@progbits,8
 20379              		.align 8
 20380              	.LC7:
 20381 0000 00000000 		.long	0
 20382 0004 0000F87F 		.long	2146959360
 20383              		.align 8
 20384              	.LC8:
 20385 0008 95D626E8 		.long	3894859413
 20386 000c 0B2E113E 		.long	1041313291
 20387              		.align 8
 20388              	.LC26:
 20389 0010 9A999999 		.long	2576980378
 20390 0014 9999B93F 		.long	1069128089
 20391              		.align 8
 20392              	.LC57:
 20393 0018 00000000 		.long	0
 20394 001c 00001440 		.long	1075052544
 20395              		.text
 20396              	.Letext0:
 20397              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 20398              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 20399              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 20400              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 20401              		.file 8 "/usr/include/stdio.h"
 20402              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 20403              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 20404              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 20405              		.file 12 "/usr/include/stdint.h"
 20406              		.file 13 "/usr/include/time.h"
 20407              		.file 14 "/usr/include/math.h"
 20408              		.file 15 "/usr/include/stdlib.h"
 20409              		.file 16 "<built-in>"
 47219              		.section	.note.gnu.property,"a"
 47220              		.align 8
 47221 0000 04000000 		.long	 1f - 0f
 47222 0004 10000000 		.long	 4f - 1f
 47223 0008 05000000 		.long	 5
 47224              	0:
GAS LISTING /tmp/cct11Qa0.s 			page 541


 47225 000c 474E5500 		.string	 "GNU"
 47226              	1:
 47227              		.align 8
 47228 0010 020000C0 		.long	 0xc0000002
 47229 0014 04000000 		.long	 3f - 2f
 47230              	2:
 47231 0018 03000000 		.long	 0x3
 47232              	3:
 47233 001c 00000000 		.align 8
 47234              	4:
GAS LISTING /tmp/cct11Qa0.s 			page 542


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/cct11Qa0.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/cct11Qa0.s:20351  .rodata.cst32:0000000000000000 .LC0
     /tmp/cct11Qa0.s:20357  .rodata.cst32:0000000000000020 .LC1
     /tmp/cct11Qa0.s:20363  .rodata.cst32:0000000000000040 .LC2
     /tmp/cct11Qa0.s:20369  .rodata.cst32:0000000000000060 .LC3
     /tmp/cct11Qa0.s:1236   .text:00000000000006d0 extendSieve_shiftright_ivdep
     /tmp/cct11Qa0.s:3240   .text:0000000000001500 compare_tuning_result
     /tmp/cct11Qa0.s:3266   .text:0000000000001520 setBitsTrue_largeRange_vector
     /tmp/cct11Qa0.s:4290   .text:0000000000001a60 extendSieve_aligned
     /tmp/cct11Qa0.s:5179   .text:0000000000001fe0 extendSieve_shiftleft
     /tmp/cct11Qa0.s:8147   .text:00000000000032e0 show_primes.isra.0
     /tmp/cct11Qa0.s:8142   .rodata.str1.1:0000000000000006 .LC5
     /tmp/cct11Qa0.s:8140   .rodata.str1.1:0000000000000000 .LC4
     /tmp/cct11Qa0.s:8554   .text:0000000000003480 sieve
     /tmp/cct11Qa0.s:15035  .text:0000000000005110 tune_benchmark
     /tmp/cct11Qa0.s:20341  .data:0000000000000000 global_MEDIUMSTEP_FASTER
     /tmp/cct11Qa0.s:20347  .data:0000000000000008 global_SMALLSTEP_FASTER
     /tmp/cct11Qa0.s:20380  .rodata.cst8:0000000000000000 .LC7
     /tmp/cct11Qa0.s:20384  .rodata.cst8:0000000000000008 .LC8
     /tmp/cct11Qa0.s:15236  .text:0000000000005240 shiftvec
     /tmp/cct11Qa0.s:16398  .text:0000000000005600 validatePrimeCount
     /tmp/cct11Qa0.s:16379  .rodata.str1.8:0000000000000000 .LC9
     /tmp/cct11Qa0.s:16385  .rodata.str1.1:0000000000000023 .LC11
     /tmp/cct11Qa0.s:16389  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/cct11Qa0.s:16382  .rodata.str1.8:0000000000000058 .LC10
     /tmp/cct11Qa0.s:16392  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/cct11Qa0.s:17652  .text:0000000000005d90 usage
     /tmp/cct11Qa0.s:17612  .rodata.str1.8:0000000000000148 .LC14
     /tmp/cct11Qa0.s:17615  .rodata.str1.1:0000000000000031 .LC15
     /tmp/cct11Qa0.s:17619  .rodata.str1.8:0000000000000168 .LC16
     /tmp/cct11Qa0.s:17622  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/cct11Qa0.s:17625  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/cct11Qa0.s:17628  .rodata.str1.8:0000000000000220 .LC19
     /tmp/cct11Qa0.s:17631  .rodata.str1.8:0000000000000250 .LC20
     /tmp/cct11Qa0.s:17634  .rodata.str1.8:0000000000000290 .LC21
     /tmp/cct11Qa0.s:17637  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/cct11Qa0.s:17640  .rodata.str1.8:0000000000000320 .LC23
     /tmp/cct11Qa0.s:17643  .rodata.str1.8:0000000000000348 .LC24
     /tmp/cct11Qa0.s:17646  .rodata.str1.8:0000000000000378 .LC25
     /tmp/cct11Qa0.s:17980  .text.startup:0000000000000000 main
     /tmp/cct11Qa0.s:17891  .rodata.str1.1:000000000000004a .LC28
     /tmp/cct11Qa0.s:17893  .rodata.str1.1:0000000000000051 .LC29
     /tmp/cct11Qa0.s:17897  .rodata.str1.1:0000000000000077 .LC31
     /tmp/cct11Qa0.s:17904  .rodata.str1.1:000000000000007a .LC33
     /tmp/cct11Qa0.s:17906  .rodata.str1.1:0000000000000093 .LC34
     /tmp/cct11Qa0.s:17908  .rodata.str1.1:000000000000009b .LC35
     /tmp/cct11Qa0.s:17917  .rodata.str1.1:00000000000000bb .LC38
     /tmp/cct11Qa0.s:17936  .rodata.str1.1:000000000000013a .LC46
     /tmp/cct11Qa0.s:17934  .rodata.str1.1:0000000000000121 .LC45
     /tmp/cct11Qa0.s:17919  .rodata.str1.1:00000000000000d1 .LC39
     /tmp/cct11Qa0.s:17923  .rodata.str1.1:00000000000000f3 .LC41
     /tmp/cct11Qa0.s:17930  .rodata.str1.1:00000000000000f7 .LC43
     /tmp/cct11Qa0.s:17932  .rodata.str1.1:0000000000000110 .LC44
     /tmp/cct11Qa0.s:17938  .rodata.str1.1:000000000000014a .LC47
     /tmp/cct11Qa0.s:20392  .rodata.cst8:0000000000000018 .LC57
GAS LISTING /tmp/cct11Qa0.s 			page 543


     /tmp/cct11Qa0.s:17968  .rodata.str1.8:00000000000006c8 .LC58
     /tmp/cct11Qa0.s:17889  .rodata.str1.1:000000000000003b .LC27
     /tmp/cct11Qa0.s:17901  .rodata.str1.8:00000000000003b0 .LC32
     /tmp/cct11Qa0.s:17974  .rodata.str1.1:000000000000017b .LC60
     /tmp/cct11Qa0.s:17971  .rodata.str1.8:0000000000000710 .LC59
     /tmp/cct11Qa0.s:20388  .rodata.cst8:0000000000000010 .LC26
     /tmp/cct11Qa0.s:17949  .rodata.str1.8:00000000000004a8 .LC51
     /tmp/cct11Qa0.s:17946  .rodata.str1.8:0000000000000420 .LC50
     /tmp/cct11Qa0.s:17952  .rodata.str1.8:0000000000000530 .LC52
     /tmp/cct11Qa0.s:17955  .rodata.str1.1:000000000000016e .LC53
     /tmp/cct11Qa0.s:17959  .rodata.str1.8:0000000000000588 .LC54
     /tmp/cct11Qa0.s:17940  .rodata.str1.1:0000000000000151 .LC48
     /tmp/cct11Qa0.s:17965  .rodata.str1.8:0000000000000690 .LC56
     /tmp/cct11Qa0.s:17962  .rodata.str1.8:0000000000000618 .LC55
     /tmp/cct11Qa0.s:20325  .rodata:0000000000000040 CSWTCH.107
     /tmp/cct11Qa0.s:20318  .rodata:0000000000000020 CSWTCH.108
     /tmp/cct11Qa0.s:20308  .rodata:0000000000000000 CSWTCH.109
     /tmp/cct11Qa0.s:17942  .rodata.str1.1:0000000000000164 .LC49
     /tmp/cct11Qa0.s:17895  .rodata.str1.1:000000000000005b .LC30
     /tmp/cct11Qa0.s:17914  .rodata.str1.8:00000000000003d8 .LC37
     /tmp/cct11Qa0.s:17927  .rodata.str1.8:00000000000003f8 .LC42
     /tmp/cct11Qa0.s:17910  .rodata.str1.1:00000000000000a2 .LC36
     /tmp/cct11Qa0.s:17921  .rodata.str1.1:00000000000000d8 .LC40
     /tmp/cct11Qa0.s:20334  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
