GAS LISTING /tmp/cc7rm34x.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -Wextra -Wall -Wno-unused-function
  21              	# -funroll-all-loops -fno-asynchronous-unwind-tables -fno-exceptions
  22              	# -fverbose-asm -fstack-protector-strong -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/cc7rm34x.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB68:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** 
   8:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
   9:sieve_extend.c **** #define option_runonce 0
  10:sieve_extend.c **** #define debug if (option_runonce)
  11:sieve_extend.c **** #define debug2 if (option_runonce>=2)
  12:sieve_extend.c **** 
  13:sieve_extend.c **** #define default_sieve_limit 1000000
  14:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  15:sieve_extend.c **** #define default_sieve_duration 5
  16:sieve_extend.c **** #define default_sample_duration 0.1
  17:sieve_extend.c **** #define default_sample_max 5
  18:sieve_extend.c **** #define default_verbose_level 1
  19:sieve_extend.c **** #define default_tune_level 0
  20:sieve_extend.c **** #define default_check_level 1
  21:sieve_extend.c **** #define default_show_primes_on_error 100
  22:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  23:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  24:sieve_extend.c **** 
  25:sieve_extend.c **** // 64 bit
  26:sieve_extend.c **** #define TYPE uint64_t
GAS LISTING /tmp/cc7rm34x.s 			page 3


  27:sieve_extend.c **** 
  28:sieve_extend.c **** // calculate the rest dynamically
  29:sieve_extend.c **** #define counter_t TYPE
  30:sieve_extend.c **** #define bitshift_t TYPE
  31:sieve_extend.c **** #define bitword_t uint64_t
  32:sieve_extend.c **** 
  33:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  34:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  35:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  36:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  37:sieve_extend.c **** //#define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+p
  38:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  39:sieve_extend.c **** 
  40:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  41:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  42:sieve_extend.c **** #define VECTOR_SIZE_counter (VECTOR_SIZE_bytes*8)
  43:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  44:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  45:sieve_extend.c **** 
  46:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  47:sieve_extend.c **** 
  48:sieve_extend.c **** // globals for tuning
  49:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  50:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 0;
  51:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = VECTOR_SIZE/2;
  52:sieve_extend.c **** 
  53:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  54:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  55:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  56:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  57:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  58:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  59:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  60:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)128)
  61:sieve_extend.c **** 
  62:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  63:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  64:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  65:sieve_extend.c **** 
  66:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  67:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  68:sieve_extend.c **** #define wordstart(index) ((counter_t)index&~WORDMASK)
  69:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  70:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  71:sieve_extend.c **** 
  72:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  73:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  74:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  75:sieve_extend.c **** //#define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)
  76:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  77:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  78:sieve_extend.c **** #define  markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  79:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  80:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  81:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  82:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  83:sieve_extend.c **** #define chopmask2(index) chopmask(index)
GAS LISTING /tmp/cc7rm34x.s 			page 4


  84:sieve_extend.c **** #define real(bit) (bit*2+1)
  85:sieve_extend.c **** 
  86:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  87:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  88:sieve_extend.c **** 
  89:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  90:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  91:sieve_extend.c **** 
  92:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  93:sieve_extend.c **** 
  94:sieve_extend.c **** struct sieve_state {
  95:sieve_extend.c ****     bitword_t* bitarray;
  96:sieve_extend.c ****     counter_t  bits;
  97:sieve_extend.c ****     counter_t  size;
  98:sieve_extend.c **** };
  99:sieve_extend.c **** 
 100:sieve_extend.c **** #include "debugtools.h"
 101:sieve_extend.c **** 
 102:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 103:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 104:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t size) {
 105:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 106:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 107:sieve_extend.c **** 
 108:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
 109:sieve_extend.c ****     sieve->bits     = size >> 1;
 110:sieve_extend.c ****     sieve->size     = size;
 111:sieve_extend.c **** 
 112:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
 113:sieve_extend.c ****     // it gave weird malloc problems at this point
 114:sieve_extend.c ****     return sieve;
 115:sieve_extend.c **** }
 116:sieve_extend.c **** 
 117:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
 118:sieve_extend.c ****     free(sieve->bitarray);
 119:sieve_extend.c ****     free(sieve);
 120:sieve_extend.c **** }
 121:sieve_extend.c **** 
 122:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 123:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 124:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 125:sieve_extend.c ****     return index;
 126:sieve_extend.c **** }
 127:sieve_extend.c **** 
 128:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 129:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 130:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 131:sieve_extend.c **** 
 132:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 133:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 134:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 135:sieve_extend.c ****    index += distance;
 136:sieve_extend.c ****    distance += index_bit;
 137:sieve_extend.c **** 
 138:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 139:sieve_extend.c ****        index_word++;
 140:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
GAS LISTING /tmp/cc7rm34x.s 			page 5


 141:sieve_extend.c ****        index += distance;
 142:sieve_extend.c ****    }
 143:sieve_extend.c **** 
 144:sieve_extend.c ****    return index;
 145:sieve_extend.c **** }
 146:sieve_extend.c **** 
 147:sieve_extend.c **** 
 148:sieve_extend.c **** static inline void applyMask_array(bitword_t* __restrict bitarray, const counter_t step, const coun
 149:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 150:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 151:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 152:sieve_extend.c ****     register const counter_t range_stop_word = wordindex(range_stop);
 153:sieve_extend.c ****     const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (cou
 154:sieve_extend.c **** 
 155:sieve_extend.c ****     #pragma GCC ivdep
 156:sieve_extend.c ****     for (;index_word < loop_stop_word;  index_word += step_4) {
 157:sieve_extend.c ****         bitarray[index_word         ] |= mask;
 158:sieve_extend.c ****         bitarray[index_word + step  ] |= mask;
 159:sieve_extend.c ****         bitarray[index_word + step_2] |= mask;
 160:sieve_extend.c ****         bitarray[index_word + step_3] |= mask;
 161:sieve_extend.c ****     }
 162:sieve_extend.c **** 
 163:sieve_extend.c ****     #pragma GCC ivdep
 164:sieve_extend.c ****     while (index_word < range_stop_word) {
 165:sieve_extend.c ****         bitarray[index_word] |= mask;
 166:sieve_extend.c ****         index_word += step;
 167:sieve_extend.c ****     }
 168:sieve_extend.c **** 
 169:sieve_extend.c ****     if (index_word == wordindex(range_stop)) {
 170:sieve_extend.c ****         bitarray[wordindex(range_stop)] |= (mask & chopmask(range_stop));
 171:sieve_extend.c ****     }
 172:sieve_extend.c **** }
 173:sieve_extend.c **** //#endif
 174:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 175:sieve_extend.c **** //#if __linux__
 176:sieve_extend.c **** static inline void applyMask_ptr(bitword_t* __restrict bitarray, const counter_t step, const counte
 177:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 178:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 179:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 180:sieve_extend.c **** 
 181:sieve_extend.c ****    //#pragma GCC unroll 10
 182:sieve_extend.c ****    #pragma GCC ivdep
 183:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 184:sieve_extend.c ****        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 186:sieve_extend.c ****        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 188:sieve_extend.c ****        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 190:sieve_extend.c ****        *index_ptr |= mask;
 191:sieve_extend.c ****        index_ptr+=step;
 192:sieve_extend.c ****        *index_ptr |= mask;
 193:sieve_extend.c ****        index_ptr+=step;
 194:sieve_extend.c ****    }
 195:sieve_extend.c **** 
 196:sieve_extend.c ****    register const bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 197:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
GAS LISTING /tmp/cc7rm34x.s 			page 6


 198:sieve_extend.c ****        *index_ptr |= mask;
 199:sieve_extend.c ****        index_ptr+=step;
 200:sieve_extend.c ****    }
 201:sieve_extend.c **** 
 202:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 203:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 204:sieve_extend.c ****    }
 205:sieve_extend.c **** 
 206:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 207:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 208:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 209:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 210:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
 211:sieve_extend.c **** 
 212:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 213:sieve_extend.c **** 
 214:sieve_extend.c **** //     //#pragma GCC unroll 1
 215:sieve_extend.c **** //    #pragma GCC ivdep
 216:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 217:sieve_extend.c **** //        *(index_ptr) |= mask;
 218:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 219:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 220:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 221:sieve_extend.c **** //        index_ptr += 4*step;
 222:sieve_extend.c **** //    }
 223:sieve_extend.c **** 
 224:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 225:sieve_extend.c **** //        *index_ptr |= mask;
 226:sieve_extend.c **** //        index_ptr+=step;
 227:sieve_extend.c **** //    }
 228:sieve_extend.c **** 
 229:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 230:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 231:sieve_extend.c **** //    }
 232:sieve_extend.c **** //#endif
 233:sieve_extend.c **** }
 234:sieve_extend.c **** 
 235:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 236:sieve_extend.c **** static inline void setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 237:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 238:sieve_extend.c **** 
 239:sieve_extend.c ****     // build the pattern in a word
 240:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
 241:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 242:sieve_extend.c ****         pattern |= (pattern << patternsize);
 243:sieve_extend.c **** 
 244:sieve_extend.c ****     // debug if (step==13) { printf("Before\n"); dump_bitarray(bitarray,10); }
 245:sieve_extend.c ****     
 246:sieve_extend.c ****     // initialize loop variables and stop if this is it
 247:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 248:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 249:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 250:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 251:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 252:sieve_extend.c ****        return;
 253:sieve_extend.c ****     }
 254:sieve_extend.c ****     
GAS LISTING /tmp/cc7rm34x.s 			page 7


 255:sieve_extend.c ****     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 256:sieve_extend.c **** 
 257:sieve_extend.c ****    // from now on, we are before range_stop_word
 258:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 259:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 260:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 261:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 262:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 263:sieve_extend.c ****    //#pragma GCC unroll 16
 264:sieve_extend.c ****    #pragma GCC ivdep
 265:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; i++) {
 266:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 267:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 268:sieve_extend.c **** 
 269:sieve_extend.c ****         // bitarray[range_start_word+i] |=  (pattern >> (pattern_size-((shift+i*pattern_shift) % st
 270:sieve_extend.c ****    }
 271:sieve_extend.c ****    bitarray[range_stop_word] &= chopmask(range_stop);
 272:sieve_extend.c **** 
 273:sieve_extend.c **** //    for(counter_t check=range_start; check<=range_stop; check+=step) {
 274:sieve_extend.c **** //         if (!(bitarray[wordindex(check)] & markmask(check))) {
 275:sieve_extend.c **** //             printf("Bit %ju not set\n",check);
 276:sieve_extend.c **** //             dump_bitarray(bitarray,4);
 277:sieve_extend.c **** //             printWord(pattern); printf("\n");
 278:sieve_extend.c **** //             exit(0);
 279:sieve_extend.c **** //         }
 280:sieve_extend.c **** //    }
 281:sieve_extend.c **** 
 282:sieve_extend.c ****     // pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset
 283:sieve_extend.c ****     // const register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 284:sieve_extend.c ****     // const register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - patte
 285:sieve_extend.c ****     // const register counter_t loop_range = range_stop_word - range_start_word;
 286:sieve_extend.c ****     // //#pragma GCC unroll 16
 287:sieve_extend.c ****     // #pragma GCC ivdep
 288:sieve_extend.c ****     // for (counter_t i=1; i <= loop_range; i++) {
 289:sieve_extend.c ****     //     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 290:sieve_extend.c ****     //     bitarray[range_start_word+i] |= pattern;
 291:sieve_extend.c ****     // }
 292:sieve_extend.c ****     // bitarray[range_stop_word] &= chopmask(range_stop);
 293:sieve_extend.c **** }
 294:sieve_extend.c **** 
 295:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 296:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 297:sieve_extend.c **** // This is especially true for small steps over long ranges
 298:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 299:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 300:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 301:sieve_extend.c **** 
 302:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 303:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 304:sieve_extend.c **** 
 305:sieve_extend.c ****         #pragma GCC ivdep
 306:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 307:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 308:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 309:sieve_extend.c ****             #pragma GCC ivdep
 310:sieve_extend.c ****             do {
 311:sieve_extend.c ****                 mask |= markmask(index);
GAS LISTING /tmp/cc7rm34x.s 			page 8


 312:sieve_extend.c ****                 index += step;
 313:sieve_extend.c ****             } while (index_word == wordindex(index));
 314:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 315:sieve_extend.c ****             //     mask |= markmask(index);
 316:sieve_extend.c ****             bitarray[index_word] |= mask;
 317:sieve_extend.c ****         }
 318:sieve_extend.c ****     }
 319:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 320:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 321:sieve_extend.c ****         
 322:sieve_extend.c ****         #pragma GCC ivdep
 323:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 324:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 325:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 326:sieve_extend.c ****             #pragma GCC ivdep
 327:sieve_extend.c ****             do {
 328:sieve_extend.c ****                 mask |= markmask(index);
 329:sieve_extend.c ****                 index += step;
 330:sieve_extend.c ****             } while (index_word == wordindex(index));
 331:sieve_extend.c ****             // #pragma GCC ivdep
 332:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 333:sieve_extend.c ****             //     mask |= markmask(index);
 334:sieve_extend.c ****             #if __APPLE__
 335:sieve_extend.c ****                applyMask_array(bitarray, step, range_stop, mask, index_word);
 336:sieve_extend.c ****             #else
 337:sieve_extend.c ****                applyMask_ptr(bitarray, step, range_stop, mask, index_word);
 338:sieve_extend.c ****             #endif
 339:sieve_extend.c ****         }
 340:sieve_extend.c ****     }
 341:sieve_extend.c **** }
 342:sieve_extend.c **** 
 343:sieve_extend.c **** // large steps in small ranges (< WORD_SIZE * step) mean the mask is unique
 344:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 345:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 346:sieve_extend.c ****     
 347:sieve_extend.c ****     //#pragma GCC unroll 16
 348:sieve_extend.c ****     #pragma GCC ivdep
 349:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 350:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 351:sieve_extend.c ****     }
 352:sieve_extend.c **** }
 353:sieve_extend.c **** 
 354:sieve_extend.c **** static inline void setBitsTrue_largeSteps_unroll(bitword_t* __restrict bitarray, const counter_t ra
 355:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 356:sieve_extend.c ****     
 357:sieve_extend.c ****     counter_t loop_iterations = (range_stop - range_start) / step;
 358:sieve_extend.c ****     //#pragma GCC unroll 16
 359:sieve_extend.c ****     #pragma GCC ivdep 
 360:sieve_extend.c ****     for (register counter_t i = 0; i <= loop_iterations; i++) {
 361:sieve_extend.c ****          bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 362:sieve_extend.c ****     }
 363:sieve_extend.c **** }
 364:sieve_extend.c **** 
 365:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 366:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 367:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 368:sieve_extend.c **** 
GAS LISTING /tmp/cc7rm34x.s 			page 9


 369:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 370:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 371:sieve_extend.c ****     
 372:sieve_extend.c ****     while (1) {
 373:sieve_extend.c ****         if (index1_word == index2_word) {
 374:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 375:sieve_extend.c ****             counter_t index_word = index1_word;
 376:sieve_extend.c ****             do {
 377:sieve_extend.c ****                 mask |= markmask(index1);
 378:sieve_extend.c ****                 index1 += step1;
 379:sieve_extend.c ****                 index1_word = wordindex(index1);
 380:sieve_extend.c ****             } while (index1_word == index_word);
 381:sieve_extend.c ****             do {
 382:sieve_extend.c ****                 mask |= markmask(index2);
 383:sieve_extend.c ****                 index2 += step2;
 384:sieve_extend.c ****                 index2_word = wordindex(index2);
 385:sieve_extend.c ****             } while (index2_word == index_word);
 386:sieve_extend.c ****             bitarray[index_word] |= mask;
 387:sieve_extend.c ****         }
 388:sieve_extend.c **** 
 389:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 390:sieve_extend.c ****         if (index2 > range_stop) {
 391:sieve_extend.c ****             while (index1 <= range_stop) {
 392:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 393:sieve_extend.c ****                 index1 += step1;
 394:sieve_extend.c ****             }
 395:sieve_extend.c ****             return;
 396:sieve_extend.c ****         }
 397:sieve_extend.c **** 
 398:sieve_extend.c ****         if (index1 > range_stop) {
 399:sieve_extend.c ****             while (index2 <= range_stop) {
 400:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 401:sieve_extend.c ****                 index2 += step2;
 402:sieve_extend.c ****             }
 403:sieve_extend.c ****             return;
 404:sieve_extend.c ****         }
 405:sieve_extend.c **** 
 406:sieve_extend.c ****         while (index1_word < index2_word) {
 407:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 408:sieve_extend.c ****             index1 += step1;
 409:sieve_extend.c ****             index1_word = wordindex(index1);
 410:sieve_extend.c ****         }
 411:sieve_extend.c ****         
 412:sieve_extend.c ****         while (index2_word < index1_word){
 413:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 414:sieve_extend.c ****             index2 += step2;
 415:sieve_extend.c ****             index2_word = wordindex(index2);
 416:sieve_extend.c ****         }
 417:sieve_extend.c **** 
 418:sieve_extend.c ****     }
 419:sieve_extend.c **** }
 420:sieve_extend.c **** 
 421:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 422:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 423:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 424:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 425:sieve_extend.c **** 
GAS LISTING /tmp/cc7rm34x.s 			page 10


 426:sieve_extend.c ****     //#pragma GCC unroll 16
 427:sieve_extend.c ****     #pragma GCC ivdep
 428:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 429:sieve_extend.c ****         #if __APPLE__
 430:sieve_extend.c ****             applyMask_array(bitarray, step, range_stop, markmask(index), wordindex(index));
 431:sieve_extend.c ****         #else
 432:sieve_extend.c ****             applyMask_ptr(bitarray, step, range_stop, markmask(index), wordindex(index));
 433:sieve_extend.c ****         #endif
 434:sieve_extend.c ****     }
 435:sieve_extend.c **** }
 436:sieve_extend.c **** 
 437:sieve_extend.c **** 
 438:sieve_extend.c **** static inline void applyMask_vector_ptr(bitvector_t* __restrict bitarray, const counter_t step, con
 439:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 440:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vec
 441:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 442:sieve_extend.c ****     
 443:sieve_extend.c ****     //#pragma GCC unroll 16
 444:sieve_extend.c ****     #pragma GCC ivdep
 445:sieve_extend.c ****     while likely(index_ptr < fast_loop_ptr) {
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 450:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 451:sieve_extend.c ****     }
 452:sieve_extend.c ****     
 453:sieve_extend.c ****     register const bitvector_t* __restrict range_stop_ptr = &bitarray[(range_stop_vector)];
 454:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 455:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 456:sieve_extend.c ****     }
 457:sieve_extend.c **** 
 458:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, dependin
 459:sieve_extend.c **** //        bitword_t* __restrict index_ptr_word = (bitword_t*)index_ptr;
 460:sieve_extend.c **** //        bitword_t* __restrict range_stop_ptr_word = (bitword_t*)&bitarray[wordindex(range_stop)];
 461:sieve_extend.c **** //        for(counter_t word=0; index_ptr_word+word <= range_stop_ptr_word; word++) {
 462:sieve_extend.c **** //            *(index_ptr_word+word) = mask[word];
 463:sieve_extend.c **** //        }
 464:sieve_extend.c **** //    }
 465:sieve_extend.c **** }
 466:sieve_extend.c **** 
 467:sieve_extend.c **** static inline void applyMask_vector_array(bitvector_t* __restrict bitarray_word, const counter_t st
 468:sieve_extend.c **** 
 469:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 470:sieve_extend.c ****     counter_t current_vector = index_vector;
 471:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 472:sieve_extend.c **** 
 473:sieve_extend.c ****     const counter_t step_2 = step * 2;
 474:sieve_extend.c ****     const counter_t step_3 = step * 3;
 475:sieve_extend.c ****     const counter_t step_4 = step * 4;
 476:sieve_extend.c **** 
 477:sieve_extend.c ****     if (current_vector+step_4 <= range_stop_vector) {
 478:sieve_extend.c ****         register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_stop_vect
 479:sieve_extend.c ****         //#pragma GCC unroll 16
 480:sieve_extend.c ****         #pragma GCC ivdep
 481:sieve_extend.c ****         for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 482:sieve_extend.c ****             bitarray_vector[current_vector       ] |= mask;
GAS LISTING /tmp/cc7rm34x.s 			page 11


 483:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= mask;
 484:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= mask;
 485:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= mask;
 486:sieve_extend.c ****         }
 487:sieve_extend.c ****     }
 488:sieve_extend.c ****     
 489:sieve_extend.c ****     //#pragma GCC unroll 16
 490:sieve_extend.c ****     #pragma GCC ivdep 
 491:sieve_extend.c ****     for(; current_vector <= range_stop_vector; current_vector += step) {
 492:sieve_extend.c ****         bitarray_vector[current_vector] |= mask;
 493:sieve_extend.c ****     }
 494:sieve_extend.c ****     
 495:sieve_extend.c **** }
 496:sieve_extend.c **** 
 497:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, counter_t range_star
 498:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 499:sieve_extend.c **** 
 500:sieve_extend.c ****     // const counter_t range_stop_unique_oneword =  min(range_start + WORD_SIZE_counter * step, ran
 501:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique_oneword; index += step) {
 502:sieve_extend.c ****     //     applyMask(bitarray_word, step, range_stop, markmask(index), wordindex(index));
 503:sieve_extend.c ****     // }
 504:sieve_extend.c ****     // return;
 505:sieve_extend.c **** 
 506:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 507:sieve_extend.c ****     
 508:sieve_extend.c ****     // find out where the first complete vector is
 509:sieve_extend.c ****     // printWord(range_start); printf("\n");
 510:sieve_extend.c ****     // printWord(~VECTORMASK); printf("\n");
 511:sieve_extend.c ****     // printWord(vectorstart(range_start)); printf("\n\n");
 512:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 513:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 514:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 515:sieve_extend.c **** 
 516:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 517:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 518:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 519:sieve_extend.c **** 
 520:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 521:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 522:sieve_extend.c ****             return;                 
 523:sieve_extend.c ****         }
 524:sieve_extend.c **** 
 525:sieve_extend.c ****         debug2 printf("..Marking without vector until %ju\n",(uintmax_t)range_start_atvector);
 526:sieve_extend.c ****         // register counter_t index = range_start; // outside to later adjust range_start
 527:sieve_extend.c ****         //#pragma GCC unroll 16
 528:sieve_extend.c ****         #pragma GCC ivdep 
 529:sieve_extend.c ****         for (; range_start <= range_start_atvector; range_start += step) 
 530:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 531:sieve_extend.c ****     }
 532:sieve_extend.c ****     
 533:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 534:sieve_extend.c **** 
 535:sieve_extend.c ****     //#pragma GCC unroll 16
 536:sieve_extend.c ****     #pragma GCC ivdep 
 537:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 538:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 539:sieve_extend.c ****         register bitvector_t quadmask = { };
GAS LISTING /tmp/cc7rm34x.s 			page 12


 540:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 541:sieve_extend.c ****         
 542:sieve_extend.c ****         // build a quadmask
 543:sieve_extend.c ****         //#pragma GCC unroll 16
 544:sieve_extend.c ****         #pragma GCC ivdep 
 545:sieve_extend.c ****         do {
 546:sieve_extend.c ****             quadmask[word] |= markmask(index);
 547:sieve_extend.c ****             index += step;
 548:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 549:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 550:sieve_extend.c ****         
 551:sieve_extend.c ****         // use mask on all n*step multiples
 552:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_WORD
 553:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 554:sieve_extend.c **** 
 555:sieve_extend.c ****         applyMask_vector_ptr(bitarray_vector, step, range_stop, quadmask, current_vector);
 556:sieve_extend.c **** 
 557:sieve_extend.c ****         // if (current_vector+step_4 <= range_stop_vector) {
 558:sieve_extend.c ****         //     register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_st
 559:sieve_extend.c ****         //      //#pragma GCC unroll 16
 560:sieve_extend.c ****         //     #pragma GCC ivdep
 561:sieve_extend.c ****         //     for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 562:sieve_extend.c ****         //         bitarray_vector[current_vector       ] |= quadmask;
 563:sieve_extend.c ****         //         bitarray_vector[current_vector+step  ] |= quadmask;
 564:sieve_extend.c ****         //         bitarray_vector[current_vector+step_2] |= quadmask;
 565:sieve_extend.c ****         //         bitarray_vector[current_vector+step_3] |= quadmask;
 566:sieve_extend.c ****         //     }
 567:sieve_extend.c ****         // }
 568:sieve_extend.c **** 
 569:sieve_extend.c **** 
 570:sieve_extend.c ****         // #pragma GCC ivdep 
 571:sieve_extend.c ****         // for(; current_vector+step_4 < range_stop_vector; current_vector += step_4) {
 572:sieve_extend.c ****         //     bitarray_vector[current_vector       ] |= quadmask;
 573:sieve_extend.c ****         //     bitarray_vector[current_vector+step  ] |= quadmask;
 574:sieve_extend.c ****         //     bitarray_vector[current_vector+step_2] |= quadmask;
 575:sieve_extend.c ****         //     bitarray_vector[current_vector+step_3] |= quadmask;
 576:sieve_extend.c ****         // }
 577:sieve_extend.c **** 
 578:sieve_extend.c ****         // #pragma GCC ivdep 
 579:sieve_extend.c ****         // for(; current_vector < range_stop_vector; current_vector += step) {
 580:sieve_extend.c ****         //     bitarray_vector[current_vector] |= quadmask;
 581:sieve_extend.c ****         // }
 582:sieve_extend.c ****         
 583:sieve_extend.c ****         // if unlikely(current_vector == range_stop_vector) {
 584:sieve_extend.c ****         //     counter_t index_word = current_vector * VECTOR_ELEMENTS;
 585:sieve_extend.c ****         //     counter_t range_stop_word = wordindex(range_stop);
 586:sieve_extend.c ****         //     if likely(index_word <= range_stop_word) {
 587:sieve_extend.c ****         //         #pragma GCC ivdep
 588:sieve_extend.c ****         //         for (word =0; word < VECTOR_ELEMENTS; word++) {
 589:sieve_extend.c ****         //             if unlikely(index_word+word <= range_stop_word)
 590:sieve_extend.c ****         //                 bitarray_word[index_word+word] |= quadmask[word];
 591:sieve_extend.c ****         //         }
 592:sieve_extend.c ****         //     }
 593:sieve_extend.c **** 
 594:sieve_extend.c ****         // }
 595:sieve_extend.c ****     }
 596:sieve_extend.c **** }
GAS LISTING /tmp/cc7rm34x.s 			page 13


 597:sieve_extend.c **** 
 598:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 598 153 view -0
  91              		.cfi_startproc
 599:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 599 5 view .LVU1
 600:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
 601:sieve_extend.c **** 
 602:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 602 5 view .LVU2
 603:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 603 5 view .LVU3
  95              	# sieve_extend.c:598: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 598:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 598 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:602:     const counter_t source_word = wordindex(source_start);
 602:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 102              		.loc 1 602 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:598: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 598:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 598 153 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 109              		.loc 1 603 134 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:598: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 598:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 598 153 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:602:     const counter_t source_word = wordindex(source_start);
 602:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 116              		.loc 1 602 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 120              		.loc 1 603 134 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:598: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 598:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 598 153 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 126              		.loc 1 603 133 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 129              		.loc 1 603 167 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:598: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 598:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
GAS LISTING /tmp/cc7rm34x.s 			page 14


 132              		.loc 1 598 153 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 135              		.loc 1 603 133 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 138              		.loc 1 603 167 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:598: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 598:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 598 153 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 148              		.loc 1 603 167 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:598: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 598:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 598 153 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 157              		.loc 1 603 58 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 161              		.loc 1 603 112 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 164              		.loc 1 603 58 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
 165      D1
 166              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 167              		.loc 1 603 85 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:598: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 598:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 598 153 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:603:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 173              		.loc 1 603 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 604 5 is_stmt 1 view .LVU26
 177              	.LBB317:
 178              		.loc 1 604 10 view .LVU27
 179              		.loc 1 604 54 view .LVU28
 180              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/cc7rm34x.s 			page 15


 181              		.loc 1 604 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 605:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 605 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 604 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 192              		.loc 1 605 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 195              		.loc 1 605 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 604 90 is_stmt 1 discriminator 3 view .LVU34
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 604 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 604 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 605 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 604 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 209              		.loc 1 605 29 view .LVU39
 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 212              		.loc 1 605 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 604 90 is_stmt 1 view .LVU41
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 604 54 view .LVU42
 217              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 604 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 605 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/cc7rm34x.s 			page 16


 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 604 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 226              		.loc 1 605 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
 228              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 229              		.loc 1 605 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 604 90 is_stmt 1 view .LVU48
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 604 54 view .LVU49
 234              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 604 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 605 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 604 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 243              		.loc 1 605 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 604 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 249              		.loc 1 605 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 604 90 is_stmt 1 view .LVU56
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 604 54 view .LVU57
 254              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 604 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 605 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 604 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 263              		.loc 1 605 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/cc7rm34x.s 			page 17


 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 604 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 269              		.loc 1 605 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 604 90 is_stmt 1 view .LVU64
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 604 54 view .LVU65
 274              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 604 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 605 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 604 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 283              		.loc 1 605 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 604 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 289              		.loc 1 605 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 604 90 is_stmt 1 view .LVU72
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 604 54 view .LVU73
 294              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 295              		.loc 1 604 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 605 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 604 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 303              		.loc 1 605 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 604 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 309              		.loc 1 605 17 view .LVU79
GAS LISTING /tmp/cc7rm34x.s 			page 18


 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 604 90 is_stmt 1 view .LVU80
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 604 54 view .LVU81
 314              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 604 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 605 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 604 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 323              		.loc 1 605 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:605:         pattern |= (pattern << pattern_size);
 326              		.loc 1 605 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 604 90 is_stmt 1 view .LVU87
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 604 54 view .LVU88
 331              	# sieve_extend.c:604:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 604 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
 337              		.p2align 3
 338              	.L2:
 604:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 604 5 view .LVU90
 340              	.LBE317:
 606:sieve_extend.c **** 
 607:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 607 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:607:     const counter_t destination_start = source_start + size;
 343              		.loc 1 607 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 608:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 608 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:609:     counter_t destination_stop_word = wordindex(destination_stop);
 609:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 609 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
GAS LISTING /tmp/cc7rm34x.s 			page 19


 350              	# sieve_extend.c:608:     counter_t destination_start_word = wordindex(destination_start);
 608:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 608 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 608:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 608 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 609 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:609:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 609 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 610:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 610 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 610 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:610:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 610 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 611:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 612:sieve_extend.c ****         return;
 613:sieve_extend.c ****     }
 614:sieve_extend.c **** 
 615:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
 376              		.loc 1 615 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:615:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 378              		.loc 1 615 38 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:618:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 616:sieve_extend.c **** 
 617:sieve_extend.c ****     // TODO: refactor according to smallstep
 618:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 618 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:615:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 615:sieve_extend.c **** 
 384              		.loc 1 615 38 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 618 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:618:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 618 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
GAS LISTING /tmp/cc7rm34x.s 			page 20


 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.140,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 619:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 619 5 is_stmt 1 view .LVU108
 620:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 620 5 view .LVU109
 621:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 621 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:621:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 621 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:620:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 620:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 620 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:621:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 621 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 622:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 622 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:619:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 619:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 619 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:620:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 620:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 620 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 620:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 620 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.141,
 421              	# sieve_extend.c:622:     destination_start_word++;
 422              		.loc 1 622 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 425              	.LBB318:
 623:sieve_extend.c ****     
 624:sieve_extend.c ****     //#pragma GCC unroll 16
 625:sieve_extend.c ****     #pragma GCC ivdep
 626:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 426              		.loc 1 626 10 is_stmt 1 view .LVU119
 427              		.loc 1 626 25 view .LVU120
 428 0193 4D8D6901 		lea	r13, 1[r9]	# niters.139,
 429 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 430 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 431              	.LBE318:
 432              	# sieve_extend.c:619:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
GAS LISTING /tmp/cc7rm34x.s 			page 21


 619:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 433              		.loc 1 619 31 is_stmt 0 view .LVU121
 434 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 435              	.LVL26:
 619:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 436              		.loc 1 619 31 view .LVU122
 437 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 438 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 439 01aa 0F860505 		jbe	.L11	#,
 439      0000
 440 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.141
 441 01b3 0F84F404 		je	.L12	#,
 441      0000
 442              	.LBB319:
 627:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 443              		.loc 1 627 9 is_stmt 1 view .LVU123
 444              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 445              		.loc 1 627 72 is_stmt 0 view .LVU124
 446 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 447 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 448              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 449              		.loc 1 627 55 view .LVU125
 450 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 450      F0
 451              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 452              		.loc 1 627 127 view .LVU126
 453 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 453      F8
 454              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 455              		.loc 1 627 116 view .LVU127
 456 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 457 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 458              		.loc 1 626 40 is_stmt 1 view .LVU128
 459              	.LVL27:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 460              		.loc 1 626 25 view .LVU129
 461 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.141,
 462              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 463              		.loc 1 626 40 is_stmt 0 view .LVU130
 464 01d4 41BE0100 		mov	r14d, 1	# i,
 464      0000
 465 01da 7452     		je	.L7	#,
 466              		.loc 1 627 9 is_stmt 1 view .LVU131
 467              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 468              		.loc 1 627 81 is_stmt 0 view .LVU132
 469 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 470              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 471              		.loc 1 627 72 view .LVU133
 472 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 473              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 474              		.loc 1 627 99 view .LVU134
 475 01e3 4183E63F 		and	r14d, 63	# _328,
 476              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 477              		.loc 1 627 72 view .LVU135
 478 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
GAS LISTING /tmp/cc7rm34x.s 			page 22


 479              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 480              		.loc 1 627 127 view .LVU136
 481 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 481      F0
 482              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 483              		.loc 1 627 55 view .LVU137
 484 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 484      F8
 485              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 486              		.loc 1 627 116 view .LVU138
 487 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 488 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 488      10
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 489              		.loc 1 626 40 is_stmt 1 view .LVU139
 490              	.LVL28:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 491              		.loc 1 626 25 view .LVU140
 492 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.141,
 493              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 494              		.loc 1 626 40 is_stmt 0 view .LVU141
 495 0200 41BE0200 		mov	r14d, 2	# i,
 495      0000
 496 0206 7526     		jne	.L7	#,
 497              		.loc 1 627 9 is_stmt 1 view .LVU142
 498              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 499              		.loc 1 627 81 is_stmt 0 view .LVU143
 500 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 501              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 502              		.loc 1 627 72 view .LVU144
 503 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 504              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 505              		.loc 1 627 99 view .LVU145
 506 020f 4183E63F 		and	r14d, 63	# _104,
 507              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 508              		.loc 1 627 72 view .LVU146
 509 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 510              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 511              		.loc 1 627 127 view .LVU147
 512 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 512      F0
 513              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 514              		.loc 1 627 55 view .LVU148
 515 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 515      F8
 516              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 517              		.loc 1 627 116 view .LVU149
 518 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 519 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 519      18
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 520              		.loc 1 626 40 is_stmt 1 view .LVU150
 521              	.LVL29:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 522              		.loc 1 626 25 view .LVU151
 523              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
GAS LISTING /tmp/cc7rm34x.s 			page 23


 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 524              		.loc 1 626 40 is_stmt 0 view .LVU152
 525 0228 41BE0300 		mov	r14d, 3	# i,
 525      0000
 526              	.LVL30:
 527              	.L7:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 528              		.loc 1 626 40 view .LVU153
 529 022e 4929F5   		sub	r13, rsi	# niters.142, prolog_loop_niters.141
 530 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 531 0234 4D89EB   		mov	r11, r13	# bnd.143, niters.142
 532 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 532      DE
 533 023c 49C1EB03 		shr	r11, 3	# bnd.143,
 534 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.161,
 535 0244 49C1E306 		sal	r11, 6	# tmp391,
 536 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 536      CB
 537 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 537      E0
 538 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 539 0256 4183E340 		and	r11d, 64	# tmp391,
 540 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.146, tmp382,
 540      00000000 
 541 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 541      7424F8
 542 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 542      D4
 543 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 543      6C24F4
 544 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 544      6424FC
 545 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 545      00000000 
 546 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 546      00000000 
 547 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 547      00000000 
 548 0294 0F849600 		je	.L9	#,
 548      0000
 549              	.LVL31:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 550              		.loc 1 626 40 view .LVU154
 551 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.146, vect_vec_iv_.146
 552 029e 4883C640 		add	rsi, 64	# ivtmp.161,
 553              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 554              		.loc 1 627 81 view .LVU155
 555 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 556 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 556      F0
 557              		.loc 1 627 9 is_stmt 1 view .LVU156
 558              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 559              		.loc 1 627 81 is_stmt 0 view .LVU157
 560 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.146, vect_vec_iv_.146,
 560      C220
 561 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.146, vect_vec_iv_.146,
 561      DA31
GAS LISTING /tmp/cc7rm34x.s 			page 24


 562 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 562      D8
 563 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 563      DBD8
 564 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 565 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.148, vect_cst__146, tmp542
 565      E1
 566              	.LVL32:
 567              		.loc 1 627 81 view .LVU158
 568 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 569              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 570              		.loc 1 627 99 view .LVU159
 571 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.150, vect__47.149, tmp498
 571      C5
 572              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 573              		.loc 1 627 72 view .LVU160
 574 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.151, vect_cst__152, vect__48.150
 575              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 576              		.loc 1 627 116 view .LVU161
 577 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.150
 577      D8
 578 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.151
 578      D7
 579 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 579      CB
 580 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 580      DA
 581 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.151
 581      F901
 582 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 582      E1
 583 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.150
 583      C001
 584 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.152, tmp554
 584      F9
 585 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.154, tmp557
 585      D8
 586 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 586      D7
 587 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 587      DB
 588              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 589              		.loc 1 627 44 view .LVU162
 590 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.156
 590      C0
 591              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 592              		.loc 1 627 116 view .LVU163
 593 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 593      CB
 594              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 595              		.loc 1 627 44 view .LVU164
 596 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.156
 596      E0
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 597              		.loc 1 626 40 is_stmt 1 view .LVU165
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 598              		.loc 1 626 25 view .LVU166
GAS LISTING /tmp/cc7rm34x.s 			page 25


 599 0320 4C39FE   		cmp	rsi, r15	# ivtmp.161, _344
 600 0323 0F841201 		je	.L37	#,
 600      0000
 601 0329 0F1F8000 		.p2align 4
 601      000000
 602              		.p2align 3
 603              	.L9:
 604              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 605              		.loc 1 627 81 is_stmt 0 discriminator 3 view .LVU167
 606 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 607 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 607      E0
 608              		.loc 1 627 9 is_stmt 1 discriminator 3 view .LVU168
 609              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 610              		.loc 1 627 81 is_stmt 0 discriminator 3 view .LVU169
 611 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.146, vect_vec_iv_.146,
 611      F920
 612 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.146, vect_vec_iv_.146,
 612      F131
 613 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 613      D7D8
 614 034b 4883EE80 		sub	rsi, -128	# ivtmp.161,
 615 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 615      C6D8
 616 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 617 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.148, vect_cst__146, tmp400
 617      DB
 618 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 619              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 620              		.loc 1 627 99 discriminator 3 view .LVU170
 621 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.150, vect__47.149, tmp498
 621      FD
 622              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 623              		.loc 1 627 72 discriminator 3 view .LVU171
 624 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.151, vect_cst__152, vect__48.150
 624      CF
 625              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 626              		.loc 1 627 116 discriminator 3 view .LVU172
 627 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.150
 627      C7
 628 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.151
 628      F1
 629 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 629      D8
 630 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 630      D6
 631 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.151
 631      C901
 632 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 633 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.150
 633      FF01
 634 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.152, tmp412
 634      C9
 635 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.154, tmp415
 635      D7
 636 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 636      F1
GAS LISTING /tmp/cc7rm34x.s 			page 26


 637 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 637      C2
 638              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 639              		.loc 1 627 44 discriminator 3 view .LVU173
 640 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.156
 640      80
 641              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 642              		.loc 1 627 81 discriminator 3 view .LVU174
 643 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 644              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 645              		.loc 1 627 116 discriminator 3 view .LVU175
 646 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 647              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 648              		.loc 1 627 81 discriminator 3 view .LVU176
 649 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.146, vect_vec_iv_.146,
 649      CB20
 650 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 650      C9D8
 651 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 651      F0
 652              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 653              		.loc 1 627 44 discriminator 3 view .LVU177
 654 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.156
 654      A0
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 655              		.loc 1 626 40 is_stmt 1 discriminator 3 view .LVU178
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 656              		.loc 1 626 25 discriminator 3 view .LVU179
 657              		.loc 1 627 9 discriminator 3 view .LVU180
 658              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 659              		.loc 1 627 81 is_stmt 0 discriminator 3 view .LVU181
 660 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.146, vect_vec_iv_.146,
 660      E331
 661 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 661      D8
 662 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 662      D7
 663 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.148, vect_cst__146, tmp517
 663      C2
 664 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 665              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 666              		.loc 1 627 99 discriminator 3 view .LVU182
 667 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.150, vect__47.149, tmp498
 667      CD
 668              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 669              		.loc 1 627 72 discriminator 3 view .LVU183
 670 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.151, vect_cst__152, vect__48.150
 670      E1
 671              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 672              		.loc 1 627 116 discriminator 3 view .LVU184
 673 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.150
 673      F9
 674 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.151
 674      DC
 675 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 675      D7
 676 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
GAS LISTING /tmp/cc7rm34x.s 			page 27


 676      CB
 677 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.151
 677      E301
 678 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 678      C2
 679 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.150
 679      C901
 680 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.152, tmp529
 680      E3
 681 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.154, tmp532
 681      C9
 682 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 682      DC
 683 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 683      F9
 684              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 685              		.loc 1 627 44 discriminator 3 view .LVU185
 686 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.156
 686      C0
 687              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 688              		.loc 1 627 116 discriminator 3 view .LVU186
 689 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 689      D7
 690              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 691              		.loc 1 627 44 discriminator 3 view .LVU187
 692 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.156
 692      E0
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 693              		.loc 1 626 40 is_stmt 1 discriminator 3 view .LVU188
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 694              		.loc 1 626 25 discriminator 3 view .LVU189
 695 0432 4C39FE   		cmp	rsi, r15	# ivtmp.161, _344
 696 0435 0F85F5FE 		jne	.L9	#,
 696      FFFF
 697              	.L37:
 698 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.144, niters.142
 699 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.144,
 700 0442 4901F6   		add	r14, rsi	# tmp.145, niters_vector_mult_vf.144
 701 0445 4939F5   		cmp	r13, rsi	# niters.142, niters_vector_mult_vf.144
 702 0448 0F845A02 		je	.L50	#,
 702      0000
 703 044e C5F877   		vzeroupper
 704              	.L6:
 705              	.LVL33:
 706              		.loc 1 627 9 view .LVU190
 707              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 708              		.loc 1 627 81 is_stmt 0 view .LVU191
 709 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 710              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 711              		.loc 1 627 72 view .LVU192
 712 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 713              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 714              		.loc 1 627 81 view .LVU193
 715 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.145
 716              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 717              		.loc 1 627 17 view .LVU194
 718 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
GAS LISTING /tmp/cc7rm34x.s 			page 28


 719              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 720              		.loc 1 627 81 view .LVU195
 721 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 722              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 723              		.loc 1 627 99 view .LVU196
 724 0462 4183E73F 		and	r15d, 63	# _49,
 725              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 726              		.loc 1 627 127 view .LVU197
 727 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 727      F0
 728              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 729              		.loc 1 627 72 view .LVU198
 730 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 731              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 732              		.loc 1 626 40 view .LVU199
 733 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 734              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 735              		.loc 1 627 55 view .LVU200
 736 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 736      E8
 737              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 738              		.loc 1 627 116 view .LVU201
 739 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 740 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 741              		.loc 1 626 40 is_stmt 1 view .LVU202
 742              	.LVL34:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 743              		.loc 1 626 25 view .LVU203
 744              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 745              		.loc 1 626 5 is_stmt 0 view .LVU204
 746 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 747 0481 0F87F101 		ja	.L10	#,
 747      0000
 748              		.loc 1 627 9 is_stmt 1 view .LVU205
 749              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 750              		.loc 1 627 81 is_stmt 0 view .LVU206
 751 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 752              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 753              		.loc 1 627 72 view .LVU207
 754 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 755              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 756              		.loc 1 627 81 view .LVU208
 757 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 758              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 759              		.loc 1 627 17 view .LVU209
 760 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 761              	.LVL35:
 762              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 763              		.loc 1 627 81 view .LVU210
 764 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 765              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 766              		.loc 1 627 99 view .LVU211
 767 0497 4183E33F 		and	r11d, 63	# _83,
 768              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
GAS LISTING /tmp/cc7rm34x.s 			page 29


 769              		.loc 1 627 72 view .LVU212
 770 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 771              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 772              		.loc 1 627 127 view .LVU213
 773 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 773      D8
 774              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 775              		.loc 1 627 55 view .LVU214
 776 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 776      F0
 777              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 778              		.loc 1 627 116 view .LVU215
 779 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 780 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 781              		.loc 1 626 40 is_stmt 1 view .LVU216
 782 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 783              	.LVL36:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 784              		.loc 1 626 25 view .LVU217
 785              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 786              		.loc 1 626 5 is_stmt 0 view .LVU218
 787 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 788 04b6 0F82BC01 		jb	.L10	#,
 788      0000
 789              		.loc 1 627 9 is_stmt 1 view .LVU219
 790              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 791              		.loc 1 627 81 is_stmt 0 view .LVU220
 792 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 793              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 794              		.loc 1 627 72 view .LVU221
 795 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 796              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 797              		.loc 1 627 81 view .LVU222
 798 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 799              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 800              		.loc 1 627 17 view .LVU223
 801 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 802              	.LVL37:
 803              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 804              		.loc 1 627 81 view .LVU224
 805 04c8 01CE     		add	esi, ecx	# tmp433, shift
 806              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 807              		.loc 1 627 99 view .LVU225
 808 04ca 83E63F   		and	esi, 63	# _190,
 809              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 810              		.loc 1 627 72 view .LVU226
 811 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 812              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 813              		.loc 1 627 127 view .LVU227
 814 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 814      F0
 815              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 816              		.loc 1 627 55 view .LVU228
 817 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 817      D8
GAS LISTING /tmp/cc7rm34x.s 			page 30


 818              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 819              		.loc 1 627 116 view .LVU229
 820 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 821 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 822              		.loc 1 626 40 is_stmt 1 view .LVU230
 823 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 824              	.LVL38:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 825              		.loc 1 626 25 view .LVU231
 826              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 827              		.loc 1 626 5 is_stmt 0 view .LVU232
 828 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 829 04e8 0F828A01 		jb	.L10	#,
 829      0000
 830              		.loc 1 627 9 is_stmt 1 view .LVU233
 831              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 832              		.loc 1 627 81 is_stmt 0 view .LVU234
 833 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 834              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 835              		.loc 1 627 72 view .LVU235
 836 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 837              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 838              		.loc 1 627 81 view .LVU236
 839 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 840              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 841              		.loc 1 627 17 view .LVU237
 842 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 843              	.LVL39:
 844              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 845              		.loc 1 627 81 view .LVU238
 846 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 847              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 848              		.loc 1 627 99 view .LVU239
 849 04fe 4183E33F 		and	r11d, 63	# _205,
 850              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 851              		.loc 1 627 127 view .LVU240
 852 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 852      F0
 853              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 854              		.loc 1 627 72 view .LVU241
 855 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 856              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 857              		.loc 1 627 55 view .LVU242
 858 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 858      E8
 859              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 860              		.loc 1 627 116 view .LVU243
 861 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 862 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 863              		.loc 1 626 40 is_stmt 1 view .LVU244
 864 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 865              	.LVL40:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 866              		.loc 1 626 25 view .LVU245
GAS LISTING /tmp/cc7rm34x.s 			page 31


 867              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 868              		.loc 1 626 5 is_stmt 0 view .LVU246
 869 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 870 051d 0F825501 		jb	.L10	#,
 870      0000
 871              		.loc 1 627 9 is_stmt 1 view .LVU247
 872              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 873              		.loc 1 627 81 is_stmt 0 view .LVU248
 874 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 875              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 876              		.loc 1 627 72 view .LVU249
 877 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 878              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 879              		.loc 1 627 81 view .LVU250
 880 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 881              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 882              		.loc 1 627 17 view .LVU251
 883 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 884              	.LVL41:
 885              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 886              		.loc 1 627 81 view .LVU252
 887 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 888              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 889              		.loc 1 627 99 view .LVU253
 890 0533 4183E33F 		and	r11d, 63	# _220,
 891              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 892              		.loc 1 627 127 view .LVU254
 893 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 893      F0
 894              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 895              		.loc 1 627 72 view .LVU255
 896 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 897              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 898              		.loc 1 627 55 view .LVU256
 899 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 899      E8
 900              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 901              		.loc 1 627 116 view .LVU257
 902 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 903 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 904              		.loc 1 626 40 is_stmt 1 view .LVU258
 905 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 906              	.LVL42:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 907              		.loc 1 626 25 view .LVU259
 908              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 909              		.loc 1 626 5 is_stmt 0 view .LVU260
 910 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 911 0552 0F822001 		jb	.L10	#,
 911      0000
 912              		.loc 1 627 9 is_stmt 1 view .LVU261
 913              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 914              		.loc 1 627 81 is_stmt 0 view .LVU262
 915 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
GAS LISTING /tmp/cc7rm34x.s 			page 32


 916              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 917              		.loc 1 627 72 view .LVU263
 918 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 919              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 920              		.loc 1 627 81 view .LVU264
 921 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 922              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 923              		.loc 1 627 17 view .LVU265
 924 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 925              	.LVL43:
 926              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 927              		.loc 1 627 81 view .LVU266
 928 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 929              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 930              		.loc 1 627 99 view .LVU267
 931 0568 4183E33F 		and	r11d, 63	# _235,
 932              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 933              		.loc 1 627 127 view .LVU268
 934 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 934      F0
 935              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 936              		.loc 1 627 72 view .LVU269
 937 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 938              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 939              		.loc 1 627 55 view .LVU270
 940 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 940      E8
 941              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 942              		.loc 1 627 116 view .LVU271
 943 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 944 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 945              		.loc 1 626 40 is_stmt 1 view .LVU272
 946 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 947              	.LVL44:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 948              		.loc 1 626 25 view .LVU273
 949              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 950              		.loc 1 626 5 is_stmt 0 view .LVU274
 951 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 952 0587 0F82EB00 		jb	.L10	#,
 952      0000
 953              		.loc 1 627 9 is_stmt 1 view .LVU275
 954              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 955              		.loc 1 627 81 is_stmt 0 view .LVU276
 956 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 957              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 958              		.loc 1 627 72 view .LVU277
 959 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 960              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 961              		.loc 1 627 81 view .LVU278
 962 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 963              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 964              		.loc 1 627 17 view .LVU279
 965 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 966              	.LVL45:
GAS LISTING /tmp/cc7rm34x.s 			page 33


 967              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 968              		.loc 1 627 81 view .LVU280
 969 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 970              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 971              		.loc 1 627 99 view .LVU281
 972 059d 4183E33F 		and	r11d, 63	# _250,
 973              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 974              		.loc 1 627 127 view .LVU282
 975 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 975      F0
 976              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 977              		.loc 1 627 72 view .LVU283
 978 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 979              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 980              		.loc 1 627 55 view .LVU284
 981 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 981      E8
 982              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 983              		.loc 1 627 116 view .LVU285
 984 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 985 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 986              		.loc 1 626 40 is_stmt 1 view .LVU286
 987 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 988              	.LVL46:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 989              		.loc 1 626 25 view .LVU287
 990              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 991              		.loc 1 626 5 is_stmt 0 view .LVU288
 992 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 993 05bc 0F82B600 		jb	.L10	#,
 993      0000
 994              		.loc 1 627 9 is_stmt 1 view .LVU289
 995              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 996              		.loc 1 627 81 is_stmt 0 view .LVU290
 997 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 998              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 999              		.loc 1 627 72 view .LVU291
 1000 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1001              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1002              		.loc 1 627 81 view .LVU292
 1003 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1004              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1005              		.loc 1 627 17 view .LVU293
 1006 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1007              	.LVL47:
 1008              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1009              		.loc 1 627 81 view .LVU294
 1010 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1011              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1012              		.loc 1 627 99 view .LVU295
 1013 05d2 4183E33F 		and	r11d, 63	# _265,
 1014              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1015              		.loc 1 627 127 view .LVU296
 1016 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1016      F0
GAS LISTING /tmp/cc7rm34x.s 			page 34


 1017              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1018              		.loc 1 627 72 view .LVU297
 1019 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1020              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1021              		.loc 1 627 55 view .LVU298
 1022 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1022      E8
 1023              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1024              		.loc 1 627 116 view .LVU299
 1025 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1026 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1027              		.loc 1 626 40 is_stmt 1 view .LVU300
 1028 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1029              	.LVL48:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1030              		.loc 1 626 25 view .LVU301
 1031              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1032              		.loc 1 626 5 is_stmt 0 view .LVU302
 1033 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1034 05f1 0F828100 		jb	.L10	#,
 1034      0000
 1035              		.loc 1 627 9 is_stmt 1 view .LVU303
 1036              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1037              		.loc 1 627 81 is_stmt 0 view .LVU304
 1038 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1039              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1040              		.loc 1 627 72 view .LVU305
 1041 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1042              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1043              		.loc 1 627 81 view .LVU306
 1044 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1045              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1046              		.loc 1 627 17 view .LVU307
 1047 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1048              	.LVL49:
 1049              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1050              		.loc 1 627 81 view .LVU308
 1051 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1052              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1053              		.loc 1 627 99 view .LVU309
 1054 0607 4183E33F 		and	r11d, 63	# _280,
 1055              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1056              		.loc 1 627 127 view .LVU310
 1057 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1057      F0
 1058              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1059              		.loc 1 627 72 view .LVU311
 1060 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1061              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1062              		.loc 1 627 55 view .LVU312
 1063 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1063      E8
 1064              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1065              		.loc 1 627 116 view .LVU313
 1066 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
GAS LISTING /tmp/cc7rm34x.s 			page 35


 1067 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1068              		.loc 1 626 40 is_stmt 1 view .LVU314
 1069 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1070              	.LVL50:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1071              		.loc 1 626 25 view .LVU315
 1072              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1073              		.loc 1 626 5 is_stmt 0 view .LVU316
 1074 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1075 0626 7250     		jb	.L10	#,
 1076              		.loc 1 627 9 is_stmt 1 view .LVU317
 1077              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1078              		.loc 1 627 81 is_stmt 0 view .LVU318
 1079 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1080              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1081              		.loc 1 627 72 view .LVU319
 1082 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1083              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1084              		.loc 1 627 81 view .LVU320
 1085 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1086              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1087              		.loc 1 626 40 view .LVU321
 1088 0632 4983C60A 		add	r14, 10	# i,
 1089              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1090              		.loc 1 627 17 view .LVU322
 1091 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1092              	.LVL51:
 1093              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1094              		.loc 1 627 81 view .LVU323
 1095 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1096              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1097              		.loc 1 627 99 view .LVU324
 1098 063c 4183E33F 		and	r11d, 63	# _295,
 1099              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1100              		.loc 1 627 127 view .LVU325
 1101 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1101      F0
 1102              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1103              		.loc 1 627 72 view .LVU326
 1104 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1105              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1106              		.loc 1 627 55 view .LVU327
 1107 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1107      E8
 1108              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1109              		.loc 1 627 116 view .LVU328
 1110 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1111              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1112              		.loc 1 626 5 view .LVU329
 1113 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1114              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1115              		.loc 1 627 116 view .LVU330
 1116 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
GAS LISTING /tmp/cc7rm34x.s 			page 36


 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1117              		.loc 1 626 40 is_stmt 1 view .LVU331
 1118              	.LVL52:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1119              		.loc 1 626 25 view .LVU332
 1120              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1121              		.loc 1 626 5 is_stmt 0 view .LVU333
 1122 0657 721F     		jb	.L10	#,
 1123              		.loc 1 627 9 is_stmt 1 view .LVU334
 1124              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1125              		.loc 1 627 81 is_stmt 0 view .LVU335
 1126 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1127              	.LVL53:
 1128              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1129              		.loc 1 627 17 view .LVU336
 1130 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1131              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1132              		.loc 1 627 81 view .LVU337
 1133 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1134              	.LVL54:
 1135              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1136              		.loc 1 627 99 view .LVU338
 1137 0662 83E13F   		and	ecx, 63	# _108,
 1138              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1139              		.loc 1 627 72 view .LVU339
 1140 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1141              	.LVL55:
 1142              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1143              		.loc 1 627 55 view .LVU340
 1144 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1144      D0
 1145              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1146              		.loc 1 627 127 view .LVU341
 1147 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1147      C0
 1148              	.LVL56:
 1149              	# sieve_extend.c:627:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1150              		.loc 1 627 116 view .LVU342
 1151 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1152 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1153              		.loc 1 626 40 is_stmt 1 view .LVU343
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1154              		.loc 1 626 25 view .LVU344
 1155              	.L10:
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1156              		.loc 1 626 25 is_stmt 0 view .LVU345
 1157              	.LBE319:
 628:sieve_extend.c ****     }
 629:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1158              		.loc 1 629 5 is_stmt 1 view .LVU346
 1159              	# sieve_extend.c:629:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1160              		.loc 1 629 37 is_stmt 0 view .LVU347
 1161 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1162              	# sieve_extend.c:630: }
 630:sieve_extend.c **** }
GAS LISTING /tmp/cc7rm34x.s 			page 37


 1163              		.loc 1 630 1 view .LVU348
 1164 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1165 0680 5B       		pop	rbx	#
 1166 0681 415C     		pop	r12	#
 1167              	.LVL57:
 1168              		.loc 1 630 1 view .LVU349
 1169 0683 415D     		pop	r13	#
 1170 0685 415E     		pop	r14	#
 1171 0687 415F     		pop	r15	#
 1172 0689 5D       		pop	rbp	#
 1173              		.cfi_remember_state
 1174              		.cfi_def_cfa 7, 8
 1175 068a C3       		ret	
 1176              	.LVL58:
 1177 068b 0F1F4400 		.p2align 4,,7
 1177      00
 1178              		.p2align 3
 1179              	.L49:
 1180              		.cfi_restore_state
 611:sieve_extend.c ****         return;
 1181              		.loc 1 611 9 is_stmt 1 view .LVU350
 1182              	# sieve_extend.c:611:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 611:sieve_extend.c ****         return;
 1183              		.loc 1 611 86 is_stmt 0 view .LVU351
 1184 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1185              	# sieve_extend.c:611:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 611:sieve_extend.c ****         return;
 1186              		.loc 1 611 42 view .LVU352
 1187 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1188 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 612:sieve_extend.c ****     }
 1189              		.loc 1 612 9 is_stmt 1 view .LVU353
 1190              	# sieve_extend.c:630: }
 1191              		.loc 1 630 1 is_stmt 0 view .LVU354
 1192 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1193 069d 5B       		pop	rbx	#
 1194 069e 415C     		pop	r12	#
 1195              	.LVL59:
 1196              		.loc 1 630 1 view .LVU355
 1197 06a0 415D     		pop	r13	#
 1198 06a2 415E     		pop	r14	#
 1199 06a4 415F     		pop	r15	#
 1200 06a6 5D       		pop	rbp	#
 1201              		.cfi_remember_state
 1202              		.cfi_def_cfa 7, 8
 1203 06a7 C3       		ret	
 1204              	.LVL60:
 1205              	.L50:
 1206              		.cfi_restore_state
 1207              		.loc 1 630 1 view .LVU356
 1208 06a8 C5F877   		vzeroupper
 1209 06ab EBCB     		jmp	.L10	#
 1210              	.LVL61:
 1211              	.L12:
 1212              	.LBB320:
 1213              	# sieve_extend.c:626:     for (counter_t i=0; i<=loop_range; ++i ) {
 626:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/cc7rm34x.s 			page 38


 1214              		.loc 1 626 20 view .LVU357
 1215 06ad 4531F6   		xor	r14d, r14d	# i
 1216 06b0 E979FBFF 		jmp	.L7	#
 1216      FF
 1217              	.L11:
 1218 06b5 4531F6   		xor	r14d, r14d	# tmp.145
 1219              		.p2align 4,,2
 1220 06b8 E994FDFF 		jmp	.L6	#
 1220      FF
 1221              	.LBE320:
 1222              		.cfi_endproc
 1223              	.LFE68:
 1225 06bd 0F1F00   		.p2align 4
 1227              	extendSieve_shiftright_ivdep:
 1228              	.LVL62:
 1229              	.LFB73:
 631:sieve_extend.c **** 
 632:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 633:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 634:sieve_extend.c **** 
 635:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 636:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 637:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 638:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 639:sieve_extend.c ****     
 640:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 641:sieve_extend.c **** 
 642:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 643:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 644:sieve_extend.c ****         copy_word += size;
 645:sieve_extend.c ****     }
 646:sieve_extend.c **** 
 647:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 648:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 649:sieve_extend.c ****         source_word++;
 650:sieve_extend.c ****         copy_word++;
 651:sieve_extend.c ****     }
 652:sieve_extend.c **** 
 653:sieve_extend.c **** }
 654:sieve_extend.c **** 
 655:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 656:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 657:sieve_extend.c **** 
 658:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 659:sieve_extend.c **** {
 660:sieve_extend.c ****     int i = 0;
 661:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 662:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 663:sieve_extend.c ****     {
 664:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 665:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 666:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 667:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 668:sieve_extend.c ****     }
 669:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 670:sieve_extend.c ****     {
 671:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
GAS LISTING /tmp/cc7rm34x.s 			page 39


 672:sieve_extend.c ****     }    
 673:sieve_extend.c **** }
 674:sieve_extend.c **** 
 675:sieve_extend.c **** #define forward_distance 3
 676:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 677:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 678:sieve_extend.c ****    
 679:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 680:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 681:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 682:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 683:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 684:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 685:sieve_extend.c **** 
 686:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 687:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 688:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 689:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 690:sieve_extend.c ****         return; // rapid exit for one word variant
 691:sieve_extend.c ****     }
 692:sieve_extend.c **** 
 693:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 694:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 695:sieve_extend.c ****                                 & keepmask(copy_start);
 696:sieve_extend.c **** 
 697:sieve_extend.c ****     copy_word++;
 698:sieve_extend.c **** 
 699:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 700:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 701:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 702:sieve_extend.c ****         
 703:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 704:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 705:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 706:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 707:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 708:sieve_extend.c ****         counter_t size_word_ptr   = dest_ptr - copy_ptr;
 709:sieve_extend.c **** 
 710:sieve_extend.c ****         #pragma GCC ivdep 
 711:sieve_extend.c ****         for (counter_t i = 0; (i+forward_distance) < size_word_ptr; i+=forward_distance, copy_ptr+=
 712:sieve_extend.c ****             #pragma GCC ivdep
 713:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 714:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 715:sieve_extend.c ****             #pragma GCC ivdep
 716:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 717:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 718:sieve_extend.c ****         }
 719:sieve_extend.c **** 
 720:sieve_extend.c ****         size_word_ptr = dest_ptr - copy_ptr;
 721:sieve_extend.c ****         #pragma GCC ivdep 
 722:sieve_extend.c ****         for (counter_t i=0; i <= size_word_ptr; i++)
 723:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 724:sieve_extend.c **** 
 725:sieve_extend.c ****         // #pragma GCC ivdep
 726:sieve_extend.c ****         // for (; i <= size_word; i++) 
 727:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 728:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 40


 729:sieve_extend.c ****     else {
 730:sieve_extend.c ****         register counter_t i = 0;
 731:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 732:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 733:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 734:sieve_extend.c ****         counter_t size_word_ptr   = dest_ptr - copy_ptr;
 735:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 736:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 737:sieve_extend.c ****     }
 738:sieve_extend.c **** 
 739:sieve_extend.c ****     // for (; i <= size_word; i++) 
 740:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 741:sieve_extend.c **** 
 742:sieve_extend.c ****     // for (; i <= size_word; i++) 
 743:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 744:sieve_extend.c **** 
 745:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 746:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 747:sieve_extend.c **** }
 748:sieve_extend.c **** 
 749:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 750:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 751:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 752:sieve_extend.c ****     counter_t distance = 0;
 753:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 754:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 755:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 756:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 757:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 758:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 759:sieve_extend.c ****         copy_word += 2;
 760:sieve_extend.c ****         source_word += 2;
 761:sieve_extend.c ****         distance += 2;
 762:sieve_extend.c ****     }
 763:sieve_extend.c ****     return distance;
 764:sieve_extend.c **** }
 765:sieve_extend.c **** 
 766:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 767:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 768:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 769:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 770:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 771:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 772:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 773:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 774:sieve_extend.c **** //
 775:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 776:sieve_extend.c **** //    copy_ptr++;
 777:sieve_extend.c **** //    source_ptr++;
 778:sieve_extend.c **** //
 779:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 780:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 781:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 782:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 783:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 784:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 785:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
GAS LISTING /tmp/cc7rm34x.s 			page 41


 786:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 787:sieve_extend.c **** //
 788:sieve_extend.c **** //        copy_ptr+=3;
 789:sieve_extend.c **** //        source_ptr+=3;
 790:sieve_extend.c **** //    }
 791:sieve_extend.c **** //
 792:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 793:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 794:sieve_extend.c **** //        source_ptr++;
 795:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 796:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 797:sieve_extend.c **** //        copy_ptr++;
 798:sieve_extend.c **** //    }
 799:sieve_extend.c **** //
 800:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 801:sieve_extend.c **** //
 802:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 803:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 804:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 805:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 806:sieve_extend.c **** //         copy_ptr += size;
 807:sieve_extend.c **** //     }
 808:sieve_extend.c **** //
 809:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 810:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 811:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 812:sieve_extend.c **** //        copy_ptr++;
 813:sieve_extend.c **** //        source_ptr++;
 814:sieve_extend.c **** //    }
 815:sieve_extend.c **** //
 816:sieve_extend.c **** //}
 817:sieve_extend.c **** 
 818:sieve_extend.c **** 
 819:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 1230              		.loc 1 819 149 is_stmt 1 view -0
 1231              		.cfi_startproc
 820:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1232              		.loc 1 820 5 view .LVU359
 821:sieve_extend.c ****    
 822:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1233              		.loc 1 822 5 view .LVU360
 1234              	# sieve_extend.c:819: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 819:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1235              		.loc 1 819 149 is_stmt 0 view .LVU361
 1236 06c0 55       		push	rbp	#
 1237              		.cfi_def_cfa_offset 16
 1238              		.cfi_offset 6, -16
 1239              	# sieve_extend.c:823:     const counter_t copy_start = source_start + size;
 823:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1240              		.loc 1 823 21 view .LVU362
 1241 06c1 4C8D0C16 		lea	r9, [rsi+rdx]	# copy_start,
 1242              	# sieve_extend.c:824:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 824:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1243              		.loc 1 824 67 view .LVU363
 1244 06c5 4889F0   		mov	rax, rsi	# _5, source_start
 1245              	# sieve_extend.c:819: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 819:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
GAS LISTING /tmp/cc7rm34x.s 			page 42


 1246              		.loc 1 819 149 view .LVU364
 1247 06c8 4889E5   		mov	rbp, rsp	#,
 1248              		.cfi_def_cfa_register 6
 1249              	# sieve_extend.c:824:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 1250              		.loc 1 824 39 view .LVU365
 1251 06cb 4D89CA   		mov	r10, r9	# _4, copy_start
 1252              	# sieve_extend.c:819: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 819:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1253              		.loc 1 819 149 view .LVU366
 1254 06ce 4157     		push	r15	#
 1255              	# sieve_extend.c:826:     register counter_t source_word = wordindex(source_start);
 825:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 826:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1256              		.loc 1 826 24 view .LVU367
 1257 06d0 48C1EE06 		shr	rsi, 6	# source_word,
 1258              	.LVL63:
 1259              	# sieve_extend.c:824:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 824:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1260              		.loc 1 824 39 view .LVU368
 1261 06d4 4183E23F 		and	r10d, 63	# _4,
 1262              	# sieve_extend.c:819: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 819:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1263              		.loc 1 819 149 view .LVU369
 1264 06d8 4156     		push	r14	#
 1265 06da 4C8D1CF5 		lea	r11, 0[0+rsi*8]	# _179,
 1265      00000000 
 1266              	# sieve_extend.c:824:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 824:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1267              		.loc 1 824 67 view .LVU370
 1268 06e2 83E03F   		and	eax, 63	# _5,
 1269              	.LVL64:
 1270              	# sieve_extend.c:819: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 819:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1271              		.loc 1 819 149 view .LVU371
 1272 06e5 4155     		push	r13	#
 1273              	# sieve_extend.c:827:     register counter_t copy_word = wordindex(copy_start);
 827:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1274              		.loc 1 827 24 view .LVU372
 1275 06e7 49C1E906 		shr	r9, 6	# copy_word,
 1276              		.cfi_offset 15, -24
 1277              		.cfi_offset 14, -32
 1278              		.cfi_offset 13, -40
 1279              	# sieve_extend.c:822:     const counter_t destination_stop_word = wordindex(destination_stop);
 822:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1280              		.loc 1 822 21 view .LVU373
 1281 06eb 4989CE   		mov	r14, rcx	# destination_stop_word, destination_stop
 1282              	# sieve_extend.c:819: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 819:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1283              		.loc 1 819 149 view .LVU374
 1284 06ee 4154     		push	r12	#
 1285 06f0 4E8D3C1F 		lea	r15, [rdi+r11]	# _180,
 1286 06f4 F7D1     		not	ecx	# tmp411
 1287              	.LVL65:
 819:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1288              		.loc 1 819 149 view .LVU375
 1289 06f6 53       		push	rbx	#
 1290              	# sieve_extend.c:822:     const counter_t destination_stop_word = wordindex(destination_stop);
GAS LISTING /tmp/cc7rm34x.s 			page 43


 822:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1291              		.loc 1 822 21 view .LVU376
 1292 06f7 49C1EE06 		shr	r14, 6	# destination_stop_word,
 1293              	.LVL66:
 823:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1294              		.loc 1 823 5 is_stmt 1 view .LVU377
 824:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1295              		.loc 1 824 5 view .LVU378
 825:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1296              		.loc 1 825 5 view .LVU379
 826:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1297              		.loc 1 826 5 view .LVU380
 1298              		.loc 1 827 5 view .LVU381
 828:sieve_extend.c **** 
 829:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 1299              		.loc 1 829 5 view .LVU382
 1300              		.cfi_offset 12, -48
 1301              		.cfi_offset 3, -56
 1302 06fb 4A8D1CCF 		lea	rbx, [rdi+r9*8]	# _177,
 1303              	# sieve_extend.c:819: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 819:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1304              		.loc 1 819 149 is_stmt 0 view .LVU383
 1305 06ff 4C8B23   		mov	r12, QWORD PTR [rbx]	# pretmp_178, *_177
 1306 0702 4883E4E0 		and	rsp, -32	#,
 1307 0706 4C895C24 		mov	QWORD PTR -24[rsp], r11	# %sfp, _179
 1307      E8
 1308              	# sieve_extend.c:824:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 824:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1309              		.loc 1 824 31 view .LVU384
 1310 070b 4D89D3   		mov	r11, r10	# shift, _4
 1311 070e 4929C3   		sub	r11, rax	# shift, _5
 1312              	.LVL67:
 1313              	# sieve_extend.c:825:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 825:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1314              		.loc 1 825 31 view .LVU385
 1315 0711 4883C040 		add	rax, 64	# tmp404,
 1316              	.LVL68:
 825:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1317              		.loc 1 825 31 view .LVU386
 1318 0715 C442A1F7 		shlx	r8, QWORD PTR [r15], r11	# tmp406, *_180, shift
 1318      07
 1319 071a 44895C24 		mov	DWORD PTR -4[rsp], r11d	# %sfp, shift
 1319      FC
 1320 071f 4C29D0   		sub	rax, r10	# shift_flipped, _4
 1321              	.LVL69:
 825:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1322              		.loc 1 825 31 view .LVU387
 1323 0722 C442FBF7 		shrx	r13, r12, rax	# tmp408, pretmp_178, shift_flipped
 1323      EC
 1324 0727 894424F8 		mov	DWORD PTR -8[rsp], eax	# %sfp, shift_flipped
 1325 072b 4D09E8   		or	r8, r13	# _186, tmp408
 1326              	# sieve_extend.c:829:     if (copy_word >= destination_stop_word) { 
 1327              		.loc 1 829 8 view .LVU388
 1328 072e 4D39CE   		cmp	r14, r9	# destination_stop_word, copy_word
 1329 0731 49C7C5FF 		mov	r13, -1	# tmp410,
 1329      FFFFFF
 1330 0738 C4C2F3F7 		shrx	rcx, r13, rcx	# _193, tmp410, tmp411
GAS LISTING /tmp/cc7rm34x.s 			page 44


 1330      CD
 1331 073d C442A9F7 		shlx	r10, r13, r10	# _189, tmp410, _4
 1331      D5
 1332              	.LVL70:
 1333              		.loc 1 829 8 view .LVU389
 1334 0742 48894C24 		mov	QWORD PTR -16[rsp], rcx	# %sfp, _193
 1334      F0
 1335 0747 0F86330B 		jbe	.L209	#,
 1335      0000
 830:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 831:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 832:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 833:sieve_extend.c ****         return; // rapid exit for one word variant
 834:sieve_extend.c ****     }
 835:sieve_extend.c **** 
 836:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 1336              		.loc 1 836 5 is_stmt 1 view .LVU390
 1337              	# sieve_extend.c:838:                                 & keepmask(copy_start);
 837:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 838:sieve_extend.c ****                                 & keepmask(copy_start);
 1338              		.loc 1 838 33 is_stmt 0 view .LVU391
 1339 074d 4D21D0   		and	r8, r10	# tmp417, _189
 1340              	# sieve_extend.c:840:     copy_word++;
 839:sieve_extend.c **** 
 840:sieve_extend.c ****     copy_word++;
 1341              		.loc 1 840 14 view .LVU392
 1342 0750 498D4901 		lea	rcx, 1[r9]	# copy_word,
 1343              	# sieve_extend.c:836:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 836:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1344              		.loc 1 836 25 view .LVU393
 1345 0754 4D09E0   		or	r8, r12	# tmp418, pretmp_178
 1346              	# sieve_extend.c:844:     if (size >= WORD_SIZE_counter) {
 841:sieve_extend.c **** 
 842:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 843:sieve_extend.c **** 
 844:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1347              		.loc 1 844 8 view .LVU394
 1348 0757 4883FA3F 		cmp	rdx, 63	# size,
 1349              	# sieve_extend.c:836:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 836:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1350              		.loc 1 836 25 view .LVU395
 1351 075b 4C8903   		mov	QWORD PTR [rbx], r8	# *_177, tmp418
 840:sieve_extend.c **** 
 1352              		.loc 1 840 5 is_stmt 1 view .LVU396
 1353              	.LVL71:
 842:sieve_extend.c **** 
 1354              		.loc 1 842 5 view .LVU397
 1355              		.loc 1 844 5 view .LVU398
 1356              	# sieve_extend.c:844:     if (size >= WORD_SIZE_counter) {
 1357              		.loc 1 844 8 is_stmt 0 view .LVU399
 1358 075e 0F876404 		ja	.L210	#,
 1358      0000
 845:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 846:sieve_extend.c **** 
 847:sieve_extend.c ****         //#pragma GCC unroll 16
 848:sieve_extend.c ****         #pragma GCC ivdep
 849:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
GAS LISTING /tmp/cc7rm34x.s 			page 45


 850:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 851:sieve_extend.c ****         }
 852:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 853:sieve_extend.c ****     }
 854:sieve_extend.c **** 
 855:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1359              		.loc 1 855 12 is_stmt 1 discriminator 1 view .LVU400
 1360              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1361              		.loc 1 855 5 is_stmt 0 discriminator 1 view .LVU401
 1362 0764 4939CE   		cmp	r14, rcx	# destination_stop_word, copy_word
 1363 0767 0F823C04 		jb	.L64	#,
 1363      0000
 1364 076d 4C8D24CD 		lea	r12, 0[0+rcx*8]	# _166,
 1364      00000000 
 1365 0775 4D89F5   		mov	r13, r14	# _173, destination_stop_word
 1366 0778 488D14F5 		lea	rdx, 0[0+rsi*8]	# _300,
 1366      00000000 
 1367              	.LVL72:
 1368              		.loc 1 855 5 discriminator 1 view .LVU402
 1369 0780 4D8D5424 		lea	r10, 32[r12]	# tmp503,
 1369      20
 1370 0785 4C8D04F5 		lea	r8, 40[0+rsi*8]	# _168,
 1370      28000000 
 1371 078d 4929CD   		sub	r13, rcx	# _173, copy_word
 1372 0790 4C39D2   		cmp	rdx, r10	# _300, tmp503
 1373 0793 498D5E01 		lea	rbx, 1[r14]	# _198,
 1374 0797 410F9DC2 		setge	r10b	#, tmp505
 1375 079b 4D39C4   		cmp	r12, r8	# _166, _168
 1376 079e 410F9DC0 		setge	r8b	#, tmp507
 1377 07a2 4D8D7902 		lea	r15, 2[r9]	# _175,
 1378 07a6 48895C24 		mov	QWORD PTR -40[rsp], rbx	# %sfp, _198
 1378      D8
 1379 07ab 4508C2   		or	r10b, r8b	# tmp505, tmp507
 1380 07ae 4C896C24 		mov	QWORD PTR -32[rsp], r13	# %sfp, _173
 1380      E0
 1381 07b3 0F847608 		je	.L56	#,
 1381      0000
 1382 07b9 4983FD05 		cmp	r13, 5	# _173,
 1383 07bd 410F97C5 		seta	r13b	#, tmp510
 1384 07c1 4939DF   		cmp	r15, rbx	# _175, _198
 1385 07c4 410F96C2 		setbe	r10b	#, tmp512
 1386 07c8 4584D5   		test	r13b, r10b	# tmp510, tmp512
 1387 07cb 0F845E08 		je	.L56	#,
 1387      0000
 1388 07d1 4D89F5   		mov	r13, r14	# tmp514, destination_stop_word
 1389 07d4 41B80100 		mov	r8d, 1	# tmp515,
 1389      0000
 1390 07da 4D29CD   		sub	r13, r9	# tmp514, copy_word
 1391 07dd 4939DF   		cmp	r15, rbx	# _175, _198
 1392 07e0 4D0F46C5 		cmovbe	r8, r13	# tmp514,, niters.171
 1393 07e4 4801FA   		add	rdx, rdi	# vectp.172, bitarray
 1394 07e7 48C1EA03 		shr	rdx, 3	# tmp517,
 1395 07eb 48F7DA   		neg	rdx	# tmp518
 1396 07ee 83E203   		and	edx, 3	# prolog_loop_niters.173,
 1397 07f1 0F84C90A 		je	.L76	#,
 1397      0000
 856:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/cc7rm34x.s 			page 46


 1398              		.loc 1 856 9 is_stmt 1 view .LVU403
 1399              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1400              		.loc 1 856 99 is_stmt 0 view .LVU404
 1401 07f7 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# _179, %sfp
 1401      E8
 1402              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1403              		.loc 1 856 83 view .LVU405
 1404 07fc 4C8D5601 		lea	r10, 1[rsi]	# tmp634,
 1405 0800 4C895424 		mov	QWORD PTR -48[rsp], r10	# %sfp, tmp634
 1405      D0
 1406              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1407              		.loc 1 856 99 view .LVU406
 1408 0805 4C8B6C1F 		mov	r13, QWORD PTR 8[rdi+rbx]	# *_309, *_309
 1408      08
 1409 080a C4C2A1F7 		shlx	rbx, r13, r11	# tmp519, *_309, shift
 1409      DD
 1410              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1411              		.loc 1 856 54 view .LVU407
 1412 080f C462FBF7 		shrx	r13, QWORD PTR [rdi+rsi*8], rax	# tmp521, *_304, shift_flipped
 1412      2CF7
 1413              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1414              		.loc 1 856 72 view .LVU408
 1415 0815 4C09EB   		or	rbx, r13	# tmp523, tmp521
 1416 0818 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.173,
 1417              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1418              		.loc 1 856 29 view .LVU409
 1419 081c 4D89FD   		mov	r13, r15	# copy_word, _175
 1420              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1421              		.loc 1 856 72 view .LVU410
 1422 081f 4A891C27 		mov	QWORD PTR [rdi+r12], rbx	# *_313, tmp523
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1423              		.loc 1 855 48 is_stmt 1 view .LVU411
 1424              	.LVL73:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1425              		.loc 1 855 12 view .LVU412
 1426 0823 745E     		je	.L65	#,
 1427              		.loc 1 856 9 view .LVU413
 1428              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1429              		.loc 1 856 40 is_stmt 0 view .LVU414
 1430 0825 4E8D24D5 		lea	r12, 0[0+r10*8]	# _322,
 1430      00000000 
 1431              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1432              		.loc 1 856 83 view .LVU415
 1433 082d 488D5E02 		lea	rbx, 2[rsi]	# source_word,
 1434              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 856 99 view .LVU416
 1436 0831 C422A1F7 		shlx	r13, QWORD PTR 8[rdi+r12], r11	# tmp524, *_328, shift
 1436      6C2708
 1437              	.LVL74:
 1438              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1439              		.loc 1 856 83 view .LVU417
 1440 0838 48895C24 		mov	QWORD PTR -48[rsp], rbx	# %sfp, source_word
 1440      D0
 1441              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1442              		.loc 1 856 54 view .LVU418
 1443 083d 4E8B2427 		mov	r12, QWORD PTR [rdi+r12]	# *_323, *_323
 1444 0841 C4C2FBF7 		shrx	rbx, r12, rax	# tmp526, *_323, shift_flipped
GAS LISTING /tmp/cc7rm34x.s 			page 47


 1444      DC
 1445              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1446              		.loc 1 856 72 view .LVU419
 1447 0846 4909DD   		or	r13, rbx	# tmp528, tmp526
 1448 0849 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.173,
 1449 084d 4E892CFF 		mov	QWORD PTR [rdi+r15*8], r13	# *_332, tmp528
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1450              		.loc 1 855 48 is_stmt 1 view .LVU420
 1451              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1452              		.loc 1 855 57 is_stmt 0 view .LVU421
 1453 0851 4D8D6903 		lea	r13, 3[r9]	# copy_word,
 1454              	.LVL75:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1455              		.loc 1 855 12 is_stmt 1 view .LVU422
 1456 0855 752C     		jne	.L65	#,
 1457              		.loc 1 856 9 view .LVU423
 1458              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1459              		.loc 1 856 40 is_stmt 0 view .LVU424
 1460 0857 4C8D6602 		lea	r12, 2[rsi]	# source_word,
 1461              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1462              		.loc 1 856 83 view .LVU425
 1463 085b 488D5E03 		lea	rbx, 3[rsi]	# source_word,
 1464 085f 48895C24 		mov	QWORD PTR -48[rsp], rbx	# %sfp, source_word
 1464      D0
 1465              	.LVL76:
 1466              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1467              		.loc 1 856 40 view .LVU426
 1468 0864 49C1E403 		sal	r12, 3	# source_word,
 1469              	.LVL77:
 1470              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1471              		.loc 1 856 99 view .LVU427
 1472 0868 C4A2A1F7 		shlx	rbx, QWORD PTR 8[rdi+r12], r11	# tmp529, *_111, shift
 1472      5C2708
 1473              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1474              		.loc 1 856 54 view .LVU428
 1475 086f 4E8B2427 		mov	r12, QWORD PTR [rdi+r12]	# *_121, *_121
 1476 0873 C442FBF7 		shrx	r12, r12, rax	# tmp531, *_121, shift_flipped
 1476      E4
 1477              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1478              		.loc 1 856 72 view .LVU429
 1479 0878 4C09E3   		or	rbx, r12	# tmp533, tmp531
 1480 087b 4A891CEF 		mov	QWORD PTR [rdi+r13*8], rbx	# *_103, tmp533
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1481              		.loc 1 855 48 is_stmt 1 view .LVU430
 1482              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1483              		.loc 1 855 57 is_stmt 0 view .LVU431
 1484 087f 4D8D6904 		lea	r13, 4[r9]	# copy_word,
 1485              	.LVL78:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1486              		.loc 1 855 12 is_stmt 1 view .LVU432
 1487              	.L65:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1488              		.loc 1 855 12 is_stmt 0 view .LVU433
 1489 0883 4901D2   		add	r10, rdx	# tmp537, prolog_loop_niters.173
 1490 0886 4929D0   		sub	r8, rdx	# niters.174, prolog_loop_niters.173
GAS LISTING /tmp/cc7rm34x.s 			page 48


 1491 0889 4E8D0CD7 		lea	r9, [rdi+r10*8]	# vectp.184,
 1492 088d 4D89C2   		mov	r10, r8	# bnd.175, niters.174
 1493 0890 49C1EA02 		shr	r10, 2	# bnd.175,
 1494 0894 4801D6   		add	rsi, rdx	# tmp534, prolog_loop_niters.173
 1495 0897 49C1E205 		sal	r10, 5	# _476,
 1496 089b 4801D1   		add	rcx, rdx	# tmp539, prolog_loop_niters.173
 1497 089e 498D5AE0 		lea	rbx, -32[r10]	# tmp587,
 1498              	# sieve_extend.c:840:     copy_word++;
 840:sieve_extend.c **** 
 1499              		.loc 1 840 14 view .LVU434
 1500 08a2 31D2     		xor	edx, edx	# ivtmp.222
 1501 08a4 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.180,
 1502 08a8 488D0CCF 		lea	rcx, [rdi+rcx*8]	# vectp.189,
 1503 08ac 48C1EB05 		shr	rbx, 5	# tmp585,
 1504 08b0 C5F96E4C 		vmovd	xmm1, DWORD PTR -8[rsp]	# _184, %sfp
 1504      24F8
 1505 08b6 4883C301 		add	rbx, 1	# tmp588,
 1506 08ba C5F96E44 		vmovd	xmm0, DWORD PTR -4[rsp]	# _182, %sfp
 1506      24FC
 1507 08c0 83E307   		and	ebx, 7	# tmp589,
 1508 08c3 0F841A01 		je	.L67	#,
 1508      0000
 1509 08c9 4883FB01 		cmp	rbx, 1	# tmp589,
 1510 08cd 0F84E700 		je	.L155	#,
 1510      0000
 1511 08d3 4883FB02 		cmp	rbx, 2	# tmp589,
 1512 08d7 0F84BD00 		je	.L156	#,
 1512      0000
 1513 08dd 4883FB03 		cmp	rbx, 3	# tmp589,
 1514 08e1 0F849200 		je	.L157	#,
 1514      0000
 1515 08e7 4883FB04 		cmp	rbx, 4	# tmp589,
 1516 08eb 746C     		je	.L158	#,
 1517 08ed 4883FB05 		cmp	rbx, 5	# tmp589,
 1518 08f1 7445     		je	.L159	#,
 1519 08f3 4883FB06 		cmp	rbx, 6	# tmp589,
 1520 08f7 741E     		je	.L160	#,
 1521              		.loc 1 856 9 is_stmt 1 view .LVU435
 1522              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1523              		.loc 1 856 54 is_stmt 0 view .LVU436
 1524 08f9 C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp975, MEM[base: vectp.180_10, index: ivtmp.222_474, offset: 0B
 1525 08fd BA200000 		mov	edx, 32	# ivtmp.222,
 1525      00
 1526              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1527              		.loc 1 856 99 view .LVU437
 1528 0902 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r9]	# tmp976, MEM[base: vectp.184_17, index: ivtmp.222_474, offset: 0B]
 1528      39
 1529              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1530              		.loc 1 856 54 view .LVU438
 1531 0907 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.182, tmp975, _184
 1532              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1533              		.loc 1 856 99 view .LVU439
 1534 090b C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__67.186, tmp976, _182
 1535              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1536              		.loc 1 856 72 view .LVU440
 1537 090f C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.187, vect__62.182, vect__67.186
 1538              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/cc7rm34x.s 			page 49


 1539              		.loc 1 856 29 view .LVU441
 1540 0913 C5FE7F21 		vmovdqu	YMMWORD PTR [rcx], ymm4	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B], vect
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1541              		.loc 1 855 48 is_stmt 1 view .LVU442
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1542              		.loc 1 855 12 view .LVU443
 1543              	.L160:
 1544              		.loc 1 856 9 view .LVU444
 1545              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1546              		.loc 1 856 54 is_stmt 0 view .LVU445
 1547 0917 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp977, MEM[base: vectp.180_10, index: ivtmp.222_474, offset
 1547      16
 1548              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1549              		.loc 1 856 99 view .LVU446
 1550 091c C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r9+rdx]	# tmp978, MEM[base: vectp.184_17, index: ivtmp.222_474, offset:
 1550      0C11
 1551              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1552              		.loc 1 856 54 view .LVU447
 1553 0922 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.182, tmp977, _184
 1554              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1555              		.loc 1 856 99 view .LVU448
 1556 0926 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__67.186, tmp978, _182
 1557              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1558              		.loc 1 856 72 view .LVU449
 1559 092a C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.187, vect__62.182, vect__67.186
 1559      DA
 1560              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1561              		.loc 1 856 29 view .LVU450
 1562 092f C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm11	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B],
 1562      11
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1563              		.loc 1 855 48 is_stmt 1 view .LVU451
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1564              		.loc 1 855 12 view .LVU452
 1565 0934 4883C220 		add	rdx, 32	# ivtmp.222,
 1566              	.L159:
 1567              		.loc 1 856 9 view .LVU453
 1568              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1569              		.loc 1 856 54 is_stmt 0 view .LVU454
 1570 0938 C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp979, MEM[base: vectp.180_10, index: ivtmp.222_474, offse
 1570      16
 1571              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1572              		.loc 1 856 99 view .LVU455
 1573 093d C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r9+rdx]	# tmp980, MEM[base: vectp.184_17, index: ivtmp.222_474, offset
 1573      3411
 1574              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1575              		.loc 1 856 54 view .LVU456
 1576 0943 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__62.182, tmp979, _184
 1577              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1578              		.loc 1 856 99 view .LVU457
 1579 0947 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__67.186, tmp980, _182
 1580              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1581              		.loc 1 856 72 view .LVU458
 1582 094b C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.187, vect__62.182, vect__67.186
 1582      F7
 1583              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1584              		.loc 1 856 29 view .LVU459
GAS LISTING /tmp/cc7rm34x.s 			page 50


 1585 0950 C5FE7F34 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm6	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B], 
 1585      11
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1586              		.loc 1 855 48 is_stmt 1 view .LVU460
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1587              		.loc 1 855 12 view .LVU461
 1588 0955 4883C220 		add	rdx, 32	# ivtmp.222,
 1589              	.L158:
 1590              		.loc 1 856 9 view .LVU462
 1591              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1592              		.loc 1 856 54 is_stmt 0 view .LVU463
 1593 0959 C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp981, MEM[base: vectp.180_10, index: ivtmp.222_474, offset
 1593      16
 1594              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1595              		.loc 1 856 99 view .LVU464
 1596 095e C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r9+rdx]	# tmp982, MEM[base: vectp.184_17, index: ivtmp.222_474, offset:
 1596      1C11
 1597              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1598              		.loc 1 856 54 view .LVU465
 1599 0964 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__62.182, tmp981, _184
 1600              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1601              		.loc 1 856 99 view .LVU466
 1602 0968 C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__67.186, tmp982, _182
 1603              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1604              		.loc 1 856 72 view .LVU467
 1605 096c C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.187, vect__62.182, vect__67.186
 1606              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1607              		.loc 1 856 29 view .LVU468
 1608 0970 C5FE7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm5	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B], 
 1608      11
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1609              		.loc 1 855 48 is_stmt 1 view .LVU469
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1610              		.loc 1 855 12 view .LVU470
 1611 0975 4883C220 		add	rdx, 32	# ivtmp.222,
 1612              	.L157:
 1613              		.loc 1 856 9 view .LVU471
 1614              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1615              		.loc 1 856 54 is_stmt 0 view .LVU472
 1616 0979 C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp983, MEM[base: vectp.180_10, index: ivtmp.222_474, offset
 1616      16
 1617              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1618              		.loc 1 856 99 view .LVU473
 1619 097e C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r9+rdx]	# tmp984, MEM[base: vectp.184_17, index: ivtmp.222_474, offset
 1619      1411
 1620              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1621              		.loc 1 856 54 view .LVU474
 1622 0984 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__62.182, tmp983, _184
 1623              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1624              		.loc 1 856 99 view .LVU475
 1625 0988 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__67.186, tmp984, _182
 1626              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1627              		.loc 1 856 72 view .LVU476
 1628 098c C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.187, vect__62.182, vect__67.186
 1628      E3
 1629              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1630              		.loc 1 856 29 view .LVU477
GAS LISTING /tmp/cc7rm34x.s 			page 51


 1631 0991 C57E7F24 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm12	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B],
 1631      11
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1632              		.loc 1 855 48 is_stmt 1 view .LVU478
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1633              		.loc 1 855 12 view .LVU479
 1634 0996 4883C220 		add	rdx, 32	# ivtmp.222,
 1635              	.L156:
 1636              		.loc 1 856 9 view .LVU480
 1637              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1638              		.loc 1 856 54 is_stmt 0 view .LVU481
 1639 099a C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp985, MEM[base: vectp.180_10, index: ivtmp.222_474, offse
 1639      16
 1640              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1641              		.loc 1 856 99 view .LVU482
 1642 099f C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r9+rdx]	# tmp986, MEM[base: vectp.184_17, index: ivtmp.222_474, offset
 1642      3C11
 1643              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1644              		.loc 1 856 54 view .LVU483
 1645 09a5 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__62.182, tmp985, _184
 1646              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1647              		.loc 1 856 99 view .LVU484
 1648 09a9 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__67.186, tmp986, _182
 1649              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1650              		.loc 1 856 72 view .LVU485
 1651 09ad C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.187, vect__62.182, vect__67.186
 1652              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1653              		.loc 1 856 29 view .LVU486
 1654 09b1 C5FE7F14 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm2	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B], 
 1654      11
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1655              		.loc 1 855 48 is_stmt 1 view .LVU487
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1656              		.loc 1 855 12 view .LVU488
 1657 09b6 4883C220 		add	rdx, 32	# ivtmp.222,
 1658              	.L155:
 1659              		.loc 1 856 9 view .LVU489
 1660              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1661              		.loc 1 856 54 is_stmt 0 view .LVU490
 1662 09ba C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp987, MEM[base: vectp.180_10, index: ivtmp.222_474, offset
 1662      16
 1663              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1664              		.loc 1 856 99 view .LVU491
 1665 09bf C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r9+rdx]	# tmp988, MEM[base: vectp.184_17, index: ivtmp.222_474, offset:
 1665      1C11
 1666              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1667              		.loc 1 856 54 view .LVU492
 1668 09c5 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__62.182, tmp987, _184
 1669              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1670              		.loc 1 856 99 view .LVU493
 1671 09c9 C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__67.186, tmp988, _182
 1672              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1673              		.loc 1 856 72 view .LVU494
 1674 09cd C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.187, vect__62.182, vect__67.186
 1675              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1676              		.loc 1 856 29 view .LVU495
 1677 09d1 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm8	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B], 
GAS LISTING /tmp/cc7rm34x.s 			page 52


 1677      11
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1678              		.loc 1 855 48 is_stmt 1 view .LVU496
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1679              		.loc 1 855 12 view .LVU497
 1680 09d6 4883C220 		add	rdx, 32	# ivtmp.222,
 1681 09da 4C39D2   		cmp	rdx, r10	# ivtmp.222, _476
 1682 09dd 0F842E01 		je	.L197	#,
 1682      0000
 1683              	.L67:
 1684              		.loc 1 856 9 discriminator 2 view .LVU498
 1685              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1686              		.loc 1 856 54 is_stmt 0 discriminator 2 view .LVU499
 1687 09e3 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp923, MEM[base: vectp.180_10, index: ivtmp.222_474, offset
 1687      16
 1688              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1689              		.loc 1 856 99 discriminator 2 view .LVU500
 1690 09e8 C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r9+rdx]	# tmp924, MEM[base: vectp.184_17, index: ivtmp.222_474, offset
 1690      1C11
 1691              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1692              		.loc 1 856 54 discriminator 2 view .LVU501
 1693 09ee C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__62.182, tmp923, _184
 1694              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1695              		.loc 1 856 99 discriminator 2 view .LVU502
 1696 09f2 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__67.186, tmp924, _182
 1697              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1698              		.loc 1 856 72 discriminator 2 view .LVU503
 1699 09f6 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.187, vect__62.182, vect__67.186
 1699      EC
 1700              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1701              		.loc 1 856 29 discriminator 2 view .LVU504
 1702 09fb C57E7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm13	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B],
 1702      11
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1703              		.loc 1 855 48 is_stmt 1 discriminator 2 view .LVU505
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1704              		.loc 1 855 12 discriminator 2 view .LVU506
 1705              		.loc 1 856 9 discriminator 2 view .LVU507
 1706              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1707              		.loc 1 856 54 is_stmt 0 discriminator 2 view .LVU508
 1708 0a00 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp925, MEM[base: vectp.180_10, index: ivtmp.222_474, off
 1708      1620
 1709              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1710              		.loc 1 856 99 discriminator 2 view .LVU509
 1711 0a06 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r9+rdx]	# tmp926, MEM[base: vectp.184_17, index: ivtmp.222_474, offse
 1711      741120
 1712              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1713              		.loc 1 856 54 discriminator 2 view .LVU510
 1714 0a0d C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__62.182, tmp925, _184
 1715              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1716              		.loc 1 856 99 discriminator 2 view .LVU511
 1717 0a11 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__67.186, tmp926, _182
 1718              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1719              		.loc 1 856 72 discriminator 2 view .LVU512
 1720 0a15 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.187, vect__62.182, vect__67.186
 1721              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1722              		.loc 1 856 29 discriminator 2 view .LVU513
GAS LISTING /tmp/cc7rm34x.s 			page 53


 1723 0a19 C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rcx+rdx], ymm7	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B]
 1723      1120
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1724              		.loc 1 855 48 is_stmt 1 discriminator 2 view .LVU514
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1725              		.loc 1 855 12 discriminator 2 view .LVU515
 1726              		.loc 1 856 9 discriminator 2 view .LVU516
 1727              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1728              		.loc 1 856 54 is_stmt 0 discriminator 2 view .LVU517
 1729 0a1f C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp927, MEM[base: vectp.180_10, index: ivtmp.222_474, offs
 1729      1640
 1730              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1731              		.loc 1 856 99 discriminator 2 view .LVU518
 1732 0a25 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r9+rdx]	# tmp928, MEM[base: vectp.184_17, index: ivtmp.222_474, offse
 1732      5C1140
 1733              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1734              		.loc 1 856 54 discriminator 2 view .LVU519
 1735 0a2c C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__62.182, tmp927, _184
 1736              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1737              		.loc 1 856 99 discriminator 2 view .LVU520
 1738 0a30 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__67.186, tmp928, _182
 1739              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1740              		.loc 1 856 72 discriminator 2 view .LVU521
 1741 0a34 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.187, vect__62.182, vect__67.186
 1741      C8
 1742              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1743              		.loc 1 856 29 discriminator 2 view .LVU522
 1744 0a39 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rdx], ymm9	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B]
 1744      1140
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1745              		.loc 1 855 48 is_stmt 1 discriminator 2 view .LVU523
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1746              		.loc 1 855 12 discriminator 2 view .LVU524
 1747              		.loc 1 856 9 discriminator 2 view .LVU525
 1748              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1749              		.loc 1 856 54 is_stmt 0 discriminator 2 view .LVU526
 1750 0a3f C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp929, MEM[base: vectp.180_10, index: ivtmp.222_474, off
 1750      1660
 1751              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1752              		.loc 1 856 99 discriminator 2 view .LVU527
 1753 0a45 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r9+rdx]	# tmp930, MEM[base: vectp.184_17, index: ivtmp.222_474, offs
 1753      641160
 1754              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1755              		.loc 1 856 54 discriminator 2 view .LVU528
 1756 0a4c C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__62.182, tmp929, _184
 1757              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1758              		.loc 1 856 99 discriminator 2 view .LVU529
 1759 0a50 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__67.186, tmp930, _182
 1760              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1761              		.loc 1 856 72 discriminator 2 view .LVU530
 1762 0a54 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.187, vect__62.182, vect__67.186
 1762      F5
 1763              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1764              		.loc 1 856 29 discriminator 2 view .LVU531
 1765 0a59 C57E7F74 		vmovdqu	YMMWORD PTR 96[rcx+rdx], ymm14	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B
 1765      1160
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/cc7rm34x.s 			page 54


 1766              		.loc 1 855 48 is_stmt 1 discriminator 2 view .LVU532
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1767              		.loc 1 855 12 discriminator 2 view .LVU533
 1768              		.loc 1 856 9 discriminator 2 view .LVU534
 1769              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1770              		.loc 1 856 54 is_stmt 0 discriminator 2 view .LVU535
 1771 0a5f C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp931, MEM[base: vectp.180_10, index: ivtmp.222_474, of
 1771      16800000 
 1771      00
 1772              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1773              		.loc 1 856 99 discriminator 2 view .LVU536
 1774 0a68 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r9+rdx]	# tmp932, MEM[base: vectp.184_17, index: ivtmp.222_474, offs
 1774      94118000 
 1774      0000
 1775              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1776              		.loc 1 856 54 discriminator 2 view .LVU537
 1777 0a72 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__62.182, tmp931, _184
 1778              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1779              		.loc 1 856 99 discriminator 2 view .LVU538
 1780 0a76 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__67.186, tmp932, _182
 1781              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1782              		.loc 1 856 72 discriminator 2 view .LVU539
 1783 0a7a C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.187, vect__62.182, vect__67.186
 1784              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1785              		.loc 1 856 29 discriminator 2 view .LVU540
 1786 0a7e C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rcx+rdx], ymm4	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B
 1786      11800000 
 1786      00
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1787              		.loc 1 855 48 is_stmt 1 discriminator 2 view .LVU541
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1788              		.loc 1 855 12 discriminator 2 view .LVU542
 1789              		.loc 1 856 9 discriminator 2 view .LVU543
 1790              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1791              		.loc 1 856 54 is_stmt 0 discriminator 2 view .LVU544
 1792 0a87 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp933, MEM[base: vectp.180_10, index: ivtmp.222_474, off
 1792      16A00000 
 1792      00
 1793              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1794              		.loc 1 856 99 discriminator 2 view .LVU545
 1795 0a90 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r9+rdx]	# tmp934, MEM[base: vectp.184_17, index: ivtmp.222_474, offs
 1795      9C11A000 
 1795      0000
 1796              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1797              		.loc 1 856 54 discriminator 2 view .LVU546
 1798 0a9a C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.182, tmp933, _184
 1799              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1800              		.loc 1 856 99 discriminator 2 view .LVU547
 1801 0a9e C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__67.186, tmp934, _182
 1802              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1803              		.loc 1 856 72 discriminator 2 view .LVU548
 1804 0aa2 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.187, vect__62.182, vect__67.186
 1804      D1
 1805              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1806              		.loc 1 856 29 discriminator 2 view .LVU549
 1807 0aa7 C57E7F94 		vmovdqu	YMMWORD PTR 160[rcx+rdx], ymm10	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0
 1807      11A00000 
GAS LISTING /tmp/cc7rm34x.s 			page 55


 1807      00
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1808              		.loc 1 855 48 is_stmt 1 discriminator 2 view .LVU550
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1809              		.loc 1 855 12 discriminator 2 view .LVU551
 1810              		.loc 1 856 9 discriminator 2 view .LVU552
 1811              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1812              		.loc 1 856 54 is_stmt 0 discriminator 2 view .LVU553
 1813 0ab0 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp935, MEM[base: vectp.180_10, index: ivtmp.222_474, of
 1813      16C00000 
 1813      00
 1814              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1815              		.loc 1 856 99 discriminator 2 view .LVU554
 1816 0ab9 C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r9+rdx]	# tmp936, MEM[base: vectp.184_17, index: ivtmp.222_474, off
 1816      AC11C000 
 1816      0000
 1817              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1818              		.loc 1 856 54 discriminator 2 view .LVU555
 1819 0ac3 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__62.182, tmp935, _184
 1820              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1821              		.loc 1 856 99 discriminator 2 view .LVU556
 1822 0ac7 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__67.186, tmp936, _182
 1823              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1824              		.loc 1 856 72 discriminator 2 view .LVU557
 1825 0acb C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.187, vect__62.182, vect__67.186
 1825      FE
 1826              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1827              		.loc 1 856 29 discriminator 2 view .LVU558
 1828 0ad0 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rcx+rdx], ymm15	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0
 1828      11C00000 
 1828      00
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1829              		.loc 1 855 48 is_stmt 1 discriminator 2 view .LVU559
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1830              		.loc 1 855 12 discriminator 2 view .LVU560
 1831              		.loc 1 856 9 discriminator 2 view .LVU561
 1832              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1833              		.loc 1 856 54 is_stmt 0 discriminator 2 view .LVU562
 1834 0ad9 C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp937, MEM[base: vectp.180_10, index: ivtmp.222_474, off
 1834      16E00000 
 1834      00
 1835              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1836              		.loc 1 856 99 discriminator 2 view .LVU563
 1837 0ae2 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r9+rdx]	# tmp938, MEM[base: vectp.184_17, index: ivtmp.222_474, offs
 1837      BC11E000 
 1837      0000
 1838              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1839              		.loc 1 856 54 discriminator 2 view .LVU564
 1840 0aec C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.182, tmp937, _184
 1841              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1842              		.loc 1 856 99 discriminator 2 view .LVU565
 1843 0af0 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__67.186, tmp938, _182
 1844              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1845              		.loc 1 856 72 discriminator 2 view .LVU566
 1846 0af4 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.187, vect__62.182, vect__67.186
 1847              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1848              		.loc 1 856 29 discriminator 2 view .LVU567
GAS LISTING /tmp/cc7rm34x.s 			page 56


 1849 0af8 C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rcx+rdx], ymm5	# MEM[base: vectp.189_212, index: ivtmp.222_474, offset: 0B
 1849      11E00000 
 1849      00
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1850              		.loc 1 855 48 is_stmt 1 discriminator 2 view .LVU568
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1851              		.loc 1 855 12 discriminator 2 view .LVU569
 1852 0b01 4881C200 		add	rdx, 256	# ivtmp.222,
 1852      010000
 1853 0b08 4C39D2   		cmp	rdx, r10	# ivtmp.222, _476
 1854 0b0b 0F85D2FE 		jne	.L67	#,
 1854      FFFF
 1855              	.L197:
 1856 0b11 4C8B4C24 		mov	r9, QWORD PTR -48[rsp]	# source_word, %sfp
 1856      D0
 1857 0b16 4D89C4   		mov	r12, r8	# niters_vector_mult_vf.176, niters.174
 1858 0b19 4983E4FC 		and	r12, -4	# niters_vector_mult_vf.176,
 1859 0b1d 4D01E5   		add	r13, r12	# tmp.177, niters_vector_mult_vf.176
 1860 0b20 4D01E1   		add	r9, r12	# source_word, niters_vector_mult_vf.176
 1861 0b23 4D39C4   		cmp	r12, r8	# niters_vector_mult_vf.176, niters.174
 1862 0b26 0F848C07 		je	.L206	#,
 1862      0000
 1863              	.LVL79:
 1864              		.loc 1 856 9 view .LVU570
 1865              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1866              		.loc 1 855 57 is_stmt 0 view .LVU571
 1867 0b2c 4D8D5501 		lea	r10, 1[r13]	# copy_word,
 1868              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1869              		.loc 1 856 99 view .LVU572
 1870 0b30 C4A2A1F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r11	# tmp551, *_66, shift
 1870      4CCF08
 1871              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1872              		.loc 1 856 54 view .LVU573
 1873 0b37 C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r9*8], rax	# tmp553, *_61, shift_flipped
 1873      34CF
 1874              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1875              		.loc 1 856 72 view .LVU574
 1876 0b3d 4809F1   		or	rcx, rsi	# tmp555, tmp553
 1877              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1878              		.loc 1 855 5 view .LVU575
 1879 0b40 4D39F2   		cmp	r10, r14	# copy_word, destination_stop_word
 1880              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1881              		.loc 1 856 83 view .LVU576
 1882 0b43 4D8D4101 		lea	r8, 1[r9]	# _64,
 1883              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1884              		.loc 1 856 72 view .LVU577
 1885 0b47 4A890CEF 		mov	QWORD PTR [rdi+r13*8], rcx	# *_70, tmp555
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1886              		.loc 1 855 48 is_stmt 1 view .LVU578
 1887              	.LVL80:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1888              		.loc 1 855 12 view .LVU579
 1889              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1890              		.loc 1 855 5 is_stmt 0 view .LVU580
GAS LISTING /tmp/cc7rm34x.s 			page 57


 1891 0b4b 0F876707 		ja	.L206	#,
 1891      0000
 1892              		.loc 1 856 9 is_stmt 1 view .LVU581
 1893              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1894              		.loc 1 855 57 is_stmt 0 view .LVU582
 1895 0b51 4983C502 		add	r13, 2	# copy_word,
 1896              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1897              		.loc 1 856 99 view .LVU583
 1898 0b55 C4A2A1F7 		shlx	rbx, QWORD PTR 8[rdi+r8*8], r11	# tmp556, *_53, shift
 1898      5CC708
 1899              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1900              		.loc 1 856 54 view .LVU584
 1901 0b5c 4A8B14C7 		mov	rdx, QWORD PTR [rdi+r8*8]	# *_48, *_48
 1902              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1903              		.loc 1 856 83 view .LVU585
 1904 0b60 4983C102 		add	r9, 2	# _51,
 1905              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1906              		.loc 1 856 54 view .LVU586
 1907 0b64 C462FBF7 		shrx	r12, rdx, rax	# tmp558, *_48, shift_flipped
 1907      E2
 1908              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1909              		.loc 1 856 72 view .LVU587
 1910 0b69 4C09E3   		or	rbx, r12	# tmp560, tmp558
 1911 0b6c 4A891CD7 		mov	QWORD PTR [rdi+r10*8], rbx	# *_57, tmp560
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1912              		.loc 1 855 48 is_stmt 1 view .LVU588
 1913              	.LVL81:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1914              		.loc 1 855 12 view .LVU589
 1915              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1916              		.loc 1 855 5 is_stmt 0 view .LVU590
 1917 0b70 4D39EE   		cmp	r14, r13	# destination_stop_word, copy_word
 1918 0b73 0F823F07 		jb	.L206	#,
 1918      0000
 1919              		.loc 1 856 9 is_stmt 1 view .LVU591
 1920              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1921              		.loc 1 856 99 is_stmt 0 view .LVU592
 1922 0b79 C422A1F7 		shlx	r14, QWORD PTR 8[rdi+r9*8], r11	# tmp561, *_36, shift
 1922      74CF08
 1923              	.LVL82:
 1924              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1925              		.loc 1 856 54 view .LVU593
 1926 0b80 4E8B1CCF 		mov	r11, QWORD PTR [rdi+r9*8]	# *_30, *_30
 1927              	.LVL83:
 1928              		.loc 1 856 54 view .LVU594
 1929 0b84 C4C2FBF7 		shrx	rax, r11, rax	# tmp563, *_30, shift_flipped
 1929      C3
 1930              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1931              		.loc 1 856 72 view .LVU595
 1932 0b89 4C09F0   		or	rax, r14	# tmp565, tmp561
 1933 0b8c 4A8904EF 		mov	QWORD PTR [rdi+r13*8], rax	# *_40, tmp565
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1934              		.loc 1 855 48 is_stmt 1 view .LVU596
 1935              	.LVL84:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/cc7rm34x.s 			page 58


 1936              		.loc 1 855 12 view .LVU597
 1937 0b90 C5F877   		vzeroupper
 1938              	.LVL85:
 1939              	.L71:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1940              		.loc 1 855 12 is_stmt 0 view .LVU598
 1941 0b93 4C3B7C24 		cmp	r15, QWORD PTR -40[rsp]	# _175, %sfp
 1941      D8
 1942 0b98 B9000000 		mov	ecx, 0	# tmp550,
 1942      00
 1943 0b9d 4C8B7424 		mov	r14, QWORD PTR -32[rsp]	#, %sfp
 1943      E0
 1944 0ba2 490F46CE 		cmovbe	rcx, r14	#,, tmp549
 1945 0ba6 4C01F9   		add	rcx, r15	# copy_word, _175
 1946              	.L64:
 857:sieve_extend.c ****     }
 858:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1947              		.loc 1 858 5 is_stmt 1 view .LVU599
 1948              	# sieve_extend.c:858:     bitarray[copy_word] &= chopmask(destination_stop);
 1949              		.loc 1 858 25 is_stmt 0 view .LVU600
 1950 0ba9 488B7424 		mov	rsi, QWORD PTR -16[rsp]	# _193, %sfp
 1950      F0
 1951 0bae 482134CF 		and	QWORD PTR [rdi+rcx*8], rsi	# *_72, _193
 1952              	# sieve_extend.c:860: }
 859:sieve_extend.c **** 
 860:sieve_extend.c **** }
 1953              		.loc 1 860 1 view .LVU601
 1954 0bb2 488D65D8 		lea	rsp, -40[rbp]	#,
 1955 0bb6 5B       		pop	rbx	#
 1956 0bb7 415C     		pop	r12	#
 1957 0bb9 415D     		pop	r13	#
 1958 0bbb 415E     		pop	r14	#
 1959 0bbd 415F     		pop	r15	#
 1960 0bbf 5D       		pop	rbp	#
 1961              		.cfi_remember_state
 1962              		.cfi_def_cfa 7, 8
 1963 0bc0 C3       		ret	
 1964              	.LVL86:
 1965              		.p2align 4,,7
 1966 0bc1 0F1F8000 		.p2align 3
 1966      000000
 1967              	.L210:
 1968              		.cfi_restore_state
 1969              	.LBB321:
 845:sieve_extend.c **** 
 1970              		.loc 1 845 9 is_stmt 1 view .LVU602
 1971              	.LBB322:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1972              		.loc 1 849 14 view .LVU603
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1973              		.loc 1 849 40 view .LVU604
 1974              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1975              		.loc 1 849 9 is_stmt 0 view .LVU605
 1976 0bc8 4D89F4   		mov	r12, r14	# loop_distance, destination_stop_word
 1977 0bcb 4929CC   		sub	r12, rcx	# loop_distance, copy_word
 1978              	.LVL87:
GAS LISTING /tmp/cc7rm34x.s 			page 59


 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1979              		.loc 1 849 9 view .LVU606
 1980 0bce 0F843904 		je	.L62	#,
 1980      0000
 1981 0bd4 4C89FA   		mov	rdx, r15	# tmp422, _180
 1982              	.LVL88:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1983              		.loc 1 849 9 view .LVU607
 1984 0bd7 41BA0500 		mov	r10d, 5	# tmp426,
 1984      0000
 1985 0bdd 48C1EA03 		shr	rdx, 3	# tmp422,
 1986 0be1 4D8D6C24 		lea	r13, -1[r12]	# tmp424,
 1986      FF
 1987 0be6 48F7DA   		neg	rdx	# tmp423
 1988 0be9 83E203   		and	edx, 3	# prolog_loop_niters.192,
 1989 0bec 4C8D4203 		lea	r8, 3[rdx]	# tmp425,
 1990 0bf0 4983F805 		cmp	r8, 5	# tmp425,
 1991 0bf4 4D0F42C2 		cmovb	r8, r10	# tmp425,, tmp591, tmp426
 1992 0bf8 4D39C5   		cmp	r13, r8	# tmp424, tmp591
 1993 0bfb 0F820407 		jb	.L72	#,
 1993      0000
 1994 0c01 4885D2   		test	rdx, rdx	# prolog_loop_niters.192
 1995 0c04 0F849606 		je	.L73	#,
 1995      0000
 850:sieve_extend.c ****         }
 1996              		.loc 1 850 13 is_stmt 1 view .LVU608
 1997              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 1998              		.loc 1 850 109 is_stmt 0 view .LVU609
 1999 0c0a 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# _179, %sfp
 1999      E8
 2000              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2001              		.loc 1 850 105 view .LVU610
 2002 0c0f 4C8D4601 		lea	r8, 1[rsi]	# tmp572,
 2003              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2004              		.loc 1 850 62 view .LVU611
 2005 0c13 4D8B3F   		mov	r15, QWORD PTR [r15]	# *_180, *_180
 2006              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2007              		.loc 1 849 59 view .LVU612
 2008 0c16 48C74424 		mov	QWORD PTR -24[rsp], 1	# %sfp,
 2008      E8010000 
 2008      00
 2009              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2010              		.loc 1 850 109 view .LVU613
 2011 0c1f 4C8B6C1F 		mov	r13, QWORD PTR 8[rdi+rbx]	# *_437, *_437
 2011      08
 2012              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2013              		.loc 1 850 62 view .LVU614
 2014 0c24 C4C2FBF7 		shrx	rbx, r15, rax	# tmp429, *_180, shift_flipped
 2014      DF
 2015              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
GAS LISTING /tmp/cc7rm34x.s 			page 60


 2016              		.loc 1 850 109 view .LVU615
 2017 0c29 C442A1F7 		shlx	r10, r13, r11	# tmp427, *_437, shift
 2017      D5
 2018              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2019              		.loc 1 850 80 view .LVU616
 2020 0c2e 4909DA   		or	r10, rbx	# tmp431, tmp429
 2021 0c31 4C8914CF 		mov	QWORD PTR [rdi+rcx*8], r10	# *_442, tmp431
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2022              		.loc 1 849 58 is_stmt 1 view .LVU617
 2023              	.LVL89:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2024              		.loc 1 849 40 view .LVU618
 2025 0c35 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.192,
 2026 0c39 7449     		je	.L58	#,
 850:sieve_extend.c ****         }
 2027              		.loc 1 850 13 view .LVU619
 2028              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2029              		.loc 1 850 109 is_stmt 0 view .LVU620
 2030 0c3b C422A1F7 		shlx	r13, QWORD PTR 8[rdi+r8*8], r11	# tmp433, *_457, shift
 2030      6CC708
 2031              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2032              		.loc 1 850 62 view .LVU621
 2033 0c42 C422FBF7 		shrx	r10, QWORD PTR [rdi+r8*8], rax	# tmp435, *_452, shift_flipped
 2033      14C7
 2034              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2035              		.loc 1 849 59 view .LVU622
 2036 0c48 48C74424 		mov	QWORD PTR -24[rsp], 2	# %sfp,
 2036      E8020000 
 2036      00
 2037              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2038              		.loc 1 850 80 view .LVU623
 2039 0c51 4D09D5   		or	r13, r10	# tmp437, tmp435
 2040 0c54 4E896CCF 		mov	QWORD PTR 16[rdi+r9*8], r13	# *_462, tmp437
 2040      10
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2041              		.loc 1 849 58 is_stmt 1 view .LVU624
 2042              	.LVL90:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2043              		.loc 1 849 40 view .LVU625
 2044 0c59 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.192,
 2045 0c5d 7525     		jne	.L58	#,
 850:sieve_extend.c ****         }
 2046              		.loc 1 850 13 view .LVU626
 2047              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2048              		.loc 1 849 59 is_stmt 0 view .LVU627
 2049 0c5f 48C74424 		mov	QWORD PTR -24[rsp], 3	# %sfp,
 2049      E8030000 
 2049      00
 2050              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2051              		.loc 1 850 58 view .LVU628
GAS LISTING /tmp/cc7rm34x.s 			page 61


 2052 0c68 4C8D7E02 		lea	r15, 2[rsi]	# tmp438,
 2053              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2054              		.loc 1 850 62 view .LVU629
 2055 0c6c 4A8B1CFF 		mov	rbx, QWORD PTR [rdi+r15*8]	# *_231, *_231
 2056              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2057              		.loc 1 850 109 view .LVU630
 2058 0c70 C422A1F7 		shlx	r13, QWORD PTR 8[rdi+r15*8], r11	# tmp440, *_236, shift
 2058      6CFF08
 2059              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2060              		.loc 1 850 62 view .LVU631
 2061 0c77 C462FBF7 		shrx	r10, rbx, rax	# tmp442, *_231, shift_flipped
 2061      D3
 2062              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2063              		.loc 1 850 80 view .LVU632
 2064 0c7c 4D09D5   		or	r13, r10	# tmp444, tmp442
 2065 0c7f 4E896CCF 		mov	QWORD PTR 24[rdi+r9*8], r13	# *_241, tmp444
 2065      18
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2066              		.loc 1 849 58 is_stmt 1 view .LVU633
 2067              	.LVL91:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2068              		.loc 1 849 40 view .LVU634
 2069              	.L58:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2070              		.loc 1 849 40 is_stmt 0 view .LVU635
 2071 0c84 4D89E5   		mov	r13, r12	# niters.193, loop_distance
 2072 0c87 4901D0   		add	r8, rdx	# tmp448, prolog_loop_niters.192
 2073 0c8a 4929D5   		sub	r13, rdx	# niters.193, prolog_loop_niters.192
 2074 0c8d 4E8D14C7 		lea	r10, [rdi+r8*8]	# vectp.202,
 2075 0c91 4D89EF   		mov	r15, r13	# bnd.194, niters.193
 2076 0c94 4C8D0C16 		lea	r9, [rsi+rdx]	# tmp445,
 2077 0c98 49C1EF02 		shr	r15, 2	# bnd.194,
 2078 0c9c 4801CA   		add	rdx, rcx	# tmp450, copy_word
 2079 0c9f 49C1E705 		sal	r15, 5	# bnd.194,
 2080 0ca3 488D1CD7 		lea	rbx, [rdi+rdx*8]	# vectp.207,
 2081 0ca7 4D8D47E0 		lea	r8, -32[r15]	# tmp581,
 2082              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2083              		.loc 1 849 33 view .LVU636
 2084 0cab 31D2     		xor	edx, edx	# ivtmp.232
 2085 0cad C5F96E4C 		vmovd	xmm1, DWORD PTR -8[rsp]	# _184, %sfp
 2085      24F8
 2086 0cb3 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.198,
 2087 0cb7 49C1E805 		shr	r8, 5	# tmp579,
 2088 0cbb C5F96E44 		vmovd	xmm0, DWORD PTR -4[rsp]	# _182, %sfp
 2088      24FC
 2089 0cc1 4983C001 		add	r8, 1	# tmp582,
 2090 0cc5 4183E007 		and	r8d, 7	# tmp583,
 2091 0cc9 0F840301 		je	.L60	#,
 2091      0000
 2092 0ccf 4983F801 		cmp	r8, 1	# tmp583,
 2093 0cd3 0F84CE00 		je	.L149	#,
 2093      0000
GAS LISTING /tmp/cc7rm34x.s 			page 62


 2094 0cd9 4983F802 		cmp	r8, 2	# tmp583,
 2095 0cdd 0F84A200 		je	.L150	#,
 2095      0000
 2096 0ce3 4983F803 		cmp	r8, 3	# tmp583,
 2097 0ce7 747B     		je	.L151	#,
 2098 0ce9 4983F804 		cmp	r8, 4	# tmp583,
 2099 0ced 7453     		je	.L152	#,
 2100 0cef 4983F805 		cmp	r8, 5	# tmp583,
 2101 0cf3 742C     		je	.L153	#,
 2102 0cf5 4983F806 		cmp	r8, 6	# tmp583,
 2103 0cf9 0F85E105 		jne	.L211	#,
 2103      0000
 2104              	.L154:
 850:sieve_extend.c ****         }
 2105              		.loc 1 850 13 is_stmt 1 view .LVU637
 2106              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2107              		.loc 1 850 62 is_stmt 0 view .LVU638
 2108 0cff C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r9+rdx]	# tmp963, MEM[base: vectp.198_280, index: ivtmp.232_477, offse
 2108      2411
 2109              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2110              		.loc 1 850 109 view .LVU639
 2111 0d05 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r10+rdx]	# tmp964, MEM[base: vectp.202_287, index: ivtmp.232_477, offs
 2111      3412
 2112              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2113              		.loc 1 850 62 view .LVU640
 2114 0d0b C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.200, tmp963, _184
 2115              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2116              		.loc 1 850 109 view .LVU641
 2117 0d0f C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.204, tmp964, _182
 2118              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2119              		.loc 1 850 80 view .LVU642
 2120 0d13 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.205, vect__49.200, vect__54.204
 2120      F7
 2121              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2122              		.loc 1 850 35 view .LVU643
 2123 0d18 C5FE7F34 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm6	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B], 
 2123      13
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2124              		.loc 1 849 58 is_stmt 1 view .LVU644
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2125              		.loc 1 849 40 view .LVU645
 2126 0d1d 4883C220 		add	rdx, 32	# ivtmp.232,
 2127              	.L153:
 850:sieve_extend.c ****         }
 2128              		.loc 1 850 13 view .LVU646
 2129              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2130              		.loc 1 850 62 is_stmt 0 view .LVU647
 2131 0d21 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r9+rdx]	# tmp965, MEM[base: vectp.198_280, index: ivtmp.232_477, offset
 2131      1411
 2132              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/cc7rm34x.s 			page 63


 850:sieve_extend.c ****         }
 2133              		.loc 1 850 109 view .LVU648
 2134 0d27 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r10+rdx]	# tmp966, MEM[base: vectp.202_287, index: ivtmp.232_477, offse
 2134      2412
 2135              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2136              		.loc 1 850 62 view .LVU649
 2137 0d2d C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.200, tmp965, _184
 2138              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2139              		.loc 1 850 109 view .LVU650
 2140 0d31 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.204, tmp966, _182
 2141              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2142              		.loc 1 850 80 view .LVU651
 2143 0d35 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.205, vect__49.200, vect__54.204
 2144              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2145              		.loc 1 850 35 view .LVU652
 2146 0d39 C57E7F04 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm8	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B], 
 2146      13
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2147              		.loc 1 849 58 is_stmt 1 view .LVU653
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2148              		.loc 1 849 40 view .LVU654
 2149 0d3e 4883C220 		add	rdx, 32	# ivtmp.232,
 2150              	.L152:
 850:sieve_extend.c ****         }
 2151              		.loc 1 850 13 view .LVU655
 2152              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2153              		.loc 1 850 62 is_stmt 0 view .LVU656
 2154 0d42 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r9+rdx]	# tmp967, MEM[base: vectp.198_280, index: ivtmp.232_477, offset
 2154      0C11
 2155              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2156              		.loc 1 850 109 view .LVU657
 2157 0d48 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r10+rdx]	# tmp968, MEM[base: vectp.202_287, index: ivtmp.232_477, offse
 2157      1C12
 2158              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2159              		.loc 1 850 62 view .LVU658
 2160 0d4e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.200, tmp967, _184
 2161              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2162              		.loc 1 850 109 view .LVU659
 2163 0d52 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.204, tmp968, _182
 2164              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2165              		.loc 1 850 80 view .LVU660
 2166 0d56 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.205, vect__49.200, vect__54.204
 2166      E3
 2167              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2168              		.loc 1 850 35 view .LVU661
 2169 0d5b C57E7F24 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm12	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B],
 2169      13
GAS LISTING /tmp/cc7rm34x.s 			page 64


 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2170              		.loc 1 849 58 is_stmt 1 view .LVU662
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2171              		.loc 1 849 40 view .LVU663
 2172 0d60 4883C220 		add	rdx, 32	# ivtmp.232,
 2173              	.L151:
 850:sieve_extend.c ****         }
 2174              		.loc 1 850 13 view .LVU664
 2175              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2176              		.loc 1 850 62 is_stmt 0 view .LVU665
 2177 0d64 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rdx]	# tmp969, MEM[base: vectp.198_280, index: ivtmp.232_477, offse
 2177      2C11
 2178              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2179              		.loc 1 850 109 view .LVU666
 2180 0d6a C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r10+rdx]	# tmp970, MEM[base: vectp.202_287, index: ivtmp.232_477, offs
 2180      3C12
 2181              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2182              		.loc 1 850 62 view .LVU667
 2183 0d70 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.200, tmp969, _184
 2184              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2185              		.loc 1 850 109 view .LVU668
 2186 0d74 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.204, tmp970, _182
 2187              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2188              		.loc 1 850 80 view .LVU669
 2189 0d78 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.205, vect__49.200, vect__54.204
 2190              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2191              		.loc 1 850 35 view .LVU670
 2192 0d7c C5FE7F14 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm2	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B], 
 2192      13
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2193              		.loc 1 849 58 is_stmt 1 view .LVU671
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2194              		.loc 1 849 40 view .LVU672
 2195 0d81 4883C220 		add	rdx, 32	# ivtmp.232,
 2196              	.L150:
 850:sieve_extend.c ****         }
 2197              		.loc 1 850 13 view .LVU673
 2198              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2199              		.loc 1 850 62 is_stmt 0 view .LVU674
 2200 0d85 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r9+rdx]	# tmp971, MEM[base: vectp.198_280, index: ivtmp.232_477, offset
 2200      3C11
 2201              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2202              		.loc 1 850 109 view .LVU675
 2203 0d8b C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r10+rdx]	# tmp972, MEM[base: vectp.202_287, index: ivtmp.232_477, offse
 2203      2C12
 2204              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2205              		.loc 1 850 62 view .LVU676
 2206 0d91 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.200, tmp971, _184
GAS LISTING /tmp/cc7rm34x.s 			page 65


 2207              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2208              		.loc 1 850 109 view .LVU677
 2209 0d95 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.204, tmp972, _182
 2210              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2211              		.loc 1 850 80 view .LVU678
 2212 0d99 C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.205, vect__49.200, vect__54.204
 2212      C8
 2213              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2214              		.loc 1 850 35 view .LVU679
 2215 0d9e C57E7F0C 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm9	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B], 
 2215      13
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2216              		.loc 1 849 58 is_stmt 1 view .LVU680
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2217              		.loc 1 849 40 view .LVU681
 2218 0da3 4883C220 		add	rdx, 32	# ivtmp.232,
 2219              	.L149:
 850:sieve_extend.c ****         }
 2220              		.loc 1 850 13 view .LVU682
 2221              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2222              		.loc 1 850 62 is_stmt 0 view .LVU683
 2223 0da7 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r9+rdx]	# tmp973, MEM[base: vectp.198_280, index: ivtmp.232_477, offse
 2223      1411
 2224              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2225              		.loc 1 850 109 view .LVU684
 2226 0dad C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r10+rdx]	# tmp974, MEM[base: vectp.202_287, index: ivtmp.232_477, offse
 2226      1C12
 2227              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2228              		.loc 1 850 62 view .LVU685
 2229 0db3 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.200, tmp973, _184
 2230              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2231              		.loc 1 850 109 view .LVU686
 2232 0db7 C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.204, tmp974, _182
 2233              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2234              		.loc 1 850 80 view .LVU687
 2235 0dbb C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.205, vect__49.200, vect__54.204
 2235      EC
 2236              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2237              		.loc 1 850 35 view .LVU688
 2238 0dc0 C57E7F2C 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm13	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B],
 2238      13
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2239              		.loc 1 849 58 is_stmt 1 view .LVU689
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2240              		.loc 1 849 40 view .LVU690
 2241 0dc5 4883C220 		add	rdx, 32	# ivtmp.232,
 2242 0dc9 4C39FA   		cmp	rdx, r15	# ivtmp.232, _479
 2243 0dcc 0F843601 		je	.L196	#,
GAS LISTING /tmp/cc7rm34x.s 			page 66


 2243      0000
 2244              	.L60:
 850:sieve_extend.c ****         }
 2245              		.loc 1 850 13 discriminator 3 view .LVU691
 2246              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2247              		.loc 1 850 62 is_stmt 0 discriminator 3 view .LVU692
 2248 0dd2 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rdx]	# tmp893, MEM[base: vectp.198_280, index: ivtmp.232_477, offse
 2248      3411
 2249              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2250              		.loc 1 850 109 discriminator 3 view .LVU693
 2251 0dd8 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r10+rdx]	# tmp894, MEM[base: vectp.202_287, index: ivtmp.232_477, offse
 2251      3412
 2252              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2253              		.loc 1 850 62 discriminator 3 view .LVU694
 2254 0dde C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.200, tmp893, _184
 2255              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2256              		.loc 1 850 109 discriminator 3 view .LVU695
 2257 0de2 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.204, tmp894, _182
 2258              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2259              		.loc 1 850 80 discriminator 3 view .LVU696
 2260 0de6 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.205, vect__49.200, vect__54.204
 2261              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2262              		.loc 1 850 35 discriminator 3 view .LVU697
 2263 0dea C5FE7F3C 		vmovdqu	YMMWORD PTR [rbx+rdx], ymm7	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B], 
 2263      13
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2264              		.loc 1 849 58 is_stmt 1 discriminator 3 view .LVU698
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2265              		.loc 1 849 40 discriminator 3 view .LVU699
 850:sieve_extend.c ****         }
 2266              		.loc 1 850 13 discriminator 3 view .LVU700
 2267              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2268              		.loc 1 850 62 is_stmt 0 discriminator 3 view .LVU701
 2269 0def C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r9+rdx]	# tmp895, MEM[base: vectp.198_280, index: ivtmp.232_477, offs
 2269      641120
 2270              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2271              		.loc 1 850 109 discriminator 3 view .LVU702
 2272 0df6 C4417E6F 		vmovdqu	ymm8, YMMWORD PTR 32[r10+rdx]	# tmp896, MEM[base: vectp.202_287, index: ivtmp.232_477, off
 2272      441220
 2273              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2274              		.loc 1 850 62 discriminator 3 view .LVU703
 2275 0dfd C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__49.200, tmp895, _184
 2276              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2277              		.loc 1 850 109 discriminator 3 view .LVU704
 2278 0e01 C53DF3C8 		vpsllq	ymm9, ymm8, xmm0	# vect__54.204, tmp896, _182
 2279              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
GAS LISTING /tmp/cc7rm34x.s 			page 67


 2280              		.loc 1 850 80 discriminator 3 view .LVU705
 2281 0e05 C44155EB 		vpor	ymm10, ymm5, ymm9	# vect__58.205, vect__49.200, vect__54.204
 2281      D1
 2282              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2283              		.loc 1 850 35 discriminator 3 view .LVU706
 2284 0e0a C57E7F54 		vmovdqu	YMMWORD PTR 32[rbx+rdx], ymm10	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B
 2284      1320
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2285              		.loc 1 849 58 is_stmt 1 discriminator 3 view .LVU707
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2286              		.loc 1 849 40 discriminator 3 view .LVU708
 850:sieve_extend.c ****         }
 2287              		.loc 1 850 13 discriminator 3 view .LVU709
 2288              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2289              		.loc 1 850 62 is_stmt 0 discriminator 3 view .LVU710
 2290 0e10 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r9+rdx]	# tmp897, MEM[base: vectp.198_280, index: ivtmp.232_477, off
 2290      5C1140
 2291              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2292              		.loc 1 850 109 discriminator 3 view .LVU711
 2293 0e17 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r10+rdx]	# tmp898, MEM[base: vectp.202_287, index: ivtmp.232_477, off
 2293      5C1240
 2294              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2295              		.loc 1 850 62 discriminator 3 view .LVU712
 2296 0e1e C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.200, tmp897, _184
 2297              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2298              		.loc 1 850 109 discriminator 3 view .LVU713
 2299 0e22 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.204, tmp898, _182
 2300              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2301              		.loc 1 850 80 discriminator 3 view .LVU714
 2302 0e26 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.205, vect__49.200, vect__54.204
 2302      F5
 2303              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2304              		.loc 1 850 35 discriminator 3 view .LVU715
 2305 0e2b C57E7F74 		vmovdqu	YMMWORD PTR 64[rbx+rdx], ymm14	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B
 2305      1340
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2306              		.loc 1 849 58 is_stmt 1 discriminator 3 view .LVU716
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2307              		.loc 1 849 40 discriminator 3 view .LVU717
 850:sieve_extend.c ****         }
 2308              		.loc 1 850 13 discriminator 3 view .LVU718
 2309              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2310              		.loc 1 850 62 is_stmt 0 discriminator 3 view .LVU719
 2311 0e31 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r9+rdx]	# tmp899, MEM[base: vectp.198_280, index: ivtmp.232_477, off
 2311      7C1160
 2312              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2313              		.loc 1 850 109 discriminator 3 view .LVU720
 2314 0e38 C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r10+rdx]	# tmp900, MEM[base: vectp.202_287, index: ivtmp.232_477, off
GAS LISTING /tmp/cc7rm34x.s 			page 68


 2314      541260
 2315              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2316              		.loc 1 850 62 discriminator 3 view .LVU721
 2317 0e3f C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.200, tmp899, _184
 2318              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2319              		.loc 1 850 109 discriminator 3 view .LVU722
 2320 0e43 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.204, tmp900, _182
 2321              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2322              		.loc 1 850 80 discriminator 3 view .LVU723
 2323 0e47 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.205, vect__49.200, vect__54.204
 2324              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2325              		.loc 1 850 35 discriminator 3 view .LVU724
 2326 0e4b C5FE7F64 		vmovdqu	YMMWORD PTR 96[rbx+rdx], ymm4	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B]
 2326      1360
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2327              		.loc 1 849 58 is_stmt 1 discriminator 3 view .LVU725
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2328              		.loc 1 849 40 discriminator 3 view .LVU726
 850:sieve_extend.c ****         }
 2329              		.loc 1 850 13 discriminator 3 view .LVU727
 2330              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2331              		.loc 1 850 62 is_stmt 0 discriminator 3 view .LVU728
 2332 0e51 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 128[r9+rdx]	# tmp901, MEM[base: vectp.198_280, index: ivtmp.232_477, off
 2332      AC118000 
 2332      0000
 2333              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2334              		.loc 1 850 109 discriminator 3 view .LVU729
 2335 0e5b C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r10+rdx]	# tmp902, MEM[base: vectp.202_287, index: ivtmp.232_477, of
 2335      8C128000 
 2335      0000
 2336              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2337              		.loc 1 850 62 discriminator 3 view .LVU730
 2338 0e65 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__49.200, tmp901, _184
 2339              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2340              		.loc 1 850 109 discriminator 3 view .LVU731
 2341 0e69 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.204, tmp902, _182
 2342              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2343              		.loc 1 850 80 discriminator 3 view .LVU732
 2344 0e6d C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.205, vect__49.200, vect__54.204
 2344      DA
 2345              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2346              		.loc 1 850 35 discriminator 3 view .LVU733
 2347 0e72 C57E7F9C 		vmovdqu	YMMWORD PTR 128[rbx+rdx], ymm11	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0
 2347      13800000 
 2347      00
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2348              		.loc 1 849 58 is_stmt 1 discriminator 3 view .LVU734
GAS LISTING /tmp/cc7rm34x.s 			page 69


 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2349              		.loc 1 849 40 discriminator 3 view .LVU735
 850:sieve_extend.c ****         }
 2350              		.loc 1 850 13 discriminator 3 view .LVU736
 2351              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2352              		.loc 1 850 62 is_stmt 0 discriminator 3 view .LVU737
 2353 0e7b C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rdx]	# tmp903, MEM[base: vectp.198_280, index: ivtmp.232_477, of
 2353      A411A000 
 2353      0000
 2354              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2355              		.loc 1 850 109 discriminator 3 view .LVU738
 2356 0e85 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r10+rdx]	# tmp904, MEM[base: vectp.202_287, index: ivtmp.232_477, of
 2356      9C12A000 
 2356      0000
 2357              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2358              		.loc 1 850 62 discriminator 3 view .LVU739
 2359 0e8f C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.200, tmp903, _184
 2360              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2361              		.loc 1 850 109 discriminator 3 view .LVU740
 2362 0e93 C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.204, tmp904, _182
 2363              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2364              		.loc 1 850 80 discriminator 3 view .LVU741
 2365 0e97 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.205, vect__49.200, vect__54.204
 2365      FE
 2366              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2367              		.loc 1 850 35 discriminator 3 view .LVU742
 2368 0e9c C57E7FBC 		vmovdqu	YMMWORD PTR 160[rbx+rdx], ymm15	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0
 2368      13A00000 
 2368      00
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2369              		.loc 1 849 58 is_stmt 1 discriminator 3 view .LVU743
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2370              		.loc 1 849 40 discriminator 3 view .LVU744
 850:sieve_extend.c ****         }
 2371              		.loc 1 850 13 discriminator 3 view .LVU745
 2372              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2373              		.loc 1 850 62 is_stmt 0 discriminator 3 view .LVU746
 2374 0ea5 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r9+rdx]	# tmp905, MEM[base: vectp.198_280, index: ivtmp.232_477, off
 2374      B411C000 
 2374      0000
 2375              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2376              		.loc 1 850 109 discriminator 3 view .LVU747
 2377 0eaf C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r10+rdx]	# tmp906, MEM[base: vectp.202_287, index: ivtmp.232_477, of
 2377      BC12C000 
 2377      0000
 2378              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2379              		.loc 1 850 62 discriminator 3 view .LVU748
 2380 0eb9 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.200, tmp905, _184
GAS LISTING /tmp/cc7rm34x.s 			page 70


 2381              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2382              		.loc 1 850 109 discriminator 3 view .LVU749
 2383 0ebd C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.204, tmp906, _182
 2384              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2385              		.loc 1 850 80 discriminator 3 view .LVU750
 2386 0ec1 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__58.205, vect__49.200, vect__54.204
 2387              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2388              		.loc 1 850 35 discriminator 3 view .LVU751
 2389 0ec5 C5FE7FAC 		vmovdqu	YMMWORD PTR 192[rbx+rdx], ymm5	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B
 2389      13C00000 
 2389      00
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2390              		.loc 1 849 58 is_stmt 1 discriminator 3 view .LVU752
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2391              		.loc 1 849 40 discriminator 3 view .LVU753
 850:sieve_extend.c ****         }
 2392              		.loc 1 850 13 discriminator 3 view .LVU754
 2393              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2394              		.loc 1 850 62 is_stmt 0 discriminator 3 view .LVU755
 2395 0ece C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 224[r9+rdx]	# tmp907, MEM[base: vectp.198_280, index: ivtmp.232_477, off
 2395      8411E000 
 2395      0000
 2396              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2397              		.loc 1 850 109 discriminator 3 view .LVU756
 2398 0ed8 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r10+rdx]	# tmp908, MEM[base: vectp.202_287, index: ivtmp.232_477, o
 2398      9412E000 
 2398      0000
 2399              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2400              		.loc 1 850 62 discriminator 3 view .LVU757
 2401 0ee2 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.200, tmp907, _184
 2402              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2403              		.loc 1 850 109 discriminator 3 view .LVU758
 2404 0ee6 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.204, tmp908, _182
 2405              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2406              		.loc 1 850 80 discriminator 3 view .LVU759
 2407 0eea C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.205, vect__49.200, vect__54.204
 2407      E3
 2408              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2409              		.loc 1 850 35 discriminator 3 view .LVU760
 2410 0eef C57E7FA4 		vmovdqu	YMMWORD PTR 224[rbx+rdx], ymm12	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0
 2410      13E00000 
 2410      00
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2411              		.loc 1 849 58 is_stmt 1 discriminator 3 view .LVU761
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2412              		.loc 1 849 40 discriminator 3 view .LVU762
 2413 0ef8 4881C200 		add	rdx, 256	# ivtmp.232,
 2413      010000
GAS LISTING /tmp/cc7rm34x.s 			page 71


 2414 0eff 4C39FA   		cmp	rdx, r15	# ivtmp.232, _479
 2415 0f02 0F85CAFE 		jne	.L60	#,
 2415      FFFF
 2416              	.L196:
 2417 0f08 4C8B5424 		mov	r10, QWORD PTR -24[rsp]	# i, %sfp
 2417      E8
 2418 0f0d 4D89E9   		mov	r9, r13	# niters_vector_mult_vf.195, niters.193
 2419 0f10 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.195,
 2420 0f14 4D01CA   		add	r10, r9	# i, niters_vector_mult_vf.195
 2421 0f17 4D39CD   		cmp	r13, r9	# niters.193, niters_vector_mult_vf.195
 2422 0f1a 0F84B803 		je	.L212	#,
 2422      0000
 2423 0f20 C5F877   		vzeroupper
 2424              	.L57:
 2425              	.LVL92:
 850:sieve_extend.c ****         }
 2426              		.loc 1 850 13 view .LVU763
 2427              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2428              		.loc 1 850 58 is_stmt 0 view .LVU764
 2429 0f23 4E8D2C16 		lea	r13, [rsi+r10]	# tmp460,
 2430              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2431              		.loc 1 850 109 view .LVU765
 2432 0f27 C422A1F7 		shlx	r15, QWORD PTR 8[rdi+r13*8], r11	# tmp462, *_346, shift
 2432      7CEF08
 2433              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2434              		.loc 1 850 62 view .LVU766
 2435 0f2e 4E8B04EF 		mov	r8, QWORD PTR [rdi+r13*8]	# *_341, *_341
 2436              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2437              		.loc 1 849 59 view .LVU767
 2438 0f32 4D8D6A01 		lea	r13, 1[r10]	# i,
 2439              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2440              		.loc 1 850 21 view .LVU768
 2441 0f36 4A8D1C11 		lea	rbx, [rcx+r10]	# tmp461,
 2442              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2443              		.loc 1 850 62 view .LVU769
 2444 0f3a C4C2FBF7 		shrx	rdx, r8, rax	# tmp464, *_341, shift_flipped
 2444      D0
 2445              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2446              		.loc 1 850 80 view .LVU770
 2447 0f3f 4909D7   		or	r15, rdx	# tmp466, tmp464
 2448              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2449              		.loc 1 849 9 view .LVU771
 2450 0f42 4D39EC   		cmp	r12, r13	# loop_distance, i
 2451              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2452              		.loc 1 850 80 view .LVU772
 2453 0f45 4C893CDF 		mov	QWORD PTR [rdi+rbx*8], r15	# *_351, tmp466
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2454              		.loc 1 849 58 is_stmt 1 view .LVU773
GAS LISTING /tmp/cc7rm34x.s 			page 72


 2455              	.LVL93:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2456              		.loc 1 849 40 view .LVU774
 2457              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2458              		.loc 1 849 9 is_stmt 0 view .LVU775
 2459 0f49 0F86BE00 		jbe	.L62	#,
 2459      0000
 850:sieve_extend.c ****         }
 2460              		.loc 1 850 13 is_stmt 1 view .LVU776
 2461              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2462              		.loc 1 850 58 is_stmt 0 view .LVU777
 2463 0f4f 4E8D0C2E 		lea	r9, [rsi+r13]	# tmp467,
 2464              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2465              		.loc 1 849 59 view .LVU778
 2466 0f53 498D5202 		lea	rdx, 2[r10]	# i,
 2467              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2468              		.loc 1 850 62 view .LVU779
 2469 0f57 4E8B3CCF 		mov	r15, QWORD PTR [rdi+r9*8]	# *_359, *_359
 2470              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2471              		.loc 1 850 21 view .LVU780
 2472 0f5b 4901CD   		add	r13, rcx	# tmp468, copy_word
 2473              	.LVL94:
 2474              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2475              		.loc 1 850 109 view .LVU781
 2476 0f5e C4A2A1F7 		shlx	rbx, QWORD PTR 8[rdi+r9*8], r11	# tmp469, *_364, shift
 2476      5CCF08
 2477              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2478              		.loc 1 850 62 view .LVU782
 2479 0f65 C442FBF7 		shrx	r8, r15, rax	# tmp471, *_359, shift_flipped
 2479      C7
 2480              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2481              		.loc 1 850 80 view .LVU783
 2482 0f6a 4C09C3   		or	rbx, r8	# tmp473, tmp471
 2483              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2484              		.loc 1 849 9 view .LVU784
 2485 0f6d 4939D4   		cmp	r12, rdx	# loop_distance, i
 2486              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2487              		.loc 1 850 80 view .LVU785
 2488 0f70 4A891CEF 		mov	QWORD PTR [rdi+r13*8], rbx	# *_369, tmp473
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2489              		.loc 1 849 58 is_stmt 1 view .LVU786
 2490              	.LVL95:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2491              		.loc 1 849 40 view .LVU787
 2492              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2493              		.loc 1 849 9 is_stmt 0 view .LVU788
GAS LISTING /tmp/cc7rm34x.s 			page 73


 2494 0f74 0F869300 		jbe	.L62	#,
 2494      0000
 850:sieve_extend.c ****         }
 2495              		.loc 1 850 13 is_stmt 1 view .LVU789
 2496              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2497              		.loc 1 850 58 is_stmt 0 view .LVU790
 2498 0f7a 4C8D2C16 		lea	r13, [rsi+rdx]	# tmp474,
 2499              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2500              		.loc 1 850 21 view .LVU791
 2501 0f7e 4801CA   		add	rdx, rcx	# tmp475, copy_word
 2502              	.LVL96:
 2503              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2504              		.loc 1 850 62 view .LVU792
 2505 0f81 4E8B0CEF 		mov	r9, QWORD PTR [rdi+r13*8]	# *_377, *_377
 2506              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2507              		.loc 1 850 109 view .LVU793
 2508 0f85 C4A2A1F7 		shlx	rbx, QWORD PTR 8[rdi+r13*8], r11	# tmp476, *_382, shift
 2508      5CEF08
 2509              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2510              		.loc 1 850 62 view .LVU794
 2511 0f8c C442FBF7 		shrx	r15, r9, rax	# tmp478, *_377, shift_flipped
 2511      F9
 2512              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2513              		.loc 1 850 80 view .LVU795
 2514 0f91 4C09FB   		or	rbx, r15	# tmp480, tmp478
 2515 0f94 48891CD7 		mov	QWORD PTR [rdi+rdx*8], rbx	# *_387, tmp480
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2516              		.loc 1 849 58 is_stmt 1 view .LVU796
 2517              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2518              		.loc 1 849 59 is_stmt 0 view .LVU797
 2519 0f98 498D5203 		lea	rdx, 3[r10]	# i,
 2520              	.LVL97:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2521              		.loc 1 849 40 is_stmt 1 view .LVU798
 2522              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2523              		.loc 1 849 9 is_stmt 0 view .LVU799
 2524 0f9c 4939D4   		cmp	r12, rdx	# loop_distance, i
 2525 0f9f 766C     		jbe	.L62	#,
 850:sieve_extend.c ****         }
 2526              		.loc 1 850 13 is_stmt 1 view .LVU800
 2527              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2528              		.loc 1 850 58 is_stmt 0 view .LVU801
 2529 0fa1 4C8D2C16 		lea	r13, [rsi+rdx]	# tmp481,
 2530              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2531              		.loc 1 849 59 view .LVU802
 2532 0fa5 4D8D7A04 		lea	r15, 4[r10]	# i,
 2533              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/cc7rm34x.s 			page 74


 850:sieve_extend.c ****         }
 2534              		.loc 1 850 62 view .LVU803
 2535 0fa9 4A8B1CEF 		mov	rbx, QWORD PTR [rdi+r13*8]	# *_395, *_395
 2536              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2537              		.loc 1 850 21 view .LVU804
 2538 0fad 4801CA   		add	rdx, rcx	# tmp482, copy_word
 2539              	.LVL98:
 2540              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2541              		.loc 1 850 109 view .LVU805
 2542 0fb0 C422A1F7 		shlx	r8, QWORD PTR 8[rdi+r13*8], r11	# tmp483, *_400, shift
 2542      44EF08
 2543              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2544              		.loc 1 850 62 view .LVU806
 2545 0fb7 C462FBF7 		shrx	r9, rbx, rax	# tmp485, *_395, shift_flipped
 2545      CB
 2546              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2547              		.loc 1 850 80 view .LVU807
 2548 0fbc 4D09C8   		or	r8, r9	# tmp487, tmp485
 2549              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2550              		.loc 1 849 9 view .LVU808
 2551 0fbf 4D39FC   		cmp	r12, r15	# loop_distance, i
 2552              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2553              		.loc 1 850 80 view .LVU809
 2554 0fc2 4C8904D7 		mov	QWORD PTR [rdi+rdx*8], r8	# *_405, tmp487
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2555              		.loc 1 849 58 is_stmt 1 view .LVU810
 2556              	.LVL99:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2557              		.loc 1 849 40 view .LVU811
 2558              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2559              		.loc 1 849 9 is_stmt 0 view .LVU812
 2560 0fc6 7645     		jbe	.L62	#,
 850:sieve_extend.c ****         }
 2561              		.loc 1 850 13 is_stmt 1 view .LVU813
 2562              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2563              		.loc 1 850 58 is_stmt 0 view .LVU814
 2564 0fc8 4A8D143E 		lea	rdx, [rsi+r15]	# tmp488,
 2565              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2566              		.loc 1 849 59 view .LVU815
 2567 0fcc 4983C205 		add	r10, 5	# i,
 2568              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2569              		.loc 1 850 62 view .LVU816
 2570 0fd0 4C8B04D7 		mov	r8, QWORD PTR [rdi+rdx*8]	# *_413, *_413
 2571              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2572              		.loc 1 850 21 view .LVU817
 2573 0fd4 4901CF   		add	r15, rcx	# tmp489, copy_word
GAS LISTING /tmp/cc7rm34x.s 			page 75


 2574              	.LVL100:
 2575              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2576              		.loc 1 850 109 view .LVU818
 2577 0fd7 C462A1F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r11	# tmp490, *_418, shift
 2577      6CD708
 2578              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2579              		.loc 1 850 62 view .LVU819
 2580 0fde C4C2FBF7 		shrx	rbx, r8, rax	# tmp492, *_413, shift_flipped
 2580      D8
 2581              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2582              		.loc 1 850 80 view .LVU820
 2583 0fe3 4909DD   		or	r13, rbx	# tmp494, tmp492
 2584              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2585              		.loc 1 849 9 view .LVU821
 2586 0fe6 4D39D4   		cmp	r12, r10	# loop_distance, i
 2587              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2588              		.loc 1 850 80 view .LVU822
 2589 0fe9 4E892CFF 		mov	QWORD PTR [rdi+r15*8], r13	# *_423, tmp494
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2590              		.loc 1 849 58 is_stmt 1 view .LVU823
 2591              	.LVL101:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2592              		.loc 1 849 40 view .LVU824
 2593              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2594              		.loc 1 849 9 is_stmt 0 view .LVU825
 2595 0fed 761E     		jbe	.L62	#,
 850:sieve_extend.c ****         }
 2596              		.loc 1 850 13 is_stmt 1 view .LVU826
 2597              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2598              		.loc 1 850 58 is_stmt 0 view .LVU827
 2599 0fef 4E8D0C16 		lea	r9, [rsi+r10]	# tmp495,
 2600              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2601              		.loc 1 850 21 view .LVU828
 2602 0ff3 4901CA   		add	r10, rcx	# tmp496, copy_word
 2603              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2604              		.loc 1 850 109 view .LVU829
 2605 0ff6 C4A2A1F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r11	# tmp497, *_261, shift
 2605      4CCF08
 2606              	.LVL102:
 2607              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2608              		.loc 1 850 62 view .LVU830
 2609 0ffd 4E8B1CCF 		mov	r11, QWORD PTR [rdi+r9*8]	# *_256, *_256
 2610              	.LVL103:
 850:sieve_extend.c ****         }
 2611              		.loc 1 850 62 view .LVU831
 2612 1001 C4C2FBF7 		shrx	rax, r11, rax	# tmp499, *_256, shift_flipped
 2612      C3
GAS LISTING /tmp/cc7rm34x.s 			page 76


 2613              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 2614              		.loc 1 850 80 view .LVU832
 2615 1006 4809C8   		or	rax, rcx	# tmp501, tmp497
 2616 1009 4A8904D7 		mov	QWORD PTR [rdi+r10*8], rax	# *_266, tmp501
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2617              		.loc 1 849 58 is_stmt 1 view .LVU833
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2618              		.loc 1 849 40 view .LVU834
 2619              	.L62:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2620              		.loc 1 849 40 is_stmt 0 view .LVU835
 2621              	.LBE322:
 852:sieve_extend.c ****     }
 2622              		.loc 1 852 9 is_stmt 1 view .LVU836
 2623              	.LVL104:
 852:sieve_extend.c ****     }
 2624              		.loc 1 852 39 view .LVU837
 852:sieve_extend.c ****     }
 2625              		.loc 1 852 39 is_stmt 0 view .LVU838
 2626              	.LBE321:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2627              		.loc 1 855 12 is_stmt 1 view .LVU839
 2628 100d 4D8D7E01 		lea	r15, 1[r14]	# _198,
 2629 1011 4A8D7426 		lea	rsi, 5[rsi+r12]	# tmp420,
 2629      05
 2630              	.LVL105:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2631              		.loc 1 855 12 is_stmt 0 view .LVU840
 2632 1016 4C897C24 		mov	QWORD PTR -40[rsp], r15	# %sfp, _198
 2632      D8
 2633 101b 488D14F5 		lea	rdx, -40[0+rsi*8]	# _300,
 2633      D8FFFFFF 
 2634              	.LBB325:
 2635              	# sieve_extend.c:852:         source_word += loop_distance; copy_word+= loop_distance;
 852:sieve_extend.c ****     }
 2636              		.loc 1 852 21 view .LVU841
 2637 1023 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2637      E0000000 
 2637      00
 2638 102c 4C89F1   		mov	rcx, r14	# copy_word, destination_stop_word
 2639              	.LVL106:
 2640              	.L56:
 852:sieve_extend.c ****     }
 2641              		.loc 1 852 21 view .LVU842
 2642 102f 4D89F4   		mov	r12, r14	# tmp575, destination_stop_word
 2643              	.LBE325:
 2644              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2645              		.loc 1 855 57 view .LVU843
 2646 1032 488D7101 		lea	rsi, 1[rcx]	# copy_word,
 2647 1036 4929CC   		sub	r12, rcx	# tmp575, copy_word
 2648 1039 4801FA   		add	rdx, rdi	# ivtmp.214, bitarray
 2649              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2650              		.loc 1 856 99 view .LVU844
 2651 103c 440FB654 		movzx	r10d, BYTE PTR -4[rsp]	# tmp944, %sfp
GAS LISTING /tmp/cc7rm34x.s 			page 77


 2651      24FC
 2652 1042 4183E407 		and	r12d, 7	# tmp576,
 2653              	.LVL107:
 856:sieve_extend.c ****     }
 2654              		.loc 1 856 9 is_stmt 1 view .LVU845
 2655              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2656              		.loc 1 856 54 is_stmt 0 view .LVU846
 2657 1046 440FB644 		movzx	r8d, BYTE PTR -8[rsp]	# tmp945, %sfp
 2657      24F8
 2658              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2659              		.loc 1 856 99 view .LVU847
 2660 104c C462A9F7 		shlx	r13, QWORD PTR 8[rdx], r10	# tmp566, MEM[base: _472, offset: 8B], tmp944
 2660      6A08
 2661              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2662              		.loc 1 856 54 view .LVU848
 2663 1052 C4E2BBF7 		shrx	rbx, QWORD PTR [rdx], r8	# tmp568, MEM[base: _472, offset: 0B], tmp945
 2663      1A
 2664              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2665              		.loc 1 856 72 view .LVU849
 2666 1057 4909DD   		or	r13, rbx	# tmp570, tmp568
 2667 105a 4C892CCF 		mov	QWORD PTR [rdi+rcx*8], r13	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2668              		.loc 1 855 48 is_stmt 1 view .LVU850
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2669              		.loc 1 855 12 view .LVU851
 2670              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2671              		.loc 1 855 5 is_stmt 0 view .LVU852
 2672 105e 4939F6   		cmp	r14, rsi	# destination_stop_word, copy_word
 2673 1061 4C8D6A08 		lea	r13, 8[rdx]	# ivtmp.214,
 2674 1065 0F8228FB 		jb	.L71	#,
 2674      FFFF
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2675              		.loc 1 855 5 view .LVU853
 2676 106b 4D85E4   		test	r12, r12	# tmp576
 2677 106e 0F844A01 		je	.L201	#,
 2677      0000
 2678 1074 4983FC01 		cmp	r12, 1	# tmp576,
 2679 1078 0F841201 		je	.L162	#,
 2679      0000
 2680 107e 4983FC02 		cmp	r12, 2	# tmp576,
 2681 1082 0F84E200 		je	.L163	#,
 2681      0000
 2682 1088 4983FC03 		cmp	r12, 3	# tmp576,
 2683 108c 0F84B200 		je	.L164	#,
 2683      0000
 2684 1092 4983FC04 		cmp	r12, 4	# tmp576,
 2685 1096 0F848100 		je	.L165	#,
 2685      0000
 2686 109c 4983FC05 		cmp	r12, 5	# tmp576,
 2687 10a0 7455     		je	.L166	#,
 2688 10a2 4983FC06 		cmp	r12, 6	# tmp576,
 2689 10a6 742A     		je	.L167	#,
GAS LISTING /tmp/cc7rm34x.s 			page 78


 856:sieve_extend.c ****     }
 2690              		.loc 1 856 9 is_stmt 1 view .LVU854
 2691              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2692              		.loc 1 856 54 is_stmt 0 view .LVU855
 2693 10a8 498B4500 		mov	rax, QWORD PTR 0[r13]	# MEM[base: _472, offset: 0B], MEM[base: _472, offset: 0B]
 2694              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2695              		.loc 1 856 99 view .LVU856
 2696 10ac 440FB64C 		movzx	r9d, BYTE PTR -4[rsp]	# tmp947, %sfp
 2696      24FC
 2697 10b2 C442B1F7 		shlx	r11, QWORD PTR 8[r13], r9	# tmp736, MEM[base: _472, offset: 8B], tmp947
 2697      5D08
 2698              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2699              		.loc 1 856 54 view .LVU857
 2700 10b8 440FB664 		movzx	r12d, BYTE PTR -8[rsp]	# tmp948, %sfp
 2700      24F8
 2701 10be C4629BF7 		shrx	r10, rax, r12	# tmp738, MEM[base: _472, offset: 0B], tmp948
 2701      D0
 2702              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2703              		.loc 1 856 72 view .LVU858
 2704 10c3 4D09DA   		or	r10, r11	# tmp739, tmp736
 2705 10c6 4C8D6A10 		lea	r13, 16[rdx]	# ivtmp.214,
 2706 10ca 4C8914F7 		mov	QWORD PTR [rdi+rsi*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2707              		.loc 1 855 48 is_stmt 1 view .LVU859
 2708              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2709              		.loc 1 855 57 is_stmt 0 view .LVU860
 2710 10ce 488D7102 		lea	rsi, 2[rcx]	# copy_word,
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2711              		.loc 1 855 12 is_stmt 1 view .LVU861
 2712              	.L167:
 856:sieve_extend.c ****     }
 2713              		.loc 1 856 9 view .LVU862
 2714              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2715              		.loc 1 856 99 is_stmt 0 view .LVU863
 2716 10d2 0FB65424 		movzx	edx, BYTE PTR -4[rsp]	# tmp949, %sfp
 2716      FC
 2717 10d7 C442E9F7 		shlx	r8, QWORD PTR 8[r13], rdx	# tmp741, MEM[base: _472, offset: 8B], tmp949
 2717      4508
 2718              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2719              		.loc 1 856 54 view .LVU864
 2720 10dd 0FB64C24 		movzx	ecx, BYTE PTR -8[rsp]	# tmp950, %sfp
 2720      F8
 2721              	.LVL108:
 856:sieve_extend.c ****     }
 2722              		.loc 1 856 54 view .LVU865
 2723 10e2 C4C2F3F7 		shrx	rbx, QWORD PTR 0[r13], rcx	# tmp743, MEM[base: _472, offset: 0B], tmp950
 2723      5D00
 2724              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2725              		.loc 1 856 72 view .LVU866
GAS LISTING /tmp/cc7rm34x.s 			page 79


 2726 10e8 4909D8   		or	r8, rbx	# tmp744, tmp743
 2727 10eb 4983C508 		add	r13, 8	# ivtmp.214,
 2728 10ef 4C8904F7 		mov	QWORD PTR [rdi+rsi*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2729              		.loc 1 855 48 is_stmt 1 view .LVU867
 2730              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2731              		.loc 1 855 57 is_stmt 0 view .LVU868
 2732 10f3 4883C601 		add	rsi, 1	# copy_word,
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2733              		.loc 1 855 12 is_stmt 1 view .LVU869
 2734              	.L166:
 856:sieve_extend.c ****     }
 2735              		.loc 1 856 9 view .LVU870
 2736              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2737              		.loc 1 856 99 is_stmt 0 view .LVU871
 2738 10f7 440FB64C 		movzx	r9d, BYTE PTR -4[rsp]	# tmp951, %sfp
 2738      24FC
 2739 10fd C442B1F7 		shlx	r11, QWORD PTR 8[r13], r9	# tmp746, MEM[base: _472, offset: 8B], tmp951
 2739      5D08
 2740              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2741              		.loc 1 856 54 view .LVU872
 2742 1103 0FB64424 		movzx	eax, BYTE PTR -8[rsp]	# tmp952, %sfp
 2742      F8
 2743 1108 C442FBF7 		shrx	r12, QWORD PTR 0[r13], rax	# tmp748, MEM[base: _472, offset: 0B], tmp952
 2743      6500
 2744              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2745              		.loc 1 856 72 view .LVU873
 2746 110e 4D09E3   		or	r11, r12	# tmp749, tmp748
 2747 1111 4983C508 		add	r13, 8	# ivtmp.214,
 2748 1115 4C891CF7 		mov	QWORD PTR [rdi+rsi*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2749              		.loc 1 855 48 is_stmt 1 view .LVU874
 2750              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2751              		.loc 1 855 57 is_stmt 0 view .LVU875
 2752 1119 4883C601 		add	rsi, 1	# copy_word,
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2753              		.loc 1 855 12 is_stmt 1 view .LVU876
 2754              	.L165:
 856:sieve_extend.c ****     }
 2755              		.loc 1 856 9 view .LVU877
 2756              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2757              		.loc 1 856 99 is_stmt 0 view .LVU878
 2758 111d 440FB654 		movzx	r10d, BYTE PTR -4[rsp]	# tmp953, %sfp
 2758      24FC
 2759 1123 C4C2A9F7 		shlx	rdx, QWORD PTR 8[r13], r10	# tmp751, MEM[base: _472, offset: 8B], tmp953
 2759      5508
 2760              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2761              		.loc 1 856 54 view .LVU879
 2762 1129 440FB644 		movzx	r8d, BYTE PTR -8[rsp]	# tmp954, %sfp
 2762      24F8
GAS LISTING /tmp/cc7rm34x.s 			page 80


 2763 112f C4C2BBF7 		shrx	rcx, QWORD PTR 0[r13], r8	# tmp753, MEM[base: _472, offset: 0B], tmp954
 2763      4D00
 2764              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2765              		.loc 1 856 72 view .LVU880
 2766 1135 4809CA   		or	rdx, rcx	# tmp754, tmp753
 2767 1138 4983C508 		add	r13, 8	# ivtmp.214,
 2768 113c 488914F7 		mov	QWORD PTR [rdi+rsi*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2769              		.loc 1 855 48 is_stmt 1 view .LVU881
 2770              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2771              		.loc 1 855 57 is_stmt 0 view .LVU882
 2772 1140 4883C601 		add	rsi, 1	# copy_word,
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2773              		.loc 1 855 12 is_stmt 1 view .LVU883
 2774              	.L164:
 856:sieve_extend.c ****     }
 2775              		.loc 1 856 9 view .LVU884
 2776              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2777              		.loc 1 856 99 is_stmt 0 view .LVU885
 2778 1144 0FB65C24 		movzx	ebx, BYTE PTR -4[rsp]	# tmp955, %sfp
 2778      FC
 2779 1149 C442E1F7 		shlx	r9, QWORD PTR 8[r13], rbx	# tmp756, MEM[base: _472, offset: 8B], tmp955
 2779      4D08
 2780              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2781              		.loc 1 856 54 view .LVU886
 2782 114f 440FB65C 		movzx	r11d, BYTE PTR -8[rsp]	# tmp956, %sfp
 2782      24F8
 2783 1155 C4C2A3F7 		shrx	rax, QWORD PTR 0[r13], r11	# tmp758, MEM[base: _472, offset: 0B], tmp956
 2783      4500
 2784              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2785              		.loc 1 856 72 view .LVU887
 2786 115b 4909C1   		or	r9, rax	# tmp759, tmp758
 2787 115e 4983C508 		add	r13, 8	# ivtmp.214,
 2788 1162 4C890CF7 		mov	QWORD PTR [rdi+rsi*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2789              		.loc 1 855 48 is_stmt 1 view .LVU888
 2790              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2791              		.loc 1 855 57 is_stmt 0 view .LVU889
 2792 1166 4883C601 		add	rsi, 1	# copy_word,
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2793              		.loc 1 855 12 is_stmt 1 view .LVU890
 2794              	.L163:
 856:sieve_extend.c ****     }
 2795              		.loc 1 856 9 view .LVU891
 2796              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2797              		.loc 1 856 99 is_stmt 0 view .LVU892
 2798 116a 440FB664 		movzx	r12d, BYTE PTR -4[rsp]	# tmp957, %sfp
 2798      24FC
 2799 1170 C44299F7 		shlx	r10, QWORD PTR 8[r13], r12	# tmp761, MEM[base: _472, offset: 8B], tmp957
 2799      5508
GAS LISTING /tmp/cc7rm34x.s 			page 81


 2800              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2801              		.loc 1 856 54 view .LVU893
 2802 1176 0FB65424 		movzx	edx, BYTE PTR -8[rsp]	# tmp958, %sfp
 2802      F8
 2803 117b C442EBF7 		shrx	r8, QWORD PTR 0[r13], rdx	# tmp763, MEM[base: _472, offset: 0B], tmp958
 2803      4500
 2804              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2805              		.loc 1 856 72 view .LVU894
 2806 1181 4D09C2   		or	r10, r8	# tmp764, tmp763
 2807 1184 4983C508 		add	r13, 8	# ivtmp.214,
 2808 1188 4C8914F7 		mov	QWORD PTR [rdi+rsi*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2809              		.loc 1 855 48 is_stmt 1 view .LVU895
 2810              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2811              		.loc 1 855 57 is_stmt 0 view .LVU896
 2812 118c 4883C601 		add	rsi, 1	# copy_word,
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2813              		.loc 1 855 12 is_stmt 1 view .LVU897
 2814              	.L162:
 856:sieve_extend.c ****     }
 2815              		.loc 1 856 9 view .LVU898
 2816              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2817              		.loc 1 856 99 is_stmt 0 view .LVU899
 2818 1190 0FB64C24 		movzx	ecx, BYTE PTR -4[rsp]	# tmp959, %sfp
 2818      FC
 2819 1195 C442F1F7 		shlx	r9, QWORD PTR 8[r13], rcx	# tmp766, MEM[base: _472, offset: 8B], tmp959
 2819      4D08
 2820              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2821              		.loc 1 856 54 view .LVU900
 2822 119b 0FB65C24 		movzx	ebx, BYTE PTR -8[rsp]	# tmp960, %sfp
 2822      F8
 2823 11a0 C442E3F7 		shrx	r11, QWORD PTR 0[r13], rbx	# tmp768, MEM[base: _472, offset: 0B], tmp960
 2823      5D00
 2824              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2825              		.loc 1 856 72 view .LVU901
 2826 11a6 4D09D9   		or	r9, r11	# tmp769, tmp768
 2827 11a9 4983C508 		add	r13, 8	# ivtmp.214,
 2828 11ad 4C890CF7 		mov	QWORD PTR [rdi+rsi*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2829              		.loc 1 855 48 is_stmt 1 view .LVU902
 2830              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2831              		.loc 1 855 57 is_stmt 0 view .LVU903
 2832 11b1 4883C601 		add	rsi, 1	# copy_word,
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2833              		.loc 1 855 12 is_stmt 1 view .LVU904
 2834              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2835              		.loc 1 855 5 is_stmt 0 view .LVU905
 2836 11b5 4939F6   		cmp	r14, rsi	# destination_stop_word, copy_word
 2837 11b8 0F82D5F9 		jb	.L71	#,
GAS LISTING /tmp/cc7rm34x.s 			page 82


 2837      FFFF
 2838              	.L201:
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2839              		.loc 1 855 5 view .LVU906
 2840 11be 8B4424FC 		mov	eax, DWORD PTR -4[rsp]	# _182, %sfp
 2841 11c2 448B6424 		mov	r12d, DWORD PTR -8[rsp]	# _184, %sfp
 2841      F8
 2842              	.L70:
 856:sieve_extend.c ****     }
 2843              		.loc 1 856 9 is_stmt 1 view .LVU907
 2844              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2845              		.loc 1 856 54 is_stmt 0 view .LVU908
 2846 11c7 C4C29BF7 		shrx	rdx, QWORD PTR 0[r13], r12	# tmp684, MEM[base: _472, offset: 0B], _184
 2846      5500
 2847              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2848              		.loc 1 856 99 view .LVU909
 2849 11cd C442F9F7 		shlx	r10, QWORD PTR 8[r13], rax	# tmp682, MEM[base: _472, offset: 8B], _182
 2849      5508
 2850              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2851              		.loc 1 856 72 view .LVU910
 2852 11d3 4909D2   		or	r10, rdx	# tmp685, tmp684
 2853 11d6 4983C540 		add	r13, 64	# ivtmp.214,
 2854 11da 4C8914F7 		mov	QWORD PTR [rdi+rsi*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2855              		.loc 1 855 48 is_stmt 1 view .LVU911
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2856              		.loc 1 855 12 view .LVU912
 856:sieve_extend.c ****     }
 2857              		.loc 1 856 9 view .LVU913
 2858              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2859              		.loc 1 856 54 is_stmt 0 view .LVU914
 2860 11de C4C29BF7 		shrx	rcx, QWORD PTR -56[r13], r12	# tmp691, MEM[base: _472, offset: 0B], _184
 2860      4DC8
 2861              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2862              		.loc 1 856 99 view .LVU915
 2863 11e4 C442F9F7 		shlx	r8, QWORD PTR -48[r13], rax	# tmp689, MEM[base: _472, offset: 8B], _182
 2863      45D0
 2864              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2865              		.loc 1 856 72 view .LVU916
 2866 11ea 4909C8   		or	r8, rcx	# tmp692, tmp691
 2867 11ed 4C8944F7 		mov	QWORD PTR 8[rdi+rsi*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 2867      08
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2868              		.loc 1 855 48 is_stmt 1 view .LVU917
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2869              		.loc 1 855 12 view .LVU918
 856:sieve_extend.c ****     }
 2870              		.loc 1 856 9 view .LVU919
 2871              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2872              		.loc 1 856 54 is_stmt 0 view .LVU920
GAS LISTING /tmp/cc7rm34x.s 			page 83


 2873 11f2 C4429BF7 		shrx	r9, QWORD PTR -48[r13], r12	# tmp698, MEM[base: _472, offset: 0B], _184
 2873      4DD0
 2874              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2875              		.loc 1 856 99 view .LVU921
 2876 11f8 C4C2F9F7 		shlx	rbx, QWORD PTR -40[r13], rax	# tmp696, MEM[base: _472, offset: 8B], _182
 2876      5DD8
 2877              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2878              		.loc 1 856 72 view .LVU922
 2879 11fe 4C09CB   		or	rbx, r9	# tmp699, tmp698
 2880 1201 48895CF7 		mov	QWORD PTR 16[rdi+rsi*8], rbx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2880      10
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2881              		.loc 1 855 48 is_stmt 1 view .LVU923
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2882              		.loc 1 855 12 view .LVU924
 856:sieve_extend.c ****     }
 2883              		.loc 1 856 9 view .LVU925
 2884              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2885              		.loc 1 856 54 is_stmt 0 view .LVU926
 2886 1206 C4429BF7 		shrx	r10, QWORD PTR -40[r13], r12	# tmp705, MEM[base: _472, offset: 0B], _184
 2886      55D8
 2887              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2888              		.loc 1 856 99 view .LVU927
 2889 120c C442F9F7 		shlx	r11, QWORD PTR -32[r13], rax	# tmp703, MEM[base: _472, offset: 8B], _182
 2889      5DE0
 2890              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2891              		.loc 1 856 72 view .LVU928
 2892 1212 4D09D3   		or	r11, r10	# tmp706, tmp705
 2893 1215 4C895CF7 		mov	QWORD PTR 24[rdi+rsi*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2893      18
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2894              		.loc 1 855 48 is_stmt 1 view .LVU929
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2895              		.loc 1 855 12 view .LVU930
 856:sieve_extend.c ****     }
 2896              		.loc 1 856 9 view .LVU931
 2897              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2898              		.loc 1 856 99 is_stmt 0 view .LVU932
 2899 121a C4C2F9F7 		shlx	rdx, QWORD PTR -24[r13], rax	# tmp710, MEM[base: _472, offset: 8B], _182
 2899      55E8
 2900              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2901              		.loc 1 856 54 view .LVU933
 2902 1220 C4429BF7 		shrx	r8, QWORD PTR -32[r13], r12	# tmp712, MEM[base: _472, offset: 0B], _184
 2902      45E0
 2903              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2904              		.loc 1 856 72 view .LVU934
 2905 1226 4C09C2   		or	rdx, r8	# tmp713, tmp712
 2906 1229 488954F7 		mov	QWORD PTR 32[rdi+rsi*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2906      20
GAS LISTING /tmp/cc7rm34x.s 			page 84


 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2907              		.loc 1 855 48 is_stmt 1 view .LVU935
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2908              		.loc 1 855 12 view .LVU936
 856:sieve_extend.c ****     }
 2909              		.loc 1 856 9 view .LVU937
 2910              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2911              		.loc 1 856 99 is_stmt 0 view .LVU938
 2912 122e C4C2F9F7 		shlx	rcx, QWORD PTR -16[r13], rax	# tmp717, MEM[base: _472, offset: 8B], _182
 2912      4DF0
 2913              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2914              		.loc 1 856 54 view .LVU939
 2915 1234 C4C29BF7 		shrx	rbx, QWORD PTR -24[r13], r12	# tmp719, MEM[base: _472, offset: 0B], _184
 2915      5DE8
 2916              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2917              		.loc 1 856 72 view .LVU940
 2918 123a 4809D9   		or	rcx, rbx	# tmp720, tmp719
 2919 123d 48894CF7 		mov	QWORD PTR 40[rdi+rsi*8], rcx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2919      28
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2920              		.loc 1 855 48 is_stmt 1 view .LVU941
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2921              		.loc 1 855 12 view .LVU942
 856:sieve_extend.c ****     }
 2922              		.loc 1 856 9 view .LVU943
 2923              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2924              		.loc 1 856 99 is_stmt 0 view .LVU944
 2925 1242 C442F9F7 		shlx	r11, QWORD PTR -8[r13], rax	# tmp724, MEM[base: _472, offset: 8B], _182
 2925      5DF8
 2926              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2927              		.loc 1 856 54 view .LVU945
 2928 1248 C4429BF7 		shrx	r9, QWORD PTR -16[r13], r12	# tmp726, MEM[base: _472, offset: 0B], _184
 2928      4DF0
 2929              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2930              		.loc 1 856 72 view .LVU946
 2931 124e 4D09CB   		or	r11, r9	# tmp727, tmp726
 2932 1251 4C895CF7 		mov	QWORD PTR 48[rdi+rsi*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2932      30
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2933              		.loc 1 855 48 is_stmt 1 view .LVU947
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2934              		.loc 1 855 12 view .LVU948
 856:sieve_extend.c ****     }
 2935              		.loc 1 856 9 view .LVU949
 2936              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2937              		.loc 1 856 99 is_stmt 0 view .LVU950
 2938 1256 C442F9F7 		shlx	r10, QWORD PTR 0[r13], rax	# tmp731, MEM[base: _472, offset: 8B], _182
 2938      5500
 2939              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 85


 2940              		.loc 1 856 54 view .LVU951
 2941 125c C4C29BF7 		shrx	rdx, QWORD PTR -8[r13], r12	# tmp733, MEM[base: _472, offset: 0B], _184
 2941      55F8
 2942              	# sieve_extend.c:856:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 856:sieve_extend.c ****     }
 2943              		.loc 1 856 72 view .LVU952
 2944 1262 4909D2   		or	r10, rdx	# tmp734, tmp733
 2945 1265 4C8954F7 		mov	QWORD PTR 56[rdi+rsi*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2945      38
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2946              		.loc 1 855 48 is_stmt 1 view .LVU953
 2947              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2948              		.loc 1 855 57 is_stmt 0 view .LVU954
 2949 126a 4883C608 		add	rsi, 8	# copy_word,
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2950              		.loc 1 855 12 is_stmt 1 view .LVU955
 2951              	# sieve_extend.c:855:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 855:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2952              		.loc 1 855 5 is_stmt 0 view .LVU956
 2953 126e 4939F6   		cmp	r14, rsi	# destination_stop_word, copy_word
 2954 1271 0F8350FF 		jnb	.L70	#,
 2954      FFFF
 2955 1277 E917F9FF 		jmp	.L71	#
 2955      FF
 2956              	.LVL109:
 2957 127c 0F1F4000 		.p2align 4,,7
 2958              		.p2align 3
 2959              	.L209:
 830:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2960              		.loc 1 830 9 is_stmt 1 view .LVU957
 2961              	# sieve_extend.c:832:                                 & keepmask(copy_start) & chopmask(destination
 832:sieve_extend.c ****         return; // rapid exit for one word variant
 2962              		.loc 1 832 56 is_stmt 0 view .LVU958
 2963 1280 4C21D1   		and	rcx, r10	# _193, _189
 2964 1283 4921C8   		and	r8, rcx	# tmp415, tmp414
 2965              	# sieve_extend.c:830:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 830:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2966              		.loc 1 830 29 view .LVU959
 2967 1286 4D09C4   		or	r12, r8	# tmp416, tmp415
 2968 1289 4C8923   		mov	QWORD PTR [rbx], r12	# *_177, tmp416
 833:sieve_extend.c ****     }
 2969              		.loc 1 833 9 is_stmt 1 view .LVU960
 2970              	# sieve_extend.c:860: }
 2971              		.loc 1 860 1 is_stmt 0 view .LVU961
 2972 128c 488D65D8 		lea	rsp, -40[rbp]	#,
 2973 1290 5B       		pop	rbx	#
 2974 1291 415C     		pop	r12	#
 2975 1293 415D     		pop	r13	#
 2976 1295 415E     		pop	r14	#
 2977              	.LVL110:
 2978              		.loc 1 860 1 view .LVU962
 2979 1297 415F     		pop	r15	#
 2980 1299 5D       		pop	rbp	#
 2981              		.cfi_remember_state
 2982              		.cfi_def_cfa 7, 8
 2983 129a C3       		ret	
GAS LISTING /tmp/cc7rm34x.s 			page 86


 2984              	.LVL111:
 2985 129b 0F1F4400 		.p2align 4,,7
 2985      00
 2986              		.p2align 3
 2987              	.L73:
 2988              		.cfi_restore_state
 2989              	.LBB326:
 2990              	.LBB323:
 2991              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2992              		.loc 1 849 33 view .LVU963
 2993 12a0 48C74424 		mov	QWORD PTR -24[rsp], 0	# %sfp,
 2993      E8000000 
 2993      00
 2994 12a9 4C8D4601 		lea	r8, 1[rsi]	# tmp572,
 2995 12ad E9D2F9FF 		jmp	.L58	#
 2995      FF
 2996              	.LVL112:
 2997              		.p2align 4,,7
 2998 12b2 660F1F44 		.p2align 3
 2998      0000
 2999              	.L206:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3000              		.loc 1 849 33 view .LVU964
 3001 12b8 C5F877   		vzeroupper
 3002 12bb E9D3F8FF 		jmp	.L71	#
 3002      FF
 3003              	.LVL113:
 3004              		.p2align 4,,7
 3005              		.p2align 3
 3006              	.L76:
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3007              		.loc 1 849 33 view .LVU965
 3008              	.LBE323:
 3009              	.LBE326:
 3010              	# sieve_extend.c:826:     register counter_t source_word = wordindex(source_start);
 826:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 3011              		.loc 1 826 24 view .LVU966
 3012 12c0 48897424 		mov	QWORD PTR -48[rsp], rsi	# %sfp, source_word
 3012      D0
 3013              	# sieve_extend.c:840:     copy_word++;
 840:sieve_extend.c **** 
 3014              		.loc 1 840 14 view .LVU967
 3015 12c5 4989CD   		mov	r13, rcx	# copy_word, copy_word
 3016 12c8 4C8D5601 		lea	r10, 1[rsi]	# tmp634,
 3017 12cc E9B2F5FF 		jmp	.L65	#
 3017      FF
 3018              	.LVL114:
 3019              		.p2align 4,,7
 3020 12d1 0F1F8000 		.p2align 3
 3020      000000
 3021              	.L212:
 840:sieve_extend.c **** 
 3022              		.loc 1 840 14 view .LVU968
 3023 12d8 C5F877   		vzeroupper
 3024 12db E92DFDFF 		jmp	.L62	#
 3024      FF
GAS LISTING /tmp/cc7rm34x.s 			page 87


 3025              	.L211:
 3026              	.LBB327:
 3027              	.LBB324:
 850:sieve_extend.c ****         }
 3028              		.loc 1 850 13 is_stmt 1 view .LVU969
 3029              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 3030              		.loc 1 850 62 is_stmt 0 view .LVU970
 3031 12e0 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r9]	# tmp961, MEM[base: vectp.198_280, index: ivtmp.232_477, offset: 0B
 3031      01
 3032 12e5 BA200000 		mov	edx, 32	# ivtmp.232,
 3032      00
 3033              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 3034              		.loc 1 850 109 view .LVU971
 3035 12ea C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r10]	# tmp962, MEM[base: vectp.202_287, index: ivtmp.232_477, offset: 0
 3035      1A
 3036              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 3037              		.loc 1 850 62 view .LVU972
 3038 12ef C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.200, tmp961, _184
 3039              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 3040              		.loc 1 850 109 view .LVU973
 3041 12f3 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.204, tmp962, _182
 3042              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 3043              		.loc 1 850 80 view .LVU974
 3044 12f7 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.205, vect__49.200, vect__54.204
 3044      DA
 3045              	# sieve_extend.c:850:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 850:sieve_extend.c ****         }
 3046              		.loc 1 850 35 view .LVU975
 3047 12fc C57E7F1B 		vmovdqu	YMMWORD PTR [rbx], ymm11	# MEM[base: vectp.207_296, index: ivtmp.232_477, offset: 0B], vec
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3048              		.loc 1 849 58 is_stmt 1 view .LVU976
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3049              		.loc 1 849 40 view .LVU977
 3050 1300 E9FAF9FF 		jmp	.L154	#
 3050      FF
 3051              	.LVL115:
 3052              	.L72:
 3053              	# sieve_extend.c:849:         for (register counter_t i = 0; i <loop_distance; i++) {
 849:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3054              		.loc 1 849 33 is_stmt 0 view .LVU978
 3055 1305 4531D2   		xor	r10d, r10d	# tmp.196
 3056 1308 E916FCFF 		jmp	.L57	#
 3056      FF
 3057              	.LBE324:
 3058              	.LBE327:
 3059              		.cfi_endproc
 3060              	.LFE73:
 3062 130d 0F1F00   		.p2align 4
 3063              		.globl	compare_tuning_result
 3065              	compare_tuning_result:
 3066              	.LVL116:
 3067              	.LFB85:
GAS LISTING /tmp/cc7rm34x.s 			page 88


 861:sieve_extend.c **** 
 862:sieve_extend.c **** static void  extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const c
 863:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 864:sieve_extend.c ****    
 865:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 866:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 867:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 868:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 869:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 870:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 871:sieve_extend.c **** 
 872:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 873:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 874:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 875:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 876:sieve_extend.c ****         return; // rapid exit for one word variant
 877:sieve_extend.c ****     }
 878:sieve_extend.c **** 
 879:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 880:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 881:sieve_extend.c ****                                 & keepmask(copy_start);
 882:sieve_extend.c ****     
 883:sieve_extend.c ****     copy_word++;
 884:sieve_extend.c **** 
 885:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 886:sieve_extend.c **** 
 887:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 888:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 889:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 890:sieve_extend.c **** 
 891:sieve_extend.c **** }
 892:sieve_extend.c **** 
 893:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 894:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 895:sieve_extend.c **** 
 896:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 897:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 898:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 899:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 900:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 901:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 902:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 903:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 904:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 905:sieve_extend.c **** 
 906:sieve_extend.c ****     copy_word++;
 907:sieve_extend.c ****     source_word++;
 908:sieve_extend.c **** 
 909:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 910:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 911:sieve_extend.c ****     source_word += distance;
 912:sieve_extend.c ****     copy_word += distance;
 913:sieve_extend.c **** 
 914:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 915:sieve_extend.c **** 
 916:sieve_extend.c ****     #pragma GCC ivdep
 917:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
GAS LISTING /tmp/cc7rm34x.s 			page 89


 918:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 919:sieve_extend.c ****     }
 920:sieve_extend.c **** 
 921:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 922:sieve_extend.c **** 
 923:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 924:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 925:sieve_extend.c **** 
 926:sieve_extend.c ****     #pragma GCC ivdep
 927:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 928:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 929:sieve_extend.c **** 
 930:sieve_extend.c ****     #pragma GCC ivdep
 931:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 932:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 933:sieve_extend.c **** 
 934:sieve_extend.c **** 
 935:sieve_extend.c ****  }
 936:sieve_extend.c **** 
 937:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 938:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 939:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 940:sieve_extend.c ****         return; // rapid exit for small sizes
 941:sieve_extend.c ****     }
 942:sieve_extend.c **** 
 943:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 944:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 945:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 946:sieve_extend.c **** 
 947:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 948:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 949:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 950:sieve_extend.c **** }
 951:sieve_extend.c **** 
 952:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 953:sieve_extend.c ****     counter_t prime = prime_start;
 954:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 955:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 956:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 957:sieve_extend.c **** 
 958:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 959:sieve_extend.c ****     
 960:sieve_extend.c ****     // while (start <= block_stop) {
 961:sieve_extend.c ****     //     step  = prime * 2 + 1;
 962:sieve_extend.c ****     //     if unlikely(step > SMALLSTEP_FASTER) break;
 963:sieve_extend.c ****     //     if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 964:sieve_extend.c ****     //     setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 965:sieve_extend.c ****     //     prime = searchBitFalse(bitarray, prime+1 );
 966:sieve_extend.c ****     //     start = prime * prime * 2 + prime * 2;
 967:sieve_extend.c ****     // }
 968:sieve_extend.c ****     
 969:sieve_extend.c ****     // while (start <= block_stop) {
 970:sieve_extend.c ****     //     step  = prime * 2 + 1;
 971:sieve_extend.c ****     //     if unlikely(step > MEDIUMSTEP_FASTER) break;
 972:sieve_extend.c ****     //     if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 973:sieve_extend.c ****     //     setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 974:sieve_extend.c ****     //     prime = searchBitFalse(bitarray, prime+1 );
GAS LISTING /tmp/cc7rm34x.s 			page 90


 975:sieve_extend.c ****     //     start = prime * prime * 2 + prime * 2;
 976:sieve_extend.c ****     // }
 977:sieve_extend.c **** 
 978:sieve_extend.c **** //     counter_t start1 = 0; // save value
 979:sieve_extend.c **** //     counter_t step1 = 0; // save value
 980:sieve_extend.c **** //     while (start <= block_stop) {
 981:sieve_extend.c **** //         step  = prime * 2 + 1;
 982:sieve_extend.c **** //         if (step > 64) break;
 983:sieve_extend.c **** //         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 984:sieve_extend.c **** //         start1 = start; // save value
 985:sieve_extend.c **** //         step1 = step; // save value
 986:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 987:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 988:sieve_extend.c **** //         step  = prime * 2 + 1;
 989:sieve_extend.c **** //         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 990:sieve_extend.c **** //         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_st
 991:sieve_extend.c **** // //        else                     setBitsTrue_largeSteps(bitarray, start1, step1, block_stop);
 992:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 993:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 994:sieve_extend.c **** //     }
 995:sieve_extend.c **** 
 996:sieve_extend.c ****     while (start <= block_stop) {
 997:sieve_extend.c ****         step  = prime * 2 + 1;
 998:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 999:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
1000:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
1001:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
1002:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
1003:sieve_extend.c ****     }
1004:sieve_extend.c **** 
1005:sieve_extend.c ****     while (start <= block_stop) {
1006:sieve_extend.c ****         step  = prime * 2 + 1;
1007:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
1008:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
1009:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
1010:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
1011:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
1012:sieve_extend.c ****     }
1013:sieve_extend.c **** 
1014:sieve_extend.c ****     while (start <= block_stop) {
1015:sieve_extend.c ****         step  = prime * 2 + 1;
1016:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
1017:sieve_extend.c ****         if likely(start <= block_stop)
1018:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
1019:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
1020:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
1021:sieve_extend.c ****     }
1022:sieve_extend.c **** }
1023:sieve_extend.c **** 
1024:sieve_extend.c **** struct block {
1025:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
1026:sieve_extend.c ****     counter_t pattern_start; // start of pattern
1027:sieve_extend.c ****     counter_t prime; // next prime to be striped
1028:sieve_extend.c **** };
1029:sieve_extend.c **** 
1030:sieve_extend.c **** // returns prime that could not be handled:
1031:sieve_extend.c **** // start is too large
GAS LISTING /tmp/cc7rm34x.s 			page 91


1032:sieve_extend.c **** // range is too big
1033:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
1034:sieve_extend.c ****     register counter_t prime   = 0;
1035:sieve_extend.c ****     counter_t patternsize_bits = 1;
1036:sieve_extend.c ****     counter_t pattern_start    = 0;
1037:sieve_extend.c ****     counter_t range_stop       = block_start;
1038:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
1039:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
1040:sieve_extend.c **** 
1041:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
1042:sieve_extend.c ****     
1043:sieve_extend.c ****     for (;range_stop < block_stop;) {
1044:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
1045:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
1046:sieve_extend.c ****         if unlikely(start > block_stop) break;
1047:sieve_extend.c **** 
1048:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
1049:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
1050:sieve_extend.c **** 
1051:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
1052:sieve_extend.c ****         block.pattern_size = patternsize_bits;
1053:sieve_extend.c ****         block.pattern_start = pattern_start;
1054:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
1055:sieve_extend.c **** 
1056:sieve_extend.c ****         if (patternsize_bits>1) {
1057:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
1058:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
1059:sieve_extend.c ****         }
1060:sieve_extend.c ****         patternsize_bits *= step;
1061:sieve_extend.c **** 
1062:sieve_extend.c ****         // if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift
1063:sieve_extend.c ****         // else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, ran
1064:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitarray, start, step, rang
1065:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
1066:sieve_extend.c ****         block.prime = prime;
1067:sieve_extend.c ****     } 
1068:sieve_extend.c **** 
1069:sieve_extend.c ****     return block;
1070:sieve_extend.c **** }
1071:sieve_extend.c **** 
1072:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
1073:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
1074:sieve_extend.c ****     counter_t prime     = 0;
1075:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
1076:sieve_extend.c **** 
1077:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
1078:sieve_extend.c **** 
1079:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
1080:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
1081:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
1082:sieve_extend.c ****     prime = block.prime;
1083:sieve_extend.c **** 
1084:sieve_extend.c ****     // //#pragma GCC unroll 8
1085:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
1086:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
1087:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
1088:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
GAS LISTING /tmp/cc7rm34x.s 			page 92


1089:sieve_extend.c ****     } 
1090:sieve_extend.c **** 
1091:sieve_extend.c ****     return sieve;
1092:sieve_extend.c **** }
1093:sieve_extend.c **** 
1094:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1095:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
1096:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1097:sieve_extend.c ****         primeCount++;
1098:sieve_extend.c ****         if (factor < maxFactor/2) {
1099:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
1100:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
1101:sieve_extend.c ****         }
1102:sieve_extend.c ****     }
1103:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
1104:sieve_extend.c **** }
1105:sieve_extend.c **** 
1106:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
1107:sieve_extend.c ****     counter_t primeCount = 1;
1108:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1109:sieve_extend.c ****     return primeCount;
1110:sieve_extend.c **** }
1111:sieve_extend.c **** 
1112:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
1113:sieve_extend.c ****     printf("DeepAnalyzing\n");
1114:sieve_extend.c ****     counter_t warn_prime = 0;
1115:sieve_extend.c ****     counter_t warn_nonprime = 0;
1116:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1117:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
1118:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1119:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1120:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
1121:sieve_extend.c ****                 }
1122:sieve_extend.c ****             }
1123:sieve_extend.c ****         }
1124:sieve_extend.c ****         else {
1125:sieve_extend.c ****             counter_t c_prime = 0;
1126:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1127:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
1128:sieve_extend.c ****             }
1129:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
1130:sieve_extend.c ****         }
1131:sieve_extend.c ****     }
1132:sieve_extend.c **** }
1133:sieve_extend.c **** 
1134:sieve_extend.c **** 
1135:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1136:sieve_extend.c **** 
1137:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
1138:sieve_extend.c ****     counter_t valid_primes = 0;
1139:sieve_extend.c ****     switch(sieve->size) {
1140:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
1141:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1142:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1143:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1144:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1145:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
GAS LISTING /tmp/cc7rm34x.s 			page 93


1146:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1147:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1148:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1149:sieve_extend.c ****         default:            valid_primes= 0;
1150:sieve_extend.c ****     }
1151:sieve_extend.c **** 
1152:sieve_extend.c ****     int valid = (valid_primes == primecount);
1153:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
1154:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1155:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1156:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1157:sieve_extend.c ****     }
1158:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1159:sieve_extend.c ****     return (valid);
1160:sieve_extend.c **** }
1161:sieve_extend.c **** 
1162:sieve_extend.c **** void usage(char *name) {
1163:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1164:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1165:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1166:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1167:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1168:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1169:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1170:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1171:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1172:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1173:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1174:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1175:sieve_extend.c ****     exit(1);
1176:sieve_extend.c **** }
1177:sieve_extend.c **** 
1178:sieve_extend.c **** typedef struct  {
1179:sieve_extend.c ****     counter_t maxints;
1180:sieve_extend.c ****     counter_t blocksize_bits;
1181:sieve_extend.c ****     counter_t blocksize_kb;
1182:sieve_extend.c ****     counter_t free_bits;
1183:sieve_extend.c ****     counter_t smallstep_faster;
1184:sieve_extend.c ****     counter_t mediumstep_faster;
1185:sieve_extend.c ****     counter_t vectorstep_faster;
1186:sieve_extend.c ****     counter_t sample_max;
1187:sieve_extend.c ****     double    sample_duration;
1188:sieve_extend.c ****     counter_t passes;
1189:sieve_extend.c ****     double    elapsed_time;
1190:sieve_extend.c ****     double    avg;
1191:sieve_extend.c **** } tuning_result_type;
1192:sieve_extend.c **** 
1193:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3068              		.loc 1 1193 57 is_stmt 1 view -0
 3069              		.cfi_startproc
 3070              		.loc 1 1193 57 is_stmt 0 view .LVU980
 3071 1310 F30F1EFA 		endbr64	
1194:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3072              		.loc 1 1194 5 is_stmt 1 view .LVU981
 3073              	.LVL117:
1195:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3074              		.loc 1 1195 5 view .LVU982
GAS LISTING /tmp/cc7rm34x.s 			page 94


1196:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3075              		.loc 1 1196 5 view .LVU983
 3076              	# sieve_extend.c:1196:     return (resultB->avg > resultA->avg ? 1 : -1);
 3077              		.loc 1 1196 45 is_stmt 0 view .LVU984
 3078 1314 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 3078      58
 3079 1319 31C0     		xor	eax, eax	# <retval>
 3080 131b C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 3080      58
 3081 1320 0F97C0   		seta	al	#, <retval>
 3082 1323 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3083              	# sieve_extend.c:1197: }
1197:sieve_extend.c **** }
 3084              		.loc 1 1197 1 view .LVU985
 3085 1327 C3       		ret	
 3086              		.cfi_endproc
 3087              	.LFE85:
 3089 1328 0F1F8400 		.p2align 4
 3089      00000000 
 3091              	setBitsTrue_largeRange_vector:
 3092              	.LVL118:
 3093              	.LFB67:
 497:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3094              		.loc 1 497 153 is_stmt 1 view -0
 3095              		.cfi_startproc
 497:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3096              		.loc 1 497 153 is_stmt 0 view .LVU987
 3097 1330 55       		push	rbp	#
 3098              		.cfi_def_cfa_offset 16
 3099              		.cfi_offset 6, -16
 3100 1331 4889E5   		mov	rbp, rsp	#,
 3101              		.cfi_def_cfa_register 6
 3102 1334 4157     		push	r15	#
 3103 1336 4156     		push	r14	#
 3104 1338 4155     		push	r13	#
 3105 133a 4154     		push	r12	#
 3106 133c 53       		push	rbx	#
 3107              		.cfi_offset 15, -24
 3108              		.cfi_offset 14, -32
 3109              		.cfi_offset 13, -40
 3110              		.cfi_offset 12, -48
 3111              		.cfi_offset 3, -56
 3112 133d 4889D3   		mov	rbx, rdx	# step, tmp418
 3113 1340 4883E4E0 		and	rsp, -32	#,
 3114 1344 488D6424 		lea	rsp, -64[rsp]	#,
 3114      C0
 3115              	# sieve_extend.c:497: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 497:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3116              		.loc 1 497 153 view .LVU988
 3117 1349 64488B04 		mov	rax, QWORD PTR fs:40	# tmp420, MEM[(<address-space-1> long unsigned int *)40B]
 3117      25280000 
 3117      00
 3118 1352 48894424 		mov	QWORD PTR 56[rsp], rax	# D.6765, tmp420
 3118      38
 3119 1357 31C0     		xor	eax, eax	# tmp420
 498:sieve_extend.c **** 
 3120              		.loc 1 498 5 is_stmt 1 view .LVU989
GAS LISTING /tmp/cc7rm34x.s 			page 95


 506:sieve_extend.c ****     
 3121              		.loc 1 506 5 view .LVU990
 3122              	.LVL119:
 512:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3123              		.loc 1 512 5 view .LVU991
 3124              	# sieve_extend.c:512:     counter_t range_start_atvector = vectorstart(range_start);
 512:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3125              		.loc 1 512 15 is_stmt 0 view .LVU992
 3126 1359 4889F0   		mov	rax, rsi	# range_start_atvector, range_start
 3127 135c 30C0     		xor	al, al	# range_start_atvector
 3128              	.LVL120:
 513:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3129              		.loc 1 513 5 is_stmt 1 view .LVU993
 3130              	# sieve_extend.c:513:     if likely((range_start_atvector + step) < range_start) { // not the first
 513:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3131              		.loc 1 513 8 is_stmt 0 view .LVU994
 3132 135e 488D1410 		lea	rdx, [rax+rdx]	# tmp178,
 3133              	.LVL121:
 513:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3134              		.loc 1 513 8 view .LVU995
 3135 1362 4839F2   		cmp	rdx, rsi	# tmp178, range_start
 3136 1365 0F83F500 		jnb	.L217	#,
 3136      0000
 514:sieve_extend.c **** 
 3137              		.loc 1 514 9 is_stmt 1 view .LVU996
 516:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3138              		.loc 1 516 9 view .LVU997
 3139              	# sieve_extend.c:516:         range_start_atvector += VECTOR_SIZE; // find next vector
 516:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3140              		.loc 1 516 30 is_stmt 0 view .LVU998
 3141 136b 48050001 		add	rax, 256	# range_start_atvector,
 3141      0000
 3142              	.LVL122:
 517:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3143              		.loc 1 517 9 is_stmt 1 view .LVU999
 3144              	# sieve_extend.c:517:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 517:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3145              		.loc 1 517 12 is_stmt 0 view .LVU1000
 3146 1371 4839C8   		cmp	rax, rcx	# range_start_atvector, range_stop
 3147 1374 0F878408 		ja	.L218	#,
 3147      0000
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3148              		.loc 1 529 16 is_stmt 1 view .LVU1001
 3149              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3150              		.loc 1 529 9 is_stmt 0 view .LVU1002
 3151 137a 4839C6   		cmp	rsi, rax	# range_start, range_start_atvector
 3152              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3153              		.loc 1 530 54 view .LVU1003
 3154 137d 41B80100 		mov	r8d, 1	# tmp188,
 3154      0000
 3155              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3156              		.loc 1 529 9 view .LVU1004
 3157 1383 0F87D700 		ja	.L217	#,
 3157      0000
GAS LISTING /tmp/cc7rm34x.s 			page 96


 3158              	.LVL123:
 3159              	.L219:
 530:sieve_extend.c ****     }
 3160              		.loc 1 530 13 is_stmt 1 discriminator 2 view .LVU1005
 3161              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3162              		.loc 1 530 51 is_stmt 0 discriminator 2 view .LVU1006
 3163 1389 4989F2   		mov	r10, rsi	# tmp184, range_start
 3164              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3165              		.loc 1 530 54 discriminator 2 view .LVU1007
 3166 138c C442C9F7 		shlx	r9, r8, rsi	# tmp187, tmp188, range_start
 3166      C8
 3167              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3168              		.loc 1 530 51 discriminator 2 view .LVU1008
 3169 1391 49C1EA06 		shr	r10, 6	# tmp184,
 3170              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3171              		.loc 1 529 65 discriminator 2 view .LVU1009
 3172 1395 4801DE   		add	rsi, rbx	# range_start, step
 3173              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3174              		.loc 1 530 51 discriminator 2 view .LVU1010
 3175 1398 4E090CD7 		or	QWORD PTR [rdi+r10*8], r9	# *_21, tmp187
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3176              		.loc 1 529 53 is_stmt 1 discriminator 2 view .LVU1011
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3177              		.loc 1 529 16 discriminator 2 view .LVU1012
 3178              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3179              		.loc 1 529 9 is_stmt 0 discriminator 2 view .LVU1013
 3180 139c 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3181 139f 0F82BB00 		jb	.L217	#,
 3181      0000
 530:sieve_extend.c ****     }
 3182              		.loc 1 530 13 is_stmt 1 view .LVU1014
 3183              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3184              		.loc 1 530 51 is_stmt 0 view .LVU1015
 3185 13a5 4989F3   		mov	r11, rsi	# tmp388, range_start
 3186              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3187              		.loc 1 530 54 view .LVU1016
 3188 13a8 C442C9F7 		shlx	r12, r8, rsi	# tmp391, tmp188, range_start
 3188      E0
 3189              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3190              		.loc 1 530 51 view .LVU1017
 3191 13ad 49C1EB06 		shr	r11, 6	# tmp388,
 3192              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3193              		.loc 1 529 65 view .LVU1018
 3194 13b1 4801DE   		add	rsi, rbx	# range_start, step
 3195              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3196              		.loc 1 530 51 view .LVU1019
GAS LISTING /tmp/cc7rm34x.s 			page 97


 3197 13b4 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_21, tmp391
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3198              		.loc 1 529 53 is_stmt 1 view .LVU1020
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3199              		.loc 1 529 16 view .LVU1021
 3200              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3201              		.loc 1 529 9 is_stmt 0 view .LVU1022
 3202 13b8 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3203 13bb 0F829F00 		jb	.L217	#,
 3203      0000
 530:sieve_extend.c ****     }
 3204              		.loc 1 530 13 is_stmt 1 view .LVU1023
 3205              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3206              		.loc 1 530 51 is_stmt 0 view .LVU1024
 3207 13c1 4989F5   		mov	r13, rsi	# tmp392, range_start
 3208              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3209              		.loc 1 530 54 view .LVU1025
 3210 13c4 C442C9F7 		shlx	r14, r8, rsi	# tmp395, tmp188, range_start
 3210      F0
 3211              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3212              		.loc 1 530 51 view .LVU1026
 3213 13c9 49C1ED06 		shr	r13, 6	# tmp392,
 3214              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3215              		.loc 1 529 65 view .LVU1027
 3216 13cd 4801DE   		add	rsi, rbx	# range_start, step
 3217              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3218              		.loc 1 530 51 view .LVU1028
 3219 13d0 4E0934EF 		or	QWORD PTR [rdi+r13*8], r14	# *_21, tmp395
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3220              		.loc 1 529 53 is_stmt 1 view .LVU1029
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3221              		.loc 1 529 16 view .LVU1030
 3222              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3223              		.loc 1 529 9 is_stmt 0 view .LVU1031
 3224 13d4 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3225 13d7 0F828300 		jb	.L217	#,
 3225      0000
 530:sieve_extend.c ****     }
 3226              		.loc 1 530 13 is_stmt 1 view .LVU1032
 3227              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3228              		.loc 1 530 51 is_stmt 0 view .LVU1033
 3229 13dd 4989F7   		mov	r15, rsi	# tmp396, range_start
 3230              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3231              		.loc 1 530 54 view .LVU1034
 3232 13e0 C4C2C9F7 		shlx	rdx, r8, rsi	# tmp399, tmp188, range_start
 3232      D0
 3233              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 98


 3234              		.loc 1 530 51 view .LVU1035
 3235 13e5 49C1EF06 		shr	r15, 6	# tmp396,
 3236              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3237              		.loc 1 529 65 view .LVU1036
 3238 13e9 4801DE   		add	rsi, rbx	# range_start, step
 3239              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3240              		.loc 1 530 51 view .LVU1037
 3241 13ec 4A0914FF 		or	QWORD PTR [rdi+r15*8], rdx	# *_21, tmp399
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3242              		.loc 1 529 53 is_stmt 1 view .LVU1038
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3243              		.loc 1 529 16 view .LVU1039
 3244              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3245              		.loc 1 529 9 is_stmt 0 view .LVU1040
 3246 13f0 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3247 13f3 726B     		jb	.L217	#,
 530:sieve_extend.c ****     }
 3248              		.loc 1 530 13 is_stmt 1 view .LVU1041
 3249              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3250              		.loc 1 530 51 is_stmt 0 view .LVU1042
 3251 13f5 4989F2   		mov	r10, rsi	# tmp400, range_start
 3252              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3253              		.loc 1 530 54 view .LVU1043
 3254 13f8 C442C9F7 		shlx	r9, r8, rsi	# tmp403, tmp188, range_start
 3254      C8
 3255              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3256              		.loc 1 530 51 view .LVU1044
 3257 13fd 49C1EA06 		shr	r10, 6	# tmp400,
 3258              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3259              		.loc 1 529 65 view .LVU1045
 3260 1401 4801DE   		add	rsi, rbx	# range_start, step
 3261              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3262              		.loc 1 530 51 view .LVU1046
 3263 1404 4E090CD7 		or	QWORD PTR [rdi+r10*8], r9	# *_21, tmp403
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3264              		.loc 1 529 53 is_stmt 1 view .LVU1047
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3265              		.loc 1 529 16 view .LVU1048
 3266              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3267              		.loc 1 529 9 is_stmt 0 view .LVU1049
 3268 1408 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3269 140b 7253     		jb	.L217	#,
 530:sieve_extend.c ****     }
 3270              		.loc 1 530 13 is_stmt 1 view .LVU1050
 3271              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3272              		.loc 1 530 51 is_stmt 0 view .LVU1051
 3273 140d 4989F3   		mov	r11, rsi	# tmp404, range_start
GAS LISTING /tmp/cc7rm34x.s 			page 99


 3274              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3275              		.loc 1 530 54 view .LVU1052
 3276 1410 C442C9F7 		shlx	r12, r8, rsi	# tmp407, tmp188, range_start
 3276      E0
 3277              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3278              		.loc 1 530 51 view .LVU1053
 3279 1415 49C1EB06 		shr	r11, 6	# tmp404,
 3280              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3281              		.loc 1 529 65 view .LVU1054
 3282 1419 4801DE   		add	rsi, rbx	# range_start, step
 3283              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3284              		.loc 1 530 51 view .LVU1055
 3285 141c 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_21, tmp407
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3286              		.loc 1 529 53 is_stmt 1 view .LVU1056
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3287              		.loc 1 529 16 view .LVU1057
 3288              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3289              		.loc 1 529 9 is_stmt 0 view .LVU1058
 3290 1420 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3291 1423 723B     		jb	.L217	#,
 530:sieve_extend.c ****     }
 3292              		.loc 1 530 13 is_stmt 1 view .LVU1059
 3293              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3294              		.loc 1 530 51 is_stmt 0 view .LVU1060
 3295 1425 4989F5   		mov	r13, rsi	# tmp408, range_start
 3296              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3297              		.loc 1 530 54 view .LVU1061
 3298 1428 C442C9F7 		shlx	r14, r8, rsi	# tmp411, tmp188, range_start
 3298      F0
 3299              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3300              		.loc 1 530 51 view .LVU1062
 3301 142d 49C1ED06 		shr	r13, 6	# tmp408,
 3302              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3303              		.loc 1 529 65 view .LVU1063
 3304 1431 4801DE   		add	rsi, rbx	# range_start, step
 3305              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3306              		.loc 1 530 51 view .LVU1064
 3307 1434 4E0934EF 		or	QWORD PTR [rdi+r13*8], r14	# *_21, tmp411
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3308              		.loc 1 529 53 is_stmt 1 view .LVU1065
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3309              		.loc 1 529 16 view .LVU1066
 3310              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3311              		.loc 1 529 9 is_stmt 0 view .LVU1067
 3312 1438 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
GAS LISTING /tmp/cc7rm34x.s 			page 100


 3313 143b 7223     		jb	.L217	#,
 530:sieve_extend.c ****     }
 3314              		.loc 1 530 13 is_stmt 1 view .LVU1068
 3315              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3316              		.loc 1 530 51 is_stmt 0 view .LVU1069
 3317 143d 4989F7   		mov	r15, rsi	# tmp412, range_start
 3318              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3319              		.loc 1 530 54 view .LVU1070
 3320 1440 C4C2C9F7 		shlx	rdx, r8, rsi	# tmp415, tmp188, range_start
 3320      D0
 3321              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3322              		.loc 1 530 51 view .LVU1071
 3323 1445 49C1EF06 		shr	r15, 6	# tmp412,
 3324              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3325              		.loc 1 529 65 view .LVU1072
 3326 1449 4801DE   		add	rsi, rbx	# range_start, step
 3327              	# sieve_extend.c:530:             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 530:sieve_extend.c ****     }
 3328              		.loc 1 530 51 view .LVU1073
 3329 144c 4A0914FF 		or	QWORD PTR [rdi+r15*8], rdx	# *_21, tmp415
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3330              		.loc 1 529 53 is_stmt 1 view .LVU1074
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3331              		.loc 1 529 16 view .LVU1075
 3332              	# sieve_extend.c:529:         for (; range_start <= range_start_atvector; range_start += step) 
 529:sieve_extend.c ****             bitarray_word[wordindex(range_start)] |= markmask(range_start);
 3333              		.loc 1 529 9 is_stmt 0 view .LVU1076
 3334 1450 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3335 1453 0F8330FF 		jnb	.L219	#,
 3335      FFFF
 3336 1459 0F1F8000 		.p2align 4
 3336      000000
 3337              		.p2align 3
 3338              	.L217:
 533:sieve_extend.c **** 
 3339              		.loc 1 533 5 is_stmt 1 view .LVU1077
 3340              	# sieve_extend.c:533:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 533:sieve_extend.c **** 
 3341              		.loc 1 533 42 is_stmt 0 view .LVU1078
 3342 1460 4989DA   		mov	r10, rbx	# tmp189, step
 3343 1463 49C1E208 		sal	r10, 8	# tmp189,
 3344 1467 4901F2   		add	r10, rsi	# tmp190, range_start
 3345              	# sieve_extend.c:533:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 533:sieve_extend.c **** 
 3346              		.loc 1 533 21 view .LVU1079
 3347 146a 4939CA   		cmp	r10, rcx	# tmp190, range_stop
 3348 146d 4C0F47D1 		cmova	r10, rcx	# tmp190,, range_stop_unique, range_stop
 3349              	.LVL124:
 3350              	.LBB333:
 537:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3351              		.loc 1 537 10 is_stmt 1 view .LVU1080
 537:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3352              		.loc 1 537 41 view .LVU1081
GAS LISTING /tmp/cc7rm34x.s 			page 101


 3353              	# sieve_extend.c:537:     for (counter_t index = range_start; index < range_stop_unique;) {
 537:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3354              		.loc 1 537 5 is_stmt 0 view .LVU1082
 3355 1471 4C39D6   		cmp	rsi, r10	# range_start, range_stop_unique
 3356 1474 0F832904 		jnb	.L216	#,
 3356      0000
 3357              	.LBB334:
 3358              	.LBB335:
 3359              	.LBB336:
 3360              	# sieve_extend.c:439:     const counter_t range_stop_vector = vectorindex(range_stop);
 439:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vec
 3361              		.loc 1 439 21 view .LVU1083
 3362 147a 48C1E908 		shr	rcx, 8	# range_stop,
 3363              	.LVL125:
 3364              	# sieve_extend.c:441:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 441:sieve_extend.c ****     
 3365              		.loc 1 441 115 view .LVU1084
 3366 147e 488D149B 		lea	rdx, [rbx+rbx*4]	# tmp193,
 3367              	# sieve_extend.c:439:     const counter_t range_stop_vector = vectorindex(range_stop);
 439:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vec
 3368              		.loc 1 439 21 view .LVU1085
 3369 1482 4989C8   		mov	r8, rcx	# range_stop_vector, range_stop
 3370              	# sieve_extend.c:441:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 441:sieve_extend.c ****     
 3371              		.loc 1 441 140 view .LVU1086
 3372 1485 4889C8   		mov	rax, rcx	# tmp194, range_stop_vector
 3373              	.LVL126:
 441:sieve_extend.c ****     
 3374              		.loc 1 441 140 view .LVU1087
 3375 1488 4829D0   		sub	rax, rdx	# tmp194, tmp193
 3376              	# sieve_extend.c:453:     register const bitvector_t* __restrict range_stop_ptr = &bitarray[(range_
 453:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 3377              		.loc 1 453 70 view .LVU1088
 3378 148b 4D89C1   		mov	r9, r8	# tmp195, range_stop_vector
 3379              	# sieve_extend.c:441:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 441:sieve_extend.c ****     
 3380              		.loc 1 441 90 view .LVU1089
 3381 148e 48C1E005 		sal	rax, 5	# iftmp.57_72,
 3382              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3383              		.loc 1 446 38 view .LVU1090
 3384 1492 4889D9   		mov	rcx, rbx	# _79, step
 3385              	# sieve_extend.c:453:     register const bitvector_t* __restrict range_stop_ptr = &bitarray[(range_
 453:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 3386              		.loc 1 453 70 view .LVU1091
 3387 1495 49C1E105 		sal	r9, 5	# tmp195,
 3388 1499 4801F8   		add	rax, rdi	# tmp215, bitarray_word
 3389              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3390              		.loc 1 446 38 view .LVU1092
 3391 149c 48C1E105 		sal	rcx, 5	# _79,
 3392              	# sieve_extend.c:453:     register const bitvector_t* __restrict range_stop_ptr = &bitarray[(range_
 453:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 3393              		.loc 1 453 44 view .LVU1093
 3394 14a0 4901F9   		add	r9, rdi	# range_stop_ptr, bitarray_word
 3395 14a3 4883FB01 		cmp	rbx, 1	# step,
 3396 14a7 0F851904 		jne	.L373	#,
GAS LISTING /tmp/cc7rm34x.s 			page 102


 3396      0000
 3397 14ad 4983F805 		cmp	r8, 5	# range_stop_vector,
 3398              	.LBE336:
 3399              	.LBE335:
 3400              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3401              		.loc 1 546 31 view .LVU1094
 3402 14b1 41BB0100 		mov	r11d, 1	# tmp220,
 3402      0000
 3403              	# sieve_extend.c:539:         register bitvector_t quadmask = { };
 539:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3404              		.loc 1 539 30 view .LVU1095
 3405 14b7 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp216
 3406 14bb 480F46C7 		cmovbe	rax, rdi	# bitarray_word,, tmp215
 3407 14bf 4989C0   		mov	r8, rax	# fast_loop_ptr, tmp215
 3408              	.LVL127:
 3409 14c2 66662E0F 		.p2align 4
 3409      1F840000 
 3409      0000000F 
 3409      1F00
 3410              		.p2align 3
 3411              	.L233:
 538:sieve_extend.c ****         register bitvector_t quadmask = { };
 3412              		.loc 1 538 9 is_stmt 1 view .LVU1096
 3413              	# sieve_extend.c:538:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 538:sieve_extend.c ****         register bitvector_t quadmask = { };
 3414              		.loc 1 538 54 is_stmt 0 view .LVU1097
 3415 14d0 4889F0   		mov	rax, rsi	# _180, range_start
 3416              	# sieve_extend.c:540:         register counter_t word = wordindex(index) - current_vector_start_wor
 540:sieve_extend.c ****         
 3417              		.loc 1 540 35 view .LVU1098
 3418 14d3 4889F2   		mov	rdx, rsi	# tmp217, range_start
 3419              	# sieve_extend.c:538:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 538:sieve_extend.c ****         register bitvector_t quadmask = { };
 3420              		.loc 1 538 54 view .LVU1099
 3421 14d6 48C1E808 		shr	rax, 8	# _180,
 3422              	# sieve_extend.c:540:         register counter_t word = wordindex(index) - current_vector_start_wor
 540:sieve_extend.c ****         
 3423              		.loc 1 540 35 view .LVU1100
 3424 14da 48C1EA06 		shr	rdx, 6	# tmp217,
 3425              	# sieve_extend.c:538:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 538:sieve_extend.c ****         register bitvector_t quadmask = { };
 3426              		.loc 1 538 25 view .LVU1101
 3427 14de 4C8D3C85 		lea	r15, 0[0+rax*4]	# current_vector_start_word,
 3427      00000000 
 3428              	.LVL128:
 539:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3429              		.loc 1 539 9 is_stmt 1 view .LVU1102
 3430              	# sieve_extend.c:539:         register bitvector_t quadmask = { };
 539:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3431              		.loc 1 539 30 is_stmt 0 view .LVU1103
 3432 14e6 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp216
 3432      24
 540:sieve_extend.c ****         
 3433              		.loc 1 540 9 is_stmt 1 view .LVU1104
 3434              	# sieve_extend.c:540:         register counter_t word = wordindex(index) - current_vector_start_wor
 540:sieve_extend.c ****         
GAS LISTING /tmp/cc7rm34x.s 			page 103


 3435              		.loc 1 540 28 is_stmt 0 view .LVU1105
 3436 14eb 4C29FA   		sub	rdx, r15	# word, current_vector_start_word
 3437              	.LVL129:
 3438              	.L228:
 546:sieve_extend.c ****             index += step;
 3439              		.loc 1 546 13 is_stmt 1 view .LVU1106
 3440              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3441              		.loc 1 546 31 is_stmt 0 view .LVU1107
 3442 14ee C442C9F7 		shlx	r14, r11, rsi	# tmp219, tmp220, range_start
 3442      F3
 3443              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3444              		.loc 1 546 28 view .LVU1108
 3445 14f3 4C0934D4 		or	QWORD PTR [rsp+rdx*8], r14	# quadmask, tmp219
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3446              		.loc 1 547 13 is_stmt 1 view .LVU1109
 3447              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3448              		.loc 1 547 19 is_stmt 0 view .LVU1110
 3449 14f7 488D5601 		lea	rdx, 1[rsi]	# tmp237,
 3450              	.LVL130:
 3451              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3452              		.loc 1 548 20 view .LVU1111
 3453 14fb 4889D1   		mov	rcx, rdx	# tmp221, range_start
 3454              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3455              		.loc 1 547 19 view .LVU1112
 3456 14fe 4889D6   		mov	rsi, rdx	# range_start, tmp237
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3457              		.loc 1 548 13 is_stmt 1 view .LVU1113
 3458              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3459              		.loc 1 548 20 is_stmt 0 view .LVU1114
 3460 1501 48C1E906 		shr	rcx, 6	# tmp221,
 3461              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3462              		.loc 1 548 18 view .LVU1115
 3463 1505 4C29F9   		sub	rcx, r15	# word, current_vector_start_word
 549:sieve_extend.c ****         
 3464              		.loc 1 549 17 is_stmt 1 view .LVU1116
 3465              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 3466              		.loc 1 549 9 is_stmt 0 view .LVU1117
 3467 1508 4883F903 		cmp	rcx, 3	# word,
 3468 150c 0F87DE00 		ja	.L367	#,
 3468      0000
 546:sieve_extend.c ****             index += step;
 3469              		.loc 1 546 13 is_stmt 1 view .LVU1118
 3470              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3471              		.loc 1 547 19 is_stmt 0 view .LVU1119
 3472 1512 4883C601 		add	rsi, 1	# range_start,
 3473              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3474              		.loc 1 546 31 view .LVU1120
GAS LISTING /tmp/cc7rm34x.s 			page 104


 3475 1516 C4C2E9F7 		shlx	rbx, r11, rdx	# tmp318, tmp220, range_start
 3475      DB
 3476              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3477              		.loc 1 548 20 view .LVU1121
 3478 151b 4989F4   		mov	r12, rsi	# tmp319, range_start
 3479              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3480              		.loc 1 546 28 view .LVU1122
 3481 151e 48091CCC 		or	QWORD PTR [rsp+rcx*8], rbx	# quadmask, tmp318
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3482              		.loc 1 547 13 is_stmt 1 view .LVU1123
 3483              	.LVL131:
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3484              		.loc 1 548 13 view .LVU1124
 3485              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3486              		.loc 1 548 20 is_stmt 0 view .LVU1125
 3487 1522 49C1EC06 		shr	r12, 6	# tmp319,
 3488              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3489              		.loc 1 548 18 view .LVU1126
 3490 1526 4D29FC   		sub	r12, r15	# word, current_vector_start_word
 549:sieve_extend.c ****         
 3491              		.loc 1 549 17 is_stmt 1 view .LVU1127
 3492              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 3493              		.loc 1 549 9 is_stmt 0 view .LVU1128
 3494 1529 4983FC03 		cmp	r12, 3	# word,
 3495 152d 0F87BD00 		ja	.L367	#,
 3495      0000
 546:sieve_extend.c ****             index += step;
 3496              		.loc 1 546 13 is_stmt 1 view .LVU1129
 3497              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3498              		.loc 1 546 31 is_stmt 0 view .LVU1130
 3499 1533 C4C2C9F7 		shlx	rsi, r11, rsi	# tmp321, tmp220, range_start
 3499      F3
 3500              	.LVL132:
 3501              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3502              		.loc 1 546 28 view .LVU1131
 3503 1538 4A0934E4 		or	QWORD PTR [rsp+r12*8], rsi	# quadmask, tmp321
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3504              		.loc 1 547 13 is_stmt 1 view .LVU1132
 3505              	.LVL133:
 3506              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3507              		.loc 1 547 19 is_stmt 0 view .LVU1133
 3508 153c 488D7202 		lea	rsi, 2[rdx]	# range_start,
 3509              	.LVL134:
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3510              		.loc 1 548 13 is_stmt 1 view .LVU1134
 3511              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3512              		.loc 1 548 20 is_stmt 0 view .LVU1135
 3513 1540 4989F5   		mov	r13, rsi	# tmp322, range_start
GAS LISTING /tmp/cc7rm34x.s 			page 105


 3514 1543 49C1ED06 		shr	r13, 6	# tmp322,
 3515              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3516              		.loc 1 548 18 view .LVU1136
 3517 1547 4D29FD   		sub	r13, r15	# word, current_vector_start_word
 549:sieve_extend.c ****         
 3518              		.loc 1 549 17 is_stmt 1 view .LVU1137
 3519              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 3520              		.loc 1 549 9 is_stmt 0 view .LVU1138
 3521 154a 4983FD03 		cmp	r13, 3	# word,
 3522 154e 0F879C00 		ja	.L367	#,
 3522      0000
 546:sieve_extend.c ****             index += step;
 3523              		.loc 1 546 13 is_stmt 1 view .LVU1139
 3524              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3525              		.loc 1 546 31 is_stmt 0 view .LVU1140
 3526 1554 C442C9F7 		shlx	r14, r11, rsi	# tmp324, tmp220, range_start
 3526      F3
 3527              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3528              		.loc 1 547 19 view .LVU1141
 3529 1559 488D7203 		lea	rsi, 3[rdx]	# range_start,
 3530              	.LVL135:
 3531              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3532              		.loc 1 548 20 view .LVU1142
 3533 155d 4889F1   		mov	rcx, rsi	# tmp325, range_start
 3534              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3535              		.loc 1 546 28 view .LVU1143
 3536 1560 4E0934EC 		or	QWORD PTR [rsp+r13*8], r14	# quadmask, tmp324
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3537              		.loc 1 547 13 is_stmt 1 view .LVU1144
 3538              	.LVL136:
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3539              		.loc 1 548 13 view .LVU1145
 3540              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3541              		.loc 1 548 20 is_stmt 0 view .LVU1146
 3542 1564 48C1E906 		shr	rcx, 6	# tmp325,
 3543              	.LVL137:
 3544              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3545              		.loc 1 548 18 view .LVU1147
 3546 1568 4C29F9   		sub	rcx, r15	# word, current_vector_start_word
 549:sieve_extend.c ****         
 3547              		.loc 1 549 17 is_stmt 1 view .LVU1148
 3548              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 3549              		.loc 1 549 9 is_stmt 0 view .LVU1149
 3550 156b 4883F903 		cmp	rcx, 3	# word,
 3551 156f 777F     		ja	.L367	#,
 546:sieve_extend.c ****             index += step;
 3552              		.loc 1 546 13 is_stmt 1 view .LVU1150
 3553              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
GAS LISTING /tmp/cc7rm34x.s 			page 106


 546:sieve_extend.c ****             index += step;
 3554              		.loc 1 546 31 is_stmt 0 view .LVU1151
 3555 1571 C4C2C9F7 		shlx	rbx, r11, rsi	# tmp327, tmp220, range_start
 3555      DB
 3556              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3557              		.loc 1 547 19 view .LVU1152
 3558 1576 488D7204 		lea	rsi, 4[rdx]	# range_start,
 3559              	.LVL138:
 3560              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3561              		.loc 1 548 20 view .LVU1153
 3562 157a 4989F4   		mov	r12, rsi	# tmp328, range_start
 3563              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3564              		.loc 1 546 28 view .LVU1154
 3565 157d 48091CCC 		or	QWORD PTR [rsp+rcx*8], rbx	# quadmask, tmp327
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3566              		.loc 1 547 13 is_stmt 1 view .LVU1155
 3567              	.LVL139:
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3568              		.loc 1 548 13 view .LVU1156
 3569              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3570              		.loc 1 548 20 is_stmt 0 view .LVU1157
 3571 1581 49C1EC06 		shr	r12, 6	# tmp328,
 3572              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3573              		.loc 1 548 18 view .LVU1158
 3574 1585 4D29FC   		sub	r12, r15	# word, current_vector_start_word
 549:sieve_extend.c ****         
 3575              		.loc 1 549 17 is_stmt 1 view .LVU1159
 3576              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 3577              		.loc 1 549 9 is_stmt 0 view .LVU1160
 3578 1588 4983FC03 		cmp	r12, 3	# word,
 3579 158c 7762     		ja	.L367	#,
 546:sieve_extend.c ****             index += step;
 3580              		.loc 1 546 13 is_stmt 1 view .LVU1161
 3581              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3582              		.loc 1 546 31 is_stmt 0 view .LVU1162
 3583 158e C4C2C9F7 		shlx	rsi, r11, rsi	# tmp330, tmp220, range_start
 3583      F3
 3584              	.LVL140:
 3585              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3586              		.loc 1 546 28 view .LVU1163
 3587 1593 4A0934E4 		or	QWORD PTR [rsp+r12*8], rsi	# quadmask, tmp330
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3588              		.loc 1 547 13 is_stmt 1 view .LVU1164
 3589              	.LVL141:
 3590              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3591              		.loc 1 547 19 is_stmt 0 view .LVU1165
 3592 1597 488D7205 		lea	rsi, 5[rdx]	# range_start,
 3593              	.LVL142:
GAS LISTING /tmp/cc7rm34x.s 			page 107


 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3594              		.loc 1 548 13 is_stmt 1 view .LVU1166
 3595              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3596              		.loc 1 548 20 is_stmt 0 view .LVU1167
 3597 159b 4989F5   		mov	r13, rsi	# tmp331, range_start
 3598 159e 49C1ED06 		shr	r13, 6	# tmp331,
 3599              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3600              		.loc 1 548 18 view .LVU1168
 3601 15a2 4D29FD   		sub	r13, r15	# word, current_vector_start_word
 549:sieve_extend.c ****         
 3602              		.loc 1 549 17 is_stmt 1 view .LVU1169
 3603              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 3604              		.loc 1 549 9 is_stmt 0 view .LVU1170
 3605 15a5 4983FD03 		cmp	r13, 3	# word,
 3606 15a9 7745     		ja	.L367	#,
 546:sieve_extend.c ****             index += step;
 3607              		.loc 1 546 13 is_stmt 1 view .LVU1171
 3608              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3609              		.loc 1 546 31 is_stmt 0 view .LVU1172
 3610 15ab C442C9F7 		shlx	r14, r11, rsi	# tmp333, tmp220, range_start
 3610      F3
 3611              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3612              		.loc 1 547 19 view .LVU1173
 3613 15b0 488D7206 		lea	rsi, 6[rdx]	# range_start,
 3614              	.LVL143:
 3615              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3616              		.loc 1 548 20 view .LVU1174
 3617 15b4 4889F1   		mov	rcx, rsi	# tmp334, range_start
 3618              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3619              		.loc 1 546 28 view .LVU1175
 3620 15b7 4E0934EC 		or	QWORD PTR [rsp+r13*8], r14	# quadmask, tmp333
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3621              		.loc 1 547 13 is_stmt 1 view .LVU1176
 3622              	.LVL144:
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3623              		.loc 1 548 13 view .LVU1177
 3624              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3625              		.loc 1 548 20 is_stmt 0 view .LVU1178
 3626 15bb 48C1E906 		shr	rcx, 6	# tmp334,
 3627              	.LVL145:
 3628              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3629              		.loc 1 548 18 view .LVU1179
 3630 15bf 4C29F9   		sub	rcx, r15	# word, current_vector_start_word
 549:sieve_extend.c ****         
 3631              		.loc 1 549 17 is_stmt 1 view .LVU1180
 3632              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 3633              		.loc 1 549 9 is_stmt 0 view .LVU1181
GAS LISTING /tmp/cc7rm34x.s 			page 108


 3634 15c2 4883F903 		cmp	rcx, 3	# word,
 3635 15c6 7728     		ja	.L367	#,
 546:sieve_extend.c ****             index += step;
 3636              		.loc 1 546 13 is_stmt 1 view .LVU1182
 3637              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3638              		.loc 1 546 31 is_stmt 0 view .LVU1183
 3639 15c8 C4C2C9F7 		shlx	rbx, r11, rsi	# tmp336, tmp220, range_start
 3639      DB
 3640              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3641              		.loc 1 547 19 view .LVU1184
 3642 15cd 488D7207 		lea	rsi, 7[rdx]	# range_start,
 3643              	.LVL146:
 3644              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3645              		.loc 1 548 20 view .LVU1185
 3646 15d1 4889F2   		mov	rdx, rsi	# tmp337, range_start
 3647              	.LVL147:
 3648              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 3649              		.loc 1 546 28 view .LVU1186
 3650 15d4 48091CCC 		or	QWORD PTR [rsp+rcx*8], rbx	# quadmask, tmp336
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3651              		.loc 1 547 13 is_stmt 1 view .LVU1187
 3652              	.LVL148:
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3653              		.loc 1 548 13 view .LVU1188
 3654              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3655              		.loc 1 548 20 is_stmt 0 view .LVU1189
 3656 15d8 48C1EA06 		shr	rdx, 6	# tmp337,
 3657              	.LVL149:
 3658              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3659              		.loc 1 548 18 view .LVU1190
 3660 15dc 4C29FA   		sub	rdx, r15	# word, current_vector_start_word
 3661              	.LVL150:
 549:sieve_extend.c ****         
 3662              		.loc 1 549 17 is_stmt 1 view .LVU1191
 3663              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 3664              		.loc 1 549 9 is_stmt 0 view .LVU1192
 3665 15df 4883FA03 		cmp	rdx, 3	# word,
 3666 15e3 0F8605FF 		jbe	.L228	#,
 3666      FFFF
 3667              	.LVL151:
 3668 15e9 0F1F8000 		.p2align 4
 3668      000000
 3669              		.p2align 3
 3670              	.L367:
 552:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 3671              		.loc 1 552 9 is_stmt 1 view .LVU1193
 555:sieve_extend.c **** 
 3672              		.loc 1 555 9 view .LVU1194
 3673              	.LBB340:
 3674              	.LBB337:
GAS LISTING /tmp/cc7rm34x.s 			page 109


 3675              	# sieve_extend.c:440:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 440:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 3676              		.loc 1 440 90 is_stmt 0 view .LVU1195
 3677 15f0 48C1E005 		sal	rax, 5	# tmp222,
 3678              	.LVL152:
 440:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 3679              		.loc 1 440 90 view .LVU1196
 3680              	.LBE337:
 3681              	.LBE340:
 3682              	# sieve_extend.c:555:         applyMask_vector_ptr(bitarray_vector, step, range_stop, quadmask, cur
 555:sieve_extend.c **** 
 3683              		.loc 1 555 9 view .LVU1197
 3684 15f4 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsp]	# quadmask.56_160, quadmask
 3684      24
 3685              	.LVL153:
 3686              	.LBB341:
 3687              	.LBI335:
 438:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 3688              		.loc 1 438 20 is_stmt 1 view .LVU1198
 3689              	.LBB338:
 439:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vec
 3690              		.loc 1 439 5 view .LVU1199
 440:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 3691              		.loc 1 440 5 view .LVU1200
 3692              	# sieve_extend.c:440:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 440:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 3693              		.loc 1 440 81 is_stmt 0 view .LVU1201
 3694 15f9 4801F8   		add	rax, rdi	# _25, bitarray_word
 3695              	.LVL154:
 441:sieve_extend.c ****     
 3696              		.loc 1 441 5 is_stmt 1 view .LVU1202
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3697              		.loc 1 445 11 view .LVU1203
 3698 15fc 4939C0   		cmp	r8, rax	# fast_loop_ptr, _25
 3699 15ff 0F866B01 		jbe	.L229	#,
 3699      0000
 3700 1605 4C8D7840 		lea	r15, 64[rax]	# ivtmp.259,
 3701              	.LVL155:
 3702              	.L230:
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3703              		.loc 1 446 9 view .LVU1204
 3704              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3705              		.loc 1 446 20 is_stmt 0 view .LVU1205
 3706 1609 C5E5EB08 		vpor	ymm1, ymm3, YMMWORD PTR [rax]	# tmp223, quadmask.56_160, MEM[base: index_ptr_153, offset: 0B]
 3707              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3708              		.loc 1 447 20 view .LVU1206
 3709 160d C5E5EB60 		vpor	ymm4, ymm3, YMMWORD PTR 32[rax]	# tmp224, quadmask.56_160, MEM[base: index_ptr_153, offset: 3
 3709      20
 3710              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3711              		.loc 1 446 20 view .LVU1207
 3712 1612 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_153, offset: 0B], tmp223
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3713              		.loc 1 446 29 is_stmt 1 view .LVU1208
 3714              	.LVL156:
GAS LISTING /tmp/cc7rm34x.s 			page 110


 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3715              		.loc 1 447 9 view .LVU1209
 3716 1616 4C8DA0A0 		lea	r12, 160[rax]	# tmp235,
 3716      000000
 3717              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3718              		.loc 1 447 20 is_stmt 0 view .LVU1210
 3719 161d C5FD7F60 		vmovdqa	YMMWORD PTR 32[rax], ymm4	# MEM[base: index_ptr_153, offset: 32B], tmp224
 3719      20
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3720              		.loc 1 447 29 is_stmt 1 view .LVU1211
 3721              	.LVL157:
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3722              		.loc 1 448 9 view .LVU1212
 3723              	# sieve_extend.c:445:     while likely(index_ptr < fast_loop_ptr) {
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3724              		.loc 1 445 11 is_stmt 0 view .LVU1213
 3725 1622 4D39C4   		cmp	r12, r8	# _25, fast_loop_ptr
 3726              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3727              		.loc 1 448 20 view .LVU1214
 3728 1625 C4C165EB 		vpor	ymm5, ymm3, YMMWORD PTR [r15]	# tmp225, quadmask.56_160, MEM[base: _11, offset: 0B]
 3728      2F
 3729              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3730              		.loc 1 449 20 view .LVU1215
 3731 162a C4C165EB 		vpor	ymm6, ymm3, YMMWORD PTR 32[r15]	# tmp226, quadmask.56_160, MEM[base: _11, offset: 32B]
 3731      7720
 3732              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3733              		.loc 1 448 20 view .LVU1216
 3734 1630 C4C17D7F 		vmovdqa	YMMWORD PTR [r15], ymm5	# MEM[base: _11, offset: 0B], tmp225
 3734      2F
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3735              		.loc 1 448 29 is_stmt 1 view .LVU1217
 3736              	.LVL158:
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3737              		.loc 1 449 9 view .LVU1218
 3738 1635 4D8DAFA0 		lea	r13, 160[r15]	# tmp236,
 3738      000000
 3739              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3740              		.loc 1 449 20 is_stmt 0 view .LVU1219
 3741 163c C4C17D7F 		vmovdqa	YMMWORD PTR 32[r15], ymm6	# MEM[base: _11, offset: 32B], tmp226
 3741      7720
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3742              		.loc 1 449 29 is_stmt 1 view .LVU1220
 3743              	.LVL159:
 450:sieve_extend.c ****     }
 3744              		.loc 1 450 9 view .LVU1221
 3745              	# sieve_extend.c:450:         *index_ptr |= mask; index_ptr+=step;
 450:sieve_extend.c ****     }
 3746              		.loc 1 450 20 is_stmt 0 view .LVU1222
 3747 1642 C5E5EBB8 		vpor	ymm7, ymm3, YMMWORD PTR 128[rax]	# tmp227, quadmask.56_160, MEM[base: index_ptr_153, offset: 
 3747      80000000 
 3748 164a C5FD7FB8 		vmovdqa	YMMWORD PTR 128[rax], ymm7	# MEM[base: index_ptr_153, offset: 128B], tmp227
 3748      80000000 
GAS LISTING /tmp/cc7rm34x.s 			page 111


 450:sieve_extend.c ****     }
 3749              		.loc 1 450 29 is_stmt 1 view .LVU1223
 3750              	.LVL160:
 450:sieve_extend.c ****     }
 3751              		.loc 1 450 29 is_stmt 0 view .LVU1224
 3752 1652 4C89E0   		mov	rax, r12	# _25, tmp235
 3753              	.LVL161:
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3754              		.loc 1 445 11 is_stmt 1 view .LVU1225
 3755 1655 0F831501 		jnb	.L229	#,
 3755      0000
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3756              		.loc 1 446 9 view .LVU1226
 3757              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3758              		.loc 1 446 20 is_stmt 0 view .LVU1227
 3759 165b C4C165EB 		vpor	ymm0, ymm3, YMMWORD PTR [r12]	# tmp301, quadmask.56_160, MEM[base: index_ptr_153, offset: 0B]
 3759      0424
 3760              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3761              		.loc 1 447 20 view .LVU1228
 3762 1661 C44165EB 		vpor	ymm8, ymm3, YMMWORD PTR 32[r12]	# tmp302, quadmask.56_160, MEM[base: index_ptr_153, offset: 3
 3762      442420
 3763              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3764              		.loc 1 446 20 view .LVU1229
 3765 1668 C4C17D7F 		vmovdqa	YMMWORD PTR [r12], ymm0	# MEM[base: index_ptr_153, offset: 0B], tmp301
 3765      0424
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3766              		.loc 1 446 29 is_stmt 1 view .LVU1230
 3767              	.LVL162:
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3768              		.loc 1 447 9 view .LVU1231
 3769 166e 4805A000 		add	rax, 160	# _25,
 3769      0000
 3770              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3771              		.loc 1 447 20 is_stmt 0 view .LVU1232
 3772 1674 C4417D7F 		vmovdqa	YMMWORD PTR 32[r12], ymm8	# MEM[base: index_ptr_153, offset: 32B], tmp302
 3772      442420
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3773              		.loc 1 447 29 is_stmt 1 view .LVU1233
 3774              	.LVL163:
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3775              		.loc 1 448 9 view .LVU1234
 3776              	# sieve_extend.c:445:     while likely(index_ptr < fast_loop_ptr) {
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3777              		.loc 1 445 11 is_stmt 0 view .LVU1235
 3778 167b 4C39C0   		cmp	rax, r8	# _25, fast_loop_ptr
 3779              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3780              		.loc 1 448 20 view .LVU1236
 3781 167e C44165EB 		vpor	ymm9, ymm3, YMMWORD PTR 160[r15]	# tmp303, quadmask.56_160, MEM[base: _11, offset: 0B]
 3781      8FA00000 
 3781      00
 3782 1687 C4417D7F 		vmovdqa	YMMWORD PTR 160[r15], ymm9	# MEM[base: _11, offset: 0B], tmp303
 3782      8FA00000 
GAS LISTING /tmp/cc7rm34x.s 			page 112


 3782      00
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3783              		.loc 1 448 29 is_stmt 1 view .LVU1237
 3784              	.LVL164:
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3785              		.loc 1 449 9 view .LVU1238
 3786              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3787              		.loc 1 449 20 is_stmt 0 view .LVU1239
 3788 1690 C44165EB 		vpor	ymm10, ymm3, YMMWORD PTR 32[r13]	# tmp304, quadmask.56_160, MEM[base: _11, offset: 32B]
 3788      5520
 3789 1696 C4417D7F 		vmovdqa	YMMWORD PTR 32[r13], ymm10	# MEM[base: _11, offset: 32B], tmp304
 3789      5520
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3790              		.loc 1 449 29 is_stmt 1 view .LVU1240
 3791              	.LVL165:
 450:sieve_extend.c ****     }
 3792              		.loc 1 450 9 view .LVU1241
 3793              	# sieve_extend.c:450:         *index_ptr |= mask; index_ptr+=step;
 450:sieve_extend.c ****     }
 3794              		.loc 1 450 20 is_stmt 0 view .LVU1242
 3795 169c C44165EB 		vpor	ymm11, ymm3, YMMWORD PTR 128[r12]	# tmp305, quadmask.56_160, MEM[base: index_ptr_153, offset:
 3795      9C248000 
 3795      0000
 3796 16a6 C4417D7F 		vmovdqa	YMMWORD PTR 128[r12], ymm11	# MEM[base: index_ptr_153, offset: 128B], tmp305
 3796      9C248000 
 3796      0000
 450:sieve_extend.c ****     }
 3797              		.loc 1 450 29 is_stmt 1 view .LVU1243
 3798              	.LVL166:
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3799              		.loc 1 445 11 view .LVU1244
 3800 16b0 0F83BA00 		jnb	.L229	#,
 3800      0000
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3801              		.loc 1 446 9 view .LVU1245
 3802              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3803              		.loc 1 446 20 is_stmt 0 view .LVU1246
 3804 16b6 C565EB20 		vpor	ymm12, ymm3, YMMWORD PTR [rax]	# tmp307, quadmask.56_160, MEM[base: index_ptr_153, offset: 0B
 3805              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3806              		.loc 1 447 20 view .LVU1247
 3807 16ba C565EB68 		vpor	ymm13, ymm3, YMMWORD PTR 32[rax]	# tmp308, quadmask.56_160, MEM[base: index_ptr_153, offset: 
 3807      20
 3808              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3809              		.loc 1 446 20 view .LVU1248
 3810 16bf C57D7F20 		vmovdqa	YMMWORD PTR [rax], ymm12	# MEM[base: index_ptr_153, offset: 0B], tmp307
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3811              		.loc 1 446 29 is_stmt 1 view .LVU1249
 3812              	.LVL167:
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3813              		.loc 1 447 9 view .LVU1250
 3814              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3815              		.loc 1 447 20 is_stmt 0 view .LVU1251
GAS LISTING /tmp/cc7rm34x.s 			page 113


 3816 16c3 C57D7F68 		vmovdqa	YMMWORD PTR 32[rax], ymm13	# MEM[base: index_ptr_153, offset: 32B], tmp308
 3816      20
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3817              		.loc 1 447 29 is_stmt 1 view .LVU1252
 3818              	.LVL168:
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3819              		.loc 1 448 9 view .LVU1253
 3820              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3821              		.loc 1 448 20 is_stmt 0 view .LVU1254
 3822 16c8 C44165EB 		vpor	ymm14, ymm3, YMMWORD PTR 320[r15]	# tmp309, quadmask.56_160, MEM[base: _11, offset: 0B]
 3822      B7400100 
 3822      00
 3823              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3824              		.loc 1 449 20 view .LVU1255
 3825 16d1 C44165EB 		vpor	ymm15, ymm3, YMMWORD PTR 352[r15]	# tmp310, quadmask.56_160, MEM[base: _11, offset: 32B]
 3825      BF600100 
 3825      00
 3826              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3827              		.loc 1 448 20 view .LVU1256
 3828 16da C4417D7F 		vmovdqa	YMMWORD PTR 320[r15], ymm14	# MEM[base: _11, offset: 0B], tmp309
 3828      B7400100 
 3828      00
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3829              		.loc 1 448 29 is_stmt 1 view .LVU1257
 3830              	.LVL169:
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3831              		.loc 1 449 9 view .LVU1258
 3832              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3833              		.loc 1 449 20 is_stmt 0 view .LVU1259
 3834 16e3 C4417D7F 		vmovdqa	YMMWORD PTR 352[r15], ymm15	# MEM[base: _11, offset: 32B], tmp310
 3834      BF600100 
 3834      00
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3835              		.loc 1 449 29 is_stmt 1 view .LVU1260
 3836              	.LVL170:
 450:sieve_extend.c ****     }
 3837              		.loc 1 450 9 view .LVU1261
 3838              	# sieve_extend.c:450:         *index_ptr |= mask; index_ptr+=step;
 450:sieve_extend.c ****     }
 3839              		.loc 1 450 20 is_stmt 0 view .LVU1262
 3840 16ec C5E5EB88 		vpor	ymm1, ymm3, YMMWORD PTR 128[rax]	# tmp311, quadmask.56_160, MEM[base: index_ptr_153, offset: 
 3840      80000000 
 3841 16f4 C5FD7F88 		vmovdqa	YMMWORD PTR 128[rax], ymm1	# MEM[base: index_ptr_153, offset: 128B], tmp311
 3841      80000000 
 450:sieve_extend.c ****     }
 3842              		.loc 1 450 29 is_stmt 1 view .LVU1263
 3843              	.LVL171:
 450:sieve_extend.c ****     }
 3844              		.loc 1 450 29 is_stmt 0 view .LVU1264
 3845 16fc 498D8424 		lea	rax, 320[r12]	# _25,
 3845      40010000 
 3846              	.LVL172:
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/cc7rm34x.s 			page 114


 3847              		.loc 1 445 11 is_stmt 1 view .LVU1265
 3848 1704 4C39C0   		cmp	rax, r8	# _25, fast_loop_ptr
 3849 1707 7367     		jnb	.L229	#,
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3850              		.loc 1 446 9 view .LVU1266
 3851              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3852              		.loc 1 446 20 is_stmt 0 view .LVU1267
 3853 1709 C4C165EB 		vpor	ymm4, ymm3, YMMWORD PTR 320[r12]	# tmp313, quadmask.56_160, MEM[base: index_ptr_153, offset: 
 3853      A4244001 
 3853      0000
 3854 1713 4981C780 		add	r15, 640	# ivtmp.259,
 3854      020000
 3855 171a C4C17D7F 		vmovdqa	YMMWORD PTR 320[r12], ymm4	# MEM[base: index_ptr_153, offset: 0B], tmp313
 3855      A4244001 
 3855      0000
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3856              		.loc 1 446 29 is_stmt 1 view .LVU1268
 3857              	.LVL173:
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3858              		.loc 1 447 9 view .LVU1269
 3859              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3860              		.loc 1 447 20 is_stmt 0 view .LVU1270
 3861 1724 C5E5EB68 		vpor	ymm5, ymm3, YMMWORD PTR 32[rax]	# tmp314, quadmask.56_160, MEM[base: index_ptr_153, offset: 3
 3861      20
 3862 1729 C5FD7F68 		vmovdqa	YMMWORD PTR 32[rax], ymm5	# MEM[base: index_ptr_153, offset: 32B], tmp314
 3862      20
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3863              		.loc 1 447 29 is_stmt 1 view .LVU1271
 3864              	.LVL174:
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3865              		.loc 1 448 9 view .LVU1272
 3866              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3867              		.loc 1 448 20 is_stmt 0 view .LVU1273
 3868 172e C4C165EB 		vpor	ymm6, ymm3, YMMWORD PTR -160[r15]	# tmp315, quadmask.56_160, MEM[base: _11, offset: 0B]
 3868      B760FFFF 
 3868      FF
 3869              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3870              		.loc 1 449 20 view .LVU1274
 3871 1737 C4C165EB 		vpor	ymm7, ymm3, YMMWORD PTR -128[r15]	# tmp316, quadmask.56_160, MEM[base: _11, offset: 32B]
 3871      7F80
 3872              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3873              		.loc 1 448 20 view .LVU1275
 3874 173d C4C17D7F 		vmovdqa	YMMWORD PTR -160[r15], ymm6	# MEM[base: _11, offset: 0B], tmp315
 3874      B760FFFF 
 3874      FF
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3875              		.loc 1 448 29 is_stmt 1 view .LVU1276
 3876              	.LVL175:
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3877              		.loc 1 449 9 view .LVU1277
 3878              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/cc7rm34x.s 			page 115


 3879              		.loc 1 449 20 is_stmt 0 view .LVU1278
 3880 1746 C4C17D7F 		vmovdqa	YMMWORD PTR -128[r15], ymm7	# MEM[base: _11, offset: 32B], tmp316
 3880      7F80
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3881              		.loc 1 449 29 is_stmt 1 view .LVU1279
 3882              	.LVL176:
 450:sieve_extend.c ****     }
 3883              		.loc 1 450 9 view .LVU1280
 3884              	# sieve_extend.c:450:         *index_ptr |= mask; index_ptr+=step;
 450:sieve_extend.c ****     }
 3885              		.loc 1 450 20 is_stmt 0 view .LVU1281
 3886 174c C5E5EB80 		vpor	ymm0, ymm3, YMMWORD PTR 128[rax]	# tmp317, quadmask.56_160, MEM[base: index_ptr_153, offset: 
 3886      80000000 
 3887 1754 C5FD7F80 		vmovdqa	YMMWORD PTR 128[rax], ymm0	# MEM[base: index_ptr_153, offset: 128B], tmp317
 3887      80000000 
 450:sieve_extend.c ****     }
 3888              		.loc 1 450 29 is_stmt 1 view .LVU1282
 3889              	.LVL177:
 450:sieve_extend.c ****     }
 3890              		.loc 1 450 29 is_stmt 0 view .LVU1283
 3891 175c 498D8424 		lea	rax, 480[r12]	# _25,
 3891      E0010000 
 3892              	.LVL178:
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3893              		.loc 1 445 11 is_stmt 1 view .LVU1284
 3894 1764 4C39C0   		cmp	rax, r8	# _25, fast_loop_ptr
 3895 1767 0F829CFE 		jb	.L230	#,
 3895      FFFF
 3896 176d 0F1F00   		.p2align 4
 3897              		.p2align 3
 3898              	.L229:
 453:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 3899              		.loc 1 453 5 view .LVU1285
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3900              		.loc 1 454 5 view .LVU1286
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3901              		.loc 1 454 11 view .LVU1287
 3902 1770 4939C1   		cmp	r9, rax	# range_stop_ptr, _25
 3903 1773 0F821E01 		jb	.L231	#,
 3903      0000
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3904              		.loc 1 454 11 is_stmt 0 view .LVU1288
 3905 1779 4D89CE   		mov	r14, r9	# tmp232, range_stop_ptr
 3906              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3907              		.loc 1 455 38 view .LVU1289
 3908 177c 488D4820 		lea	rcx, 32[rax]	# _25,
 3909 1780 4929C6   		sub	r14, rax	# tmp232, _25
 3910              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3911              		.loc 1 455 20 view .LVU1290
 3912 1783 C565EB00 		vpor	ymm8, ymm3, YMMWORD PTR [rax]	# tmp228, quadmask.56_160, MEM[base: index_ptr_116, offset: 0B]
 3913 1787 49C1EE05 		shr	r14, 5	# tmp231,
 3914 178b C57D7F00 		vmovdqa	YMMWORD PTR [rax], ymm8	# MEM[base: index_ptr_116, offset: 0B], tmp228
 3915 178f 4183E607 		and	r14d, 7	# tmp233,
 455:sieve_extend.c ****     }
 3916              		.loc 1 455 9 is_stmt 1 view .LVU1291
GAS LISTING /tmp/cc7rm34x.s 			page 116


 455:sieve_extend.c ****     }
 3917              		.loc 1 455 29 view .LVU1292
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3918              		.loc 1 454 11 view .LVU1293
 3919 1793 4939C9   		cmp	r9, rcx	# range_stop_ptr, _25
 3920 1796 0F82FB00 		jb	.L231	#,
 3920      0000
 3921 179c 4D85F6   		test	r14, r14	# tmp233
 3922 179f 0F848300 		je	.L232	#,
 3922      0000
 3923 17a5 4983FE01 		cmp	r14, 1	# tmp233,
 3924 17a9 746B     		je	.L326	#,
 3925 17ab 4983FE02 		cmp	r14, 2	# tmp233,
 3926 17af 7458     		je	.L327	#,
 3927 17b1 4983FE03 		cmp	r14, 3	# tmp233,
 3928 17b5 7445     		je	.L328	#,
 3929 17b7 4983FE04 		cmp	r14, 4	# tmp233,
 3930 17bb 7432     		je	.L329	#,
 3931 17bd 4983FE05 		cmp	r14, 5	# tmp233,
 3932 17c1 741F     		je	.L330	#,
 3933 17c3 4983FE06 		cmp	r14, 6	# tmp233,
 3934 17c7 740C     		je	.L331	#,
 455:sieve_extend.c ****     }
 3935              		.loc 1 455 9 view .LVU1294
 3936              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3937              		.loc 1 455 20 is_stmt 0 view .LVU1295
 3938 17c9 C565EB09 		vpor	ymm9, ymm3, YMMWORD PTR [rcx]	# tmp294, quadmask.56_160, MEM[base: index_ptr_116, offset: 0B]
 3939 17cd C57D7F09 		vmovdqa	YMMWORD PTR [rcx], ymm9	# MEM[base: index_ptr_116, offset: 0B], tmp294
 455:sieve_extend.c ****     }
 3940              		.loc 1 455 29 is_stmt 1 view .LVU1296
 3941              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3942              		.loc 1 455 38 is_stmt 0 view .LVU1297
 3943 17d1 488D4840 		lea	rcx, 64[rax]	# _25,
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3944              		.loc 1 454 11 is_stmt 1 view .LVU1298
 3945              	.L331:
 455:sieve_extend.c ****     }
 3946              		.loc 1 455 9 view .LVU1299
 3947              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3948              		.loc 1 455 20 is_stmt 0 view .LVU1300
 3949 17d5 C565EB11 		vpor	ymm10, ymm3, YMMWORD PTR [rcx]	# tmp295, quadmask.56_160, MEM[base: index_ptr_116, offset: 0B
 3950              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3951              		.loc 1 455 38 view .LVU1301
 3952 17d9 4883C120 		add	rcx, 32	# _25,
 3953              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3954              		.loc 1 455 20 view .LVU1302
 3955 17dd C57D7F51 		vmovdqa	YMMWORD PTR -32[rcx], ymm10	# MEM[base: index_ptr_116, offset: 0B], tmp295
 3955      E0
 455:sieve_extend.c ****     }
 3956              		.loc 1 455 29 is_stmt 1 view .LVU1303
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3957              		.loc 1 454 11 view .LVU1304
GAS LISTING /tmp/cc7rm34x.s 			page 117


 3958              	.L330:
 455:sieve_extend.c ****     }
 3959              		.loc 1 455 9 view .LVU1305
 3960              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3961              		.loc 1 455 20 is_stmt 0 view .LVU1306
 3962 17e2 C565EB19 		vpor	ymm11, ymm3, YMMWORD PTR [rcx]	# tmp296, quadmask.56_160, MEM[base: index_ptr_116, offset: 0B
 3963              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3964              		.loc 1 455 38 view .LVU1307
 3965 17e6 4883C120 		add	rcx, 32	# _25,
 3966              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3967              		.loc 1 455 20 view .LVU1308
 3968 17ea C57D7F59 		vmovdqa	YMMWORD PTR -32[rcx], ymm11	# MEM[base: index_ptr_116, offset: 0B], tmp296
 3968      E0
 455:sieve_extend.c ****     }
 3969              		.loc 1 455 29 is_stmt 1 view .LVU1309
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3970              		.loc 1 454 11 view .LVU1310
 3971              	.L329:
 455:sieve_extend.c ****     }
 3972              		.loc 1 455 9 view .LVU1311
 3973              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3974              		.loc 1 455 20 is_stmt 0 view .LVU1312
 3975 17ef C565EB21 		vpor	ymm12, ymm3, YMMWORD PTR [rcx]	# tmp297, quadmask.56_160, MEM[base: index_ptr_116, offset: 0B
 3976              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3977              		.loc 1 455 38 view .LVU1313
 3978 17f3 4883C120 		add	rcx, 32	# _25,
 3979              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3980              		.loc 1 455 20 view .LVU1314
 3981 17f7 C57D7F61 		vmovdqa	YMMWORD PTR -32[rcx], ymm12	# MEM[base: index_ptr_116, offset: 0B], tmp297
 3981      E0
 455:sieve_extend.c ****     }
 3982              		.loc 1 455 29 is_stmt 1 view .LVU1315
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3983              		.loc 1 454 11 view .LVU1316
 3984              	.L328:
 455:sieve_extend.c ****     }
 3985              		.loc 1 455 9 view .LVU1317
 3986              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3987              		.loc 1 455 20 is_stmt 0 view .LVU1318
 3988 17fc C565EB29 		vpor	ymm13, ymm3, YMMWORD PTR [rcx]	# tmp298, quadmask.56_160, MEM[base: index_ptr_116, offset: 0B
 3989              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3990              		.loc 1 455 38 view .LVU1319
 3991 1800 4883C120 		add	rcx, 32	# _25,
 3992              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 3993              		.loc 1 455 20 view .LVU1320
 3994 1804 C57D7F69 		vmovdqa	YMMWORD PTR -32[rcx], ymm13	# MEM[base: index_ptr_116, offset: 0B], tmp298
 3994      E0
 455:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 118


 3995              		.loc 1 455 29 is_stmt 1 view .LVU1321
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3996              		.loc 1 454 11 view .LVU1322
 3997              	.L327:
 455:sieve_extend.c ****     }
 3998              		.loc 1 455 9 view .LVU1323
 3999              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4000              		.loc 1 455 20 is_stmt 0 view .LVU1324
 4001 1809 C565EB31 		vpor	ymm14, ymm3, YMMWORD PTR [rcx]	# tmp299, quadmask.56_160, MEM[base: index_ptr_116, offset: 0B
 4002              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4003              		.loc 1 455 38 view .LVU1325
 4004 180d 4883C120 		add	rcx, 32	# _25,
 4005              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4006              		.loc 1 455 20 view .LVU1326
 4007 1811 C57D7F71 		vmovdqa	YMMWORD PTR -32[rcx], ymm14	# MEM[base: index_ptr_116, offset: 0B], tmp299
 4007      E0
 455:sieve_extend.c ****     }
 4008              		.loc 1 455 29 is_stmt 1 view .LVU1327
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4009              		.loc 1 454 11 view .LVU1328
 4010              	.L326:
 455:sieve_extend.c ****     }
 4011              		.loc 1 455 9 view .LVU1329
 4012              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4013              		.loc 1 455 20 is_stmt 0 view .LVU1330
 4014 1816 C565EB39 		vpor	ymm15, ymm3, YMMWORD PTR [rcx]	# tmp300, quadmask.56_160, MEM[base: index_ptr_116, offset: 0B
 4015              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4016              		.loc 1 455 38 view .LVU1331
 4017 181a 4883C120 		add	rcx, 32	# _25,
 4018              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4019              		.loc 1 455 20 view .LVU1332
 4020 181e C57D7F79 		vmovdqa	YMMWORD PTR -32[rcx], ymm15	# MEM[base: index_ptr_116, offset: 0B], tmp300
 4020      E0
 455:sieve_extend.c ****     }
 4021              		.loc 1 455 29 is_stmt 1 view .LVU1333
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4022              		.loc 1 454 11 view .LVU1334
 4023 1823 4939C9   		cmp	r9, rcx	# range_stop_ptr, _25
 4024 1826 726F     		jb	.L231	#,
 4025              	.L232:
 455:sieve_extend.c ****     }
 4026              		.loc 1 455 9 view .LVU1335
 4027              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4028              		.loc 1 455 20 is_stmt 0 view .LVU1336
 4029 1828 C5E5EB09 		vpor	ymm1, ymm3, YMMWORD PTR [rcx]	# tmp244, quadmask.56_160, MEM[base: index_ptr_116, offset: 0B]
 4030 182c C5E5EB61 		vpor	ymm4, ymm3, YMMWORD PTR 32[rcx]	# tmp246, quadmask.56_160, MEM[base: index_ptr_116, offset: 0
 4030      20
 4031 1831 C5E5EB69 		vpor	ymm5, ymm3, YMMWORD PTR 64[rcx]	# tmp248, quadmask.56_160, MEM[base: index_ptr_116, offset: 0
 4031      40
 4032 1836 C5E5EB71 		vpor	ymm6, ymm3, YMMWORD PTR 96[rcx]	# tmp250, quadmask.56_160, MEM[base: index_ptr_116, offset: 0
GAS LISTING /tmp/cc7rm34x.s 			page 119


 4032      60
 4033 183b C5E5EBB9 		vpor	ymm7, ymm3, YMMWORD PTR 128[rcx]	# tmp252, quadmask.56_160, MEM[base: index_ptr_116, offset: 
 4033      80000000 
 4034 1843 C5E5EB81 		vpor	ymm0, ymm3, YMMWORD PTR 160[rcx]	# tmp254, quadmask.56_160, MEM[base: index_ptr_116, offset: 
 4034      A0000000 
 4035 184b C565EB81 		vpor	ymm8, ymm3, YMMWORD PTR 192[rcx]	# tmp256, quadmask.56_160, MEM[base: index_ptr_116, offset: 
 4035      C0000000 
 4036 1853 C565EB89 		vpor	ymm9, ymm3, YMMWORD PTR 224[rcx]	# tmp258, quadmask.56_160, MEM[base: index_ptr_116, offset: 
 4036      E0000000 
 4037 185b C5FD7F09 		vmovdqa	YMMWORD PTR [rcx], ymm1	# MEM[base: index_ptr_116, offset: 0B], tmp244
 455:sieve_extend.c ****     }
 4038              		.loc 1 455 29 is_stmt 1 view .LVU1337
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4039              		.loc 1 454 11 view .LVU1338
 455:sieve_extend.c ****     }
 4040              		.loc 1 455 9 view .LVU1339
 4041              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4042              		.loc 1 455 38 is_stmt 0 view .LVU1340
 4043 185f 4881C100 		add	rcx, 256	# _25,
 4043      010000
 4044              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4045              		.loc 1 455 20 view .LVU1341
 4046 1866 C5FD7FA1 		vmovdqa	YMMWORD PTR -224[rcx], ymm4	# MEM[base: index_ptr_116, offset: 0B], tmp246
 4046      20FFFFFF 
 455:sieve_extend.c ****     }
 4047              		.loc 1 455 29 is_stmt 1 view .LVU1342
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4048              		.loc 1 454 11 view .LVU1343
 455:sieve_extend.c ****     }
 4049              		.loc 1 455 9 view .LVU1344
 4050              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4051              		.loc 1 455 20 is_stmt 0 view .LVU1345
 4052 186e C5FD7FA9 		vmovdqa	YMMWORD PTR -192[rcx], ymm5	# MEM[base: index_ptr_116, offset: 0B], tmp248
 4052      40FFFFFF 
 455:sieve_extend.c ****     }
 4053              		.loc 1 455 29 is_stmt 1 view .LVU1346
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4054              		.loc 1 454 11 view .LVU1347
 455:sieve_extend.c ****     }
 4055              		.loc 1 455 9 view .LVU1348
 4056              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4057              		.loc 1 455 20 is_stmt 0 view .LVU1349
 4058 1876 C5FD7FB1 		vmovdqa	YMMWORD PTR -160[rcx], ymm6	# MEM[base: index_ptr_116, offset: 0B], tmp250
 4058      60FFFFFF 
 455:sieve_extend.c ****     }
 4059              		.loc 1 455 29 is_stmt 1 view .LVU1350
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4060              		.loc 1 454 11 view .LVU1351
 455:sieve_extend.c ****     }
 4061              		.loc 1 455 9 view .LVU1352
 4062              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4063              		.loc 1 455 20 is_stmt 0 view .LVU1353
GAS LISTING /tmp/cc7rm34x.s 			page 120


 4064 187e C5FD7F79 		vmovdqa	YMMWORD PTR -128[rcx], ymm7	# MEM[base: index_ptr_116, offset: 0B], tmp252
 4064      80
 455:sieve_extend.c ****     }
 4065              		.loc 1 455 29 is_stmt 1 view .LVU1354
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4066              		.loc 1 454 11 view .LVU1355
 455:sieve_extend.c ****     }
 4067              		.loc 1 455 9 view .LVU1356
 4068              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4069              		.loc 1 455 20 is_stmt 0 view .LVU1357
 4070 1883 C5FD7F41 		vmovdqa	YMMWORD PTR -96[rcx], ymm0	# MEM[base: index_ptr_116, offset: 0B], tmp254
 4070      A0
 455:sieve_extend.c ****     }
 4071              		.loc 1 455 29 is_stmt 1 view .LVU1358
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4072              		.loc 1 454 11 view .LVU1359
 455:sieve_extend.c ****     }
 4073              		.loc 1 455 9 view .LVU1360
 4074              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4075              		.loc 1 455 20 is_stmt 0 view .LVU1361
 4076 1888 C57D7F41 		vmovdqa	YMMWORD PTR -64[rcx], ymm8	# MEM[base: index_ptr_116, offset: 0B], tmp256
 4076      C0
 455:sieve_extend.c ****     }
 4077              		.loc 1 455 29 is_stmt 1 view .LVU1362
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4078              		.loc 1 454 11 view .LVU1363
 455:sieve_extend.c ****     }
 4079              		.loc 1 455 9 view .LVU1364
 4080              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4081              		.loc 1 455 20 is_stmt 0 view .LVU1365
 4082 188d C57D7F49 		vmovdqa	YMMWORD PTR -32[rcx], ymm9	# MEM[base: index_ptr_116, offset: 0B], tmp258
 4082      E0
 455:sieve_extend.c ****     }
 4083              		.loc 1 455 29 is_stmt 1 view .LVU1366
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4084              		.loc 1 454 11 view .LVU1367
 4085 1892 4939C9   		cmp	r9, rcx	# range_stop_ptr, _25
 4086 1895 7391     		jnb	.L232	#,
 4087              	.L231:
 4088              	.LVL179:
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4089              		.loc 1 454 11 is_stmt 0 view .LVU1368
 4090              	.LBE338:
 4091              	.LBE341:
 4092              	.LBE334:
 537:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4093              		.loc 1 537 41 is_stmt 1 view .LVU1369
 4094              	# sieve_extend.c:537:     for (counter_t index = range_start; index < range_stop_unique;) {
 537:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4095              		.loc 1 537 5 is_stmt 0 view .LVU1370
 4096 1897 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4097 189a 0F8730FC 		ja	.L233	#,
 4097      FFFF
 4098              	.L372:
GAS LISTING /tmp/cc7rm34x.s 			page 121


 537:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4099              		.loc 1 537 5 view .LVU1371
 4100 18a0 C5F877   		vzeroupper
 4101              	.LVL180:
 4102              	.L216:
 537:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4103              		.loc 1 537 5 view .LVU1372
 4104              	.LBE333:
 4105              	# sieve_extend.c:596: }
 596:sieve_extend.c **** 
 4106              		.loc 1 596 1 view .LVU1373
 4107 18a3 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp421, D.6765
 4107      38
 4108 18a8 64483304 		xor	rax, QWORD PTR fs:40	# tmp421, MEM[(<address-space-1> long unsigned int *)40B]
 4108      25280000 
 4108      00
 4109 18b1 0F853B04 		jne	.L374	#,
 4109      0000
 4110 18b7 488D65D8 		lea	rsp, -40[rbp]	#,
 4111 18bb 5B       		pop	rbx	#
 4112 18bc 415C     		pop	r12	#
 4113 18be 415D     		pop	r13	#
 4114 18c0 415E     		pop	r14	#
 4115 18c2 415F     		pop	r15	#
 4116 18c4 5D       		pop	rbp	#
 4117              		.cfi_remember_state
 4118              		.cfi_def_cfa 7, 8
 4119 18c5 C3       		ret	
 4120              	.LVL181:
 4121              	.L373:
 4122              		.cfi_restore_state
 596:sieve_extend.c **** 
 4123              		.loc 1 596 1 view .LVU1374
 4124 18c6 4939D0   		cmp	r8, rdx	# range_stop_vector, tmp193
 4125 18c9 4989DD   		mov	r13, rbx	# _101, step
 4126              	.LBB344:
 4127              	.LBB343:
 4128              	# sieve_extend.c:539:         register bitvector_t quadmask = { };
 539:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4129              		.loc 1 539 30 view .LVU1375
 4130 18cc C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp202
 4131              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4132              		.loc 1 546 31 view .LVU1376
 4133 18d0 41BC0100 		mov	r12d, 1	# tmp206,
 4133      0000
 4134 18d6 480F46C7 		cmovbe	rax, rdi	# bitarray_word,, tmp197
 4135 18da 48C1E205 		sal	rdx, 5	# tmp201,
 4136 18de 49C1E506 		sal	r13, 6	# _101,
 4137 18e2 4989C3   		mov	r11, rax	# fast_loop_ptr, tmp197
 4138 18e5 66662E0F 		.p2align 4
 4138      1F840000 
 4138      000000
 4139              		.p2align 3
 4140              	.L227:
 538:sieve_extend.c ****         register bitvector_t quadmask = { };
 4141              		.loc 1 538 9 is_stmt 1 view .LVU1377
GAS LISTING /tmp/cc7rm34x.s 			page 122


 4142              	# sieve_extend.c:538:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 538:sieve_extend.c ****         register bitvector_t quadmask = { };
 4143              		.loc 1 538 54 is_stmt 0 view .LVU1378
 4144 18f0 4989F6   		mov	r14, rsi	# _29, range_start
 4145              	# sieve_extend.c:540:         register counter_t word = wordindex(index) - current_vector_start_wor
 540:sieve_extend.c ****         
 4146              		.loc 1 540 35 view .LVU1379
 4147 18f3 4889F0   		mov	rax, rsi	# tmp203, range_start
 4148              	# sieve_extend.c:538:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 538:sieve_extend.c ****         register bitvector_t quadmask = { };
 4149              		.loc 1 538 54 view .LVU1380
 4150 18f6 49C1EE08 		shr	r14, 8	# _29,
 4151              	# sieve_extend.c:540:         register counter_t word = wordindex(index) - current_vector_start_wor
 540:sieve_extend.c ****         
 4152              		.loc 1 540 35 view .LVU1381
 4153 18fa 48C1E806 		shr	rax, 6	# tmp203,
 4154              	# sieve_extend.c:538:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 538:sieve_extend.c ****         register bitvector_t quadmask = { };
 4155              		.loc 1 538 25 view .LVU1382
 4156 18fe 4E8D04B5 		lea	r8, 0[0+r14*4]	# current_vector_start_word,
 4156      00000000 
 4157              	.LVL182:
 539:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4158              		.loc 1 539 9 is_stmt 1 view .LVU1383
 4159              	# sieve_extend.c:539:         register bitvector_t quadmask = { };
 539:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4160              		.loc 1 539 30 is_stmt 0 view .LVU1384
 4161 1906 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp202
 4161      24
 540:sieve_extend.c ****         
 4162              		.loc 1 540 9 is_stmt 1 view .LVU1385
 4163              	# sieve_extend.c:540:         register counter_t word = wordindex(index) - current_vector_start_wor
 540:sieve_extend.c ****         
 4164              		.loc 1 540 28 is_stmt 0 view .LVU1386
 4165 190b 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 4166              	.LVL183:
 4167              	.L223:
 546:sieve_extend.c ****             index += step;
 4168              		.loc 1 546 13 is_stmt 1 discriminator 1 view .LVU1387
 4169              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4170              		.loc 1 546 31 is_stmt 0 discriminator 1 view .LVU1388
 4171 190e C442C9F7 		shlx	r15, r12, rsi	# tmp205, tmp206, range_start
 4171      FC
 4172              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4173              		.loc 1 547 19 discriminator 1 view .LVU1389
 4174 1913 4801DE   		add	rsi, rbx	# range_start, step
 4175              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4176              		.loc 1 546 28 discriminator 1 view .LVU1390
 4177 1916 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp205
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4178              		.loc 1 547 13 is_stmt 1 discriminator 1 view .LVU1391
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4179              		.loc 1 548 13 discriminator 1 view .LVU1392
 4180              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/cc7rm34x.s 			page 123


 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4181              		.loc 1 548 20 is_stmt 0 discriminator 1 view .LVU1393
 4182 191a 4889F0   		mov	rax, rsi	# tmp207, range_start
 4183              	.LVL184:
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4184              		.loc 1 548 20 discriminator 1 view .LVU1394
 4185 191d 48C1E806 		shr	rax, 6	# tmp207,
 4186              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4187              		.loc 1 548 18 discriminator 1 view .LVU1395
 4188 1921 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 549:sieve_extend.c ****         
 4189              		.loc 1 549 17 is_stmt 1 discriminator 1 view .LVU1396
 4190              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 4191              		.loc 1 549 9 is_stmt 0 discriminator 1 view .LVU1397
 4192 1924 4883F803 		cmp	rax, 3	# word,
 4193 1928 0F87D200 		ja	.L368	#,
 4193      0000
 546:sieve_extend.c ****             index += step;
 4194              		.loc 1 546 13 is_stmt 1 view .LVU1398
 4195              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4196              		.loc 1 546 31 is_stmt 0 view .LVU1399
 4197 192e C442C9F7 		shlx	r15, r12, rsi	# tmp368, tmp206, range_start
 4197      FC
 4198              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4199              		.loc 1 547 19 view .LVU1400
 4200 1933 4801DE   		add	rsi, rbx	# range_start, step
 4201              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4202              		.loc 1 546 28 view .LVU1401
 4203 1936 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp368
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4204              		.loc 1 547 13 is_stmt 1 view .LVU1402
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4205              		.loc 1 548 13 view .LVU1403
 4206              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4207              		.loc 1 548 20 is_stmt 0 view .LVU1404
 4208 193a 4889F0   		mov	rax, rsi	# tmp369, range_start
 4209 193d 48C1E806 		shr	rax, 6	# tmp369,
 4210              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4211              		.loc 1 548 18 view .LVU1405
 4212 1941 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 549:sieve_extend.c ****         
 4213              		.loc 1 549 17 is_stmt 1 view .LVU1406
 4214              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 4215              		.loc 1 549 9 is_stmt 0 view .LVU1407
 4216 1944 4883F803 		cmp	rax, 3	# word,
 4217 1948 0F87B200 		ja	.L368	#,
 4217      0000
 546:sieve_extend.c ****             index += step;
 4218              		.loc 1 546 13 is_stmt 1 view .LVU1408
GAS LISTING /tmp/cc7rm34x.s 			page 124


 4219              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4220              		.loc 1 546 31 is_stmt 0 view .LVU1409
 4221 194e C442C9F7 		shlx	r15, r12, rsi	# tmp371, tmp206, range_start
 4221      FC
 4222              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4223              		.loc 1 547 19 view .LVU1410
 4224 1953 4801DE   		add	rsi, rbx	# range_start, step
 4225              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4226              		.loc 1 546 28 view .LVU1411
 4227 1956 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp371
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4228              		.loc 1 547 13 is_stmt 1 view .LVU1412
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4229              		.loc 1 548 13 view .LVU1413
 4230              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4231              		.loc 1 548 20 is_stmt 0 view .LVU1414
 4232 195a 4889F0   		mov	rax, rsi	# tmp372, range_start
 4233 195d 48C1E806 		shr	rax, 6	# tmp372,
 4234              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4235              		.loc 1 548 18 view .LVU1415
 4236 1961 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 549:sieve_extend.c ****         
 4237              		.loc 1 549 17 is_stmt 1 view .LVU1416
 4238              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 4239              		.loc 1 549 9 is_stmt 0 view .LVU1417
 4240 1964 4883F803 		cmp	rax, 3	# word,
 4241 1968 0F879200 		ja	.L368	#,
 4241      0000
 546:sieve_extend.c ****             index += step;
 4242              		.loc 1 546 13 is_stmt 1 view .LVU1418
 4243              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4244              		.loc 1 546 31 is_stmt 0 view .LVU1419
 4245 196e C442C9F7 		shlx	r15, r12, rsi	# tmp374, tmp206, range_start
 4245      FC
 4246              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4247              		.loc 1 547 19 view .LVU1420
 4248 1973 4801DE   		add	rsi, rbx	# range_start, step
 4249              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4250              		.loc 1 546 28 view .LVU1421
 4251 1976 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp374
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4252              		.loc 1 547 13 is_stmt 1 view .LVU1422
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4253              		.loc 1 548 13 view .LVU1423
 4254              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4255              		.loc 1 548 20 is_stmt 0 view .LVU1424
 4256 197a 4889F0   		mov	rax, rsi	# tmp375, range_start
GAS LISTING /tmp/cc7rm34x.s 			page 125


 4257 197d 48C1E806 		shr	rax, 6	# tmp375,
 4258              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4259              		.loc 1 548 18 view .LVU1425
 4260 1981 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 549:sieve_extend.c ****         
 4261              		.loc 1 549 17 is_stmt 1 view .LVU1426
 4262              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 4263              		.loc 1 549 9 is_stmt 0 view .LVU1427
 4264 1984 4883F803 		cmp	rax, 3	# word,
 4265 1988 7776     		ja	.L368	#,
 546:sieve_extend.c ****             index += step;
 4266              		.loc 1 546 13 is_stmt 1 view .LVU1428
 4267              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4268              		.loc 1 546 31 is_stmt 0 view .LVU1429
 4269 198a C442C9F7 		shlx	r15, r12, rsi	# tmp377, tmp206, range_start
 4269      FC
 4270              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4271              		.loc 1 547 19 view .LVU1430
 4272 198f 4801DE   		add	rsi, rbx	# range_start, step
 4273              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4274              		.loc 1 546 28 view .LVU1431
 4275 1992 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp377
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4276              		.loc 1 547 13 is_stmt 1 view .LVU1432
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4277              		.loc 1 548 13 view .LVU1433
 4278              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4279              		.loc 1 548 20 is_stmt 0 view .LVU1434
 4280 1996 4889F0   		mov	rax, rsi	# tmp378, range_start
 4281 1999 48C1E806 		shr	rax, 6	# tmp378,
 4282              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4283              		.loc 1 548 18 view .LVU1435
 4284 199d 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 549:sieve_extend.c ****         
 4285              		.loc 1 549 17 is_stmt 1 view .LVU1436
 4286              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 4287              		.loc 1 549 9 is_stmt 0 view .LVU1437
 4288 19a0 4883F803 		cmp	rax, 3	# word,
 4289 19a4 775A     		ja	.L368	#,
 546:sieve_extend.c ****             index += step;
 4290              		.loc 1 546 13 is_stmt 1 view .LVU1438
 4291              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4292              		.loc 1 546 31 is_stmt 0 view .LVU1439
 4293 19a6 C442C9F7 		shlx	r15, r12, rsi	# tmp380, tmp206, range_start
 4293      FC
 4294              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4295              		.loc 1 547 19 view .LVU1440
GAS LISTING /tmp/cc7rm34x.s 			page 126


 4296 19ab 4801DE   		add	rsi, rbx	# range_start, step
 4297              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4298              		.loc 1 546 28 view .LVU1441
 4299 19ae 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp380
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4300              		.loc 1 547 13 is_stmt 1 view .LVU1442
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4301              		.loc 1 548 13 view .LVU1443
 4302              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4303              		.loc 1 548 20 is_stmt 0 view .LVU1444
 4304 19b2 4889F0   		mov	rax, rsi	# tmp381, range_start
 4305 19b5 48C1E806 		shr	rax, 6	# tmp381,
 4306              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4307              		.loc 1 548 18 view .LVU1445
 4308 19b9 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 549:sieve_extend.c ****         
 4309              		.loc 1 549 17 is_stmt 1 view .LVU1446
 4310              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 4311              		.loc 1 549 9 is_stmt 0 view .LVU1447
 4312 19bc 4883F803 		cmp	rax, 3	# word,
 4313 19c0 773E     		ja	.L368	#,
 546:sieve_extend.c ****             index += step;
 4314              		.loc 1 546 13 is_stmt 1 view .LVU1448
 4315              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4316              		.loc 1 546 31 is_stmt 0 view .LVU1449
 4317 19c2 C442C9F7 		shlx	r15, r12, rsi	# tmp383, tmp206, range_start
 4317      FC
 4318              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4319              		.loc 1 547 19 view .LVU1450
 4320 19c7 4801DE   		add	rsi, rbx	# range_start, step
 4321              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4322              		.loc 1 546 28 view .LVU1451
 4323 19ca 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp383
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4324              		.loc 1 547 13 is_stmt 1 view .LVU1452
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4325              		.loc 1 548 13 view .LVU1453
 4326              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4327              		.loc 1 548 20 is_stmt 0 view .LVU1454
 4328 19ce 4889F0   		mov	rax, rsi	# tmp384, range_start
 4329 19d1 48C1E806 		shr	rax, 6	# tmp384,
 4330              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4331              		.loc 1 548 18 view .LVU1455
 4332 19d5 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 549:sieve_extend.c ****         
 4333              		.loc 1 549 17 is_stmt 1 view .LVU1456
 4334              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
GAS LISTING /tmp/cc7rm34x.s 			page 127


 4335              		.loc 1 549 9 is_stmt 0 view .LVU1457
 4336 19d8 4883F803 		cmp	rax, 3	# word,
 4337 19dc 7722     		ja	.L368	#,
 546:sieve_extend.c ****             index += step;
 4338              		.loc 1 546 13 is_stmt 1 view .LVU1458
 4339              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4340              		.loc 1 546 31 is_stmt 0 view .LVU1459
 4341 19de C442C9F7 		shlx	r15, r12, rsi	# tmp386, tmp206, range_start
 4341      FC
 4342              	# sieve_extend.c:547:             index += step;
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4343              		.loc 1 547 19 view .LVU1460
 4344 19e3 4801DE   		add	rsi, rbx	# range_start, step
 4345              	# sieve_extend.c:546:             quadmask[word] |= markmask(index);
 546:sieve_extend.c ****             index += step;
 4346              		.loc 1 546 28 view .LVU1461
 4347 19e6 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp386
 547:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4348              		.loc 1 547 13 is_stmt 1 view .LVU1462
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4349              		.loc 1 548 13 view .LVU1463
 4350              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4351              		.loc 1 548 20 is_stmt 0 view .LVU1464
 4352 19ea 4889F0   		mov	rax, rsi	# tmp387, range_start
 4353 19ed 48C1E806 		shr	rax, 6	# tmp387,
 4354              	.LVL185:
 4355              	# sieve_extend.c:548:             word = wordindex(index) - current_vector_start_word;
 548:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4356              		.loc 1 548 18 view .LVU1465
 4357 19f1 4C29C0   		sub	rax, r8	# word, current_vector_start_word
 4358              	.LVL186:
 549:sieve_extend.c ****         
 4359              		.loc 1 549 17 is_stmt 1 view .LVU1466
 4360              	# sieve_extend.c:549:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 549:sieve_extend.c ****         
 4361              		.loc 1 549 9 is_stmt 0 view .LVU1467
 4362 19f4 4883F803 		cmp	rax, 3	# word,
 4363 19f8 0F8610FF 		jbe	.L223	#,
 4363      FFFF
 4364              	.LVL187:
 4365 19fe 6690     		.p2align 4
 4366              		.p2align 3
 4367              	.L368:
 552:sieve_extend.c ****         // const counter_t range_stop_vector = vectorindex(range_stop);
 4368              		.loc 1 552 9 is_stmt 1 view .LVU1468
 555:sieve_extend.c **** 
 4369              		.loc 1 555 9 view .LVU1469
 4370 1a00 C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsp]	# quadmask.56_36, quadmask
 4370      24
 4371              	.LVL188:
 4372              	.LBB342:
 438:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 4373              		.loc 1 438 20 view .LVU1470
 4374              	.LBB339:
 439:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_vec
GAS LISTING /tmp/cc7rm34x.s 			page 128


 4375              		.loc 1 439 5 view .LVU1471
 440:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 4376              		.loc 1 440 5 view .LVU1472
 4377              	# sieve_extend.c:440:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 440:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 4378              		.loc 1 440 90 is_stmt 0 view .LVU1473
 4379 1a05 4D89F0   		mov	r8, r14	# _29, _29
 4380              	.LVL189:
 440:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 4381              		.loc 1 440 90 view .LVU1474
 4382 1a08 49C1E005 		sal	r8, 5	# _29,
 4383              	# sieve_extend.c:440:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 440:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_s
 4384              		.loc 1 440 81 view .LVU1475
 4385 1a0c 4901F8   		add	r8, rdi	# index_ptr, bitarray_word
 4386              	.LVL190:
 441:sieve_extend.c ****     
 4387              		.loc 1 441 5 is_stmt 1 view .LVU1476
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4388              		.loc 1 445 11 view .LVU1477
 4389 1a0f 4D39D8   		cmp	r8, r11	# index_ptr, fast_loop_ptr
 4390 1a12 0F832801 		jnb	.L371	#,
 4390      0000
 4391 1a18 4F8D3428 		lea	r14, [r8+r13]	# ivtmp.285,
 4392              	.LVL191:
 4393              	.L225:
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4394              		.loc 1 446 9 view .LVU1478
 4395              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4396              		.loc 1 446 20 is_stmt 0 view .LVU1479
 4397 1a1c C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [r8]	# tmp209, quadmask.56_36, MEM[base: index_ptr_128, offset: 0B]
 4397      08
 4398 1a21 C4C17D7F 		vmovdqa	YMMWORD PTR [r8], ymm1	# MEM[base: index_ptr_128, offset: 0B], tmp209
 4398      08
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4399              		.loc 1 446 29 is_stmt 1 view .LVU1480
 4400              	.LVL192:
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4401              		.loc 1 447 9 view .LVU1481
 4402              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4403              		.loc 1 447 20 is_stmt 0 view .LVU1482
 4404 1a26 C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [r8+rcx]	# tmp210, quadmask.56_36, MEM[base: index_ptr_128, index: _7
 4404      1C08
 4405 1a2c C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm3	# MEM[base: index_ptr_128, index: _79, offset: 0B], tmp210
 4405      1C08
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4406              		.loc 1 447 29 is_stmt 1 view .LVU1483
 4407              	.LVL193:
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4408              		.loc 1 448 9 view .LVU1484
 4409              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4410              		.loc 1 448 20 is_stmt 0 view .LVU1485
 4411 1a32 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r14]	# tmp211, quadmask.56_36, MEM[base: _187, offset: 0B]
 4411      26
GAS LISTING /tmp/cc7rm34x.s 			page 129


 4412 1a37 C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm4	# MEM[base: _187, offset: 0B], tmp211
 4412      26
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4413              		.loc 1 448 29 is_stmt 1 view .LVU1486
 4414              	.LVL194:
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4415              		.loc 1 449 9 view .LVU1487
 4416              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4417              		.loc 1 449 20 is_stmt 0 view .LVU1488
 4418 1a3c C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r14+rcx]	# tmp212, quadmask.56_36, MEM[base: _187, index: _79, offse
 4418      2C0E
 4419 1a42 C4C17D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm5	# MEM[base: _187, index: _79, offset: 0B], tmp212
 4419      2C0E
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4420              		.loc 1 449 29 is_stmt 1 view .LVU1489
 4421              	.LVL195:
 450:sieve_extend.c ****     }
 4422              		.loc 1 450 9 view .LVU1490
 4423 1a48 4901D6   		add	r14, rdx	# ivtmp.285, tmp201
 4424              	# sieve_extend.c:450:         *index_ptr |= mask; index_ptr+=step;
 450:sieve_extend.c ****     }
 4425              		.loc 1 450 20 is_stmt 0 view .LVU1491
 4426 1a4b C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR [r8+rcx*4]	# tmp213, quadmask.56_36, MEM[base: index_ptr_128, index: 
 4426      3488
 4427 1a51 C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx*4], ymm6	# MEM[base: index_ptr_128, index: _79, step: 4, offset: 0B], 
 4427      3488
 450:sieve_extend.c ****     }
 4428              		.loc 1 450 29 is_stmt 1 view .LVU1492
 4429              	.LVL196:
 450:sieve_extend.c ****     }
 4430              		.loc 1 450 29 is_stmt 0 view .LVU1493
 4431 1a57 4901D0   		add	r8, rdx	# index_ptr, tmp201
 4432              	.LVL197:
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4433              		.loc 1 445 11 is_stmt 1 view .LVU1494
 4434 1a5a 4D39C3   		cmp	r11, r8	# fast_loop_ptr, index_ptr
 4435 1a5d 0F86DD00 		jbe	.L371	#,
 4435      0000
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4436              		.loc 1 446 9 view .LVU1495
 4437              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4438              		.loc 1 446 20 is_stmt 0 view .LVU1496
 4439 1a63 C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [r8]	# tmp351, quadmask.56_36, MEM[base: index_ptr_128, offset: 0B]
 4439      38
 4440 1a68 C4C17D7F 		vmovdqa	YMMWORD PTR [r8], ymm7	# MEM[base: index_ptr_128, offset: 0B], tmp351
 4440      38
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4441              		.loc 1 446 29 is_stmt 1 view .LVU1497
 4442              	.LVL198:
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4443              		.loc 1 447 9 view .LVU1498
 4444              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4445              		.loc 1 447 20 is_stmt 0 view .LVU1499
 4446 1a6d C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r8+rcx]	# tmp352, quadmask.56_36, MEM[base: index_ptr_128, index: _7
GAS LISTING /tmp/cc7rm34x.s 			page 130


 4446      0408
 4447 1a73 C4417D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm8	# MEM[base: index_ptr_128, index: _79, offset: 0B], tmp352
 4447      0408
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4448              		.loc 1 447 29 is_stmt 1 view .LVU1500
 4449              	.LVL199:
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4450              		.loc 1 448 9 view .LVU1501
 4451              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4452              		.loc 1 448 20 is_stmt 0 view .LVU1502
 4453 1a79 C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r14]	# tmp353, quadmask.56_36, MEM[base: _187, offset: 0B]
 4453      0E
 4454 1a7e C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm9	# MEM[base: _187, offset: 0B], tmp353
 4454      0E
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4455              		.loc 1 448 29 is_stmt 1 view .LVU1503
 4456              	.LVL200:
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4457              		.loc 1 449 9 view .LVU1504
 4458              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4459              		.loc 1 449 20 is_stmt 0 view .LVU1505
 4460 1a83 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR [r14+rcx]	# tmp354, quadmask.56_36, MEM[base: _187, index: _79, offs
 4460      140E
 4461 1a89 C4417D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm10	# MEM[base: _187, index: _79, offset: 0B], tmp354
 4461      140E
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4462              		.loc 1 449 29 is_stmt 1 view .LVU1506
 4463              	.LVL201:
 450:sieve_extend.c ****     }
 4464              		.loc 1 450 9 view .LVU1507
 4465 1a8f 4901D6   		add	r14, rdx	# ivtmp.285, tmp201
 4466              	# sieve_extend.c:450:         *index_ptr |= mask; index_ptr+=step;
 450:sieve_extend.c ****     }
 4467              		.loc 1 450 20 is_stmt 0 view .LVU1508
 4468 1a92 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR [r8+rcx*4]	# tmp355, quadmask.56_36, MEM[base: index_ptr_128, index:
 4468      1C88
 4469 1a98 C4417D7F 		vmovdqa	YMMWORD PTR [r8+rcx*4], ymm11	# MEM[base: index_ptr_128, index: _79, step: 4, offset: 0B],
 4469      1C88
 450:sieve_extend.c ****     }
 4470              		.loc 1 450 29 is_stmt 1 view .LVU1509
 4471              	.LVL202:
 450:sieve_extend.c ****     }
 4472              		.loc 1 450 29 is_stmt 0 view .LVU1510
 4473 1a9e 4901D0   		add	r8, rdx	# index_ptr, tmp201
 4474              	.LVL203:
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4475              		.loc 1 445 11 is_stmt 1 view .LVU1511
 4476 1aa1 4D39C3   		cmp	r11, r8	# fast_loop_ptr, index_ptr
 4477 1aa4 0F869600 		jbe	.L371	#,
 4477      0000
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4478              		.loc 1 446 9 view .LVU1512
 4479              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4480              		.loc 1 446 20 is_stmt 0 view .LVU1513
GAS LISTING /tmp/cc7rm34x.s 			page 131


 4481 1aaa C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR [r8]	# tmp357, quadmask.56_36, MEM[base: index_ptr_128, offset: 0B]
 4481      20
 4482 1aaf C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm12	# MEM[base: index_ptr_128, offset: 0B], tmp357
 4482      20
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4483              		.loc 1 446 29 is_stmt 1 view .LVU1514
 4484              	.LVL204:
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4485              		.loc 1 447 9 view .LVU1515
 4486              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4487              		.loc 1 447 20 is_stmt 0 view .LVU1516
 4488 1ab4 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR [r8+rcx]	# tmp358, quadmask.56_36, MEM[base: index_ptr_128, index: _
 4488      2C08
 4489 1aba C4417D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm13	# MEM[base: index_ptr_128, index: _79, offset: 0B], tmp358
 4489      2C08
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4490              		.loc 1 447 29 is_stmt 1 view .LVU1517
 4491              	.LVL205:
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4492              		.loc 1 448 9 view .LVU1518
 4493              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4494              		.loc 1 448 20 is_stmt 0 view .LVU1519
 4495 1ac0 C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR [r14]	# tmp359, quadmask.56_36, MEM[base: _187, offset: 0B]
 4495      36
 4496 1ac5 C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm14	# MEM[base: _187, offset: 0B], tmp359
 4496      36
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4497              		.loc 1 448 29 is_stmt 1 view .LVU1520
 4498              	.LVL206:
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4499              		.loc 1 449 9 view .LVU1521
 4500              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4501              		.loc 1 449 20 is_stmt 0 view .LVU1522
 4502 1aca C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR [r14+rcx]	# tmp360, quadmask.56_36, MEM[base: _187, index: _79, offs
 4502      3C0E
 4503 1ad0 C4417D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm15	# MEM[base: _187, index: _79, offset: 0B], tmp360
 4503      3C0E
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4504              		.loc 1 449 29 is_stmt 1 view .LVU1523
 4505              	.LVL207:
 450:sieve_extend.c ****     }
 4506              		.loc 1 450 9 view .LVU1524
 4507 1ad6 4901D6   		add	r14, rdx	# ivtmp.285, tmp201
 4508              	# sieve_extend.c:450:         *index_ptr |= mask; index_ptr+=step;
 450:sieve_extend.c ****     }
 4509              		.loc 1 450 20 is_stmt 0 view .LVU1525
 4510 1ad9 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [r8+rcx*4]	# tmp361, quadmask.56_36, MEM[base: index_ptr_128, index: 
 4510      0C88
 4511 1adf C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx*4], ymm1	# MEM[base: index_ptr_128, index: _79, step: 4, offset: 0B], 
 4511      0C88
 450:sieve_extend.c ****     }
 4512              		.loc 1 450 29 is_stmt 1 view .LVU1526
 4513              	.LVL208:
 450:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 132


 4514              		.loc 1 450 29 is_stmt 0 view .LVU1527
 4515 1ae5 4901D0   		add	r8, rdx	# index_ptr, tmp201
 4516              	.LVL209:
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4517              		.loc 1 445 11 is_stmt 1 view .LVU1528
 4518 1ae8 4D39C3   		cmp	r11, r8	# fast_loop_ptr, index_ptr
 4519 1aeb 7653     		jbe	.L371	#,
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4520              		.loc 1 446 9 view .LVU1529
 4521              	# sieve_extend.c:446:         *index_ptr |= mask; index_ptr+=step;
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4522              		.loc 1 446 20 is_stmt 0 view .LVU1530
 4523 1aed C4C17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [r8]	# tmp363, quadmask.56_36, MEM[base: index_ptr_128, offset: 0B]
 4523      18
 4524 1af2 C4C17D7F 		vmovdqa	YMMWORD PTR [r8], ymm3	# MEM[base: index_ptr_128, offset: 0B], tmp363
 4524      18
 446:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4525              		.loc 1 446 29 is_stmt 1 view .LVU1531
 4526              	.LVL210:
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4527              		.loc 1 447 9 view .LVU1532
 4528              	# sieve_extend.c:447:         *index_ptr |= mask; index_ptr+=step;
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4529              		.loc 1 447 20 is_stmt 0 view .LVU1533
 4530 1af7 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r8+rcx]	# tmp364, quadmask.56_36, MEM[base: index_ptr_128, index: _7
 4530      2408
 4531 1afd C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx], ymm4	# MEM[base: index_ptr_128, index: _79, offset: 0B], tmp364
 4531      2408
 447:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4532              		.loc 1 447 29 is_stmt 1 view .LVU1534
 4533              	.LVL211:
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4534              		.loc 1 448 9 view .LVU1535
 4535              	# sieve_extend.c:448:         *index_ptr |= mask; index_ptr+=step;
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4536              		.loc 1 448 20 is_stmt 0 view .LVU1536
 4537 1b03 C4C17DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r14]	# tmp365, quadmask.56_36, MEM[base: _187, offset: 0B]
 4537      2E
 4538 1b08 C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm5	# MEM[base: _187, offset: 0B], tmp365
 4538      2E
 448:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4539              		.loc 1 448 29 is_stmt 1 view .LVU1537
 4540              	.LVL212:
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4541              		.loc 1 449 9 view .LVU1538
 4542              	# sieve_extend.c:449:         *index_ptr |= mask; index_ptr+=step;
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4543              		.loc 1 449 20 is_stmt 0 view .LVU1539
 4544 1b0d C4C17DEB 		vpor	ymm6, ymm0, YMMWORD PTR [r14+rcx]	# tmp366, quadmask.56_36, MEM[base: _187, index: _79, offse
 4544      340E
 4545 1b13 C4C17D7F 		vmovdqa	YMMWORD PTR [r14+rcx], ymm6	# MEM[base: _187, index: _79, offset: 0B], tmp366
 4545      340E
 449:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4546              		.loc 1 449 29 is_stmt 1 view .LVU1540
 4547              	.LVL213:
 450:sieve_extend.c ****     }
 4548              		.loc 1 450 9 view .LVU1541
GAS LISTING /tmp/cc7rm34x.s 			page 133


 4549 1b19 4901D6   		add	r14, rdx	# ivtmp.285, tmp201
 4550              	# sieve_extend.c:450:         *index_ptr |= mask; index_ptr+=step;
 450:sieve_extend.c ****     }
 4551              		.loc 1 450 20 is_stmt 0 view .LVU1542
 4552 1b1c C4C17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [r8+rcx*4]	# tmp367, quadmask.56_36, MEM[base: index_ptr_128, index: 
 4552      3C88
 4553 1b22 C4C17D7F 		vmovdqa	YMMWORD PTR [r8+rcx*4], ymm7	# MEM[base: index_ptr_128, index: _79, step: 4, offset: 0B], 
 4553      3C88
 450:sieve_extend.c ****     }
 4554              		.loc 1 450 29 is_stmt 1 view .LVU1543
 4555              	.LVL214:
 450:sieve_extend.c ****     }
 4556              		.loc 1 450 29 is_stmt 0 view .LVU1544
 4557 1b28 4901D0   		add	r8, rdx	# index_ptr, tmp201
 4558              	.LVL215:
 445:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4559              		.loc 1 445 11 is_stmt 1 view .LVU1545
 4560 1b2b 4D39C3   		cmp	r11, r8	# fast_loop_ptr, index_ptr
 4561 1b2e 0F87E8FE 		ja	.L225	#,
 4561      FFFF
 4562 1b34 66662E0F 		.p2align 4
 4562      1F840000 
 4562      00000090 
 4563              		.p2align 3
 4564              	.L371:
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4565              		.loc 1 454 11 view .LVU1546
 4566 1b40 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4567 1b43 0F82A700 		jb	.L234	#,
 4567      0000
 4568              	.L226:
 455:sieve_extend.c ****     }
 4569              		.loc 1 455 9 view .LVU1547
 4570              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4571              		.loc 1 455 20 is_stmt 0 view .LVU1548
 4572 1b49 C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r8]	# tmp229, quadmask.56_36, MEM[base: index_ptr_125, offset: 0B]
 4572      00
 4573 1b4e C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm8	# MEM[base: index_ptr_125, offset: 0B], tmp229
 4573      00
 455:sieve_extend.c ****     }
 4574              		.loc 1 455 29 is_stmt 1 view .LVU1549
 4575              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4576              		.loc 1 455 38 is_stmt 0 view .LVU1550
 4577 1b53 4901C8   		add	r8, rcx	# index_ptr, _79
 4578              	.LVL216:
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4579              		.loc 1 454 11 is_stmt 1 view .LVU1551
 4580 1b56 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4581 1b59 0F829100 		jb	.L234	#,
 4581      0000
 455:sieve_extend.c ****     }
 4582              		.loc 1 455 9 view .LVU1552
 4583              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4584              		.loc 1 455 20 is_stmt 0 view .LVU1553
GAS LISTING /tmp/cc7rm34x.s 			page 134


 4585 1b5f C4417DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r8]	# tmp338, quadmask.56_36, MEM[base: index_ptr_125, offset: 0B]
 4585      08
 4586 1b64 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm9	# MEM[base: index_ptr_125, offset: 0B], tmp338
 4586      08
 455:sieve_extend.c ****     }
 4587              		.loc 1 455 29 is_stmt 1 view .LVU1554
 4588              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4589              		.loc 1 455 38 is_stmt 0 view .LVU1555
 4590 1b69 4901C8   		add	r8, rcx	# index_ptr, _79
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4591              		.loc 1 454 11 is_stmt 1 view .LVU1556
 4592 1b6c 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4593 1b6f 727F     		jb	.L234	#,
 455:sieve_extend.c ****     }
 4594              		.loc 1 455 9 view .LVU1557
 4595              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4596              		.loc 1 455 20 is_stmt 0 view .LVU1558
 4597 1b71 C4417DEB 		vpor	ymm10, ymm0, YMMWORD PTR [r8]	# tmp340, quadmask.56_36, MEM[base: index_ptr_125, offset: 0B]
 4597      10
 4598 1b76 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm10	# MEM[base: index_ptr_125, offset: 0B], tmp340
 4598      10
 455:sieve_extend.c ****     }
 4599              		.loc 1 455 29 is_stmt 1 view .LVU1559
 4600              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4601              		.loc 1 455 38 is_stmt 0 view .LVU1560
 4602 1b7b 4901C8   		add	r8, rcx	# index_ptr, _79
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4603              		.loc 1 454 11 is_stmt 1 view .LVU1561
 4604 1b7e 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4605 1b81 726D     		jb	.L234	#,
 455:sieve_extend.c ****     }
 4606              		.loc 1 455 9 view .LVU1562
 4607              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4608              		.loc 1 455 20 is_stmt 0 view .LVU1563
 4609 1b83 C4417DEB 		vpor	ymm11, ymm0, YMMWORD PTR [r8]	# tmp342, quadmask.56_36, MEM[base: index_ptr_125, offset: 0B]
 4609      18
 4610 1b88 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm11	# MEM[base: index_ptr_125, offset: 0B], tmp342
 4610      18
 455:sieve_extend.c ****     }
 4611              		.loc 1 455 29 is_stmt 1 view .LVU1564
 4612              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4613              		.loc 1 455 38 is_stmt 0 view .LVU1565
 4614 1b8d 4901C8   		add	r8, rcx	# index_ptr, _79
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4615              		.loc 1 454 11 is_stmt 1 view .LVU1566
 4616 1b90 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4617 1b93 725B     		jb	.L234	#,
 455:sieve_extend.c ****     }
 4618              		.loc 1 455 9 view .LVU1567
 4619              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4620              		.loc 1 455 20 is_stmt 0 view .LVU1568
GAS LISTING /tmp/cc7rm34x.s 			page 135


 4621 1b95 C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR [r8]	# tmp344, quadmask.56_36, MEM[base: index_ptr_125, offset: 0B]
 4621      20
 4622 1b9a C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm12	# MEM[base: index_ptr_125, offset: 0B], tmp344
 4622      20
 455:sieve_extend.c ****     }
 4623              		.loc 1 455 29 is_stmt 1 view .LVU1569
 4624              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4625              		.loc 1 455 38 is_stmt 0 view .LVU1570
 4626 1b9f 4901C8   		add	r8, rcx	# index_ptr, _79
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4627              		.loc 1 454 11 is_stmt 1 view .LVU1571
 4628 1ba2 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4629 1ba5 7249     		jb	.L234	#,
 455:sieve_extend.c ****     }
 4630              		.loc 1 455 9 view .LVU1572
 4631              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4632              		.loc 1 455 20 is_stmt 0 view .LVU1573
 4633 1ba7 C4417DEB 		vpor	ymm13, ymm0, YMMWORD PTR [r8]	# tmp346, quadmask.56_36, MEM[base: index_ptr_125, offset: 0B]
 4633      28
 4634 1bac C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm13	# MEM[base: index_ptr_125, offset: 0B], tmp346
 4634      28
 455:sieve_extend.c ****     }
 4635              		.loc 1 455 29 is_stmt 1 view .LVU1574
 4636              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4637              		.loc 1 455 38 is_stmt 0 view .LVU1575
 4638 1bb1 4901C8   		add	r8, rcx	# index_ptr, _79
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4639              		.loc 1 454 11 is_stmt 1 view .LVU1576
 4640 1bb4 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4641 1bb7 7237     		jb	.L234	#,
 455:sieve_extend.c ****     }
 4642              		.loc 1 455 9 view .LVU1577
 4643              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4644              		.loc 1 455 20 is_stmt 0 view .LVU1578
 4645 1bb9 C4417DEB 		vpor	ymm14, ymm0, YMMWORD PTR [r8]	# tmp348, quadmask.56_36, MEM[base: index_ptr_125, offset: 0B]
 4645      30
 4646 1bbe C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm14	# MEM[base: index_ptr_125, offset: 0B], tmp348
 4646      30
 455:sieve_extend.c ****     }
 4647              		.loc 1 455 29 is_stmt 1 view .LVU1579
 4648              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4649              		.loc 1 455 38 is_stmt 0 view .LVU1580
 4650 1bc3 4901C8   		add	r8, rcx	# index_ptr, _79
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4651              		.loc 1 454 11 is_stmt 1 view .LVU1581
 4652 1bc6 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4653 1bc9 7225     		jb	.L234	#,
 455:sieve_extend.c ****     }
 4654              		.loc 1 455 9 view .LVU1582
 4655              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4656              		.loc 1 455 20 is_stmt 0 view .LVU1583
GAS LISTING /tmp/cc7rm34x.s 			page 136


 4657 1bcb C4417DEB 		vpor	ymm15, ymm0, YMMWORD PTR [r8]	# tmp350, quadmask.56_36, MEM[base: index_ptr_125, offset: 0B]
 4657      38
 4658 1bd0 C4417D7F 		vmovdqa	YMMWORD PTR [r8], ymm15	# MEM[base: index_ptr_125, offset: 0B], tmp350
 4658      38
 455:sieve_extend.c ****     }
 4659              		.loc 1 455 29 is_stmt 1 view .LVU1584
 4660              	.LVL217:
 4661              	# sieve_extend.c:455:         *index_ptr |= mask; index_ptr+=step;
 455:sieve_extend.c ****     }
 4662              		.loc 1 455 38 is_stmt 0 view .LVU1585
 4663 1bd5 4901C8   		add	r8, rcx	# index_ptr, _79
 4664              	.LVL218:
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4665              		.loc 1 454 11 is_stmt 1 view .LVU1586
 4666 1bd8 4D39C1   		cmp	r9, r8	# range_stop_ptr, index_ptr
 4667 1bdb 0F8368FF 		jnb	.L226	#,
 4667      FFFF
 4668              	.LVL219:
 4669 1be1 66662E0F 		.p2align 4
 4669      1F840000 
 4669      0000000F 
 4669      1F4000
 4670              		.p2align 3
 4671              	.L234:
 454:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4672              		.loc 1 454 11 is_stmt 0 view .LVU1587
 4673              	.LBE339:
 4674              	.LBE342:
 4675              	.LBE343:
 537:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4676              		.loc 1 537 41 is_stmt 1 view .LVU1588
 4677              	# sieve_extend.c:537:     for (counter_t index = range_start; index < range_stop_unique;) {
 537:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4678              		.loc 1 537 5 is_stmt 0 view .LVU1589
 4679 1bf0 4939F2   		cmp	r10, rsi	# range_stop_unique, range_start
 4680 1bf3 0F87F7FC 		ja	.L227	#,
 4680      FFFF
 4681 1bf9 E9A2FCFF 		jmp	.L372	#
 4681      FF
 4682              	.LVL220:
 4683              	.L218:
 537:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4684              		.loc 1 537 5 view .LVU1590
 4685              	.LBE344:
 4686              	.LBB345:
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4687              		.loc 1 520 49 is_stmt 1 view .LVU1591
 4688              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4689              		.loc 1 520 13 is_stmt 0 view .LVU1592
 4690 1bfe 4839CE   		cmp	rsi, rcx	# range_start, range_stop
 4691              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4692              		.loc 1 521 52 view .LVU1593
 4693 1c01 41B90100 		mov	r9d, 1	# tmp183,
 4693      0000
 4694              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
GAS LISTING /tmp/cc7rm34x.s 			page 137


 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4695              		.loc 1 520 13 view .LVU1594
 4696 1c07 0F8796FC 		ja	.L216	#,
 4696      FFFF
 4697              	.LVL221:
 4698              	.L220:
 521:sieve_extend.c ****             return;                 
 4699              		.loc 1 521 17 is_stmt 1 discriminator 3 view .LVU1595
 4700              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4701              		.loc 1 521 49 is_stmt 0 discriminator 3 view .LVU1596
 4702 1c0d 4989F2   		mov	r10, rsi	# tmp179, range_start
 4703              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4704              		.loc 1 521 52 discriminator 3 view .LVU1597
 4705 1c10 C4C2C9F7 		shlx	rdx, r9, rsi	# tmp182, tmp183, range_start
 4705      D1
 4706              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4707              		.loc 1 521 49 discriminator 3 view .LVU1598
 4708 1c15 49C1EA06 		shr	r10, 6	# tmp179,
 4709              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4710              		.loc 1 520 76 discriminator 3 view .LVU1599
 4711 1c19 4801DE   		add	rsi, rbx	# range_start, step
 4712              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4713              		.loc 1 521 49 discriminator 3 view .LVU1600
 4714 1c1c 4A0914D7 		or	QWORD PTR [rdi+r10*8], rdx	# *_14, tmp182
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4715              		.loc 1 520 70 is_stmt 1 discriminator 3 view .LVU1601
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4716              		.loc 1 520 49 discriminator 3 view .LVU1602
 4717              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4718              		.loc 1 520 13 is_stmt 0 discriminator 3 view .LVU1603
 4719 1c20 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4720 1c23 0F827AFC 		jb	.L216	#,
 4720      FFFF
 521:sieve_extend.c ****             return;                 
 4721              		.loc 1 521 17 is_stmt 1 view .LVU1604
 4722              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4723              		.loc 1 521 49 is_stmt 0 view .LVU1605
 4724 1c29 4989F7   		mov	r15, rsi	# tmp260, range_start
 4725              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4726              		.loc 1 521 52 view .LVU1606
 4727 1c2c C442C9F7 		shlx	r12, r9, rsi	# tmp263, tmp183, range_start
 4727      E1
 4728              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4729              		.loc 1 521 49 view .LVU1607
 4730 1c31 49C1EF06 		shr	r15, 6	# tmp260,
 4731              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4732              		.loc 1 520 76 view .LVU1608
GAS LISTING /tmp/cc7rm34x.s 			page 138


 4733 1c35 4801DE   		add	rsi, rbx	# range_start, step
 4734              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4735              		.loc 1 521 49 view .LVU1609
 4736 1c38 4E0924FF 		or	QWORD PTR [rdi+r15*8], r12	# *_14, tmp263
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4737              		.loc 1 520 70 is_stmt 1 view .LVU1610
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4738              		.loc 1 520 49 view .LVU1611
 4739              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4740              		.loc 1 520 13 is_stmt 0 view .LVU1612
 4741 1c3c 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4742 1c3f 0F825EFC 		jb	.L216	#,
 4742      FFFF
 521:sieve_extend.c ****             return;                 
 4743              		.loc 1 521 17 is_stmt 1 view .LVU1613
 4744              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4745              		.loc 1 521 49 is_stmt 0 view .LVU1614
 4746 1c45 4989F5   		mov	r13, rsi	# tmp265, range_start
 4747              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4748              		.loc 1 521 52 view .LVU1615
 4749 1c48 C4C2C9F7 		shlx	rax, r9, rsi	# tmp268, tmp183, range_start
 4749      C1
 4750              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4751              		.loc 1 521 49 view .LVU1616
 4752 1c4d 49C1ED06 		shr	r13, 6	# tmp265,
 4753              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4754              		.loc 1 520 76 view .LVU1617
 4755 1c51 4801DE   		add	rsi, rbx	# range_start, step
 4756              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4757              		.loc 1 521 49 view .LVU1618
 4758 1c54 4A0904EF 		or	QWORD PTR [rdi+r13*8], rax	# *_14, tmp268
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4759              		.loc 1 520 70 is_stmt 1 view .LVU1619
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4760              		.loc 1 520 49 view .LVU1620
 4761              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4762              		.loc 1 520 13 is_stmt 0 view .LVU1621
 4763 1c58 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4764 1c5b 0F8242FC 		jb	.L216	#,
 4764      FFFF
 521:sieve_extend.c ****             return;                 
 4765              		.loc 1 521 17 is_stmt 1 view .LVU1622
 4766              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4767              		.loc 1 521 49 is_stmt 0 view .LVU1623
 4768 1c61 4989F6   		mov	r14, rsi	# tmp270, range_start
 4769              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4770              		.loc 1 521 52 view .LVU1624
GAS LISTING /tmp/cc7rm34x.s 			page 139


 4771 1c64 C442C9F7 		shlx	r8, r9, rsi	# tmp273, tmp183, range_start
 4771      C1
 4772              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4773              		.loc 1 521 49 view .LVU1625
 4774 1c69 49C1EE06 		shr	r14, 6	# tmp270,
 4775              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4776              		.loc 1 520 76 view .LVU1626
 4777 1c6d 4801DE   		add	rsi, rbx	# range_start, step
 4778              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4779              		.loc 1 521 49 view .LVU1627
 4780 1c70 4E0904F7 		or	QWORD PTR [rdi+r14*8], r8	# *_14, tmp273
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4781              		.loc 1 520 70 is_stmt 1 view .LVU1628
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4782              		.loc 1 520 49 view .LVU1629
 4783              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4784              		.loc 1 520 13 is_stmt 0 view .LVU1630
 4785 1c74 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4786 1c77 0F8226FC 		jb	.L216	#,
 4786      FFFF
 521:sieve_extend.c ****             return;                 
 4787              		.loc 1 521 17 is_stmt 1 view .LVU1631
 4788              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4789              		.loc 1 521 49 is_stmt 0 view .LVU1632
 4790 1c7d 4989F3   		mov	r11, rsi	# tmp275, range_start
 4791              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4792              		.loc 1 521 52 view .LVU1633
 4793 1c80 C442C9F7 		shlx	r10, r9, rsi	# tmp278, tmp183, range_start
 4793      D1
 4794              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4795              		.loc 1 521 49 view .LVU1634
 4796 1c85 49C1EB06 		shr	r11, 6	# tmp275,
 4797              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4798              		.loc 1 520 76 view .LVU1635
 4799 1c89 4801DE   		add	rsi, rbx	# range_start, step
 4800              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4801              		.loc 1 521 49 view .LVU1636
 4802 1c8c 4E0914DF 		or	QWORD PTR [rdi+r11*8], r10	# *_14, tmp278
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4803              		.loc 1 520 70 is_stmt 1 view .LVU1637
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4804              		.loc 1 520 49 view .LVU1638
 4805              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4806              		.loc 1 520 13 is_stmt 0 view .LVU1639
 4807 1c90 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4808 1c93 0F820AFC 		jb	.L216	#,
 4808      FFFF
GAS LISTING /tmp/cc7rm34x.s 			page 140


 521:sieve_extend.c ****             return;                 
 4809              		.loc 1 521 17 is_stmt 1 view .LVU1640
 4810              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4811              		.loc 1 521 49 is_stmt 0 view .LVU1641
 4812 1c99 4889F2   		mov	rdx, rsi	# tmp280, range_start
 4813              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4814              		.loc 1 521 52 view .LVU1642
 4815 1c9c C442C9F7 		shlx	r15, r9, rsi	# tmp283, tmp183, range_start
 4815      F9
 4816              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4817              		.loc 1 521 49 view .LVU1643
 4818 1ca1 48C1EA06 		shr	rdx, 6	# tmp280,
 4819              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4820              		.loc 1 520 76 view .LVU1644
 4821 1ca5 4801DE   		add	rsi, rbx	# range_start, step
 4822              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4823              		.loc 1 521 49 view .LVU1645
 4824 1ca8 4C093CD7 		or	QWORD PTR [rdi+rdx*8], r15	# *_14, tmp283
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4825              		.loc 1 520 70 is_stmt 1 view .LVU1646
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4826              		.loc 1 520 49 view .LVU1647
 4827              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4828              		.loc 1 520 13 is_stmt 0 view .LVU1648
 4829 1cac 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4830 1caf 0F82EEFB 		jb	.L216	#,
 4830      FFFF
 521:sieve_extend.c ****             return;                 
 4831              		.loc 1 521 17 is_stmt 1 view .LVU1649
 4832              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4833              		.loc 1 521 49 is_stmt 0 view .LVU1650
 4834 1cb5 4989F4   		mov	r12, rsi	# tmp285, range_start
 4835              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4836              		.loc 1 521 52 view .LVU1651
 4837 1cb8 C442C9F7 		shlx	r13, r9, rsi	# tmp288, tmp183, range_start
 4837      E9
 4838              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4839              		.loc 1 521 49 view .LVU1652
 4840 1cbd 49C1EC06 		shr	r12, 6	# tmp285,
 4841              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4842              		.loc 1 520 76 view .LVU1653
 4843 1cc1 4801DE   		add	rsi, rbx	# range_start, step
 4844              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4845              		.loc 1 521 49 view .LVU1654
 4846 1cc4 4E092CE7 		or	QWORD PTR [rdi+r12*8], r13	# *_14, tmp288
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/cc7rm34x.s 			page 141


 4847              		.loc 1 520 70 is_stmt 1 view .LVU1655
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4848              		.loc 1 520 49 view .LVU1656
 4849              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4850              		.loc 1 520 13 is_stmt 0 view .LVU1657
 4851 1cc8 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4852 1ccb 0F82D2FB 		jb	.L216	#,
 4852      FFFF
 521:sieve_extend.c ****             return;                 
 4853              		.loc 1 521 17 is_stmt 1 view .LVU1658
 4854              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4855              		.loc 1 521 49 is_stmt 0 view .LVU1659
 4856 1cd1 4889F0   		mov	rax, rsi	# tmp290, range_start
 4857              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4858              		.loc 1 521 52 view .LVU1660
 4859 1cd4 C442C9F7 		shlx	r14, r9, rsi	# tmp293, tmp183, range_start
 4859      F1
 4860              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4861              		.loc 1 521 49 view .LVU1661
 4862 1cd9 48C1E806 		shr	rax, 6	# tmp290,
 4863              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4864              		.loc 1 520 76 view .LVU1662
 4865 1cdd 4801DE   		add	rsi, rbx	# range_start, step
 4866              	# sieve_extend.c:521:                 bitarray_word[wordindex(index)] |= markmask(index);
 521:sieve_extend.c ****             return;                 
 4867              		.loc 1 521 49 view .LVU1663
 4868 1ce0 4C0934C7 		or	QWORD PTR [rdi+rax*8], r14	# *_14, tmp293
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4869              		.loc 1 520 70 is_stmt 1 view .LVU1664
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4870              		.loc 1 520 49 view .LVU1665
 4871              	# sieve_extend.c:520:             for (counter_t index = range_start; index <= range_stop; index +=
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4872              		.loc 1 520 13 is_stmt 0 view .LVU1666
 4873 1ce4 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4874 1ce7 0F8320FF 		jnb	.L220	#,
 4874      FFFF
 4875 1ced E9B1FBFF 		jmp	.L216	#
 4875      FF
 4876              	.LVL222:
 4877              	.L374:
 520:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 4878              		.loc 1 520 13 view .LVU1667
 4879              	.LBE345:
 4880              	# sieve_extend.c:596: }
 596:sieve_extend.c **** 
 4881              		.loc 1 596 1 view .LVU1668
 4882 1cf2 E8000000 		call	__stack_chk_fail@PLT	#
 4882      00
 4883              	.LVL223:
 596:sieve_extend.c **** 
 4884              		.loc 1 596 1 view .LVU1669
GAS LISTING /tmp/cc7rm34x.s 			page 142


 4885              		.cfi_endproc
 4886              	.LFE67:
 4888 1cf7 660F1F84 		.p2align 4
 4888      00000000 
 4888      00
 4890              	extendSieve_aligned:
 4891              	.LVL224:
 4892              	.LFB69:
 632:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4893              		.loc 1 632 140 is_stmt 1 view -0
 4894              		.cfi_startproc
 633:sieve_extend.c **** 
 4895              		.loc 1 633 5 view .LVU1671
 635:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4896              		.loc 1 635 5 view .LVU1672
 4897              	# sieve_extend.c:632: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 632:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4898              		.loc 1 632 140 is_stmt 0 view .LVU1673
 4899 1d00 55       		push	rbp	#
 4900              		.cfi_def_cfa_offset 16
 4901              		.cfi_offset 6, -16
 4902 1d01 4889E5   		mov	rbp, rsp	#,
 4903              		.cfi_def_cfa_register 6
 4904 1d04 4157     		push	r15	#
 4905 1d06 4156     		push	r14	#
 4906 1d08 4155     		push	r13	#
 4907              		.cfi_offset 15, -24
 4908              		.cfi_offset 14, -32
 4909              		.cfi_offset 13, -40
 4910 1d0a 4989FD   		mov	r13, rdi	# bitarray, tmp295
 4911 1d0d 4154     		push	r12	#
 4912              		.cfi_offset 12, -48
 4913 1d0f 4989D4   		mov	r12, rdx	# size, tmp297
 4914 1d12 53       		push	rbx	#
 4915              		.cfi_offset 3, -56
 4916              	# sieve_extend.c:635:     const counter_t destination_stop_word = wordindex(destination_stop);
 635:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4917              		.loc 1 635 21 view .LVU1674
 4918 1d13 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 4919              	# sieve_extend.c:636:     const counter_t copy_start = source_start + size;
 636:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 4920              		.loc 1 636 21 view .LVU1675
 4921 1d16 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 4922              	.LVL225:
 4923              	# sieve_extend.c:632: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 632:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4924              		.loc 1 632 140 view .LVU1676
 4925 1d1a 4883E4E0 		and	rsp, -32	#,
 4926              	# sieve_extend.c:638:     counter_t copy_word = wordindex(copy_start);
 638:sieve_extend.c ****     
 4927              		.loc 1 638 15 view .LVU1677
 4928 1d1e 4889C8   		mov	rax, rcx	# ivtmp.339, copy_start
 4929              	# sieve_extend.c:637:     counter_t source_word = wordindex(source_start);
 637:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4930              		.loc 1 637 15 view .LVU1678
 4931 1d21 48C1EE06 		shr	rsi, 6	# source_start,
 4932              	.LVL226:
GAS LISTING /tmp/cc7rm34x.s 			page 143


 4933              	# sieve_extend.c:632: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 632:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4934              		.loc 1 632 140 view .LVU1679
 4935 1d25 488D6424 		lea	rsp, -32[rsp]	#,
 4935      E0
 4936              	# sieve_extend.c:638:     counter_t copy_word = wordindex(copy_start);
 638:sieve_extend.c ****     
 4937              		.loc 1 638 15 view .LVU1680
 4938 1d2a 48C1E806 		shr	rax, 6	# ivtmp.339,
 4939              	# sieve_extend.c:640:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 640:sieve_extend.c **** 
 4940              		.loc 1 640 35 view .LVU1681
 4941 1d2e 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 4941      00000000 
 4942              	.LVL227:
 4943              	# sieve_extend.c:635:     const counter_t destination_stop_word = wordindex(destination_stop);
 635:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4944              		.loc 1 635 21 view .LVU1682
 4945 1d36 48C1EB06 		shr	rbx, 6	# tmp298,
 4946              	.LVL228:
 636:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 4947              		.loc 1 636 5 is_stmt 1 view .LVU1683
 637:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4948              		.loc 1 637 5 view .LVU1684
 4949              	# sieve_extend.c:640:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 640:sieve_extend.c **** 
 4950              		.loc 1 640 35 is_stmt 0 view .LVU1685
 4951 1d3a 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 4951      00
 4952              	# sieve_extend.c:637:     counter_t source_word = wordindex(source_start);
 637:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4953              		.loc 1 637 15 view .LVU1686
 4954 1d3f 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 4954      08
 4955              	.LVL229:
 638:sieve_extend.c ****     
 4956              		.loc 1 638 5 is_stmt 1 view .LVU1687
 640:sieve_extend.c **** 
 4957              		.loc 1 640 5 view .LVU1688
 4958              	# sieve_extend.c:640:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 640:sieve_extend.c **** 
 4959              		.loc 1 640 52 is_stmt 0 view .LVU1689
 4960 1d44 89CE     		mov	esi, ecx	# tmp183, copy_start
 4961              	.LVL230:
 4962              	# sieve_extend.c:642:     while (copy_word + size <= destination_stop_word) {
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4963              		.loc 1 642 22 view .LVU1690
 4964 1d46 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.339,
 4965              	.LVL231:
 4966              	# sieve_extend.c:640:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 640:sieve_extend.c **** 
 4967              		.loc 1 640 52 view .LVU1691
 4968 1d4a F7D6     		not	esi	# tmp183
 4969              	# sieve_extend.c:640:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 640:sieve_extend.c **** 
 4970              		.loc 1 640 35 view .LVU1692
 4971 1d4c 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
GAS LISTING /tmp/cc7rm34x.s 			page 144


 4972              	# sieve_extend.c:640:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 640:sieve_extend.c **** 
 4973              		.loc 1 640 52 view .LVU1693
 4974 1d50 48C7C2FF 		mov	rdx, -1	# tmp186,
 4974      FFFFFF
 4975              	.LVL232:
 640:sieve_extend.c **** 
 4976              		.loc 1 640 52 view .LVU1694
 4977 1d57 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 4977      C2
 4978              	# sieve_extend.c:640:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 640:sieve_extend.c **** 
 4979              		.loc 1 640 49 view .LVU1695
 4980 1d5c C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 4980      0E
 4981              	# sieve_extend.c:640:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 640:sieve_extend.c **** 
 4982              		.loc 1 640 25 view .LVU1696
 4983 1d61 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 4983      00
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4984              		.loc 1 642 5 is_stmt 1 view .LVU1697
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4985              		.loc 1 642 11 view .LVU1698
 4986 1d66 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.339
 4987 1d69 0F827101 		jb	.L376	#,
 4987      0000
 4988 1d6f 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 4988      00000000 
 4989 1d77 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 4989      00000000 
 4990              	.LVL233:
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 4991              		.loc 1 642 11 is_stmt 0 view .LVU1699
 4992 1d7f 4D01EA   		add	r10, r13	# tmp190, bitarray
 4993              	# sieve_extend.c:643:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 643:sieve_extend.c ****         copy_word += size;
 4994              		.loc 1 643 9 view .LVU1700
 4995 1d82 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 4995      00000000 
 4996 1d8a 4929C2   		sub	r10, rax	# tmp190, tmp191
 4997 1d8d 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 4997      18
 4998              	.LVL234:
 4999              	.L377:
 643:sieve_extend.c ****         copy_word += size;
 5000              		.loc 1 643 9 is_stmt 1 view .LVU1701
 5001              	.LBB346:
 5002              	.LBI346:
 5003              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
GAS LISTING /tmp/cc7rm34x.s 			page 145


   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 5004              		.loc 2 31 1 view .LVU1702
 5005              	.LBB347:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 5006              		.loc 2 34 3 view .LVU1703
 5007              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5008              		.loc 2 34 10 is_stmt 0 view .LVU1704
 5009 1d92 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5009      18
 5010 1d97 4C89FA   		mov	rdx, r15	#, _15
 5011 1d9a 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.339
 5011      10
 5012 1d9f 4C89F6   		mov	rsi, r14	#, _5
 5013 1da2 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 5014 1da6 E8000000 		call	memcpy@PLT	#
 5014      00
 5015              	.LVL235:
 5016              		.loc 2 34 10 view .LVU1705
 5017              	.LBE347:
 5018              	.LBE346:
 644:sieve_extend.c ****     }
 5019              		.loc 1 644 9 is_stmt 1 view .LVU1706
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5020              		.loc 1 642 11 view .LVU1707
 5021 1dab 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.339, %sfp
 5021      10
 5022 1db0 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.339,
 5023 1db4 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.339
 5024 1db7 0F822301 		jb	.L376	#,
 5024      0000
 643:sieve_extend.c ****         copy_word += size;
 5025              		.loc 1 643 9 view .LVU1708
GAS LISTING /tmp/cc7rm34x.s 			page 146


 5026              	.LVL236:
 5027              	.LBB355:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5028              		.loc 2 31 1 view .LVU1709
 5029              	.LBB348:
 5030              		.loc 2 34 3 view .LVU1710
 5031              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5032              		.loc 2 34 10 is_stmt 0 view .LVU1711
 5033 1dbd 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5033      18
 5034 1dc2 4C89F6   		mov	rsi, r14	#, _5
 5035 1dc5 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.339
 5035      10
 5036              	.LVL237:
 5037              		.loc 2 34 10 view .LVU1712
 5038 1dca 4C89FA   		mov	rdx, r15	#, _15
 5039 1dcd 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 5040 1dd1 E8000000 		call	memcpy@PLT	#
 5040      00
 5041              	.LVL238:
 5042              		.loc 2 34 10 view .LVU1713
 5043              	.LBE348:
 5044              	.LBE355:
 644:sieve_extend.c ****     }
 5045              		.loc 1 644 9 is_stmt 1 view .LVU1714
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5046              		.loc 1 642 11 view .LVU1715
 5047 1dd6 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.339, %sfp
 5047      10
 5048 1ddb 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.339,
 5049 1ddf 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.339
 5050 1de2 0F82F800 		jb	.L376	#,
 5050      0000
 643:sieve_extend.c ****         copy_word += size;
 5051              		.loc 1 643 9 view .LVU1716
 5052              	.LVL239:
 5053              	.LBB356:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5054              		.loc 2 31 1 view .LVU1717
 5055              	.LBB349:
 5056              		.loc 2 34 3 view .LVU1718
 5057              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5058              		.loc 2 34 10 is_stmt 0 view .LVU1719
 5059 1de8 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5059      18
 5060 1ded 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.339
 5060      10
 5061 1df2 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 5062 1df6 4C89FA   		mov	rdx, r15	#, _15
 5063 1df9 4C89F6   		mov	rsi, r14	#, _5
 5064 1dfc E8000000 		call	memcpy@PLT	#
 5064      00
 5065              	.LVL240:
 5066              		.loc 2 34 10 view .LVU1720
 5067              	.LBE349:
 5068              	.LBE356:
 644:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 147


 5069              		.loc 1 644 9 is_stmt 1 view .LVU1721
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5070              		.loc 1 642 11 view .LVU1722
 5071 1e01 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.339, %sfp
 5071      10
 5072 1e06 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.339,
 5073 1e0a 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.339
 5074 1e0d 0F82CD00 		jb	.L376	#,
 5074      0000
 643:sieve_extend.c ****         copy_word += size;
 5075              		.loc 1 643 9 view .LVU1723
 5076              	.LVL241:
 5077              	.LBB357:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5078              		.loc 2 31 1 view .LVU1724
 5079              	.LBB350:
 5080              		.loc 2 34 3 view .LVU1725
 5081              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5082              		.loc 2 34 10 is_stmt 0 view .LVU1726
 5083 1e13 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5083      18
 5084 1e18 4C89FA   		mov	rdx, r15	#, _15
 5085 1e1b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.339
 5085      10
 5086 1e20 4C89F6   		mov	rsi, r14	#, _5
 5087 1e23 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 5088 1e27 E8000000 		call	memcpy@PLT	#
 5088      00
 5089              	.LVL242:
 5090              		.loc 2 34 10 view .LVU1727
 5091              	.LBE350:
 5092              	.LBE357:
 644:sieve_extend.c ****     }
 5093              		.loc 1 644 9 is_stmt 1 view .LVU1728
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5094              		.loc 1 642 11 view .LVU1729
 5095 1e2c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.339, %sfp
 5095      10
 5096 1e31 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.339,
 5097 1e35 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.339
 5098 1e38 0F82A200 		jb	.L376	#,
 5098      0000
 643:sieve_extend.c ****         copy_word += size;
 5099              		.loc 1 643 9 view .LVU1730
 5100              	.LVL243:
 5101              	.LBB358:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5102              		.loc 2 31 1 view .LVU1731
 5103              	.LBB351:
 5104              		.loc 2 34 3 view .LVU1732
 5105              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5106              		.loc 2 34 10 is_stmt 0 view .LVU1733
 5107 1e3e 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5107      18
 5108 1e43 4C89FA   		mov	rdx, r15	#, _15
 5109 1e46 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.339
 5109      10
GAS LISTING /tmp/cc7rm34x.s 			page 148


 5110 1e4b 4C89F6   		mov	rsi, r14	#, _5
 5111 1e4e 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 5112 1e52 E8000000 		call	memcpy@PLT	#
 5112      00
 5113              	.LVL244:
 5114              		.loc 2 34 10 view .LVU1734
 5115              	.LBE351:
 5116              	.LBE358:
 644:sieve_extend.c ****     }
 5117              		.loc 1 644 9 is_stmt 1 view .LVU1735
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5118              		.loc 1 642 11 view .LVU1736
 5119 1e57 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.339, %sfp
 5119      10
 5120 1e5c 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.339,
 5121 1e60 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.339
 5122 1e63 727B     		jb	.L376	#,
 643:sieve_extend.c ****         copy_word += size;
 5123              		.loc 1 643 9 view .LVU1737
 5124              	.LVL245:
 5125              	.LBB359:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5126              		.loc 2 31 1 view .LVU1738
 5127              	.LBB352:
 5128              		.loc 2 34 3 view .LVU1739
 5129              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5130              		.loc 2 34 10 is_stmt 0 view .LVU1740
 5131 1e65 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5131      18
 5132 1e6a 4C89F6   		mov	rsi, r14	#, _5
 5133 1e6d 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.339
 5133      10
 5134 1e72 4C89FA   		mov	rdx, r15	#, _15
 5135 1e75 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 5136 1e79 E8000000 		call	memcpy@PLT	#
 5136      00
 5137              	.LVL246:
 5138              		.loc 2 34 10 view .LVU1741
 5139              	.LBE352:
 5140              	.LBE359:
 644:sieve_extend.c ****     }
 5141              		.loc 1 644 9 is_stmt 1 view .LVU1742
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5142              		.loc 1 642 11 view .LVU1743
 5143 1e7e 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.339, %sfp
 5143      10
 5144 1e83 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.339,
 5145 1e87 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.339
 5146 1e8a 7254     		jb	.L376	#,
 643:sieve_extend.c ****         copy_word += size;
 5147              		.loc 1 643 9 view .LVU1744
 5148              	.LVL247:
 5149              	.LBB360:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5150              		.loc 2 31 1 view .LVU1745
 5151              	.LBB353:
 5152              		.loc 2 34 3 view .LVU1746
GAS LISTING /tmp/cc7rm34x.s 			page 149


 5153              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5154              		.loc 2 34 10 is_stmt 0 view .LVU1747
 5155 1e8c 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5155      18
 5156 1e91 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.339
 5156      10
 5157 1e96 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 5158 1e9a 4C89FA   		mov	rdx, r15	#, _15
 5159 1e9d 4C89F6   		mov	rsi, r14	#, _5
 5160 1ea0 E8000000 		call	memcpy@PLT	#
 5160      00
 5161              	.LVL248:
 5162              		.loc 2 34 10 view .LVU1748
 5163              	.LBE353:
 5164              	.LBE360:
 644:sieve_extend.c ****     }
 5165              		.loc 1 644 9 is_stmt 1 view .LVU1749
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5166              		.loc 1 642 11 view .LVU1750
 5167 1ea5 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.339, %sfp
 5167      10
 5168 1eaa 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.339,
 5169 1eae 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.339
 5170 1eb1 722D     		jb	.L376	#,
 643:sieve_extend.c ****         copy_word += size;
 5171              		.loc 1 643 9 view .LVU1751
 5172              	.LVL249:
 5173              	.LBB361:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5174              		.loc 2 31 1 view .LVU1752
 5175              	.LBB354:
 5176              		.loc 2 34 3 view .LVU1753
 5177              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5178              		.loc 2 34 10 is_stmt 0 view .LVU1754
 5179 1eb3 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5179      18
 5180 1eb8 4C89FA   		mov	rdx, r15	#, _15
 5181 1ebb 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.339
 5181      10
 5182 1ec0 4C89F6   		mov	rsi, r14	#, _5
 5183 1ec3 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 5184 1ec7 E8000000 		call	memcpy@PLT	#
 5184      00
 5185              	.LVL250:
 5186              		.loc 2 34 10 view .LVU1755
 5187              	.LBE354:
 5188              	.LBE361:
 644:sieve_extend.c ****     }
 5189              		.loc 1 644 9 is_stmt 1 view .LVU1756
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5190              		.loc 1 642 11 view .LVU1757
 5191 1ecc 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.339, %sfp
 5191      10
 5192              	.LVL251:
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5193              		.loc 1 642 11 is_stmt 0 view .LVU1758
 5194 1ed1 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.339,
GAS LISTING /tmp/cc7rm34x.s 			page 150


 5195              	.LVL252:
 642:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5196              		.loc 1 642 11 view .LVU1759
 5197 1ed5 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.339
 5198 1ed8 0F83B4FE 		jnb	.L377	#,
 5198      FFFF
 5199              	.LVL253:
 5200 1ede 6690     		.p2align 4
 5201              		.p2align 3
 5202              	.L376:
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5203              		.loc 1 647 10 is_stmt 1 view .LVU1760
 5204 1ee0 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.339
 5205 1ee3 0F864902 		jbe	.L487	#,
 5205      0000
 5206 1ee9 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 5207 1eed 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 5207      00000000 
 5208              	.LVL254:
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5209              		.loc 1 647 10 is_stmt 0 view .LVU1761
 5210 1ef5 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 5210      20
 5211 1efa 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 5212 1efe 4D39FA   		cmp	r10, r15	# _4, tmp199
 5213 1f01 410F9DC3 		setge	r11b	#, tmp201
 5214 1f05 4939FC   		cmp	r12, rdi	# _41, tmp202
 5215 1f08 400F9DC6 		setge	sil	#, tmp204
 5216 1f0c 4108F3   		or	r11b, sil	# tmp201, tmp204
 5217 1f0f 0F844B02 		je	.L379	#,
 5217      0000
 5218 1f15 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 5219 1f19 4829C2   		sub	rdx, rax	# tmp207, ivtmp.339
 5220 1f1c 4883FA05 		cmp	rdx, 5	# tmp207,
 5221 1f20 0F863A02 		jbe	.L379	#,
 5221      0000
 5222 1f26 4D89F7   		mov	r15, r14	# tmp210, _5
 5223 1f29 49C1EF03 		shr	r15, 3	# tmp210,
 5224 1f2d 49F7DF   		neg	r15	# tmp211
 5225 1f30 4183E703 		and	r15d, 3	# prolog_loop_niters.307,
 5226 1f34 0F842E03 		je	.L386	#,
 5226      0000
 648:sieve_extend.c ****         source_word++;
 5227              		.loc 1 648 9 is_stmt 1 view .LVU1762
 5228              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5229              		.loc 1 648 39 is_stmt 0 view .LVU1763
 5230 1f3a 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 5231 1f3d 4983FF01 		cmp	r15, 1	# prolog_loop_niters.307,
 5232              	# sieve_extend.c:649:         source_word++;
 649:sieve_extend.c ****         copy_word++;
 5233              		.loc 1 649 20 view .LVU1764
 5234 1f41 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 5234      08
 5235              	# sieve_extend.c:650:         copy_word++;
 650:sieve_extend.c ****     }
 5236              		.loc 1 650 18 view .LVU1765
GAS LISTING /tmp/cc7rm34x.s 			page 151


 5237 1f46 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 5238              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5239              		.loc 1 648 29 view .LVU1766
 5240 1f4a 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 5240      00
 649:sieve_extend.c ****         copy_word++;
 5241              		.loc 1 649 9 is_stmt 1 view .LVU1767
 5242              	# sieve_extend.c:649:         source_word++;
 649:sieve_extend.c ****         copy_word++;
 5243              		.loc 1 649 20 is_stmt 0 view .LVU1768
 5244 1f4f 4D8D6101 		lea	r12, 1[r9]	# source_word,
 5245              	.LVL255:
 650:sieve_extend.c ****     }
 5246              		.loc 1 650 9 is_stmt 1 view .LVU1769
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5247              		.loc 1 647 10 view .LVU1770
 5248 1f53 742A     		je	.L380	#,
 648:sieve_extend.c ****         source_word++;
 5249              		.loc 1 648 9 view .LVU1771
 5250              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5251              		.loc 1 648 39 is_stmt 0 view .LVU1772
 5252 1f55 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 5252      00
 5253 1f5a 4983FF03 		cmp	r15, 3	# prolog_loop_niters.307,
 5254              	# sieve_extend.c:649:         source_word++;
 649:sieve_extend.c ****         copy_word++;
 5255              		.loc 1 649 20 view .LVU1773
 5256 1f5e 4D8D6102 		lea	r12, 2[r9]	# source_word,
 5257              	.LVL256:
 5258              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5259              		.loc 1 648 29 view .LVU1774
 5260 1f62 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 5260      00
 649:sieve_extend.c ****         copy_word++;
 5261              		.loc 1 649 9 is_stmt 1 view .LVU1775
 5262              	.LVL257:
 650:sieve_extend.c ****     }
 5263              		.loc 1 650 9 view .LVU1776
 5264              	# sieve_extend.c:650:         copy_word++;
 650:sieve_extend.c ****     }
 5265              		.loc 1 650 18 is_stmt 0 view .LVU1777
 5266 1f67 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 5267              	.LVL258:
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5268              		.loc 1 647 10 is_stmt 1 view .LVU1778
 5269 1f6b 7512     		jne	.L380	#,
 648:sieve_extend.c ****         source_word++;
 5270              		.loc 1 648 9 view .LVU1779
 5271              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5272              		.loc 1 648 39 is_stmt 0 view .LVU1780
 5273 1f6d 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 5273      00
 5274              	# sieve_extend.c:649:         source_word++;
GAS LISTING /tmp/cc7rm34x.s 			page 152


 649:sieve_extend.c ****         copy_word++;
 5275              		.loc 1 649 20 view .LVU1781
 5276 1f72 4D8D6103 		lea	r12, 3[r9]	# source_word,
 5277              	.LVL259:
 5278              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5279              		.loc 1 648 29 view .LVU1782
 5280 1f76 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 5280      00
 649:sieve_extend.c ****         copy_word++;
 5281              		.loc 1 649 9 is_stmt 1 view .LVU1783
 5282              	.LVL260:
 650:sieve_extend.c ****     }
 5283              		.loc 1 650 9 view .LVU1784
 5284              	# sieve_extend.c:650:         copy_word++;
 650:sieve_extend.c ****     }
 5285              		.loc 1 650 18 is_stmt 0 view .LVU1785
 5286 1f7b 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 5287              	.LVL261:
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5288              		.loc 1 647 10 is_stmt 1 view .LVU1786
 5289              	.L380:
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5290              		.loc 1 647 10 is_stmt 0 view .LVU1787
 5291 1f7f 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5291      08
 5292 1f84 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 5293 1f87 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.307
 5294 1f8a 4929C3   		sub	r11, rax	# niters.308, ivtmp.339
 5295 1f8d 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.307
 5296 1f90 4D89D8   		mov	r8, r11	# bnd.309, niters.308
 5297 1f93 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.307
 5298 1f96 49C1E802 		shr	r8, 2	# bnd.309,
 5299 1f9a 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.317,
 5299      00
 5300 1f9f 49C1E005 		sal	r8, 5	# _182,
 5301              	# sieve_extend.c:637:     counter_t source_word = wordindex(source_start);
 637:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5302              		.loc 1 637 15 view .LVU1788
 5303 1fa3 31C0     		xor	eax, eax	# ivtmp.330
 5304 1fa5 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 5305 1fa9 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.314,
 5305      00
 5306 1fae 48C1EA05 		shr	rdx, 5	# tmp226,
 5307 1fb2 4883C201 		add	rdx, 1	# tmp229,
 5308 1fb6 83E207   		and	edx, 7	# tmp230,
 5309 1fb9 0F849500 		je	.L382	#,
 5309      0000
 5310 1fbf 4883FA01 		cmp	rdx, 1	# tmp230,
 5311 1fc3 7477     		je	.L446	#,
 5312 1fc5 4883FA02 		cmp	rdx, 2	# tmp230,
 5313 1fc9 7462     		je	.L447	#,
 5314 1fcb 4883FA03 		cmp	rdx, 3	# tmp230,
 5315 1fcf 744D     		je	.L448	#,
 5316 1fd1 4883FA04 		cmp	rdx, 4	# tmp230,
 5317 1fd5 7438     		je	.L449	#,
 5318 1fd7 4883FA05 		cmp	rdx, 5	# tmp230,
GAS LISTING /tmp/cc7rm34x.s 			page 153


 5319 1fdb 7423     		je	.L450	#,
 5320 1fdd 4883FA06 		cmp	rdx, 6	# tmp230,
 5321 1fe1 740E     		je	.L451	#,
 648:sieve_extend.c ****         source_word++;
 5322              		.loc 1 648 9 is_stmt 1 view .LVU1789
 5323              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5324              		.loc 1 648 29 is_stmt 0 view .LVU1790
 5325 1fe3 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.314_119, index: ivtmp.330_180, offset: 0
 5326 1fe7 B8200000 		mov	eax, 32	# ivtmp.330,
 5326      00
 5327 1fec C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B], tmp3
 5327      0F
 649:sieve_extend.c ****         copy_word++;
 5328              		.loc 1 649 9 is_stmt 1 view .LVU1791
 650:sieve_extend.c ****     }
 5329              		.loc 1 650 9 view .LVU1792
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5330              		.loc 1 647 10 view .LVU1793
 5331              	.L451:
 648:sieve_extend.c ****         source_word++;
 5332              		.loc 1 648 9 view .LVU1794
 5333              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5334              		.loc 1 648 29 is_stmt 0 view .LVU1795
 5335 1ff1 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.314_119, index: ivtmp.330_180, offse
 5335      06
 5336 1ff6 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B], 
 5336      3C07
 649:sieve_extend.c ****         copy_word++;
 5337              		.loc 1 649 9 is_stmt 1 view .LVU1796
 650:sieve_extend.c ****     }
 5338              		.loc 1 650 9 view .LVU1797
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5339              		.loc 1 647 10 view .LVU1798
 5340 1ffc 4883C020 		add	rax, 32	# ivtmp.330,
 5341              	.L450:
 648:sieve_extend.c ****         source_word++;
 5342              		.loc 1 648 9 view .LVU1799
 5343              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5344              		.loc 1 648 29 is_stmt 0 view .LVU1800
 5345 2000 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.314_119, index: ivtmp.330_180, offse
 5345      06
 5346 2005 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B], 
 5346      3407
 649:sieve_extend.c ****         copy_word++;
 5347              		.loc 1 649 9 is_stmt 1 view .LVU1801
 650:sieve_extend.c ****     }
 5348              		.loc 1 650 9 view .LVU1802
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5349              		.loc 1 647 10 view .LVU1803
 5350 200b 4883C020 		add	rax, 32	# ivtmp.330,
 5351              	.L449:
 648:sieve_extend.c ****         source_word++;
 5352              		.loc 1 648 9 view .LVU1804
 5353              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cc7rm34x.s 			page 154


 648:sieve_extend.c ****         source_word++;
 5354              		.loc 1 648 29 is_stmt 0 view .LVU1805
 5355 200f C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.314_119, index: ivtmp.330_180, offse
 5355      06
 5356 2014 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B], 
 5356      2C07
 649:sieve_extend.c ****         copy_word++;
 5357              		.loc 1 649 9 is_stmt 1 view .LVU1806
 650:sieve_extend.c ****     }
 5358              		.loc 1 650 9 view .LVU1807
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5359              		.loc 1 647 10 view .LVU1808
 5360 201a 4883C020 		add	rax, 32	# ivtmp.330,
 5361              	.L448:
 648:sieve_extend.c ****         source_word++;
 5362              		.loc 1 648 9 view .LVU1809
 5363              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5364              		.loc 1 648 29 is_stmt 0 view .LVU1810
 5365 201e C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.314_119, index: ivtmp.330_180, offse
 5365      06
 5366 2023 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B], 
 5366      2407
 649:sieve_extend.c ****         copy_word++;
 5367              		.loc 1 649 9 is_stmt 1 view .LVU1811
 650:sieve_extend.c ****     }
 5368              		.loc 1 650 9 view .LVU1812
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5369              		.loc 1 647 10 view .LVU1813
 5370 2029 4883C020 		add	rax, 32	# ivtmp.330,
 5371              	.L447:
 648:sieve_extend.c ****         source_word++;
 5372              		.loc 1 648 9 view .LVU1814
 5373              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5374              		.loc 1 648 29 is_stmt 0 view .LVU1815
 5375 202d C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.314_119, index: ivtmp.330_180, offse
 5375      06
 5376 2032 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B], 
 5376      0407
 649:sieve_extend.c ****         copy_word++;
 5377              		.loc 1 649 9 is_stmt 1 view .LVU1816
 650:sieve_extend.c ****     }
 5378              		.loc 1 650 9 view .LVU1817
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5379              		.loc 1 647 10 view .LVU1818
 5380 2038 4883C020 		add	rax, 32	# ivtmp.330,
 5381              	.L446:
 648:sieve_extend.c ****         source_word++;
 5382              		.loc 1 648 9 view .LVU1819
 5383              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5384              		.loc 1 648 29 is_stmt 0 view .LVU1820
 5385 203c C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.314_119, index: ivtmp.330_180, offse
 5385      06
 5386 2041 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B], 
 5386      1407
GAS LISTING /tmp/cc7rm34x.s 			page 155


 649:sieve_extend.c ****         copy_word++;
 5387              		.loc 1 649 9 is_stmt 1 view .LVU1821
 650:sieve_extend.c ****     }
 5388              		.loc 1 650 9 view .LVU1822
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5389              		.loc 1 647 10 view .LVU1823
 5390 2047 4883C020 		add	rax, 32	# ivtmp.330,
 5391 204b 4C39C0   		cmp	rax, r8	# ivtmp.330, _182
 5392 204e 0F848D00 		je	.L483	#,
 5392      0000
 5393              	.L382:
 648:sieve_extend.c ****         source_word++;
 5394              		.loc 1 648 9 view .LVU1824
 5395              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5396              		.loc 1 648 29 is_stmt 0 view .LVU1825
 5397 2054 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.314_119, index: ivtmp.330_180, offse
 5397      06
 5398 2059 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B], 
 5398      1C07
 649:sieve_extend.c ****         copy_word++;
 5399              		.loc 1 649 9 is_stmt 1 view .LVU1826
 650:sieve_extend.c ****     }
 5400              		.loc 1 650 9 view .LVU1827
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5401              		.loc 1 647 10 view .LVU1828
 648:sieve_extend.c ****         source_word++;
 5402              		.loc 1 648 9 view .LVU1829
 5403              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5404              		.loc 1 648 29 is_stmt 0 view .LVU1830
 5405 205f C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.314_119, index: ivtmp.330_180, off
 5405      0620
 5406 2065 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B]
 5406      440720
 649:sieve_extend.c ****         copy_word++;
 5407              		.loc 1 649 9 is_stmt 1 view .LVU1831
 650:sieve_extend.c ****     }
 5408              		.loc 1 650 9 view .LVU1832
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5409              		.loc 1 647 10 view .LVU1833
 648:sieve_extend.c ****         source_word++;
 5410              		.loc 1 648 9 view .LVU1834
 5411              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5412              		.loc 1 648 29 is_stmt 0 view .LVU1835
 5413 206c C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.314_119, index: ivtmp.330_180, off
 5413      0640
 5414 2072 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B]
 5414      4C0740
 649:sieve_extend.c ****         copy_word++;
 5415              		.loc 1 649 9 is_stmt 1 view .LVU1836
 650:sieve_extend.c ****     }
 5416              		.loc 1 650 9 view .LVU1837
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5417              		.loc 1 647 10 view .LVU1838
 648:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cc7rm34x.s 			page 156


 5418              		.loc 1 648 9 view .LVU1839
 5419              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5420              		.loc 1 648 29 is_stmt 0 view .LVU1840
 5421 2079 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.314_119, index: ivtmp.330_180, of
 5421      0660
 5422 207f C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0B
 5422      540760
 649:sieve_extend.c ****         copy_word++;
 5423              		.loc 1 649 9 is_stmt 1 view .LVU1841
 650:sieve_extend.c ****     }
 5424              		.loc 1 650 9 view .LVU1842
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5425              		.loc 1 647 10 view .LVU1843
 648:sieve_extend.c ****         source_word++;
 5426              		.loc 1 648 9 view .LVU1844
 5427              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5428              		.loc 1 648 29 is_stmt 0 view .LVU1845
 5429 2086 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.314_119, index: ivtmp.330_180, o
 5429      06800000 
 5429      00
 5430 208f C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0
 5430      9C078000 
 5430      0000
 649:sieve_extend.c ****         copy_word++;
 5431              		.loc 1 649 9 is_stmt 1 view .LVU1846
 650:sieve_extend.c ****     }
 5432              		.loc 1 650 9 view .LVU1847
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5433              		.loc 1 647 10 view .LVU1848
 648:sieve_extend.c ****         source_word++;
 5434              		.loc 1 648 9 view .LVU1849
 5435              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5436              		.loc 1 648 29 is_stmt 0 view .LVU1850
 5437 2099 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.314_119, index: ivtmp.330_180, o
 5437      06A00000 
 5437      00
 5438 20a2 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0
 5438      A407A000 
 5438      0000
 649:sieve_extend.c ****         copy_word++;
 5439              		.loc 1 649 9 is_stmt 1 view .LVU1851
 650:sieve_extend.c ****     }
 5440              		.loc 1 650 9 view .LVU1852
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5441              		.loc 1 647 10 view .LVU1853
 648:sieve_extend.c ****         source_word++;
 5442              		.loc 1 648 9 view .LVU1854
 5443              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5444              		.loc 1 648 29 is_stmt 0 view .LVU1855
 5445 20ac C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.314_119, index: ivtmp.330_180, o
 5445      06C00000 
 5445      00
 5446 20b5 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0
GAS LISTING /tmp/cc7rm34x.s 			page 157


 5446      AC07C000 
 5446      0000
 649:sieve_extend.c ****         copy_word++;
 5447              		.loc 1 649 9 is_stmt 1 view .LVU1856
 650:sieve_extend.c ****     }
 5448              		.loc 1 650 9 view .LVU1857
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5449              		.loc 1 647 10 view .LVU1858
 648:sieve_extend.c ****         source_word++;
 5450              		.loc 1 648 9 view .LVU1859
 5451              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5452              		.loc 1 648 29 is_stmt 0 view .LVU1860
 5453 20bf C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.314_119, index: ivtmp.330_180, o
 5453      06E00000 
 5453      00
 5454 20c8 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.317_125, index: ivtmp.330_180, offset: 0
 5454      B407E000 
 5454      0000
 649:sieve_extend.c ****         copy_word++;
 5455              		.loc 1 649 9 is_stmt 1 view .LVU1861
 650:sieve_extend.c ****     }
 5456              		.loc 1 650 9 view .LVU1862
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5457              		.loc 1 647 10 view .LVU1863
 5458 20d2 48050001 		add	rax, 256	# ivtmp.330,
 5458      0000
 5459 20d8 4C39C0   		cmp	rax, r8	# ivtmp.330, _182
 5460 20db 0F8573FF 		jne	.L382	#,
 5460      FFFF
 5461              	.L483:
 5462 20e1 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.310, niters.308
 5463 20e4 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.310,
 5464 20e8 4D01CC   		add	r12, r9	# tmp.311, niters_vector_mult_vf.310
 5465 20eb 4D01CE   		add	r14, r9	# tmp.312, niters_vector_mult_vf.310
 5466 20ee 4D39CB   		cmp	r11, r9	# niters.308, niters_vector_mult_vf.310
 5467 20f1 7455     		je	.L486	#,
 5468              	.LVL262:
 648:sieve_extend.c ****         source_word++;
 5469              		.loc 1 648 9 view .LVU1864
 5470              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5471              		.loc 1 648 39 is_stmt 0 view .LVU1865
 5472 20f3 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 5472      00
 5473              	# sieve_extend.c:650:         copy_word++;
 650:sieve_extend.c ****     }
 5474              		.loc 1 650 18 view .LVU1866
 5475 20f8 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 5476              	# sieve_extend.c:649:         source_word++;
 649:sieve_extend.c ****         copy_word++;
 5477              		.loc 1 649 20 view .LVU1867
 5478 20fc 4983C401 		add	r12, 1	# source_word,
 5479              	.LVL263:
 5480              	# sieve_extend.c:647:    while (copy_word < destination_stop_word) {
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5481              		.loc 1 647 10 view .LVU1868
GAS LISTING /tmp/cc7rm34x.s 			page 158


 5482 2100 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 5483              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5484              		.loc 1 648 29 view .LVU1869
 5485 2103 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 5485      00
 649:sieve_extend.c ****         copy_word++;
 5486              		.loc 1 649 9 is_stmt 1 view .LVU1870
 5487              	.LVL264:
 650:sieve_extend.c ****     }
 5488              		.loc 1 650 9 view .LVU1871
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5489              		.loc 1 647 10 view .LVU1872
 5490 2108 763E     		jbe	.L486	#,
 648:sieve_extend.c ****         source_word++;
 5491              		.loc 1 648 9 view .LVU1873
 5492              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5493              		.loc 1 648 39 is_stmt 0 view .LVU1874
 5494 210a 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 5494      00000000 
 5495              	# sieve_extend.c:650:         copy_word++;
 650:sieve_extend.c ****     }
 5496              		.loc 1 650 18 view .LVU1875
 5497 2112 4983C602 		add	r14, 2	# copy_word,
 5498              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5499              		.loc 1 648 39 view .LVU1876
 5500 2116 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 5500      00
 5501              	# sieve_extend.c:647:    while (copy_word < destination_stop_word) {
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5502              		.loc 1 647 10 view .LVU1877
 5503 211b 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 5504              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5505              		.loc 1 648 29 view .LVU1878
 5506 211e 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 5506      00
 649:sieve_extend.c ****         copy_word++;
 5507              		.loc 1 649 9 is_stmt 1 view .LVU1879
 650:sieve_extend.c ****     }
 5508              		.loc 1 650 9 view .LVU1880
 5509              	.LVL265:
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5510              		.loc 1 647 10 view .LVU1881
 5511 2123 7623     		jbe	.L486	#,
 648:sieve_extend.c ****         source_word++;
 5512              		.loc 1 648 9 view .LVU1882
 5513              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5514              		.loc 1 648 39 is_stmt 0 view .LVU1883
 5515 2125 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 5515      08
 5516              	.LVL266:
 5517              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cc7rm34x.s 			page 159


 5518              		.loc 1 648 29 view .LVU1884
 5519 212a 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 5519      00
 649:sieve_extend.c ****         copy_word++;
 5520              		.loc 1 649 9 is_stmt 1 view .LVU1885
 650:sieve_extend.c ****     }
 5521              		.loc 1 650 9 view .LVU1886
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5522              		.loc 1 647 10 view .LVU1887
 5523 212f C5F877   		vzeroupper
 5524              	.LVL267:
 5525              	.L487:
 5526              	# sieve_extend.c:653: }
 653:sieve_extend.c **** 
 5527              		.loc 1 653 1 is_stmt 0 view .LVU1888
 5528 2132 488D65D8 		lea	rsp, -40[rbp]	#,
 5529 2136 5B       		pop	rbx	#
 5530 2137 415C     		pop	r12	#
 5531 2139 415D     		pop	r13	#
 5532 213b 415E     		pop	r14	#
 5533 213d 415F     		pop	r15	#
 5534 213f 5D       		pop	rbp	#
 5535              		.cfi_remember_state
 5536              		.cfi_def_cfa 7, 8
 5537 2140 C3       		ret	
 5538              	.LVL268:
 5539              		.p2align 4,,7
 5540 2141 0F1F8000 		.p2align 3
 5540      000000
 5541              	.L486:
 5542              		.cfi_restore_state
 653:sieve_extend.c **** 
 5543              		.loc 1 653 1 view .LVU1889
 5544 2148 C5F877   		vzeroupper
 5545 214b 488D65D8 		lea	rsp, -40[rbp]	#,
 5546 214f 5B       		pop	rbx	#
 5547              	.LVL269:
 653:sieve_extend.c **** 
 5548              		.loc 1 653 1 view .LVU1890
 5549 2150 415C     		pop	r12	#
 5550 2152 415D     		pop	r13	#
 5551              	.LVL270:
 653:sieve_extend.c **** 
 5552              		.loc 1 653 1 view .LVU1891
 5553 2154 415E     		pop	r14	#
 5554 2156 415F     		pop	r15	#
 5555 2158 5D       		pop	rbp	#
 5556              		.cfi_remember_state
 5557              		.cfi_def_cfa 7, 8
 5558 2159 C3       		ret	
 5559              	.LVL271:
 5560 215a 660F1F44 		.p2align 4,,7
 5560      0000
 5561              		.p2align 3
 5562              	.L379:
 5563              		.cfi_restore_state
 5564              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cc7rm34x.s 			page 160


 648:sieve_extend.c ****         source_word++;
 5565              		.loc 1 648 39 view .LVU1892
 5566 2160 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5566      08
 5567 2165 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.325,
 5567      00
 5568 216a 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 5568      00
 5569              	.LVL272:
 648:sieve_extend.c ****         source_word++;
 5570              		.loc 1 648 39 view .LVU1893
 5571 216f 4C89EE   		mov	rsi, r13	# tmp221, _179
 5572 2172 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.325
 5573 2175 4829C7   		sub	rdi, rax	# source_word, ivtmp.339
 5574 2178 4883EE08 		sub	rsi, 8	# tmp222,
 5575 217c 48C1EE03 		shr	rsi, 3	# tmp220,
 5576 2180 4883C601 		add	rsi, 1	# tmp223,
 5577 2184 83E607   		and	esi, 7	# tmp224,
 5578 2187 0F848100 		je	.L384	#,
 5578      0000
 5579 218d 4883FE01 		cmp	rsi, 1	# tmp224,
 5580 2191 7466     		je	.L452	#,
 5581 2193 4883FE02 		cmp	rsi, 2	# tmp224,
 5582 2197 7454     		je	.L453	#,
 5583 2199 4883FE03 		cmp	rsi, 3	# tmp224,
 5584 219d 7442     		je	.L454	#,
 5585 219f 4883FE04 		cmp	rsi, 4	# tmp224,
 5586 21a3 7430     		je	.L455	#,
 5587 21a5 4883FE05 		cmp	rsi, 5	# tmp224,
 5588 21a9 741E     		je	.L456	#,
 5589 21ab 4883FE06 		cmp	rsi, 6	# tmp224,
 5590 21af 740C     		je	.L457	#,
 5591              	.LVL273:
 648:sieve_extend.c ****         source_word++;
 5592              		.loc 1 648 9 is_stmt 1 view .LVU1894
 5593              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5594              		.loc 1 648 39 is_stmt 0 view .LVU1895
 5595 21b1 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5596 21b5 4983C608 		add	r14, 8	# ivtmp.325,
 5597              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5598              		.loc 1 648 29 view .LVU1896
 5599 21b9 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5600              		.loc 1 649 9 is_stmt 1 view .LVU1897
 650:sieve_extend.c ****     }
 5601              		.loc 1 650 9 view .LVU1898
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5602              		.loc 1 647 10 view .LVU1899
 5603              	.L457:
 648:sieve_extend.c ****         source_word++;
 5604              		.loc 1 648 9 view .LVU1900
 5605              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5606              		.loc 1 648 39 is_stmt 0 view .LVU1901
 5607 21bd 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
GAS LISTING /tmp/cc7rm34x.s 			page 161


 5608 21c1 4983C608 		add	r14, 8	# ivtmp.325,
 5609              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5610              		.loc 1 648 29 view .LVU1902
 5611 21c5 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5612              		.loc 1 649 9 is_stmt 1 view .LVU1903
 650:sieve_extend.c ****     }
 5613              		.loc 1 650 9 view .LVU1904
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5614              		.loc 1 647 10 view .LVU1905
 5615              	.L456:
 648:sieve_extend.c ****         source_word++;
 5616              		.loc 1 648 9 view .LVU1906
 5617              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5618              		.loc 1 648 39 is_stmt 0 view .LVU1907
 5619 21c9 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5620 21cd 4983C608 		add	r14, 8	# ivtmp.325,
 5621              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5622              		.loc 1 648 29 view .LVU1908
 5623 21d1 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5624              		.loc 1 649 9 is_stmt 1 view .LVU1909
 650:sieve_extend.c ****     }
 5625              		.loc 1 650 9 view .LVU1910
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5626              		.loc 1 647 10 view .LVU1911
 5627              	.L455:
 648:sieve_extend.c ****         source_word++;
 5628              		.loc 1 648 9 view .LVU1912
 5629              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5630              		.loc 1 648 39 is_stmt 0 view .LVU1913
 5631 21d5 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5632 21d9 4983C608 		add	r14, 8	# ivtmp.325,
 5633              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5634              		.loc 1 648 29 view .LVU1914
 5635 21dd 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5636              		.loc 1 649 9 is_stmt 1 view .LVU1915
 650:sieve_extend.c ****     }
 5637              		.loc 1 650 9 view .LVU1916
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5638              		.loc 1 647 10 view .LVU1917
 5639              	.L454:
 648:sieve_extend.c ****         source_word++;
 5640              		.loc 1 648 9 view .LVU1918
 5641              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5642              		.loc 1 648 39 is_stmt 0 view .LVU1919
 5643 21e1 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5644 21e5 4983C608 		add	r14, 8	# ivtmp.325,
 5645              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cc7rm34x.s 			page 162


 5646              		.loc 1 648 29 view .LVU1920
 5647 21e9 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5648              		.loc 1 649 9 is_stmt 1 view .LVU1921
 650:sieve_extend.c ****     }
 5649              		.loc 1 650 9 view .LVU1922
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5650              		.loc 1 647 10 view .LVU1923
 5651              	.L453:
 648:sieve_extend.c ****         source_word++;
 5652              		.loc 1 648 9 view .LVU1924
 5653              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5654              		.loc 1 648 39 is_stmt 0 view .LVU1925
 5655 21ed 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5656 21f1 4983C608 		add	r14, 8	# ivtmp.325,
 5657              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5658              		.loc 1 648 29 view .LVU1926
 5659 21f5 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5660              		.loc 1 649 9 is_stmt 1 view .LVU1927
 650:sieve_extend.c ****     }
 5661              		.loc 1 650 9 view .LVU1928
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5662              		.loc 1 647 10 view .LVU1929
 5663              	.L452:
 648:sieve_extend.c ****         source_word++;
 5664              		.loc 1 648 9 view .LVU1930
 5665              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5666              		.loc 1 648 39 is_stmt 0 view .LVU1931
 5667 21f9 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5668 21fd 4983C608 		add	r14, 8	# ivtmp.325,
 5669              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5670              		.loc 1 648 29 view .LVU1932
 5671 2201 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5672              		.loc 1 649 9 is_stmt 1 view .LVU1933
 650:sieve_extend.c ****     }
 5673              		.loc 1 650 9 view .LVU1934
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5674              		.loc 1 647 10 view .LVU1935
 5675 2205 4D39EE   		cmp	r14, r13	# ivtmp.325, _179
 5676 2208 0F8424FF 		je	.L487	#,
 5676      FFFF
 5677              	.LVL274:
 5678              	.L384:
 648:sieve_extend.c ****         source_word++;
 5679              		.loc 1 648 9 view .LVU1936
 5680              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5681              		.loc 1 648 39 is_stmt 0 view .LVU1937
 5682 220e 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5683              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cc7rm34x.s 			page 163


 5684              		.loc 1 648 29 view .LVU1938
 5685 2212 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5686              		.loc 1 649 9 is_stmt 1 view .LVU1939
 650:sieve_extend.c ****     }
 5687              		.loc 1 650 9 view .LVU1940
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5688              		.loc 1 647 10 view .LVU1941
 648:sieve_extend.c ****         source_word++;
 5689              		.loc 1 648 9 view .LVU1942
 5690              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5691              		.loc 1 648 39 is_stmt 0 view .LVU1943
 5692 2215 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5692      08
 5693              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5694              		.loc 1 648 29 view .LVU1944
 5695 221a 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5696              		.loc 1 649 9 is_stmt 1 view .LVU1945
 650:sieve_extend.c ****     }
 5697              		.loc 1 650 9 view .LVU1946
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5698              		.loc 1 647 10 view .LVU1947
 648:sieve_extend.c ****         source_word++;
 5699              		.loc 1 648 9 view .LVU1948
 5700              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5701              		.loc 1 648 39 is_stmt 0 view .LVU1949
 5702 221e 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5702      10
 5703              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5704              		.loc 1 648 29 view .LVU1950
 5705 2223 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5706              		.loc 1 649 9 is_stmt 1 view .LVU1951
 650:sieve_extend.c ****     }
 5707              		.loc 1 650 9 view .LVU1952
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5708              		.loc 1 647 10 view .LVU1953
 648:sieve_extend.c ****         source_word++;
 5709              		.loc 1 648 9 view .LVU1954
 5710              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5711              		.loc 1 648 39 is_stmt 0 view .LVU1955
 5712 2227 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5712      18
 5713              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5714              		.loc 1 648 29 view .LVU1956
 5715 222c 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5716              		.loc 1 649 9 is_stmt 1 view .LVU1957
 650:sieve_extend.c ****     }
 5717              		.loc 1 650 9 view .LVU1958
GAS LISTING /tmp/cc7rm34x.s 			page 164


 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5718              		.loc 1 647 10 view .LVU1959
 648:sieve_extend.c ****         source_word++;
 5719              		.loc 1 648 9 view .LVU1960
 5720              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5721              		.loc 1 648 39 is_stmt 0 view .LVU1961
 5722 2230 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5722      20
 5723              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5724              		.loc 1 648 29 view .LVU1962
 5725 2235 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5726              		.loc 1 649 9 is_stmt 1 view .LVU1963
 650:sieve_extend.c ****     }
 5727              		.loc 1 650 9 view .LVU1964
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5728              		.loc 1 647 10 view .LVU1965
 648:sieve_extend.c ****         source_word++;
 5729              		.loc 1 648 9 view .LVU1966
 5730              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5731              		.loc 1 648 39 is_stmt 0 view .LVU1967
 5732 2239 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5732      28
 5733              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5734              		.loc 1 648 29 view .LVU1968
 5735 223e 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5736              		.loc 1 649 9 is_stmt 1 view .LVU1969
 650:sieve_extend.c ****     }
 5737              		.loc 1 650 9 view .LVU1970
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5738              		.loc 1 647 10 view .LVU1971
 648:sieve_extend.c ****         source_word++;
 5739              		.loc 1 648 9 view .LVU1972
 5740              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5741              		.loc 1 648 39 is_stmt 0 view .LVU1973
 5742 2242 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5742      30
 5743              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5744              		.loc 1 648 29 view .LVU1974
 5745 2247 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5746              		.loc 1 649 9 is_stmt 1 view .LVU1975
 650:sieve_extend.c ****     }
 5747              		.loc 1 650 9 view .LVU1976
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5748              		.loc 1 647 10 view .LVU1977
 648:sieve_extend.c ****         source_word++;
 5749              		.loc 1 648 9 view .LVU1978
 5750              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/cc7rm34x.s 			page 165


 5751              		.loc 1 648 39 is_stmt 0 view .LVU1979
 5752 224b 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5752      38
 5753 2250 4983C640 		add	r14, 64	# ivtmp.325,
 5754              	# sieve_extend.c:648:         bitarray[copy_word] = bitarray[source_word];
 648:sieve_extend.c ****         source_word++;
 5755              		.loc 1 648 29 view .LVU1980
 5756 2254 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 649:sieve_extend.c ****         copy_word++;
 5757              		.loc 1 649 9 is_stmt 1 view .LVU1981
 650:sieve_extend.c ****     }
 5758              		.loc 1 650 9 view .LVU1982
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5759              		.loc 1 647 10 view .LVU1983
 5760 2258 4D39EE   		cmp	r14, r13	# ivtmp.325, _179
 5761 225b 75B1     		jne	.L384	#,
 5762 225d E9D0FEFF 		jmp	.L487	#
 5762      FF
 5763              	.LVL275:
 5764              		.p2align 4,,7
 5765 2262 660F1F44 		.p2align 3
 5765      0000
 5766              	.L386:
 5767              	# sieve_extend.c:637:     counter_t source_word = wordindex(source_start);
 637:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5768              		.loc 1 637 15 is_stmt 0 view .LVU1984
 5769 2268 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 5769      08
 5770              	# sieve_extend.c:647:    while (copy_word < destination_stop_word) {
 647:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5771              		.loc 1 647 10 view .LVU1985
 5772 226d 4989C6   		mov	r14, rax	# copy_word, ivtmp.339
 5773 2270 E90AFDFF 		jmp	.L380	#
 5773      FF
 5774              		.cfi_endproc
 5775              	.LFE69:
 5777 2275 66662E0F 		.p2align 4
 5777      1F840000 
 5777      000000
 5779              	extendSieve_shiftleft:
 5780              	.LVL276:
 5781              	.LFB75:
 893:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5782              		.loc 1 893 142 is_stmt 1 view -0
 5783              		.cfi_startproc
 894:sieve_extend.c **** 
 5784              		.loc 1 894 5 view .LVU1987
 896:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5785              		.loc 1 896 5 view .LVU1988
 5786              	# sieve_extend.c:893: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 893:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5787              		.loc 1 893 142 is_stmt 0 view .LVU1989
 5788 2280 55       		push	rbp	#
 5789              		.cfi_def_cfa_offset 16
 5790              		.cfi_offset 6, -16
 5791              	# sieve_extend.c:896:     const counter_t destination_stop_word = wordindex(destination_stop);
 896:sieve_extend.c ****     const counter_t copy_start = source_start + size;
GAS LISTING /tmp/cc7rm34x.s 			page 166


 5792              		.loc 1 896 21 view .LVU1990
 5793 2281 48C1E906 		shr	rcx, 6	# tmp1104,
 5794              	.LVL277:
 5795              	# sieve_extend.c:897:     const counter_t copy_start = source_start + size;
 897:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5796              		.loc 1 897 21 view .LVU1991
 5797 2285 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 5798              	# sieve_extend.c:893: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 893:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5799              		.loc 1 893 142 view .LVU1992
 5800 2289 4889E5   		mov	rbp, rsp	#,
 5801              		.cfi_def_cfa_register 6
 5802 228c 4989D2   		mov	r10, rdx	# size, tmp1103
 5803 228f 4157     		push	r15	#
 5804              	# sieve_extend.c:901:     register counter_t copy_word = wordindex(copy_start);
 901:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5805              		.loc 1 901 24 view .LVU1993
 5806 2291 4D89C3   		mov	r11, r8	# copy_word, copy_start
 5807              	# sieve_extend.c:893: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 893:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5808              		.loc 1 893 142 view .LVU1994
 5809 2294 4156     		push	r14	#
 5810              	# sieve_extend.c:901:     register counter_t copy_word = wordindex(copy_start);
 901:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5811              		.loc 1 901 24 view .LVU1995
 5812 2296 49C1EB06 		shr	r11, 6	# copy_word,
 5813              		.cfi_offset 15, -24
 5814              		.cfi_offset 14, -32
 5815              	# sieve_extend.c:896:     const counter_t destination_stop_word = wordindex(destination_stop);
 896:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5816              		.loc 1 896 21 view .LVU1996
 5817 229a 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1104
 5818              	# sieve_extend.c:893: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 893:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5819              		.loc 1 893 142 view .LVU1997
 5820 229d 4155     		push	r13	#
 5821 229f 4154     		push	r12	#
 5822 22a1 53       		push	rbx	#
 5823              		.cfi_offset 13, -40
 5824              		.cfi_offset 12, -48
 5825              		.cfi_offset 3, -56
 5826 22a2 4889FB   		mov	rbx, rdi	# bitarray, tmp1101
 5827 22a5 4883E4E0 		and	rsp, -32	#,
 5828 22a9 488D6424 		lea	rsp, -96[rsp]	#,
 5828      A0
 5829              	# sieve_extend.c:896:     const counter_t destination_stop_word = wordindex(destination_stop);
 896:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5830              		.loc 1 896 21 view .LVU1998
 5831 22ae 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, destination_stop_word
 5831      58
 5832              	.LVL278:
 897:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5833              		.loc 1 897 5 is_stmt 1 view .LVU1999
 898:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5834              		.loc 1 898 5 view .LVU2000
 5835              	# sieve_extend.c:898:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 898:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
GAS LISTING /tmp/cc7rm34x.s 			page 167


 5836              		.loc 1 898 39 is_stmt 0 view .LVU2001
 5837 22b3 4889F1   		mov	rcx, rsi	# _4, source_start
 5838              	.LVL279:
 5839              	# sieve_extend.c:900:     register counter_t source_word = wordindex(source_start);
 900:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5840              		.loc 1 900 24 view .LVU2002
 5841 22b6 48C1EE06 		shr	rsi, 6	# source_start,
 5842              	.LVL280:
 5843              	# sieve_extend.c:898:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 898:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5844              		.loc 1 898 39 view .LVU2003
 5845 22ba 83E13F   		and	ecx, 63	# _4,
 5846              	.LVL281:
 5847              	# sieve_extend.c:893: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 893:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5848              		.loc 1 893 142 view .LVU2004
 5849 22bd 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 5849      18
 5850              	# sieve_extend.c:900:     register counter_t source_word = wordindex(source_start);
 900:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5851              		.loc 1 900 24 view .LVU2005
 5852 22c2 4989F1   		mov	r9, rsi	# source_word, source_start
 5853              	# sieve_extend.c:898:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 898:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5854              		.loc 1 898 69 view .LVU2006
 5855 22c5 4C89C2   		mov	rdx, r8	# _5, copy_start
 5856              	.LVL282:
 5857              	# sieve_extend.c:898:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 898:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5858              		.loc 1 898 31 view .LVU2007
 5859 22c8 4989CF   		mov	r15, rcx	# shift, _4
 5860              	# sieve_extend.c:903:                              | (bitarray[source_word+1] << shift_flipped))
 903:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5861              		.loc 1 903 41 view .LVU2008
 5862 22cb 4D8D6101 		lea	r12, 1[r9]	# tmp.366,
 5863              	# sieve_extend.c:898:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 898:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5864              		.loc 1 898 69 view .LVU2009
 5865 22cf 83E23F   		and	edx, 63	# _5,
 5866              	.LVL283:
 899:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5867              		.loc 1 899 5 is_stmt 1 view .LVU2010
 900:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5868              		.loc 1 900 5 view .LVU2011
 901:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 5869              		.loc 1 901 5 view .LVU2012
 902:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5870              		.loc 1 902 5 view .LVU2013
 5871              	# sieve_extend.c:898:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 898:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5872              		.loc 1 898 31 is_stmt 0 view .LVU2014
 5873 22d2 4929D7   		sub	r15, rdx	# shift, _5
 5874              	.LVL284:
 5875              	# sieve_extend.c:909:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 909:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5876              		.loc 1 909 41 view .LVU2015
 5877 22d5 4F8D1414 		lea	r10, [r12+r10]	# tmp563,
GAS LISTING /tmp/cc7rm34x.s 			page 168


 5878              	.LVL285:
 5879              	# sieve_extend.c:902:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 902:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5880              		.loc 1 902 25 view .LVU2016
 5881 22d9 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 5881      00000000 
 5882              	# sieve_extend.c:899:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 899:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5883              		.loc 1 899 31 view .LVU2017
 5884 22e1 4829CA   		sub	rdx, rcx	# tmp550, _4
 5885              	.LVL286:
 5886              	# sieve_extend.c:902:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 902:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5887              		.loc 1 902 38 view .LVU2018
 5888 22e4 4A8D04CD 		lea	rax, 0[0+r9*8]	# _9,
 5888      00000000 
 5889              	# sieve_extend.c:899:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 899:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5890              		.loc 1 899 31 view .LVU2019
 5891 22ec 4883C240 		add	rdx, 64	# shift_flipped,
 5892              	.LVL287:
 5893              	# sieve_extend.c:904:                              & ~chopmask(copy_start); // because this is the 
 904:sieve_extend.c **** 
 5894              		.loc 1 904 33 view .LVU2020
 5895 22f0 41F7D0   		not	r8d	# tmp557
 5896              	.LVL288:
 5897              	# sieve_extend.c:903:                              | (bitarray[source_word+1] << shift_flipped))
 903:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5898              		.loc 1 903 57 view .LVU2021
 5899 22f3 C462E9F7 		shlx	r13, QWORD PTR 8[rdi+rax], rdx	# tmp552, *_16, shift_flipped
 5899      6C0708
 5900              	# sieve_extend.c:902:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 902:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5901              		.loc 1 902 52 view .LVU2022
 5902 22fa 4A8B3CCF 		mov	rdi, QWORD PTR [rdi+r9*8]	# *_10, *_10
 5903              	.LVL289:
 5904              	# sieve_extend.c:904:                              & ~chopmask(copy_start); // because this is the 
 904:sieve_extend.c **** 
 5905              		.loc 1 904 33 view .LVU2023
 5906 22fe 48C7C1FF 		mov	rcx, -1	# tmp560,
 5906      FFFFFF
 5907              	# sieve_extend.c:902:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 902:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5908              		.loc 1 902 52 view .LVU2024
 5909 2305 C46283F7 		shrx	r9, rdi, r15	# tmp554, *_10, shift
 5909      CF
 5910              	# sieve_extend.c:904:                              & ~chopmask(copy_start); // because this is the 
 904:sieve_extend.c **** 
 5911              		.loc 1 904 33 view .LVU2025
 5912 230a C462BBF7 		shrx	r8, rcx, r8	# tmp559, tmp560, tmp557
 5912      C1
 5913              	# sieve_extend.c:902:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 902:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5914              		.loc 1 902 52 view .LVU2026
 5915 230f 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift
 5915      48
 5916              	# sieve_extend.c:903:                              | (bitarray[source_word+1] << shift_flipped))
GAS LISTING /tmp/cc7rm34x.s 			page 169


 903:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5917              		.loc 1 903 30 view .LVU2027
 5918 2314 4D09E9   		or	r9, r13	# tmp556, tmp552
 5919              	# sieve_extend.c:904:                              & ~chopmask(copy_start); // because this is the 
 904:sieve_extend.c **** 
 5920              		.loc 1 904 30 view .LVU2028
 5921 2317 C442B8F2 		andn	r13, r8, r9	# tmp562, tmp559, tmp556
 5921      E9
 5922              	# sieve_extend.c:902:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 902:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 5923              		.loc 1 902 25 view .LVU2029
 5924 231c 4C092C33 		or	QWORD PTR [rbx+rsi], r13	# *_7, tmp562
 906:sieve_extend.c ****     source_word++;
 5925              		.loc 1 906 5 is_stmt 1 view .LVU2030
 5926              	# sieve_extend.c:909:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 909:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5927              		.loc 1 909 21 is_stmt 0 view .LVU2031
 5928 2320 4D39F2   		cmp	r10, r14	# tmp563, destination_stop_word
 5929              	.LBB367:
 5930              	.LBB368:
 5931              	# sieve_extend.c:750:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 750:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5932              		.loc 1 750 91 view .LVU2032
 5933 2323 41B90200 		mov	r9d, 2	# tmp564,
 5933      0000
 5934              	.LBE368:
 5935              	.LBE367:
 5936              	# sieve_extend.c:903:                              | (bitarray[source_word+1] << shift_flipped))
 903:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5937              		.loc 1 903 57 view .LVU2033
 5938 2329 89542440 		mov	DWORD PTR 64[rsp], edx	# %sfp, shift_flipped
 5939              	# sieve_extend.c:906:     copy_word++;
 906:sieve_extend.c ****     source_word++;
 5940              		.loc 1 906 14 view .LVU2034
 5941 232d 4D8D6B01 		lea	r13, 1[r11]	# tmp.367,
 5942              	.LVL290:
 907:sieve_extend.c **** 
 5943              		.loc 1 907 5 is_stmt 1 view .LVU2035
 909:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5944              		.loc 1 909 5 view .LVU2036
 5945              	# sieve_extend.c:909:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 909:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 5946              		.loc 1 909 21 is_stmt 0 view .LVU2037
 5947 2331 4D0F47D6 		cmova	r10, r14	# tmp563,, tmp563, destination_stop_word
 5948 2335 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, aligned_copy_word
 5948      50
 5949              	.LVL291:
 910:sieve_extend.c ****     source_word += distance;
 5950              		.loc 1 910 5 is_stmt 1 view .LVU2038
 5951              	.LBB393:
 5952              	.LBI367:
 749:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 5953              		.loc 1 749 25 view .LVU2039
 5954              	.LBB390:
 750:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5955              		.loc 1 750 5 view .LVU2040
 5956              	# sieve_extend.c:750:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
GAS LISTING /tmp/cc7rm34x.s 			page 170


 750:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5957              		.loc 1 750 91 is_stmt 0 view .LVU2041
 5958 233a 4983FA02 		cmp	r10, 2	# aligned_copy_word,
 5959 233e 4D0F43CA 		cmovnb	r9, r10	# aligned_copy_word,, _86
 5960              	# sieve_extend.c:750:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 750:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5961              		.loc 1 750 21 view .LVU2042
 5962 2342 498D79FE 		lea	rdi, -2[r9]	# fast_loop_stop_word,
 5963 2346 48897C24 		mov	QWORD PTR 48[rsp], rdi	# %sfp, fast_loop_stop_word
 5963      30
 5964              	.LVL292:
 751:sieve_extend.c ****     counter_t distance = 0;
 5965              		.loc 1 751 5 is_stmt 1 view .LVU2043
 752:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 5966              		.loc 1 752 5 view .LVU2044
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5967              		.loc 1 753 5 view .LVU2045
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5968              		.loc 1 753 11 view .LVU2046
 5969 234b 4939FD   		cmp	r13, rdi	# tmp.367, fast_loop_stop_word
 5970 234e 0F83A004 		jnb	.L490	#,
 5970      0000
 5971 2354 4D29D9   		sub	r9, r11	# tmp565, copy_word
 5972 2357 4C8D5040 		lea	r10, 64[rax]	# tmp567,
 5973              	.LVL293:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5974              		.loc 1 753 11 is_stmt 0 view .LVU2047
 5975 235b 4C8D4610 		lea	r8, 16[rsi]	# tmp568,
 5976 235f 498D49FC 		lea	rcx, -4[r9]	# _282,
 5977 2363 4C8D7648 		lea	r14, 72[rsi]	# tmp571,
 5978              	.LVL294:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5979              		.loc 1 753 11 view .LVU2048
 5980 2367 4D39C2   		cmp	r10, r8	# tmp567, tmp568
 5981 236a 48894C24 		mov	QWORD PTR 56[rsp], rcx	# %sfp, _282
 5981      38
 5982 236f 488D4808 		lea	rcx, 8[rax]	# tmp787,
 5983 2373 410F9EC1 		setle	r9b	#, tmp570
 5984 2377 4939CE   		cmp	r14, rcx	# tmp571, tmp787
 5985 237a 400F9EC7 		setle	dil	#, tmp574
 5986              	.LVL295:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 5987              		.loc 1 753 11 view .LVU2049
 5988 237e 4109F9   		or	r9d, edi	# tmp575, tmp574
 5989 2381 488D7850 		lea	rdi, 80[rax]	# tmp576,
 5990 2385 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp576
 5990      28
 5991 238a 4C39C7   		cmp	rdi, r8	# tmp576, tmp568
 5992 238d 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 5992      27
 5993 2392 4883C010 		add	rax, 16	# tmp581,
 5994 2396 4939C6   		cmp	r14, rax	# tmp571, tmp581
 5995 2399 400F9EC7 		setle	dil	#, tmp583
 5996 239d 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp584, %sfp
 5996      27
 5997 23a2 4421CF   		and	edi, r9d	# tmp585, tmp575
 5998 23a5 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
GAS LISTING /tmp/cc7rm34x.s 			page 171


 5998      380B
 5999 23ab 410F97C1 		seta	r9b	#, tmp587
 6000 23af 4421CF   		and	edi, r9d	# tmp588, tmp587
 6001 23b2 4C8D4E08 		lea	r9, 8[rsi]	# tmp590,
 6002 23b6 4D39CA   		cmp	r10, r9	# tmp567, tmp590
 6003 23b9 410F9EC2 		setle	r10b	#, tmp592
 6004 23bd 4883C640 		add	rsi, 64	# tmp593,
 6005 23c1 4839CE   		cmp	rsi, rcx	# tmp593, tmp787
 6006 23c4 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6006      27
 6007 23c9 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp597, %sfp
 6007      27
 6008 23ce 4421D7   		and	edi, r10d	# tmp598, tmp597
 6009 23d1 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp590
 6009      28
 6010 23d6 410F9EC2 		setle	r10b	#, tmp602
 6011 23da 4839C6   		cmp	rsi, rax	# tmp593, tmp581
 6012 23dd 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 6012      28
 6013 23e2 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp607, %sfp
 6013      28
 6014 23e7 4484D7   		test	dil, r10b	# tmp598, tmp607
 6015 23ea 0F84E80C 		je	.L491	#,
 6015      0000
 6016 23f0 4D39CE   		cmp	r14, r9	# tmp571, tmp590
 6017 23f3 410F9EC6 		setle	r14b	#, tmp612
 6018 23f7 4C39C6   		cmp	rsi, r8	# tmp593, tmp568
 6019 23fa 400F9EC6 		setle	sil	#, tmp616
 6020 23fe 4108F6   		or	r14b, sil	# tmp612, tmp616
 6021 2401 0F84D10C 		je	.L491	#,
 6021      0000
 6022 2407 4801D9   		add	rcx, rbx	# vectp.388, bitarray
 6023 240a 4801D8   		add	rax, rbx	# vectp.392, bitarray
 6024              	.LBB369:
 6025              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6026              		.loc 1 755 19 view .LVU2050
 6027 240d C5FE6F08 		vmovdqu	ymm1, YMMWORD PTR [rax]	# MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0B], MEM[
 6028 2411 C4C1796E 		vmovd	xmm3, r15d	# _12,
 6028      DF
 6029 2416 C5FE6F40 		vmovdqu	ymm0, YMMWORD PTR 32[rax]	# MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 32B], M
 6029      20
 6030 241b C5F96EE2 		vmovd	xmm4, edx	# _18,
 6031              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6032              		.loc 1 754 19 view .LVU2051
 6033 241f C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1186, MEM[base: vectp.388_440, index: ivtmp.443_748, offset: 
 6034              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6035              		.loc 1 755 19 view .LVU2052
 6036 2423 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp624, MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0B],
 6037 2427 C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp642, MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0B]
 6038              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6039              		.loc 1 754 19 view .LVU2053
 6040 242b C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp628, tmp1186, MEM[base: vectp.388_440, index: ivt
 6040      20
GAS LISTING /tmp/cc7rm34x.s 			page 172


 6041 2430 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _282, %sfp
 6041      38
 6042              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6043              		.loc 1 755 19 view .LVU2054
 6044 2435 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_457, tmp624,
 6044      C5D8
 6045              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6046              		.loc 1 754 19 view .LVU2055
 6047 243b C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp627, tmp628,
 6047      F2D8
 6048              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6049              		.loc 1 755 19 view .LVU2056
 6050 2441 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp641, tmp642,
 6050      FED8
 6051              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6052              		.loc 1 756 63 view .LVU2057
 6053 2447 C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.396, vect_perm_even_457, _18
 6054              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6055              		.loc 1 756 42 view .LVU2058
 6056 244b C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.395, tmp627, _12
 6057              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6058              		.loc 1 758 42 view .LVU2059
 6059 244f C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.398, vect_perm_even_457, _12
 6060              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6061              		.loc 1 758 63 view .LVU2060
 6062 2453 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.399, tmp641, _18
 6063 2457 49C1EE03 		shr	r14, 3	# _282,
 6064              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6065              		.loc 1 756 52 view .LVU2061
 6066 245b C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.397, vect__98.395, vect__100.396
 6066      DA
 6067              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6068              		.loc 1 758 52 view .LVU2062
 6069 2460 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.400, vect__110.399, vect__109.398
 6070 2464 4D8D56FF 		lea	r10, -1[r14]	# tmp809,
 6071              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6072              		.loc 1 756 31 view .LVU2063
 6073 2468 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp638, vect__104.397
 6073      DD01
 6074 246e 4183E201 		and	r10d, 1	# tmp811,
 6075              	.LVL296:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6076              		.loc 1 754 9 is_stmt 1 view .LVU2064
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6077              		.loc 1 755 9 view .LVU2065
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6078              		.loc 1 756 9 view .LVU2066
GAS LISTING /tmp/cc7rm34x.s 			page 173


 6079              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6080              		.loc 1 758 31 is_stmt 0 view .LVU2067
 6081 2472 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp652, vect__114.400
 6081      EF01
 6082 2478 4983FE01 		cmp	r14, 1	# bnd.381,
 6083              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6084              		.loc 1 756 31 view .LVU2068
 6085 247c C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _463, index: ivtmp.443_748, offset: 0B], tmp634
 6085      1C0B
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6086              		.loc 1 756 31 view .LVU2069
 6087 2482 4E8D1C0B 		lea	r11, [rbx+r9]	# _463,
 6088 2486 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _463, index: ivtmp.443_748, offset: 16B], tmp63
 6088      5C0B1001 
 6089 248e 4A8D3C03 		lea	rdi, [rbx+r8]	# _483,
 6090 2492 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _463, index: ivtmp.443_748, offset: 32B], tmp638
 6090      6C0B20
 6091 2499 C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _463, index: ivtmp.443_748, offset: 48B], tmp63
 6091      6C0B3001 
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6092              		.loc 1 757 9 is_stmt 1 view .LVU2070
 6093              	.LVL297:
 758:sieve_extend.c ****         copy_word += 2;
 6094              		.loc 1 758 9 view .LVU2071
 6095 24a1 41B90100 		mov	r9d, 1	# ivtmp.441,
 6095      0000
 6096              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6097              		.loc 1 758 31 is_stmt 0 view .LVU2072
 6098 24a7 C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _483, index: ivtmp.443_748, offset: 0B], tmp648
 6098      2C03
 758:sieve_extend.c ****         copy_word += 2;
 6099              		.loc 1 758 31 view .LVU2073
 6100 24ad C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.443_748, offset: 16B], tmp648
 6100      6C031001 
 6101 24b5 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _483, index: ivtmp.443_748, offset: 32B], tmp652
 6101      7C0320
 6102 24bc C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.443_748, offset: 48B], tmp652
 6102      7C033001 
 759:sieve_extend.c ****         source_word += 2;
 6103              		.loc 1 759 9 is_stmt 1 view .LVU2074
 760:sieve_extend.c ****         distance += 2;
 6104              		.loc 1 760 9 view .LVU2075
 761:sieve_extend.c ****     }
 6105              		.loc 1 761 9 view .LVU2076
 761:sieve_extend.c ****     }
 6106              		.loc 1 761 9 is_stmt 0 view .LVU2077
 6107              	.LBE369:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6108              		.loc 1 753 11 is_stmt 1 view .LVU2078
 6109 24c4 41B84000 		mov	r8d, 64	# ivtmp.443,
 6109      0000
 6110 24ca 0F86EC01 		jbe	.L636	#,
 6110      0000
 6111 24d0 4D85D2   		test	r10, r10	# tmp811
GAS LISTING /tmp/cc7rm34x.s 			page 174


 6112 24d3 0F84A700 		je	.L492	#,
 6112      0000
 6113              	.LBB370:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6114              		.loc 1 754 9 view .LVU2079
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6115              		.loc 1 755 9 view .LVU2080
 6116              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6117              		.loc 1 755 19 is_stmt 0 view .LVU2081
 6118 24d9 C57E6F48 		vmovdqu	ymm9, YMMWORD PTR 64[rax]	# MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0B], ME
 6118      40
 6119 24de 4983FE02 		cmp	r14, 2	# bnd.381,
 6120 24e2 C57E6F50 		vmovdqu	ymm10, YMMWORD PTR 96[rax]	# MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 32B], 
 6120      60
 6121 24e7 41B90200 		mov	r9d, 2	# ivtmp.441,
 6121      0000
 6122              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6123              		.loc 1 754 19 view .LVU2082
 6124 24ed C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1287, MEM[base: vectp.388_440, index: ivtmp.443_748, offset
 6124      40
 6125              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6126              		.loc 1 755 19 view .LVU2083
 6127 24f2 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1075, MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0B
 6127      D2
 6128 24f7 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1090, MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0B
 6128      C2
 6129              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6130              		.loc 1 754 19 view .LVU2084
 6131 24fc C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1079, tmp1287, MEM[base: vectp.388_440, index: i
 6131      60
 6132              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6133              		.loc 1 755 19 view .LVU2085
 6134 2501 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_457, tmp1075,
 6134      DAD8
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6135              		.loc 1 756 9 is_stmt 1 view .LVU2086
 6136              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6137              		.loc 1 754 19 is_stmt 0 view .LVU2087
 6138 2507 C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1080, tmp1079,
 6138      ECD8
 6139              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6140              		.loc 1 755 19 view .LVU2088
 6141 250d C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1091, tmp1090,
 6141      F8D8
 6142 2513 41B88000 		mov	r8d, 128	# ivtmp.443,
 6142      0000
 6143              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6144              		.loc 1 756 42 view .LVU2089
 6145 2519 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.395, tmp1080, _12
GAS LISTING /tmp/cc7rm34x.s 			page 175


 6146              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6147              		.loc 1 756 63 view .LVU2090
 6148 251d C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.396, vect_perm_even_457, _18
 6149              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6150              		.loc 1 758 42 view .LVU2091
 6151 2521 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.398, vect_perm_even_457, _12
 6152              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6153              		.loc 1 758 63 view .LVU2092
 6154 2525 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.399, tmp1091, _18
 6155              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6156              		.loc 1 756 52 view .LVU2093
 6157 2529 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.397, vect__98.395, vect__100.396
 6157      CF
 6158              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6159              		.loc 1 758 52 view .LVU2094
 6160 252e C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.400, vect__110.399, vect__109.398
 6160      D2
 6161              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6162              		.loc 1 756 31 view .LVU2095
 6163 2533 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1087, vect__104.397
 6163      CD01
 6164              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6165              		.loc 1 758 31 view .LVU2096
 6166 2539 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1098, vect__114.400
 6166      D601
 6167              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6168              		.loc 1 756 31 view .LVU2097
 6169 253f C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _463, index: ivtmp.443_748, offset: 0B], tmp1084
 6169      4B40
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6170              		.loc 1 756 31 view .LVU2098
 6171 2545 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _463, index: ivtmp.443_748, offset: 16B], tmp1084
 6171      4B5001
 6172 254c C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _463, index: ivtmp.443_748, offset: 32B], tmp1087
 6172      6B60
 6173 2552 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _463, index: ivtmp.443_748, offset: 48B], tmp1087
 6173      6B7001
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6174              		.loc 1 757 9 is_stmt 1 view .LVU2099
 758:sieve_extend.c ****         copy_word += 2;
 6175              		.loc 1 758 9 view .LVU2100
 6176              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6177              		.loc 1 758 31 is_stmt 0 view .LVU2101
 6178 2559 C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _483, index: ivtmp.443_748, offset: 0B], tmp1095
 6178      40
 758:sieve_extend.c ****         copy_word += 2;
 6179              		.loc 1 758 31 view .LVU2102
 6180 255e C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _483, index: ivtmp.443_748, offset: 16B], tmp1095
GAS LISTING /tmp/cc7rm34x.s 			page 176


 6180      575001
 6181 2565 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _483, index: ivtmp.443_748, offset: 32B], tmp1098
 6181      60
 6182 256a C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _483, index: ivtmp.443_748, offset: 48B], tmp1098
 6182      777001
 759:sieve_extend.c ****         source_word += 2;
 6183              		.loc 1 759 9 is_stmt 1 view .LVU2103
 760:sieve_extend.c ****         distance += 2;
 6184              		.loc 1 760 9 view .LVU2104
 761:sieve_extend.c ****     }
 6185              		.loc 1 761 9 view .LVU2105
 761:sieve_extend.c ****     }
 6186              		.loc 1 761 9 is_stmt 0 view .LVU2106
 6187              	.LBE370:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6188              		.loc 1 753 11 is_stmt 1 view .LVU2107
 6189 2571 0F864501 		jbe	.L636	#,
 6189      0000
 6190 2577 660F1F84 		.p2align 4
 6190      00000000 
 6190      00
 6191              		.p2align 3
 6192              	.L492:
 6193              	.LBB371:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6194              		.loc 1 754 9 view .LVU2108
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6195              		.loc 1 755 9 view .LVU2109
 6196              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6197              		.loc 1 755 19 is_stmt 0 view .LVU2110
 6198 2580 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rax+r8]	# MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0B], 
 6198      2400
 6199 2586 4983C102 		add	r9, 2	# ivtmp.441,
 6200 258a C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rax+r8]	# MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 32B
 6200      6C0020
 6201              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6202              		.loc 1 754 19 view .LVU2111
 6203 2591 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1187, MEM[base: vectp.388_440, index: ivtmp.443_748, offse
 6203      0C01
 6204              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6205              		.loc 1 755 19 view .LVU2112
 6206 2597 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp818, MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0
 6206      F5
 6207 259c C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp833, MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0
 6207      DD
 6208              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6209              		.loc 1 754 19 view .LVU2113
 6210 25a1 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp822, tmp1187, MEM[base: vectp.388_440, index: 
 6210      440120
 6211              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6212              		.loc 1 755 19 view .LVU2114
 6213 25a8 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_457, tmp818,
GAS LISTING /tmp/cc7rm34x.s 			page 177


 6213      FED8
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6214              		.loc 1 756 9 is_stmt 1 view .LVU2115
 6215              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6216              		.loc 1 754 19 is_stmt 0 view .LVU2116
 6217 25ae C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp823, tmp822,
 6217      E8D8
 6218              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6219              		.loc 1 755 19 view .LVU2117
 6220 25b4 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp834, tmp833,
 6220      F3D8
 6221              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6222              		.loc 1 756 42 view .LVU2118
 6223 25ba C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.395, tmp823, _12
 6224              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6225              		.loc 1 756 63 view .LVU2119
 6226 25be C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.396, vect_perm_even_457, _18
 6227              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6228              		.loc 1 758 42 view .LVU2120
 6229 25c2 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.398, vect_perm_even_457, _12
 6230              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6231              		.loc 1 758 63 view .LVU2121
 6232 25c6 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.399, tmp834, _18
 6233              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6234              		.loc 1 756 52 view .LVU2122
 6235 25ca C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.397, vect__98.395, vect__100.396
 6236              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6237              		.loc 1 758 52 view .LVU2123
 6238 25ce C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.400, vect__110.399, vect__109.398
 6238      F5
 6239              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6240              		.loc 1 756 31 view .LVU2124
 6241 25d3 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp830, vect__104.397
 6241      CA01
 6242              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6243              		.loc 1 758 31 view .LVU2125
 6244 25d9 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp841, vect__114.400
 6244      F101
 6245              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6246              		.loc 1 756 31 view .LVU2126
 6247 25df C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _463, index: ivtmp.443_748, offset: 0B], tmp827
 6247      0C03
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6248              		.loc 1 756 31 view .LVU2127
 6249 25e5 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _463, index: ivtmp.443_748, offset: 16B], tmp827
 6249      4C031001 
GAS LISTING /tmp/cc7rm34x.s 			page 178


 6250 25ed C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _463, index: ivtmp.443_748, offset: 32B], tmp830
 6250      540320
 6251 25f4 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _463, index: ivtmp.443_748, offset: 48B], tmp830
 6251      54033001 
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6252              		.loc 1 757 9 is_stmt 1 view .LVU2128
 758:sieve_extend.c ****         copy_word += 2;
 6253              		.loc 1 758 9 view .LVU2129
 6254              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6255              		.loc 1 758 31 is_stmt 0 view .LVU2130
 6256 25fc C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _483, index: ivtmp.443_748, offset: 0B], tmp838
 6256      3407
 758:sieve_extend.c ****         copy_word += 2;
 6257              		.loc 1 758 31 view .LVU2131
 6258 2602 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _483, index: ivtmp.443_748, offset: 16B], tmp83
 6258      74071001 
 6259 260a C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _483, index: ivtmp.443_748, offset: 32B], tmp841
 6259      4C0720
 6260 2611 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _483, index: ivtmp.443_748, offset: 48B], tmp841
 6260      4C073001 
 759:sieve_extend.c ****         source_word += 2;
 6261              		.loc 1 759 9 is_stmt 1 view .LVU2132
 760:sieve_extend.c ****         distance += 2;
 6262              		.loc 1 760 9 view .LVU2133
 761:sieve_extend.c ****     }
 6263              		.loc 1 761 9 view .LVU2134
 761:sieve_extend.c ****     }
 6264              		.loc 1 761 9 is_stmt 0 view .LVU2135
 6265              	.LBE371:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6266              		.loc 1 753 11 is_stmt 1 view .LVU2136
 6267              	.LBB372:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6268              		.loc 1 754 9 view .LVU2137
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6269              		.loc 1 755 9 view .LVU2138
 6270              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6271              		.loc 1 755 19 is_stmt 0 view .LVU2139
 6272 2619 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rax+r8]	# MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0B],
 6272      440040
 6273 2620 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rax+r8]	# MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 32B]
 6273      440060
 6274              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6275              		.loc 1 754 19 view .LVU2140
 6276 2627 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1188, MEM[base: vectp.388_440, index: ivtmp.443_748, off
 6276      7C0140
 6277              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6278              		.loc 1 755 19 view .LVU2141
 6279 262e C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp848, MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0B],
 6280 2632 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp863, MEM[base: vectp.392_449, index: ivtmp.443_748, offset: 0B]
 6281              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6282              		.loc 1 754 19 view .LVU2142
GAS LISTING /tmp/cc7rm34x.s 			page 179


 6283 2636 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp852, tmp1188, MEM[base: vectp.388_440, index:
 6283      540160
 6284              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6285              		.loc 1 755 19 view .LVU2143
 6286 263d C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_457, tmp848,
 6286      CDD8
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6287              		.loc 1 756 9 is_stmt 1 view .LVU2144
 6288              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6289              		.loc 1 754 19 is_stmt 0 view .LVU2145
 6290 2643 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp853, tmp852,
 6290      D2D8
 6291              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6292              		.loc 1 755 19 view .LVU2146
 6293 2649 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp864, tmp863,
 6293      CFD8
 6294              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6295              		.loc 1 756 42 view .LVU2147
 6296 264f C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.395, tmp853, _12
 6297              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6298              		.loc 1 756 63 view .LVU2148
 6299 2653 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.396, vect_perm_even_457, _18
 6300              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6301              		.loc 1 758 42 view .LVU2149
 6302 2657 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.398, vect_perm_even_457, _12
 6303              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6304              		.loc 1 758 63 view .LVU2150
 6305 265b C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.399, tmp864, _18
 6306              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6307              		.loc 1 756 52 view .LVU2151
 6308 265f C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.397, vect__98.395, vect__100.396
 6309              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6310              		.loc 1 758 52 view .LVU2152
 6311 2663 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.400, vect__110.399, vect__109.398
 6312              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6313              		.loc 1 756 31 view .LVU2153
 6314 2667 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp860, vect__104.397
 6314      E601
 6315              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6316              		.loc 1 758 31 view .LVU2154
 6317 266d C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp871, vect__114.400
 6317      EF01
 6318              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6319              		.loc 1 756 31 view .LVU2155
 6320 2673 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _463, index: ivtmp.443_748, offset: 0B], tmp857
GAS LISTING /tmp/cc7rm34x.s 			page 180


 6320      640340
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6321              		.loc 1 756 31 view .LVU2156
 6322 267a C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _463, index: ivtmp.443_748, offset: 16B], tmp85
 6322      64035001 
 6323 2682 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _463, index: ivtmp.443_748, offset: 32B], tmp860
 6323      740360
 6324 2689 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _463, index: ivtmp.443_748, offset: 48B], tmp8
 6324      74037001 
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6325              		.loc 1 757 9 is_stmt 1 view .LVU2157
 758:sieve_extend.c ****         copy_word += 2;
 6326              		.loc 1 758 9 view .LVU2158
 6327              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6328              		.loc 1 758 31 is_stmt 0 view .LVU2159
 6329 2691 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _483, index: ivtmp.443_748, offset: 0B], tmp868
 6329      6C0740
 758:sieve_extend.c ****         copy_word += 2;
 6330              		.loc 1 758 31 view .LVU2160
 6331 2698 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.443_748, offset: 16B], tmp868
 6331      6C075001 
 6332 26a0 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _483, index: ivtmp.443_748, offset: 32B], tmp871
 6332      7C0760
 6333 26a7 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.443_748, offset: 48B], tmp87
 6333      7C077001 
 759:sieve_extend.c ****         source_word += 2;
 6334              		.loc 1 759 9 is_stmt 1 view .LVU2161
 760:sieve_extend.c ****         distance += 2;
 6335              		.loc 1 760 9 view .LVU2162
 761:sieve_extend.c ****     }
 6336              		.loc 1 761 9 view .LVU2163
 761:sieve_extend.c ****     }
 6337              		.loc 1 761 9 is_stmt 0 view .LVU2164
 6338              	.LBE372:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6339              		.loc 1 753 11 is_stmt 1 view .LVU2165
 6340 26af 4983E880 		sub	r8, -128	# ivtmp.443,
 6341 26b3 4D39CE   		cmp	r14, r9	# bnd.381, ivtmp.441
 6342 26b6 0F87C4FE 		ja	.L492	#,
 6342      FFFF
 6343              	.L636:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6344              		.loc 1 753 11 is_stmt 0 view .LVU2166
 6345 26bc 49C1E603 		sal	r14, 3	# _433,
 6346 26c0 4B8D0C34 		lea	rcx, [r12+r14]	# tmp.383,
 6347 26c4 4B8D4435 		lea	rax, 0[r13+r14]	# tmp.384,
 6347      00
 6348              	.LVL298:
 6349              	.LBB373:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6350              		.loc 1 754 9 is_stmt 1 view .LVU2167
 6351              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6352              		.loc 1 754 37 is_stmt 0 view .LVU2168
 6353 26c9 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _639,
 6353      00000000 
GAS LISTING /tmp/cc7rm34x.s 			page 181


 6354              	.LVL299:
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6355              		.loc 1 755 9 is_stmt 1 view .LVU2169
 6356              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6357              		.loc 1 756 42 is_stmt 0 view .LVU2170
 6358 26d1 C4E283F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r15	# tmp656, *_640, shift
 6358      34CB
 6359              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6360              		.loc 1 755 19 view .LVU2171
 6361 26d7 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_644
 6361      08
 6362              	.LVL300:
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6363              		.loc 1 756 9 is_stmt 1 view .LVU2172
 6364              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6365              		.loc 1 756 63 is_stmt 0 view .LVU2173
 6366 26dc C462E9F7 		shlx	r10, rdi, rdx	# tmp658, source1, shift_flipped
 6366      D7
 6367              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6368              		.loc 1 756 52 view .LVU2174
 6369 26e1 4C09D6   		or	rsi, r10	# tmp659, tmp658
 6370              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6371              		.loc 1 758 42 view .LVU2175
 6372 26e4 C4E283F7 		shrx	rdi, rdi, r15	# tmp662, source1, shift
 6372      FF
 6373              	.LVL301:
 6374              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6375              		.loc 1 756 52 view .LVU2176
 6376 26e9 488934C3 		mov	QWORD PTR [rbx+rax*8], rsi	# *_649, tmp659
 6377              	.LVL302:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6378              		.loc 1 757 9 is_stmt 1 view .LVU2177
 6379              	# sieve_extend.c:757:         bitword_t source2 = bitarray[source_word+2];
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6380              		.loc 1 757 37 is_stmt 0 view .LVU2178
 6381 26ed 4C8D4902 		lea	r9, 2[rcx]	# _652,
 6382              	.LVL303:
 758:sieve_extend.c ****         copy_word += 2;
 6383              		.loc 1 758 9 is_stmt 1 view .LVU2179
 6384              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6385              		.loc 1 758 63 is_stmt 0 view .LVU2180
 6386 26f1 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_654, *_654
 6386      10
 6387 26f6 C442E9F7 		shlx	r11, r8, rdx	# tmp660, *_654, shift_flipped
 6387      D8
 6388              	.LVL304:
 6389              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6390              		.loc 1 758 52 view .LVU2181
 6391 26fb 4C09DF   		or	rdi, r11	# tmp663, tmp660
GAS LISTING /tmp/cc7rm34x.s 			page 182


 6392              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 6393              		.loc 1 759 19 view .LVU2182
 6394 26fe 4C8D4002 		lea	r8, 2[rax]	# copy_word,
 6395              	.LVL305:
 759:sieve_extend.c ****         source_word += 2;
 6396              		.loc 1 759 19 view .LVU2183
 6397              	.LBE373:
 6398              	# sieve_extend.c:753:     while (copy_word < fast_loop_stop_word) {
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6399              		.loc 1 753 11 view .LVU2184
 6400 2702 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6400      30
 6401              	.LBB374:
 6402              	# sieve_extend.c:761:         distance += 2;
 761:sieve_extend.c ****     }
 6403              		.loc 1 761 18 view .LVU2185
 6404 2707 4D8D5602 		lea	r10, 2[r14]	# distance,
 6405              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6406              		.loc 1 758 52 view .LVU2186
 6407 270b 48897CC3 		mov	QWORD PTR 8[rbx+rax*8], rdi	# *_660, tmp663
 6407      08
 6408              	.LVL306:
 759:sieve_extend.c ****         source_word += 2;
 6409              		.loc 1 759 9 is_stmt 1 view .LVU2187
 760:sieve_extend.c ****         distance += 2;
 6410              		.loc 1 760 9 view .LVU2188
 761:sieve_extend.c ****     }
 6411              		.loc 1 761 9 view .LVU2189
 761:sieve_extend.c ****     }
 6412              		.loc 1 761 9 is_stmt 0 view .LVU2190
 6413              	.LBE374:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6414              		.loc 1 753 11 is_stmt 1 view .LVU2191
 6415 2710 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6416 2713 0F86D500 		jbe	.L495	#,
 6416      0000
 6417              	.LBB375:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6418              		.loc 1 754 9 view .LVU2192
 6419              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6420              		.loc 1 756 42 is_stmt 0 view .LVU2193
 6421 2719 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_670, *_670
 6422              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6423              		.loc 1 754 37 view .LVU2194
 6424 271d 4E8D14CD 		lea	r10, 0[0+r9*8]	# _669,
 6424      00000000 
 6425              	.LVL307:
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6426              		.loc 1 755 9 is_stmt 1 view .LVU2195
 6427              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6428              		.loc 1 755 19 is_stmt 0 view .LVU2196
 6429 2725 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_674
GAS LISTING /tmp/cc7rm34x.s 			page 183


 6429      08
 6430              	.LVL308:
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6431              		.loc 1 756 9 is_stmt 1 view .LVU2197
 6432              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6433              		.loc 1 756 42 is_stmt 0 view .LVU2198
 6434 272a C4E283F7 		shrx	rsi, rsi, r15	# tmp664, *_670, shift
 6434      F6
 6435              	.LVL309:
 6436              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6437              		.loc 1 756 63 view .LVU2199
 6438 272f C462E9F7 		shlx	r9, rdi, rdx	# tmp666, source1, shift_flipped
 6438      CF
 6439              	.LVL310:
 6440              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6441              		.loc 1 756 52 view .LVU2200
 6442 2734 4C09CE   		or	rsi, r9	# tmp667, tmp666
 6443 2737 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_679, tmp667
 6444              	.LVL311:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6445              		.loc 1 757 9 is_stmt 1 view .LVU2201
 6446              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6447              		.loc 1 758 42 is_stmt 0 view .LVU2202
 6448 273b C4E283F7 		shrx	rdi, rdi, r15	# tmp670, source1, shift
 6448      FF
 6449              	.LVL312:
 6450              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6451              		.loc 1 758 63 view .LVU2203
 6452 2740 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_684, *_684
 6452      10
 6453 2745 C4C2E9F7 		shlx	rsi, r10, rdx	# tmp668, *_684, shift_flipped
 6453      F2
 6454              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6455              		.loc 1 758 52 view .LVU2204
 6456 274a 4809F7   		or	rdi, rsi	# tmp671, tmp668
 6457              	# sieve_extend.c:757:         bitword_t source2 = bitarray[source_word+2];
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6458              		.loc 1 757 37 view .LVU2205
 6459 274d 4C8D4904 		lea	r9, 4[rcx]	# _682,
 758:sieve_extend.c ****         copy_word += 2;
 6460              		.loc 1 758 9 is_stmt 1 view .LVU2206
 6461              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6462              		.loc 1 758 52 is_stmt 0 view .LVU2207
 6463 2751 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_690, tmp671
 6463      08
 759:sieve_extend.c ****         source_word += 2;
 6464              		.loc 1 759 9 is_stmt 1 view .LVU2208
 6465              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 6466              		.loc 1 759 19 is_stmt 0 view .LVU2209
GAS LISTING /tmp/cc7rm34x.s 			page 184


 6467 2756 4C8D4004 		lea	r8, 4[rax]	# copy_word,
 6468              	.LVL313:
 760:sieve_extend.c ****         distance += 2;
 6469              		.loc 1 760 9 is_stmt 1 view .LVU2210
 761:sieve_extend.c ****     }
 6470              		.loc 1 761 9 view .LVU2211
 761:sieve_extend.c ****     }
 6471              		.loc 1 761 9 is_stmt 0 view .LVU2212
 6472              	.LBE375:
 6473              	# sieve_extend.c:753:     while (copy_word < fast_loop_stop_word) {
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6474              		.loc 1 753 11 view .LVU2213
 6475 275a 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6476              	.LBB376:
 6477              	# sieve_extend.c:761:         distance += 2;
 761:sieve_extend.c ****     }
 6478              		.loc 1 761 18 view .LVU2214
 6479 275d 4D8D5604 		lea	r10, 4[r14]	# distance,
 6480              	.LVL314:
 761:sieve_extend.c ****     }
 6481              		.loc 1 761 18 view .LVU2215
 6482              	.LBE376:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6483              		.loc 1 753 11 is_stmt 1 view .LVU2216
 6484 2761 0F868700 		jbe	.L495	#,
 6484      0000
 6485              	.LBB377:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6486              		.loc 1 754 9 view .LVU2217
 6487              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6488              		.loc 1 754 37 is_stmt 0 view .LVU2218
 6489 2767 4E8D14CD 		lea	r10, 0[0+r9*8]	# _699,
 6489      00000000 
 6490              	.LVL315:
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6491              		.loc 1 755 9 is_stmt 1 view .LVU2219
 6492              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 6493              		.loc 1 759 19 is_stmt 0 view .LVU2220
 6494 276f 4883C006 		add	rax, 6	# copy_word,
 6495              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6496              		.loc 1 755 19 view .LVU2221
 6497 2773 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_704
 6497      08
 6498              	.LVL316:
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6499              		.loc 1 756 9 is_stmt 1 view .LVU2222
 6500              	# sieve_extend.c:757:         bitword_t source2 = bitarray[source_word+2];
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6501              		.loc 1 757 37 is_stmt 0 view .LVU2223
 6502 2778 4883C106 		add	rcx, 6	# _712,
 6503              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6504              		.loc 1 756 42 view .LVU2224
 6505 277c 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_700, *_700
GAS LISTING /tmp/cc7rm34x.s 			page 185


 6506              	.LVL317:
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6507              		.loc 1 756 42 view .LVU2225
 6508 2780 C4C283F7 		shrx	rsi, r9, r15	# tmp672, *_700, shift
 6508      F1
 6509              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6510              		.loc 1 756 63 view .LVU2226
 6511 2785 C462E9F7 		shlx	r9, rdi, rdx	# tmp674, source1, shift_flipped
 6511      CF
 6512              	.LVL318:
 6513              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6514              		.loc 1 756 52 view .LVU2227
 6515 278a 4C09CE   		or	rsi, r9	# tmp675, tmp674
 6516 278d 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_709, tmp675
 6517              	.LVL319:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6518              		.loc 1 757 9 is_stmt 1 view .LVU2228
 758:sieve_extend.c ****         copy_word += 2;
 6519              		.loc 1 758 9 view .LVU2229
 6520              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6521              		.loc 1 758 42 is_stmt 0 view .LVU2230
 6522 2791 C4E283F7 		shrx	rdi, rdi, r15	# tmp678, source1, shift
 6522      FF
 6523              	.LVL320:
 6524              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6525              		.loc 1 758 63 view .LVU2231
 6526 2796 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_714, *_714
 6526      10
 6527              	.LVL321:
 758:sieve_extend.c ****         copy_word += 2;
 6528              		.loc 1 758 63 view .LVU2232
 6529 279b C4C2E9F7 		shlx	rsi, r10, rdx	# tmp676, *_714, shift_flipped
 6529      F2
 6530              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6531              		.loc 1 758 52 view .LVU2233
 6532 27a0 4809F7   		or	rdi, rsi	# tmp679, tmp676
 6533              	.LBE377:
 6534              	# sieve_extend.c:753:     while (copy_word < fast_loop_stop_word) {
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6535              		.loc 1 753 11 view .LVU2234
 6536 27a3 4939C3   		cmp	r11, rax	# fast_loop_stop_word, copy_word
 6537              	.LBB378:
 6538              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6539              		.loc 1 758 52 view .LVU2235
 6540 27a6 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_720, tmp679
 6540      08
 759:sieve_extend.c ****         source_word += 2;
 6541              		.loc 1 759 9 is_stmt 1 view .LVU2236
 6542              	.LVL322:
 760:sieve_extend.c ****         distance += 2;
 6543              		.loc 1 760 9 view .LVU2237
GAS LISTING /tmp/cc7rm34x.s 			page 186


 761:sieve_extend.c ****     }
 6544              		.loc 1 761 9 view .LVU2238
 6545              	# sieve_extend.c:761:         distance += 2;
 761:sieve_extend.c ****     }
 6546              		.loc 1 761 18 is_stmt 0 view .LVU2239
 6547 27ab 4D8D5606 		lea	r10, 6[r14]	# distance,
 6548              	.LVL323:
 761:sieve_extend.c ****     }
 6549              		.loc 1 761 18 view .LVU2240
 6550              	.LBE378:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6551              		.loc 1 753 11 is_stmt 1 view .LVU2241
 6552 27af 763D     		jbe	.L495	#,
 6553              	.LBB379:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6554              		.loc 1 754 9 view .LVU2242
 6555              	# sieve_extend.c:754:         bitword_t source0 = bitarray[source_word  ];
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6556              		.loc 1 754 37 is_stmt 0 view .LVU2243
 6557 27b1 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _402,
 6557      00000000 
 6558              	.LVL324:
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6559              		.loc 1 755 9 is_stmt 1 view .LVU2244
 6560              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6561              		.loc 1 755 19 is_stmt 0 view .LVU2245
 6562 27b9 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_407
 6562      08
 6563              	.LVL325:
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6564              		.loc 1 756 9 is_stmt 1 view .LVU2246
 6565              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6566              		.loc 1 756 63 is_stmt 0 view .LVU2247
 6567 27be C442E9F7 		shlx	r8, r9, rdx	# tmp682, source1, shift_flipped
 6567      C1
 6568              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6569              		.loc 1 756 42 view .LVU2248
 6570 27c3 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_403, *_403
 6571              	.LVL326:
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6572              		.loc 1 756 42 view .LVU2249
 6573 27c7 C46283F7 		shrx	r10, rcx, r15	# tmp680, *_403, shift
 6573      D1
 6574              	.LVL327:
 6575              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6576              		.loc 1 756 52 view .LVU2250
 6577 27cc 4D09C2   		or	r10, r8	# tmp683, tmp682
 6578 27cf 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_412, tmp683
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6579              		.loc 1 757 9 is_stmt 1 view .LVU2251
 6580              	.LVL328:
 758:sieve_extend.c ****         copy_word += 2;
 6581              		.loc 1 758 9 view .LVU2252
GAS LISTING /tmp/cc7rm34x.s 			page 187


 6582              	# sieve_extend.c:761:         distance += 2;
 761:sieve_extend.c ****     }
 6583              		.loc 1 761 18 is_stmt 0 view .LVU2253
 6584 27d3 4D8D5608 		lea	r10, 8[r14]	# distance,
 6585              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6586              		.loc 1 758 63 view .LVU2254
 6587 27d7 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_417, *_417
 6587      10
 6588              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6589              		.loc 1 758 42 view .LVU2255
 6590 27dc C44283F7 		shrx	r11, r9, r15	# tmp686, source1, shift
 6590      D9
 6591              	.LVL329:
 6592              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6593              		.loc 1 758 63 view .LVU2256
 6594 27e1 C4E2E9F7 		shlx	rdi, rsi, rdx	# tmp684, *_417, shift_flipped
 6594      FE
 6595              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 6596              		.loc 1 758 52 view .LVU2257
 6597 27e6 4909FB   		or	r11, rdi	# tmp687, tmp684
 6598 27e9 4C895CC3 		mov	QWORD PTR 8[rbx+rax*8], r11	# *_423, tmp687
 6598      08
 759:sieve_extend.c ****         source_word += 2;
 6599              		.loc 1 759 9 is_stmt 1 view .LVU2258
 760:sieve_extend.c ****         distance += 2;
 6600              		.loc 1 760 9 view .LVU2259
 761:sieve_extend.c ****     }
 6601              		.loc 1 761 9 view .LVU2260
 6602              	.LVL330:
 761:sieve_extend.c ****     }
 6603              		.loc 1 761 9 is_stmt 0 view .LVU2261
 6604              	.LBE379:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6605              		.loc 1 753 11 is_stmt 1 view .LVU2262
 6606              	.L495:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6607              		.loc 1 753 11 is_stmt 0 view .LVU2263
 6608 27ee 4D01D4   		add	r12, r10	# tmp.366, distance
 6609 27f1 4D01D5   		add	r13, r10	# tmp.367, distance
 6610              	.LVL331:
 6611              	.L490:
 763:sieve_extend.c **** }
 6612              		.loc 1 763 5 is_stmt 1 view .LVU2264
 763:sieve_extend.c **** }
 6613              		.loc 1 763 5 is_stmt 0 view .LVU2265
 6614              	.LBE390:
 6615              	.LBE393:
 911:sieve_extend.c ****     copy_word += distance;
 6616              		.loc 1 911 5 is_stmt 1 view .LVU2266
 912:sieve_extend.c **** 
 6617              		.loc 1 912 5 view .LVU2267
 914:sieve_extend.c **** 
 6618              		.loc 1 914 6 view .LVU2268
GAS LISTING /tmp/cc7rm34x.s 			page 188


 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6619              		.loc 1 917 11 view .LVU2269
 6620              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6621              		.loc 1 917 5 is_stmt 0 view .LVU2270
 6622 27f4 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 6622      50
 6623 27f9 4D39EB   		cmp	r11, r13	# aligned_copy_word, tmp.367
 6624 27fc 0F82BE0A 		jb	.L512	#,
 6624      0000
 6625 2802 4E8D34E5 		lea	r14, 0[0+r12*8]	# _3,
 6625      00000000 
 6626 280a 498D4B01 		lea	rcx, 1[r11]	# tmp.354,
 6627 280e 4A8D3C33 		lea	rdi, [rbx+r14]	# vectp.361,
 6628 2812 4989C8   		mov	r8, rcx	# niters.360, tmp.354
 6629 2815 4889F8   		mov	rax, rdi	# tmp698, vectp.361
 6630 2818 4D29EB   		sub	r11, r13	# tmp700, tmp.367
 6631 281b 48C1E803 		shr	rax, 3	# tmp698,
 6632 281f 4D29E8   		sub	r8, r13	# niters.360, tmp.367
 6633 2822 48F7D8   		neg	rax	# tmp699
 6634 2825 41B90500 		mov	r9d, 5	# tmp702,
 6634      0000
 6635 282b 83E003   		and	eax, 3	# prolog_loop_niters.362,
 6636 282e 488D7003 		lea	rsi, 3[rax]	# tmp701,
 6637 2832 4883FE05 		cmp	rsi, 5	# tmp701,
 6638 2836 490F42F1 		cmovb	rsi, r9	# tmp701,, tmp921, tmp702
 6639 283a 4939F3   		cmp	r11, rsi	# tmp700, tmp921
 6640 283d 0F823F03 		jb	.L497	#,
 6640      0000
 6641 2843 4885C0   		test	rax, rax	# prolog_loop_niters.362
 6642 2846 0F844408 		je	.L513	#,
 6642      0000
 6643              	.LVL332:
 918:sieve_extend.c ****     }
 6644              		.loc 1 918 9 is_stmt 1 view .LVU2271
 6645              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6646              		.loc 1 918 94 is_stmt 0 view .LVU2272
 6647 284c 4E8B5C33 		mov	r11, QWORD PTR 8[rbx+r14]	# *_607, *_607
 6647      08
 6648              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6649              		.loc 1 918 77 view .LVU2273
 6650 2851 498D7424 		lea	rsi, 1[r12]	# tmp788,
 6650      01
 6651              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6652              		.loc 1 918 56 view .LVU2274
 6653 2856 488B3F   		mov	rdi, QWORD PTR [rdi]	# MEM[(uint64_t *)vectp.361_27], MEM[(uint64_t *)vectp.361_27]
 6654              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6655              		.loc 1 918 94 view .LVU2275
 6656 2859 C442E9F7 		shlx	r9, r11, rdx	# tmp703, *_607, shift_flipped
 6656      CB
 6657              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6658              		.loc 1 918 56 view .LVU2276
GAS LISTING /tmp/cc7rm34x.s 			page 189


 6659 285e C46283F7 		shrx	r14, rdi, r15	# tmp705, MEM[(uint64_t *)vectp.361_27], shift
 6659      F7
 6660              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6661              		.loc 1 918 66 view .LVU2277
 6662 2863 4D09F1   		or	r9, r14	# tmp707, tmp705
 6663 2866 4883F801 		cmp	rax, 1	# prolog_loop_niters.362,
 6664              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6665              		.loc 1 918 77 view .LVU2278
 6666 286a 4989F2   		mov	r10, rsi	# source_word, tmp788
 6667              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6668              		.loc 1 918 66 view .LVU2279
 6669 286d 4E890CEB 		mov	QWORD PTR [rbx+r13*8], r9	# *_611, tmp707
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6670              		.loc 1 917 43 is_stmt 1 view .LVU2280
 6671              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6672              		.loc 1 917 52 is_stmt 0 view .LVU2281
 6673 2871 4D8D7501 		lea	r14, 1[r13]	# copy_word,
 6674              	.LVL333:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6675              		.loc 1 917 11 is_stmt 1 view .LVU2282
 6676 2875 7456     		je	.L498	#,
 918:sieve_extend.c ****     }
 6677              		.loc 1 918 9 view .LVU2283
 6678              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6679              		.loc 1 918 40 is_stmt 0 view .LVU2284
 6680 2877 4C8D1CF5 		lea	r11, 0[0+rsi*8]	# _620,
 6680      00000000 
 6681              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6682              		.loc 1 918 94 view .LVU2285
 6683 287f C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r11], rdx	# tmp708, *_626, shift_flipped
 6683      4C1B08
 6684              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6685              		.loc 1 918 56 view .LVU2286
 6686 2886 4A8B3C1B 		mov	rdi, QWORD PTR [rbx+r11]	# *_621, *_621
 6687 288a C46283F7 		shrx	r11, rdi, r15	# tmp710, *_621, shift
 6687      DF
 6688              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6689              		.loc 1 918 66 view .LVU2287
 6690 288f 4D09D9   		or	r9, r11	# tmp712, tmp710
 6691 2892 4883F803 		cmp	rax, 3	# prolog_loop_niters.362,
 6692 2896 4E890CF3 		mov	QWORD PTR [rbx+r14*8], r9	# *_630, tmp712
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6693              		.loc 1 917 43 is_stmt 1 view .LVU2288
 6694              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6695              		.loc 1 918 77 is_stmt 0 view .LVU2289
 6696 289a 4D8D5424 		lea	r10, 2[r12]	# source_word,
 6696      02
 6697              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
GAS LISTING /tmp/cc7rm34x.s 			page 190


 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6698              		.loc 1 917 52 view .LVU2290
 6699 289f 4D8D7502 		lea	r14, 2[r13]	# copy_word,
 6700              	.LVL334:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6701              		.loc 1 917 11 is_stmt 1 view .LVU2291
 6702 28a3 7528     		jne	.L498	#,
 918:sieve_extend.c ****     }
 6703              		.loc 1 918 9 view .LVU2292
 6704              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6705              		.loc 1 918 40 is_stmt 0 view .LVU2293
 6706 28a5 4E8D0CD5 		lea	r9, 0[0+r10*8]	# _205,
 6706      00000000 
 6707              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6708              		.loc 1 918 94 view .LVU2294
 6709 28ad C4A2E9F7 		shlx	rdi, QWORD PTR 8[rbx+r9], rdx	# tmp713, *_211, shift_flipped
 6709      7C0B08
 6710              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6711              		.loc 1 918 56 view .LVU2295
 6712 28b4 4E8B1C0B 		mov	r11, QWORD PTR [rbx+r9]	# *_206, *_206
 6713 28b8 C44283F7 		shrx	r9, r11, r15	# tmp715, *_206, shift
 6713      CB
 6714              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6715              		.loc 1 918 66 view .LVU2296
 6716 28bd 4C09CF   		or	rdi, r9	# tmp717, tmp715
 6717              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6718              		.loc 1 918 77 view .LVU2297
 6719 28c0 4D8D5424 		lea	r10, 3[r12]	# source_word,
 6719      03
 6720              	.LVL335:
 6721              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6722              		.loc 1 918 66 view .LVU2298
 6723 28c5 4A893CF3 		mov	QWORD PTR [rbx+r14*8], rdi	# *_215, tmp717
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6724              		.loc 1 917 43 is_stmt 1 view .LVU2299
 6725              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6726              		.loc 1 917 52 is_stmt 0 view .LVU2300
 6727 28c9 4D8D7503 		lea	r14, 3[r13]	# copy_word,
 6728              	.LVL336:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6729              		.loc 1 917 11 is_stmt 1 view .LVU2301
 6730              	.L498:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6731              		.loc 1 917 11 is_stmt 0 view .LVU2302
 6732 28cd 4929C0   		sub	r8, rax	# niters.363, prolog_loop_niters.362
 6733 28d0 4801C6   		add	rsi, rax	# tmp721, prolog_loop_niters.362
 6734 28d3 4E8D2420 		lea	r12, [rax+r12]	# tmp718,
 6735 28d7 4C01E8   		add	rax, r13	# tmp723, tmp.367
 6736 28da 4D89C5   		mov	r13, r8	# bnd.364, niters.363
 6737 28dd 488D3CF3 		lea	rdi, [rbx+rsi*8]	# vectp.373,
GAS LISTING /tmp/cc7rm34x.s 			page 191


 6738 28e1 49C1ED02 		shr	r13, 2	# bnd.364,
 6739 28e5 4C8D0CC3 		lea	r9, [rbx+rax*8]	# vectp.378,
 6740 28e9 49C1E505 		sal	r13, 5	# _733,
 6741              	# sieve_extend.c:911:     source_word += distance;
 911:sieve_extend.c ****     copy_word += distance;
 6742              		.loc 1 911 17 view .LVU2303
 6743 28ed 31C0     		xor	eax, eax	# ivtmp.419
 6744 28ef 498D75E0 		lea	rsi, -32[r13]	# tmp799,
 6745 28f3 4E8D1CE3 		lea	r11, [rbx+r12*8]	# vectp.369,
 6746 28f7 C5796E54 		vmovd	xmm10, DWORD PTR 72[rsp]	# _12, %sfp
 6746      2448
 6747 28fd 48C1EE05 		shr	rsi, 5	# tmp797,
 6748 2901 C5796E5C 		vmovd	xmm11, DWORD PTR 64[rsp]	# _18, %sfp
 6748      2440
 6749 2907 4883C601 		add	rsi, 1	# tmp800,
 6750 290b 83E607   		and	esi, 7	# tmp801,
 6751 290e 0F841201 		je	.L500	#,
 6751      0000
 6752 2914 4883FE01 		cmp	rsi, 1	# tmp801,
 6753 2918 0F84DB00 		je	.L593	#,
 6753      0000
 6754 291e 4883FE02 		cmp	rsi, 2	# tmp801,
 6755 2922 0F84AE00 		je	.L594	#,
 6755      0000
 6756 2928 4883FE03 		cmp	rsi, 3	# tmp801,
 6757 292c 0F848000 		je	.L595	#,
 6757      0000
 6758 2932 4883FE04 		cmp	rsi, 4	# tmp801,
 6759 2936 7456     		je	.L596	#,
 6760 2938 4883FE05 		cmp	rsi, 5	# tmp801,
 6761 293c 742D     		je	.L597	#,
 6762 293e 4883FE06 		cmp	rsi, 6	# tmp801,
 6763 2942 0F856807 		jne	.L665	#,
 6763      0000
 6764              	.L598:
 918:sieve_extend.c ****     }
 6765              		.loc 1 918 9 is_stmt 1 view .LVU2304
 6766              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6767              		.loc 1 918 56 is_stmt 0 view .LVU2305
 6768 2948 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r11+rax]	# tmp1262, MEM[base: vectp.369_257, index: ivtmp.419_731, off
 6768      2C03
 6769              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6770              		.loc 1 918 94 view .LVU2306
 6771 294e C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rdi+rax]	# tmp1263, MEM[base: vectp.373_264, index: ivtmp.419_731, off
 6771      07
 6772              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6773              		.loc 1 918 56 view .LVU2307
 6774 2953 C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.371, tmp1262, _12
 6774      F2
 6775              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6776              		.loc 1 918 94 view .LVU2308
 6777 2958 C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.375, tmp1263, _18
 6777      CB
GAS LISTING /tmp/cc7rm34x.s 			page 192


 6778              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6779              		.loc 1 918 66 view .LVU2309
 6780 295d C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.376, vect__38.371, vect__43.375
 6781              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6782              		.loc 1 918 29 view .LVU2310
 6783 2961 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm8	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B], v
 6783      0401
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6784              		.loc 1 917 43 is_stmt 1 view .LVU2311
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6785              		.loc 1 917 11 view .LVU2312
 6786 2967 4883C020 		add	rax, 32	# ivtmp.419,
 6787              	.L597:
 918:sieve_extend.c ****     }
 6788              		.loc 1 918 9 view .LVU2313
 6789              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6790              		.loc 1 918 56 is_stmt 0 view .LVU2314
 6791 296b C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r11+rax]	# tmp1264, MEM[base: vectp.369_257, index: ivtmp.419_731, offs
 6791      0403
 6792              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6793              		.loc 1 918 94 view .LVU2315
 6794 2971 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rdi+rax]	# tmp1265, MEM[base: vectp.373_264, index: ivtmp.419_731, offs
 6794      07
 6795              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6796              		.loc 1 918 56 view .LVU2316
 6797 2976 C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.371, tmp1264, _12
 6797      EA
 6798              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6799              		.loc 1 918 94 view .LVU2317
 6800 297b C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.375, tmp1265, _18
 6800      FB
 6801              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6802              		.loc 1 918 66 view .LVU2318
 6803 2980 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.376, vect__38.371, vect__43.375
 6804              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6805              		.loc 1 918 29 view .LVU2319
 6806 2984 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm3	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B], v
 6806      1C01
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6807              		.loc 1 917 43 is_stmt 1 view .LVU2320
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6808              		.loc 1 917 11 view .LVU2321
 6809 298a 4883C020 		add	rax, 32	# ivtmp.419,
 6810              	.L596:
 918:sieve_extend.c ****     }
 6811              		.loc 1 918 9 view .LVU2322
 6812              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6813              		.loc 1 918 56 is_stmt 0 view .LVU2323
GAS LISTING /tmp/cc7rm34x.s 			page 193


 6814 298e C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r11+rax]	# tmp1266, MEM[base: vectp.369_257, index: ivtmp.419_731, offs
 6814      1403
 6815              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6816              		.loc 1 918 94 view .LVU2324
 6817 2994 C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1267, MEM[base: vectp.373_264, index: ivtmp.419_731, offs
 6817      07
 6818              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6819              		.loc 1 918 56 view .LVU2325
 6820 2999 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.371, tmp1266, _12
 6820      F2
 6821              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6822              		.loc 1 918 94 view .LVU2326
 6823 299e C4415DF3 		vpsllq	ymm12, ymm4, xmm11	# vect__43.375, tmp1267, _18
 6823      E3
 6824              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6825              		.loc 1 918 66 view .LVU2327
 6826 29a3 C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.376, vect__38.371, vect__43.375
 6826      EC
 6827              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6828              		.loc 1 918 29 view .LVU2328
 6829 29a8 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm13	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B], 
 6829      2C01
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6830              		.loc 1 917 43 is_stmt 1 view .LVU2329
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6831              		.loc 1 917 11 view .LVU2330
 6832 29ae 4883C020 		add	rax, 32	# ivtmp.419,
 6833              	.L595:
 918:sieve_extend.c ****     }
 6834              		.loc 1 918 9 view .LVU2331
 6835              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6836              		.loc 1 918 56 is_stmt 0 view .LVU2332
 6837 29b2 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r11+rax]	# tmp1268, MEM[base: vectp.369_257, index: ivtmp.419_731, off
 6837      3403
 6838              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6839              		.loc 1 918 94 view .LVU2333
 6840 29b8 C5FE6F0C 		vmovdqu	ymm1, YMMWORD PTR [rdi+rax]	# tmp1269, MEM[base: vectp.373_264, index: ivtmp.419_731, offs
 6840      07
 6841              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6842              		.loc 1 918 56 view .LVU2334
 6843 29bd C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.371, tmp1268, _12
 6843      FA
 6844              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6845              		.loc 1 918 94 view .LVU2335
 6846 29c2 C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.375, tmp1269, _18
 6846      C3
 6847              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 194


 6848              		.loc 1 918 66 view .LVU2336
 6849 29c7 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.376, vect__38.371, vect__43.375
 6849      C0
 6850              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6851              		.loc 1 918 29 view .LVU2337
 6852 29cc C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm0	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B], v
 6852      0401
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6853              		.loc 1 917 43 is_stmt 1 view .LVU2338
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6854              		.loc 1 917 11 view .LVU2339
 6855 29d2 4883C020 		add	rax, 32	# ivtmp.419,
 6856              	.L594:
 918:sieve_extend.c ****     }
 6857              		.loc 1 918 9 view .LVU2340
 6858              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6859              		.loc 1 918 56 is_stmt 0 view .LVU2341
 6860 29d6 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r11+rax]	# tmp1270, MEM[base: vectp.369_257, index: ivtmp.419_731, offs
 6860      2C03
 6861              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6862              		.loc 1 918 94 view .LVU2342
 6863 29dc C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rdi+rax]	# tmp1271, MEM[base: vectp.373_264, index: ivtmp.419_731, offs
 6863      07
 6864              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6865              		.loc 1 918 56 view .LVU2343
 6866 29e1 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.371, tmp1270, _12
 6866      CA
 6867              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6868              		.loc 1 918 94 view .LVU2344
 6869 29e6 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.375, tmp1271, _18
 6869      DB
 6870              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6871              		.loc 1 918 66 view .LVU2345
 6872 29eb C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.376, vect__38.371, vect__43.375
 6873              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6874              		.loc 1 918 29 view .LVU2346
 6875 29ef C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm2	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B], v
 6875      1401
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6876              		.loc 1 917 43 is_stmt 1 view .LVU2347
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6877              		.loc 1 917 11 view .LVU2348
 6878 29f5 4883C020 		add	rax, 32	# ivtmp.419,
 6879              	.L593:
 918:sieve_extend.c ****     }
 6880              		.loc 1 918 9 view .LVU2349
 6881              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6882              		.loc 1 918 56 is_stmt 0 view .LVU2350
 6883 29f9 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR [r11+rax]	# tmp1272, MEM[base: vectp.369_257, index: ivtmp.419_731, offs
GAS LISTING /tmp/cc7rm34x.s 			page 195


 6883      3403
 6884              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6885              		.loc 1 918 94 view .LVU2351
 6886 29ff C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1273, MEM[base: vectp.373_264, index: ivtmp.419_731, offs
 6886      07
 6887              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6888              		.loc 1 918 56 view .LVU2352
 6889 2a04 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.371, tmp1272, _12
 6889      E2
 6890              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6891              		.loc 1 918 94 view .LVU2353
 6892 2a09 C4415DF3 		vpsllq	ymm13, ymm4, xmm11	# vect__43.375, tmp1273, _18
 6892      EB
 6893              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6894              		.loc 1 918 66 view .LVU2354
 6895 2a0e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__46.376, vect__38.371, vect__43.375
 6895      F5
 6896              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6897              		.loc 1 918 29 view .LVU2355
 6898 2a13 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm14	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B], 
 6898      3401
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6899              		.loc 1 917 43 is_stmt 1 view .LVU2356
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6900              		.loc 1 917 11 view .LVU2357
 6901 2a19 4883C020 		add	rax, 32	# ivtmp.419,
 6902 2a1d 4C39E8   		cmp	rax, r13	# ivtmp.419, _733
 6903 2a20 0F844401 		je	.L641	#,
 6903      0000
 6904              	.L500:
 918:sieve_extend.c ****     }
 6905              		.loc 1 918 9 discriminator 2 view .LVU2358
 6906              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6907              		.loc 1 918 56 is_stmt 0 discriminator 2 view .LVU2359
 6908 2a26 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r11+rax]	# tmp1206, MEM[base: vectp.369_257, index: ivtmp.419_731, off
 6908      3C03
 6909              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6910              		.loc 1 918 94 discriminator 2 view .LVU2360
 6911 2a2c C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rdi+rax]	# tmp1207, MEM[base: vectp.373_264, index: ivtmp.419_731, offs
 6911      07
 6912              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6913              		.loc 1 918 56 discriminator 2 view .LVU2361
 6914 2a31 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.371, tmp1206, _12
 6914      CA
 6915              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6916              		.loc 1 918 94 discriminator 2 view .LVU2362
 6917 2a36 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.375, tmp1207, _18
 6917      C3
GAS LISTING /tmp/cc7rm34x.s 			page 196


 6918              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6919              		.loc 1 918 66 discriminator 2 view .LVU2363
 6920 2a3b C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.376, vect__38.371, vect__43.375
 6921              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6922              		.loc 1 918 29 discriminator 2 view .LVU2364
 6923 2a3f C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm5	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B], v
 6923      2C01
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6924              		.loc 1 917 43 is_stmt 1 discriminator 2 view .LVU2365
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6925              		.loc 1 917 11 discriminator 2 view .LVU2366
 918:sieve_extend.c ****     }
 6926              		.loc 1 918 9 discriminator 2 view .LVU2367
 6927              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6928              		.loc 1 918 56 is_stmt 0 discriminator 2 view .LVU2368
 6929 2a45 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r11+rax]	# tmp1208, MEM[base: vectp.369_257, index: ivtmp.419_731, of
 6929      4C0320
 6930              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6931              		.loc 1 918 94 discriminator 2 view .LVU2369
 6932 2a4c C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rdi+rax]	# tmp1209, MEM[base: vectp.373_264, index: ivtmp.419_731, of
 6932      0720
 6933              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6934              		.loc 1 918 56 discriminator 2 view .LVU2370
 6935 2a52 C4C135D3 		vpsrlq	ymm7, ymm9, xmm10	# vect__38.371, tmp1208, _12
 6935      FA
 6936              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6937              		.loc 1 918 94 discriminator 2 view .LVU2371
 6938 2a57 C4C165F3 		vpsllq	ymm2, ymm3, xmm11	# vect__43.375, tmp1209, _18
 6938      D3
 6939              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6940              		.loc 1 918 66 discriminator 2 view .LVU2372
 6941 2a5c C5C5EBF2 		vpor	ymm6, ymm7, ymm2	# vect__46.376, vect__38.371, vect__43.375
 6942              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6943              		.loc 1 918 29 discriminator 2 view .LVU2373
 6944 2a60 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r9+rax], ymm6	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B],
 6944      740120
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6945              		.loc 1 917 43 is_stmt 1 discriminator 2 view .LVU2374
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6946              		.loc 1 917 11 discriminator 2 view .LVU2375
 918:sieve_extend.c ****     }
 6947              		.loc 1 918 9 discriminator 2 view .LVU2376
 6948              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6949              		.loc 1 918 56 is_stmt 0 discriminator 2 view .LVU2377
 6950 2a67 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 64[r11+rax]	# tmp1210, MEM[base: vectp.369_257, index: ivtmp.419_731, o
 6950      640340
 6951              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 197


 6952              		.loc 1 918 94 discriminator 2 view .LVU2378
 6953 2a6e C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rdi+rax]	# tmp1211, MEM[base: vectp.373_264, index: ivtmp.419_731, of
 6953      0740
 6954              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6955              		.loc 1 918 56 discriminator 2 view .LVU2379
 6956 2a74 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.371, tmp1210, _12
 6956      EA
 6957              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6958              		.loc 1 918 94 discriminator 2 view .LVU2380
 6959 2a79 C4415DF3 		vpsllq	ymm14, ymm4, xmm11	# vect__43.375, tmp1211, _18
 6959      F3
 6960              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6961              		.loc 1 918 66 discriminator 2 view .LVU2381
 6962 2a7e C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__46.376, vect__38.371, vect__43.375
 6962      FE
 6963              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6964              		.loc 1 918 29 discriminator 2 view .LVU2382
 6965 2a83 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rax], ymm15	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B]
 6965      7C0140
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6966              		.loc 1 917 43 is_stmt 1 discriminator 2 view .LVU2383
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6967              		.loc 1 917 11 discriminator 2 view .LVU2384
 918:sieve_extend.c ****     }
 6968              		.loc 1 918 9 discriminator 2 view .LVU2385
 6969              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6970              		.loc 1 918 56 is_stmt 0 discriminator 2 view .LVU2386
 6971 2a8a C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r11+rax]	# tmp1212, MEM[base: vectp.369_257, index: ivtmp.419_731, of
 6971      4C0360
 6972              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6973              		.loc 1 918 94 discriminator 2 view .LVU2387
 6974 2a91 C5FE6F44 		vmovdqu	ymm0, YMMWORD PTR 96[rdi+rax]	# tmp1213, MEM[base: vectp.373_264, index: ivtmp.419_731, of
 6974      0760
 6975              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6976              		.loc 1 918 56 discriminator 2 view .LVU2388
 6977 2a97 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.371, tmp1212, _12
 6977      C2
 6978              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6979              		.loc 1 918 94 discriminator 2 view .LVU2389
 6980 2a9c C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.375, tmp1213, _18
 6980      EB
 6981              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6982              		.loc 1 918 66 discriminator 2 view .LVU2390
 6983 2aa1 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.376, vect__38.371, vect__43.375
 6984              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6985              		.loc 1 918 29 discriminator 2 view .LVU2391
 6986 2aa5 C4417E7F 		vmovdqu	YMMWORD PTR 96[r9+rax], ymm9	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B],
GAS LISTING /tmp/cc7rm34x.s 			page 198


 6986      4C0160
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6987              		.loc 1 917 43 is_stmt 1 discriminator 2 view .LVU2392
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 6988              		.loc 1 917 11 discriminator 2 view .LVU2393
 918:sieve_extend.c ****     }
 6989              		.loc 1 918 9 discriminator 2 view .LVU2394
 6990              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6991              		.loc 1 918 56 is_stmt 0 discriminator 2 view .LVU2395
 6992 2aac C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 128[r11+rax]	# tmp1214, MEM[base: vectp.369_257, index: ivtmp.419_731, o
 6992      BC038000 
 6992      0000
 6993              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6994              		.loc 1 918 94 discriminator 2 view .LVU2396
 6995 2ab6 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rdi+rax]	# tmp1215, MEM[base: vectp.373_264, index: ivtmp.419_731, o
 6995      07800000 
 6995      00
 6996              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 6997              		.loc 1 918 56 discriminator 2 view .LVU2397
 6998 2abf C4C145D3 		vpsrlq	ymm2, ymm7, xmm10	# vect__38.371, tmp1214, _12
 6998      D2
 6999              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7000              		.loc 1 918 94 discriminator 2 view .LVU2398
 7001 2ac4 C4C165F3 		vpsllq	ymm6, ymm3, xmm11	# vect__43.375, tmp1215, _18
 7001      F3
 7002              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7003              		.loc 1 918 66 discriminator 2 view .LVU2399
 7004 2ac9 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.376, vect__38.371, vect__43.375
 7005              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7006              		.loc 1 918 29 discriminator 2 view .LVU2400
 7007 2acd C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rax], ymm12	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B
 7007      A4018000 
 7007      0000
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7008              		.loc 1 917 43 is_stmt 1 discriminator 2 view .LVU2401
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7009              		.loc 1 917 11 discriminator 2 view .LVU2402
 918:sieve_extend.c ****     }
 7010              		.loc 1 918 9 discriminator 2 view .LVU2403
 7011              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7012              		.loc 1 918 56 is_stmt 0 discriminator 2 view .LVU2404
 7013 2ad7 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 160[r11+rax]	# tmp1216, MEM[base: vectp.369_257, index: ivtmp.419_731, 
 7013      AC03A000 
 7013      0000
 7014              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7015              		.loc 1 918 94 discriminator 2 view .LVU2405
 7016 2ae1 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 160[rdi+rax]	# tmp1217, MEM[base: vectp.373_264, index: ivtmp.419_731, o
 7016      07A00000 
 7016      00
GAS LISTING /tmp/cc7rm34x.s 			page 199


 7017              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7018              		.loc 1 918 56 discriminator 2 view .LVU2406
 7019 2aea C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.371, tmp1216, _12
 7019      F2
 7020              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7021              		.loc 1 918 94 discriminator 2 view .LVU2407
 7022 2aef C4415DF3 		vpsllq	ymm15, ymm4, xmm11	# vect__43.375, tmp1217, _18
 7022      FB
 7023              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7024              		.loc 1 918 66 discriminator 2 view .LVU2408
 7025 2af4 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__46.376, vect__38.371, vect__43.375
 7025      CF
 7026              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7027              		.loc 1 918 29 discriminator 2 view .LVU2409
 7028 2af9 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r9+rax], ymm1	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B]
 7028      8C01A000 
 7028      0000
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7029              		.loc 1 917 43 is_stmt 1 discriminator 2 view .LVU2410
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7030              		.loc 1 917 11 discriminator 2 view .LVU2411
 918:sieve_extend.c ****     }
 7031              		.loc 1 918 9 discriminator 2 view .LVU2412
 7032              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7033              		.loc 1 918 56 is_stmt 0 discriminator 2 view .LVU2413
 7034 2b03 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r11+rax]	# tmp1218, MEM[base: vectp.369_257, index: ivtmp.419_731, o
 7034      8403C000 
 7034      0000
 7035              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7036              		.loc 1 918 94 discriminator 2 view .LVU2414
 7037 2b0d C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 192[rdi+rax]	# tmp1219, MEM[base: vectp.373_264, index: ivtmp.419_731, o
 7037      07C00000 
 7037      00
 7038              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7039              		.loc 1 918 56 discriminator 2 view .LVU2415
 7040 2b16 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.371, tmp1218, _12
 7040      C2
 7041              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7042              		.loc 1 918 94 discriminator 2 view .LVU2416
 7043 2b1b C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.375, tmp1219, _18
 7043      CB
 7044              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7045              		.loc 1 918 66 discriminator 2 view .LVU2417
 7046 2b20 C4C17DEB 		vpor	ymm7, ymm0, ymm9	# vect__46.376, vect__38.371, vect__43.375
 7046      F9
 7047              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7048              		.loc 1 918 29 discriminator 2 view .LVU2418
GAS LISTING /tmp/cc7rm34x.s 			page 200


 7049 2b25 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r9+rax], ymm7	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B]
 7049      BC01C000 
 7049      0000
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7050              		.loc 1 917 43 is_stmt 1 discriminator 2 view .LVU2419
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7051              		.loc 1 917 11 discriminator 2 view .LVU2420
 918:sieve_extend.c ****     }
 7052              		.loc 1 918 9 discriminator 2 view .LVU2421
 7053              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7054              		.loc 1 918 56 is_stmt 0 discriminator 2 view .LVU2422
 7055 2b2f C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 224[r11+rax]	# tmp1220, MEM[base: vectp.369_257, index: ivtmp.419_731, o
 7055      9403E000 
 7055      0000
 7056              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7057              		.loc 1 918 94 discriminator 2 view .LVU2423
 7058 2b39 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rdi+rax]	# tmp1221, MEM[base: vectp.373_264, index: ivtmp.419_731, o
 7058      07E00000 
 7058      00
 7059              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7060              		.loc 1 918 56 discriminator 2 view .LVU2424
 7061 2b42 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.371, tmp1220, _12
 7061      F2
 7062              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7063              		.loc 1 918 94 discriminator 2 view .LVU2425
 7064 2b47 C44165F3 		vpsllq	ymm12, ymm3, xmm11	# vect__43.375, tmp1221, _18
 7064      E3
 7065              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7066              		.loc 1 918 66 discriminator 2 view .LVU2426
 7067 2b4c C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.376, vect__38.371, vect__43.375
 7067      EC
 7068              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7069              		.loc 1 918 29 discriminator 2 view .LVU2427
 7070 2b51 C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rax], ymm13	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B
 7070      AC01E000 
 7070      0000
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7071              		.loc 1 917 43 is_stmt 1 discriminator 2 view .LVU2428
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7072              		.loc 1 917 11 discriminator 2 view .LVU2429
 7073 2b5b 48050001 		add	rax, 256	# ivtmp.419,
 7073      0000
 7074 2b61 4C39E8   		cmp	rax, r13	# ivtmp.419, _733
 7075 2b64 0F85BCFE 		jne	.L500	#,
 7075      FFFF
 7076              	.L641:
 7077 2b6a 4D89C3   		mov	r11, r8	# niters_vector_mult_vf.365, niters.363
 7078 2b6d 4983E3FC 		and	r11, -4	# niters_vector_mult_vf.365,
 7079 2b71 4D39D8   		cmp	r8, r11	# niters.363, niters_vector_mult_vf.365
 7080 2b74 4F8D241A 		lea	r12, [r10+r11]	# tmp.366,
 7081 2b78 4F8D2C1E 		lea	r13, [r14+r11]	# tmp.367,
GAS LISTING /tmp/cc7rm34x.s 			page 201


 7082 2b7c 0F84DA00 		je	.L496	#,
 7082      0000
 7083              	.L497:
 7084              	.LVL337:
 918:sieve_extend.c ****     }
 7085              		.loc 1 918 9 view .LVU2430
 7086              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7087              		.loc 1 917 5 is_stmt 0 view .LVU2431
 7088 2b82 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 7088      50
 7089              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7090              		.loc 1 917 52 view .LVU2432
 7091 2b87 4D8D4D01 		lea	r9, 1[r13]	# copy_word,
 7092              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7093              		.loc 1 918 94 view .LVU2433
 7094 2b8b C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r12*8], rdx	# tmp733, *_521, shift_flipped
 7094      44E308
 7095              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7096              		.loc 1 918 56 view .LVU2434
 7097 2b92 C42283F7 		shrx	r14, QWORD PTR [rbx+r12*8], r15	# tmp735, *_516, shift
 7097      34E3
 7098              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7099              		.loc 1 918 66 view .LVU2435
 7100 2b98 4D09F0   		or	r8, r14	# tmp737, tmp735
 7101              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7102              		.loc 1 918 77 view .LVU2436
 7103 2b9b 4D8D5424 		lea	r10, 1[r12]	# _519,
 7103      01
 7104              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7105              		.loc 1 918 66 view .LVU2437
 7106 2ba0 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_525, tmp737
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7107              		.loc 1 917 43 is_stmt 1 view .LVU2438
 7108              	.LVL338:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7109              		.loc 1 917 11 view .LVU2439
 7110              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7111              		.loc 1 917 5 is_stmt 0 view .LVU2440
 7112 2ba4 4D39CB   		cmp	r11, r9	# aligned_copy_word, copy_word
 7113 2ba7 0F82AF00 		jb	.L496	#,
 7113      0000
 918:sieve_extend.c ****     }
 7114              		.loc 1 918 9 is_stmt 1 view .LVU2441
 7115              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7116              		.loc 1 918 56 is_stmt 0 view .LVU2442
 7117 2bad 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_533, *_533
 7118              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 202


 7119              		.loc 1 918 94 view .LVU2443
 7120 2bb1 C4A2E9F7 		shlx	rsi, QWORD PTR 8[rbx+r10*8], rdx	# tmp738, *_538, shift_flipped
 7120      74D308
 7121              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7122              		.loc 1 917 52 view .LVU2444
 7123 2bb8 4D8D5502 		lea	r10, 2[r13]	# copy_word,
 7124              	.LVL339:
 7125              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7126              		.loc 1 918 56 view .LVU2445
 7127 2bbc C4E283F7 		shrx	rax, rdi, r15	# tmp740, *_533, shift
 7127      C7
 7128              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7129              		.loc 1 918 66 view .LVU2446
 7130 2bc1 4809C6   		or	rsi, rax	# tmp742, tmp740
 7131              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7132              		.loc 1 917 5 view .LVU2447
 7133 2bc4 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7134              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7135              		.loc 1 918 66 view .LVU2448
 7136 2bc7 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# *_542, tmp742
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7137              		.loc 1 917 43 is_stmt 1 view .LVU2449
 7138              	.LVL340:
 7139              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7140              		.loc 1 918 77 is_stmt 0 view .LVU2450
 7141 2bcb 4D8D4424 		lea	r8, 2[r12]	# _536,
 7141      02
 7142              	.LVL341:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7143              		.loc 1 917 11 is_stmt 1 view .LVU2451
 7144              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7145              		.loc 1 917 5 is_stmt 0 view .LVU2452
 7146 2bd0 0F828600 		jb	.L496	#,
 7146      0000
 918:sieve_extend.c ****     }
 7147              		.loc 1 918 9 is_stmt 1 view .LVU2453
 7148              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7149              		.loc 1 918 94 is_stmt 0 view .LVU2454
 7150 2bd6 C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r8*8], rdx	# tmp743, *_555, shift_flipped
 7150      4CC308
 7151              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7152              		.loc 1 918 56 view .LVU2455
 7153 2bdd 4E8B04C3 		mov	r8, QWORD PTR [rbx+r8*8]	# *_550, *_550
 7154              	.LVL342:
 918:sieve_extend.c ****     }
 7155              		.loc 1 918 56 view .LVU2456
 7156 2be1 C4C283F7 		shrx	rsi, r8, r15	# tmp745, *_550, shift
 7156      F0
GAS LISTING /tmp/cc7rm34x.s 			page 203


 7157              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7158              		.loc 1 918 66 view .LVU2457
 7159 2be6 4909F1   		or	r9, rsi	# tmp747, tmp745
 7160 2be9 4E890CD3 		mov	QWORD PTR [rbx+r10*8], r9	# *_559, tmp747
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7161              		.loc 1 917 43 is_stmt 1 view .LVU2458
 7162              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7163              		.loc 1 917 52 is_stmt 0 view .LVU2459
 7164 2bed 4D8D5503 		lea	r10, 3[r13]	# copy_word,
 7165              	.LVL343:
 7166              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7167              		.loc 1 917 5 view .LVU2460
 7168 2bf1 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7169              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7170              		.loc 1 918 77 view .LVU2461
 7171 2bf4 4D8D7424 		lea	r14, 3[r12]	# _553,
 7171      03
 7172              	.LVL344:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7173              		.loc 1 917 11 is_stmt 1 view .LVU2462
 7174              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7175              		.loc 1 917 5 is_stmt 0 view .LVU2463
 7176 2bf9 7261     		jb	.L496	#,
 918:sieve_extend.c ****     }
 7177              		.loc 1 918 9 is_stmt 1 view .LVU2464
 7178              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7179              		.loc 1 918 94 is_stmt 0 view .LVU2465
 7180 2bfb C4A2E9F7 		shlx	rax, QWORD PTR 8[rbx+r14*8], rdx	# tmp748, *_572, shift_flipped
 7180      44F308
 7181              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7182              		.loc 1 918 56 view .LVU2466
 7183 2c02 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# *_567, *_567
 7184 2c06 C46283F7 		shrx	r14, rdi, r15	# tmp750, *_567, shift
 7184      F7
 7185              	.LVL345:
 7186              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7187              		.loc 1 918 66 view .LVU2467
 7188 2c0b 4C09F0   		or	rax, r14	# tmp752, tmp750
 7189 2c0e 4A8904D3 		mov	QWORD PTR [rbx+r10*8], rax	# *_576, tmp752
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7190              		.loc 1 917 43 is_stmt 1 view .LVU2468
 7191              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7192              		.loc 1 917 52 is_stmt 0 view .LVU2469
 7193 2c12 4D8D5504 		lea	r10, 4[r13]	# copy_word,
 7194              	.LVL346:
 7195              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7196              		.loc 1 917 5 view .LVU2470
GAS LISTING /tmp/cc7rm34x.s 			page 204


 7197 2c16 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7198              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7199              		.loc 1 918 77 view .LVU2471
 7200 2c19 4D8D4C24 		lea	r9, 4[r12]	# _570,
 7200      04
 7201              	.LVL347:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7202              		.loc 1 917 11 is_stmt 1 view .LVU2472
 7203              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7204              		.loc 1 917 5 is_stmt 0 view .LVU2473
 7205 2c1e 723C     		jb	.L496	#,
 918:sieve_extend.c ****     }
 7206              		.loc 1 918 9 is_stmt 1 view .LVU2474
 7207              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7208              		.loc 1 917 52 is_stmt 0 view .LVU2475
 7209 2c20 4D8D6D05 		lea	r13, 5[r13]	# copy_word,
 7210              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7211              		.loc 1 918 94 view .LVU2476
 7212 2c24 C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r9*8], rdx	# tmp753, *_589, shift_flipped
 7212      44CB08
 7213              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7214              		.loc 1 918 56 view .LVU2477
 7215 2c2b 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_584, *_584
 7216 2c2f C46283F7 		shrx	r9, rsi, r15	# tmp755, *_584, shift
 7216      CE
 7217              	.LVL348:
 7218              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7219              		.loc 1 918 66 view .LVU2478
 7220 2c34 4D09C8   		or	r8, r9	# tmp757, tmp755
 7221              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7222              		.loc 1 917 5 view .LVU2479
 7223 2c37 4D39EB   		cmp	r11, r13	# aligned_copy_word, copy_word
 7224              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7225              		.loc 1 918 66 view .LVU2480
 7226 2c3a 4E8904D3 		mov	QWORD PTR [rbx+r10*8], r8	# *_593, tmp757
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7227              		.loc 1 917 43 is_stmt 1 view .LVU2481
 7228              	.LVL349:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7229              		.loc 1 917 11 view .LVU2482
 7230              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7231              		.loc 1 918 77 is_stmt 0 view .LVU2483
 7232 2c3e 4D8D6424 		lea	r12, 5[r12]	# _587,
 7232      05
 7233              	.LVL350:
 7234              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7235              		.loc 1 917 5 view .LVU2484
GAS LISTING /tmp/cc7rm34x.s 			page 205


 7236 2c43 7217     		jb	.L496	#,
 918:sieve_extend.c ****     }
 7237              		.loc 1 918 9 is_stmt 1 view .LVU2485
 7238              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7239              		.loc 1 918 56 is_stmt 0 view .LVU2486
 7240 2c45 4E8B1CE3 		mov	r11, QWORD PTR [rbx+r12*8]	# *_232, *_232
 7241              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7242              		.loc 1 918 94 view .LVU2487
 7243 2c49 C4A2E9F7 		shlx	rdx, QWORD PTR 8[rbx+r12*8], rdx	# tmp758, *_237, shift_flipped
 7243      54E308
 7244              	.LVL351:
 7245              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7246              		.loc 1 918 56 view .LVU2488
 7247 2c50 C44283F7 		shrx	r15, r11, r15	# tmp760, *_232, shift
 7247      FB
 7248              	.LVL352:
 7249              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7250              		.loc 1 918 66 view .LVU2489
 7251 2c55 4C09FA   		or	rdx, r15	# tmp762, tmp760
 7252 2c58 4A8914EB 		mov	QWORD PTR [rbx+r13*8], rdx	# *_241, tmp762
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7253              		.loc 1 917 43 is_stmt 1 view .LVU2490
 7254              	.LVL353:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7255              		.loc 1 917 11 view .LVU2491
 7256              	.L496:
 921:sieve_extend.c **** 
 7257              		.loc 1 921 5 view .LVU2492
 7258              	# sieve_extend.c:921:     if (copy_word >= destination_stop_word) return;
 921:sieve_extend.c **** 
 7259              		.loc 1 921 8 is_stmt 0 view .LVU2493
 7260 2c5c 4C8B5424 		mov	r10, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7260      58
 7261 2c61 4939CA   		cmp	r10, rcx	# destination_stop_word, tmp.354
 7262 2c64 0F860E04 		jbe	.L662	#,
 7262      0000
 923:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7263              		.loc 1 923 5 is_stmt 1 view .LVU2494
 7264              	# sieve_extend.c:923:     source_word = copy_word - size; // recalibrate
 923:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7265              		.loc 1 923 17 is_stmt 0 view .LVU2495
 7266 2c6a 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# size, %sfp
 7266      18
 7267 2c6f 4989CC   		mov	r12, rcx	# tmp.353, tmp.354
 7268              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7269              		.loc 1 927 21 view .LVU2496
 7270 2c72 488D040F 		lea	rax, [rdi+rcx]	# ivtmp.414,
 7271              	# sieve_extend.c:923:     source_word = copy_word - size; // recalibrate
 923:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7272              		.loc 1 923 17 view .LVU2497
 7273 2c76 4929FC   		sub	r12, rdi	# tmp.353, size
 7274              	.LVL354:
GAS LISTING /tmp/cc7rm34x.s 			page 206


 924:sieve_extend.c **** 
 7275              		.loc 1 924 5 is_stmt 1 view .LVU2498
 7276              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7277              		.loc 1 927 5 is_stmt 0 view .LVU2499
 7278 2c79 4939C2   		cmp	r10, rax	# destination_stop_word, ivtmp.414
 7279              	# sieve_extend.c:924:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 924:sieve_extend.c **** 
 7280              		.loc 1 924 18 view .LVU2500
 7281 2c7c 4C8D34FD 		lea	r14, 0[0+rdi*8]	# memsize,
 7281      00000000 
 7282              	.LVL355:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7283              		.loc 1 927 11 is_stmt 1 view .LVU2501
 7284              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7285              		.loc 1 927 5 is_stmt 0 view .LVU2502
 7286 2c84 0F826B01 		jb	.L503	#,
 7286      0000
 7287 2c8a 4C8D2CCB 		lea	r13, [rbx+rcx*8]	# tmp765,
 7288 2c8e 488D0CC5 		lea	rcx, 0[0+rax*8]	# tmp766,
 7288      00000000 
 7289              	.LVL356:
 7290              	# sieve_extend.c:928:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 928:sieve_extend.c **** 
 7291              		.loc 1 928 38 view .LVU2503
 7292 2c96 4E8D3CE3 		lea	r15, [rbx+r12*8]	# _48,
 7293 2c9a 4929CD   		sub	r13, rcx	# _437, tmp766
 7294 2c9d 4C896424 		mov	QWORD PTR 72[rsp], r12	# %sfp, tmp.353
 7294      48
 7295 2ca2 4989FC   		mov	r12, rdi	# size, size
 7296              	.LVL357:
 928:sieve_extend.c **** 
 7297              		.loc 1 928 38 view .LVU2504
 7298 2ca5 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 7298      40
 7299 2caa 4C89D3   		mov	rbx, r10	# destination_stop_word, destination_stop_word
 7300              	.LVL358:
 928:sieve_extend.c **** 
 7301              		.loc 1 928 38 view .LVU2505
 7302 2cad C5F877   		vzeroupper
 7303              	.LVL359:
 7304              	.L504:
 928:sieve_extend.c **** 
 7305              		.loc 1 928 9 is_stmt 1 discriminator 2 view .LVU2506
 7306              	.LBB394:
 7307              	.LBI394:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7308              		.loc 2 31 1 discriminator 2 view .LVU2507
 7309              	.LBB395:
 7310              		.loc 2 34 3 discriminator 2 view .LVU2508
 7311              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7312              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2509
 7313 2cb0 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp768,
 7313      00
 7314 2cb5 4C89F2   		mov	rdx, r14	#, memsize
 7315 2cb8 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.414
GAS LISTING /tmp/cc7rm34x.s 			page 207


 7315      50
 7316 2cbd 4C89FE   		mov	rsi, r15	#, _48
 7317 2cc0 E8000000 		call	memcpy@PLT	#
 7317      00
 7318              	.LVL360:
 7319              		.loc 2 34 10 discriminator 2 view .LVU2510
 7320              	.LBE395:
 7321              	.LBE394:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7322              		.loc 1 927 54 is_stmt 1 discriminator 2 view .LVU2511
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7323              		.loc 1 927 11 discriminator 2 view .LVU2512
 7324 2cc5 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.414, %sfp
 7324      50
 7325 2cca 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.414,
 7326              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7327              		.loc 1 927 5 is_stmt 0 discriminator 2 view .LVU2513
 7328 2cce 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.414
 7329 2cd1 0F820901 		jb	.L650	#,
 7329      0000
 928:sieve_extend.c **** 
 7330              		.loc 1 928 9 is_stmt 1 view .LVU2514
 7331              	.LVL361:
 7332              	.LBB403:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7333              		.loc 2 31 1 view .LVU2515
 7334              	.LBB396:
 7335              		.loc 2 34 3 view .LVU2516
 7336              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7337              		.loc 2 34 10 is_stmt 0 view .LVU2517
 7338 2cd7 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp990,
 7338      00
 7339 2cdc 4C89F2   		mov	rdx, r14	#, memsize
 7340 2cdf 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.414
 7340      50
 7341              	.LVL362:
 7342              		.loc 2 34 10 view .LVU2518
 7343 2ce4 4C89FE   		mov	rsi, r15	#, _48
 7344 2ce7 E8000000 		call	memcpy@PLT	#
 7344      00
 7345              	.LVL363:
 7346              		.loc 2 34 10 view .LVU2519
 7347              	.LBE396:
 7348              	.LBE403:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7349              		.loc 1 927 54 is_stmt 1 view .LVU2520
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7350              		.loc 1 927 11 view .LVU2521
 7351 2cec 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.414, %sfp
 7351      50
 7352 2cf1 4E8D0421 		lea	r8, [rcx+r12]	# ivtmp.414,
 7353              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7354              		.loc 1 927 5 is_stmt 0 view .LVU2522
 7355 2cf5 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.414
 7356 2cf8 0F82E200 		jb	.L650	#,
GAS LISTING /tmp/cc7rm34x.s 			page 208


 7356      0000
 928:sieve_extend.c **** 
 7357              		.loc 1 928 9 is_stmt 1 view .LVU2523
 7358              	.LVL364:
 7359              	.LBB404:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7360              		.loc 2 31 1 view .LVU2524
 7361              	.LBB397:
 7362              		.loc 2 34 3 view .LVU2525
 7363              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7364              		.loc 2 34 10 is_stmt 0 view .LVU2526
 7365 2cfe 4C89FE   		mov	rsi, r15	#, _48
 7366 2d01 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp993,
 7366      00
 7367 2d06 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, ivtmp.414
 7367      50
 7368 2d0b 4C89F2   		mov	rdx, r14	#, memsize
 7369 2d0e E8000000 		call	memcpy@PLT	#
 7369      00
 7370              	.LVL365:
 7371              		.loc 2 34 10 view .LVU2527
 7372              	.LBE397:
 7373              	.LBE404:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7374              		.loc 1 927 54 is_stmt 1 view .LVU2528
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7375              		.loc 1 927 11 view .LVU2529
 7376 2d13 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.414, %sfp
 7376      50
 7377 2d18 4A8D3421 		lea	rsi, [rcx+r12]	# ivtmp.414,
 7378              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7379              		.loc 1 927 5 is_stmt 0 view .LVU2530
 7380 2d1c 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.414
 7381 2d1f 0F82BB00 		jb	.L650	#,
 7381      0000
 928:sieve_extend.c **** 
 7382              		.loc 1 928 9 is_stmt 1 view .LVU2531
 7383              	.LVL366:
 7384              	.LBB405:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7385              		.loc 2 31 1 view .LVU2532
 7386              	.LBB398:
 7387              		.loc 2 34 3 view .LVU2533
 7388              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7389              		.loc 2 34 10 is_stmt 0 view .LVU2534
 7390 2d25 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp996,
 7390      00
 7391 2d2a 4C89F2   		mov	rdx, r14	#, memsize
 7392 2d2d 48897424 		mov	QWORD PTR 80[rsp], rsi	# %sfp, ivtmp.414
 7392      50
 7393 2d32 4C89FE   		mov	rsi, r15	#, _48
 7394 2d35 E8000000 		call	memcpy@PLT	#
 7394      00
 7395              	.LVL367:
 7396              		.loc 2 34 10 view .LVU2535
 7397              	.LBE398:
GAS LISTING /tmp/cc7rm34x.s 			page 209


 7398              	.LBE405:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7399              		.loc 1 927 54 is_stmt 1 view .LVU2536
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7400              		.loc 1 927 11 view .LVU2537
 7401 2d3a 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.414, %sfp
 7401      50
 7402 2d3f 4E8D0C21 		lea	r9, [rcx+r12]	# ivtmp.414,
 7403              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7404              		.loc 1 927 5 is_stmt 0 view .LVU2538
 7405 2d43 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.414
 7406 2d46 0F829400 		jb	.L650	#,
 7406      0000
 928:sieve_extend.c **** 
 7407              		.loc 1 928 9 is_stmt 1 view .LVU2539
 7408              	.LVL368:
 7409              	.LBB406:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7410              		.loc 2 31 1 view .LVU2540
 7411              	.LBB399:
 7412              		.loc 2 34 3 view .LVU2541
 7413              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7414              		.loc 2 34 10 is_stmt 0 view .LVU2542
 7415 2d4c 4C89F2   		mov	rdx, r14	#, memsize
 7416 2d4f 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp999,
 7416      00
 7417 2d54 4C894C24 		mov	QWORD PTR 80[rsp], r9	# %sfp, ivtmp.414
 7417      50
 7418 2d59 4C89FE   		mov	rsi, r15	#, _48
 7419 2d5c E8000000 		call	memcpy@PLT	#
 7419      00
 7420              	.LVL369:
 7421              		.loc 2 34 10 view .LVU2543
 7422              	.LBE399:
 7423              	.LBE406:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7424              		.loc 1 927 54 is_stmt 1 view .LVU2544
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7425              		.loc 1 927 11 view .LVU2545
 7426 2d61 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.414, %sfp
 7426      50
 7427 2d66 4A8D1421 		lea	rdx, [rcx+r12]	# ivtmp.414,
 7428              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7429              		.loc 1 927 5 is_stmt 0 view .LVU2546
 7430 2d6a 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.414
 7431 2d6d 7271     		jb	.L650	#,
 928:sieve_extend.c **** 
 7432              		.loc 1 928 9 is_stmt 1 view .LVU2547
 7433              	.LVL370:
 7434              	.LBB407:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7435              		.loc 2 31 1 view .LVU2548
 7436              	.LBB400:
 7437              		.loc 2 34 3 view .LVU2549
 7438              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
GAS LISTING /tmp/cc7rm34x.s 			page 210


 7439              		.loc 2 34 10 is_stmt 0 view .LVU2550
 7440 2d6f 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp1002,
 7440      00
 7441 2d74 4C89FE   		mov	rsi, r15	#, _48
 7442 2d77 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, ivtmp.414
 7442      50
 7443 2d7c 4C89F2   		mov	rdx, r14	#, memsize
 7444 2d7f E8000000 		call	memcpy@PLT	#
 7444      00
 7445              	.LVL371:
 7446              		.loc 2 34 10 view .LVU2551
 7447              	.LBE400:
 7448              	.LBE407:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7449              		.loc 1 927 54 is_stmt 1 view .LVU2552
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7450              		.loc 1 927 11 view .LVU2553
 7451 2d84 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.414, %sfp
 7451      50
 7452 2d89 4E8D1C21 		lea	r11, [rcx+r12]	# ivtmp.414,
 7453              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7454              		.loc 1 927 5 is_stmt 0 view .LVU2554
 7455 2d8d 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.414
 7456 2d90 724E     		jb	.L650	#,
 928:sieve_extend.c **** 
 7457              		.loc 1 928 9 is_stmt 1 view .LVU2555
 7458              	.LVL372:
 7459              	.LBB408:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7460              		.loc 2 31 1 view .LVU2556
 7461              	.LBB401:
 7462              		.loc 2 34 3 view .LVU2557
 7463              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7464              		.loc 2 34 10 is_stmt 0 view .LVU2558
 7465 2d92 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp1005,
 7465      00
 7466 2d97 4C89F2   		mov	rdx, r14	#, memsize
 7467 2d9a 4C895C24 		mov	QWORD PTR 80[rsp], r11	# %sfp, ivtmp.414
 7467      50
 7468 2d9f 4C89FE   		mov	rsi, r15	#, _48
 7469 2da2 E8000000 		call	memcpy@PLT	#
 7469      00
 7470              	.LVL373:
 7471              		.loc 2 34 10 view .LVU2559
 7472              	.LBE401:
 7473              	.LBE408:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7474              		.loc 1 927 54 is_stmt 1 view .LVU2560
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7475              		.loc 1 927 11 view .LVU2561
 7476 2da7 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.414, %sfp
 7476      50
 7477 2dac 4E8D1421 		lea	r10, [rcx+r12]	# ivtmp.414,
 7478              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7479              		.loc 1 927 5 is_stmt 0 view .LVU2562
GAS LISTING /tmp/cc7rm34x.s 			page 211


 7480 2db0 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.414
 7481 2db3 722B     		jb	.L650	#,
 928:sieve_extend.c **** 
 7482              		.loc 1 928 9 is_stmt 1 view .LVU2563
 7483              	.LVL374:
 7484              	.LBB409:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7485              		.loc 2 31 1 view .LVU2564
 7486              	.LBB402:
 7487              		.loc 2 34 3 view .LVU2565
 7488              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7489              		.loc 2 34 10 is_stmt 0 view .LVU2566
 7490 2db5 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp1008,
 7490      00
 7491 2dba 4C89F2   		mov	rdx, r14	#, memsize
 7492 2dbd 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, ivtmp.414
 7492      50
 7493 2dc2 4C89FE   		mov	rsi, r15	#, _48
 7494 2dc5 E8000000 		call	memcpy@PLT	#
 7494      00
 7495              	.LVL375:
 7496              		.loc 2 34 10 view .LVU2567
 7497              	.LBE402:
 7498              	.LBE409:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7499              		.loc 1 927 54 is_stmt 1 view .LVU2568
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7500              		.loc 1 927 11 view .LVU2569
 7501 2dca 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.414, %sfp
 7501      50
 7502              	.LVL376:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7503              		.loc 1 927 11 is_stmt 0 view .LVU2570
 7504 2dcf 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.414,
 7505              	.LVL377:
 7506              	# sieve_extend.c:927:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7507              		.loc 1 927 5 view .LVU2571
 7508 2dd3 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.414
 7509 2dd6 0F83D4FE 		jnb	.L504	#,
 7509      FFFF
 7510              	.LVL378:
 7511 2ddc 0F1F4000 		.p2align 4
 7512              		.p2align 3
 7513              	.L650:
 927:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7514              		.loc 1 927 5 view .LVU2572
 7515 2de0 4C8B6424 		mov	r12, QWORD PTR 72[rsp]	# tmp.353, %sfp
 7515      48
 7516              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7517              		.loc 1 931 5 view .LVU2573
 7518 2de5 48394C24 		cmp	QWORD PTR 88[rsp], rcx	# %sfp, tmp.354
 7518      58
 7519 2dea 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 7519      40
 7520              	.LVL379:
GAS LISTING /tmp/cc7rm34x.s 			page 212


 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7521              		.loc 1 931 11 is_stmt 1 view .LVU2574
 7522              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7523              		.loc 1 931 5 is_stmt 0 view .LVU2575
 7524 2def 0F827402 		jb	.L663	#,
 7524      0000
 7525              	.LVL380:
 7526              	.L503:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7527              		.loc 1 931 5 view .LVU2576
 7528 2df5 4A8D3CE3 		lea	rdi, [rbx+r12*8]	# vectp.348,
 7529 2df9 41B80500 		mov	r8d, 5	# tmp778,
 7529      0000
 7530 2dff 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7530      58
 7531              	.LVL381:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7532              		.loc 1 931 5 view .LVU2577
 7533 2e04 4989FD   		mov	r13, rdi	# tmp775, vectp.348
 7534 2e07 49C1ED03 		shr	r13, 3	# tmp775,
 7535 2e0b 49F7DD   		neg	r13	# tmp776
 7536 2e0e 4183E503 		and	r13d, 3	# prolog_loop_niters.349,
 7537 2e12 4D8D7E01 		lea	r15, 1[r14]	# _49,
 7538 2e16 498D7503 		lea	rsi, 3[r13]	# tmp777,
 7539 2e1a 4883FE05 		cmp	rsi, 5	# tmp777,
 7540 2e1e 490F42F0 		cmovb	rsi, r8	# tmp777,, tmp967, tmp778
 7541 2e22 4929CE   		sub	r14, rcx	# tmp779, tmp.354
 7542 2e25 4C39F6   		cmp	rsi, r14	# tmp967, tmp779
 7543 2e28 0F87BA01 		ja	.L506	#,
 7543      0000
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7544              		.loc 1 931 5 view .LVU2578
 7545 2e2e 4D85ED   		test	r13, r13	# prolog_loop_niters.349
 7546 2e31 0F846902 		je	.L514	#,
 7546      0000
 932:sieve_extend.c **** 
 7547              		.loc 1 932 9 is_stmt 1 view .LVU2579
 7548              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7549              		.loc 1 932 39 is_stmt 0 view .LVU2580
 7550 2e37 488B17   		mov	rdx, QWORD PTR [rdi]	# _80, MEM[(uint64_t *)vectp.348_198]
 7551 2e3a 4983FD01 		cmp	r13, 1	# prolog_loop_niters.349,
 7552              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7553              		.loc 1 931 57 view .LVU2581
 7554 2e3e 4C8D5901 		lea	r11, 1[rcx]	# copy_word,
 7555              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7556              		.loc 1 931 71 view .LVU2582
 7557 2e42 4D8D7424 		lea	r14, 1[r12]	# source_word,
 7557      01
 7558              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7559              		.loc 1 932 29 view .LVU2583
 7560 2e47 488914CB 		mov	QWORD PTR [rbx+rcx*8], rdx	# *_56, _80
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cc7rm34x.s 			page 213


 7561              		.loc 1 931 48 is_stmt 1 view .LVU2584
 7562              	.LVL382:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7563              		.loc 1 931 11 view .LVU2585
 7564 2e4b 7428     		je	.L507	#,
 932:sieve_extend.c **** 
 7565              		.loc 1 932 9 view .LVU2586
 7566              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7567              		.loc 1 932 39 is_stmt 0 view .LVU2587
 7568 2e4d 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _507, *_504
 7569 2e51 4983FD03 		cmp	r13, 3	# prolog_loop_niters.349,
 7570              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7571              		.loc 1 931 71 view .LVU2588
 7572 2e55 4D8D7424 		lea	r14, 2[r12]	# source_word,
 7572      02
 7573              	.LVL383:
 7574              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7575              		.loc 1 932 29 view .LVU2589
 7576 2e5a 4E8914DB 		mov	QWORD PTR [rbx+r11*8], r10	# *_506, _507
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7577              		.loc 1 931 48 is_stmt 1 view .LVU2590
 7578              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7579              		.loc 1 931 57 is_stmt 0 view .LVU2591
 7580 2e5e 4C8D5902 		lea	r11, 2[rcx]	# copy_word,
 7581              	.LVL384:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7582              		.loc 1 931 11 is_stmt 1 view .LVU2592
 7583 2e62 7511     		jne	.L507	#,
 932:sieve_extend.c **** 
 7584              		.loc 1 932 9 view .LVU2593
 7585              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7586              		.loc 1 932 39 is_stmt 0 view .LVU2594
 7587 2e64 4A8B04F3 		mov	rax, QWORD PTR [rbx+r14*8]	# _179, *_182
 7588              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7589              		.loc 1 931 71 view .LVU2595
 7590 2e68 4D8D7424 		lea	r14, 3[r12]	# source_word,
 7590      03
 7591              	.LVL385:
 7592              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7593              		.loc 1 932 29 view .LVU2596
 7594 2e6d 4A8904DB 		mov	QWORD PTR [rbx+r11*8], rax	# *_180, _179
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7595              		.loc 1 931 48 is_stmt 1 view .LVU2597
 7596              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7597              		.loc 1 931 57 is_stmt 0 view .LVU2598
 7598 2e71 4C8D5903 		lea	r11, 3[rcx]	# copy_word,
 7599              	.LVL386:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7600              		.loc 1 931 11 is_stmt 1 view .LVU2599
GAS LISTING /tmp/cc7rm34x.s 			page 214


 7601              	.L507:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7602              		.loc 1 931 11 is_stmt 0 view .LVU2600
 7603 2e75 4D29EF   		sub	r15, r13	# tmp780, prolog_loop_niters.349
 7604 2e78 4D01EC   		add	r12, r13	# tmp781, prolog_loop_niters.349
 7605 2e7b 4929CF   		sub	r15, rcx	# niters.350, tmp.354
 7606 2e7e 4C01E9   		add	rcx, r13	# tmp783, prolog_loop_niters.349
 7607 2e81 4C89FF   		mov	rdi, r15	# bnd.351, niters.350
 7608              	# sieve_extend.c:923:     source_word = copy_word - size; // recalibrate
 923:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7609              		.loc 1 923 17 view .LVU2601
 7610 2e84 31F6     		xor	esi, esi	# ivtmp.406
 7611 2e86 48C1EF02 		shr	rdi, 2	# bnd.351,
 7612 2e8a 4E8D24E3 		lea	r12, [rbx+r12*8]	# vectp.356,
 7613 2e8e 48C1E705 		sal	rdi, 5	# _635,
 7614 2e92 488D0CCB 		lea	rcx, [rbx+rcx*8]	# vectp.359,
 7615 2e96 4C8D6FE0 		lea	r13, -32[rdi]	# tmp793,
 7616 2e9a 49C1ED05 		shr	r13, 5	# tmp791,
 7617 2e9e 4983C501 		add	r13, 1	# tmp794,
 7618 2ea2 4183E507 		and	r13d, 7	# tmp795,
 7619 2ea6 0F849600 		je	.L509	#,
 7619      0000
 7620 2eac 4983FD01 		cmp	r13, 1	# tmp795,
 7621 2eb0 7478     		je	.L600	#,
 7622 2eb2 4983FD02 		cmp	r13, 2	# tmp795,
 7623 2eb6 7463     		je	.L601	#,
 7624 2eb8 4983FD03 		cmp	r13, 3	# tmp795,
 7625 2ebc 744E     		je	.L602	#,
 7626 2ebe 4983FD04 		cmp	r13, 4	# tmp795,
 7627 2ec2 7439     		je	.L603	#,
 7628 2ec4 4983FD05 		cmp	r13, 5	# tmp795,
 7629 2ec8 7424     		je	.L604	#,
 7630 2eca 4983FD06 		cmp	r13, 6	# tmp795,
 7631 2ece 740F     		je	.L605	#,
 7632              	.LVL387:
 932:sieve_extend.c **** 
 7633              		.loc 1 932 9 is_stmt 1 view .LVU2602
 7634              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7635              		.loc 1 932 29 is_stmt 0 view .LVU2603
 7636 2ed0 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r12]	# tmp1253, MEM[base: vectp.356_120, index: ivtmp.406_513, offset:
 7636      1424
 7637 2ed6 BE200000 		mov	esi, 32	# ivtmp.406,
 7637      00
 7638 2edb C57E7F11 		vmovdqu	YMMWORD PTR [rcx], ymm10	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B], tmp1
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7639              		.loc 1 931 48 is_stmt 1 view .LVU2604
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7640              		.loc 1 931 11 view .LVU2605
 7641              	.L605:
 932:sieve_extend.c **** 
 7642              		.loc 1 932 9 view .LVU2606
 7643              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7644              		.loc 1 932 29 is_stmt 0 view .LVU2607
 7645 2edf C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r12+rsi]	# tmp1254, MEM[base: vectp.356_120, index: ivtmp.406_513, off
 7645      1C34
GAS LISTING /tmp/cc7rm34x.s 			page 215


 7646 2ee5 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm11	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B], 
 7646      31
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7647              		.loc 1 931 48 is_stmt 1 view .LVU2608
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7648              		.loc 1 931 11 view .LVU2609
 7649 2eea 4883C620 		add	rsi, 32	# ivtmp.406,
 7650              	.L604:
 932:sieve_extend.c **** 
 7651              		.loc 1 932 9 view .LVU2610
 7652              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7653              		.loc 1 932 29 is_stmt 0 view .LVU2611
 7654 2eee C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r12+rsi]	# tmp1255, MEM[base: vectp.356_120, index: ivtmp.406_513, off
 7654      3434
 7655 2ef4 C57E7F34 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm14	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B], 
 7655      31
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7656              		.loc 1 931 48 is_stmt 1 view .LVU2612
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7657              		.loc 1 931 11 view .LVU2613
 7658 2ef9 4883C620 		add	rsi, 32	# ivtmp.406,
 7659              	.L603:
 932:sieve_extend.c **** 
 7660              		.loc 1 932 9 view .LVU2614
 7661              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7662              		.loc 1 932 29 is_stmt 0 view .LVU2615
 7663 2efd C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r12+rsi]	# tmp1256, MEM[base: vectp.356_120, index: ivtmp.406_513, offs
 7663      2434
 7664 2f03 C5FE7F24 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm4	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B], t
 7664      31
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7665              		.loc 1 931 48 is_stmt 1 view .LVU2616
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7666              		.loc 1 931 11 view .LVU2617
 7667 2f08 4883C620 		add	rsi, 32	# ivtmp.406,
 7668              	.L602:
 932:sieve_extend.c **** 
 7669              		.loc 1 932 9 view .LVU2618
 7670              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7671              		.loc 1 932 29 is_stmt 0 view .LVU2619
 7672 2f0c C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r12+rsi]	# tmp1257, MEM[base: vectp.356_120, index: ivtmp.406_513, off
 7672      3C34
 7673 2f12 C57E7F3C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm15	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B], 
 7673      31
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7674              		.loc 1 931 48 is_stmt 1 view .LVU2620
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7675              		.loc 1 931 11 view .LVU2621
 7676 2f17 4883C620 		add	rsi, 32	# ivtmp.406,
 7677              	.L601:
 932:sieve_extend.c **** 
 7678              		.loc 1 932 9 view .LVU2622
 7679              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
GAS LISTING /tmp/cc7rm34x.s 			page 216


 7680              		.loc 1 932 29 is_stmt 0 view .LVU2623
 7681 2f1b C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR [r12+rsi]	# tmp1258, MEM[base: vectp.356_120, index: ivtmp.406_513, offs
 7681      0C34
 7682 2f21 C5FE7F0C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm1	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B], t
 7682      31
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7683              		.loc 1 931 48 is_stmt 1 view .LVU2624
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7684              		.loc 1 931 11 view .LVU2625
 7685 2f26 4883C620 		add	rsi, 32	# ivtmp.406,
 7686              	.L600:
 932:sieve_extend.c **** 
 7687              		.loc 1 932 9 view .LVU2626
 7688              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7689              		.loc 1 932 29 is_stmt 0 view .LVU2627
 7690 2f2a C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r12+rsi]	# tmp1259, MEM[base: vectp.356_120, index: ivtmp.406_513, offs
 7690      0434
 7691 2f30 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm8	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B], t
 7691      31
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7692              		.loc 1 931 48 is_stmt 1 view .LVU2628
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7693              		.loc 1 931 11 view .LVU2629
 7694 2f35 4883C620 		add	rsi, 32	# ivtmp.406,
 7695 2f39 4839FE   		cmp	rsi, rdi	# ivtmp.406, _635
 7696 2f3c 0F848E00 		je	.L639	#,
 7696      0000
 7697              	.L509:
 932:sieve_extend.c **** 
 7698              		.loc 1 932 9 discriminator 2 view .LVU2630
 7699              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7700              		.loc 1 932 29 is_stmt 0 discriminator 2 view .LVU2631
 7701 2f42 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r12+rsi]	# tmp1239, MEM[base: vectp.356_120, index: ivtmp.406_513, offs
 7701      0434
 7702 2f48 C5FE7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm0	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B], t
 7702      31
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7703              		.loc 1 931 48 is_stmt 1 discriminator 2 view .LVU2632
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7704              		.loc 1 931 11 discriminator 2 view .LVU2633
 932:sieve_extend.c **** 
 7705              		.loc 1 932 9 discriminator 2 view .LVU2634
 7706              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7707              		.loc 1 932 29 is_stmt 0 discriminator 2 view .LVU2635
 7708 2f4d C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r12+rsi]	# tmp1240, MEM[base: vectp.356_120, index: ivtmp.406_513, of
 7708      6C3420
 7709 2f54 C5FE7F6C 		vmovdqu	YMMWORD PTR 32[rcx+rsi], ymm5	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B],
 7709      3120
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7710              		.loc 1 931 48 is_stmt 1 discriminator 2 view .LVU2636
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7711              		.loc 1 931 11 discriminator 2 view .LVU2637
 932:sieve_extend.c **** 
 7712              		.loc 1 932 9 discriminator 2 view .LVU2638
GAS LISTING /tmp/cc7rm34x.s 			page 217


 7713              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7714              		.loc 1 932 29 is_stmt 0 discriminator 2 view .LVU2639
 7715 2f5a C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r12+rsi]	# tmp1241, MEM[base: vectp.356_120, index: ivtmp.406_513, of
 7715      4C3440
 7716 2f61 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rsi], ymm9	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B],
 7716      3140
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7717              		.loc 1 931 48 is_stmt 1 discriminator 2 view .LVU2640
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7718              		.loc 1 931 11 discriminator 2 view .LVU2641
 932:sieve_extend.c **** 
 7719              		.loc 1 932 9 discriminator 2 view .LVU2642
 7720              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7721              		.loc 1 932 29 is_stmt 0 discriminator 2 view .LVU2643
 7722 2f67 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 96[r12+rsi]	# tmp1242, MEM[base: vectp.356_120, index: ivtmp.406_513, of
 7722      7C3460
 7723 2f6e C5FE7F7C 		vmovdqu	YMMWORD PTR 96[rcx+rsi], ymm7	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B],
 7723      3160
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7724              		.loc 1 931 48 is_stmt 1 discriminator 2 view .LVU2644
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7725              		.loc 1 931 11 discriminator 2 view .LVU2645
 932:sieve_extend.c **** 
 7726              		.loc 1 932 9 discriminator 2 view .LVU2646
 7727              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7728              		.loc 1 932 29 is_stmt 0 discriminator 2 view .LVU2647
 7729 2f74 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 128[r12+rsi]	# tmp1243, MEM[base: vectp.356_120, index: ivtmp.406_513, o
 7729      94348000 
 7729      0000
 7730 2f7e C5FE7F94 		vmovdqu	YMMWORD PTR 128[rcx+rsi], ymm2	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B]
 7730      31800000 
 7730      00
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7731              		.loc 1 931 48 is_stmt 1 discriminator 2 view .LVU2648
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7732              		.loc 1 931 11 discriminator 2 view .LVU2649
 932:sieve_extend.c **** 
 7733              		.loc 1 932 9 discriminator 2 view .LVU2650
 7734              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7735              		.loc 1 932 29 is_stmt 0 discriminator 2 view .LVU2651
 7736 2f87 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r12+rsi]	# tmp1244, MEM[base: vectp.356_120, index: ivtmp.406_513, o
 7736      B434A000 
 7736      0000
 7737 2f91 C5FE7FB4 		vmovdqu	YMMWORD PTR 160[rcx+rsi], ymm6	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B]
 7737      31A00000 
 7737      00
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7738              		.loc 1 931 48 is_stmt 1 discriminator 2 view .LVU2652
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7739              		.loc 1 931 11 discriminator 2 view .LVU2653
 932:sieve_extend.c **** 
 7740              		.loc 1 932 9 discriminator 2 view .LVU2654
 7741              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cc7rm34x.s 			page 218


 932:sieve_extend.c **** 
 7742              		.loc 1 932 29 is_stmt 0 discriminator 2 view .LVU2655
 7743 2f9a C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 192[r12+rsi]	# tmp1245, MEM[base: vectp.356_120, index: ivtmp.406_513, o
 7743      9C34C000 
 7743      0000
 7744 2fa4 C5FE7F9C 		vmovdqu	YMMWORD PTR 192[rcx+rsi], ymm3	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B]
 7744      31C00000 
 7744      00
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7745              		.loc 1 931 48 is_stmt 1 discriminator 2 view .LVU2656
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7746              		.loc 1 931 11 discriminator 2 view .LVU2657
 932:sieve_extend.c **** 
 7747              		.loc 1 932 9 discriminator 2 view .LVU2658
 7748              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7749              		.loc 1 932 29 is_stmt 0 discriminator 2 view .LVU2659
 7750 2fad C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 224[r12+rsi]	# tmp1246, MEM[base: vectp.356_120, index: ivtmp.406_513, 
 7750      A434E000 
 7750      0000
 7751 2fb7 C57E7FA4 		vmovdqu	YMMWORD PTR 224[rcx+rsi], ymm12	# MEM[base: vectp.359_97, index: ivtmp.406_513, offset: 0B
 7751      31E00000 
 7751      00
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7752              		.loc 1 931 48 is_stmt 1 discriminator 2 view .LVU2660
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7753              		.loc 1 931 11 discriminator 2 view .LVU2661
 7754 2fc0 4881C600 		add	rsi, 256	# ivtmp.406,
 7754      010000
 7755 2fc7 4839FE   		cmp	rsi, rdi	# ivtmp.406, _635
 7756 2fca 0F8572FF 		jne	.L509	#,
 7756      FFFF
 7757              	.L639:
 7758 2fd0 4D89F8   		mov	r8, r15	# niters_vector_mult_vf.352, niters.350
 7759 2fd3 4983E0FC 		and	r8, -4	# niters_vector_mult_vf.352,
 7760 2fd7 4D39F8   		cmp	r8, r15	# niters_vector_mult_vf.352, niters.350
 7761 2fda 4F8D2430 		lea	r12, [r8+r14]	# tmp.353,
 7762 2fde 4B8D0C18 		lea	rcx, [r8+r11]	# tmp.354,
 7763 2fe2 0F849000 		je	.L662	#,
 7763      0000
 7764              	.L506:
 7765              	.LVL388:
 932:sieve_extend.c **** 
 7766              		.loc 1 932 9 view .LVU2662
 7767              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7768              		.loc 1 931 5 is_stmt 0 view .LVU2663
 7769 2fe8 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7769      58
 7770              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7771              		.loc 1 931 57 view .LVU2664
 7772 2fed 4C8D4901 		lea	r9, 1[rcx]	# copy_word,
 7773              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7774              		.loc 1 932 39 view .LVU2665
 7775 2ff1 4E8B3CE3 		mov	r15, QWORD PTR [rbx+r12*8]	# _90, *_141
GAS LISTING /tmp/cc7rm34x.s 			page 219


 7776              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7777              		.loc 1 931 71 view .LVU2666
 7778 2ff5 4D8D5C24 		lea	r11, 1[r12]	# source_word,
 7778      01
 7779              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7780              		.loc 1 931 5 view .LVU2667
 7781 2ffa 4D39CE   		cmp	r14, r9	# destination_stop_word, copy_word
 7782              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7783              		.loc 1 932 29 view .LVU2668
 7784 2ffd 4C893CCB 		mov	QWORD PTR [rbx+rcx*8], r15	# *_439, _90
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7785              		.loc 1 931 48 is_stmt 1 view .LVU2669
 7786              	.LVL389:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7787              		.loc 1 931 11 view .LVU2670
 7788              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7789              		.loc 1 931 5 is_stmt 0 view .LVU2671
 7790 3001 7275     		jb	.L662	#,
 932:sieve_extend.c **** 
 7791              		.loc 1 932 9 is_stmt 1 view .LVU2672
 7792              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7793              		.loc 1 932 39 is_stmt 0 view .LVU2673
 7794 3003 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# _103, *_98
 7795              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7796              		.loc 1 931 57 view .LVU2674
 7797 3007 4C8D5102 		lea	r10, 2[rcx]	# copy_word,
 7798              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7799              		.loc 1 931 5 view .LVU2675
 7800 300b 4D39D6   		cmp	r14, r10	# destination_stop_word, copy_word
 7801              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7802              		.loc 1 931 71 view .LVU2676
 7803 300e 498D4424 		lea	rax, 2[r12]	# source_word,
 7803      02
 7804              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7805              		.loc 1 932 29 view .LVU2677
 7806 3013 4A8914CB 		mov	QWORD PTR [rbx+r9*8], rdx	# *_102, _103
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7807              		.loc 1 931 48 is_stmt 1 view .LVU2678
 7808              	.LVL390:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7809              		.loc 1 931 11 view .LVU2679
 7810              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7811              		.loc 1 931 5 is_stmt 0 view .LVU2680
 7812 3017 725F     		jb	.L662	#,
 932:sieve_extend.c **** 
 7813              		.loc 1 932 9 is_stmt 1 view .LVU2681
 7814              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/cc7rm34x.s 			page 220


 932:sieve_extend.c **** 
 7815              		.loc 1 932 39 is_stmt 0 view .LVU2682
 7816 3019 488B3CC3 		mov	rdi, QWORD PTR [rbx+rax*8]	# _113, *_110
 7817              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7818              		.loc 1 931 57 view .LVU2683
 7819 301d 4C8D6903 		lea	r13, 3[rcx]	# copy_word,
 7820              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7821              		.loc 1 931 5 view .LVU2684
 7822 3021 4D39EE   		cmp	r14, r13	# destination_stop_word, copy_word
 7823              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7824              		.loc 1 931 71 view .LVU2685
 7825 3024 498D7424 		lea	rsi, 3[r12]	# source_word,
 7825      03
 7826              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7827              		.loc 1 932 29 view .LVU2686
 7828 3029 4A893CD3 		mov	QWORD PTR [rbx+r10*8], rdi	# *_112, _113
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7829              		.loc 1 931 48 is_stmt 1 view .LVU2687
 7830              	.LVL391:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7831              		.loc 1 931 11 view .LVU2688
 7832              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7833              		.loc 1 931 5 is_stmt 0 view .LVU2689
 7834 302d 7249     		jb	.L662	#,
 932:sieve_extend.c **** 
 7835              		.loc 1 932 9 is_stmt 1 view .LVU2690
 7836              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7837              		.loc 1 932 39 is_stmt 0 view .LVU2691
 7838 302f 4C8B04F3 		mov	r8, QWORD PTR [rbx+rsi*8]	# _35, *_501
 7839              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7840              		.loc 1 931 57 view .LVU2692
 7841 3033 4C8D7904 		lea	r15, 4[rcx]	# copy_word,
 7842              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7843              		.loc 1 931 71 view .LVU2693
 7844 3037 4983C404 		add	r12, 4	# source_word,
 7845              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7846              		.loc 1 931 5 view .LVU2694
 7847 303b 4D39F7   		cmp	r15, r14	# copy_word, destination_stop_word
 7848              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7849              		.loc 1 932 29 view .LVU2695
 7850 303e 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_132, _35
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7851              		.loc 1 931 48 is_stmt 1 view .LVU2696
 7852              	.LVL392:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7853              		.loc 1 931 11 view .LVU2697
 7854              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
GAS LISTING /tmp/cc7rm34x.s 			page 221


 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7855              		.loc 1 931 5 is_stmt 0 view .LVU2698
 7856 3042 7734     		ja	.L662	#,
 932:sieve_extend.c **** 
 7857              		.loc 1 932 9 is_stmt 1 view .LVU2699
 7858              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7859              		.loc 1 932 39 is_stmt 0 view .LVU2700
 7860 3044 4E8D0CE5 		lea	r9, 0[0+r12*8]	# _42,
 7860      00000000 
 7861              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7862              		.loc 1 931 57 view .LVU2701
 7863 304c 4883C105 		add	rcx, 5	# copy_word,
 7864              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7865              		.loc 1 932 39 view .LVU2702
 7866 3050 4E8B24E3 		mov	r12, QWORD PTR [rbx+r12*8]	# _46, *_43
 7867              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7868              		.loc 1 931 5 view .LVU2703
 7869 3054 4939CE   		cmp	r14, rcx	# destination_stop_word, copy_word
 7870              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7871              		.loc 1 932 29 view .LVU2704
 7872 3057 4E8924FB 		mov	QWORD PTR [rbx+r15*8], r12	# *_45, _46
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7873              		.loc 1 931 48 is_stmt 1 view .LVU2705
 7874              	.LVL393:
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7875              		.loc 1 931 11 view .LVU2706
 7876              	# sieve_extend.c:931:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7877              		.loc 1 931 5 is_stmt 0 view .LVU2707
 7878 305b 721B     		jb	.L662	#,
 932:sieve_extend.c **** 
 7879              		.loc 1 932 9 is_stmt 1 view .LVU2708
 7880              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7881              		.loc 1 932 39 is_stmt 0 view .LVU2709
 7882 305d 4E8B5C0B 		mov	r11, QWORD PTR 8[rbx+r9]	# _158, *_161
 7882      08
 7883              	# sieve_extend.c:932:         bitarray[copy_word] = bitarray[source_word];
 932:sieve_extend.c **** 
 7884              		.loc 1 932 29 view .LVU2710
 7885 3062 4C891CCB 		mov	QWORD PTR [rbx+rcx*8], r11	# *_159, _158
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7886              		.loc 1 931 48 is_stmt 1 view .LVU2711
 931:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7887              		.loc 1 931 11 view .LVU2712
 7888 3066 C5F877   		vzeroupper
 7889              	.L663:
 7890              	# sieve_extend.c:935:  }
 935:sieve_extend.c **** 
 7891              		.loc 1 935 2 is_stmt 0 view .LVU2713
 7892 3069 488D65D8 		lea	rsp, -40[rbp]	#,
 7893              	.LVL394:
GAS LISTING /tmp/cc7rm34x.s 			page 222


 935:sieve_extend.c **** 
 7894              		.loc 1 935 2 view .LVU2714
 7895 306d 5B       		pop	rbx	#
 7896 306e 415C     		pop	r12	#
 7897 3070 415D     		pop	r13	#
 7898 3072 415E     		pop	r14	#
 7899 3074 415F     		pop	r15	#
 7900 3076 5D       		pop	rbp	#
 7901              		.cfi_remember_state
 7902              		.cfi_def_cfa 7, 8
 7903              	.LVL395:
 935:sieve_extend.c **** 
 7904              		.loc 1 935 2 view .LVU2715
 7905 3077 C3       		ret	
 7906              	.LVL396:
 7907              		.p2align 4,,7
 7908              		.p2align 3
 7909              	.L662:
 7910              		.cfi_restore_state
 935:sieve_extend.c **** 
 7911              		.loc 1 935 2 view .LVU2716
 7912 3078 C5F877   		vzeroupper
 7913 307b 488D65D8 		lea	rsp, -40[rbp]	#,
 7914              	.LVL397:
 935:sieve_extend.c **** 
 7915              		.loc 1 935 2 view .LVU2717
 7916 307f 5B       		pop	rbx	#
 7917 3080 415C     		pop	r12	#
 7918 3082 415D     		pop	r13	#
 7919 3084 415E     		pop	r14	#
 7920 3086 415F     		pop	r15	#
 7921 3088 5D       		pop	rbp	#
 7922              		.cfi_remember_state
 7923              		.cfi_def_cfa 7, 8
 7924              	.LVL398:
 935:sieve_extend.c **** 
 7925              		.loc 1 935 2 view .LVU2718
 7926 3089 C3       		ret	
 7927              	.LVL399:
 7928 308a 660F1F44 		.p2align 4,,7
 7928      0000
 7929              		.p2align 3
 7930              	.L513:
 7931              		.cfi_restore_state
 7932              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7933              		.loc 1 917 5 view .LVU2719
 7934 3090 4D89EE   		mov	r14, r13	# copy_word, tmp.367
 7935              	# sieve_extend.c:911:     source_word += distance;
 911:sieve_extend.c ****     copy_word += distance;
 7936              		.loc 1 911 17 view .LVU2720
 7937 3093 4D89E2   		mov	r10, r12	# source_word, tmp.366
 7938 3096 498D7424 		lea	rsi, 1[r12]	# tmp788,
 7938      01
 7939 309b E92DF8FF 		jmp	.L498	#
 7939      FF
 7940              	.LVL400:
GAS LISTING /tmp/cc7rm34x.s 			page 223


 7941              		.p2align 4,,7
 7942              		.p2align 3
 7943              	.L514:
 7944              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7945              		.loc 1 917 5 view .LVU2721
 7946 30a0 4989CB   		mov	r11, rcx	# copy_word, tmp.354
 7947              	# sieve_extend.c:923:     source_word = copy_word - size; // recalibrate
 923:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7948              		.loc 1 923 17 view .LVU2722
 7949 30a3 4D89E6   		mov	r14, r12	# source_word, tmp.353
 7950 30a6 E9CAFDFF 		jmp	.L507	#
 7950      FF
 7951              	.LVL401:
 7952 30ab 0F1F4400 		.p2align 4,,7
 7952      00
 7953              		.p2align 3
 7954              	.L665:
 918:sieve_extend.c ****     }
 7955              		.loc 1 918 9 is_stmt 1 view .LVU2723
 7956              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7957              		.loc 1 918 56 is_stmt 0 view .LVU2724
 7958 30b0 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r11]	# tmp1260, MEM[base: vectp.369_257, index: ivtmp.419_731, offset: 
 7958      1B
 7959 30b5 B8200000 		mov	eax, 32	# ivtmp.419,
 7959      00
 7960              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7961              		.loc 1 918 94 view .LVU2725
 7962 30ba C5FE6F27 		vmovdqu	ymm4, YMMWORD PTR [rdi]	# tmp1261, MEM[base: vectp.373_264, index: ivtmp.419_731, offset: 
 7963              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7964              		.loc 1 918 56 view .LVU2726
 7965 30be C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.371, tmp1260, _12
 7965      D2
 7966              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7967              		.loc 1 918 94 view .LVU2727
 7968 30c3 C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.375, tmp1261, _18
 7968      F3
 7969              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7970              		.loc 1 918 66 view .LVU2728
 7971 30c8 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.376, vect__38.371, vect__43.375
 7972              	# sieve_extend.c:918:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 918:sieve_extend.c ****     }
 7973              		.loc 1 918 29 view .LVU2729
 7974 30cc C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm12	# MEM[base: vectp.378_273, index: ivtmp.419_731, offset: 0B], vect
 7974      21
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7975              		.loc 1 917 43 is_stmt 1 view .LVU2730
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7976              		.loc 1 917 11 view .LVU2731
 7977 30d1 E972F8FF 		jmp	.L598	#
 7977      FF
 7978              	.LVL402:
GAS LISTING /tmp/cc7rm34x.s 			page 224


 7979              		.p2align 4,,7
 7980 30d6 6690     		.p2align 3
 7981              	.L491:
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7982              		.loc 1 917 11 is_stmt 0 view .LVU2732
 7983 30d8 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 7983      30
 7984 30dd 4D89E8   		mov	r8, r13	# tmp804, tmp.367
 7985 30e0 49F7D0   		not	r8	# tmp804
 7986 30e3 4801D9   		add	rcx, rbx	# ivtmp.434, bitarray
 7987              	.LBB410:
 7988              	.LBB391:
 7989              	.LBB380:
 7990              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7991              		.loc 1 756 42 view .LVU2733
 7992 30e6 4489F8   		mov	eax, r15d	# tmp1194, _12
 7993              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7994              		.loc 1 756 63 view .LVU2734
 7995 30e9 89D7     		mov	edi, edx	# tmp1195, _18
 7996 30eb 4D01F0   		add	r8, r14	# tmp805, fast_loop_stop_word
 7997              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7998              		.loc 1 756 42 view .LVU2735
 7999 30ee C4E2FBF7 		shrx	rax, QWORD PTR [rcx], rax	# tmp689, MEM[base: _743, offset: 0B], tmp1194
 7999      01
 8000              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8001              		.loc 1 755 19 view .LVU2736
 8002 30f3 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 8003              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8004              		.loc 1 756 63 view .LVU2737
 8005 30f7 C4E2C1F7 		shlx	rdi, rsi, rdi	# tmp691, source1, tmp1195
 8005      FE
 8006 30fc 49D1E8   		shr	r8	# tmp803
 8007              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8008              		.loc 1 756 52 view .LVU2738
 8009 30ff 4809F8   		or	rax, rdi	# tmp692, tmp691
 8010              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 8011              		.loc 1 759 19 view .LVU2739
 8012 3102 498D7D02 		lea	rdi, 2[r13]	# copy_word,
 8013              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8014              		.loc 1 756 63 view .LVU2740
 8015 3106 4189D2   		mov	r10d, edx	# _18, shift_flipped
 8016 3109 49F7D3   		not	r11	# tmp790
 8017 310c 4183E003 		and	r8d, 3	# tmp806,
 8018              	.LVL403:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8019              		.loc 1 754 9 is_stmt 1 view .LVU2741
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8020              		.loc 1 755 9 view .LVU2742
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/cc7rm34x.s 			page 225


 8021              		.loc 1 756 9 view .LVU2743
 8022              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8023              		.loc 1 756 52 is_stmt 0 view .LVU2744
 8024 3110 4A8904EB 		mov	QWORD PTR [rbx+r13*8], rax	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8025              	.LVL404:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8026              		.loc 1 757 9 is_stmt 1 view .LVU2745
 758:sieve_extend.c ****         copy_word += 2;
 8027              		.loc 1 758 9 view .LVU2746
 8028              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8029              		.loc 1 756 42 is_stmt 0 view .LVU2747
 8030 3114 4589F9   		mov	r9d, r15d	# _12, shift
 8031              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8032              		.loc 1 758 63 view .LVU2748
 8033 3117 C4E2A9F7 		shlx	rax, QWORD PTR 16[rcx], r10	# tmp693, MEM[base: _743, offset: 16B], tmp1196
 8033      4110
 8034              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8035              		.loc 1 758 42 view .LVU2749
 8036 311d C4E2B3F7 		shrx	rsi, rsi, r9	# tmp695, source1, tmp1197
 8036      F6
 8037              	.LVL405:
 8038              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8039              		.loc 1 758 52 view .LVU2750
 8040 3122 4809C6   		or	rsi, rax	# tmp696, tmp693
 8041              	.LBE380:
 8042              	# sieve_extend.c:753:     while (copy_word < fast_loop_stop_word) {
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8043              		.loc 1 753 11 view .LVU2751
 8044 3125 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 8045 3128 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8046 312c 488D4110 		lea	rax, 16[rcx]	# ivtmp.434,
 8047              	.LBB381:
 8048              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8049              		.loc 1 758 52 view .LVU2752
 8050 3130 4A8974EB 		mov	QWORD PTR 8[rbx+r13*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8050      08
 8051              	.LVL406:
 759:sieve_extend.c ****         source_word += 2;
 8052              		.loc 1 759 9 is_stmt 1 view .LVU2753
 760:sieve_extend.c ****         distance += 2;
 8053              		.loc 1 760 9 view .LVU2754
 761:sieve_extend.c ****     }
 8054              		.loc 1 761 9 view .LVU2755
 761:sieve_extend.c ****     }
 8055              		.loc 1 761 9 is_stmt 0 view .LVU2756
 8056              	.LBE381:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8057              		.loc 1 753 11 is_stmt 1 view .LVU2757
 8058 3135 0F86B3F6 		jbe	.L495	#,
 8058      FFFF
 8059 313b 4D85C0   		test	r8, r8	# tmp806
GAS LISTING /tmp/cc7rm34x.s 			page 226


 8060 313e 0F849700 		je	.L653	#,
 8060      0000
 8061 3144 4983F801 		cmp	r8, 1	# tmp806,
 8062 3148 7446     		je	.L612	#,
 8063 314a 4983F802 		cmp	r8, 2	# tmp806,
 8064 314e 0F857401 		jne	.L666	#,
 8064      0000
 8065              	.LVL407:
 8066              	.L613:
 8067              	.LBB382:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8068              		.loc 1 754 9 view .LVU2758
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8069              		.loc 1 755 9 view .LVU2759
 8070              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8071              		.loc 1 755 19 is_stmt 0 view .LVU2760
 8072 3154 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8073              		.loc 1 756 9 is_stmt 1 view .LVU2761
 8074              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8075              		.loc 1 756 42 is_stmt 0 view .LVU2762
 8076 3158 4489F9   		mov	ecx, r15d	# tmp1278, _12
 8077              	.LVL408:
 8078              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8079              		.loc 1 756 63 view .LVU2763
 8080 315b 4189D0   		mov	r8d, edx	# tmp1279, _18
 8081              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8082              		.loc 1 756 42 view .LVU2764
 8083 315e C4E2F3F7 		shrx	rcx, QWORD PTR [rax], rcx	# tmp1056, MEM[base: _743, offset: 0B], tmp1278
 8083      08
 8084              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8085              		.loc 1 756 63 view .LVU2765
 8086 3163 C462B9F7 		shlx	r9, rsi, r8	# tmp1057, source1, tmp1279
 8086      CE
 8087              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8088              		.loc 1 756 52 view .LVU2766
 8089 3168 4C09C9   		or	rcx, r9	# tmp1058, tmp1057
 8090              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8091              		.loc 1 756 42 view .LVU2767
 8092 316b 4589FA   		mov	r10d, r15d	# _12, shift
 8093              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8094              		.loc 1 756 63 view .LVU2768
 8095 316e 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8096              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8097              		.loc 1 756 52 view .LVU2769
 8098 3171 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8099              	.LVL409:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
GAS LISTING /tmp/cc7rm34x.s 			page 227


 8100              		.loc 1 757 9 is_stmt 1 view .LVU2770
 758:sieve_extend.c ****         copy_word += 2;
 8101              		.loc 1 758 9 view .LVU2771
 8102              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8103              		.loc 1 758 42 is_stmt 0 view .LVU2772
 8104 3175 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1061, source1, tmp1281
 8104      F6
 8105              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8106              		.loc 1 758 63 view .LVU2773
 8107 317a C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1060, MEM[base: _743, offset: 16B], tmp1280
 8107      4810
 8108              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8109              		.loc 1 758 52 view .LVU2774
 8110 3180 4809CE   		or	rsi, rcx	# tmp1062, tmp1060
 8111 3183 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8111      08
 8112              	.LVL410:
 759:sieve_extend.c ****         source_word += 2;
 8113              		.loc 1 759 9 is_stmt 1 view .LVU2775
 8114 3188 4883C010 		add	rax, 16	# ivtmp.434,
 8115              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 8116              		.loc 1 759 19 is_stmt 0 view .LVU2776
 8117 318c 4883C702 		add	rdi, 2	# copy_word,
 760:sieve_extend.c ****         distance += 2;
 8118              		.loc 1 760 9 is_stmt 1 view .LVU2777
 761:sieve_extend.c ****     }
 8119              		.loc 1 761 9 view .LVU2778
 761:sieve_extend.c ****     }
 8120              		.loc 1 761 9 is_stmt 0 view .LVU2779
 8121              	.LBE382:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8122              		.loc 1 753 11 is_stmt 1 view .LVU2780
 8123              	.LVL411:
 8124              	.L612:
 8125              	.LBB383:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8126              		.loc 1 754 9 view .LVU2781
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8127              		.loc 1 755 9 view .LVU2782
 8128              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8129              		.loc 1 755 19 is_stmt 0 view .LVU2783
 8130 3190 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8131              		.loc 1 756 9 is_stmt 1 view .LVU2784
 8132              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8133              		.loc 1 756 42 is_stmt 0 view .LVU2785
 8134 3194 4589F8   		mov	r8d, r15d	# tmp1282, _12
 8135              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8136              		.loc 1 756 63 view .LVU2786
 8137 3197 4189D1   		mov	r9d, edx	# tmp1283, _18
GAS LISTING /tmp/cc7rm34x.s 			page 228


 8138              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8139              		.loc 1 756 42 view .LVU2787
 8140 319a C4E2BBF7 		shrx	rcx, QWORD PTR [rax], r8	# tmp1066, MEM[base: _743, offset: 0B], tmp1282
 8140      08
 8141              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8142              		.loc 1 756 63 view .LVU2788
 8143 319f C462B1F7 		shlx	r8, rsi, r9	# tmp1067, source1, tmp1283
 8143      C6
 8144              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8145              		.loc 1 756 52 view .LVU2789
 8146 31a4 4C09C1   		or	rcx, r8	# tmp1068, tmp1067
 8147              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8148              		.loc 1 756 42 view .LVU2790
 8149 31a7 4589FA   		mov	r10d, r15d	# _12, shift
 8150              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8151              		.loc 1 756 63 view .LVU2791
 8152 31aa 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8153              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8154              		.loc 1 756 52 view .LVU2792
 8155 31ad 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8156              	.LVL412:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8157              		.loc 1 757 9 is_stmt 1 view .LVU2793
 758:sieve_extend.c ****         copy_word += 2;
 8158              		.loc 1 758 9 view .LVU2794
 8159              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8160              		.loc 1 758 42 is_stmt 0 view .LVU2795
 8161 31b1 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1071, source1, tmp1285
 8161      F6
 8162              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8163              		.loc 1 758 63 view .LVU2796
 8164 31b6 C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1070, MEM[base: _743, offset: 16B], tmp1284
 8164      4810
 8165              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8166              		.loc 1 758 52 view .LVU2797
 8167 31bc 4809CE   		or	rsi, rcx	# tmp1072, tmp1070
 8168 31bf 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8168      08
 8169              	.LVL413:
 759:sieve_extend.c ****         source_word += 2;
 8170              		.loc 1 759 9 is_stmt 1 view .LVU2798
 8171              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 8172              		.loc 1 759 19 is_stmt 0 view .LVU2799
 8173 31c4 4883C702 		add	rdi, 2	# copy_word,
 760:sieve_extend.c ****         distance += 2;
 8174              		.loc 1 760 9 is_stmt 1 view .LVU2800
 761:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 229


 8175              		.loc 1 761 9 view .LVU2801
 8176 31c8 4883C010 		add	rax, 16	# ivtmp.434,
 8177              	.LBE383:
 8178              	# sieve_extend.c:753:     while (copy_word < fast_loop_stop_word) {
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8179              		.loc 1 753 11 is_stmt 0 view .LVU2802
 8180 31cc 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8180      30
 8181 31d1 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8182              		.loc 1 753 11 is_stmt 1 view .LVU2803
 8183 31d5 0F8613F6 		jbe	.L495	#,
 8183      FFFF
 8184              	.LVL414:
 8185              	.L653:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8186              		.loc 1 753 11 is_stmt 0 view .LVU2804
 8187 31db 4489F9   		mov	ecx, r15d	# _12, shift
 8188 31de 4189D0   		mov	r8d, edx	# _18, shift_flipped
 8189 31e1 4C896424 		mov	QWORD PTR 56[rsp], r12	# %sfp, tmp.366
 8189      38
 8190              	.LVL415:
 8191              	.L494:
 8192              	.LBB384:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8193              		.loc 1 754 9 is_stmt 1 view .LVU2805
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8194              		.loc 1 755 9 view .LVU2806
 8195              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8196              		.loc 1 755 19 is_stmt 0 view .LVU2807
 8197 31e6 4C8B6008 		mov	r12, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8198              		.loc 1 756 9 is_stmt 1 view .LVU2808
 8199              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8200              		.loc 1 756 42 is_stmt 0 view .LVU2809
 8201 31ea C462F3F7 		shrx	r9, QWORD PTR [rax], rcx	# tmp878, MEM[base: _743, offset: 0B], _12
 8201      08
 8202              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8203              		.loc 1 756 63 view .LVU2810
 8204 31ef C442B9F7 		shlx	r14, r12, r8	# tmp879, source1, _18
 8204      F4
 8205              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8206              		.loc 1 756 52 view .LVU2811
 8207 31f4 4D09F1   		or	r9, r14	# tmp880, tmp879
 8208              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8209              		.loc 1 758 42 view .LVU2812
 8210 31f7 C442F3F7 		shrx	r10, r12, rcx	# tmp883, source1, _12
 8210      D4
 8211              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8212              		.loc 1 756 52 view .LVU2813
 8213 31fc 4C890CFB 		mov	QWORD PTR [rbx+rdi*8], r9	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 0
GAS LISTING /tmp/cc7rm34x.s 			page 230


 8214              	.LVL416:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8215              		.loc 1 757 9 is_stmt 1 view .LVU2814
 758:sieve_extend.c ****         copy_word += 2;
 8216              		.loc 1 758 9 view .LVU2815
 8217              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8218              		.loc 1 758 63 is_stmt 0 view .LVU2816
 8219 3200 C4E2B9F7 		shlx	rsi, QWORD PTR 16[rax], r8	# tmp882, MEM[base: _743, offset: 16B], _18
 8219      7010
 8220              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8221              		.loc 1 758 52 view .LVU2817
 8222 3206 4C09D6   		or	rsi, r10	# tmp884, tmp883
 8223 3209 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8223      08
 8224              	.LVL417:
 759:sieve_extend.c ****         source_word += 2;
 8225              		.loc 1 759 9 is_stmt 1 view .LVU2818
 8226              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 8227              		.loc 1 759 19 is_stmt 0 view .LVU2819
 8228 320e 4C8D6702 		lea	r12, 2[rdi]	# tmp807,
 760:sieve_extend.c ****         distance += 2;
 8229              		.loc 1 760 9 is_stmt 1 view .LVU2820
 761:sieve_extend.c ****     }
 8230              		.loc 1 761 9 view .LVU2821
 761:sieve_extend.c ****     }
 8231              		.loc 1 761 9 is_stmt 0 view .LVU2822
 8232              	.LBE384:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8233              		.loc 1 753 11 is_stmt 1 view .LVU2823
 8234              	.LBB385:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8235              		.loc 1 754 9 view .LVU2824
 8236              	.LVL418:
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8237              		.loc 1 755 9 view .LVU2825
 8238              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8239              		.loc 1 755 19 is_stmt 0 view .LVU2826
 8240 3212 4C8B4818 		mov	r9, QWORD PTR 24[rax]	# source1, MEM[base: _743, offset: 8B]
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8241              		.loc 1 756 9 is_stmt 1 view .LVU2827
 8242              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8243              		.loc 1 756 42 is_stmt 0 view .LVU2828
 8244 3216 C4E2F3F7 		shrx	rsi, QWORD PTR 16[rax], rcx	# tmp890, MEM[base: _743, offset: 0B], _12
 8244      7010
 8245              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8246              		.loc 1 756 63 view .LVU2829
 8247 321c C442B9F7 		shlx	r14, r9, r8	# tmp891, source1, _18
 8247      F1
 8248              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8249              		.loc 1 756 52 view .LVU2830
GAS LISTING /tmp/cc7rm34x.s 			page 231


 8250 3221 4C09F6   		or	rsi, r14	# tmp892, tmp891
 8251 3224 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8252              	.LVL419:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8253              		.loc 1 757 9 is_stmt 1 view .LVU2831
 758:sieve_extend.c ****         copy_word += 2;
 8254              		.loc 1 758 9 view .LVU2832
 8255              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8256              		.loc 1 758 42 is_stmt 0 view .LVU2833
 8257 3228 C442F3F7 		shrx	r9, r9, rcx	# tmp895, source1, _12
 8257      C9
 8258              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8259              		.loc 1 758 63 view .LVU2834
 8260 322d 4C8B5020 		mov	r10, QWORD PTR 32[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8261 3231 C4C2B9F7 		shlx	rsi, r10, r8	# tmp894, MEM[base: _743, offset: 16B], _18
 8261      F2
 8262              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8263              		.loc 1 758 52 view .LVU2835
 8264 3236 4909F1   		or	r9, rsi	# tmp896, tmp894
 8265 3239 4883C040 		add	rax, 64	# ivtmp.434,
 8266 323d 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8266      08
 8267              	.LVL420:
 759:sieve_extend.c ****         source_word += 2;
 8268              		.loc 1 759 9 is_stmt 1 view .LVU2836
 8269              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 8270              		.loc 1 759 19 is_stmt 0 view .LVU2837
 8271 3242 4C8D6704 		lea	r12, 4[rdi]	# copy_word,
 760:sieve_extend.c ****         distance += 2;
 8272              		.loc 1 760 9 is_stmt 1 view .LVU2838
 761:sieve_extend.c ****     }
 8273              		.loc 1 761 9 view .LVU2839
 761:sieve_extend.c ****     }
 8274              		.loc 1 761 9 is_stmt 0 view .LVU2840
 8275              	.LBE385:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8276              		.loc 1 753 11 is_stmt 1 view .LVU2841
 8277              	.LBB386:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8278              		.loc 1 754 9 view .LVU2842
 8279              	.LVL421:
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8280              		.loc 1 755 9 view .LVU2843
 8281              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8282              		.loc 1 755 19 is_stmt 0 view .LVU2844
 8283 3246 4C8B50E8 		mov	r10, QWORD PTR -24[rax]	# source1, MEM[base: _743, offset: 8B]
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8284              		.loc 1 756 9 is_stmt 1 view .LVU2845
 8285              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8286              		.loc 1 756 42 is_stmt 0 view .LVU2846
 8287 324a C4E2F3F7 		shrx	rsi, QWORD PTR -32[rax], rcx	# tmp902, MEM[base: _743, offset: 0B], _12
GAS LISTING /tmp/cc7rm34x.s 			page 232


 8287      70E0
 8288              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8289              		.loc 1 756 63 view .LVU2847
 8290 3250 C442B9F7 		shlx	r14, r10, r8	# tmp903, source1, _18
 8290      F2
 8291              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8292              		.loc 1 756 52 view .LVU2848
 8293 3255 4C09F6   		or	rsi, r14	# tmp904, tmp903
 8294 3258 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8295              	.LVL422:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8296              		.loc 1 757 9 is_stmt 1 view .LVU2849
 758:sieve_extend.c ****         copy_word += 2;
 8297              		.loc 1 758 9 view .LVU2850
 8298              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8299              		.loc 1 758 42 is_stmt 0 view .LVU2851
 8300 325c C442F3F7 		shrx	r10, r10, rcx	# tmp907, source1, _12
 8300      D2
 8301              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8302              		.loc 1 758 63 view .LVU2852
 8303 3261 4C8B48F0 		mov	r9, QWORD PTR -16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8304 3265 C4C2B9F7 		shlx	rsi, r9, r8	# tmp906, MEM[base: _743, offset: 16B], _18
 8304      F1
 8305              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8306              		.loc 1 758 52 view .LVU2853
 8307 326a 4909F2   		or	r10, rsi	# tmp908, tmp906
 8308 326d 4E8954E3 		mov	QWORD PTR 8[rbx+r12*8], r10	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset:
 8308      08
 8309              	.LVL423:
 759:sieve_extend.c ****         source_word += 2;
 8310              		.loc 1 759 9 is_stmt 1 view .LVU2854
 8311              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 8312              		.loc 1 759 19 is_stmt 0 view .LVU2855
 8313 3272 4C8D6706 		lea	r12, 6[rdi]	# copy_word,
 760:sieve_extend.c ****         distance += 2;
 8314              		.loc 1 760 9 is_stmt 1 view .LVU2856
 761:sieve_extend.c ****     }
 8315              		.loc 1 761 9 view .LVU2857
 761:sieve_extend.c ****     }
 8316              		.loc 1 761 9 is_stmt 0 view .LVU2858
 8317              	.LBE386:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8318              		.loc 1 753 11 is_stmt 1 view .LVU2859
 8319              	.LBB387:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8320              		.loc 1 754 9 view .LVU2860
 8321              	.LVL424:
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8322              		.loc 1 755 9 view .LVU2861
 8323              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
GAS LISTING /tmp/cc7rm34x.s 			page 233


 8324              		.loc 1 755 19 is_stmt 0 view .LVU2862
 8325 3276 4C8B48F8 		mov	r9, QWORD PTR -8[rax]	# source1, MEM[base: _743, offset: 8B]
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8326              		.loc 1 756 9 is_stmt 1 view .LVU2863
 8327              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8328              		.loc 1 756 42 is_stmt 0 view .LVU2864
 8329 327a C4E2F3F7 		shrx	rsi, QWORD PTR -16[rax], rcx	# tmp914, MEM[base: _743, offset: 0B], _12
 8329      70F0
 8330              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8331              		.loc 1 756 63 view .LVU2865
 8332 3280 C442B9F7 		shlx	r14, r9, r8	# tmp915, source1, _18
 8332      F1
 8333              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8334              		.loc 1 756 52 view .LVU2866
 8335 3285 4C09F6   		or	rsi, r14	# tmp916, tmp915
 8336 3288 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8337              	.LVL425:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8338              		.loc 1 757 9 is_stmt 1 view .LVU2867
 758:sieve_extend.c ****         copy_word += 2;
 8339              		.loc 1 758 9 view .LVU2868
 8340              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 8341              		.loc 1 759 19 is_stmt 0 view .LVU2869
 8342 328c 4883C708 		add	rdi, 8	# copy_word,
 8343              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8344              		.loc 1 758 42 view .LVU2870
 8345 3290 C442F3F7 		shrx	r9, r9, rcx	# tmp919, source1, _12
 8345      C9
 8346              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8347              		.loc 1 758 63 view .LVU2871
 8348 3295 4C8B10   		mov	r10, QWORD PTR [rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8349 3298 C4C2B9F7 		shlx	rsi, r10, r8	# tmp918, MEM[base: _743, offset: 16B], _18
 8349      F2
 8350              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8351              		.loc 1 758 52 view .LVU2872
 8352 329d 4909F1   		or	r9, rsi	# tmp920, tmp918
 8353              	.LBE387:
 8354              	# sieve_extend.c:753:     while (copy_word < fast_loop_stop_word) {
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8355              		.loc 1 753 11 view .LVU2873
 8356 32a0 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8356      30
 8357 32a5 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8358              	.LBB388:
 8359              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8360              		.loc 1 758 52 view .LVU2874
 8361 32a9 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8361      08
 8362              	.LVL426:
GAS LISTING /tmp/cc7rm34x.s 			page 234


 759:sieve_extend.c ****         source_word += 2;
 8363              		.loc 1 759 9 is_stmt 1 view .LVU2875
 760:sieve_extend.c ****         distance += 2;
 8364              		.loc 1 760 9 view .LVU2876
 761:sieve_extend.c ****     }
 8365              		.loc 1 761 9 view .LVU2877
 761:sieve_extend.c ****     }
 8366              		.loc 1 761 9 is_stmt 0 view .LVU2878
 8367              	.LBE388:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8368              		.loc 1 753 11 is_stmt 1 view .LVU2879
 8369 32ae 0F8732FF 		ja	.L494	#,
 8369      FFFF
 8370 32b4 4C8B6424 		mov	r12, QWORD PTR 56[rsp]	# tmp.366, %sfp
 8370      38
 8371 32b9 E930F5FF 		jmp	.L495	#
 8371      FF
 8372              	.LVL427:
 8373 32be 6690     		.p2align 4,,7
 8374              		.p2align 3
 8375              	.L512:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8376              		.loc 1 753 11 is_stmt 0 view .LVU2880
 8377              	.LBE391:
 8378              	.LBE410:
 8379              	# sieve_extend.c:917:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 917:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8380              		.loc 1 917 5 view .LVU2881
 8381 32c0 4C89E9   		mov	rcx, r13	# tmp.354, tmp.367
 8382 32c3 E994F9FF 		jmp	.L496	#
 8382      FF
 8383              	.LVL428:
 8384              	.L666:
 8385              	.LBB411:
 8386              	.LBB392:
 8387              	.LBB389:
 754:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8388              		.loc 1 754 9 is_stmt 1 view .LVU2882
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8389              		.loc 1 755 9 view .LVU2883
 8390              	# sieve_extend.c:755:         bitword_t source1 = bitarray[source_word+1];
 755:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8391              		.loc 1 755 19 is_stmt 0 view .LVU2884
 8392 32c8 4C8B4808 		mov	r9, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8393              		.loc 1 756 9 is_stmt 1 view .LVU2885
 8394              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8395              		.loc 1 756 42 is_stmt 0 view .LVU2886
 8396 32cc 4589F8   		mov	r8d, r15d	# tmp1274, _12
 8397 32cf C4E2BBF7 		shrx	rsi, QWORD PTR [rax], r8	# tmp1046, MEM[base: _743, offset: 0B], tmp1274
 8397      30
 8398              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8399              		.loc 1 756 63 view .LVU2887
 8400 32d4 4189D0   		mov	r8d, edx	# tmp1275, _18
 8401 32d7 C442B9F7 		shlx	r8, r9, r8	# tmp1047, source1, tmp1275
GAS LISTING /tmp/cc7rm34x.s 			page 235


 8401      C1
 8402              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8403              		.loc 1 756 52 view .LVU2888
 8404 32dc 4C09C6   		or	rsi, r8	# tmp1048, tmp1047
 8405 32df 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8406              	.LVL429:
 757:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8407              		.loc 1 757 9 is_stmt 1 view .LVU2889
 758:sieve_extend.c ****         copy_word += 2;
 8408              		.loc 1 758 9 view .LVU2890
 8409              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8410              		.loc 1 756 42 is_stmt 0 view .LVU2891
 8411 32e3 4589FA   		mov	r10d, r15d	# _12, shift
 8412              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8413              		.loc 1 758 63 view .LVU2892
 8414 32e6 488B4010 		mov	rax, QWORD PTR 16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8415              	# sieve_extend.c:756:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 756:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8416              		.loc 1 756 63 view .LVU2893
 8417 32ea 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8418              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8419              		.loc 1 758 42 view .LVU2894
 8420 32ed C442ABF7 		shrx	r9, r9, r10	# tmp1051, source1, tmp1277
 8420      C9
 8421              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8422              		.loc 1 758 63 view .LVU2895
 8423 32f2 C46289F7 		shlx	r8, rax, r14	# tmp1050, MEM[base: _743, offset: 16B], tmp1276
 8423      C0
 8424              	# sieve_extend.c:758:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 758:sieve_extend.c ****         copy_word += 2;
 8425              		.loc 1 758 52 view .LVU2896
 8426 32f7 4D09C8   		or	r8, r9	# tmp1052, tmp1051
 8427 32fa 488D4120 		lea	rax, 32[rcx]	# ivtmp.434,
 8428 32fe 4C8944FB 		mov	QWORD PTR 8[rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_362, step: 8, offset: 
 8428      08
 8429              	.LVL430:
 759:sieve_extend.c ****         source_word += 2;
 8430              		.loc 1 759 9 is_stmt 1 view .LVU2897
 8431              	# sieve_extend.c:759:         copy_word += 2;
 759:sieve_extend.c ****         source_word += 2;
 8432              		.loc 1 759 19 is_stmt 0 view .LVU2898
 8433 3303 498D7D04 		lea	rdi, 4[r13]	# copy_word,
 760:sieve_extend.c ****         distance += 2;
 8434              		.loc 1 760 9 is_stmt 1 view .LVU2899
 761:sieve_extend.c ****     }
 8435              		.loc 1 761 9 view .LVU2900
 761:sieve_extend.c ****     }
 8436              		.loc 1 761 9 is_stmt 0 view .LVU2901
 8437              	.LBE389:
 753:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8438              		.loc 1 753 11 is_stmt 1 view .LVU2902
 8439 3307 E948FEFF 		jmp	.L613	#
GAS LISTING /tmp/cc7rm34x.s 			page 236


 8439      FF
 8440              	.LBE392:
 8441              	.LBE411:
 8442              		.cfi_endproc
 8443              	.LFE75:
 8445              		.section	.rodata.str1.1,"aMS",@progbits,1
 8446              	.LC4:
 8447 0000 25336A75 		.string	"%3ju "
 8447      2000
 8448              	.LC5:
 8449 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 8449      6E642025 
 8449      6A752070 
 8449      72696D65 
 8449      7320756E 
 8450              		.text
 8451 330c 0F1F4000 		.p2align 4
 8453              	show_primes.isra.0:
 8454              	.LVL431:
 8455              	.LFB96:
1094:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8456              		.loc 1 1094 13 view -0
 8457              		.cfi_startproc
 8458              	.LBB412:
1096:sieve_extend.c ****         primeCount++;
 8459              		.loc 1 1096 30 view .LVU2904
 8460              	.LBE412:
 8461              	# sieve_extend.c:1094: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1094:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8462              		.loc 1 1094 13 is_stmt 0 view .LVU2905
 8463 3310 4157     		push	r15	#
 8464              		.cfi_def_cfa_offset 16
 8465              		.cfi_offset 15, -16
 8466 3312 4156     		push	r14	#
 8467              		.cfi_def_cfa_offset 24
 8468              		.cfi_offset 14, -24
 8469 3314 4155     		push	r13	#
 8470              		.cfi_def_cfa_offset 32
 8471              		.cfi_offset 13, -32
 8472 3316 4154     		push	r12	#
 8473              		.cfi_def_cfa_offset 40
 8474              		.cfi_offset 12, -40
 8475 3318 4989F4   		mov	r12, rsi	# ISRA.73, tmp168
 8476 331b 55       		push	rbp	#
 8477              		.cfi_def_cfa_offset 48
 8478              		.cfi_offset 6, -48
 8479 331c 53       		push	rbx	#
 8480              		.cfi_def_cfa_offset 56
 8481              		.cfi_offset 3, -56
 8482 331d 488D6424 		lea	rsp, -8[rsp]	#,
 8482      F8
 8483              		.cfi_def_cfa_offset 64
 8484              	.LBB429:
 8485              	# sieve_extend.c:1096:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1096:sieve_extend.c ****         primeCount++;
 8486              		.loc 1 1096 44 view .LVU2906
 8487 3322 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.73_32(D)
GAS LISTING /tmp/cc7rm34x.s 			page 237


 8488              	# sieve_extend.c:1096:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1096:sieve_extend.c ****         primeCount++;
 8489              		.loc 1 1096 5 view .LVU2907
 8490 3325 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 8491 3329 0F867501 		jbe	.L674	#,
 8491      0000
 8492              	# sieve_extend.c:1098:         if (factor < maxFactor/2) {
1098:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8493              		.loc 1 1098 31 view .LVU2908
 8494 332f 48D1EA   		shr	rdx	# maxFactor
 8495              	.LVL432:
1098:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8496              		.loc 1 1098 31 view .LVU2909
 8497 3332 4989FD   		mov	r13, rdi	# ISRA.72, tmp167
 8498              	# sieve_extend.c:1096:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1096:sieve_extend.c ****         primeCount++;
 8499              		.loc 1 1096 20 view .LVU2910
 8500 3335 BB010000 		mov	ebx, 1	# factor,
 8500      00
 8501              	# sieve_extend.c:1098:         if (factor < maxFactor/2) {
1098:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8502              		.loc 1 1098 31 view .LVU2911
 8503 333a 4889D5   		mov	rbp, rdx	# _4, maxFactor
 8504              	.LBE429:
 8505              	# sieve_extend.c:1095:     counter_t primeCount = 1;    // We already have 2
1095:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 8506              		.loc 1 1095 15 view .LVU2912
 8507 333d 41BF0100 		mov	r15d, 1	# primeCount,
 8507      0000
 8508              	.LBB430:
 8509              	.LBB413:
 8510              	.LBB414:
 8511              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8512              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
GAS LISTING /tmp/cc7rm34x.s 			page 238


  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
GAS LISTING /tmp/cc7rm34x.s 			page 239


  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 8513              		.loc 3 107 10 view .LVU2913
 8514 3343 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 8514      CCCCCCCC 
 8514      CCCC
 8515              	.LVL433:
 8516 334d 0F1F00   		.p2align 4
 8517              		.p2align 3
 8518              	.L673:
 8519              		.loc 3 107 10 view .LVU2914
 8520              	.LBE414:
 8521              	.LBE413:
1097:sieve_extend.c ****         if (factor < maxFactor/2) {
 8522              		.loc 1 1097 9 is_stmt 1 view .LVU2915
 8523              	# sieve_extend.c:1097:         primeCount++;
1097:sieve_extend.c ****         if (factor < maxFactor/2) {
 8524              		.loc 1 1097 19 is_stmt 0 view .LVU2916
 8525 3350 4983C701 		add	r15, 1	# primeCount,
 8526              	.LVL434:
1098:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8527              		.loc 1 1098 9 is_stmt 1 view .LVU2917
 8528              	# sieve_extend.c:1098:         if (factor < maxFactor/2) {
1098:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8529              		.loc 1 1098 12 is_stmt 0 view .LVU2918
 8530 3354 4839DD   		cmp	rbp, rbx	# _4, factor
 8531 3357 0F87FB00 		ja	.L697	#,
 8531      0000
 8532              	.L669:
1096:sieve_extend.c ****         primeCount++;
 8533              		.loc 1 1096 52 is_stmt 1 view .LVU2919
 8534              	.LVL435:
GAS LISTING /tmp/cc7rm34x.s 			page 240


 8535              	# sieve_extend.c:1096:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1096:sieve_extend.c ****         primeCount++;
 8536              		.loc 1 1096 61 is_stmt 0 view .LVU2920
 8537 335d 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.72_33(D)
 8538 3361 4883C301 		add	rbx, 1	# factor,
 8539              	.LVL436:
 8540              	.L696:
 8541              	.LBB419:
 8542              	.LBI419:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 8543              		.loc 1 123 25 is_stmt 1 view .LVU2921
 8544              	.LBB420:
 124:sieve_extend.c ****     return index;
 8545              		.loc 1 124 5 view .LVU2922
 124:sieve_extend.c ****     return index;
 8546              		.loc 1 124 11 view .LVU2923
 8547              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8548              		.loc 1 124 21 is_stmt 0 view .LVU2924
 8549 3365 4889D9   		mov	rcx, rbx	# tmp124, factor
 8550 3368 48C1E906 		shr	rcx, 6	# tmp124,
 8551              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8552              		.loc 1 124 12 view .LVU2925
 8553 336c 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 8554              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8555              		.loc 1 124 11 view .LVU2926
 8556 3370 490FA3D9 		bt	r9, rbx	# *_39, factor
 8557 3374 0F83A600 		jnc	.L671	#,
 8557      0000
 124:sieve_extend.c ****     return index;
 8558              		.loc 1 124 58 is_stmt 1 view .LVU2927
 8559              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8560              		.loc 1 124 63 is_stmt 0 view .LVU2928
 8561 337a 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 8562              	.LVL437:
 8563              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8564              		.loc 1 124 21 view .LVU2929
 8565 337e 4D89D3   		mov	r11, r10	# tmp129, factor
 8566              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8567              		.loc 1 124 63 view .LVU2930
 8568 3381 4C89D3   		mov	rbx, r10	# factor, tmp138
 124:sieve_extend.c ****     return index;
 8569              		.loc 1 124 11 is_stmt 1 view .LVU2931
 8570              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8571              		.loc 1 124 21 is_stmt 0 view .LVU2932
 8572 3384 49C1EB06 		shr	r11, 6	# tmp129,
 8573              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8574              		.loc 1 124 12 view .LVU2933
 8575 3388 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8576              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cc7rm34x.s 			page 241


 124:sieve_extend.c ****     return index;
 8577              		.loc 1 124 11 view .LVU2934
 8578 338c 4C0FA3D0 		bt	rax, r10	# *_16, factor
 8579 3390 0F838A00 		jnc	.L671	#,
 8579      0000
 124:sieve_extend.c ****     return index;
 8580              		.loc 1 124 58 is_stmt 1 view .LVU2935
 8581              	.LVL438:
 8582              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8583              		.loc 1 124 63 is_stmt 0 view .LVU2936
 8584 3396 4883C301 		add	rbx, 1	# factor,
 8585              	.LVL439:
 124:sieve_extend.c ****     return index;
 8586              		.loc 1 124 11 is_stmt 1 view .LVU2937
 8587              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8588              		.loc 1 124 21 is_stmt 0 view .LVU2938
 8589 339a 4889DA   		mov	rdx, rbx	# tmp139, factor
 8590 339d 48C1EA06 		shr	rdx, 6	# tmp139,
 8591              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8592              		.loc 1 124 12 view .LVU2939
 8593 33a1 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8594              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8595              		.loc 1 124 11 view .LVU2940
 8596 33a5 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8597 33a9 7375     		jnc	.L671	#,
 124:sieve_extend.c ****     return index;
 8598              		.loc 1 124 58 is_stmt 1 view .LVU2941
 8599              	.LVL440:
 8600              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8601              		.loc 1 124 63 is_stmt 0 view .LVU2942
 8602 33ab 498D5A02 		lea	rbx, 2[r10]	# factor,
 8603              	.LVL441:
 124:sieve_extend.c ****     return index;
 8604              		.loc 1 124 11 is_stmt 1 view .LVU2943
 8605              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8606              		.loc 1 124 21 is_stmt 0 view .LVU2944
 8607 33af 4889D9   		mov	rcx, rbx	# tmp143, factor
 8608 33b2 48C1E906 		shr	rcx, 6	# tmp143,
 8609              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8610              		.loc 1 124 12 view .LVU2945
 8611 33b6 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8612              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8613              		.loc 1 124 11 view .LVU2946
 8614 33ba 490FA3D9 		bt	r9, rbx	# *_16, factor
 8615 33be 7360     		jnc	.L671	#,
 124:sieve_extend.c ****     return index;
 8616              		.loc 1 124 58 is_stmt 1 view .LVU2947
 8617              	.LVL442:
 8618              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cc7rm34x.s 			page 242


 124:sieve_extend.c ****     return index;
 8619              		.loc 1 124 63 is_stmt 0 view .LVU2948
 8620 33c0 498D5A03 		lea	rbx, 3[r10]	# factor,
 8621              	.LVL443:
 124:sieve_extend.c ****     return index;
 8622              		.loc 1 124 11 is_stmt 1 view .LVU2949
 8623              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8624              		.loc 1 124 21 is_stmt 0 view .LVU2950
 8625 33c4 4989DB   		mov	r11, rbx	# tmp147, factor
 8626 33c7 49C1EB06 		shr	r11, 6	# tmp147,
 8627              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8628              		.loc 1 124 12 view .LVU2951
 8629 33cb 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8630              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8631              		.loc 1 124 11 view .LVU2952
 8632 33cf 480FA3D8 		bt	rax, rbx	# *_16, factor
 8633 33d3 734B     		jnc	.L671	#,
 124:sieve_extend.c ****     return index;
 8634              		.loc 1 124 58 is_stmt 1 view .LVU2953
 8635              	.LVL444:
 8636              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8637              		.loc 1 124 63 is_stmt 0 view .LVU2954
 8638 33d5 498D5A04 		lea	rbx, 4[r10]	# factor,
 8639              	.LVL445:
 124:sieve_extend.c ****     return index;
 8640              		.loc 1 124 11 is_stmt 1 view .LVU2955
 8641              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8642              		.loc 1 124 21 is_stmt 0 view .LVU2956
 8643 33d9 4889DA   		mov	rdx, rbx	# tmp151, factor
 8644 33dc 48C1EA06 		shr	rdx, 6	# tmp151,
 8645              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8646              		.loc 1 124 12 view .LVU2957
 8647 33e0 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8648              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8649              		.loc 1 124 11 view .LVU2958
 8650 33e4 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8651 33e8 7336     		jnc	.L671	#,
 124:sieve_extend.c ****     return index;
 8652              		.loc 1 124 58 is_stmt 1 view .LVU2959
 8653              	.LVL446:
 8654              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8655              		.loc 1 124 63 is_stmt 0 view .LVU2960
 8656 33ea 498D5A05 		lea	rbx, 5[r10]	# factor,
 8657              	.LVL447:
 124:sieve_extend.c ****     return index;
 8658              		.loc 1 124 11 is_stmt 1 view .LVU2961
 8659              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8660              		.loc 1 124 21 is_stmt 0 view .LVU2962
GAS LISTING /tmp/cc7rm34x.s 			page 243


 8661 33ee 4889D9   		mov	rcx, rbx	# tmp155, factor
 8662 33f1 48C1E906 		shr	rcx, 6	# tmp155,
 8663              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8664              		.loc 1 124 12 view .LVU2963
 8665 33f5 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8666              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8667              		.loc 1 124 11 view .LVU2964
 8668 33f9 490FA3D9 		bt	r9, rbx	# *_16, factor
 8669 33fd 7321     		jnc	.L671	#,
 124:sieve_extend.c ****     return index;
 8670              		.loc 1 124 58 is_stmt 1 view .LVU2965
 8671              	.LVL448:
 8672              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8673              		.loc 1 124 63 is_stmt 0 view .LVU2966
 8674 33ff 498D5A06 		lea	rbx, 6[r10]	# factor,
 8675              	.LVL449:
 124:sieve_extend.c ****     return index;
 8676              		.loc 1 124 11 is_stmt 1 view .LVU2967
 8677              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8678              		.loc 1 124 21 is_stmt 0 view .LVU2968
 8679 3403 4989DB   		mov	r11, rbx	# tmp159, factor
 8680 3406 49C1EB06 		shr	r11, 6	# tmp159,
 8681              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8682              		.loc 1 124 12 view .LVU2969
 8683 340a 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8684              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8685              		.loc 1 124 11 view .LVU2970
 8686 340e 480FA3D8 		bt	rax, rbx	# *_16, factor
 8687 3412 730C     		jnc	.L671	#,
 124:sieve_extend.c ****     return index;
 8688              		.loc 1 124 58 is_stmt 1 view .LVU2971
 8689              	.LVL450:
 8690              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 8691              		.loc 1 124 63 is_stmt 0 view .LVU2972
 8692 3414 498D5A07 		lea	rbx, 7[r10]	# factor,
 8693              	.LVL451:
 124:sieve_extend.c ****     return index;
 8694              		.loc 1 124 11 is_stmt 1 view .LVU2973
 8695 3418 E948FFFF 		jmp	.L696	#
 8695      FF
 8696 341d 0F1F00   		.p2align 4,,7
 8697              		.p2align 3
 8698              	.L671:
 8699              	.LVL452:
 124:sieve_extend.c ****     return index;
 8700              		.loc 1 124 11 is_stmt 0 view .LVU2974
 8701              	.LBE420:
 8702              	.LBE419:
1096:sieve_extend.c ****         primeCount++;
 8703              		.loc 1 1096 30 is_stmt 1 view .LVU2975
GAS LISTING /tmp/cc7rm34x.s 			page 244


 8704              	# sieve_extend.c:1096:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1096:sieve_extend.c ****         primeCount++;
 8705              		.loc 1 1096 5 is_stmt 0 view .LVU2976
 8706 3420 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 8707 3423 0F8227FF 		jb	.L673	#,
 8707      FFFF
 8708              	.LVL453:
 8709              	.L668:
1096:sieve_extend.c ****         primeCount++;
 8710              		.loc 1 1096 5 view .LVU2977
 8711              	.LBE430:
1103:sieve_extend.c **** }
 8712              		.loc 1 1103 5 is_stmt 1 view .LVU2978
 8713              	.LBB431:
 8714              	.LBI431:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8715              		.loc 3 105 1 view .LVU2979
 8716              	.LBB432:
 8717              		.loc 3 107 3 view .LVU2980
 8718              	.LBE432:
 8719              	.LBE431:
 8720              	# sieve_extend.c:1104: }
1104:sieve_extend.c **** 
 8721              		.loc 1 1104 1 is_stmt 0 view .LVU2981
 8722 3429 488D6424 		lea	rsp, 8[rsp]	#,
 8722      08
 8723              		.cfi_remember_state
 8724              		.cfi_def_cfa_offset 56
 8725              	.LBB436:
 8726              	.LBB433:
 8727              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8728              		.loc 3 107 10 view .LVU2982
 8729 342e 4C89FA   		mov	rdx, r15	#, primeCount
 8730              	.LBE433:
 8731              	.LBE436:
 8732              	# sieve_extend.c:1104: }
1104:sieve_extend.c **** 
 8733              		.loc 1 1104 1 view .LVU2983
 8734 3431 5B       		pop	rbx	#
 8735              		.cfi_def_cfa_offset 48
 8736              	# sieve_extend.c:1103:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_
1103:sieve_extend.c **** }
 8737              		.loc 1 1103 5 view .LVU2984
 8738 3432 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 8738      01
 8739              	.LBB437:
 8740              	.LBB434:
 8741              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8742              		.loc 3 107 10 view .LVU2985
 8743 3437 BF010000 		mov	edi, 1	#,
 8743      00
 8744 343c 31C0     		xor	eax, eax	#
 8745 343e 488D3500 		lea	rsi, .LC5[rip]	#,
 8745      000000
 8746              	.LBE434:
 8747              	.LBE437:
 8748              	# sieve_extend.c:1104: }
GAS LISTING /tmp/cc7rm34x.s 			page 245


1104:sieve_extend.c **** 
 8749              		.loc 1 1104 1 view .LVU2986
 8750 3445 5D       		pop	rbp	#
 8751              		.cfi_def_cfa_offset 40
 8752 3446 415C     		pop	r12	#
 8753              		.cfi_def_cfa_offset 32
 8754 3448 415D     		pop	r13	#
 8755              		.cfi_def_cfa_offset 24
 8756 344a 415E     		pop	r14	#
 8757              		.cfi_def_cfa_offset 16
 8758 344c 415F     		pop	r15	#
 8759              		.cfi_def_cfa_offset 8
 8760              	.LBB438:
 8761              	.LBB435:
 8762              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8763              		.loc 3 107 10 view .LVU2987
 8764 344e E9000000 		jmp	__printf_chk@PLT	#
 8764      00
 8765              	.LVL454:
 8766              		.p2align 4,,7
 8767 3453 0F1F4400 		.p2align 3
 8767      00
 8768              	.L697:
 8769              		.cfi_restore_state
 8770              		.loc 3 107 10 view .LVU2988
 8771              	.LBE435:
 8772              	.LBE438:
 8773              	.LBB439:
1099:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8774              		.loc 1 1099 13 is_stmt 1 view .LVU2989
 8775              	.LBB421:
 8776              	.LBI413:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8777              		.loc 3 105 1 view .LVU2990
 8778              	.LBB415:
 8779              		.loc 3 107 3 view .LVU2991
 8780              	.LBE415:
 8781              	.LBE421:
 8782              	# sieve_extend.c:1099:             printf("%3ju ",(uintmax_t)factor*2+1);
1099:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8783              		.loc 1 1099 13 is_stmt 0 view .LVU2992
 8784 3458 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 8784      01
 8785              	.LBB422:
 8786              	.LBB416:
 8787              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8788              		.loc 3 107 10 view .LVU2993
 8789 345d BF010000 		mov	edi, 1	#,
 8789      00
 8790 3462 31C0     		xor	eax, eax	#
 8791 3464 488D3500 		lea	rsi, .LC4[rip]	#,
 8791      000000
 8792 346b E8000000 		call	__printf_chk@PLT	#
 8792      00
 8793              	.LVL455:
 8794              		.loc 3 107 10 view .LVU2994
 8795              	.LBE416:
GAS LISTING /tmp/cc7rm34x.s 			page 246


 8796              	.LBE422:
1100:sieve_extend.c ****         }
 8797              		.loc 1 1100 13 is_stmt 1 view .LVU2995
 8798              	.LBB423:
 8799              	.LBB417:
 8800              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8801              		.loc 3 107 10 is_stmt 0 view .LVU2996
 8802 3470 4C89F8   		mov	rax, r15	# tmp120, primeCount
 8803              	.LBE417:
 8804              	.LBE423:
 8805              	# sieve_extend.c:1100:             if (primeCount % 10 == 0) printf("\n");
1100:sieve_extend.c ****         }
 8806              		.loc 1 1100 16 view .LVU2997
 8807 3473 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 8807      99999999 
 8807      9919
 8808              	.LBB424:
 8809              	.LBB418:
 8810              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8811              		.loc 3 107 10 view .LVU2998
 8812 347d 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 8813 3481 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 8813      D001
 8814              	.LBE418:
 8815              	.LBE424:
 8816              	# sieve_extend.c:1100:             if (primeCount % 10 == 0) printf("\n");
1100:sieve_extend.c ****         }
 8817              		.loc 1 1100 16 view .LVU2999
 8818 3487 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 8819 348a 760C     		jbe	.L670	#,
 8820              	.L695:
 8821 348c 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.73_32(D)
 8822              	.LBB425:
 8823              	.LBB426:
 8824              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8825              		.loc 3 107 10 view .LVU3000
 8826 3490 E9C8FEFF 		jmp	.L669	#
 8826      FF
 8827              		.p2align 4,,7
 8828 3495 0F1F00   		.p2align 3
 8829              	.L670:
 8830              	.LBE426:
 8831              	.LBE425:
1100:sieve_extend.c ****         }
 8832              		.loc 1 1100 39 is_stmt 1 view .LVU3001
 8833              	.LVL456:
 8834              	.LBB428:
 8835              	.LBI425:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8836              		.loc 3 105 1 view .LVU3002
 8837              	.LBB427:
 8838              		.loc 3 107 3 view .LVU3003
 8839              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8840              		.loc 3 107 10 is_stmt 0 view .LVU3004
 8841 3498 BF0A0000 		mov	edi, 10	#,
 8841      00
 8842 349d E8000000 		call	putchar@PLT	#
GAS LISTING /tmp/cc7rm34x.s 			page 247


 8842      00
 8843              	.LVL457:
 8844 34a2 EBE8     		jmp	.L695	#
 8845              	.LVL458:
 8846              	.L674:
 8847              		.loc 3 107 10 view .LVU3005
 8848              	.LBE427:
 8849              	.LBE428:
 8850              	.LBE439:
 8851              	# sieve_extend.c:1095:     counter_t primeCount = 1;    // We already have 2
1095:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 8852              		.loc 1 1095 15 view .LVU3006
 8853 34a4 41BF0100 		mov	r15d, 1	# primeCount,
 8853      0000
 8854 34aa E97AFFFF 		jmp	.L668	#
 8854      FF
 8855              		.cfi_endproc
 8856              	.LFE96:
 8858 34af 90       		.p2align 4
 8860              	sieve:
 8861              	.LVL459:
 8862              	.LFB79:
1072:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8863              		.loc 1 1072 86 is_stmt 1 view -0
 8864              		.cfi_startproc
1073:sieve_extend.c ****     counter_t prime     = 0;
 8865              		.loc 1 1073 5 view .LVU3008
 8866              	# sieve_extend.c:1072: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1072:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8867              		.loc 1 1072 86 is_stmt 0 view .LVU3009
 8868 34b0 4157     		push	r15	#
 8869              		.cfi_def_cfa_offset 16
 8870              		.cfi_offset 15, -16
 8871 34b2 4156     		push	r14	#
 8872              		.cfi_def_cfa_offset 24
 8873              		.cfi_offset 14, -24
 8874 34b4 4155     		push	r13	#
 8875              		.cfi_def_cfa_offset 32
 8876              		.cfi_offset 13, -32
 8877 34b6 4154     		push	r12	#
 8878              		.cfi_def_cfa_offset 40
 8879              		.cfi_offset 12, -40
 8880 34b8 55       		push	rbp	#
 8881              		.cfi_def_cfa_offset 48
 8882              		.cfi_offset 6, -48
 8883 34b9 53       		push	rbx	#
 8884              		.cfi_def_cfa_offset 56
 8885              		.cfi_offset 3, -56
 8886 34ba 4889FB   		mov	rbx, rdi	# maxints, tmp601
 8887              	.LVL460:
 8888              	.LBB474:
 8889              	.LBI474:
 104:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 8890              		.loc 1 104 28 is_stmt 1 view .LVU3010
 8891              	.LBB475:
 105:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8892              		.loc 1 105 5 view .LVU3011
GAS LISTING /tmp/cc7rm34x.s 			page 248


 8893              	# sieve_extend.c:105:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 105:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8894              		.loc 1 105 33 is_stmt 0 view .LVU3012
 8895 34bd BF080000 		mov	edi, 8	#,
 8895      00
 8896              	.LVL461:
 105:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8897              		.loc 1 105 33 view .LVU3013
 8898              	.LBE475:
 8899              	.LBE474:
 8900              	# sieve_extend.c:1072: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1072:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8901              		.loc 1 1072 86 view .LVU3014
 8902 34c2 488D6424 		lea	rsp, -88[rsp]	#,
 8902      A8
 8903              		.cfi_def_cfa_offset 144
 8904              	.LBB479:
 8905              	.LBB476:
 8906              	# sieve_extend.c:106:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 106:sieve_extend.c **** 
 8907              		.loc 1 106 22 view .LVU3015
 8908 34c7 4989DF   		mov	r15, rbx	# prephitmp_743, maxints
 8909 34ca 49D1EF   		shr	r15	# prephitmp_743
 8910              	.LBE476:
 8911              	.LBE479:
 8912              	# sieve_extend.c:1072: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1072:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 8913              		.loc 1 1072 86 view .LVU3016
 8914 34cd 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, tmp602
 8914      40
 8915              	.LBB480:
 8916              	.LBB477:
 8917              	# sieve_extend.c:105:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 105:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8918              		.loc 1 105 33 view .LVU3017
 8919 34d2 BE180000 		mov	esi, 24	#,
 8919      00
 8920              	.LVL462:
 105:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8921              		.loc 1 105 33 view .LVU3018
 8922 34d7 E8000000 		call	aligned_alloc@PLT	#
 8922      00
 8923              	.LVL463:
 8924              	# sieve_extend.c:106:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 106:sieve_extend.c **** 
 8925              		.loc 1 106 22 view .LVU3019
 8926 34dc 498DB700 		lea	rsi, 1024[r15]	# tmp317,
 8926      040000
 8927              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 8928              		.loc 1 108 23 view .LVU3020
 8929 34e3 BF800000 		mov	edi, 128	#,
 8929      00
 8930              	# sieve_extend.c:105:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 105:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 8931              		.loc 1 105 33 view .LVU3021
 8932 34e8 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, <retval>
GAS LISTING /tmp/cc7rm34x.s 			page 249


 8932      30
 8933 34ed 4989C6   		mov	r14, rax	# <retval>, tmp603
 8934              	.LVL464:
 106:sieve_extend.c **** 
 8935              		.loc 1 106 5 is_stmt 1 view .LVU3022
 8936              	# sieve_extend.c:106:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 106:sieve_extend.c **** 
 8937              		.loc 1 106 22 is_stmt 0 view .LVU3023
 8938 34f0 48C1EE0A 		shr	rsi, 10	# tmp318,
 8939              	# sieve_extend.c:106:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 106:sieve_extend.c **** 
 8940              		.loc 1 106 12 view .LVU3024
 8941 34f4 48C1E607 		sal	rsi, 7	# memSize,
 8942              	# sieve_extend.c:106:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 106:sieve_extend.c **** 
 8943              		.loc 1 106 22 view .LVU3025
 8944 34f8 4C897C24 		mov	QWORD PTR 8[rsp], r15	# %sfp, prephitmp_743
 8944      08
 8945              	.LVL465:
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 8946              		.loc 1 108 5 is_stmt 1 view .LVU3026
 8947              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 8948              		.loc 1 108 23 is_stmt 0 view .LVU3027
 8949 34fd E8000000 		call	aligned_alloc@PLT	#
 8949      00
 8950              	.LVL466:
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 8951              		.loc 1 108 23 view .LVU3028
 8952 3502 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, _96
 8952      38
 8953              	.LBE477:
 8954              	.LBE480:
 8955              	.LBB481:
 8956              	.LBB482:
 8957              	# sieve_extend.c:1043:     for (;range_stop < block_stop;) {
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8958              		.loc 1 1043 5 view .LVU3029
 8959 3507 4D85FF   		test	r15, r15	# prephitmp_743
 8960              	.LBE482:
 8961              	.LBE481:
 8962              	.LBB519:
 8963              	.LBB478:
 8964              	# sieve_extend.c:108:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 8965              		.loc 1 108 21 view .LVU3030
 8966 350a 498906   		mov	QWORD PTR [r14], rax	# sieve_91->bitarray, _96
 109:sieve_extend.c ****     sieve->size     = size;
 8967              		.loc 1 109 5 is_stmt 1 view .LVU3031
 8968              	# sieve_extend.c:109:     sieve->bits     = size >> 1;
 109:sieve_extend.c ****     sieve->size     = size;
 8969              		.loc 1 109 21 is_stmt 0 view .LVU3032
 8970 350d 4D897E08 		mov	QWORD PTR 8[r14], r15	# sieve_91->bits, prephitmp_743
 110:sieve_extend.c **** 
 8971              		.loc 1 110 5 is_stmt 1 view .LVU3033
 8972              	# sieve_extend.c:110:     sieve->size     = size;
 110:sieve_extend.c **** 
GAS LISTING /tmp/cc7rm34x.s 			page 250


 8973              		.loc 1 110 21 is_stmt 0 view .LVU3034
 8974 3511 49895E10 		mov	QWORD PTR 16[r14], rbx	# sieve_91->size, maxints
 114:sieve_extend.c **** }
 8975              		.loc 1 114 5 is_stmt 1 view .LVU3035
 8976              	.LVL467:
 114:sieve_extend.c **** }
 8977              		.loc 1 114 5 is_stmt 0 view .LVU3036
 8978              	.LBE478:
 8979              	.LBE519:
1074:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 8980              		.loc 1 1074 5 is_stmt 1 view .LVU3037
1075:sieve_extend.c **** 
 8981              		.loc 1 1075 5 view .LVU3038
1077:sieve_extend.c **** 
 8982              		.loc 1 1077 5 view .LVU3039
1080:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 8983              		.loc 1 1080 5 view .LVU3040
 8984              	.LBB520:
 8985              	.LBI481:
1033:sieve_extend.c ****     register counter_t prime   = 0;
 8986              		.loc 1 1033 21 view .LVU3041
 8987              	.LBB512:
1034:sieve_extend.c ****     counter_t patternsize_bits = 1;
 8988              		.loc 1 1034 5 view .LVU3042
1035:sieve_extend.c ****     counter_t pattern_start    = 0;
 8989              		.loc 1 1035 5 view .LVU3043
1036:sieve_extend.c ****     counter_t range_stop       = block_start;
 8990              		.loc 1 1036 5 view .LVU3044
1037:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 8991              		.loc 1 1037 5 view .LVU3045
1038:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 8992              		.loc 1 1038 5 view .LVU3046
1039:sieve_extend.c **** 
 8993              		.loc 1 1039 5 view .LVU3047
1041:sieve_extend.c ****     
 8994              		.loc 1 1041 5 view .LVU3048
 8995              	# sieve_extend.c:1041:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared
1041:sieve_extend.c ****     
 8996              		.loc 1 1041 24 is_stmt 0 view .LVU3049
 8997 3515 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_96],
 8997      000000
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8998              		.loc 1 1043 5 is_stmt 1 view .LVU3050
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 8999              		.loc 1 1043 11 view .LVU3051
 9000              	# sieve_extend.c:1043:     for (;range_stop < block_stop;) {
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9001              		.loc 1 1043 5 is_stmt 0 view .LVU3052
 9002 351c 0F84230C 		je	.L937	#,
 9002      0000
 9003 3522 4989C6   		mov	r14, rax	# _96, _96
 9004              	# sieve_extend.c:1039:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0
1039:sieve_extend.c **** 
 9005              		.loc 1 1039 18 view .LVU3053
 9006 3525 31F6     		xor	esi, esi	# block$pattern_start
 9007              	# sieve_extend.c:1035:     counter_t patternsize_bits = 1;
1035:sieve_extend.c ****     counter_t pattern_start    = 0;
GAS LISTING /tmp/cc7rm34x.s 			page 251


 9008              		.loc 1 1035 15 view .LVU3054
 9009 3527 41BF0100 		mov	r15d, 1	# patternsize_bits,
 9009      0000
 9010              	.LVL468:
 9011              	# sieve_extend.c:1034:     register counter_t prime   = 0;
1034:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9012              		.loc 1 1034 24 view .LVU3055
 9013 352d 31C9     		xor	ecx, ecx	# prime
 9014              	# sieve_extend.c:1036:     counter_t pattern_start    = 0;
1036:sieve_extend.c ****     counter_t range_stop       = block_start;
 9015              		.loc 1 1036 15 view .LVU3056
 9016 352f 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 9016      18000000 
 9016      00
 9017              	# sieve_extend.c:1039:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0
1039:sieve_extend.c **** 
 9018              		.loc 1 1039 18 view .LVU3057
 9019 3538 31D2     		xor	edx, edx	# block$pattern_size
 9020              	.LBB483:
 9021              	# sieve_extend.c:1044:         prime = searchBitFalse(bitarray, prime+1);
1044:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9022              		.loc 1 1044 17 view .LVU3058
 9023 353a 41BD0100 		mov	r13d, 1	# index,
 9023      0000
 9024              	.LVL469:
 9025              		.p2align 4
 9026              		.p2align 3
 9027              	.L699:
 9028              	.LBB484:
 9029              	.LBB485:
 125:sieve_extend.c **** }
 9030              		.loc 1 125 5 is_stmt 1 view .LVU3059
 125:sieve_extend.c **** }
 9031              		.loc 1 125 5 is_stmt 0 view .LVU3060
 9032              	.LBE485:
 9033              	.LBE484:
1045:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9034              		.loc 1 1045 9 is_stmt 1 view .LVU3061
 9035              	# sieve_extend.c:1045:         counter_t start = prime * prime * 2 + prime * 2;
1045:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9036              		.loc 1 1045 45 is_stmt 0 view .LVU3062
 9037 3540 498D5D01 		lea	rbx, 1[r13]	# index,
 9038 3544 4F8D642D 		lea	r12, [r13+r13]	# _361,
 9038      00
 9039              	# sieve_extend.c:1045:         counter_t start = prime * prime * 2 + prime * 2;
1045:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9040              		.loc 1 1045 19 view .LVU3063
 9041 3549 4889DD   		mov	rbp, rbx	# index, index
 9042 354c 490FAFEC 		imul	rbp, r12	# index, _361
 9043              	.LVL470:
1046:sieve_extend.c **** 
 9044              		.loc 1 1046 9 is_stmt 1 view .LVU3064
 9045              	# sieve_extend.c:1046:         if unlikely(start > block_stop) break;
1046:sieve_extend.c **** 
 9046              		.loc 1 1046 12 is_stmt 0 view .LVU3065
 9047 3550 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# index, %sfp
 9047      08
GAS LISTING /tmp/cc7rm34x.s 			page 252


 9048 3555 0F870A04 		ja	.L938	#,
 9048      0000
1048:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9049              		.loc 1 1048 9 is_stmt 1 view .LVU3066
 9050              	# sieve_extend.c:1048:         const counter_t step  = prime * 2 + 1;
1048:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9051              		.loc 1 1048 25 is_stmt 0 view .LVU3067
 9052 355b 4983C401 		add	r12, 1	# step,
 9053              	.LVL471:
1049:sieve_extend.c **** 
 9054              		.loc 1 1049 9 is_stmt 1 view .LVU3068
 9055              	# sieve_extend.c:1049:         if (block_start >= (prime + 1)) start = block_start + prime + prime 
1049:sieve_extend.c **** 
 9056              		.loc 1 1049 12 is_stmt 0 view .LVU3069
 9057 355f 4885DB   		test	rbx, rbx	# index
 9058 3562 7516     		jne	.L705	#,
1049:sieve_extend.c **** 
 9059              		.loc 1 1049 41 is_stmt 1 view .LVU3070
 9060              	# sieve_extend.c:1049:         if (block_start >= (prime + 1)) start = block_start + prime + prime 
1049:sieve_extend.c **** 
 9061              		.loc 1 1049 102 is_stmt 0 view .LVU3071
 9062 3564 48C7C0FF 		mov	rax, -1	# tmp334,
 9062      FFFFFF
 9063 356b 31D2     		xor	edx, edx	# tmp333
 9064 356d 49F7F4   		div	r12	# step
 9065              	# sieve_extend.c:1049:         if (block_start >= (prime + 1)) start = block_start + prime + prime 
1049:sieve_extend.c **** 
 9066              		.loc 1 1049 47 view .LVU3072
 9067 3570 48C7C5FE 		mov	rbp, -2	# tmp335,
 9067      FFFFFF
 9068              	.LVL472:
1049:sieve_extend.c **** 
 9069              		.loc 1 1049 47 view .LVU3073
 9070 3577 4829D5   		sub	rbp, rdx	# index, tmp333
 9071              	.LVL473:
 9072              	.L705:
1051:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9073              		.loc 1 1051 9 is_stmt 1 view .LVU3074
 9074              	# sieve_extend.c:1051:         range_stop = block_start + patternsize_bits * step * 2;  // range is
1051:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9075              		.loc 1 1051 53 is_stmt 0 view .LVU3075
 9076 357a 4C89FE   		mov	rsi, r15	# _68, patternsize_bits
 9077 357d 490FAFF4 		imul	rsi, r12	# _68, step
 9078 3581 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, _68
 9078      28
 9079              	# sieve_extend.c:1051:         range_stop = block_start + patternsize_bits * step * 2;  // range is
1051:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9080              		.loc 1 1051 60 view .LVU3076
 9081 3586 4801F6   		add	rsi, rsi	# _69
 9082 3589 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, _69
 9082      10
 9083              	.LVL474:
1052:sieve_extend.c ****         block.pattern_start = pattern_start;
 9084              		.loc 1 1052 9 is_stmt 1 view .LVU3077
1053:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 9085              		.loc 1 1053 9 view .LVU3078
1054:sieve_extend.c **** 
GAS LISTING /tmp/cc7rm34x.s 			page 253


 9086              		.loc 1 1054 9 view .LVU3079
 9087              	# sieve_extend.c:1054:         if (range_stop > block_stop) return block; //range_stop = block_stop
1054:sieve_extend.c **** 
 9088              		.loc 1 1054 12 is_stmt 0 view .LVU3080
 9089 358e 483B7424 		cmp	rsi, QWORD PTR 8[rsp]	# _69, %sfp
 9089      08
 9090 3593 0F878C0B 		ja	.L939	#,
 9090      0000
1056:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9091              		.loc 1 1056 9 is_stmt 1 view .LVU3081
 9092 3599 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# pattern_start, %sfp
 9092      18
 9093              	# sieve_extend.c:1056:         if (patternsize_bits>1) {
1056:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9094              		.loc 1 1056 12 is_stmt 0 view .LVU3082
 9095 359e 4983FF01 		cmp	r15, 1	# patternsize_bits,
 9096 35a2 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, pattern_start
 9096      20
 9097 35a7 0F877303 		ja	.L940	#,
 9097      0000
 9098              	.LVL475:
 9099              	.L708:
1060:sieve_extend.c **** 
 9100              		.loc 1 1060 9 is_stmt 1 view .LVU3083
1064:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9101              		.loc 1 1064 9 view .LVU3084
 9102              	# sieve_extend.c:1064:         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bita
1064:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9103              		.loc 1 1064 12 is_stmt 0 view .LVU3085
 9104 35ad 4C3B2500 		cmp	r12, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 9104      000000
 9105 35b4 0F830601 		jnb	.L712	#,
 9105      0000
1064:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9106              		.loc 1 1064 43 is_stmt 1 view .LVU3086
 9107 35ba 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	#, %sfp
 9107      10
 9108 35bf 4C89E2   		mov	rdx, r12	#, step
 9109 35c2 4889EE   		mov	rsi, rbp	#, index
 9110 35c5 4C89F7   		mov	rdi, r14	#, _96
 9111 35c8 E863DDFF 		call	setBitsTrue_largeRange_vector	#
 9111      FF
 9112              	.LVL476:
 9113              	.L713:
1064:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitarray, start, step, range_stop)
 9114              		.loc 1 1064 43 is_stmt 0 view .LVU3087
 9115              	.LBE483:
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9116              		.loc 1 1043 11 is_stmt 1 view .LVU3088
 9117              	# sieve_extend.c:1043:     for (;range_stop < block_stop;) {
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9118              		.loc 1 1043 5 is_stmt 0 view .LVU3089
 9119 35cd 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# prephitmp_743, %sfp
 9119      08
 9120              	.LVL477:
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9121              		.loc 1 1043 5 view .LVU3090
GAS LISTING /tmp/cc7rm34x.s 			page 254


 9122 35d2 4C396424 		cmp	QWORD PTR 16[rsp], r12	# %sfp, prephitmp_743
 9122      10
 9123 35d7 0F83F402 		jnb	.L941	#,
 9123      0000
 9124              	.LVL478:
 9125              	.L722:
 9126              	.LBB506:
1044:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9127              		.loc 1 1044 9 is_stmt 1 view .LVU3091
 9128              	.LBB487:
 9129              	.LBI484:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9130              		.loc 1 123 25 view .LVU3092
 9131              	.LBB486:
 124:sieve_extend.c ****     return index;
 9132              		.loc 1 124 5 view .LVU3093
 124:sieve_extend.c ****     return index;
 9133              		.loc 1 124 11 view .LVU3094
 9134              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9135              		.loc 1 124 21 is_stmt 0 view .LVU3095
 9136 35dd 4889DD   		mov	rbp, rbx	# tmp321, index
 9137 35e0 48C1ED06 		shr	rbp, 6	# tmp321,
 9138              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9139              		.loc 1 124 12 view .LVU3096
 9140 35e4 4D8B04EE 		mov	r8, QWORD PTR [r14+rbp*8]	# *_481,* _96
 9141              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9142              		.loc 1 124 11 view .LVU3097
 9143 35e8 490FA3D8 		bt	r8, rbx	# *_481, index
 9144 35ec 0F83A600 		jnc	.L701	#,
 9144      0000
 124:sieve_extend.c ****     return index;
 9145              		.loc 1 124 58 is_stmt 1 view .LVU3098
 9146              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9147              		.loc 1 124 63 is_stmt 0 view .LVU3099
 9148 35f2 488D7B01 		lea	rdi, 1[rbx]	# tmp466,
 9149              	.LVL479:
 9150              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9151              		.loc 1 124 21 view .LVU3100
 9152 35f6 4889FA   		mov	rdx, rdi	# tmp326, index
 9153              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9154              		.loc 1 124 63 view .LVU3101
 9155 35f9 4889FB   		mov	rbx, rdi	# index, tmp466
 124:sieve_extend.c ****     return index;
 9156              		.loc 1 124 11 is_stmt 1 view .LVU3102
 9157              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9158              		.loc 1 124 21 is_stmt 0 view .LVU3103
 9159 35fc 48C1EA06 		shr	rdx, 6	# tmp326,
 9160              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9161              		.loc 1 124 12 view .LVU3104
GAS LISTING /tmp/cc7rm34x.s 			page 255


 9162 3600 4D8B0CD6 		mov	r9, QWORD PTR [r14+rdx*8]	# *_49, *_49
 9163              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9164              		.loc 1 124 11 view .LVU3105
 9165 3604 490FA3F9 		bt	r9, rdi	# *_49, index
 9166 3608 0F838A00 		jnc	.L701	#,
 9166      0000
 124:sieve_extend.c ****     return index;
 9167              		.loc 1 124 58 is_stmt 1 view .LVU3106
 9168              	.LVL480:
 9169              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9170              		.loc 1 124 63 is_stmt 0 view .LVU3107
 9171 360e 4883C301 		add	rbx, 1	# index,
 9172              	.LVL481:
 124:sieve_extend.c ****     return index;
 9173              		.loc 1 124 11 is_stmt 1 view .LVU3108
 9174              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9175              		.loc 1 124 21 is_stmt 0 view .LVU3109
 9176 3612 4989DA   		mov	r10, rbx	# tmp567, index
 9177 3615 49C1EA06 		shr	r10, 6	# tmp567,
 9178              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9179              		.loc 1 124 12 view .LVU3110
 9180 3619 4F8B1CD6 		mov	r11, QWORD PTR [r14+r10*8]	# *_49, *_49
 9181              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9182              		.loc 1 124 11 view .LVU3111
 9183 361d 490FA3DB 		bt	r11, rbx	# *_49, index
 9184 3621 7375     		jnc	.L701	#,
 124:sieve_extend.c ****     return index;
 9185              		.loc 1 124 58 is_stmt 1 view .LVU3112
 9186              	.LVL482:
 9187              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9188              		.loc 1 124 63 is_stmt 0 view .LVU3113
 9189 3623 488D5F02 		lea	rbx, 2[rdi]	# index,
 9190              	.LVL483:
 124:sieve_extend.c ****     return index;
 9191              		.loc 1 124 11 is_stmt 1 view .LVU3114
 9192              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9193              		.loc 1 124 21 is_stmt 0 view .LVU3115
 9194 3627 4889D9   		mov	rcx, rbx	# tmp571, index
 9195 362a 48C1E906 		shr	rcx, 6	# tmp571,
 9196              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9197              		.loc 1 124 12 view .LVU3116
 9198 362e 498B04CE 		mov	rax, QWORD PTR [r14+rcx*8]	# *_49, *_49
 9199              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9200              		.loc 1 124 11 view .LVU3117
 9201 3632 480FA3D8 		bt	rax, rbx	# *_49, index
 9202 3636 7360     		jnc	.L701	#,
 124:sieve_extend.c ****     return index;
 9203              		.loc 1 124 58 is_stmt 1 view .LVU3118
GAS LISTING /tmp/cc7rm34x.s 			page 256


 9204              	.LVL484:
 9205              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9206              		.loc 1 124 63 is_stmt 0 view .LVU3119
 9207 3638 488D5F03 		lea	rbx, 3[rdi]	# index,
 9208              	.LVL485:
 124:sieve_extend.c ****     return index;
 9209              		.loc 1 124 11 is_stmt 1 view .LVU3120
 9210              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9211              		.loc 1 124 21 is_stmt 0 view .LVU3121
 9212 363c 4889DE   		mov	rsi, rbx	# tmp575, index
 9213 363f 48C1EE06 		shr	rsi, 6	# tmp575,
 9214              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9215              		.loc 1 124 12 view .LVU3122
 9216 3643 4D8B24F6 		mov	r12, QWORD PTR [r14+rsi*8]	# *_49, *_49
 9217              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9218              		.loc 1 124 11 view .LVU3123
 9219 3647 490FA3DC 		bt	r12, rbx	# *_49, index
 9220 364b 734B     		jnc	.L701	#,
 124:sieve_extend.c ****     return index;
 9221              		.loc 1 124 58 is_stmt 1 view .LVU3124
 9222              	.LVL486:
 9223              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9224              		.loc 1 124 63 is_stmt 0 view .LVU3125
 9225 364d 488D5F04 		lea	rbx, 4[rdi]	# index,
 9226              	.LVL487:
 124:sieve_extend.c ****     return index;
 9227              		.loc 1 124 11 is_stmt 1 view .LVU3126
 9228              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9229              		.loc 1 124 21 is_stmt 0 view .LVU3127
 9230 3651 4889DD   		mov	rbp, rbx	# tmp579, index
 9231 3654 48C1ED06 		shr	rbp, 6	# tmp579,
 9232              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9233              		.loc 1 124 12 view .LVU3128
 9234 3658 4D8B04EE 		mov	r8, QWORD PTR [r14+rbp*8]	# *_49, *_49
 9235              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9236              		.loc 1 124 11 view .LVU3129
 9237 365c 490FA3D8 		bt	r8, rbx	# *_49, index
 9238 3660 7336     		jnc	.L701	#,
 124:sieve_extend.c ****     return index;
 9239              		.loc 1 124 58 is_stmt 1 view .LVU3130
 9240              	.LVL488:
 9241              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9242              		.loc 1 124 63 is_stmt 0 view .LVU3131
 9243 3662 488D5F05 		lea	rbx, 5[rdi]	# index,
 9244              	.LVL489:
 124:sieve_extend.c ****     return index;
 9245              		.loc 1 124 11 is_stmt 1 view .LVU3132
 9246              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cc7rm34x.s 			page 257


 124:sieve_extend.c ****     return index;
 9247              		.loc 1 124 21 is_stmt 0 view .LVU3133
 9248 3666 4889DA   		mov	rdx, rbx	# tmp583, index
 9249 3669 48C1EA06 		shr	rdx, 6	# tmp583,
 9250              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9251              		.loc 1 124 12 view .LVU3134
 9252 366d 4D8B0CD6 		mov	r9, QWORD PTR [r14+rdx*8]	# *_49, *_49
 9253              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9254              		.loc 1 124 11 view .LVU3135
 9255 3671 490FA3D9 		bt	r9, rbx	# *_49, index
 9256 3675 7321     		jnc	.L701	#,
 124:sieve_extend.c ****     return index;
 9257              		.loc 1 124 58 is_stmt 1 view .LVU3136
 9258              	.LVL490:
 9259              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9260              		.loc 1 124 63 is_stmt 0 view .LVU3137
 9261 3677 488D5F06 		lea	rbx, 6[rdi]	# index,
 9262              	.LVL491:
 124:sieve_extend.c ****     return index;
 9263              		.loc 1 124 11 is_stmt 1 view .LVU3138
 9264              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9265              		.loc 1 124 21 is_stmt 0 view .LVU3139
 9266 367b 4989DA   		mov	r10, rbx	# tmp587, index
 9267 367e 49C1EA06 		shr	r10, 6	# tmp587,
 9268              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9269              		.loc 1 124 12 view .LVU3140
 9270 3682 4F8B1CD6 		mov	r11, QWORD PTR [r14+r10*8]	# *_49, *_49
 9271              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9272              		.loc 1 124 11 view .LVU3141
 9273 3686 490FA3DB 		bt	r11, rbx	# *_49, index
 9274 368a 730C     		jnc	.L701	#,
 124:sieve_extend.c ****     return index;
 9275              		.loc 1 124 58 is_stmt 1 view .LVU3142
 9276              	.LVL492:
 9277              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 9278              		.loc 1 124 63 is_stmt 0 view .LVU3143
 9279 368c 488D5F07 		lea	rbx, 7[rdi]	# index,
 9280              	.LVL493:
 124:sieve_extend.c ****     return index;
 9281              		.loc 1 124 11 is_stmt 1 view .LVU3144
 9282 3690 E948FFFF 		jmp	.L722	#
 9282      FF
 9283              		.p2align 4,,7
 9284 3695 0F1F00   		.p2align 3
 9285              	.L701:
 124:sieve_extend.c ****     return index;
 9286              		.loc 1 124 11 is_stmt 0 view .LVU3145
 9287              	.LBE486:
 9288              	.LBE487:
 9289              	.LBE506:
GAS LISTING /tmp/cc7rm34x.s 			page 258


 9290              	.LBE512:
 9291              	.LBE520:
 9292              	# sieve_extend.c:1072: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1072:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9293              		.loc 1 1072 86 view .LVU3146
 9294 3698 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# pattern_start, %sfp
 9294      20
 9295 369d 4C89E9   		mov	rcx, r13	# prime, index
 9296 36a0 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 9296      18
 9297              	.LVL494:
1072:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9298              		.loc 1 1072 86 view .LVU3147
 9299 36a5 4C89FA   		mov	rdx, r15	# block$pattern_size, patternsize_bits
 9300 36a8 4C8B7C24 		mov	r15, QWORD PTR 40[rsp]	# patternsize_bits, %sfp
 9300      28
 9301 36ad 4989DD   		mov	r13, rbx	# index, index
 9302              	.LVL495:
1072:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9303              		.loc 1 1072 86 view .LVU3148
 9304 36b0 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, pattern_start
 9304      18
 9305              	.LVL496:
1072:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9306              		.loc 1 1072 86 view .LVU3149
 9307 36b5 E986FEFF 		jmp	.L699	#
 9307      FF
 9308              	.LVL497:
 9309 36ba 660F1F44 		.p2align 4,,7
 9309      0000
 9310              		.p2align 3
 9311              	.L712:
 9312              	.LBB521:
 9313              	.LBB513:
 9314              	.LBB507:
1065:sieve_extend.c ****         block.prime = prime;
 9315              		.loc 1 1065 43 is_stmt 1 view .LVU3150
 9316              	.LBB488:
 9317              	.LBI488:
 422:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 9318              		.loc 1 422 20 view .LVU3151
 9319              	.LBB489:
 423:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9320              		.loc 1 423 5 view .LVU3152
 424:sieve_extend.c **** 
 9321              		.loc 1 424 5 view .LVU3153
 9322              	# sieve_extend.c:424:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 424:sieve_extend.c **** 
 9323              		.loc 1 424 74 is_stmt 0 view .LVU3154
 9324 36c0 4D89E2   		mov	r10, r12	# tmp337, step
 9325 36c3 49C1E206 		sal	r10, 6	# tmp337,
 9326              	# sieve_extend.c:424:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 424:sieve_extend.c **** 
 9327              		.loc 1 424 21 view .LVU3155
 9328 36c7 4D8D042A 		lea	r8, [r10+rbp]	# range_stop_unique,
 9329              	.LVL498:
 9330              	.LBB490:
GAS LISTING /tmp/cc7rm34x.s 			page 259


 428:sieve_extend.c ****         #if __APPLE__
 9331              		.loc 1 428 10 is_stmt 1 view .LVU3156
 428:sieve_extend.c ****         #if __APPLE__
 9332              		.loc 1 428 50 view .LVU3157
 9333              	# sieve_extend.c:428:     for (register counter_t index = range_start; index < range_stop_unique; i
 428:sieve_extend.c ****         #if __APPLE__
 9334              		.loc 1 428 5 is_stmt 0 view .LVU3158
 9335 36cb 4C39C5   		cmp	rbp, r8	# index, range_stop_unique
 9336 36ce 0F83F9FE 		jnb	.L713	#,
 9336      FFFF
 9337              	.LBB491:
 9338              	.LBB492:
 9339              	# sieve_extend.c:177:    const counter_t range_stop_word = wordindex(range_stop);
 177:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9340              		.loc 1 177 20 view .LVU3159
 9341 36d4 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	# _69, %sfp
 9341      10
 9342              	# sieve_extend.c:179:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 179:sieve_extend.c **** 
 9343              		.loc 1 179 110 view .LVU3160
 9344 36d9 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp340,
 9345              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 9346              		.loc 1 203 29 view .LVU3161
 9347 36dd 48C7C6FF 		mov	rsi, -1	# tmp753,
 9347      FFFFFF
 9348              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****        *index_ptr |= mask;
 9349              		.loc 1 185 17 view .LVU3162
 9350 36e4 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _121,
 9350      00000000 
 9351              	# sieve_extend.c:177:    const counter_t range_stop_word = wordindex(range_stop);
 177:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9352              		.loc 1 177 20 view .LVU3163
 9353 36ec 4989CB   		mov	r11, rcx	# range_stop_word, _69
 9354              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 9355              		.loc 1 203 29 view .LVU3164
 9356 36ef 89C8     		mov	eax, ecx	# tmp342, _69
 9357              	# sieve_extend.c:177:    const counter_t range_stop_word = wordindex(range_stop);
 177:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9358              		.loc 1 177 20 view .LVU3165
 9359 36f1 49C1EB06 		shr	r11, 6	# range_stop_word,
 9360              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 9361              		.loc 1 203 29 view .LVU3166
 9362 36f5 F7D0     		not	eax	# tmp342
 9363              	# sieve_extend.c:179:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 179:sieve_extend.c **** 
 9364              		.loc 1 179 133 view .LVU3167
 9365 36f7 4C89D9   		mov	rcx, r11	# tmp346, range_stop_word
 9366              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 9367              		.loc 1 203 29 view .LVU3168
 9368 36fa C462FBF7 		shrx	r10, rsi, rax	# _153, tmp753, tmp342
 9368      D6
 9369              	# sieve_extend.c:179:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
GAS LISTING /tmp/cc7rm34x.s 			page 260


 179:sieve_extend.c **** 
 9370              		.loc 1 179 133 view .LVU3169
 9371 36ff 4829F9   		sub	rcx, rdi	# tmp346, tmp340
 9372              	# sieve_extend.c:179:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 179:sieve_extend.c **** 
 9373              		.loc 1 179 53 view .LVU3170
 9374 3702 4939FB   		cmp	r11, rdi	# range_stop_word, tmp340
 9375              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 9376              		.loc 1 203 29 view .LVU3171
 9377 3705 4C895424 		mov	QWORD PTR 72[rsp], r10	# %sfp, _153
 9377      48
 9378              	# sieve_extend.c:196:    register const bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 196:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9379              		.loc 1 196 41 view .LVU3172
 9380 370a 4F8D0CDE 		lea	r9, [r14+r11*8]	# range_stop_ptr,
 9381              	# sieve_extend.c:179:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 179:sieve_extend.c **** 
 9382              		.loc 1 179 53 view .LVU3173
 9383 370e 4D8D14CE 		lea	r10, [r14+rcx*8]	# tmp348,
 9384 3712 4D89E3   		mov	r11, r12	# _708, step
 9385 3715 4D0F46D6 		cmovbe	r10, r14	# _96,, fast_loop_ptr
 9386 3719 48C1E703 		sal	rdi, 3	# tmp352,
 9387 371d 49C1E304 		sal	r11, 4	# _708,
 9388              	.LVL499:
 9389 3721 66662E0F 		.p2align 4
 9389      1F840000 
 9389      0000000F 
 9389      1F4000
 9390              		.p2align 3
 9391              	.L720:
 179:sieve_extend.c **** 
 9392              		.loc 1 179 53 view .LVU3174
 9393              	.LBE492:
 9394              	.LBE491:
 432:sieve_extend.c ****         #endif
 9395              		.loc 1 432 13 is_stmt 1 view .LVU3175
 9396 3730 4889EE   		mov	rsi, rbp	# tmp355, index
 9397 3733 B8010000 		mov	eax, 1	# tmp756,
 9397      00
 9398 3738 48C1EE06 		shr	rsi, 6	# tmp355,
 9399 373c C4E2D1F7 		shlx	rcx, rax, rbp	# _106, tmp756, index
 9399      C8
 9400              	.LVL500:
 9401              	.LBB495:
 9402              	.LBI491:
 176:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 9403              		.loc 1 176 20 view .LVU3176
 9404              	.LBB493:
 177:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 9405              		.loc 1 177 4 view .LVU3177
 178:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9406              		.loc 1 178 4 view .LVU3178
 9407              	# sieve_extend.c:178:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 178:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 9408              		.loc 1 178 78 is_stmt 0 view .LVU3179
 9409 3741 498D04F6 		lea	rax, [r14+rsi*8]	# index_ptr,
GAS LISTING /tmp/cc7rm34x.s 			page 261


 9410              	.LVL501:
 179:sieve_extend.c **** 
 9411              		.loc 1 179 4 is_stmt 1 view .LVU3180
 183:sieve_extend.c ****        *index_ptr |= mask;
 9412              		.loc 1 183 10 view .LVU3181
 9413 3745 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 9414 3748 0F830201 		jnb	.L715	#,
 9414      0000
 183:sieve_extend.c ****        *index_ptr |= mask;
 9415              		.loc 1 183 10 is_stmt 0 view .LVU3182
 9416 374e 4A8D3418 		lea	rsi, [rax+r11]	# ivtmp.549,
 9417              	.LVL502:
 9418              	.L716:
 184:sieve_extend.c ****        index_ptr+=step;
 9419              		.loc 1 184 8 is_stmt 1 view .LVU3183
 9420              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9421              		.loc 1 184 19 is_stmt 0 view .LVU3184
 9422 3752 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_467, offset: 0B], _106
 185:sieve_extend.c ****        *index_ptr |= mask;
 9423              		.loc 1 185 8 is_stmt 1 view .LVU3185
 9424              	.LVL503:
 186:sieve_extend.c ****        index_ptr+=step;
 9425              		.loc 1 186 8 view .LVU3186
 9426              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 9427              		.loc 1 186 19 is_stmt 0 view .LVU3187
 9428 3755 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_467, index: _121, offset: 0B], _106
 187:sieve_extend.c ****        *index_ptr |= mask;
 9429              		.loc 1 187 8 is_stmt 1 view .LVU3188
 9430              	.LVL504:
 188:sieve_extend.c ****        index_ptr+=step;
 9431              		.loc 1 188 8 view .LVU3189
 9432              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9433              		.loc 1 188 19 is_stmt 0 view .LVU3190
 9434 3759 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _702, offset: 0B], _106
 189:sieve_extend.c ****        *index_ptr |= mask;
 9435              		.loc 1 189 8 is_stmt 1 view .LVU3191
 9436              	.LVL505:
 190:sieve_extend.c ****        index_ptr+=step;
 9437              		.loc 1 190 8 view .LVU3192
 9438              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9439              		.loc 1 190 19 is_stmt 0 view .LVU3193
 9440 375c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _702, index: _121, offset: 0B], _106
 191:sieve_extend.c ****        *index_ptr |= mask;
 9441              		.loc 1 191 8 is_stmt 1 view .LVU3194
 9442              	.LVL506:
 192:sieve_extend.c ****        index_ptr+=step;
 9443              		.loc 1 192 8 view .LVU3195
 9444 3760 4801FE   		add	rsi, rdi	# ivtmp.549, tmp352
 9445              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9446              		.loc 1 192 19 is_stmt 0 view .LVU3196
 9447 3763 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_467, index: _121, step: 4, offset: 0B], _106
 193:sieve_extend.c ****    }
GAS LISTING /tmp/cc7rm34x.s 			page 262


 9448              		.loc 1 193 8 is_stmt 1 view .LVU3197
 9449 3767 4801F8   		add	rax, rdi	# index_ptr, tmp352
 9450              	.LVL507:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9451              		.loc 1 183 10 view .LVU3198
 9452 376a 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9453 376d 0F86DD00 		jbe	.L715	#,
 9453      0000
 184:sieve_extend.c ****        index_ptr+=step;
 9454              		.loc 1 184 8 view .LVU3199
 9455              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9456              		.loc 1 184 19 is_stmt 0 view .LVU3200
 9457 3773 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_467, offset: 0B], _106
 185:sieve_extend.c ****        *index_ptr |= mask;
 9458              		.loc 1 185 8 is_stmt 1 view .LVU3201
 9459              	.LVL508:
 186:sieve_extend.c ****        index_ptr+=step;
 9460              		.loc 1 186 8 view .LVU3202
 9461              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 9462              		.loc 1 186 19 is_stmt 0 view .LVU3203
 9463 3776 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_467, index: _121, offset: 0B], _106
 187:sieve_extend.c ****        *index_ptr |= mask;
 9464              		.loc 1 187 8 is_stmt 1 view .LVU3204
 9465              	.LVL509:
 188:sieve_extend.c ****        index_ptr+=step;
 9466              		.loc 1 188 8 view .LVU3205
 9467              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9468              		.loc 1 188 19 is_stmt 0 view .LVU3206
 9469 377a 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _702, offset: 0B], _106
 189:sieve_extend.c ****        *index_ptr |= mask;
 9470              		.loc 1 189 8 is_stmt 1 view .LVU3207
 9471              	.LVL510:
 190:sieve_extend.c ****        index_ptr+=step;
 9472              		.loc 1 190 8 view .LVU3208
 9473              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9474              		.loc 1 190 19 is_stmt 0 view .LVU3209
 9475 377d 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _702, index: _121, offset: 0B], _106
 191:sieve_extend.c ****        *index_ptr |= mask;
 9476              		.loc 1 191 8 is_stmt 1 view .LVU3210
 9477              	.LVL511:
 192:sieve_extend.c ****        index_ptr+=step;
 9478              		.loc 1 192 8 view .LVU3211
 9479 3781 4801FE   		add	rsi, rdi	# ivtmp.549, tmp352
 9480              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9481              		.loc 1 192 19 is_stmt 0 view .LVU3212
 9482 3784 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_467, index: _121, step: 4, offset: 0B], _106
 193:sieve_extend.c ****    }
 9483              		.loc 1 193 8 is_stmt 1 view .LVU3213
 9484 3788 4801F8   		add	rax, rdi	# index_ptr, tmp352
 9485              	.LVL512:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9486              		.loc 1 183 10 view .LVU3214
GAS LISTING /tmp/cc7rm34x.s 			page 263


 9487 378b 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9488 378e 0F86BC00 		jbe	.L715	#,
 9488      0000
 184:sieve_extend.c ****        index_ptr+=step;
 9489              		.loc 1 184 8 view .LVU3215
 9490              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9491              		.loc 1 184 19 is_stmt 0 view .LVU3216
 9492 3794 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_467, offset: 0B], _106
 185:sieve_extend.c ****        *index_ptr |= mask;
 9493              		.loc 1 185 8 is_stmt 1 view .LVU3217
 9494              	.LVL513:
 186:sieve_extend.c ****        index_ptr+=step;
 9495              		.loc 1 186 8 view .LVU3218
 9496              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 9497              		.loc 1 186 19 is_stmt 0 view .LVU3219
 9498 3797 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_467, index: _121, offset: 0B], _106
 187:sieve_extend.c ****        *index_ptr |= mask;
 9499              		.loc 1 187 8 is_stmt 1 view .LVU3220
 9500              	.LVL514:
 188:sieve_extend.c ****        index_ptr+=step;
 9501              		.loc 1 188 8 view .LVU3221
 9502              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9503              		.loc 1 188 19 is_stmt 0 view .LVU3222
 9504 379b 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _702, offset: 0B], _106
 189:sieve_extend.c ****        *index_ptr |= mask;
 9505              		.loc 1 189 8 is_stmt 1 view .LVU3223
 9506              	.LVL515:
 190:sieve_extend.c ****        index_ptr+=step;
 9507              		.loc 1 190 8 view .LVU3224
 9508              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9509              		.loc 1 190 19 is_stmt 0 view .LVU3225
 9510 379e 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _702, index: _121, offset: 0B], _106
 191:sieve_extend.c ****        *index_ptr |= mask;
 9511              		.loc 1 191 8 is_stmt 1 view .LVU3226
 9512              	.LVL516:
 192:sieve_extend.c ****        index_ptr+=step;
 9513              		.loc 1 192 8 view .LVU3227
 9514 37a2 4801FE   		add	rsi, rdi	# ivtmp.549, tmp352
 9515              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9516              		.loc 1 192 19 is_stmt 0 view .LVU3228
 9517 37a5 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_467, index: _121, step: 4, offset: 0B], _106
 193:sieve_extend.c ****    }
 9518              		.loc 1 193 8 is_stmt 1 view .LVU3229
 9519 37a9 4801F8   		add	rax, rdi	# index_ptr, tmp352
 9520              	.LVL517:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9521              		.loc 1 183 10 view .LVU3230
 9522 37ac 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9523 37af 0F869B00 		jbe	.L715	#,
 9523      0000
 184:sieve_extend.c ****        index_ptr+=step;
 9524              		.loc 1 184 8 view .LVU3231
GAS LISTING /tmp/cc7rm34x.s 			page 264


 9525              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9526              		.loc 1 184 19 is_stmt 0 view .LVU3232
 9527 37b5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_467, offset: 0B], _106
 185:sieve_extend.c ****        *index_ptr |= mask;
 9528              		.loc 1 185 8 is_stmt 1 view .LVU3233
 9529              	.LVL518:
 186:sieve_extend.c ****        index_ptr+=step;
 9530              		.loc 1 186 8 view .LVU3234
 9531              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 9532              		.loc 1 186 19 is_stmt 0 view .LVU3235
 9533 37b8 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_467, index: _121, offset: 0B], _106
 187:sieve_extend.c ****        *index_ptr |= mask;
 9534              		.loc 1 187 8 is_stmt 1 view .LVU3236
 9535              	.LVL519:
 188:sieve_extend.c ****        index_ptr+=step;
 9536              		.loc 1 188 8 view .LVU3237
 9537              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9538              		.loc 1 188 19 is_stmt 0 view .LVU3238
 9539 37bc 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _702, offset: 0B], _106
 189:sieve_extend.c ****        *index_ptr |= mask;
 9540              		.loc 1 189 8 is_stmt 1 view .LVU3239
 9541              	.LVL520:
 190:sieve_extend.c ****        index_ptr+=step;
 9542              		.loc 1 190 8 view .LVU3240
 9543              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9544              		.loc 1 190 19 is_stmt 0 view .LVU3241
 9545 37bf 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _702, index: _121, offset: 0B], _106
 191:sieve_extend.c ****        *index_ptr |= mask;
 9546              		.loc 1 191 8 is_stmt 1 view .LVU3242
 9547              	.LVL521:
 192:sieve_extend.c ****        index_ptr+=step;
 9548              		.loc 1 192 8 view .LVU3243
 9549 37c3 4801FE   		add	rsi, rdi	# ivtmp.549, tmp352
 9550              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9551              		.loc 1 192 19 is_stmt 0 view .LVU3244
 9552 37c6 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_467, index: _121, step: 4, offset: 0B], _106
 193:sieve_extend.c ****    }
 9553              		.loc 1 193 8 is_stmt 1 view .LVU3245
 9554 37ca 4801F8   		add	rax, rdi	# index_ptr, tmp352
 9555              	.LVL522:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9556              		.loc 1 183 10 view .LVU3246
 9557 37cd 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9558 37d0 767E     		jbe	.L715	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9559              		.loc 1 184 8 view .LVU3247
 9560              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9561              		.loc 1 184 19 is_stmt 0 view .LVU3248
 9562 37d2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_467, offset: 0B], _106
 185:sieve_extend.c ****        *index_ptr |= mask;
 9563              		.loc 1 185 8 is_stmt 1 view .LVU3249
GAS LISTING /tmp/cc7rm34x.s 			page 265


 9564              	.LVL523:
 186:sieve_extend.c ****        index_ptr+=step;
 9565              		.loc 1 186 8 view .LVU3250
 9566              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 9567              		.loc 1 186 19 is_stmt 0 view .LVU3251
 9568 37d5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_467, index: _121, offset: 0B], _106
 187:sieve_extend.c ****        *index_ptr |= mask;
 9569              		.loc 1 187 8 is_stmt 1 view .LVU3252
 9570              	.LVL524:
 188:sieve_extend.c ****        index_ptr+=step;
 9571              		.loc 1 188 8 view .LVU3253
 9572              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9573              		.loc 1 188 19 is_stmt 0 view .LVU3254
 9574 37d9 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _702, offset: 0B], _106
 189:sieve_extend.c ****        *index_ptr |= mask;
 9575              		.loc 1 189 8 is_stmt 1 view .LVU3255
 9576              	.LVL525:
 190:sieve_extend.c ****        index_ptr+=step;
 9577              		.loc 1 190 8 view .LVU3256
 9578              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9579              		.loc 1 190 19 is_stmt 0 view .LVU3257
 9580 37dc 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _702, index: _121, offset: 0B], _106
 191:sieve_extend.c ****        *index_ptr |= mask;
 9581              		.loc 1 191 8 is_stmt 1 view .LVU3258
 9582              	.LVL526:
 192:sieve_extend.c ****        index_ptr+=step;
 9583              		.loc 1 192 8 view .LVU3259
 9584 37e0 4801FE   		add	rsi, rdi	# ivtmp.549, tmp352
 9585              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9586              		.loc 1 192 19 is_stmt 0 view .LVU3260
 9587 37e3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_467, index: _121, step: 4, offset: 0B], _106
 193:sieve_extend.c ****    }
 9588              		.loc 1 193 8 is_stmt 1 view .LVU3261
 9589 37e7 4801F8   		add	rax, rdi	# index_ptr, tmp352
 9590              	.LVL527:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9591              		.loc 1 183 10 view .LVU3262
 9592 37ea 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9593 37ed 7661     		jbe	.L715	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9594              		.loc 1 184 8 view .LVU3263
 9595              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9596              		.loc 1 184 19 is_stmt 0 view .LVU3264
 9597 37ef 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_467, offset: 0B], _106
 185:sieve_extend.c ****        *index_ptr |= mask;
 9598              		.loc 1 185 8 is_stmt 1 view .LVU3265
 9599              	.LVL528:
 186:sieve_extend.c ****        index_ptr+=step;
 9600              		.loc 1 186 8 view .LVU3266
 9601              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 9602              		.loc 1 186 19 is_stmt 0 view .LVU3267
GAS LISTING /tmp/cc7rm34x.s 			page 266


 9603 37f2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_467, index: _121, offset: 0B], _106
 187:sieve_extend.c ****        *index_ptr |= mask;
 9604              		.loc 1 187 8 is_stmt 1 view .LVU3268
 9605              	.LVL529:
 188:sieve_extend.c ****        index_ptr+=step;
 9606              		.loc 1 188 8 view .LVU3269
 9607              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9608              		.loc 1 188 19 is_stmt 0 view .LVU3270
 9609 37f6 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _702, offset: 0B], _106
 189:sieve_extend.c ****        *index_ptr |= mask;
 9610              		.loc 1 189 8 is_stmt 1 view .LVU3271
 9611              	.LVL530:
 190:sieve_extend.c ****        index_ptr+=step;
 9612              		.loc 1 190 8 view .LVU3272
 9613              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9614              		.loc 1 190 19 is_stmt 0 view .LVU3273
 9615 37f9 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _702, index: _121, offset: 0B], _106
 191:sieve_extend.c ****        *index_ptr |= mask;
 9616              		.loc 1 191 8 is_stmt 1 view .LVU3274
 9617              	.LVL531:
 192:sieve_extend.c ****        index_ptr+=step;
 9618              		.loc 1 192 8 view .LVU3275
 9619 37fd 4801FE   		add	rsi, rdi	# ivtmp.549, tmp352
 9620              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9621              		.loc 1 192 19 is_stmt 0 view .LVU3276
 9622 3800 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_467, index: _121, step: 4, offset: 0B], _106
 193:sieve_extend.c ****    }
 9623              		.loc 1 193 8 is_stmt 1 view .LVU3277
 9624 3804 4801F8   		add	rax, rdi	# index_ptr, tmp352
 9625              	.LVL532:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9626              		.loc 1 183 10 view .LVU3278
 9627 3807 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9628 380a 7644     		jbe	.L715	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9629              		.loc 1 184 8 view .LVU3279
 9630              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9631              		.loc 1 184 19 is_stmt 0 view .LVU3280
 9632 380c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_467, offset: 0B], _106
 185:sieve_extend.c ****        *index_ptr |= mask;
 9633              		.loc 1 185 8 is_stmt 1 view .LVU3281
 9634              	.LVL533:
 186:sieve_extend.c ****        index_ptr+=step;
 9635              		.loc 1 186 8 view .LVU3282
 9636              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 9637              		.loc 1 186 19 is_stmt 0 view .LVU3283
 9638 380f 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_467, index: _121, offset: 0B], _106
 187:sieve_extend.c ****        *index_ptr |= mask;
 9639              		.loc 1 187 8 is_stmt 1 view .LVU3284
 9640              	.LVL534:
 188:sieve_extend.c ****        index_ptr+=step;
 9641              		.loc 1 188 8 view .LVU3285
GAS LISTING /tmp/cc7rm34x.s 			page 267


 9642              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9643              		.loc 1 188 19 is_stmt 0 view .LVU3286
 9644 3813 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _702, offset: 0B], _106
 189:sieve_extend.c ****        *index_ptr |= mask;
 9645              		.loc 1 189 8 is_stmt 1 view .LVU3287
 9646              	.LVL535:
 190:sieve_extend.c ****        index_ptr+=step;
 9647              		.loc 1 190 8 view .LVU3288
 9648              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9649              		.loc 1 190 19 is_stmt 0 view .LVU3289
 9650 3816 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _702, index: _121, offset: 0B], _106
 191:sieve_extend.c ****        *index_ptr |= mask;
 9651              		.loc 1 191 8 is_stmt 1 view .LVU3290
 9652              	.LVL536:
 192:sieve_extend.c ****        index_ptr+=step;
 9653              		.loc 1 192 8 view .LVU3291
 9654 381a 4801FE   		add	rsi, rdi	# ivtmp.549, tmp352
 9655              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9656              		.loc 1 192 19 is_stmt 0 view .LVU3292
 9657 381d 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_467, index: _121, step: 4, offset: 0B], _106
 193:sieve_extend.c ****    }
 9658              		.loc 1 193 8 is_stmt 1 view .LVU3293
 9659 3821 4801F8   		add	rax, rdi	# index_ptr, tmp352
 9660              	.LVL537:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9661              		.loc 1 183 10 view .LVU3294
 9662 3824 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9663 3827 7627     		jbe	.L715	#,
 184:sieve_extend.c ****        index_ptr+=step;
 9664              		.loc 1 184 8 view .LVU3295
 9665              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 9666              		.loc 1 184 19 is_stmt 0 view .LVU3296
 9667 3829 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_467, offset: 0B], _106
 185:sieve_extend.c ****        *index_ptr |= mask;
 9668              		.loc 1 185 8 is_stmt 1 view .LVU3297
 9669              	.LVL538:
 186:sieve_extend.c ****        index_ptr+=step;
 9670              		.loc 1 186 8 view .LVU3298
 9671              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 9672              		.loc 1 186 19 is_stmt 0 view .LVU3299
 9673 382c 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_467, index: _121, offset: 0B], _106
 187:sieve_extend.c ****        *index_ptr |= mask;
 9674              		.loc 1 187 8 is_stmt 1 view .LVU3300
 9675              	.LVL539:
 188:sieve_extend.c ****        index_ptr+=step;
 9676              		.loc 1 188 8 view .LVU3301
 9677              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 9678              		.loc 1 188 19 is_stmt 0 view .LVU3302
 9679 3830 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _702, offset: 0B], _106
 189:sieve_extend.c ****        *index_ptr |= mask;
 9680              		.loc 1 189 8 is_stmt 1 view .LVU3303
GAS LISTING /tmp/cc7rm34x.s 			page 268


 9681              	.LVL540:
 190:sieve_extend.c ****        index_ptr+=step;
 9682              		.loc 1 190 8 view .LVU3304
 9683              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 9684              		.loc 1 190 19 is_stmt 0 view .LVU3305
 9685 3833 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _702, index: _121, offset: 0B], _106
 191:sieve_extend.c ****        *index_ptr |= mask;
 9686              		.loc 1 191 8 is_stmt 1 view .LVU3306
 9687              	.LVL541:
 192:sieve_extend.c ****        index_ptr+=step;
 9688              		.loc 1 192 8 view .LVU3307
 9689 3837 4801FE   		add	rsi, rdi	# ivtmp.549, tmp352
 9690              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 9691              		.loc 1 192 19 is_stmt 0 view .LVU3308
 9692 383a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_467, index: _121, step: 4, offset: 0B], _106
 193:sieve_extend.c ****    }
 9693              		.loc 1 193 8 is_stmt 1 view .LVU3309
 9694 383e 4801F8   		add	rax, rdi	# index_ptr, tmp352
 9695              	.LVL542:
 183:sieve_extend.c ****        *index_ptr |= mask;
 9696              		.loc 1 183 10 view .LVU3310
 9697 3841 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 9698 3844 0F8708FF 		ja	.L716	#,
 9698      FFFF
 9699 384a 660F1F44 		.p2align 4
 9699      0000
 9700              		.p2align 3
 9701              	.L715:
 196:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9702              		.loc 1 196 4 view .LVU3311
 197:sieve_extend.c ****        *index_ptr |= mask;
 9703              		.loc 1 197 4 view .LVU3312
 197:sieve_extend.c ****        *index_ptr |= mask;
 9704              		.loc 1 197 10 view .LVU3313
 9705 3850 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9706 3853 765B     		jbe	.L717	#,
 9707              	.L718:
 198:sieve_extend.c ****        index_ptr+=step;
 9708              		.loc 1 198 8 view .LVU3314
 9709              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 9710              		.loc 1 198 19 is_stmt 0 view .LVU3315
 9711 3855 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_465, offset: 0B], _106
 199:sieve_extend.c ****    }
 9712              		.loc 1 199 8 is_stmt 1 view .LVU3316
 9713              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 9714              		.loc 1 199 17 is_stmt 0 view .LVU3317
 9715 3858 4801D0   		add	rax, rdx	# index_ptr, _121
 9716              	.LVL543:
 197:sieve_extend.c ****        *index_ptr |= mask;
 9717              		.loc 1 197 10 is_stmt 1 view .LVU3318
 9718 385b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9719 385e 7650     		jbe	.L717	#,
 198:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc7rm34x.s 			page 269


 9720              		.loc 1 198 8 view .LVU3319
 9721              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 9722              		.loc 1 198 19 is_stmt 0 view .LVU3320
 9723 3860 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_465, offset: 0B], _106
 199:sieve_extend.c ****    }
 9724              		.loc 1 199 8 is_stmt 1 view .LVU3321
 9725              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 9726              		.loc 1 199 17 is_stmt 0 view .LVU3322
 9727 3863 4801D0   		add	rax, rdx	# index_ptr, _121
 9728              	.LVL544:
 197:sieve_extend.c ****        *index_ptr |= mask;
 9729              		.loc 1 197 10 is_stmt 1 view .LVU3323
 9730 3866 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9731 3869 7645     		jbe	.L717	#,
 198:sieve_extend.c ****        index_ptr+=step;
 9732              		.loc 1 198 8 view .LVU3324
 9733              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 9734              		.loc 1 198 19 is_stmt 0 view .LVU3325
 9735 386b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_465, offset: 0B], _106
 199:sieve_extend.c ****    }
 9736              		.loc 1 199 8 is_stmt 1 view .LVU3326
 9737              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 9738              		.loc 1 199 17 is_stmt 0 view .LVU3327
 9739 386e 4801D0   		add	rax, rdx	# index_ptr, _121
 9740              	.LVL545:
 197:sieve_extend.c ****        *index_ptr |= mask;
 9741              		.loc 1 197 10 is_stmt 1 view .LVU3328
 9742 3871 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9743 3874 763A     		jbe	.L717	#,
 198:sieve_extend.c ****        index_ptr+=step;
 9744              		.loc 1 198 8 view .LVU3329
 9745              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 9746              		.loc 1 198 19 is_stmt 0 view .LVU3330
 9747 3876 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_465, offset: 0B], _106
 199:sieve_extend.c ****    }
 9748              		.loc 1 199 8 is_stmt 1 view .LVU3331
 9749              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 9750              		.loc 1 199 17 is_stmt 0 view .LVU3332
 9751 3879 4801D0   		add	rax, rdx	# index_ptr, _121
 9752              	.LVL546:
 197:sieve_extend.c ****        *index_ptr |= mask;
 9753              		.loc 1 197 10 is_stmt 1 view .LVU3333
 9754 387c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9755 387f 762F     		jbe	.L717	#,
 198:sieve_extend.c ****        index_ptr+=step;
 9756              		.loc 1 198 8 view .LVU3334
 9757              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 9758              		.loc 1 198 19 is_stmt 0 view .LVU3335
 9759 3881 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_465, offset: 0B], _106
 199:sieve_extend.c ****    }
GAS LISTING /tmp/cc7rm34x.s 			page 270


 9760              		.loc 1 199 8 is_stmt 1 view .LVU3336
 9761              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 9762              		.loc 1 199 17 is_stmt 0 view .LVU3337
 9763 3884 4801D0   		add	rax, rdx	# index_ptr, _121
 9764              	.LVL547:
 197:sieve_extend.c ****        *index_ptr |= mask;
 9765              		.loc 1 197 10 is_stmt 1 view .LVU3338
 9766 3887 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9767 388a 7624     		jbe	.L717	#,
 198:sieve_extend.c ****        index_ptr+=step;
 9768              		.loc 1 198 8 view .LVU3339
 9769              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 9770              		.loc 1 198 19 is_stmt 0 view .LVU3340
 9771 388c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_465, offset: 0B], _106
 199:sieve_extend.c ****    }
 9772              		.loc 1 199 8 is_stmt 1 view .LVU3341
 9773              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 9774              		.loc 1 199 17 is_stmt 0 view .LVU3342
 9775 388f 4801D0   		add	rax, rdx	# index_ptr, _121
 9776              	.LVL548:
 197:sieve_extend.c ****        *index_ptr |= mask;
 9777              		.loc 1 197 10 is_stmt 1 view .LVU3343
 9778 3892 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9779 3895 7619     		jbe	.L717	#,
 198:sieve_extend.c ****        index_ptr+=step;
 9780              		.loc 1 198 8 view .LVU3344
 9781              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 9782              		.loc 1 198 19 is_stmt 0 view .LVU3345
 9783 3897 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_465, offset: 0B], _106
 199:sieve_extend.c ****    }
 9784              		.loc 1 199 8 is_stmt 1 view .LVU3346
 9785              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 9786              		.loc 1 199 17 is_stmt 0 view .LVU3347
 9787 389a 4801D0   		add	rax, rdx	# index_ptr, _121
 9788              	.LVL549:
 197:sieve_extend.c ****        *index_ptr |= mask;
 9789              		.loc 1 197 10 is_stmt 1 view .LVU3348
 9790 389d 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9791 38a0 760E     		jbe	.L717	#,
 198:sieve_extend.c ****        index_ptr+=step;
 9792              		.loc 1 198 8 view .LVU3349
 9793              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 9794              		.loc 1 198 19 is_stmt 0 view .LVU3350
 9795 38a2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_465, offset: 0B], _106
 199:sieve_extend.c ****    }
 9796              		.loc 1 199 8 is_stmt 1 view .LVU3351
 9797              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 9798              		.loc 1 199 17 is_stmt 0 view .LVU3352
 9799 38a5 4801D0   		add	rax, rdx	# index_ptr, _121
 9800              	.LVL550:
GAS LISTING /tmp/cc7rm34x.s 			page 271


 197:sieve_extend.c ****        *index_ptr |= mask;
 9801              		.loc 1 197 10 is_stmt 1 view .LVU3353
 9802 38a8 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9803 38ab 77A8     		ja	.L718	#,
 9804 38ad 0F1F00   		.p2align 4
 9805              		.p2align 3
 9806              	.L717:
 202:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9807              		.loc 1 202 4 view .LVU3354
 9808              	# sieve_extend.c:202:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 202:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9809              		.loc 1 202 7 is_stmt 0 view .LVU3355
 9810 38b0 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 9811 38b3 745B     		je	.L942	#,
 9812              	.LVL551:
 9813              	.L719:
 202:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9814              		.loc 1 202 7 view .LVU3356
 9815              	.LBE493:
 9816              	.LBE495:
 428:sieve_extend.c ****         #if __APPLE__
 9817              		.loc 1 428 77 is_stmt 1 view .LVU3357
 9818              	# sieve_extend.c:428:     for (register counter_t index = range_start; index < range_stop_unique; i
 428:sieve_extend.c ****         #if __APPLE__
 9819              		.loc 1 428 83 is_stmt 0 view .LVU3358
 9820 38b5 4C01E5   		add	rbp, r12	# index, step
 9821              	.LVL552:
 428:sieve_extend.c ****         #if __APPLE__
 9822              		.loc 1 428 50 is_stmt 1 view .LVU3359
 9823              	# sieve_extend.c:428:     for (register counter_t index = range_start; index < range_stop_unique; i
 428:sieve_extend.c ****         #if __APPLE__
 9824              		.loc 1 428 5 is_stmt 0 view .LVU3360
 9825 38b8 4939E8   		cmp	r8, rbp	# range_stop_unique, index
 9826 38bb 0F876FFE 		ja	.L720	#,
 9826      FFFF
 9827              	.LVL553:
 428:sieve_extend.c ****         #if __APPLE__
 9828              		.loc 1 428 5 view .LVU3361
 9829              	.LBE490:
 9830              	.LBE489:
 9831              	.LBE488:
 9832              	.LBE507:
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9833              		.loc 1 1043 11 is_stmt 1 view .LVU3362
 9834              	# sieve_extend.c:1043:     for (;range_stop < block_stop;) {
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9835              		.loc 1 1043 5 is_stmt 0 view .LVU3363
 9836 38c1 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# prephitmp_743, %sfp
 9836      08
 9837              	.LVL554:
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9838              		.loc 1 1043 5 view .LVU3364
 9839 38c6 4C396424 		cmp	QWORD PTR 16[rsp], r12	# %sfp, prephitmp_743
 9839      10
 9840 38cb 0F820CFD 		jb	.L722	#,
 9840      FFFF
 9841              	.L941:
GAS LISTING /tmp/cc7rm34x.s 			page 272


1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9842              		.loc 1 1043 5 view .LVU3365
 9843 38d1 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 9843      30
 9844 38d6 4C89FA   		mov	rdx, r15	# block$pattern_size, patternsize_bits
 9845 38d9 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 9845      18
 9846              	.LBE513:
 9847              	.LBE521:
 9848              	.LBB522:
 9849              	.LBB523:
 9850              	# sieve_extend.c:938:     if (size < WORD_SIZE_counter)   {
 938:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9851              		.loc 1 938 8 view .LVU3366
 9852 38de 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 9853              	.LBE523:
 9854              	.LBE522:
 9855              	.LBB528:
 9856              	.LBB514:
 9857              	# sieve_extend.c:1043:     for (;range_stop < block_stop;) {
1043:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9858              		.loc 1 1043 5 view .LVU3367
 9859 38e2 4C896C24 		mov	QWORD PTR 40[rsp], r13	# %sfp, index
 9859      28
 9860              	.LVL555:
1069:sieve_extend.c **** }
 9861              		.loc 1 1069 5 is_stmt 1 view .LVU3368
1069:sieve_extend.c **** }
 9862              		.loc 1 1069 5 is_stmt 0 view .LVU3369
 9863              	.LBE514:
 9864              	.LBE528:
1081:sieve_extend.c ****     prime = block.prime;
 9865              		.loc 1 1081 5 is_stmt 1 view .LVU3370
 9866              	.LBB529:
 9867              	.LBI522:
 937:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9868              		.loc 1 937 20 view .LVU3371
 9869              	.LBB524:
 938:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9870              		.loc 1 938 5 view .LVU3372
 9871 38e7 4C8B7308 		mov	r14, QWORD PTR 8[rbx]	# prephitmp_743, sieve_91->bits
 9872              	.LVL556:
 938:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9873              		.loc 1 938 5 is_stmt 0 view .LVU3373
 9874 38eb 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_743
 9874      08
 9875              	# sieve_extend.c:938:     if (size < WORD_SIZE_counter)   {
 938:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9876              		.loc 1 938 8 view .LVU3374
 9877 38f0 0F878C00 		ja	.L723	#,
 9877      0000
 9878              	.LVL557:
 9879              	.L700:
 939:sieve_extend.c ****         return; // rapid exit for small sizes
 9880              		.loc 1 939 9 is_stmt 1 view .LVU3375
 9881 38f6 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 9881      08
GAS LISTING /tmp/cc7rm34x.s 			page 273


 9882 38fb 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 9882      38
 9883 3900 E8FBC6FF 		call	extendSieve_smallSize	#
 9883      FF
 9884              	.LVL558:
 940:sieve_extend.c ****     }
 9885              		.loc 1 940 9 view .LVU3376
 9886 3905 E9A40000 		jmp	.L724	#
 9886      00
 9887              	.LVL559:
 9888 390a 660F1F44 		.p2align 4,,7
 9888      0000
 9889              		.p2align 3
 9890              	.L942:
 940:sieve_extend.c ****     }
 9891              		.loc 1 940 9 is_stmt 0 view .LVU3377
 9892              	.LBE524:
 9893              	.LBE529:
 9894              	.LBB530:
 9895              	.LBB515:
 9896              	.LBB508:
 9897              	.LBB499:
 9898              	.LBB498:
 9899              	.LBB497:
 9900              	.LBB496:
 9901              	.LBB494:
 203:sieve_extend.c ****    }
 9902              		.loc 1 203 7 is_stmt 1 view .LVU3378
 9903              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 9904              		.loc 1 203 27 is_stmt 0 view .LVU3379
 9905 3910 48234C24 		and	rcx, QWORD PTR 72[rsp]	# tmp357, %sfp
 9905      48
 9906              	.LVL560:
 9907              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 9908              		.loc 1 203 18 view .LVU3380
 9909 3915 490909   		or	QWORD PTR [r9], rcx	# *index_ptr_464, tmp357
 9910 3918 EB9B     		jmp	.L719	#
 9911              	.LVL561:
 9912 391a 660F1F44 		.p2align 4,,7
 9912      0000
 9913              		.p2align 3
 9914              	.L940:
 203:sieve_extend.c ****    }
 9915              		.loc 1 203 18 view .LVU3381
 9916              	.LBE494:
 9917              	.LBE496:
 9918              	.LBE497:
 9919              	.LBE498:
 9920              	.LBE499:
1057:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 9921              		.loc 1 1057 13 is_stmt 1 view .LVU3382
1058:sieve_extend.c ****         }
 9922              		.loc 1 1058 13 view .LVU3383
 9923              	.LBB500:
 9924              	.LBI500:
GAS LISTING /tmp/cc7rm34x.s 			page 274


 937:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9925              		.loc 1 937 20 view .LVU3384
 9926              	.LBB501:
 938:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9927              		.loc 1 938 5 view .LVU3385
 9928              	# sieve_extend.c:938:     if (size < WORD_SIZE_counter)   {
 938:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9929              		.loc 1 938 8 is_stmt 0 view .LVU3386
 9930 3920 4983FF3F 		cmp	r15, 63	# patternsize_bits,
 9931 3924 0F86D307 		jbe	.L943	#,
 9931      0000
 943:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9932              		.loc 1 943 5 is_stmt 1 view .LVU3387
 9933              	.LVL562:
 944:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9934              		.loc 1 944 5 view .LVU3388
 9935              	# sieve_extend.c:943:     const counter_t copy_start  = source_start + size;
 943:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 9936              		.loc 1 943 21 is_stmt 0 view .LVU3389
 9937 392a 4F8D043F 		lea	r8, [r15+r15]	# copy_start,
 9938              	# sieve_extend.c:945:     const bitshift_t source_bit = bitindex_calc(source_start);
 945:sieve_extend.c **** 
 9939              		.loc 1 945 22 view .LVU3390
 9940 392e 4D89F9   		mov	r9, r15	# source_bit, patternsize_bits
 9941              	# sieve_extend.c:944:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 944:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9942              		.loc 1 944 22 view .LVU3391
 9943 3931 4183E03F 		and	r8d, 63	# copy_bit,
 9944              	.LVL563:
 945:sieve_extend.c **** 
 9945              		.loc 1 945 5 is_stmt 1 view .LVU3392
 9946              	# sieve_extend.c:945:     const bitshift_t source_bit = bitindex_calc(source_start);
 945:sieve_extend.c **** 
 9947              		.loc 1 945 22 is_stmt 0 view .LVU3393
 9948 3935 4183E13F 		and	r9d, 63	# source_bit,
 9949              	.LVL564:
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9950              		.loc 1 947 5 is_stmt 1 view .LVU3394
 9951              	# sieve_extend.c:947:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9952              		.loc 1 947 13 is_stmt 0 view .LVU3395
 9953 3939 4D39C8   		cmp	r8, r9	# copy_bit, source_bit
 9954              	# sieve_extend.c:947:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9955              		.loc 1 947 37 view .LVU3396
 9956 393c 4C89FA   		mov	rdx, r15	#, patternsize_bits
 9957 393f 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	#, %sfp
 9957      10
 9958 3944 4C89FE   		mov	rsi, r15	#, patternsize_bits
 9959              	.LVL565:
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9960              		.loc 1 947 37 view .LVU3397
 9961 3947 4C89F7   		mov	rdi, r14	#, _96
 9962              	# sieve_extend.c:947:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 9963              		.loc 1 947 13 view .LVU3398
 9964 394a 0F82A201 		jb	.L944	#,
GAS LISTING /tmp/cc7rm34x.s 			page 275


 9964      0000
 9965              	.LVL566:
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9966              		.loc 1 948 10 is_stmt 1 view .LVU3399
 9967              	# sieve_extend.c:948:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9968              		.loc 1 948 13 is_stmt 0 view .LVU3400
 9969 3950 0F868D01 		jbe	.L711	#,
 9969      0000
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9970              		.loc 1 948 37 is_stmt 1 view .LVU3401
 9971 3956 E865CDFF 		call	extendSieve_shiftright_ivdep	#
 9971      FF
 9972              	.LVL567:
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9973              		.loc 1 948 37 is_stmt 0 view .LVU3402
 9974 395b 4C897C24 		mov	QWORD PTR 32[rsp], r15	# %sfp, patternsize_bits
 9974      20
 9975              		.p2align 4,,3
 9976 3960 E948FCFF 		jmp	.L708	#
 9976      FF
 9977              	.LVL568:
 9978              	.L938:
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9979              		.loc 1 948 37 view .LVU3403
 9980 3965 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# <retval>, %sfp
 9980      30
 9981 396a 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 9981      28
 9982 396f 498B4F08 		mov	rcx, QWORD PTR 8[r15]	# prephitmp_743, sieve_91->bits
 9983 3973 48894C24 		mov	QWORD PTR 8[rsp], rcx	# %sfp, prephitmp_743
 9983      08
 9984              	.LVL569:
 9985              	.L707:
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 9986              		.loc 1 948 37 view .LVU3404
 9987              	.LBE501:
 9988              	.LBE500:
 9989              	.LBE508:
 9990              	.LBE515:
 9991              	.LBE530:
1081:sieve_extend.c ****     prime = block.prime;
 9992              		.loc 1 1081 5 is_stmt 1 view .LVU3405
 9993              	.LBB531:
 937:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 9994              		.loc 1 937 20 view .LVU3406
 9995              	.LBB525:
 938:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9996              		.loc 1 938 5 view .LVU3407
 9997              	# sieve_extend.c:938:     if (size < WORD_SIZE_counter)   {
 938:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 9998              		.loc 1 938 8 is_stmt 0 view .LVU3408
 9999 3978 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10000 397c 0F8674FF 		jbe	.L700	#,
 10000      FFFF
 10001              	.LVL570:
 10002              	.L723:
GAS LISTING /tmp/cc7rm34x.s 			page 276


 943:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10003              		.loc 1 943 5 is_stmt 1 view .LVU3409
 944:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10004              		.loc 1 944 5 view .LVU3410
 10005              	# sieve_extend.c:943:     const counter_t copy_start  = source_start + size;
 943:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10006              		.loc 1 943 21 is_stmt 0 view .LVU3411
 10007 3982 488D0416 		lea	rax, [rsi+rdx]	# copy_start,
 10008              	.LVL571:
 10009              	# sieve_extend.c:945:     const bitshift_t source_bit = bitindex_calc(source_start);
 945:sieve_extend.c **** 
 10010              		.loc 1 945 22 view .LVU3412
 10011 3986 4989F4   		mov	r12, rsi	# source_bit, block$pattern_start
 10012              	# sieve_extend.c:944:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 944:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10013              		.loc 1 944 22 view .LVU3413
 10014 3989 83E03F   		and	eax, 63	# copy_bit,
 10015              	.LVL572:
 945:sieve_extend.c **** 
 10016              		.loc 1 945 5 is_stmt 1 view .LVU3414
 10017              	# sieve_extend.c:945:     const bitshift_t source_bit = bitindex_calc(source_start);
 945:sieve_extend.c **** 
 10018              		.loc 1 945 22 is_stmt 0 view .LVU3415
 10019 398c 4183E43F 		and	r12d, 63	# source_bit,
 10020              	.LVL573:
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10021              		.loc 1 947 5 is_stmt 1 view .LVU3416
 10022              	# sieve_extend.c:947:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10023              		.loc 1 947 37 is_stmt 0 view .LVU3417
 10024 3990 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 10024      08
 10025              	# sieve_extend.c:947:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10026              		.loc 1 947 13 view .LVU3418
 10027 3995 4C39E0   		cmp	rax, r12	# copy_bit, source_bit
 10028              	# sieve_extend.c:947:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10029              		.loc 1 947 37 view .LVU3419
 10030 3998 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 10030      38
 10031              	# sieve_extend.c:947:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10032              		.loc 1 947 13 view .LVU3420
 10033 399d 0F827707 		jb	.L945	#,
 10033      0000
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10034              		.loc 1 948 10 is_stmt 1 view .LVU3421
 10035              	# sieve_extend.c:948:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10036              		.loc 1 948 13 is_stmt 0 view .LVU3422
 10037 39a3 0F875801 		ja	.L946	#,
 10037      0000
 949:sieve_extend.c **** }
 10038              		.loc 1 949 37 is_stmt 1 view .LVU3423
 10039 39a9 E852E3FF 		call	extendSieve_aligned	#
 10039      FF
GAS LISTING /tmp/cc7rm34x.s 			page 277


 10040              	.LVL574:
 10041              	.L724:
 949:sieve_extend.c **** }
 10042              		.loc 1 949 37 is_stmt 0 view .LVU3424
 10043              	.LBE525:
 10044              	.LBE531:
1082:sieve_extend.c **** 
 10045              		.loc 1 1082 5 is_stmt 1 view .LVU3425
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10046              		.loc 1 1085 5 view .LVU3426
 10047              	.LBB532:
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10048              		.loc 1 1085 10 view .LVU3427
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10049              		.loc 1 1085 10 is_stmt 0 view .LVU3428
 10050 39ae 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# prime, %sfp
 10050      28
 10051              	# sieve_extend.c:1085:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10052              		.loc 1 1085 20 view .LVU3429
 10053 39b3 4531FF   		xor	r15d, r15d	# block_start
 10054              	# sieve_extend.c:1085:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10055              		.loc 1 1085 38 view .LVU3430
 10056 39b6 488B7424 		mov	rsi, QWORD PTR 64[rsp]	# blocksize, %sfp
 10056      40
 10057              	.LBB533:
 10058              	.LBB534:
 10059              	.LBB535:
 10060              	.LBB536:
 10061              	.LBB537:
 10062              	# sieve_extend.c:432:             applyMask_ptr(bitarray, step, range_stop, markmask(index), wordin
 432:sieve_extend.c ****         #endif
 10063              		.loc 1 432 13 view .LVU3431
 10064 39bb 41BD0100 		mov	r13d, 1	# tmp461,
 10064      0000
 10065              	.LBE537:
 10066              	.LBE536:
 10067              	.LBE535:
 10068              	.LBE534:
 10069              	.LBE533:
 10070              	# sieve_extend.c:1085:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10071              		.loc 1 1085 83 view .LVU3432
 10072 39c1 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# <retval>, %sfp
 10072      30
 10073 39c6 4D8D5101 		lea	r10, 1[r9]	# tmp456,
 10074 39ca 4C895424 		mov	QWORD PTR 32[rsp], r10	# %sfp, tmp456
 10074      20
 10075              	# sieve_extend.c:1085:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10076              		.loc 1 1085 38 view .LVU3433
 10077 39cf 488D6EFF 		lea	rbp, -1[rsi]	# block_stop,
 10078              	.LVL575:
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10079              		.loc 1 1085 63 is_stmt 1 view .LVU3434
 10080              	# sieve_extend.c:1085:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
GAS LISTING /tmp/cc7rm34x.s 			page 278


1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10081              		.loc 1 1085 83 is_stmt 0 view .LVU3435
 10082 39d3 498B5008 		mov	rdx, QWORD PTR 8[r8]	# _8, sieve_91->bits
 10083              	.LVL576:
 10084 39d7 660F1F84 		.p2align 4
 10084      00000000 
 10084      00
 10085              		.p2align 3
 10086              	.L730:
1086:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 10087              		.loc 1 1086 9 is_stmt 1 view .LVU3436
 10088              	.LBB577:
 10089              	.LBB578:
 10090              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10091              		.loc 1 124 21 is_stmt 0 view .LVU3437
 10092 39e0 4C8B5C24 		mov	r11, QWORD PTR 40[rsp]	# prime, %sfp
 10092      28
 10093 39e5 4839D5   		cmp	rbp, rdx	# block_stop, _8
 10094              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10095              		.loc 1 124 12 view .LVU3438
 10096 39e8 488B5C24 		mov	rbx, QWORD PTR 56[rsp]	# _96, %sfp
 10096      38
 10097 39ed 480F47EA 		cmova	rbp, rdx	# block_stop,, block_stop, _8
 10098              	.LVL577:
 124:sieve_extend.c ****     return index;
 10099              		.loc 1 124 12 view .LVU3439
 10100              	.LBE578:
 10101              	.LBE577:
1087:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 10102              		.loc 1 1087 9 is_stmt 1 view .LVU3440
 10103              	.LBB581:
 10104              	.LBI577:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 10105              		.loc 1 123 25 view .LVU3441
 10106              	.LBB579:
 124:sieve_extend.c ****     return index;
 10107              		.loc 1 124 5 view .LVU3442
 124:sieve_extend.c ****     return index;
 10108              		.loc 1 124 11 view .LVU3443
 10109              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10110              		.loc 1 124 21 is_stmt 0 view .LVU3444
 10111 39f1 4C89DF   		mov	rdi, r11	# tmp359, prime
 10112 39f4 48C1EF06 		shr	rdi, 6	# tmp359,
 10113              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10114              		.loc 1 124 12 view .LVU3445
 10115 39f8 4C8B34FB 		mov	r14, QWORD PTR [rbx+rdi*8]	# *_206, *_206
 10116              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10117              		.loc 1 124 11 view .LVU3446
 10118 39fc 4D0FA3DE 		bt	r14, r11	# *_206, tmp770
 10119 3a00 0F831D01 		jnc	.L727	#,
 10119      0000
 10120 3a06 488B4424 		mov	rax, QWORD PTR 32[rsp]	# tmp456, %sfp
GAS LISTING /tmp/cc7rm34x.s 			page 279


 10120      20
 10121              	.L728:
 124:sieve_extend.c ****     return index;
 10122              		.loc 1 124 58 is_stmt 1 view .LVU3447
 10123              	.LVL578:
 10124              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10125              		.loc 1 124 21 is_stmt 0 view .LVU3448
 10126 3a0b 4889C1   		mov	rcx, rax	# tmp364, tmp456
 10127              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10128              		.loc 1 124 63 view .LVU3449
 10129 3a0e 4889C6   		mov	rsi, rax	# prime, tmp456
 124:sieve_extend.c ****     return index;
 10130              		.loc 1 124 11 is_stmt 1 view .LVU3450
 10131              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10132              		.loc 1 124 21 is_stmt 0 view .LVU3451
 10133 3a11 48C1E906 		shr	rcx, 6	# tmp364,
 10134              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10135              		.loc 1 124 12 view .LVU3452
 10136 3a15 4C8B24CB 		mov	r12, QWORD PTR [rbx+rcx*8]	# *_34, *_34
 10137              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10138              		.loc 1 124 11 view .LVU3453
 10139 3a19 490FA3C4 		bt	r12, rax	# *_34, tmp456
 10140 3a1d 0F83ED00 		jnc	.L914	#,
 10140      0000
 10141 3a23 4C8D4801 		lea	r9, 1[rax]	# tmp465,
 10142              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10143              		.loc 1 124 21 view .LVU3454
 10144 3a27 4D89C8   		mov	r8, r9	# tmp468, tmp456
 10145 3a2a 4C89C8   		mov	rax, r9	# tmp456, tmp465
 10146              	.LVL579:
 124:sieve_extend.c ****     return index;
 10147              		.loc 1 124 58 is_stmt 1 view .LVU3455
 10148              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10149              		.loc 1 124 21 is_stmt 0 view .LVU3456
 10150 3a2d 49C1E806 		shr	r8, 6	# tmp468,
 10151              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10152              		.loc 1 124 63 view .LVU3457
 10153 3a31 4C89CE   		mov	rsi, r9	# prime, tmp456
 124:sieve_extend.c ****     return index;
 10154              		.loc 1 124 11 is_stmt 1 view .LVU3458
 10155              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10156              		.loc 1 124 12 is_stmt 0 view .LVU3459
 10157 3a34 4E8B14C3 		mov	r10, QWORD PTR [rbx+r8*8]	# *_34, *_34
 10158              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10159              		.loc 1 124 11 view .LVU3460
 10160 3a38 4D0FA3CA 		bt	r10, r9	# *_34, tmp456
 10161 3a3c 0F83CE00 		jnc	.L914	#,
GAS LISTING /tmp/cc7rm34x.s 			page 280


 10161      0000
 10162 3a42 498D4101 		lea	rax, 1[r9]	# tmp456,
 10163              	.LVL580:
 124:sieve_extend.c ****     return index;
 10164              		.loc 1 124 58 is_stmt 1 view .LVU3461
 10165              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10166              		.loc 1 124 21 is_stmt 0 view .LVU3462
 10167 3a46 4989C3   		mov	r11, rax	# tmp543, tmp456
 10168              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10169              		.loc 1 124 63 view .LVU3463
 10170 3a49 4889C6   		mov	rsi, rax	# prime, tmp456
 124:sieve_extend.c ****     return index;
 10171              		.loc 1 124 11 is_stmt 1 view .LVU3464
 10172              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10173              		.loc 1 124 21 is_stmt 0 view .LVU3465
 10174 3a4c 49C1EB06 		shr	r11, 6	# tmp543,
 10175              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10176              		.loc 1 124 12 view .LVU3466
 10177 3a50 4A8B3CDB 		mov	rdi, QWORD PTR [rbx+r11*8]	# *_34, *_34
 10178              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10179              		.loc 1 124 11 view .LVU3467
 10180 3a54 480FA3C7 		bt	rdi, rax	# *_34, tmp456
 10181 3a58 0F83B200 		jnc	.L914	#,
 10181      0000
 10182 3a5e 498D4102 		lea	rax, 2[r9]	# tmp456,
 10183              	.LVL581:
 124:sieve_extend.c ****     return index;
 10184              		.loc 1 124 58 is_stmt 1 view .LVU3468
 10185              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10186              		.loc 1 124 21 is_stmt 0 view .LVU3469
 10187 3a62 4989C6   		mov	r14, rax	# tmp547, tmp456
 10188              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10189              		.loc 1 124 63 view .LVU3470
 10190 3a65 4889C6   		mov	rsi, rax	# prime, tmp456
 124:sieve_extend.c ****     return index;
 10191              		.loc 1 124 11 is_stmt 1 view .LVU3471
 10192              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10193              		.loc 1 124 21 is_stmt 0 view .LVU3472
 10194 3a68 49C1EE06 		shr	r14, 6	# tmp547,
 10195              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10196              		.loc 1 124 12 view .LVU3473
 10197 3a6c 4A8B0CF3 		mov	rcx, QWORD PTR [rbx+r14*8]	# *_34, *_34
 10198              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10199              		.loc 1 124 11 view .LVU3474
 10200 3a70 480FA3C1 		bt	rcx, rax	# *_34, tmp456
 10201 3a74 0F839600 		jnc	.L914	#,
 10201      0000
GAS LISTING /tmp/cc7rm34x.s 			page 281


 10202 3a7a 498D4103 		lea	rax, 3[r9]	# tmp456,
 10203              	.LVL582:
 124:sieve_extend.c ****     return index;
 10204              		.loc 1 124 58 is_stmt 1 view .LVU3475
 10205              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10206              		.loc 1 124 21 is_stmt 0 view .LVU3476
 10207 3a7e 4989C4   		mov	r12, rax	# tmp551, tmp456
 10208              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10209              		.loc 1 124 63 view .LVU3477
 10210 3a81 4889C6   		mov	rsi, rax	# prime, tmp456
 124:sieve_extend.c ****     return index;
 10211              		.loc 1 124 11 is_stmt 1 view .LVU3478
 10212              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10213              		.loc 1 124 21 is_stmt 0 view .LVU3479
 10214 3a84 49C1EC06 		shr	r12, 6	# tmp551,
 10215              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10216              		.loc 1 124 12 view .LVU3480
 10217 3a88 4E8B04E3 		mov	r8, QWORD PTR [rbx+r12*8]	# *_34, *_34
 10218              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10219              		.loc 1 124 11 view .LVU3481
 10220 3a8c 490FA3C0 		bt	r8, rax	# *_34, tmp456
 10221 3a90 737E     		jnc	.L914	#,
 10222 3a92 498D4104 		lea	rax, 4[r9]	# tmp456,
 10223              	.LVL583:
 124:sieve_extend.c ****     return index;
 10224              		.loc 1 124 58 is_stmt 1 view .LVU3482
 10225              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10226              		.loc 1 124 21 is_stmt 0 view .LVU3483
 10227 3a96 4989C2   		mov	r10, rax	# tmp555, tmp456
 10228              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10229              		.loc 1 124 63 view .LVU3484
 10230 3a99 4889C6   		mov	rsi, rax	# prime, tmp456
 124:sieve_extend.c ****     return index;
 10231              		.loc 1 124 11 is_stmt 1 view .LVU3485
 10232              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10233              		.loc 1 124 21 is_stmt 0 view .LVU3486
 10234 3a9c 49C1EA06 		shr	r10, 6	# tmp555,
 10235              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10236              		.loc 1 124 12 view .LVU3487
 10237 3aa0 4E8B1CD3 		mov	r11, QWORD PTR [rbx+r10*8]	# *_34, *_34
 10238              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10239              		.loc 1 124 11 view .LVU3488
 10240 3aa4 490FA3C3 		bt	r11, rax	# *_34, tmp456
 10241 3aa8 7366     		jnc	.L914	#,
 10242 3aaa 498D4105 		lea	rax, 5[r9]	# tmp456,
 10243              	.LVL584:
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc7rm34x.s 			page 282


 10244              		.loc 1 124 58 is_stmt 1 view .LVU3489
 10245              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10246              		.loc 1 124 21 is_stmt 0 view .LVU3490
 10247 3aae 4889C7   		mov	rdi, rax	# tmp559, tmp456
 10248              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10249              		.loc 1 124 63 view .LVU3491
 10250 3ab1 4889C6   		mov	rsi, rax	# prime, tmp456
 124:sieve_extend.c ****     return index;
 10251              		.loc 1 124 11 is_stmt 1 view .LVU3492
 10252              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10253              		.loc 1 124 21 is_stmt 0 view .LVU3493
 10254 3ab4 48C1EF06 		shr	rdi, 6	# tmp559,
 10255              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10256              		.loc 1 124 12 view .LVU3494
 10257 3ab8 4C8B34FB 		mov	r14, QWORD PTR [rbx+rdi*8]	# *_34, *_34
 10258              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10259              		.loc 1 124 11 view .LVU3495
 10260 3abc 490FA3C6 		bt	r14, rax	# *_34, tmp456
 10261 3ac0 734E     		jnc	.L914	#,
 10262 3ac2 498D4106 		lea	rax, 6[r9]	# tmp456,
 10263              	.LVL585:
 124:sieve_extend.c ****     return index;
 10264              		.loc 1 124 58 is_stmt 1 view .LVU3496
 10265              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10266              		.loc 1 124 21 is_stmt 0 view .LVU3497
 10267 3ac6 4889C1   		mov	rcx, rax	# tmp563, tmp456
 10268              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10269              		.loc 1 124 63 view .LVU3498
 10270 3ac9 4889C6   		mov	rsi, rax	# prime, tmp456
 124:sieve_extend.c ****     return index;
 10271              		.loc 1 124 11 is_stmt 1 view .LVU3499
 10272              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10273              		.loc 1 124 21 is_stmt 0 view .LVU3500
 10274 3acc 48C1E906 		shr	rcx, 6	# tmp563,
 10275              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10276              		.loc 1 124 12 view .LVU3501
 10277 3ad0 4C8B24CB 		mov	r12, QWORD PTR [rbx+rcx*8]	# *_34, *_34
 10278              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10279              		.loc 1 124 11 view .LVU3502
 10280 3ad4 490FA3C4 		bt	r12, rax	# *_34, tmp456
 10281 3ad8 7336     		jnc	.L914	#,
 10282 3ada 498D4107 		lea	rax, 7[r9]	# tmp456,
 10283              	.LVL586:
 124:sieve_extend.c ****     return index;
 10284              		.loc 1 124 11 view .LVU3503
 10285 3ade E928FFFF 		jmp	.L728	#
 10285      FF
GAS LISTING /tmp/cc7rm34x.s 			page 283


 10286              	.LVL587:
 10287              	.L711:
 124:sieve_extend.c ****     return index;
 10288              		.loc 1 124 11 view .LVU3504
 10289              	.LBE579:
 10290              	.LBE581:
 10291              	.LBE532:
 10292              	.LBB587:
 10293              	.LBB516:
 10294              	.LBB509:
 10295              	.LBB504:
 10296              	.LBB502:
 949:sieve_extend.c **** }
 10297              		.loc 1 949 37 is_stmt 1 view .LVU3505
 10298 3ae3 E818E2FF 		call	extendSieve_aligned	#
 10298      FF
 10299              	.LVL588:
 949:sieve_extend.c **** }
 10300              		.loc 1 949 37 is_stmt 0 view .LVU3506
 10301 3ae8 4C897C24 		mov	QWORD PTR 32[rsp], r15	# %sfp, patternsize_bits
 10301      20
 10302 3aed E9BBFAFF 		jmp	.L708	#
 10302      FF
 10303              	.LVL589:
 10304              	.L944:
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10305              		.loc 1 947 37 is_stmt 1 view .LVU3507
 10306 3af2 E889E7FF 		call	extendSieve_shiftleft	#
 10306      FF
 10307              	.LVL590:
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10308              		.loc 1 947 37 is_stmt 0 view .LVU3508
 10309 3af7 4C897C24 		mov	QWORD PTR 32[rsp], r15	# %sfp, patternsize_bits
 10309      20
 10310 3afc E9ACFAFF 		jmp	.L708	#
 10310      FF
 10311              	.LVL591:
 10312              	.L946:
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10313              		.loc 1 947 37 view .LVU3509
 10314              	.LBE502:
 10315              	.LBE504:
 10316              	.LBE509:
 10317              	.LBE516:
 10318              	.LBE587:
 10319              	.LBB588:
 10320              	.LBB526:
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10321              		.loc 1 948 37 is_stmt 1 view .LVU3510
 10322 3b01 E8BACBFF 		call	extendSieve_shiftright_ivdep	#
 10322      FF
 10323              	.LVL592:
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10324              		.loc 1 948 37 is_stmt 0 view .LVU3511
 10325              		.p2align 4,,3
 10326 3b06 E9A3FEFF 		jmp	.L724	#
 10326      FF
GAS LISTING /tmp/cc7rm34x.s 			page 284


 10327              	.LVL593:
 10328 3b0b 0F1F4400 		.p2align 4,,7
 10328      00
 10329              		.p2align 3
 10330              	.L914:
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10331              		.loc 1 948 37 view .LVU3512
 10332 3b10 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp456
 10332      20
 10333 3b15 488D4001 		lea	rax, 1[rax]	# tmp456,
 10334              	.LVL594:
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10335              		.loc 1 948 37 view .LVU3513
 10336 3b19 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, prime
 10336      28
 10337 3b1e 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp456
 10337      20
 10338              	.LVL595:
 10339              	.L727:
 948:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10340              		.loc 1 948 37 view .LVU3514
 10341              	.LBE526:
 10342              	.LBE588:
 10343              	.LBB589:
 10344              	.LBB582:
 10345              	.LBB580:
 125:sieve_extend.c **** }
 10346              		.loc 1 125 5 is_stmt 1 view .LVU3515
 125:sieve_extend.c **** }
 10347              		.loc 1 125 5 is_stmt 0 view .LVU3516
 10348              	.LBE580:
 10349              	.LBE582:
1088:sieve_extend.c ****     } 
 10350              		.loc 1 1088 9 is_stmt 1 view .LVU3517
 10351              	.LBB583:
 10352              	.LBB573:
 10353              	# sieve_extend.c:954:     counter_t start = prime * prime * 2 + prime * 2;
 954:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10354              		.loc 1 954 15 is_stmt 0 view .LVU3518
 10355 3b23 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# tmp370, %sfp
 10355      20
 10356 3b28 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# prime, %sfp
 10356      28
 10357              	.LBE573:
 10358              	.LBE583:
 10359              	# sieve_extend.c:1088:         sieve_block_stripe(sieve, block_start, block_stop, prime);
1088:sieve_extend.c ****     } 
 10360              		.loc 1 1088 9 view .LVU3519
 10361 3b2d 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 10361      30
 10362              	.LBB584:
 10363              	.LBB574:
 10364              	# sieve_extend.c:954:     counter_t start = prime * prime * 2 + prime * 2;
 954:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10365              		.loc 1 954 15 view .LVU3520
 10366 3b32 480FAFF1 		imul	rsi, rcx	# tmp370, prime
 10367              	.LBE574:
GAS LISTING /tmp/cc7rm34x.s 			page 285


 10368              	.LBE584:
 10369              	# sieve_extend.c:1088:         sieve_block_stripe(sieve, block_start, block_stop, prime);
1088:sieve_extend.c ****     } 
 10370              		.loc 1 1088 9 view .LVU3521
 10371 3b36 488B1B   		mov	rbx, QWORD PTR [rbx]	# _30, MEM[(uint64_t * *)sieve_91]
 10372              	.LVL596:
 10373              	.LBB585:
 10374              	.LBI533:
 952:sieve_extend.c ****     counter_t prime = prime_start;
 10375              		.loc 1 952 13 is_stmt 1 view .LVU3522
 10376              	.LBB575:
 953:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 10377              		.loc 1 953 5 view .LVU3523
 954:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10378              		.loc 1 954 5 view .LVU3524
 10379              	# sieve_extend.c:954:     counter_t start = prime * prime * 2 + prime * 2;
 954:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 10380              		.loc 1 954 15 is_stmt 0 view .LVU3525
 10381 3b39 4801F6   		add	rsi, rsi	# index
 10382              	.LVL597:
 955:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 10383              		.loc 1 955 5 is_stmt 1 view .LVU3526
 956:sieve_extend.c **** 
 10384              		.loc 1 956 5 view .LVU3527
 958:sieve_extend.c ****     
 10385              		.loc 1 958 5 view .LVU3528
 996:sieve_extend.c ****         step  = prime * 2 + 1;
 10386              		.loc 1 996 5 view .LVU3529
 996:sieve_extend.c ****         step  = prime * 2 + 1;
 10387              		.loc 1 996 11 view .LVU3530
 10388 3b3c 4839F5   		cmp	rbp, rsi	# block_stop, index
 10389 3b3f 0F823801 		jb	.L734	#,
 10389      0000
 10390 3b45 66662E0F 		.p2align 4
 10390      1F840000 
 10390      000000
 10391              		.p2align 3
 10392              	.L729:
 997:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 10393              		.loc 1 997 9 view .LVU3531
 10394              	# sieve_extend.c:997:         step  = prime * 2 + 1;
 997:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 10395              		.loc 1 997 15 is_stmt 0 view .LVU3532
 10396 3b50 4C8D4C09 		lea	r9, 1[rcx+rcx]	# step,
 10396      01
 10397              	.LVL598:
 998:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10398              		.loc 1 998 9 is_stmt 1 view .LVU3533
 10399              	# sieve_extend.c:998:         if unlikely(step > VECTORSTEP_FASTER) break;
 998:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10400              		.loc 1 998 12 is_stmt 0 view .LVU3534
 10401 3b55 4C3B0D00 		cmp	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 10401      000000
 10402 3b5c 0F874601 		ja	.L947	#,
 10402      0000
 999:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10403              		.loc 1 999 9 is_stmt 1 view .LVU3535
GAS LISTING /tmp/cc7rm34x.s 			page 286


 10404              	# sieve_extend.c:999:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 999:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10405              		.loc 1 999 12 is_stmt 0 view .LVU3536
 10406 3b62 4C8D7101 		lea	r14, 1[rcx]	# _168,
 10407 3b66 4D39FE   		cmp	r14, r15	# _168, block_start
 10408 3b69 7710     		ja	.L735	#,
 999:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10409              		.loc 1 999 47 is_stmt 1 view .LVU3537
 10410              	# sieve_extend.c:999:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 999:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10411              		.loc 1 999 67 is_stmt 0 view .LVU3538
 10412 3b6b 498D040F 		lea	rax, [r15+rcx]	# _172,
 10413              	# sieve_extend.c:999:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 999:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10414              		.loc 1 999 108 view .LVU3539
 10415 3b6f 31D2     		xor	edx, edx	# tmp374
 10416              	# sieve_extend.c:999:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 999:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10417              		.loc 1 999 75 view .LVU3540
 10418 3b71 488D3408 		lea	rsi, [rax+rcx]	# tmp372,
 10419              	.LVL599:
 10420              	# sieve_extend.c:999:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 999:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10421              		.loc 1 999 108 view .LVU3541
 10422 3b75 49F7F1   		div	r9	# step
 10423              	.LVL600:
 10424              	# sieve_extend.c:999:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 999:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10425              		.loc 1 999 53 view .LVU3542
 10426 3b78 4829D6   		sub	rsi, rdx	# index, tmp374
 10427              	.LVL601:
 10428              	.L735:
1000:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 10429              		.loc 1 1000 9 is_stmt 1 view .LVU3543
 10430 3b7b 4889E9   		mov	rcx, rbp	#, block_stop
 10431 3b7e 4C89CA   		mov	rdx, r9	#, step
 10432 3b81 4889DF   		mov	rdi, rbx	#, _30
 10433 3b84 E8A7D7FF 		call	setBitsTrue_largeRange_vector	#
 10433      FF
 10434              	.LVL602:
1001:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 10435              		.loc 1 1001 9 view .LVU3544
 10436              	.LBB554:
 10437              	.LBI554:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 10438              		.loc 1 123 25 view .LVU3545
 10439              	.LBB555:
 124:sieve_extend.c ****     return index;
 10440              		.loc 1 124 5 view .LVU3546
 124:sieve_extend.c ****     return index;
 10441              		.loc 1 124 11 view .LVU3547
 10442              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10443              		.loc 1 124 21 is_stmt 0 view .LVU3548
 10444 3b89 4D89F0   		mov	r8, r14	# tmp376, _168
 10445              	.LBE555:
 10446              	.LBE554:
GAS LISTING /tmp/cc7rm34x.s 			page 287


 10447              	# sieve_extend.c:999:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 999:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 10448              		.loc 1 999 12 view .LVU3549
 10449 3b8c 4C89F1   		mov	rcx, r14	# prime, _168
 10450              	.LBB557:
 10451              	.LBB556:
 10452              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10453              		.loc 1 124 21 view .LVU3550
 10454 3b8f 49C1E806 		shr	r8, 6	# tmp376,
 10455              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10456              		.loc 1 124 12 view .LVU3551
 10457 3b93 4E8B14C3 		mov	r10, QWORD PTR [rbx+r8*8]	# *_70, *_70
 10458              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10459              		.loc 1 124 11 view .LVU3552
 10460 3b97 4D0FA3F2 		bt	r10, r14	# *_70, _168
 10461 3b9b 0F83BF00 		jnc	.L736	#,
 10461      0000
 10462              	.LVL603:
 10463              	.L737:
 124:sieve_extend.c ****     return index;
 10464              		.loc 1 124 58 is_stmt 1 view .LVU3553
 10465              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10466              		.loc 1 124 63 is_stmt 0 view .LVU3554
 10467 3ba1 4C8D5901 		lea	r11, 1[rcx]	# tmp464,
 10468              	.LVL604:
 10469              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10470              		.loc 1 124 21 view .LVU3555
 10471 3ba5 4C89DF   		mov	rdi, r11	# tmp381, prime
 10472              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10473              		.loc 1 124 63 view .LVU3556
 10474 3ba8 4C89D9   		mov	rcx, r11	# prime, tmp464
 124:sieve_extend.c ****     return index;
 10475              		.loc 1 124 11 is_stmt 1 view .LVU3557
 10476              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10477              		.loc 1 124 21 is_stmt 0 view .LVU3558
 10478 3bab 48C1EF06 		shr	rdi, 6	# tmp381,
 10479              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10480              		.loc 1 124 12 view .LVU3559
 10481 3baf 488B34FB 		mov	rsi, QWORD PTR [rbx+rdi*8]	# *_181, *_181
 10482              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10483              		.loc 1 124 11 view .LVU3560
 10484 3bb3 4C0FA3DE 		bt	rsi, r11	# *_181, prime
 10485 3bb7 0F83A300 		jnc	.L736	#,
 10485      0000
 124:sieve_extend.c ****     return index;
 10486              		.loc 1 124 58 is_stmt 1 view .LVU3561
 10487              	.LVL605:
 10488              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cc7rm34x.s 			page 288


 124:sieve_extend.c ****     return index;
 10489              		.loc 1 124 63 is_stmt 0 view .LVU3562
 10490 3bbd 4883C101 		add	rcx, 1	# prime,
 10491              	.LVL606:
 124:sieve_extend.c ****     return index;
 10492              		.loc 1 124 11 is_stmt 1 view .LVU3563
 10493              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10494              		.loc 1 124 21 is_stmt 0 view .LVU3564
 10495 3bc1 4989CC   		mov	r12, rcx	# tmp515, prime
 10496 3bc4 49C1EC06 		shr	r12, 6	# tmp515,
 10497              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10498              		.loc 1 124 12 view .LVU3565
 10499 3bc8 4E8B0CE3 		mov	r9, QWORD PTR [rbx+r12*8]	# *_181, *_181
 10500              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10501              		.loc 1 124 11 view .LVU3566
 10502 3bcc 490FA3C9 		bt	r9, rcx	# *_181, prime
 10503 3bd0 0F838A00 		jnc	.L736	#,
 10503      0000
 124:sieve_extend.c ****     return index;
 10504              		.loc 1 124 58 is_stmt 1 view .LVU3567
 10505              	.LVL607:
 10506              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10507              		.loc 1 124 63 is_stmt 0 view .LVU3568
 10508 3bd6 498D4B02 		lea	rcx, 2[r11]	# prime,
 10509              	.LVL608:
 124:sieve_extend.c ****     return index;
 10510              		.loc 1 124 11 is_stmt 1 view .LVU3569
 10511              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10512              		.loc 1 124 21 is_stmt 0 view .LVU3570
 10513 3bda 4989CE   		mov	r14, rcx	# tmp519, prime
 10514 3bdd 49C1EE06 		shr	r14, 6	# tmp519,
 10515              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10516              		.loc 1 124 12 view .LVU3571
 10517 3be1 4A8B04F3 		mov	rax, QWORD PTR [rbx+r14*8]	# *_181, *_181
 10518              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10519              		.loc 1 124 11 view .LVU3572
 10520 3be5 480FA3C8 		bt	rax, rcx	# *_181, prime
 10521 3be9 7375     		jnc	.L736	#,
 124:sieve_extend.c ****     return index;
 10522              		.loc 1 124 58 is_stmt 1 view .LVU3573
 10523              	.LVL609:
 10524              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10525              		.loc 1 124 63 is_stmt 0 view .LVU3574
 10526 3beb 498D4B03 		lea	rcx, 3[r11]	# prime,
 10527              	.LVL610:
 124:sieve_extend.c ****     return index;
 10528              		.loc 1 124 11 is_stmt 1 view .LVU3575
 10529              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc7rm34x.s 			page 289


 10530              		.loc 1 124 21 is_stmt 0 view .LVU3576
 10531 3bef 4889CA   		mov	rdx, rcx	# tmp523, prime
 10532 3bf2 48C1EA06 		shr	rdx, 6	# tmp523,
 10533              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10534              		.loc 1 124 12 view .LVU3577
 10535 3bf6 4C8B04D3 		mov	r8, QWORD PTR [rbx+rdx*8]	# *_181, *_181
 10536              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10537              		.loc 1 124 11 view .LVU3578
 10538 3bfa 490FA3C8 		bt	r8, rcx	# *_181, prime
 10539 3bfe 7360     		jnc	.L736	#,
 124:sieve_extend.c ****     return index;
 10540              		.loc 1 124 58 is_stmt 1 view .LVU3579
 10541              	.LVL611:
 10542              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10543              		.loc 1 124 63 is_stmt 0 view .LVU3580
 10544 3c00 498D4B04 		lea	rcx, 4[r11]	# prime,
 10545              	.LVL612:
 124:sieve_extend.c ****     return index;
 10546              		.loc 1 124 11 is_stmt 1 view .LVU3581
 10547              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10548              		.loc 1 124 21 is_stmt 0 view .LVU3582
 10549 3c04 4989CA   		mov	r10, rcx	# tmp527, prime
 10550 3c07 49C1EA06 		shr	r10, 6	# tmp527,
 10551              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10552              		.loc 1 124 12 view .LVU3583
 10553 3c0b 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_181, *_181
 10554              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10555              		.loc 1 124 11 view .LVU3584
 10556 3c0f 480FA3CF 		bt	rdi, rcx	# *_181, prime
 10557 3c13 734B     		jnc	.L736	#,
 124:sieve_extend.c ****     return index;
 10558              		.loc 1 124 58 is_stmt 1 view .LVU3585
 10559              	.LVL613:
 10560              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10561              		.loc 1 124 63 is_stmt 0 view .LVU3586
 10562 3c15 498D4B05 		lea	rcx, 5[r11]	# prime,
 10563              	.LVL614:
 124:sieve_extend.c ****     return index;
 10564              		.loc 1 124 11 is_stmt 1 view .LVU3587
 10565              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10566              		.loc 1 124 21 is_stmt 0 view .LVU3588
 10567 3c19 4889CE   		mov	rsi, rcx	# tmp531, prime
 10568 3c1c 48C1EE06 		shr	rsi, 6	# tmp531,
 10569              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10570              		.loc 1 124 12 view .LVU3589
 10571 3c20 4C8B24F3 		mov	r12, QWORD PTR [rbx+rsi*8]	# *_181, *_181
 10572              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc7rm34x.s 			page 290


 10573              		.loc 1 124 11 view .LVU3590
 10574 3c24 490FA3CC 		bt	r12, rcx	# *_181, prime
 10575 3c28 7336     		jnc	.L736	#,
 124:sieve_extend.c ****     return index;
 10576              		.loc 1 124 58 is_stmt 1 view .LVU3591
 10577              	.LVL615:
 10578              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10579              		.loc 1 124 63 is_stmt 0 view .LVU3592
 10580 3c2a 498D4B06 		lea	rcx, 6[r11]	# prime,
 10581              	.LVL616:
 124:sieve_extend.c ****     return index;
 10582              		.loc 1 124 11 is_stmt 1 view .LVU3593
 10583              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10584              		.loc 1 124 21 is_stmt 0 view .LVU3594
 10585 3c2e 4989C9   		mov	r9, rcx	# tmp535, prime
 10586 3c31 49C1E906 		shr	r9, 6	# tmp535,
 10587              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10588              		.loc 1 124 12 view .LVU3595
 10589 3c35 4E8B34CB 		mov	r14, QWORD PTR [rbx+r9*8]	# *_181, *_181
 10590              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10591              		.loc 1 124 11 view .LVU3596
 10592 3c39 490FA3CE 		bt	r14, rcx	# *_181, prime
 10593 3c3d 7321     		jnc	.L736	#,
 124:sieve_extend.c ****     return index;
 10594              		.loc 1 124 58 is_stmt 1 view .LVU3597
 10595              	.LVL617:
 10596              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10597              		.loc 1 124 63 is_stmt 0 view .LVU3598
 10598 3c3f 498D4B07 		lea	rcx, 7[r11]	# prime,
 10599              	.LVL618:
 124:sieve_extend.c ****     return index;
 10600              		.loc 1 124 11 is_stmt 1 view .LVU3599
 10601              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10602              		.loc 1 124 21 is_stmt 0 view .LVU3600
 10603 3c43 4989CB   		mov	r11, rcx	# tmp539, prime
 10604 3c46 49C1EB06 		shr	r11, 6	# tmp539,
 10605              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10606              		.loc 1 124 12 view .LVU3601
 10607 3c4a 4A8B04DB 		mov	rax, QWORD PTR [rbx+r11*8]	# *_181, *_181
 10608              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 10609              		.loc 1 124 11 view .LVU3602
 10610 3c4e 480FA3C8 		bt	rax, rcx	# *_181, prime
 10611 3c52 0F8249FF 		jc	.L737	#,
 10611      FFFF
 10612              	.LVL619:
 10613 3c58 0F1F8400 		.p2align 4
 10613      00000000 
 10614              		.p2align 3
 10615              	.L736:
GAS LISTING /tmp/cc7rm34x.s 			page 291


 125:sieve_extend.c **** }
 10616              		.loc 1 125 5 is_stmt 1 view .LVU3603
 125:sieve_extend.c **** }
 10617              		.loc 1 125 5 is_stmt 0 view .LVU3604
 10618              	.LBE556:
 10619              	.LBE557:
1002:sieve_extend.c ****     }
 10620              		.loc 1 1002 9 is_stmt 1 view .LVU3605
 10621              	# sieve_extend.c:1002:         start = prime * prime * 2 + prime * 2;
1002:sieve_extend.c ****     }
 10622              		.loc 1 1002 35 is_stmt 0 view .LVU3606
 10623 3c60 488D7101 		lea	rsi, 1[rcx]	# _216,
 10624              	# sieve_extend.c:1002:         start = prime * prime * 2 + prime * 2;
1002:sieve_extend.c ****     }
 10625              		.loc 1 1002 15 view .LVU3607
 10626 3c64 480FAFF1 		imul	rsi, rcx	# tmp387, prime
 10627              	.LVL620:
1002:sieve_extend.c ****     }
 10628              		.loc 1 1002 15 view .LVU3608
 10629 3c68 4801F6   		add	rsi, rsi	# index
 10630              	.LVL621:
 996:sieve_extend.c ****         step  = prime * 2 + 1;
 10631              		.loc 1 996 11 is_stmt 1 view .LVU3609
 10632 3c6b 4839F5   		cmp	rbp, rsi	# block_stop, index
 10633 3c6e 0F83DCFE 		jnb	.L729	#,
 10633      FFFF
 10634              	.LVL622:
 10635              	.L935:
 996:sieve_extend.c ****         step  = prime * 2 + 1;
 10636              		.loc 1 996 11 is_stmt 0 view .LVU3610
 10637 3c74 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 10637      30
 10638              	.LVL623:
 996:sieve_extend.c ****         step  = prime * 2 + 1;
 10639              		.loc 1 996 11 view .LVU3611
 10640 3c79 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_91->bits
 10641              	.L734:
 10642              	.LVL624:
 996:sieve_extend.c ****         step  = prime * 2 + 1;
 10643              		.loc 1 996 11 view .LVU3612
 10644              	.LBE575:
 10645              	.LBE585:
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10646              		.loc 1 1085 91 is_stmt 1 view .LVU3613
 10647              	# sieve_extend.c:1085:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10648              		.loc 1 1085 103 is_stmt 0 view .LVU3614
 10649 3c7d 4C8B4C24 		mov	r9, QWORD PTR 64[rsp]	# blocksize, %sfp
 10649      40
 10650 3c82 4D01CF   		add	r15, r9	# block_start, blocksize
 10651              	.LVL625:
 10652              	# sieve_extend.c:1085:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10653              		.loc 1 1085 128 view .LVU3615
 10654 3c85 4C01CD   		add	rbp, r9	# block_stop, blocksize
 10655              	.LVL626:
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
GAS LISTING /tmp/cc7rm34x.s 			page 292


 10656              		.loc 1 1085 63 is_stmt 1 view .LVU3616
 10657              	# sieve_extend.c:1085:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1085:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 10658              		.loc 1 1085 5 is_stmt 0 view .LVU3617
 10659 3c88 4C39FA   		cmp	rdx, r15	# _8, block_start
 10660 3c8b 0F834FFD 		jnb	.L730	#,
 10660      FFFF
 10661              	.LBE589:
 10662              	# sieve_extend.c:1092: }
1092:sieve_extend.c **** 
 10663              		.loc 1 1092 1 view .LVU3618
 10664 3c91 488B4424 		mov	rax, QWORD PTR 48[rsp]	#, %sfp
 10664      30
 10665 3c96 488D6424 		lea	rsp, 88[rsp]	#,
 10665      58
 10666              		.cfi_remember_state
 10667              		.cfi_def_cfa_offset 56
 10668 3c9b 5B       		pop	rbx	#
 10669              		.cfi_def_cfa_offset 48
 10670 3c9c 5D       		pop	rbp	#
 10671              		.cfi_def_cfa_offset 40
 10672              	.LVL627:
1092:sieve_extend.c **** 
 10673              		.loc 1 1092 1 view .LVU3619
 10674 3c9d 415C     		pop	r12	#
 10675              		.cfi_def_cfa_offset 32
 10676 3c9f 415D     		pop	r13	#
 10677              		.cfi_def_cfa_offset 24
 10678 3ca1 415E     		pop	r14	#
 10679              		.cfi_def_cfa_offset 16
 10680 3ca3 415F     		pop	r15	#
 10681              		.cfi_def_cfa_offset 8
 10682              	.LVL628:
1092:sieve_extend.c **** 
 10683              		.loc 1 1092 1 view .LVU3620
 10684 3ca5 C3       		ret	
 10685              	.LVL629:
 10686              		.p2align 4,,7
 10687 3ca6 6690     		.p2align 3
 10688              	.L947:
 10689              		.cfi_restore_state
 10690              	.LBB590:
 10691              	.LBB586:
 10692              	.LBB576:
1005:sieve_extend.c ****         step  = prime * 2 + 1;
 10693              		.loc 1 1005 11 is_stmt 1 view .LVU3621
 10694 3ca8 4839F5   		cmp	rbp, rsi	# block_stop, index
 10695 3cab 72C7     		jb	.L935	#,
 10696              	.LBB558:
 10697              	.LBB551:
 10698              	.LBB548:
 10699              	.LBB538:
 10700              	.LBB539:
 10701              	# sieve_extend.c:177:    const counter_t range_stop_word = wordindex(range_stop);
 177:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10702              		.loc 1 177 20 is_stmt 0 view .LVU3622
 10703 3cad 4889EA   		mov	rdx, rbp	# range_stop_word, block_stop
GAS LISTING /tmp/cc7rm34x.s 			page 293


 10704              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 10705              		.loc 1 203 29 view .LVU3623
 10706 3cb0 4189E8   		mov	r8d, ebp	# tmp389, block_stop
 10707              	# sieve_extend.c:177:    const counter_t range_stop_word = wordindex(range_stop);
 177:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10708              		.loc 1 177 20 view .LVU3624
 10709 3cb3 48C1EA06 		shr	rdx, 6	# range_stop_word,
 10710              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 10711              		.loc 1 203 29 view .LVU3625
 10712 3cb7 41F7D0   		not	r8d	# tmp389
 10713 3cba 49C7C2FF 		mov	r10, -1	# tmp788,
 10713      FFFFFF
 10714              	# sieve_extend.c:196:    register const bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 196:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10715              		.loc 1 196 41 view .LVU3626
 10716 3cc1 4C8D0CD3 		lea	r9, [rbx+rdx*8]	# range_stop_ptr,
 10717              	.LVL630:
 10718              	# sieve_extend.c:177:    const counter_t range_stop_word = wordindex(range_stop);
 177:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10719              		.loc 1 177 20 view .LVU3627
 10720 3cc5 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, range_stop_word
 10720      18
 10721              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 10722              		.loc 1 203 29 view .LVU3628
 10723 3cca C4C2BBF7 		shrx	rdi, r10, r8	# _325, tmp788, tmp389
 10723      FA
 10724 3ccf 48897C24 		mov	QWORD PTR 16[rsp], rdi	# %sfp, _325
 10724      10
 10725 3cd4 4C8D5901 		lea	r11, 1[rcx]	# _216,
 10726              	.LVL631:
 10727 3cd8 0F1F8400 		.p2align 4
 10727      00000000 
 10728              		.p2align 3
 10729              	.L752:
 203:sieve_extend.c ****    }
 10730              		.loc 1 203 29 view .LVU3629
 10731              	.LBE539:
 10732              	.LBE538:
 10733              	.LBE548:
 10734              	.LBE551:
 10735              	.LBE558:
1006:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10736              		.loc 1 1006 9 is_stmt 1 view .LVU3630
 10737              	# sieve_extend.c:1007:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1007:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10738              		.loc 1 1007 12 is_stmt 0 view .LVU3631
 10739 3ce0 4D39FB   		cmp	r11, r15	# _216, block_start
 10740              	# sieve_extend.c:1006:         step  = prime * 2 + 1;
1006:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 10741              		.loc 1 1006 15 view .LVU3632
 10742 3ce3 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 10742      01
 10743              	.LVL632:
1007:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
GAS LISTING /tmp/cc7rm34x.s 			page 294


 10744              		.loc 1 1007 9 is_stmt 1 view .LVU3633
 10745              	# sieve_extend.c:1007:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1007:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10746              		.loc 1 1007 12 is_stmt 0 view .LVU3634
 10747 3ce8 7710     		ja	.L738	#,
1007:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10748              		.loc 1 1007 47 is_stmt 1 view .LVU3635
 10749              	# sieve_extend.c:1007:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1007:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10750              		.loc 1 1007 67 is_stmt 0 view .LVU3636
 10751 3cea 498D040F 		lea	rax, [r15+rcx]	# _198,
 10752              	# sieve_extend.c:1007:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1007:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10753              		.loc 1 1007 108 view .LVU3637
 10754 3cee 31D2     		xor	edx, edx	# tmp395
 10755              	# sieve_extend.c:1007:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1007:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10756              		.loc 1 1007 75 view .LVU3638
 10757 3cf0 488D3408 		lea	rsi, [rax+rcx]	# tmp393,
 10758              	.LVL633:
 10759              	# sieve_extend.c:1007:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1007:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10760              		.loc 1 1007 108 view .LVU3639
 10761 3cf4 49F7F2   		div	r10	# step
 10762              	.LVL634:
 10763              	# sieve_extend.c:1007:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1007:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 10764              		.loc 1 1007 53 view .LVU3640
 10765 3cf7 4829D6   		sub	rsi, rdx	# index, tmp395
 10766              	.LVL635:
 10767              	.L738:
1008:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 10768              		.loc 1 1008 9 is_stmt 1 view .LVU3641
 10769              	# sieve_extend.c:1008:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
1008:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 10770              		.loc 1 1008 12 is_stmt 0 view .LVU3642
 10771 3cfa 4D89D6   		mov	r14, r10	# tmp397, step
 10772 3cfd 49C1E606 		sal	r14, 6	# tmp397,
 10773 3d01 4901F6   		add	r14, rsi	# _204, index
 10774 3d04 4C39F5   		cmp	rbp, r14	# block_stop, _204
 10775 3d07 0F828902 		jb	.L936	#,
 10775      0000
 10776              	.LVL636:
 10777              	.LBB559:
 10778              	.LBB552:
 10779              	.LBB549:
 428:sieve_extend.c ****         #if __APPLE__
 10780              		.loc 1 428 50 is_stmt 1 view .LVU3643
 10781              	# sieve_extend.c:428:     for (register counter_t index = range_start; index < range_stop_unique; i
 428:sieve_extend.c ****         #if __APPLE__
 10782              		.loc 1 428 5 is_stmt 0 view .LVU3644
 10783 3d0d 4C39F6   		cmp	rsi, r14	# index, _204
 10784 3d10 0F83CF01 		jnb	.L750	#,
 10784      0000
 10785              	.LBB544:
 10786              	.LBB540:
 10787              	# sieve_extend.c:179:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
GAS LISTING /tmp/cc7rm34x.s 			page 295


 179:sieve_extend.c **** 
 10788              		.loc 1 179 133 view .LVU3645
 10789 3d16 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# range_stop_word, %sfp
 10789      18
 10790              	# sieve_extend.c:179:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 179:sieve_extend.c **** 
 10791              		.loc 1 179 110 view .LVU3646
 10792 3d1b 4F8D0492 		lea	r8, [r10+r10*4]	# tmp407,
 10793 3d1f 4C89D7   		mov	rdi, r10	# _729, step
 10794              	# sieve_extend.c:185:        index_ptr+=step;
 185:sieve_extend.c ****        *index_ptr |= mask;
 10795              		.loc 1 185 17 view .LVU3647
 10796 3d22 4A8D14D5 		lea	rdx, 0[0+r10*8]	# _293,
 10796      00000000 
 10797              	# sieve_extend.c:179:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 179:sieve_extend.c **** 
 10798              		.loc 1 179 133 view .LVU3648
 10799 3d2a 4989CC   		mov	r12, rcx	# tmp409, range_stop_word
 10800 3d2d 4D29C4   		sub	r12, r8	# tmp409, tmp407
 10801              	# sieve_extend.c:179:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 179:sieve_extend.c **** 
 10802              		.loc 1 179 53 view .LVU3649
 10803 3d30 4C39C1   		cmp	rcx, r8	# range_stop_word, tmp407
 10804 3d33 4E8D24E3 		lea	r12, [rbx+r12*8]	# tmp411,
 10805 3d37 4C0F46E3 		cmovbe	r12, rbx	# _30,, fast_loop_ptr
 10806 3d3b 48C1E704 		sal	rdi, 4	# _729,
 10807 3d3f 49C1E003 		sal	r8, 3	# tmp415,
 10808 3d43 48897C24 		mov	QWORD PTR 8[rsp], rdi	# %sfp, _729
 10808      08
 10809 3d48 0F1F8400 		.p2align 4
 10809      00000000 
 10810              		.p2align 3
 10811              	.L749:
 179:sieve_extend.c **** 
 10812              		.loc 1 179 53 view .LVU3650
 10813              	.LBE540:
 10814              	.LBE544:
 432:sieve_extend.c ****         #endif
 10815              		.loc 1 432 13 is_stmt 1 view .LVU3651
 10816 3d50 4889F0   		mov	rax, rsi	# tmp418, index
 10817 3d53 C4C2C9F7 		shlx	rcx, r13, rsi	# _278, tmp461, index
 10817      CD
 10818              	.LVL637:
 10819              	.LBB545:
 10820              	.LBI538:
 176:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 10821              		.loc 1 176 20 view .LVU3652
 10822              	.LBB541:
 177:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10823              		.loc 1 177 4 view .LVU3653
 178:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10824              		.loc 1 178 4 view .LVU3654
 10825              	.LBE541:
 10826              	.LBE545:
 10827              	# sieve_extend.c:432:             applyMask_ptr(bitarray, step, range_stop, markmask(index), wordin
 432:sieve_extend.c ****         #endif
 10828              		.loc 1 432 13 is_stmt 0 view .LVU3655
GAS LISTING /tmp/cc7rm34x.s 			page 296


 10829 3d58 48C1E806 		shr	rax, 6	# tmp418,
 10830              	.LBB546:
 10831              	.LBB542:
 10832              	# sieve_extend.c:178:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 178:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10833              		.loc 1 178 78 view .LVU3656
 10834 3d5c 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 10835              	.LVL638:
 179:sieve_extend.c **** 
 10836              		.loc 1 179 4 is_stmt 1 view .LVU3657
 183:sieve_extend.c ****        *index_ptr |= mask;
 10837              		.loc 1 183 10 view .LVU3658
 10838 3d60 4C39E0   		cmp	rax, r12	# index_ptr, fast_loop_ptr
 10839 3d63 0F830701 		jnb	.L744	#,
 10839      0000
 183:sieve_extend.c ****        *index_ptr |= mask;
 10840              		.loc 1 183 10 is_stmt 0 view .LVU3659
 10841 3d69 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# _729, %sfp
 10841      08
 10842 3d6e 4801C7   		add	rdi, rax	# ivtmp.506, index_ptr
 10843              	.L745:
 184:sieve_extend.c ****        index_ptr+=step;
 10844              		.loc 1 184 8 is_stmt 1 view .LVU3660
 10845              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10846              		.loc 1 184 19 is_stmt 0 view .LVU3661
 10847 3d71 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_445, offset: 0B], _278
 185:sieve_extend.c ****        *index_ptr |= mask;
 10848              		.loc 1 185 8 is_stmt 1 view .LVU3662
 10849              	.LVL639:
 186:sieve_extend.c ****        index_ptr+=step;
 10850              		.loc 1 186 8 view .LVU3663
 10851              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10852              		.loc 1 186 19 is_stmt 0 view .LVU3664
 10853 3d74 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_445, index: _293, offset: 0B], _278
 187:sieve_extend.c ****        *index_ptr |= mask;
 10854              		.loc 1 187 8 is_stmt 1 view .LVU3665
 10855              	.LVL640:
 188:sieve_extend.c ****        index_ptr+=step;
 10856              		.loc 1 188 8 view .LVU3666
 10857              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10858              		.loc 1 188 19 is_stmt 0 view .LVU3667
 10859 3d78 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _723, offset: 0B], _278
 189:sieve_extend.c ****        *index_ptr |= mask;
 10860              		.loc 1 189 8 is_stmt 1 view .LVU3668
 10861              	.LVL641:
 190:sieve_extend.c ****        index_ptr+=step;
 10862              		.loc 1 190 8 view .LVU3669
 10863              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10864              		.loc 1 190 19 is_stmt 0 view .LVU3670
 10865 3d7b 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _723, index: _293, offset: 0B], _278
 191:sieve_extend.c ****        *index_ptr |= mask;
 10866              		.loc 1 191 8 is_stmt 1 view .LVU3671
 10867              	.LVL642:
GAS LISTING /tmp/cc7rm34x.s 			page 297


 192:sieve_extend.c ****        index_ptr+=step;
 10868              		.loc 1 192 8 view .LVU3672
 10869 3d7f 4C01C7   		add	rdi, r8	# ivtmp.506, tmp415
 10870              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 10871              		.loc 1 192 19 is_stmt 0 view .LVU3673
 10872 3d82 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_445, index: _293, step: 4, offset: 0B], _278
 193:sieve_extend.c ****    }
 10873              		.loc 1 193 8 is_stmt 1 view .LVU3674
 10874 3d86 4C01C0   		add	rax, r8	# index_ptr, tmp415
 10875              	.LVL643:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10876              		.loc 1 183 10 view .LVU3675
 10877 3d89 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 10878 3d8c 0F86DE00 		jbe	.L744	#,
 10878      0000
 184:sieve_extend.c ****        index_ptr+=step;
 10879              		.loc 1 184 8 view .LVU3676
 10880              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10881              		.loc 1 184 19 is_stmt 0 view .LVU3677
 10882 3d92 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_445, offset: 0B], _278
 185:sieve_extend.c ****        *index_ptr |= mask;
 10883              		.loc 1 185 8 is_stmt 1 view .LVU3678
 10884              	.LVL644:
 186:sieve_extend.c ****        index_ptr+=step;
 10885              		.loc 1 186 8 view .LVU3679
 10886              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10887              		.loc 1 186 19 is_stmt 0 view .LVU3680
 10888 3d95 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_445, index: _293, offset: 0B], _278
 187:sieve_extend.c ****        *index_ptr |= mask;
 10889              		.loc 1 187 8 is_stmt 1 view .LVU3681
 10890              	.LVL645:
 188:sieve_extend.c ****        index_ptr+=step;
 10891              		.loc 1 188 8 view .LVU3682
 10892              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10893              		.loc 1 188 19 is_stmt 0 view .LVU3683
 10894 3d99 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _723, offset: 0B], _278
 189:sieve_extend.c ****        *index_ptr |= mask;
 10895              		.loc 1 189 8 is_stmt 1 view .LVU3684
 10896              	.LVL646:
 190:sieve_extend.c ****        index_ptr+=step;
 10897              		.loc 1 190 8 view .LVU3685
 10898              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10899              		.loc 1 190 19 is_stmt 0 view .LVU3686
 10900 3d9c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _723, index: _293, offset: 0B], _278
 191:sieve_extend.c ****        *index_ptr |= mask;
 10901              		.loc 1 191 8 is_stmt 1 view .LVU3687
 10902              	.LVL647:
 192:sieve_extend.c ****        index_ptr+=step;
 10903              		.loc 1 192 8 view .LVU3688
 10904 3da0 4C01C7   		add	rdi, r8	# ivtmp.506, tmp415
 10905              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/cc7rm34x.s 			page 298


 10906              		.loc 1 192 19 is_stmt 0 view .LVU3689
 10907 3da3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_445, index: _293, step: 4, offset: 0B], _278
 193:sieve_extend.c ****    }
 10908              		.loc 1 193 8 is_stmt 1 view .LVU3690
 10909 3da7 4C01C0   		add	rax, r8	# index_ptr, tmp415
 10910              	.LVL648:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10911              		.loc 1 183 10 view .LVU3691
 10912 3daa 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 10913 3dad 0F86BD00 		jbe	.L744	#,
 10913      0000
 184:sieve_extend.c ****        index_ptr+=step;
 10914              		.loc 1 184 8 view .LVU3692
 10915              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10916              		.loc 1 184 19 is_stmt 0 view .LVU3693
 10917 3db3 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_445, offset: 0B], _278
 185:sieve_extend.c ****        *index_ptr |= mask;
 10918              		.loc 1 185 8 is_stmt 1 view .LVU3694
 10919              	.LVL649:
 186:sieve_extend.c ****        index_ptr+=step;
 10920              		.loc 1 186 8 view .LVU3695
 10921              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10922              		.loc 1 186 19 is_stmt 0 view .LVU3696
 10923 3db6 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_445, index: _293, offset: 0B], _278
 187:sieve_extend.c ****        *index_ptr |= mask;
 10924              		.loc 1 187 8 is_stmt 1 view .LVU3697
 10925              	.LVL650:
 188:sieve_extend.c ****        index_ptr+=step;
 10926              		.loc 1 188 8 view .LVU3698
 10927              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10928              		.loc 1 188 19 is_stmt 0 view .LVU3699
 10929 3dba 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _723, offset: 0B], _278
 189:sieve_extend.c ****        *index_ptr |= mask;
 10930              		.loc 1 189 8 is_stmt 1 view .LVU3700
 10931              	.LVL651:
 190:sieve_extend.c ****        index_ptr+=step;
 10932              		.loc 1 190 8 view .LVU3701
 10933              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10934              		.loc 1 190 19 is_stmt 0 view .LVU3702
 10935 3dbd 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _723, index: _293, offset: 0B], _278
 191:sieve_extend.c ****        *index_ptr |= mask;
 10936              		.loc 1 191 8 is_stmt 1 view .LVU3703
 10937              	.LVL652:
 192:sieve_extend.c ****        index_ptr+=step;
 10938              		.loc 1 192 8 view .LVU3704
 10939 3dc1 4C01C7   		add	rdi, r8	# ivtmp.506, tmp415
 10940              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 10941              		.loc 1 192 19 is_stmt 0 view .LVU3705
 10942 3dc4 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_445, index: _293, step: 4, offset: 0B], _278
 193:sieve_extend.c ****    }
 10943              		.loc 1 193 8 is_stmt 1 view .LVU3706
 10944 3dc8 4C01C0   		add	rax, r8	# index_ptr, tmp415
GAS LISTING /tmp/cc7rm34x.s 			page 299


 10945              	.LVL653:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10946              		.loc 1 183 10 view .LVU3707
 10947 3dcb 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 10948 3dce 0F869C00 		jbe	.L744	#,
 10948      0000
 184:sieve_extend.c ****        index_ptr+=step;
 10949              		.loc 1 184 8 view .LVU3708
 10950              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10951              		.loc 1 184 19 is_stmt 0 view .LVU3709
 10952 3dd4 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_445, offset: 0B], _278
 185:sieve_extend.c ****        *index_ptr |= mask;
 10953              		.loc 1 185 8 is_stmt 1 view .LVU3710
 10954              	.LVL654:
 186:sieve_extend.c ****        index_ptr+=step;
 10955              		.loc 1 186 8 view .LVU3711
 10956              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10957              		.loc 1 186 19 is_stmt 0 view .LVU3712
 10958 3dd7 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_445, index: _293, offset: 0B], _278
 187:sieve_extend.c ****        *index_ptr |= mask;
 10959              		.loc 1 187 8 is_stmt 1 view .LVU3713
 10960              	.LVL655:
 188:sieve_extend.c ****        index_ptr+=step;
 10961              		.loc 1 188 8 view .LVU3714
 10962              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10963              		.loc 1 188 19 is_stmt 0 view .LVU3715
 10964 3ddb 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _723, offset: 0B], _278
 189:sieve_extend.c ****        *index_ptr |= mask;
 10965              		.loc 1 189 8 is_stmt 1 view .LVU3716
 10966              	.LVL656:
 190:sieve_extend.c ****        index_ptr+=step;
 10967              		.loc 1 190 8 view .LVU3717
 10968              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10969              		.loc 1 190 19 is_stmt 0 view .LVU3718
 10970 3dde 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _723, index: _293, offset: 0B], _278
 191:sieve_extend.c ****        *index_ptr |= mask;
 10971              		.loc 1 191 8 is_stmt 1 view .LVU3719
 10972              	.LVL657:
 192:sieve_extend.c ****        index_ptr+=step;
 10973              		.loc 1 192 8 view .LVU3720
 10974 3de2 4C01C7   		add	rdi, r8	# ivtmp.506, tmp415
 10975              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 10976              		.loc 1 192 19 is_stmt 0 view .LVU3721
 10977 3de5 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_445, index: _293, step: 4, offset: 0B], _278
 193:sieve_extend.c ****    }
 10978              		.loc 1 193 8 is_stmt 1 view .LVU3722
 10979 3de9 4C01C0   		add	rax, r8	# index_ptr, tmp415
 10980              	.LVL658:
 183:sieve_extend.c ****        *index_ptr |= mask;
 10981              		.loc 1 183 10 view .LVU3723
 10982 3dec 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 10983 3def 767F     		jbe	.L744	#,
GAS LISTING /tmp/cc7rm34x.s 			page 300


 184:sieve_extend.c ****        index_ptr+=step;
 10984              		.loc 1 184 8 view .LVU3724
 10985              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10986              		.loc 1 184 19 is_stmt 0 view .LVU3725
 10987 3df1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_445, offset: 0B], _278
 185:sieve_extend.c ****        *index_ptr |= mask;
 10988              		.loc 1 185 8 is_stmt 1 view .LVU3726
 10989              	.LVL659:
 186:sieve_extend.c ****        index_ptr+=step;
 10990              		.loc 1 186 8 view .LVU3727
 10991              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10992              		.loc 1 186 19 is_stmt 0 view .LVU3728
 10993 3df4 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_445, index: _293, offset: 0B], _278
 187:sieve_extend.c ****        *index_ptr |= mask;
 10994              		.loc 1 187 8 is_stmt 1 view .LVU3729
 10995              	.LVL660:
 188:sieve_extend.c ****        index_ptr+=step;
 10996              		.loc 1 188 8 view .LVU3730
 10997              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10998              		.loc 1 188 19 is_stmt 0 view .LVU3731
 10999 3df8 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _723, offset: 0B], _278
 189:sieve_extend.c ****        *index_ptr |= mask;
 11000              		.loc 1 189 8 is_stmt 1 view .LVU3732
 11001              	.LVL661:
 190:sieve_extend.c ****        index_ptr+=step;
 11002              		.loc 1 190 8 view .LVU3733
 11003              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11004              		.loc 1 190 19 is_stmt 0 view .LVU3734
 11005 3dfb 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _723, index: _293, offset: 0B], _278
 191:sieve_extend.c ****        *index_ptr |= mask;
 11006              		.loc 1 191 8 is_stmt 1 view .LVU3735
 11007              	.LVL662:
 192:sieve_extend.c ****        index_ptr+=step;
 11008              		.loc 1 192 8 view .LVU3736
 11009 3dff 4C01C7   		add	rdi, r8	# ivtmp.506, tmp415
 11010              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 11011              		.loc 1 192 19 is_stmt 0 view .LVU3737
 11012 3e02 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_445, index: _293, step: 4, offset: 0B], _278
 193:sieve_extend.c ****    }
 11013              		.loc 1 193 8 is_stmt 1 view .LVU3738
 11014 3e06 4C01C0   		add	rax, r8	# index_ptr, tmp415
 11015              	.LVL663:
 183:sieve_extend.c ****        *index_ptr |= mask;
 11016              		.loc 1 183 10 view .LVU3739
 11017 3e09 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 11018 3e0c 7662     		jbe	.L744	#,
 184:sieve_extend.c ****        index_ptr+=step;
 11019              		.loc 1 184 8 view .LVU3740
 11020              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11021              		.loc 1 184 19 is_stmt 0 view .LVU3741
 11022 3e0e 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_445, offset: 0B], _278
GAS LISTING /tmp/cc7rm34x.s 			page 301


 185:sieve_extend.c ****        *index_ptr |= mask;
 11023              		.loc 1 185 8 is_stmt 1 view .LVU3742
 11024              	.LVL664:
 186:sieve_extend.c ****        index_ptr+=step;
 11025              		.loc 1 186 8 view .LVU3743
 11026              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11027              		.loc 1 186 19 is_stmt 0 view .LVU3744
 11028 3e11 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_445, index: _293, offset: 0B], _278
 187:sieve_extend.c ****        *index_ptr |= mask;
 11029              		.loc 1 187 8 is_stmt 1 view .LVU3745
 11030              	.LVL665:
 188:sieve_extend.c ****        index_ptr+=step;
 11031              		.loc 1 188 8 view .LVU3746
 11032              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11033              		.loc 1 188 19 is_stmt 0 view .LVU3747
 11034 3e15 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _723, offset: 0B], _278
 189:sieve_extend.c ****        *index_ptr |= mask;
 11035              		.loc 1 189 8 is_stmt 1 view .LVU3748
 11036              	.LVL666:
 190:sieve_extend.c ****        index_ptr+=step;
 11037              		.loc 1 190 8 view .LVU3749
 11038              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11039              		.loc 1 190 19 is_stmt 0 view .LVU3750
 11040 3e18 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _723, index: _293, offset: 0B], _278
 191:sieve_extend.c ****        *index_ptr |= mask;
 11041              		.loc 1 191 8 is_stmt 1 view .LVU3751
 11042              	.LVL667:
 192:sieve_extend.c ****        index_ptr+=step;
 11043              		.loc 1 192 8 view .LVU3752
 11044 3e1c 4C01C7   		add	rdi, r8	# ivtmp.506, tmp415
 11045              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 11046              		.loc 1 192 19 is_stmt 0 view .LVU3753
 11047 3e1f 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_445, index: _293, step: 4, offset: 0B], _278
 193:sieve_extend.c ****    }
 11048              		.loc 1 193 8 is_stmt 1 view .LVU3754
 11049 3e23 4C01C0   		add	rax, r8	# index_ptr, tmp415
 11050              	.LVL668:
 183:sieve_extend.c ****        *index_ptr |= mask;
 11051              		.loc 1 183 10 view .LVU3755
 11052 3e26 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 11053 3e29 7645     		jbe	.L744	#,
 184:sieve_extend.c ****        index_ptr+=step;
 11054              		.loc 1 184 8 view .LVU3756
 11055              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11056              		.loc 1 184 19 is_stmt 0 view .LVU3757
 11057 3e2b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_445, offset: 0B], _278
 185:sieve_extend.c ****        *index_ptr |= mask;
 11058              		.loc 1 185 8 is_stmt 1 view .LVU3758
 11059              	.LVL669:
 186:sieve_extend.c ****        index_ptr+=step;
 11060              		.loc 1 186 8 view .LVU3759
 11061              	# sieve_extend.c:186:        *index_ptr |= mask;
GAS LISTING /tmp/cc7rm34x.s 			page 302


 186:sieve_extend.c ****        index_ptr+=step;
 11062              		.loc 1 186 19 is_stmt 0 view .LVU3760
 11063 3e2e 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_445, index: _293, offset: 0B], _278
 187:sieve_extend.c ****        *index_ptr |= mask;
 11064              		.loc 1 187 8 is_stmt 1 view .LVU3761
 11065              	.LVL670:
 188:sieve_extend.c ****        index_ptr+=step;
 11066              		.loc 1 188 8 view .LVU3762
 11067              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11068              		.loc 1 188 19 is_stmt 0 view .LVU3763
 11069 3e32 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _723, offset: 0B], _278
 189:sieve_extend.c ****        *index_ptr |= mask;
 11070              		.loc 1 189 8 is_stmt 1 view .LVU3764
 11071              	.LVL671:
 190:sieve_extend.c ****        index_ptr+=step;
 11072              		.loc 1 190 8 view .LVU3765
 11073              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11074              		.loc 1 190 19 is_stmt 0 view .LVU3766
 11075 3e35 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _723, index: _293, offset: 0B], _278
 191:sieve_extend.c ****        *index_ptr |= mask;
 11076              		.loc 1 191 8 is_stmt 1 view .LVU3767
 11077              	.LVL672:
 192:sieve_extend.c ****        index_ptr+=step;
 11078              		.loc 1 192 8 view .LVU3768
 11079 3e39 4C01C7   		add	rdi, r8	# ivtmp.506, tmp415
 11080              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 11081              		.loc 1 192 19 is_stmt 0 view .LVU3769
 11082 3e3c 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_445, index: _293, step: 4, offset: 0B], _278
 193:sieve_extend.c ****    }
 11083              		.loc 1 193 8 is_stmt 1 view .LVU3770
 11084 3e40 4C01C0   		add	rax, r8	# index_ptr, tmp415
 11085              	.LVL673:
 183:sieve_extend.c ****        *index_ptr |= mask;
 11086              		.loc 1 183 10 view .LVU3771
 11087 3e43 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 11088 3e46 7628     		jbe	.L744	#,
 184:sieve_extend.c ****        index_ptr+=step;
 11089              		.loc 1 184 8 view .LVU3772
 11090              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11091              		.loc 1 184 19 is_stmt 0 view .LVU3773
 11092 3e48 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_445, offset: 0B], _278
 185:sieve_extend.c ****        *index_ptr |= mask;
 11093              		.loc 1 185 8 is_stmt 1 view .LVU3774
 11094              	.LVL674:
 186:sieve_extend.c ****        index_ptr+=step;
 11095              		.loc 1 186 8 view .LVU3775
 11096              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11097              		.loc 1 186 19 is_stmt 0 view .LVU3776
 11098 3e4b 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_445, index: _293, offset: 0B], _278
 187:sieve_extend.c ****        *index_ptr |= mask;
 11099              		.loc 1 187 8 is_stmt 1 view .LVU3777
 11100              	.LVL675:
GAS LISTING /tmp/cc7rm34x.s 			page 303


 188:sieve_extend.c ****        index_ptr+=step;
 11101              		.loc 1 188 8 view .LVU3778
 11102              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11103              		.loc 1 188 19 is_stmt 0 view .LVU3779
 11104 3e4f 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _723, offset: 0B], _278
 189:sieve_extend.c ****        *index_ptr |= mask;
 11105              		.loc 1 189 8 is_stmt 1 view .LVU3780
 11106              	.LVL676:
 190:sieve_extend.c ****        index_ptr+=step;
 11107              		.loc 1 190 8 view .LVU3781
 11108              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11109              		.loc 1 190 19 is_stmt 0 view .LVU3782
 11110 3e52 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _723, index: _293, offset: 0B], _278
 191:sieve_extend.c ****        *index_ptr |= mask;
 11111              		.loc 1 191 8 is_stmt 1 view .LVU3783
 11112              	.LVL677:
 192:sieve_extend.c ****        index_ptr+=step;
 11113              		.loc 1 192 8 view .LVU3784
 11114 3e56 4C01C7   		add	rdi, r8	# ivtmp.506, tmp415
 11115              	# sieve_extend.c:192:        *index_ptr |= mask;
 192:sieve_extend.c ****        index_ptr+=step;
 11116              		.loc 1 192 19 is_stmt 0 view .LVU3785
 11117 3e59 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_445, index: _293, step: 4, offset: 0B], _278
 193:sieve_extend.c ****    }
 11118              		.loc 1 193 8 is_stmt 1 view .LVU3786
 11119 3e5d 4C01C0   		add	rax, r8	# index_ptr, tmp415
 11120              	.LVL678:
 183:sieve_extend.c ****        *index_ptr |= mask;
 11121              		.loc 1 183 10 view .LVU3787
 11122 3e60 4939C4   		cmp	r12, rax	# fast_loop_ptr, index_ptr
 11123 3e63 0F8708FF 		ja	.L745	#,
 11123      FFFF
 11124 3e69 0F1F8000 		.p2align 4
 11124      000000
 11125              		.p2align 3
 11126              	.L744:
 196:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11127              		.loc 1 196 4 view .LVU3788
 197:sieve_extend.c ****        *index_ptr |= mask;
 11128              		.loc 1 197 4 view .LVU3789
 197:sieve_extend.c ****        *index_ptr |= mask;
 11129              		.loc 1 197 10 view .LVU3790
 11130 3e70 4C39C8   		cmp	rax, r9	# index_ptr, range_stop_ptr
 11131 3e73 735B     		jnb	.L746	#,
 11132              	.L747:
 198:sieve_extend.c ****        index_ptr+=step;
 11133              		.loc 1 198 8 view .LVU3791
 11134              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 11135              		.loc 1 198 19 is_stmt 0 view .LVU3792
 11136 3e75 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_447, offset: 0B], _278
 199:sieve_extend.c ****    }
 11137              		.loc 1 199 8 is_stmt 1 view .LVU3793
 11138              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
GAS LISTING /tmp/cc7rm34x.s 			page 304


 11139              		.loc 1 199 17 is_stmt 0 view .LVU3794
 11140 3e78 4801D0   		add	rax, rdx	# index_ptr, _293
 11141              	.LVL679:
 197:sieve_extend.c ****        *index_ptr |= mask;
 11142              		.loc 1 197 10 is_stmt 1 view .LVU3795
 11143 3e7b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11144 3e7e 7650     		jbe	.L746	#,
 198:sieve_extend.c ****        index_ptr+=step;
 11145              		.loc 1 198 8 view .LVU3796
 11146              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 11147              		.loc 1 198 19 is_stmt 0 view .LVU3797
 11148 3e80 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_447, offset: 0B], _278
 199:sieve_extend.c ****    }
 11149              		.loc 1 199 8 is_stmt 1 view .LVU3798
 11150              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 11151              		.loc 1 199 17 is_stmt 0 view .LVU3799
 11152 3e83 4801D0   		add	rax, rdx	# index_ptr, _293
 11153              	.LVL680:
 197:sieve_extend.c ****        *index_ptr |= mask;
 11154              		.loc 1 197 10 is_stmt 1 view .LVU3800
 11155 3e86 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11156 3e89 7645     		jbe	.L746	#,
 198:sieve_extend.c ****        index_ptr+=step;
 11157              		.loc 1 198 8 view .LVU3801
 11158              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 11159              		.loc 1 198 19 is_stmt 0 view .LVU3802
 11160 3e8b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_447, offset: 0B], _278
 199:sieve_extend.c ****    }
 11161              		.loc 1 199 8 is_stmt 1 view .LVU3803
 11162              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 11163              		.loc 1 199 17 is_stmt 0 view .LVU3804
 11164 3e8e 4801D0   		add	rax, rdx	# index_ptr, _293
 11165              	.LVL681:
 197:sieve_extend.c ****        *index_ptr |= mask;
 11166              		.loc 1 197 10 is_stmt 1 view .LVU3805
 11167 3e91 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11168 3e94 763A     		jbe	.L746	#,
 198:sieve_extend.c ****        index_ptr+=step;
 11169              		.loc 1 198 8 view .LVU3806
 11170              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 11171              		.loc 1 198 19 is_stmt 0 view .LVU3807
 11172 3e96 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_447, offset: 0B], _278
 199:sieve_extend.c ****    }
 11173              		.loc 1 199 8 is_stmt 1 view .LVU3808
 11174              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 11175              		.loc 1 199 17 is_stmt 0 view .LVU3809
 11176 3e99 4801D0   		add	rax, rdx	# index_ptr, _293
 11177              	.LVL682:
 197:sieve_extend.c ****        *index_ptr |= mask;
 11178              		.loc 1 197 10 is_stmt 1 view .LVU3810
 11179 3e9c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
GAS LISTING /tmp/cc7rm34x.s 			page 305


 11180 3e9f 762F     		jbe	.L746	#,
 198:sieve_extend.c ****        index_ptr+=step;
 11181              		.loc 1 198 8 view .LVU3811
 11182              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 11183              		.loc 1 198 19 is_stmt 0 view .LVU3812
 11184 3ea1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_447, offset: 0B], _278
 199:sieve_extend.c ****    }
 11185              		.loc 1 199 8 is_stmt 1 view .LVU3813
 11186              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 11187              		.loc 1 199 17 is_stmt 0 view .LVU3814
 11188 3ea4 4801D0   		add	rax, rdx	# index_ptr, _293
 11189              	.LVL683:
 197:sieve_extend.c ****        *index_ptr |= mask;
 11190              		.loc 1 197 10 is_stmt 1 view .LVU3815
 11191 3ea7 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11192 3eaa 7624     		jbe	.L746	#,
 198:sieve_extend.c ****        index_ptr+=step;
 11193              		.loc 1 198 8 view .LVU3816
 11194              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 11195              		.loc 1 198 19 is_stmt 0 view .LVU3817
 11196 3eac 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_447, offset: 0B], _278
 199:sieve_extend.c ****    }
 11197              		.loc 1 199 8 is_stmt 1 view .LVU3818
 11198              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 11199              		.loc 1 199 17 is_stmt 0 view .LVU3819
 11200 3eaf 4801D0   		add	rax, rdx	# index_ptr, _293
 11201              	.LVL684:
 197:sieve_extend.c ****        *index_ptr |= mask;
 11202              		.loc 1 197 10 is_stmt 1 view .LVU3820
 11203 3eb2 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11204 3eb5 7619     		jbe	.L746	#,
 198:sieve_extend.c ****        index_ptr+=step;
 11205              		.loc 1 198 8 view .LVU3821
 11206              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 11207              		.loc 1 198 19 is_stmt 0 view .LVU3822
 11208 3eb7 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_447, offset: 0B], _278
 199:sieve_extend.c ****    }
 11209              		.loc 1 199 8 is_stmt 1 view .LVU3823
 11210              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 11211              		.loc 1 199 17 is_stmt 0 view .LVU3824
 11212 3eba 4801D0   		add	rax, rdx	# index_ptr, _293
 11213              	.LVL685:
 197:sieve_extend.c ****        *index_ptr |= mask;
 11214              		.loc 1 197 10 is_stmt 1 view .LVU3825
 11215 3ebd 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11216 3ec0 760E     		jbe	.L746	#,
 198:sieve_extend.c ****        index_ptr+=step;
 11217              		.loc 1 198 8 view .LVU3826
 11218              	# sieve_extend.c:198:        *index_ptr |= mask;
 198:sieve_extend.c ****        index_ptr+=step;
 11219              		.loc 1 198 19 is_stmt 0 view .LVU3827
GAS LISTING /tmp/cc7rm34x.s 			page 306


 11220 3ec2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_447, offset: 0B], _278
 199:sieve_extend.c ****    }
 11221              		.loc 1 199 8 is_stmt 1 view .LVU3828
 11222              	# sieve_extend.c:199:        index_ptr+=step;
 199:sieve_extend.c ****    }
 11223              		.loc 1 199 17 is_stmt 0 view .LVU3829
 11224 3ec5 4801D0   		add	rax, rdx	# index_ptr, _293
 11225              	.LVL686:
 197:sieve_extend.c ****        *index_ptr |= mask;
 11226              		.loc 1 197 10 is_stmt 1 view .LVU3830
 11227 3ec8 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11228 3ecb 77A8     		ja	.L747	#,
 11229 3ecd 0F1F00   		.p2align 4
 11230              		.p2align 3
 11231              	.L746:
 202:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11232              		.loc 1 202 4 view .LVU3831
 11233              	# sieve_extend.c:202:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 202:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11234              		.loc 1 202 7 is_stmt 0 view .LVU3832
 11235 3ed0 4C39C8   		cmp	rax, r9	# index_ptr, range_stop_ptr
 11236 3ed3 0F84CF01 		je	.L948	#,
 11236      0000
 11237              	.LVL687:
 11238              	.L748:
 202:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11239              		.loc 1 202 7 view .LVU3833
 11240              	.LBE542:
 11241              	.LBE546:
 428:sieve_extend.c ****         #if __APPLE__
 11242              		.loc 1 428 77 is_stmt 1 view .LVU3834
 11243              	# sieve_extend.c:428:     for (register counter_t index = range_start; index < range_stop_unique; i
 428:sieve_extend.c ****         #if __APPLE__
 11244              		.loc 1 428 83 is_stmt 0 view .LVU3835
 11245 3ed9 4C01D6   		add	rsi, r10	# index, step
 11246              	.LVL688:
 428:sieve_extend.c ****         #if __APPLE__
 11247              		.loc 1 428 50 is_stmt 1 view .LVU3836
 11248              	# sieve_extend.c:428:     for (register counter_t index = range_start; index < range_stop_unique; i
 428:sieve_extend.c ****         #if __APPLE__
 11249              		.loc 1 428 5 is_stmt 0 view .LVU3837
 11250 3edc 4939F6   		cmp	r14, rsi	# _204, index
 11251 3edf 0F876BFE 		ja	.L749	#,
 11251      FFFF
 11252              	.L750:
 11253              	.LVL689:
 428:sieve_extend.c ****         #if __APPLE__
 11254              		.loc 1 428 5 view .LVU3838
 11255              	.LBE549:
 11256              	.LBE552:
 11257              	.LBE559:
1010:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 11258              		.loc 1 1010 9 is_stmt 1 view .LVU3839
 11259              	.LBB560:
 11260              	.LBI560:
 129:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 11261              		.loc 1 129 25 view .LVU3840
GAS LISTING /tmp/cc7rm34x.s 			page 307


 11262              	.LBB561:
 132:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11263              		.loc 1 132 4 view .LVU3841
 133:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11264              		.loc 1 133 4 view .LVU3842
 11265              	# sieve_extend.c:132:    register counter_t index_word = wordindex(index);
 132:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11266              		.loc 1 132 23 is_stmt 0 view .LVU3843
 11267 3ee5 4D89DE   		mov	r14, r11	# index_word, _216
 11268              	# sieve_extend.c:133:    bitshift_t index_bit  = bitindex_calc(index);
 133:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11269              		.loc 1 133 15 view .LVU3844
 11270 3ee8 4D89DA   		mov	r10, r11	# index_bit, _216
 11271              	.LVL690:
 11272              	# sieve_extend.c:132:    register counter_t index_word = wordindex(index);
 132:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11273              		.loc 1 132 23 view .LVU3845
 11274 3eeb 49C1EE06 		shr	r14, 6	# index_word,
 11275              	# sieve_extend.c:133:    bitshift_t index_bit  = bitindex_calc(index);
 133:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11276              		.loc 1 133 15 view .LVU3846
 11277 3eef 4183E23F 		and	r10d, 63	# index_bit,
 11278              	.LVL691:
 134:sieve_extend.c ****    index += distance;
 11279              		.loc 1 134 4 is_stmt 1 view .LVU3847
 11280              	# sieve_extend.c:134:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 134:sieve_extend.c ****    index += distance;
 11281              		.loc 1 134 89 is_stmt 0 view .LVU3848
 11282 3ef3 4E8B04F3 		mov	r8, QWORD PTR [rbx+r14*8]	# *_249, *_249
 11283 3ef7 C4C2ABF7 		shrx	rdx, r8, r10	# tmp400, *_249, index_bit
 11283      D0
 11284              	# sieve_extend.c:134:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 134:sieve_extend.c ****    index += distance;
 11285              		.loc 1 134 66 view .LVU3849
 11286 3efc 48F7D2   		not	rdx	# tmp402
 11287              	# sieve_extend.c:134:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 134:sieve_extend.c ****    index += distance;
 11288              		.loc 1 134 76 view .LVU3850
 11289 3eff 4A8D34F5 		lea	rsi, 0[0+r14*8]	# _248,
 11289      00000000 
 11290              	.LVL692:
 11291              	# sieve_extend.c:134:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 134:sieve_extend.c ****    index += distance;
 11292              		.loc 1 134 25 view .LVU3851
 11293 3f07 F34C0FBC 		tzcnt	r12, rdx	# distance, tmp402
 11293      E2
 11294              	.LVL693:
 135:sieve_extend.c ****    distance += index_bit;
 11295              		.loc 1 135 4 is_stmt 1 view .LVU3852
 11296              	# sieve_extend.c:135:    index += distance;
 135:sieve_extend.c ****    distance += index_bit;
 11297              		.loc 1 135 10 is_stmt 0 view .LVU3853
 11298 3f0c 4B8D0C23 		lea	rcx, [r11+r12]	# prime,
 11299              	.LVL694:
 136:sieve_extend.c **** 
 11300              		.loc 1 136 4 is_stmt 1 view .LVU3854
 138:sieve_extend.c ****        index_word++;
GAS LISTING /tmp/cc7rm34x.s 			page 308


 11301              		.loc 1 138 4 view .LVU3855
 138:sieve_extend.c ****        index_word++;
 11302              		.loc 1 138 10 view .LVU3856
 11303              	# sieve_extend.c:136:    distance += index_bit;
 136:sieve_extend.c **** 
 11304              		.loc 1 136 13 is_stmt 0 view .LVU3857
 11305 3f10 4D01D4   		add	r12, r10	# distance, index_bit
 11306              	.LVL695:
 11307              	# sieve_extend.c:138:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 138:sieve_extend.c ****        index_word++;
 11308              		.loc 1 138 10 view .LVU3858
 11309 3f13 4983FC40 		cmp	r12, 64	# distance,
 11310 3f17 0F84CB01 		je	.L949	#,
 11310      0000
 11311              	.LVL696:
 11312              	.L893:
 144:sieve_extend.c **** }
 11313              		.loc 1 144 4 is_stmt 1 view .LVU3859
 144:sieve_extend.c **** }
 11314              		.loc 1 144 4 is_stmt 0 view .LVU3860
 11315              	.LBE561:
 11316              	.LBE560:
1011:sieve_extend.c ****     }
 11317              		.loc 1 1011 9 is_stmt 1 view .LVU3861
 11318              	# sieve_extend.c:1011:         start = prime * prime * 2 + prime * 2;
1011:sieve_extend.c ****     }
 11319              		.loc 1 1011 35 is_stmt 0 view .LVU3862
 11320 3f1d 4C8D5901 		lea	r11, 1[rcx]	# _216,
 11321              	# sieve_extend.c:1011:         start = prime * prime * 2 + prime * 2;
1011:sieve_extend.c ****     }
 11322              		.loc 1 1011 15 view .LVU3863
 11323 3f21 4C89DE   		mov	rsi, r11	# tmp428, _216
 11324 3f24 480FAFF1 		imul	rsi, rcx	# tmp428, prime
 11325              	.LVL697:
1011:sieve_extend.c ****     }
 11326              		.loc 1 1011 15 view .LVU3864
 11327 3f28 4801F6   		add	rsi, rsi	# index
 11328              	.LVL698:
1005:sieve_extend.c ****         step  = prime * 2 + 1;
 11329              		.loc 1 1005 11 is_stmt 1 view .LVU3865
 11330 3f2b 4839F5   		cmp	rbp, rsi	# block_stop, index
 11331 3f2e 0F83ACFD 		jnb	.L752	#,
 11331      FFFF
1005:sieve_extend.c ****         step  = prime * 2 + 1;
 11332              		.loc 1 1005 11 is_stmt 0 view .LVU3866
 11333 3f34 E93BFDFF 		jmp	.L935	#
 11333      FF
 11334              	.LVL699:
 11335 3f39 0F1F8000 		.p2align 4,,7
 11335      000000
 11336              		.p2align 3
 11337              	.L753:
 11338              	.LBB563:
 11339              	.LBB564:
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11340              		.loc 1 349 41 is_stmt 1 view .LVU3867
 11341              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
GAS LISTING /tmp/cc7rm34x.s 			page 309


 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11342              		.loc 1 349 5 is_stmt 0 view .LVU3868
 11343 3f40 4839F5   		cmp	rbp, rsi	# block_stop, index
 11344 3f43 7379     		jnb	.L757	#,
 11345 3f45 66662E0F 		.p2align 4
 11345      1F840000 
 11345      000000
 11346              		.p2align 3
 11347              	.L758:
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11348              		.loc 1 349 5 view .LVU3869
 11349              	.LBE564:
 11350              	.LBE563:
1019:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 11351              		.loc 1 1019 9 is_stmt 1 view .LVU3870
 11352              	.LVL700:
 11353              	.LBB566:
 11354              	.LBI566:
 129:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 11355              		.loc 1 129 25 view .LVU3871
 11356              	.LBB567:
 132:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11357              		.loc 1 132 4 view .LVU3872
 133:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11358              		.loc 1 133 4 view .LVU3873
 11359              	# sieve_extend.c:132:    register counter_t index_word = wordindex(index);
 132:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11360              		.loc 1 132 23 is_stmt 0 view .LVU3874
 11361 3f50 4C89D9   		mov	rcx, r11	# index_word, _216
 11362              	# sieve_extend.c:133:    bitshift_t index_bit  = bitindex_calc(index);
 133:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11363              		.loc 1 133 15 view .LVU3875
 11364 3f53 4D89D9   		mov	r9, r11	# index_bit, _216
 11365              	.LVL701:
 11366              	# sieve_extend.c:132:    register counter_t index_word = wordindex(index);
 132:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 11367              		.loc 1 132 23 view .LVU3876
 11368 3f56 48C1E906 		shr	rcx, 6	# index_word,
 11369              	# sieve_extend.c:133:    bitshift_t index_bit  = bitindex_calc(index);
 133:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 11370              		.loc 1 133 15 view .LVU3877
 11371 3f5a 4183E13F 		and	r9d, 63	# index_bit,
 11372              	.LVL702:
 134:sieve_extend.c ****    index += distance;
 11373              		.loc 1 134 4 is_stmt 1 view .LVU3878
 11374              	# sieve_extend.c:134:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 134:sieve_extend.c ****    index += distance;
 11375              		.loc 1 134 89 is_stmt 0 view .LVU3879
 11376 3f5e 488B3CCB 		mov	rdi, QWORD PTR [rbx+rcx*8]	# *_332, *_332
 11377 3f62 C462B3F7 		shrx	r10, rdi, r9	# tmp436, *_332, index_bit
 11377      D7
 11378              	# sieve_extend.c:134:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 134:sieve_extend.c ****    index += distance;
 11379              		.loc 1 134 66 view .LVU3880
 11380 3f67 49F7D2   		not	r10	# tmp438
 11381              	# sieve_extend.c:134:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 134:sieve_extend.c ****    index += distance;
GAS LISTING /tmp/cc7rm34x.s 			page 310


 11382              		.loc 1 134 76 view .LVU3881
 11383 3f6a 488D34CD 		lea	rsi, 0[0+rcx*8]	# _331,
 11383      00000000 
 11384              	# sieve_extend.c:134:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 134:sieve_extend.c ****    index += distance;
 11385              		.loc 1 134 25 view .LVU3882
 11386 3f72 F34D0FBC 		tzcnt	r14, r10	# distance, tmp438
 11386      F2
 11387              	.LVL703:
 135:sieve_extend.c ****    distance += index_bit;
 11388              		.loc 1 135 4 is_stmt 1 view .LVU3883
 11389              	# sieve_extend.c:135:    index += distance;
 135:sieve_extend.c ****    distance += index_bit;
 11390              		.loc 1 135 10 is_stmt 0 view .LVU3884
 11391 3f77 4B8D0C33 		lea	rcx, [r11+r14]	# prime,
 11392              	.LVL704:
 136:sieve_extend.c **** 
 11393              		.loc 1 136 4 is_stmt 1 view .LVU3885
 138:sieve_extend.c ****        index_word++;
 11394              		.loc 1 138 4 view .LVU3886
 138:sieve_extend.c ****        index_word++;
 11395              		.loc 1 138 10 view .LVU3887
 11396              	# sieve_extend.c:136:    distance += index_bit;
 136:sieve_extend.c **** 
 11397              		.loc 1 136 13 is_stmt 0 view .LVU3888
 11398 3f7b 4D01CE   		add	r14, r9	# distance, index_bit
 11399              	.LVL705:
 11400              	# sieve_extend.c:138:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 138:sieve_extend.c ****        index_word++;
 11401              		.loc 1 138 10 view .LVU3889
 11402 3f7e 4983FE40 		cmp	r14, 64	# distance,
 11403 3f82 0F843001 		je	.L950	#,
 11403      0000
 144:sieve_extend.c **** }
 11404              		.loc 1 144 4 is_stmt 1 view .LVU3890
 11405              	.LVL706:
 144:sieve_extend.c **** }
 11406              		.loc 1 144 4 is_stmt 0 view .LVU3891
 11407              	.LBE567:
 11408              	.LBE566:
1020:sieve_extend.c ****     }
 11409              		.loc 1 1020 9 is_stmt 1 view .LVU3892
 11410              	# sieve_extend.c:1020:         start = prime * prime * 2 + prime * 2;
1020:sieve_extend.c ****     }
 11411              		.loc 1 1020 35 is_stmt 0 view .LVU3893
 11412 3f88 4C8D5901 		lea	r11, 1[rcx]	# _216,
 11413              	# sieve_extend.c:1020:         start = prime * prime * 2 + prime * 2;
1020:sieve_extend.c ****     }
 11414              		.loc 1 1020 15 view .LVU3894
 11415 3f8c 4C89DE   		mov	rsi, r11	# tmp453, _216
 11416 3f8f 480FAFF1 		imul	rsi, rcx	# tmp453, prime
 11417 3f93 4801F6   		add	rsi, rsi	# index
 11418              	.LVL707:
 11419              	.L936:
1014:sieve_extend.c ****         step  = prime * 2 + 1;
 11420              		.loc 1 1014 11 is_stmt 1 view .LVU3895
 11421 3f96 4839F5   		cmp	rbp, rsi	# block_stop, index
GAS LISTING /tmp/cc7rm34x.s 			page 311


 11422 3f99 0F82D5FC 		jb	.L935	#,
 11422      FFFF
 11423              	.LVL708:
 11424              	.L743:
1015:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11425              		.loc 1 1015 9 view .LVU3896
 11426              	# sieve_extend.c:1016:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1016:sieve_extend.c ****         if likely(start <= block_stop)
 11427              		.loc 1 1016 12 is_stmt 0 view .LVU3897
 11428 3f9f 4D39DF   		cmp	r15, r11	# block_start, _216
 11429              	# sieve_extend.c:1015:         step  = prime * 2 + 1;
1015:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 11430              		.loc 1 1015 15 view .LVU3898
 11431 3fa2 4C8D4C09 		lea	r9, 1[rcx+rcx]	# step,
 11431      01
 11432              	.LVL709:
1016:sieve_extend.c ****         if likely(start <= block_stop)
 11433              		.loc 1 1016 9 is_stmt 1 view .LVU3899
 11434              	# sieve_extend.c:1016:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1016:sieve_extend.c ****         if likely(start <= block_stop)
 11435              		.loc 1 1016 12 is_stmt 0 view .LVU3900
 11436 3fa7 7297     		jb	.L753	#,
1016:sieve_extend.c ****         if likely(start <= block_stop)
 11437              		.loc 1 1016 47 is_stmt 1 view .LVU3901
 11438              	# sieve_extend.c:1016:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1016:sieve_extend.c ****         if likely(start <= block_stop)
 11439              		.loc 1 1016 67 is_stmt 0 view .LVU3902
 11440 3fa9 498D040F 		lea	rax, [r15+rcx]	# _220,
 11441              	# sieve_extend.c:1016:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1016:sieve_extend.c ****         if likely(start <= block_stop)
 11442              		.loc 1 1016 108 view .LVU3903
 11443 3fad 31D2     		xor	edx, edx	# tmp432
 11444              	# sieve_extend.c:1016:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1016:sieve_extend.c ****         if likely(start <= block_stop)
 11445              		.loc 1 1016 75 view .LVU3904
 11446 3faf 488D3408 		lea	rsi, [rax+rcx]	# tmp430,
 11447              	# sieve_extend.c:1016:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1016:sieve_extend.c ****         if likely(start <= block_stop)
 11448              		.loc 1 1016 108 view .LVU3905
 11449 3fb3 49F7F1   		div	r9	# step
 11450              	.LVL710:
 11451              	# sieve_extend.c:1016:         if likely(block_start >= (prime + 1)) start = block_start + prime + 
1016:sieve_extend.c ****         if likely(start <= block_stop)
 11452              		.loc 1 1016 53 view .LVU3906
 11453 3fb6 4829D6   		sub	rsi, rdx	# index, tmp432
 11454              	.LVL711:
1017:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 11455              		.loc 1 1017 9 is_stmt 1 view .LVU3907
 11456              	# sieve_extend.c:1017:         if likely(start <= block_stop)
1017:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 11457              		.loc 1 1017 12 is_stmt 0 view .LVU3908
 11458 3fb9 4839F5   		cmp	rbp, rsi	# block_stop, index
 11459 3fbc 7292     		jb	.L758	#,
 11460              	.LVL712:
 11461              	.L757:
 11462              	.LBB569:
 11463              	.LBB565:
GAS LISTING /tmp/cc7rm34x.s 			page 312


 350:sieve_extend.c ****     }
 11464              		.loc 1 350 9 is_stmt 1 view .LVU3909
 11465              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11466              		.loc 1 350 36 is_stmt 0 view .LVU3910
 11467 3fbe 4889F1   		mov	rcx, rsi	# tmp441, index
 11468              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11469              		.loc 1 350 39 view .LVU3911
 11470 3fc1 C4C2C9F7 		shlx	rdi, r13, rsi	# tmp444, tmp461, index
 11470      FD
 11471              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11472              		.loc 1 350 36 view .LVU3912
 11473 3fc6 48C1E906 		shr	rcx, 6	# tmp441,
 11474              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11475              		.loc 1 349 68 view .LVU3913
 11476 3fca 4C01CE   		add	rsi, r9	# index, step
 11477              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11478              		.loc 1 350 36 view .LVU3914
 11479 3fcd 48093CCB 		or	QWORD PTR [rbx+rcx*8], rdi	# *_231, tmp444
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11480              		.loc 1 349 62 is_stmt 1 view .LVU3915
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11481              		.loc 1 349 41 view .LVU3916
 11482              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11483              		.loc 1 349 5 is_stmt 0 view .LVU3917
 11484 3fd1 4839F5   		cmp	rbp, rsi	# block_stop, index
 11485 3fd4 0F8276FF 		jb	.L758	#,
 11485      FFFF
 350:sieve_extend.c ****     }
 11486              		.loc 1 350 9 is_stmt 1 view .LVU3918
 11487              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11488              		.loc 1 350 36 is_stmt 0 view .LVU3919
 11489 3fda 4989F2   		mov	r10, rsi	# tmp475, index
 11490              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11491              		.loc 1 350 39 view .LVU3920
 11492 3fdd C442C9F7 		shlx	r14, r13, rsi	# tmp478, tmp461, index
 11492      F5
 11493              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11494              		.loc 1 350 36 view .LVU3921
 11495 3fe2 49C1EA06 		shr	r10, 6	# tmp475,
 11496              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11497              		.loc 1 349 68 view .LVU3922
 11498 3fe6 4C01CE   		add	rsi, r9	# index, step
 11499              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11500              		.loc 1 350 36 view .LVU3923
 11501 3fe9 4E0934D3 		or	QWORD PTR [rbx+r10*8], r14	# *_231, tmp478
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/cc7rm34x.s 			page 313


 11502              		.loc 1 349 62 is_stmt 1 view .LVU3924
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11503              		.loc 1 349 41 view .LVU3925
 11504              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11505              		.loc 1 349 5 is_stmt 0 view .LVU3926
 11506 3fed 4839F5   		cmp	rbp, rsi	# block_stop, index
 11507 3ff0 0F825AFF 		jb	.L758	#,
 11507      FFFF
 350:sieve_extend.c ****     }
 11508              		.loc 1 350 9 is_stmt 1 view .LVU3927
 11509              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11510              		.loc 1 350 36 is_stmt 0 view .LVU3928
 11511 3ff6 4989F0   		mov	r8, rsi	# tmp480, index
 11512              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11513              		.loc 1 350 39 view .LVU3929
 11514 3ff9 C442C9F7 		shlx	r12, r13, rsi	# tmp483, tmp461, index
 11514      E5
 11515              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11516              		.loc 1 350 36 view .LVU3930
 11517 3ffe 49C1E806 		shr	r8, 6	# tmp480,
 11518              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11519              		.loc 1 349 68 view .LVU3931
 11520 4002 4C01CE   		add	rsi, r9	# index, step
 11521              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11522              		.loc 1 350 36 view .LVU3932
 11523 4005 4E0924C3 		or	QWORD PTR [rbx+r8*8], r12	# *_231, tmp483
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11524              		.loc 1 349 62 is_stmt 1 view .LVU3933
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11525              		.loc 1 349 41 view .LVU3934
 11526              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11527              		.loc 1 349 5 is_stmt 0 view .LVU3935
 11528 4009 4839F5   		cmp	rbp, rsi	# block_stop, index
 11529 400c 0F823EFF 		jb	.L758	#,
 11529      FFFF
 350:sieve_extend.c ****     }
 11530              		.loc 1 350 9 is_stmt 1 view .LVU3936
 11531              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11532              		.loc 1 350 36 is_stmt 0 view .LVU3937
 11533 4012 4889F0   		mov	rax, rsi	# tmp485, index
 11534              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11535              		.loc 1 350 39 view .LVU3938
 11536 4015 C4C2C9F7 		shlx	rdx, r13, rsi	# tmp488, tmp461, index
 11536      D5
 11537              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11538              		.loc 1 350 36 view .LVU3939
 11539 401a 48C1E806 		shr	rax, 6	# tmp485,
GAS LISTING /tmp/cc7rm34x.s 			page 314


 11540              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11541              		.loc 1 349 68 view .LVU3940
 11542 401e 4C01CE   		add	rsi, r9	# index, step
 11543              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11544              		.loc 1 350 36 view .LVU3941
 11545 4021 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_231, tmp488
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11546              		.loc 1 349 62 is_stmt 1 view .LVU3942
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11547              		.loc 1 349 41 view .LVU3943
 11548              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11549              		.loc 1 349 5 is_stmt 0 view .LVU3944
 11550 4025 4839F5   		cmp	rbp, rsi	# block_stop, index
 11551 4028 0F8222FF 		jb	.L758	#,
 11551      FFFF
 350:sieve_extend.c ****     }
 11552              		.loc 1 350 9 is_stmt 1 view .LVU3945
 11553              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11554              		.loc 1 350 36 is_stmt 0 view .LVU3946
 11555 402e 4889F1   		mov	rcx, rsi	# tmp490, index
 11556              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11557              		.loc 1 350 39 view .LVU3947
 11558 4031 C4C2C9F7 		shlx	rdi, r13, rsi	# tmp493, tmp461, index
 11558      FD
 11559              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11560              		.loc 1 350 36 view .LVU3948
 11561 4036 48C1E906 		shr	rcx, 6	# tmp490,
 11562              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11563              		.loc 1 349 68 view .LVU3949
 11564 403a 4C01CE   		add	rsi, r9	# index, step
 11565              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11566              		.loc 1 350 36 view .LVU3950
 11567 403d 48093CCB 		or	QWORD PTR [rbx+rcx*8], rdi	# *_231, tmp493
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11568              		.loc 1 349 62 is_stmt 1 view .LVU3951
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11569              		.loc 1 349 41 view .LVU3952
 11570              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11571              		.loc 1 349 5 is_stmt 0 view .LVU3953
 11572 4041 4839F5   		cmp	rbp, rsi	# block_stop, index
 11573 4044 0F8206FF 		jb	.L758	#,
 11573      FFFF
 350:sieve_extend.c ****     }
 11574              		.loc 1 350 9 is_stmt 1 view .LVU3954
 11575              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11576              		.loc 1 350 36 is_stmt 0 view .LVU3955
 11577 404a 4989F2   		mov	r10, rsi	# tmp495, index
GAS LISTING /tmp/cc7rm34x.s 			page 315


 11578              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11579              		.loc 1 350 39 view .LVU3956
 11580 404d C442C9F7 		shlx	r14, r13, rsi	# tmp498, tmp461, index
 11580      F5
 11581              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11582              		.loc 1 350 36 view .LVU3957
 11583 4052 49C1EA06 		shr	r10, 6	# tmp495,
 11584              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11585              		.loc 1 349 68 view .LVU3958
 11586 4056 4C01CE   		add	rsi, r9	# index, step
 11587              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11588              		.loc 1 350 36 view .LVU3959
 11589 4059 4E0934D3 		or	QWORD PTR [rbx+r10*8], r14	# *_231, tmp498
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11590              		.loc 1 349 62 is_stmt 1 view .LVU3960
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11591              		.loc 1 349 41 view .LVU3961
 11592              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11593              		.loc 1 349 5 is_stmt 0 view .LVU3962
 11594 405d 4839F5   		cmp	rbp, rsi	# block_stop, index
 11595 4060 0F82EAFE 		jb	.L758	#,
 11595      FFFF
 350:sieve_extend.c ****     }
 11596              		.loc 1 350 9 is_stmt 1 view .LVU3963
 11597              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11598              		.loc 1 350 36 is_stmt 0 view .LVU3964
 11599 4066 4989F0   		mov	r8, rsi	# tmp500, index
 11600              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11601              		.loc 1 350 39 view .LVU3965
 11602 4069 C442C9F7 		shlx	r12, r13, rsi	# tmp503, tmp461, index
 11602      E5
 11603              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11604              		.loc 1 350 36 view .LVU3966
 11605 406e 49C1E806 		shr	r8, 6	# tmp500,
 11606              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11607              		.loc 1 349 68 view .LVU3967
 11608 4072 4C01CE   		add	rsi, r9	# index, step
 11609              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11610              		.loc 1 350 36 view .LVU3968
 11611 4075 4E0924C3 		or	QWORD PTR [rbx+r8*8], r12	# *_231, tmp503
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11612              		.loc 1 349 62 is_stmt 1 view .LVU3969
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11613              		.loc 1 349 41 view .LVU3970
 11614              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11615              		.loc 1 349 5 is_stmt 0 view .LVU3971
GAS LISTING /tmp/cc7rm34x.s 			page 316


 11616 4079 4839F5   		cmp	rbp, rsi	# block_stop, index
 11617 407c 0F82CEFE 		jb	.L758	#,
 11617      FFFF
 350:sieve_extend.c ****     }
 11618              		.loc 1 350 9 is_stmt 1 view .LVU3972
 11619              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11620              		.loc 1 350 36 is_stmt 0 view .LVU3973
 11621 4082 4889F0   		mov	rax, rsi	# tmp505, index
 11622              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11623              		.loc 1 350 39 view .LVU3974
 11624 4085 C4C2C9F7 		shlx	rdx, r13, rsi	# tmp508, tmp461, index
 11624      D5
 11625              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11626              		.loc 1 350 36 view .LVU3975
 11627 408a 48C1E806 		shr	rax, 6	# tmp505,
 11628              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11629              		.loc 1 349 68 view .LVU3976
 11630 408e 4C01CE   		add	rsi, r9	# index, step
 11631              	# sieve_extend.c:350:         bitarray[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****     }
 11632              		.loc 1 350 36 view .LVU3977
 11633 4091 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_231, tmp508
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11634              		.loc 1 349 62 is_stmt 1 view .LVU3978
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11635              		.loc 1 349 41 view .LVU3979
 11636              	# sieve_extend.c:349:     for (counter_t index = range_start; index <= range_stop; index += step) {
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11637              		.loc 1 349 5 is_stmt 0 view .LVU3980
 11638 4095 4839F5   		cmp	rbp, rsi	# block_stop, index
 11639 4098 0F8320FF 		jnb	.L757	#,
 11639      FFFF
 11640 409e E9ADFEFF 		jmp	.L758	#
 11640      FF
 11641              	.LVL713:
 11642              		.p2align 4,,7
 11643 40a3 0F1F4400 		.p2align 3
 11643      00
 11644              	.L948:
 349:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 11645              		.loc 1 349 5 view .LVU3981
 11646              	.LBE565:
 11647              	.LBE569:
 11648              	.LBB570:
 11649              	.LBB553:
 11650              	.LBB550:
 11651              	.LBB547:
 11652              	.LBB543:
 203:sieve_extend.c ****    }
 11653              		.loc 1 203 7 is_stmt 1 view .LVU3982
 11654              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 11655              		.loc 1 203 27 is_stmt 0 view .LVU3983
GAS LISTING /tmp/cc7rm34x.s 			page 317


 11656 40a8 48234C24 		and	rcx, QWORD PTR 16[rsp]	# tmp420, %sfp
 11656      10
 11657              	.LVL714:
 11658              	# sieve_extend.c:203:       *index_ptr |= (mask & chopmask(range_stop));
 203:sieve_extend.c ****    }
 11659              		.loc 1 203 18 view .LVU3984
 11660 40ad 490909   		or	QWORD PTR [r9], rcx	# MEM[(uint64_t *)range_stop_ptr_311], tmp420
 11661 40b0 E924FEFF 		jmp	.L748	#
 11661      FF
 11662              	.LVL715:
 11663              		.p2align 4,,7
 11664 40b5 0F1F00   		.p2align 3
 11665              	.L950:
 203:sieve_extend.c ****    }
 11666              		.loc 1 203 18 view .LVU3985
 11667              	.LBE543:
 11668              	.LBE547:
 11669              	.LBE550:
 11670              	.LBE553:
 11671              	.LBE570:
 11672              	.LBB571:
 11673              	.LBB568:
 139:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 11674              		.loc 1 139 8 is_stmt 1 view .LVU3986
 140:sieve_extend.c ****        index += distance;
 11675              		.loc 1 140 8 view .LVU3987
 11676              	# sieve_extend.c:140:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 140:sieve_extend.c ****        index += distance;
 11677              		.loc 1 140 48 is_stmt 0 view .LVU3988
 11678 40b8 4C8B4433 		mov	r8, QWORD PTR 8[rbx+rsi]	# *_344, *_344
 11678      08
 11679 40bd 49F7D0   		not	r8	# tmp446
 11680              	.LVL716:
 141:sieve_extend.c ****    }
 11681              		.loc 1 141 8 is_stmt 1 view .LVU3989
 11682              	# sieve_extend.c:140:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 140:sieve_extend.c ****        index += distance;
 11683              		.loc 1 140 17 is_stmt 0 view .LVU3990
 11684 40c0 F34D0FBC 		tzcnt	r12, r8	# distance, tmp446
 11684      E0
 11685              	.LVL717:
 11686              	# sieve_extend.c:141:        index += distance;
 141:sieve_extend.c ****    }
 11687              		.loc 1 141 14 view .LVU3991
 11688 40c5 4C01E1   		add	rcx, r12	# prime, distance
 11689              	.LVL718:
 138:sieve_extend.c ****        index_word++;
 11690              		.loc 1 138 10 is_stmt 1 view .LVU3992
 144:sieve_extend.c **** }
 11691              		.loc 1 144 4 view .LVU3993
 144:sieve_extend.c **** }
 11692              		.loc 1 144 4 is_stmt 0 view .LVU3994
 11693              	.LBE568:
 11694              	.LBE571:
1020:sieve_extend.c ****     }
 11695              		.loc 1 1020 9 is_stmt 1 view .LVU3995
 11696              	# sieve_extend.c:1020:         start = prime * prime * 2 + prime * 2;
GAS LISTING /tmp/cc7rm34x.s 			page 318


1020:sieve_extend.c ****     }
 11697              		.loc 1 1020 35 is_stmt 0 view .LVU3996
 11698 40c8 4C8D5901 		lea	r11, 1[rcx]	# _216,
 11699              	# sieve_extend.c:1020:         start = prime * prime * 2 + prime * 2;
1020:sieve_extend.c ****     }
 11700              		.loc 1 1020 15 view .LVU3997
 11701 40cc 4C89D8   		mov	rax, r11	# tmp451, _216
 11702 40cf 480FAFC1 		imul	rax, rcx	# tmp451, prime
 11703 40d3 488D3400 		lea	rsi, [rax+rax]	# index,
 11704              	.LVL719:
1014:sieve_extend.c ****         step  = prime * 2 + 1;
 11705              		.loc 1 1014 11 is_stmt 1 view .LVU3998
 11706 40d7 4839F5   		cmp	rbp, rsi	# block_stop, index
 11707 40da 0F83BFFE 		jnb	.L743	#,
 11707      FFFF
 11708 40e0 E98FFBFF 		jmp	.L935	#
 11708      FF
 11709              	.LVL720:
 11710              		.p2align 4,,7
 11711 40e5 0F1F00   		.p2align 3
 11712              	.L949:
 11713              	.LBB572:
 11714              	.LBB562:
 139:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 11715              		.loc 1 139 8 view .LVU3999
 140:sieve_extend.c ****        index += distance;
 11716              		.loc 1 140 8 view .LVU4000
 11717              	# sieve_extend.c:140:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 140:sieve_extend.c ****        index += distance;
 11718              		.loc 1 140 48 is_stmt 0 view .LVU4001
 11719 40e8 4C8B5C33 		mov	r11, QWORD PTR 8[rbx+rsi]	# *_261, *_261
 11719      08
 11720 40ed 49F7D3   		not	r11	# tmp421
 11721              	.LVL721:
 141:sieve_extend.c ****    }
 11722              		.loc 1 141 8 is_stmt 1 view .LVU4002
 11723              	# sieve_extend.c:140:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 140:sieve_extend.c ****        index += distance;
 11724              		.loc 1 140 17 is_stmt 0 view .LVU4003
 11725 40f0 F3490FBC 		tzcnt	rax, r11	# distance, tmp421
 11725      C3
 11726              	.LVL722:
 11727              	# sieve_extend.c:141:        index += distance;
 141:sieve_extend.c ****    }
 11728              		.loc 1 141 14 view .LVU4004
 11729 40f5 4801C1   		add	rcx, rax	# prime, distance
 11730              	.LVL723:
 138:sieve_extend.c ****        index_word++;
 11731              		.loc 1 138 10 is_stmt 1 view .LVU4005
 144:sieve_extend.c **** }
 11732              		.loc 1 144 4 view .LVU4006
 144:sieve_extend.c **** }
 11733              		.loc 1 144 4 is_stmt 0 view .LVU4007
 11734              	.LBE562:
 11735              	.LBE572:
1011:sieve_extend.c ****     }
 11736              		.loc 1 1011 9 is_stmt 1 view .LVU4008
GAS LISTING /tmp/cc7rm34x.s 			page 319


 11737 40f8 E920FEFF 		jmp	.L893	#
 11737      FF
 11738              	.LVL724:
 11739              	.L943:
1011:sieve_extend.c ****     }
 11740              		.loc 1 1011 9 is_stmt 0 view .LVU4009
 11741              	.LBE576:
 11742              	.LBE586:
 11743              	.LBE590:
 11744              	.LBB591:
 11745              	.LBB517:
 11746              	.LBB510:
 11747              	.LBB505:
 11748              	.LBB503:
 939:sieve_extend.c ****         return; // rapid exit for small sizes
 11749              		.loc 1 939 9 is_stmt 1 view .LVU4010
 11750 40fd 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	#, %sfp
 11750      10
 11751 4102 4C89FA   		mov	rdx, r15	#, patternsize_bits
 11752 4105 4C89FE   		mov	rsi, r15	#, patternsize_bits
 11753              	.LVL725:
 939:sieve_extend.c ****         return; // rapid exit for small sizes
 11754              		.loc 1 939 9 is_stmt 0 view .LVU4011
 11755 4108 4C89F7   		mov	rdi, r14	#, _96
 11756 410b E8F0BEFF 		call	extendSieve_smallSize	#
 11756      FF
 11757              	.LVL726:
 940:sieve_extend.c ****     }
 11758              		.loc 1 940 9 is_stmt 1 view .LVU4012
 11759 4110 4C897C24 		mov	QWORD PTR 32[rsp], r15	# %sfp, patternsize_bits
 11759      20
 11760 4115 E993F4FF 		jmp	.L708	#
 11760      FF
 11761              	.LVL727:
 11762              	.L945:
 940:sieve_extend.c ****     }
 11763              		.loc 1 940 9 is_stmt 0 view .LVU4013
 11764              	.LBE503:
 11765              	.LBE505:
 11766              	.LBE510:
 11767              	.LBE517:
 11768              	.LBE591:
 11769              	.LBB592:
 11770              	.LBB527:
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11771              		.loc 1 947 37 is_stmt 1 view .LVU4014
 11772 411a E861E1FF 		call	extendSieve_shiftleft	#
 11772      FF
 11773              	.LVL728:
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 11774              		.loc 1 947 37 is_stmt 0 view .LVU4015
 11775 411f 90       		.p2align 4,,3
 11776 4120 E989F8FF 		jmp	.L724	#
 11776      FF
 11777              	.LVL729:
 11778              	.L939:
 947:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
GAS LISTING /tmp/cc7rm34x.s 			page 320


 11779              		.loc 1 947 37 view .LVU4016
 11780 4125 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# <retval>, %sfp
 11780      30
 11781              	.LBE527:
 11782              	.LBE592:
 11783              	.LBB593:
 11784              	.LBB518:
 11785              	.LBB511:
 11786              	# sieve_extend.c:1054:         if (range_stop > block_stop) return block; //range_stop = block_stop
1054:sieve_extend.c **** 
 11787              		.loc 1 1054 12 view .LVU4017
 11788 412a 4C89FA   		mov	rdx, r15	# block$pattern_size, patternsize_bits
 11789 412d 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# block$pattern_start, %sfp
 11789      18
 11790              	.LVL730:
1054:sieve_extend.c **** 
 11791              		.loc 1 1054 12 view .LVU4018
 11792 4132 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 11792      28
 11793 4137 4D8B7508 		mov	r14, QWORD PTR 8[r13]	# prephitmp_743, sieve_91->bits
 11794              	.LVL731:
1054:sieve_extend.c **** 
 11795              		.loc 1 1054 12 view .LVU4019
 11796 413b 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_743
 11796      08
 11797              	.LVL732:
1054:sieve_extend.c **** 
 11798              		.loc 1 1054 12 view .LVU4020
 11799 4140 E933F8FF 		jmp	.L707	#
 11799      FF
 11800              	.LVL733:
 11801              	.L937:
1054:sieve_extend.c **** 
 11802              		.loc 1 1054 12 view .LVU4021
 11803              	.LBE511:
 11804              	# sieve_extend.c:1039:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0
1039:sieve_extend.c **** 
 11805              		.loc 1 1039 18 view .LVU4022
 11806 4145 31D2     		xor	edx, edx	# block$pattern_size
 11807 4147 31F6     		xor	esi, esi	# block$pattern_start
 11808              	# sieve_extend.c:1034:     register counter_t prime   = 0;
1034:sieve_extend.c ****     counter_t patternsize_bits = 1;
 11809              		.loc 1 1034 24 view .LVU4023
 11810 4149 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 11810      28000000 
 11810      00
 11811 4152 E99FF7FF 		jmp	.L700	#
 11811      FF
 11812              	.LBE518:
 11813              	.LBE593:
 11814              		.cfi_endproc
 11815              	.LFE79:
 11817 4157 660F1F84 		.p2align 4
 11817      00000000 
 11817      00
 11819              	tune_benchmark:
 11820              	.LVL734:
GAS LISTING /tmp/cc7rm34x.s 			page 321


 11821              	.LFB86:
1198:sieve_extend.c **** 
1199:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 11822              		.loc 1 1199 94 is_stmt 1 view -0
 11823              		.cfi_startproc
 11824              		.loc 1 1199 94 is_stmt 0 view .LVU4025
 11825 4160 4154     		push	r12	#
 11826              		.cfi_def_cfa_offset 16
 11827              		.cfi_offset 12, -16
 11828 4162 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 11829              	# sieve_extend.c:1205:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1200:sieve_extend.c ****     counter_t passes = 0;
1201:sieve_extend.c ****     double elapsed_time = 0;
1202:sieve_extend.c ****     struct timespec start_time,end_time;
1203:sieve_extend.c ****     struct sieve_state *sieve_instance;
1204:sieve_extend.c **** 
1205:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 11830              		.loc 1 1205 44 view .LVU4026
 11831 4165 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 11832              	.LVL735:
 11833              	# sieve_extend.c:1199: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1199:sieve_extend.c ****     counter_t passes = 0;
 11834              		.loc 1 1199 94 view .LVU4027
 11835 4169 55       		push	rbp	#
 11836              		.cfi_def_cfa_offset 24
 11837              		.cfi_offset 6, -24
 11838              	# sieve_extend.c:1205:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 11839              		.loc 1 1205 44 view .LVU4028
 11840 416a 48C1E705 		sal	rdi, 5	# tmp115,
 11841              	# sieve_extend.c:1200:     counter_t passes = 0;
1200:sieve_extend.c ****     counter_t passes = 0;
 11842              		.loc 1 1200 15 view .LVU4029
 11843 416e 4531E4   		xor	r12d, r12d	# passes
 11844              	# sieve_extend.c:1199: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1199:sieve_extend.c ****     counter_t passes = 0;
 11845              		.loc 1 1199 94 view .LVU4030
 11846 4171 53       		push	rbx	#
 11847              		.cfi_def_cfa_offset 32
 11848              		.cfi_offset 3, -32
 11849              	# sieve_extend.c:1205:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 11850              		.loc 1 1205 44 view .LVU4031
 11851 4172 498D1C38 		lea	rbx, [r8+rdi]	# _2,
 11852              	# sieve_extend.c:1209:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1206:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1207:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
1208:sieve_extend.c **** 
1209:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11853              		.loc 1 1209 5 view .LVU4032
 11854 4176 BF010000 		mov	edi, 1	#,
 11854      00
 11855              	# sieve_extend.c:1199: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1199:sieve_extend.c ****     counter_t passes = 0;
 11856              		.loc 1 1199 94 view .LVU4033
 11857 417b 488D6424 		lea	rsp, -48[rsp]	#,
 11857      D0
 11858              		.cfi_def_cfa_offset 80
 11859              	# sieve_extend.c:1206:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
GAS LISTING /tmp/cc7rm34x.s 			page 322


1206:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11860              		.loc 1 1206 30 view .LVU4034
 11861 4180 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 11862              	# sieve_extend.c:1209:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 11863              		.loc 1 1209 5 view .LVU4035
 11864 4184 4889E6   		mov	rsi, rsp	# tmp119,
 11865              	.LVL736:
 11866              	# sieve_extend.c:1207:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1207:sieve_extend.c **** 
 11867              		.loc 1 1207 30 view .LVU4036
 11868 4187 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 11869              	# sieve_extend.c:1199: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1199:sieve_extend.c ****     counter_t passes = 0;
 11870              		.loc 1 1199 94 view .LVU4037
 11871 418b 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 11871      25280000 
 11871      00
 11872 4194 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7150, tmp160
 11872      28
 11873 4199 31C0     		xor	eax, eax	# tmp160
1200:sieve_extend.c ****     double elapsed_time = 0;
 11874              		.loc 1 1200 5 is_stmt 1 view .LVU4038
 11875              	.LVL737:
1201:sieve_extend.c ****     struct timespec start_time,end_time;
 11876              		.loc 1 1201 5 view .LVU4039
1202:sieve_extend.c ****     struct sieve_state *sieve_instance;
 11877              		.loc 1 1202 5 view .LVU4040
1203:sieve_extend.c **** 
 11878              		.loc 1 1203 5 view .LVU4041
1205:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11879              		.loc 1 1205 5 view .LVU4042
 11880              	# sieve_extend.c:1205:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1205:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11881              		.loc 1 1205 29 is_stmt 0 view .LVU4043
 11882 419b 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 11883              	# sieve_extend.c:1206:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1206:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11884              		.loc 1 1206 30 view .LVU4044
 11885 419f 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 11885      000000
 11886              	# sieve_extend.c:1207:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1207:sieve_extend.c **** 
 11887              		.loc 1 1207 30 view .LVU4045
 11888 41a6 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 11888      000000
 11889              	# sieve_extend.c:1205:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1205:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 11890              		.loc 1 1205 29 view .LVU4046
 11891 41ad 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 11891      000000
1206:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 11892              		.loc 1 1206 5 is_stmt 1 view .LVU4047
1207:sieve_extend.c **** 
 11893              		.loc 1 1207 5 view .LVU4048
 11894              		.loc 1 1209 5 view .LVU4049
 11895 41b4 E8000000 		call	clock_gettime@PLT	#
 11895      00
GAS LISTING /tmp/cc7rm34x.s 			page 323


 11896              	.LVL738:
1210:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 11897              		.loc 1 1210 5 view .LVU4050
 11898              		.loc 1 1210 11 view .LVU4051
 11899 41b9 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 11900 41bd C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 11900      40
 11901 41c2 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 11901      00000000 
 11902 41ca 7676     		jbe	.L952	#,
 11903 41cc E99E0000 		jmp	.L953	#
 11903      00
 11904              	.LVL739:
 11905              		.p2align 4,,7
 11906 41d1 0F1F8000 		.p2align 3
 11906      000000
 11907              	.L956:
1211:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11908              		.loc 1 1211 9 view .LVU4052
 11909              	# sieve_extend.c:1211:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
 11910              		.loc 1 1211 26 is_stmt 0 view .LVU4053
 11911 41d8 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 11912              	# sieve_extend.c:1213:         passes++;
1212:sieve_extend.c ****         delete_sieve(sieve_instance);
1213:sieve_extend.c ****         passes++;
 11913              		.loc 1 1213 15 view .LVU4054
 11914 41dc 4983C401 		add	r12, 1	# passes,
 11915              	.LVL740:
 11916              	# sieve_extend.c:1211:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1211:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11917              		.loc 1 1211 26 view .LVU4055
 11918 41e0 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 11919 41e3 E8C8F2FF 		call	sieve	#
 11919      FF
 11920              	.LVL741:
 11921              	.LBB594:
 11922              	.LBB595:
 11923              	# sieve_extend.c:118:     free(sieve->bitarray);
 118:sieve_extend.c ****     free(sieve);
 11924              		.loc 1 118 5 view .LVU4056
 11925 41e8 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_37->bitarray
 11926              	.LBE595:
 11927              	.LBE594:
 11928              	# sieve_extend.c:1211:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1211:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11929              		.loc 1 1211 26 view .LVU4057
 11930 41eb 4889C5   		mov	rbp, rax	# sieve_instance, tmp151
 11931              	.LVL742:
1212:sieve_extend.c ****         delete_sieve(sieve_instance);
 11932              		.loc 1 1212 9 is_stmt 1 view .LVU4058
 11933              	.LBB597:
 11934              	.LBI594:
 117:sieve_extend.c ****     free(sieve->bitarray);
 11935              		.loc 1 117 13 view .LVU4059
 11936              	.LBB596:
 118:sieve_extend.c ****     free(sieve);
 11937              		.loc 1 118 5 view .LVU4060
GAS LISTING /tmp/cc7rm34x.s 			page 324


 11938 41ee E8000000 		call	free@PLT	#
 11938      00
 11939              	.LVL743:
 119:sieve_extend.c **** }
 11940              		.loc 1 119 5 view .LVU4061
 11941 41f3 4889EF   		mov	rdi, rbp	#, sieve_instance
 11942 41f6 E8000000 		call	free@PLT	#
 11942      00
 11943              	.LVL744:
 119:sieve_extend.c **** }
 11944              		.loc 1 119 5 is_stmt 0 view .LVU4062
 11945              	.LBE596:
 11946              	.LBE597:
 11947              		.loc 1 1213 9 is_stmt 1 view .LVU4063
1214:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 11948              		.loc 1 1214 9 view .LVU4064
 11949 41fb 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 11949      10
 11950 4200 BF010000 		mov	edi, 1	#,
 11950      00
 11951 4205 E8000000 		call	clock_gettime@PLT	#
 11951      00
 11952              	.LVL745:
1215:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 11953              		.loc 1 1215 9 view .LVU4065
 11954              	# sieve_extend.c:1215:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11955              		.loc 1 1215 58 is_stmt 0 view .LVU4066
 11956 420a C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 11956      442418
 11957              	# sieve_extend.c:1215:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11958              		.loc 1 1215 64 view .LVU4067
 11959 4211 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 11959      0C24
 11960              	# sieve_extend.c:1215:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11961              		.loc 1 1215 104 view .LVU4068
 11962 4217 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 11962      5C2408
 11963              	# sieve_extend.c:1215:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11964              		.loc 1 1215 40 view .LVU4069
 11965 421e C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 11965      542410
 11966 4225 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
 11966      05000000 
 11966      00
 11967 422e C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 11967      1D000000 
 11967      00
 11968              	# sieve_extend.c:1215:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 11969              		.loc 1 1215 22 view .LVU4070
 11970 4237 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
 11971              	.LVL746:
1210:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11972              		.loc 1 1210 11 is_stmt 1 view .LVU4071
 11973 423b C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 11973      40
 11974 4240 7706     		ja	.L967	#,
 11975              	.LVL747:
GAS LISTING /tmp/cc7rm34x.s 			page 325


 11976              	.L952:
 11977              	# sieve_extend.c:1210:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1210:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11978              		.loc 1 1210 79 is_stmt 0 discriminator 1 view .LVU4072
 11979 4242 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 11980 4246 7790     		ja	.L956	#,
 11981              	.L967:
1210:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11982              		.loc 1 1210 79 discriminator 1 view .LVU4073
 11983 4248 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 11983      F4
 11984 424d 4D85E4   		test	r12, r12	# passes
 11985 4250 7919     		jns	.L958	#,
1210:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11986              		.loc 1 1210 79 discriminator 1 view .LVU4074
 11987 4252 4C89E6   		mov	rsi, r12	# tmp135, passes
 11988 4255 4D89E1   		mov	r9, r12	# tmp136, passes
 11989 4258 48D1EE   		shr	rsi	# tmp135
 11990 425b 4183E101 		and	r9d, 1	# tmp136,
 11991 425f 4C09CE   		or	rsi, r9	# tmp148, tmp136
 11992 4262 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 11992      EE
 11993 4267 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 11994              	.L958:
1210:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 11995              		.loc 1 1210 79 discriminator 1 view .LVU4075
 11996 426b C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 11997              	.LVL748:
 11998              	.L953:
1216:sieve_extend.c ****     }
1217:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 11999              		.loc 1 1217 5 is_stmt 1 view .LVU4076
 12000              	# sieve_extend.c:1217:     tuning_result[tuning_result_index].passes = passes;
 12001              		.loc 1 1217 47 is_stmt 0 view .LVU4077
 12002 426f 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
1218:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 12003              		.loc 1 1218 5 is_stmt 1 view .LVU4078
 12004              	# sieve_extend.c:1218:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 12005              		.loc 1 1218 53 is_stmt 0 view .LVU4079
 12006 4273 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 12006      50
1219:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 12007              		.loc 1 1219 5 is_stmt 1 view .LVU4080
 12008              	# sieve_extend.c:1219:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 12009              		.loc 1 1219 44 is_stmt 0 view .LVU4081
 12010 4278 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 12010      58
 12011              	# sieve_extend.c:1220: }
1220:sieve_extend.c **** }
 12012              		.loc 1 1220 1 view .LVU4082
 12013 427d 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.7150
 12013      28
 12014 4282 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 12014      25280000 
 12014      00
 12015 428b 750A     		jne	.L968	#,
 12016 428d 488D6424 		lea	rsp, 48[rsp]	#,
GAS LISTING /tmp/cc7rm34x.s 			page 326


 12016      30
 12017              		.cfi_remember_state
 12018              		.cfi_def_cfa_offset 32
 12019 4292 5B       		pop	rbx	#
 12020              		.cfi_def_cfa_offset 24
 12021 4293 5D       		pop	rbp	#
 12022              		.cfi_def_cfa_offset 16
 12023 4294 415C     		pop	r12	#
 12024              		.cfi_def_cfa_offset 8
 12025 4296 C3       		ret	
 12026              	.L968:
 12027              		.cfi_restore_state
 12028 4297 E8000000 		call	__stack_chk_fail@PLT	#
 12028      00
 12029              	.LVL749:
 12030              		.cfi_endproc
 12031              	.LFE86:
 12033 429c 0F1F4000 		.p2align 4
 12034              		.globl	shiftvec
 12036              	shiftvec:
 12037              	.LVL750:
 12038              	.LFB70:
 659:sieve_extend.c ****     int i = 0;
 12039              		.loc 1 659 1 is_stmt 1 view -0
 12040              		.cfi_startproc
 659:sieve_extend.c ****     int i = 0;
 12041              		.loc 1 659 1 is_stmt 0 view .LVU4084
 12042 42a0 F30F1EFA 		endbr64	
 660:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 12043              		.loc 1 660 5 is_stmt 1 view .LVU4085
 12044              	.LVL751:
 662:sieve_extend.c ****     {
 12045              		.loc 1 662 5 view .LVU4086
 662:sieve_extend.c ****     {
 12046              		.loc 1 662 12 view .LVU4087
 12047              	# sieve_extend.c:662:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 662:sieve_extend.c ****     {
 12048              		.loc 1 662 5 is_stmt 0 view .LVU4088
 12049 42a4 83FA04   		cmp	edx, 4	# size,
 12050 42a7 0F8E9D03 		jle	.L1014	#,
 12050      0000
 12051 42ad 41BB4000 		mov	r11d, 64	# tmp130,
 12051      0000
 12052 42b3 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 12053 42b7 4489D8   		mov	eax, r11d	# _4, tmp130
 12054 42ba C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 12055 42be 29C8     		sub	eax, ecx	# _4, shift
 12056              	.LBB598:
 12057              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12058              		.loc 1 665 25 view .LVU4089
 12059 42c0 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_114, off
 12059      1655
 12060              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12061              		.loc 1 665 34 view .LVU4090
 12062 42c6 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.588_114, offset: 0B]
GAS LISTING /tmp/cc7rm34x.s 			page 327


 12063 42ca C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 12063      C0
 12064 42cf 41C1E802 		shr	r8d, 2	# _25,
 12065 42d3 41B90100 		mov	r9d, 1	# ivtmp.585,
 12065      0000
 12066              	.LBE598:
 12067              	.LBB599:
 12068              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12069              		.loc 1 667 34 view .LVU4091
 12070 42d9 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.575, vect__102.574, _4
 12071              	.LBE599:
 12072              	.LBB600:
 12073              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12074              		.loc 1 665 34 view .LVU4092
 12075 42dd C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.579, tmp269, shift
 12076 42e1 458D5001 		lea	r10d, 1[r8]	# tmp164,
 12077 42e5 4589C3   		mov	r11d, r8d	# tmp169, _25
 12078              	.LBE600:
 12079              	.LBB601:
 12080              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12081              		.loc 1 667 22 view .LVU4093
 12082 42e8 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.580, vect__57.575, vect__104.579
 12083 42ec 4183E307 		and	r11d, 7	# tmp169,
 12084              	.LVL752:
 667:sieve_extend.c ****     }
 12085              		.loc 1 667 22 view .LVU4094
 12086              	.LBE601:
 12087              	.LBB602:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12088              		.loc 1 664 25 is_stmt 1 view .LVU4095
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12089              		.loc 1 665 13 view .LVU4096
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12090              		.loc 1 664 32 view .LVU4097
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12091              		.loc 1 664 25 view .LVU4098
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12092              		.loc 1 665 13 view .LVU4099
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12093              		.loc 1 664 32 view .LVU4100
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12094              		.loc 1 664 25 view .LVU4101
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12095              		.loc 1 665 13 view .LVU4102
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12096              		.loc 1 664 32 view .LVU4103
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12097              		.loc 1 664 25 view .LVU4104
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12098              		.loc 1 665 13 view .LVU4105
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12099              		.loc 1 664 32 view .LVU4106
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12100              		.loc 1 664 25 view .LVU4107
GAS LISTING /tmp/cc7rm34x.s 			page 328


 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12101              		.loc 1 664 25 is_stmt 0 view .LVU4108
 12102              	.LBE602:
 12103              	.LBB603:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12104              		.loc 1 666 25 is_stmt 1 view .LVU4109
 667:sieve_extend.c ****     }
 12105              		.loc 1 667 13 view .LVU4110
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12106              		.loc 1 666 32 view .LVU4111
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12107              		.loc 1 666 25 view .LVU4112
 667:sieve_extend.c ****     }
 12108              		.loc 1 667 13 view .LVU4113
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12109              		.loc 1 666 32 view .LVU4114
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12110              		.loc 1 666 25 view .LVU4115
 667:sieve_extend.c ****     }
 12111              		.loc 1 667 13 view .LVU4116
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12112              		.loc 1 666 32 view .LVU4117
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12113              		.loc 1 666 25 view .LVU4118
 667:sieve_extend.c ****     }
 12114              		.loc 1 667 13 view .LVU4119
 12115 42f0 4183FA01 		cmp	r10d, 1	# tmp164,
 12116 42f4 B8200000 		mov	eax, 32	# ivtmp.588,
 12116      00
 12117              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12118              		.loc 1 667 22 is_stmt 0 view .LVU4120
 12119 42f9 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], vect__58
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12120              		.loc 1 666 32 is_stmt 1 view .LVU4121
 12121              	.LVL753:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12122              		.loc 1 666 25 view .LVU4122
 12123              	.LBE603:
 662:sieve_extend.c ****     {
 12124              		.loc 1 662 24 view .LVU4123
 662:sieve_extend.c ****     {
 12125              		.loc 1 662 12 view .LVU4124
 12126 42fd 0F866002 		jbe	.L1012	#,
 12126      0000
 12127 4303 4585DB   		test	r11d, r11d	# tmp169
 12128 4306 0F841E01 		je	.L972	#,
 12128      0000
 12129 430c 4183FB01 		cmp	r11d, 1	# tmp169,
 12130 4310 0F84E500 		je	.L999	#,
 12130      0000
 12131 4316 4183FB02 		cmp	r11d, 2	# tmp169,
 12132 431a 0F84B600 		je	.L1000	#,
 12132      0000
 12133 4320 4183FB03 		cmp	r11d, 3	# tmp169,
 12134 4324 0F848700 		je	.L1001	#,
 12134      0000
GAS LISTING /tmp/cc7rm34x.s 			page 329


 12135 432a 4183FB04 		cmp	r11d, 4	# tmp169,
 12136 432e 745B     		je	.L1002	#,
 12137 4330 4183FB05 		cmp	r11d, 5	# tmp169,
 12138 4334 7430     		je	.L1003	#,
 12139 4336 4183FB06 		cmp	r11d, 6	# tmp169,
 12140 433a 0F85DC02 		jne	.L1015	#,
 12140      0000
 12141              	.L1004:
 12142              	.LVL754:
 12143              	.LBB604:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12144              		.loc 1 664 25 view .LVU4125
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12145              		.loc 1 665 13 view .LVU4126
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12146              		.loc 1 664 32 view .LVU4127
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12147              		.loc 1 664 25 view .LVU4128
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12148              		.loc 1 665 13 view .LVU4129
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12149              		.loc 1 664 32 view .LVU4130
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12150              		.loc 1 664 25 view .LVU4131
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12151              		.loc 1 665 13 view .LVU4132
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12152              		.loc 1 664 32 view .LVU4133
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12153              		.loc 1 664 25 view .LVU4134
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12154              		.loc 1 665 13 view .LVU4135
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12155              		.loc 1 664 32 view .LVU4136
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12156              		.loc 1 664 25 view .LVU4137
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12157              		.loc 1 664 25 is_stmt 0 view .LVU4138
 12158              	.LBE604:
 12159              	.LBB605:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12160              		.loc 1 666 25 is_stmt 1 view .LVU4139
 667:sieve_extend.c ****     }
 12161              		.loc 1 667 13 view .LVU4140
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12162              		.loc 1 666 32 view .LVU4141
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12163              		.loc 1 666 25 view .LVU4142
 667:sieve_extend.c ****     }
 12164              		.loc 1 667 13 view .LVU4143
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12165              		.loc 1 666 32 view .LVU4144
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12166              		.loc 1 666 25 view .LVU4145
 667:sieve_extend.c ****     }
 12167              		.loc 1 667 13 view .LVU4146
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cc7rm34x.s 			page 330


 12168              		.loc 1 666 32 view .LVU4147
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12169              		.loc 1 666 25 view .LVU4148
 667:sieve_extend.c ****     }
 12170              		.loc 1 667 13 view .LVU4149
 12171              	.LBE605:
 12172              	.LBB606:
 12173              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12174              		.loc 1 665 25 is_stmt 0 view .LVU4150
 12175 4340 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_114
 12175      240655
 12176 4347 4183C101 		add	r9d, 1	# ivtmp.585,
 12177              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12178              		.loc 1 665 34 view .LVU4151
 12179 434b C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.588_114, offset: 
 12179      06
 12180              	.LBE606:
 12181              	.LBB607:
 12182              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12183              		.loc 1 667 34 view .LVU4152
 12184 4350 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.575, vect__102.574, _4
 12185              	.LBE607:
 12186              	.LBB608:
 12187              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12188              		.loc 1 665 34 view .LVU4153
 12189 4354 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.579, tmp279, shift
 12190              	.LBE608:
 12191              	.LBB609:
 12192              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12193              		.loc 1 667 22 view .LVU4154
 12194 4358 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.580, vect__57.575, vect__104.579
 12194      D7
 12195 435d C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], vect
 12195      07
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12196              		.loc 1 666 32 is_stmt 1 view .LVU4155
 12197              	.LVL755:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12198              		.loc 1 666 25 view .LVU4156
 12199              	.LBE609:
 662:sieve_extend.c ****     {
 12200              		.loc 1 662 24 view .LVU4157
 662:sieve_extend.c ****     {
 12201              		.loc 1 662 12 view .LVU4158
 12202 4362 4883C020 		add	rax, 32	# ivtmp.588,
 12203              	.L1003:
 12204              	.LVL756:
 12205              	.LBB610:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12206              		.loc 1 664 25 view .LVU4159
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12207              		.loc 1 665 13 view .LVU4160
GAS LISTING /tmp/cc7rm34x.s 			page 331


 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12208              		.loc 1 664 32 view .LVU4161
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12209              		.loc 1 664 25 view .LVU4162
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12210              		.loc 1 665 13 view .LVU4163
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12211              		.loc 1 664 32 view .LVU4164
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12212              		.loc 1 664 25 view .LVU4165
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12213              		.loc 1 665 13 view .LVU4166
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12214              		.loc 1 664 32 view .LVU4167
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12215              		.loc 1 664 25 view .LVU4168
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12216              		.loc 1 665 13 view .LVU4169
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12217              		.loc 1 664 32 view .LVU4170
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12218              		.loc 1 664 25 view .LVU4171
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12219              		.loc 1 664 25 is_stmt 0 view .LVU4172
 12220              	.LBE610:
 12221              	.LBB611:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12222              		.loc 1 666 25 is_stmt 1 view .LVU4173
 667:sieve_extend.c ****     }
 12223              		.loc 1 667 13 view .LVU4174
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12224              		.loc 1 666 32 view .LVU4175
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12225              		.loc 1 666 25 view .LVU4176
 667:sieve_extend.c ****     }
 12226              		.loc 1 667 13 view .LVU4177
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12227              		.loc 1 666 32 view .LVU4178
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12228              		.loc 1 666 25 view .LVU4179
 667:sieve_extend.c ****     }
 12229              		.loc 1 667 13 view .LVU4180
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12230              		.loc 1 666 32 view .LVU4181
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12231              		.loc 1 666 25 view .LVU4182
 667:sieve_extend.c ****     }
 12232              		.loc 1 667 13 view .LVU4183
 12233              	.LBE611:
 12234              	.LBB612:
 12235              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12236              		.loc 1 665 25 is_stmt 0 view .LVU4184
 12237 4366 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_114,
 12237      2C0655
 12238 436d 4183C101 		add	r9d, 1	# ivtmp.585,
 12239              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cc7rm34x.s 			page 332


 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12240              		.loc 1 665 34 view .LVU4185
 12241 4371 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.588_114, offset: 0
 12241      06
 12242              	.LBE612:
 12243              	.LBB613:
 12244              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12245              		.loc 1 667 34 view .LVU4186
 12246 4376 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.575, vect__102.574, _4
 12247              	.LBE613:
 12248              	.LBB614:
 12249              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12250              		.loc 1 665 34 view .LVU4187
 12251 437a C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.579, tmp280, shift
 12252              	.LBE614:
 12253              	.LBB615:
 12254              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12255              		.loc 1 667 22 view .LVU4188
 12256 437e C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.580, vect__57.575, vect__104.579
 12257 4382 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], vect
 12257      07
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12258              		.loc 1 666 32 is_stmt 1 view .LVU4189
 12259              	.LVL757:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12260              		.loc 1 666 25 view .LVU4190
 12261              	.LBE615:
 662:sieve_extend.c ****     {
 12262              		.loc 1 662 24 view .LVU4191
 662:sieve_extend.c ****     {
 12263              		.loc 1 662 12 view .LVU4192
 12264 4387 4883C020 		add	rax, 32	# ivtmp.588,
 12265              	.L1002:
 12266              	.LVL758:
 12267              	.LBB616:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12268              		.loc 1 664 25 view .LVU4193
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12269              		.loc 1 665 13 view .LVU4194
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12270              		.loc 1 664 32 view .LVU4195
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12271              		.loc 1 664 25 view .LVU4196
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12272              		.loc 1 665 13 view .LVU4197
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12273              		.loc 1 664 32 view .LVU4198
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12274              		.loc 1 664 25 view .LVU4199
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12275              		.loc 1 665 13 view .LVU4200
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12276              		.loc 1 664 32 view .LVU4201
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cc7rm34x.s 			page 333


 12277              		.loc 1 664 25 view .LVU4202
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12278              		.loc 1 665 13 view .LVU4203
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12279              		.loc 1 664 32 view .LVU4204
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12280              		.loc 1 664 25 view .LVU4205
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12281              		.loc 1 664 25 is_stmt 0 view .LVU4206
 12282              	.LBE616:
 12283              	.LBB617:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12284              		.loc 1 666 25 is_stmt 1 view .LVU4207
 667:sieve_extend.c ****     }
 12285              		.loc 1 667 13 view .LVU4208
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12286              		.loc 1 666 32 view .LVU4209
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12287              		.loc 1 666 25 view .LVU4210
 667:sieve_extend.c ****     }
 12288              		.loc 1 667 13 view .LVU4211
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12289              		.loc 1 666 32 view .LVU4212
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12290              		.loc 1 666 25 view .LVU4213
 667:sieve_extend.c ****     }
 12291              		.loc 1 667 13 view .LVU4214
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12292              		.loc 1 666 32 view .LVU4215
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12293              		.loc 1 666 25 view .LVU4216
 667:sieve_extend.c ****     }
 12294              		.loc 1 667 13 view .LVU4217
 12295              	.LBE617:
 12296              	.LBB618:
 12297              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12298              		.loc 1 665 25 is_stmt 0 view .LVU4218
 12299 438b C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_114,
 12299      040655
 12300 4392 4183C101 		add	r9d, 1	# ivtmp.585,
 12301              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12302              		.loc 1 665 34 view .LVU4219
 12303 4396 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.588_114, offset: 
 12303      06
 12304              	.LBE618:
 12305              	.LBB619:
 12306              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12307              		.loc 1 667 34 view .LVU4220
 12308 439b C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.575, vect__102.574, _4
 12309              	.LBE619:
 12310              	.LBB620:
 12311              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12312              		.loc 1 665 34 view .LVU4221
GAS LISTING /tmp/cc7rm34x.s 			page 334


 12313 439f C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.579, tmp281, shift
 12314              	.LBE620:
 12315              	.LBB621:
 12316              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12317              		.loc 1 667 22 view .LVU4222
 12318 43a3 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.580, vect__57.575, vect__104.579
 12318      E3
 12319 43a8 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], vec
 12319      07
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12320              		.loc 1 666 32 is_stmt 1 view .LVU4223
 12321              	.LVL759:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12322              		.loc 1 666 25 view .LVU4224
 12323              	.LBE621:
 662:sieve_extend.c ****     {
 12324              		.loc 1 662 24 view .LVU4225
 662:sieve_extend.c ****     {
 12325              		.loc 1 662 12 view .LVU4226
 12326 43ad 4883C020 		add	rax, 32	# ivtmp.588,
 12327              	.L1001:
 12328              	.LVL760:
 12329              	.LBB622:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12330              		.loc 1 664 25 view .LVU4227
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12331              		.loc 1 665 13 view .LVU4228
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12332              		.loc 1 664 32 view .LVU4229
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12333              		.loc 1 664 25 view .LVU4230
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12334              		.loc 1 665 13 view .LVU4231
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12335              		.loc 1 664 32 view .LVU4232
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12336              		.loc 1 664 25 view .LVU4233
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12337              		.loc 1 665 13 view .LVU4234
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12338              		.loc 1 664 32 view .LVU4235
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12339              		.loc 1 664 25 view .LVU4236
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12340              		.loc 1 665 13 view .LVU4237
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12341              		.loc 1 664 32 view .LVU4238
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12342              		.loc 1 664 25 view .LVU4239
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12343              		.loc 1 664 25 is_stmt 0 view .LVU4240
 12344              	.LBE622:
 12345              	.LBB623:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12346              		.loc 1 666 25 is_stmt 1 view .LVU4241
 667:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 335


 12347              		.loc 1 667 13 view .LVU4242
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12348              		.loc 1 666 32 view .LVU4243
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12349              		.loc 1 666 25 view .LVU4244
 667:sieve_extend.c ****     }
 12350              		.loc 1 667 13 view .LVU4245
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12351              		.loc 1 666 32 view .LVU4246
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12352              		.loc 1 666 25 view .LVU4247
 667:sieve_extend.c ****     }
 12353              		.loc 1 667 13 view .LVU4248
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12354              		.loc 1 666 32 view .LVU4249
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12355              		.loc 1 666 25 view .LVU4250
 667:sieve_extend.c ****     }
 12356              		.loc 1 667 13 view .LVU4251
 12357              	.LBE623:
 12358              	.LBB624:
 12359              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12360              		.loc 1 665 25 is_stmt 0 view .LVU4252
 12361 43b1 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_114
 12361      2C0655
 12362 43b8 4183C101 		add	r9d, 1	# ivtmp.585,
 12363              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12364              		.loc 1 665 34 view .LVU4253
 12365 43bc C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.588_114, offset: 
 12365      06
 12366              	.LBE624:
 12367              	.LBB625:
 12368              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12369              		.loc 1 667 34 view .LVU4254
 12370 43c1 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.575, vect__102.574, _4
 12371              	.LBE625:
 12372              	.LBB626:
 12373              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12374              		.loc 1 665 34 view .LVU4255
 12375 43c5 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.579, tmp282, shift
 12376              	.LBE626:
 12377              	.LBB627:
 12378              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12379              		.loc 1 667 22 view .LVU4256
 12380 43c9 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.580, vect__57.575, vect__104.579
 12381 43cd C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], vect
 12381      07
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12382              		.loc 1 666 32 is_stmt 1 view .LVU4257
 12383              	.LVL761:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12384              		.loc 1 666 25 view .LVU4258
GAS LISTING /tmp/cc7rm34x.s 			page 336


 12385              	.LBE627:
 662:sieve_extend.c ****     {
 12386              		.loc 1 662 24 view .LVU4259
 662:sieve_extend.c ****     {
 12387              		.loc 1 662 12 view .LVU4260
 12388 43d2 4883C020 		add	rax, 32	# ivtmp.588,
 12389              	.L1000:
 12390              	.LVL762:
 12391              	.LBB628:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12392              		.loc 1 664 25 view .LVU4261
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12393              		.loc 1 665 13 view .LVU4262
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12394              		.loc 1 664 32 view .LVU4263
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12395              		.loc 1 664 25 view .LVU4264
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12396              		.loc 1 665 13 view .LVU4265
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12397              		.loc 1 664 32 view .LVU4266
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12398              		.loc 1 664 25 view .LVU4267
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12399              		.loc 1 665 13 view .LVU4268
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12400              		.loc 1 664 32 view .LVU4269
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12401              		.loc 1 664 25 view .LVU4270
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12402              		.loc 1 665 13 view .LVU4271
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12403              		.loc 1 664 32 view .LVU4272
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12404              		.loc 1 664 25 view .LVU4273
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12405              		.loc 1 664 25 is_stmt 0 view .LVU4274
 12406              	.LBE628:
 12407              	.LBB629:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12408              		.loc 1 666 25 is_stmt 1 view .LVU4275
 667:sieve_extend.c ****     }
 12409              		.loc 1 667 13 view .LVU4276
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12410              		.loc 1 666 32 view .LVU4277
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12411              		.loc 1 666 25 view .LVU4278
 667:sieve_extend.c ****     }
 12412              		.loc 1 667 13 view .LVU4279
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12413              		.loc 1 666 32 view .LVU4280
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12414              		.loc 1 666 25 view .LVU4281
 667:sieve_extend.c ****     }
 12415              		.loc 1 667 13 view .LVU4282
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12416              		.loc 1 666 32 view .LVU4283
GAS LISTING /tmp/cc7rm34x.s 			page 337


 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12417              		.loc 1 666 25 view .LVU4284
 667:sieve_extend.c ****     }
 12418              		.loc 1 667 13 view .LVU4285
 12419              	.LBE629:
 12420              	.LBB630:
 12421              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12422              		.loc 1 665 25 is_stmt 0 view .LVU4286
 12423 43d6 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_114,
 12423      240655
 12424 43dd 4183C101 		add	r9d, 1	# ivtmp.585,
 12425              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12426              		.loc 1 665 34 view .LVU4287
 12427 43e1 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.588_114, offset: 0
 12427      06
 12428              	.LBE630:
 12429              	.LBB631:
 12430              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12431              		.loc 1 667 34 view .LVU4288
 12432 43e6 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.575, vect__102.574, _4
 12433              	.LBE631:
 12434              	.LBB632:
 12435              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12436              		.loc 1 665 34 view .LVU4289
 12437 43ea C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.579, tmp283, shift
 12438              	.LBE632:
 12439              	.LBB633:
 12440              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12441              		.loc 1 667 22 view .LVU4290
 12442 43ee C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.580, vect__57.575, vect__104.579
 12443 43f2 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], vect
 12443      07
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12444              		.loc 1 666 32 is_stmt 1 view .LVU4291
 12445              	.LVL763:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12446              		.loc 1 666 25 view .LVU4292
 12447              	.LBE633:
 662:sieve_extend.c ****     {
 12448              		.loc 1 662 24 view .LVU4293
 662:sieve_extend.c ****     {
 12449              		.loc 1 662 12 view .LVU4294
 12450 43f7 4883C020 		add	rax, 32	# ivtmp.588,
 12451              	.L999:
 12452              	.LVL764:
 12453              	.LBB634:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12454              		.loc 1 664 25 view .LVU4295
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12455              		.loc 1 665 13 view .LVU4296
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12456              		.loc 1 664 32 view .LVU4297
GAS LISTING /tmp/cc7rm34x.s 			page 338


 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12457              		.loc 1 664 25 view .LVU4298
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12458              		.loc 1 665 13 view .LVU4299
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12459              		.loc 1 664 32 view .LVU4300
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12460              		.loc 1 664 25 view .LVU4301
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12461              		.loc 1 665 13 view .LVU4302
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12462              		.loc 1 664 32 view .LVU4303
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12463              		.loc 1 664 25 view .LVU4304
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12464              		.loc 1 665 13 view .LVU4305
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12465              		.loc 1 664 32 view .LVU4306
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12466              		.loc 1 664 25 view .LVU4307
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12467              		.loc 1 664 25 is_stmt 0 view .LVU4308
 12468              	.LBE634:
 12469              	.LBB635:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12470              		.loc 1 666 25 is_stmt 1 view .LVU4309
 667:sieve_extend.c ****     }
 12471              		.loc 1 667 13 view .LVU4310
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12472              		.loc 1 666 32 view .LVU4311
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12473              		.loc 1 666 25 view .LVU4312
 667:sieve_extend.c ****     }
 12474              		.loc 1 667 13 view .LVU4313
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12475              		.loc 1 666 32 view .LVU4314
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12476              		.loc 1 666 25 view .LVU4315
 667:sieve_extend.c ****     }
 12477              		.loc 1 667 13 view .LVU4316
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12478              		.loc 1 666 32 view .LVU4317
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12479              		.loc 1 666 25 view .LVU4318
 667:sieve_extend.c ****     }
 12480              		.loc 1 667 13 view .LVU4319
 12481              	.LBE635:
 12482              	.LBB636:
 12483              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12484              		.loc 1 665 25 is_stmt 0 view .LVU4320
 12485 43fb C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_114,
 12485      0C0655
 12486 4402 4183C101 		add	r9d, 1	# ivtmp.585,
 12487              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12488              		.loc 1 665 34 view .LVU4321
GAS LISTING /tmp/cc7rm34x.s 			page 339


 12489 4406 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.588_114, offset: 
 12489      06
 12490              	.LBE636:
 12491              	.LBB637:
 12492              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12493              		.loc 1 667 34 view .LVU4322
 12494 440b C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.575, vect__102.574, _4
 12495              	.LBE637:
 12496              	.LBB638:
 12497              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12498              		.loc 1 665 34 view .LVU4323
 12499 440f C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.579, tmp284, shift
 12500              	.LBE638:
 12501              	.LBB639:
 12502              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12503              		.loc 1 667 22 view .LVU4324
 12504 4413 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.580, vect__57.575, vect__104.579
 12504      EC
 12505 4418 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], vec
 12505      07
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12506              		.loc 1 666 32 is_stmt 1 view .LVU4325
 12507              	.LVL765:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12508              		.loc 1 666 25 view .LVU4326
 12509              	.LBE639:
 662:sieve_extend.c ****     {
 12510              		.loc 1 662 24 view .LVU4327
 662:sieve_extend.c ****     {
 12511              		.loc 1 662 12 view .LVU4328
 12512 441d 4883C020 		add	rax, 32	# ivtmp.588,
 12513 4421 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.585
 12514 4424 0F863901 		jbe	.L1012	#,
 12514      0000
 12515              	.L972:
 12516              	.LVL766:
 12517              	.LBB640:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12518              		.loc 1 664 25 view .LVU4329
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12519              		.loc 1 665 13 view .LVU4330
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12520              		.loc 1 664 32 view .LVU4331
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12521              		.loc 1 664 25 view .LVU4332
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12522              		.loc 1 665 13 view .LVU4333
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12523              		.loc 1 664 32 view .LVU4334
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12524              		.loc 1 664 25 view .LVU4335
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12525              		.loc 1 665 13 view .LVU4336
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cc7rm34x.s 			page 340


 12526              		.loc 1 664 32 view .LVU4337
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12527              		.loc 1 664 25 view .LVU4338
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12528              		.loc 1 665 13 view .LVU4339
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12529              		.loc 1 664 32 view .LVU4340
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12530              		.loc 1 664 25 view .LVU4341
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12531              		.loc 1 664 25 is_stmt 0 view .LVU4342
 12532              	.LBE640:
 12533              	.LBB641:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12534              		.loc 1 666 25 is_stmt 1 view .LVU4343
 667:sieve_extend.c ****     }
 12535              		.loc 1 667 13 view .LVU4344
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12536              		.loc 1 666 32 view .LVU4345
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12537              		.loc 1 666 25 view .LVU4346
 667:sieve_extend.c ****     }
 12538              		.loc 1 667 13 view .LVU4347
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12539              		.loc 1 666 32 view .LVU4348
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12540              		.loc 1 666 25 view .LVU4349
 667:sieve_extend.c ****     }
 12541              		.loc 1 667 13 view .LVU4350
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12542              		.loc 1 666 32 view .LVU4351
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12543              		.loc 1 666 25 view .LVU4352
 667:sieve_extend.c ****     }
 12544              		.loc 1 667 13 view .LVU4353
 12545              	.LBE641:
 12546              	.LBB642:
 12547              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12548              		.loc 1 665 25 is_stmt 0 view .LVU4354
 12549 442a C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_114
 12549      340655
 12550 4431 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_11
 12550      74062055 
 12551              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12552              		.loc 1 665 34 view .LVU4355
 12553 4439 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.588_114, offset: 0
 12553      06
 12554              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12555              		.loc 1 665 25 view .LVU4356
 12556 443e C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_1
 12556      54064055 
 12557              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12558              		.loc 1 665 34 view .LVU4357
GAS LISTING /tmp/cc7rm34x.s 			page 341


 12559 4446 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.588_114, offset:
 12559      0620
 12560 444c 4183C108 		add	r9d, 8	# ivtmp.585,
 12561              	.LBE642:
 12562              	.LBB643:
 12563              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12564              		.loc 1 667 34 view .LVU4358
 12565 4450 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.575, vect__102.574, _4
 12566 4454 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.575, vect__102.574, _4
 12567              	.LBE643:
 12568              	.LBB644:
 12569              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12570              		.loc 1 665 34 view .LVU4359
 12571 4458 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.579, tmp270, shift
 12572 445c C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.579, tmp271, shift
 12573 4460 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.588_114, offset
 12573      0640
 12574              	.LBE644:
 12575              	.LBB645:
 12576              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12577              		.loc 1 667 22 view .LVU4360
 12578 4466 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.580, vect__57.575, vect__104.579
 12579              	.LBE645:
 12580              	.LBB646:
 12581              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12582              		.loc 1 665 34 view .LVU4361
 12583 446a C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.588_114, offset
 12583      06800000 
 12583      00
 12584              	.LBE646:
 12585              	.LBB647:
 12586              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12587              		.loc 1 667 22 view .LVU4362
 12588 4473 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.580, vect__57.575, vect__104.579
 12588      C8
 12589              	.LBE647:
 12590              	.LBB648:
 12591              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12592              		.loc 1 665 25 view .LVU4363
 12593 4478 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_1
 12593      7C066055 
 12594 4480 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_1
 12594      BC068000 
 12594      000055
 12595              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12596              		.loc 1 665 34 view .LVU4364
 12597 448b C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.588_114, offset:
 12597      0660
 12598              	.LBE648:
 12599              	.LBB649:
GAS LISTING /tmp/cc7rm34x.s 			page 342


 12600              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12601              		.loc 1 667 34 view .LVU4365
 12602 4491 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.575, vect__102.574, _4
 12603              	.LBE649:
 12604              	.LBB650:
 12605              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12606              		.loc 1 665 34 view .LVU4366
 12607 4495 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.579, tmp272, shift
 12608              	.LBE650:
 12609              	.LBB651:
 12610              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12611              		.loc 1 667 34 view .LVU4367
 12612 4499 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.575, vect__102.574, _4
 12613              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12614              		.loc 1 667 22 view .LVU4368
 12615 449d C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], vect
 12615      07
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12616              		.loc 1 666 32 is_stmt 1 view .LVU4369
 12617              	.LVL767:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12618              		.loc 1 666 25 view .LVU4370
 12619              	.LBE651:
 662:sieve_extend.c ****     {
 12620              		.loc 1 662 24 view .LVU4371
 662:sieve_extend.c ****     {
 12621              		.loc 1 662 12 view .LVU4372
 12622              	.LBB652:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12623              		.loc 1 664 25 view .LVU4373
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12624              		.loc 1 665 13 view .LVU4374
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12625              		.loc 1 664 32 view .LVU4375
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12626              		.loc 1 664 25 view .LVU4376
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12627              		.loc 1 665 13 view .LVU4377
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12628              		.loc 1 664 32 view .LVU4378
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12629              		.loc 1 664 25 view .LVU4379
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12630              		.loc 1 665 13 view .LVU4380
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12631              		.loc 1 664 32 view .LVU4381
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12632              		.loc 1 664 25 view .LVU4382
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12633              		.loc 1 665 13 view .LVU4383
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12634              		.loc 1 664 32 view .LVU4384
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cc7rm34x.s 			page 343


 12635              		.loc 1 664 25 view .LVU4385
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12636              		.loc 1 664 25 is_stmt 0 view .LVU4386
 12637              	.LBE652:
 12638              	.LBB653:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12639              		.loc 1 666 25 is_stmt 1 view .LVU4387
 667:sieve_extend.c ****     }
 12640              		.loc 1 667 13 view .LVU4388
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12641              		.loc 1 666 32 view .LVU4389
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12642              		.loc 1 666 25 view .LVU4390
 667:sieve_extend.c ****     }
 12643              		.loc 1 667 13 view .LVU4391
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12644              		.loc 1 666 32 view .LVU4392
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12645              		.loc 1 666 25 view .LVU4393
 667:sieve_extend.c ****     }
 12646              		.loc 1 667 13 view .LVU4394
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12647              		.loc 1 666 32 view .LVU4395
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12648              		.loc 1 666 25 view .LVU4396
 667:sieve_extend.c ****     }
 12649              		.loc 1 667 13 view .LVU4397
 12650              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12651              		.loc 1 667 22 is_stmt 0 view .LVU4398
 12652 44a2 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.580, vect__57.575, vect__104.579
 12652      F5
 12653              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12654              		.loc 1 667 34 view .LVU4399
 12655 44a7 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.575, vect__102.574, _4
 12656              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12657              		.loc 1 667 22 view .LVU4400
 12658 44ab C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], ve
 12658      0720
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12659              		.loc 1 666 32 is_stmt 1 view .LVU4401
 12660              	.LVL768:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12661              		.loc 1 666 25 view .LVU4402
 12662              	.LBE653:
 662:sieve_extend.c ****     {
 12663              		.loc 1 662 24 view .LVU4403
 662:sieve_extend.c ****     {
 12664              		.loc 1 662 12 view .LVU4404
 12665              	.LBB654:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12666              		.loc 1 664 25 view .LVU4405
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12667              		.loc 1 665 13 view .LVU4406
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cc7rm34x.s 			page 344


 12668              		.loc 1 664 32 view .LVU4407
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12669              		.loc 1 664 25 view .LVU4408
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12670              		.loc 1 665 13 view .LVU4409
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12671              		.loc 1 664 32 view .LVU4410
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12672              		.loc 1 664 25 view .LVU4411
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12673              		.loc 1 665 13 view .LVU4412
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12674              		.loc 1 664 32 view .LVU4413
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12675              		.loc 1 664 25 view .LVU4414
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12676              		.loc 1 665 13 view .LVU4415
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12677              		.loc 1 664 32 view .LVU4416
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12678              		.loc 1 664 25 view .LVU4417
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12679              		.loc 1 664 25 is_stmt 0 view .LVU4418
 12680              	.LBE654:
 12681              	.LBB655:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12682              		.loc 1 666 25 is_stmt 1 view .LVU4419
 667:sieve_extend.c ****     }
 12683              		.loc 1 667 13 view .LVU4420
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12684              		.loc 1 666 32 view .LVU4421
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12685              		.loc 1 666 25 view .LVU4422
 667:sieve_extend.c ****     }
 12686              		.loc 1 667 13 view .LVU4423
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12687              		.loc 1 666 32 view .LVU4424
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12688              		.loc 1 666 25 view .LVU4425
 667:sieve_extend.c ****     }
 12689              		.loc 1 667 13 view .LVU4426
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12690              		.loc 1 666 32 view .LVU4427
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12691              		.loc 1 666 25 view .LVU4428
 667:sieve_extend.c ****     }
 12692              		.loc 1 667 13 view .LVU4429
 12693              	.LBE655:
 12694              	.LBB656:
 12695              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12696              		.loc 1 665 25 is_stmt 0 view .LVU4430
 12697 44b1 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_
 12697      9C06A000 
 12697      000055
 12698              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/cc7rm34x.s 			page 345


 12699              		.loc 1 665 34 view .LVU4431
 12700 44bc C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.579, tmp273, shift
 12701 44c0 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.579, tmp274, shift
 12702 44c4 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.588_114, offse
 12702      06A00000 
 12702      00
 12703              	.LBE656:
 12704              	.LBB657:
 12705              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12706              		.loc 1 667 22 view .LVU4432
 12707 44cd C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.580, vect__57.575, vect__104.579
 12708              	.LBE657:
 12709              	.LBB658:
 12710              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12711              		.loc 1 665 34 view .LVU4433
 12712 44d1 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.588_114, offset
 12712      06E00000 
 12712      00
 12713              	.LBE658:
 12714              	.LBB659:
 12715              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12716              		.loc 1 667 22 view .LVU4434
 12717 44da C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.580, vect__57.575, vect__104.579
 12717      D1
 12718              	.LBE659:
 12719              	.LBB660:
 12720              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12721              		.loc 1 665 25 view .LVU4435
 12722 44df C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_1
 12722      9406C000 
 12722      000055
 12723 44ea C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_1
 12723      8406E000 
 12723      000055
 12724              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12725              		.loc 1 665 34 view .LVU4436
 12726 44f5 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.588_114, offset
 12726      06C00000 
 12726      00
 12727              	.LBE660:
 12728              	.LBB661:
 12729              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12730              		.loc 1 667 22 view .LVU4437
 12731 44fe C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], v
 12731      0740
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12732              		.loc 1 666 32 is_stmt 1 view .LVU4438
 12733              	.LVL769:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12734              		.loc 1 666 25 view .LVU4439
 12735              	.LBE661:
GAS LISTING /tmp/cc7rm34x.s 			page 346


 662:sieve_extend.c ****     {
 12736              		.loc 1 662 24 view .LVU4440
 662:sieve_extend.c ****     {
 12737              		.loc 1 662 12 view .LVU4441
 12738              	.LBB662:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12739              		.loc 1 664 25 view .LVU4442
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12740              		.loc 1 665 13 view .LVU4443
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12741              		.loc 1 664 32 view .LVU4444
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12742              		.loc 1 664 25 view .LVU4445
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12743              		.loc 1 665 13 view .LVU4446
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12744              		.loc 1 664 32 view .LVU4447
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12745              		.loc 1 664 25 view .LVU4448
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12746              		.loc 1 665 13 view .LVU4449
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12747              		.loc 1 664 32 view .LVU4450
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12748              		.loc 1 664 25 view .LVU4451
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12749              		.loc 1 665 13 view .LVU4452
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12750              		.loc 1 664 32 view .LVU4453
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12751              		.loc 1 664 25 view .LVU4454
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12752              		.loc 1 664 25 is_stmt 0 view .LVU4455
 12753              	.LBE662:
 12754              	.LBB663:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12755              		.loc 1 666 25 is_stmt 1 view .LVU4456
 667:sieve_extend.c ****     }
 12756              		.loc 1 667 13 view .LVU4457
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12757              		.loc 1 666 32 view .LVU4458
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12758              		.loc 1 666 25 view .LVU4459
 667:sieve_extend.c ****     }
 12759              		.loc 1 667 13 view .LVU4460
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12760              		.loc 1 666 32 view .LVU4461
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12761              		.loc 1 666 25 view .LVU4462
 667:sieve_extend.c ****     }
 12762              		.loc 1 667 13 view .LVU4463
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12763              		.loc 1 666 32 view .LVU4464
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12764              		.loc 1 666 25 view .LVU4465
 667:sieve_extend.c ****     }
 12765              		.loc 1 667 13 view .LVU4466
GAS LISTING /tmp/cc7rm34x.s 			page 347


 12766              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12767              		.loc 1 667 34 is_stmt 0 view .LVU4467
 12768 4504 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.575, vect__102.574, _4
 12769              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12770              		.loc 1 667 22 view .LVU4468
 12771 4508 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], ve
 12771      0760
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12772              		.loc 1 666 32 is_stmt 1 view .LVU4469
 12773              	.LVL770:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12774              		.loc 1 666 25 view .LVU4470
 12775              	.LBE663:
 662:sieve_extend.c ****     {
 12776              		.loc 1 662 24 view .LVU4471
 662:sieve_extend.c ****     {
 12777              		.loc 1 662 12 view .LVU4472
 12778              	.LBB664:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12779              		.loc 1 664 25 view .LVU4473
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12780              		.loc 1 665 13 view .LVU4474
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12781              		.loc 1 664 32 view .LVU4475
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12782              		.loc 1 664 25 view .LVU4476
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12783              		.loc 1 665 13 view .LVU4477
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12784              		.loc 1 664 32 view .LVU4478
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12785              		.loc 1 664 25 view .LVU4479
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12786              		.loc 1 665 13 view .LVU4480
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12787              		.loc 1 664 32 view .LVU4481
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12788              		.loc 1 664 25 view .LVU4482
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12789              		.loc 1 665 13 view .LVU4483
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12790              		.loc 1 664 32 view .LVU4484
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12791              		.loc 1 664 25 view .LVU4485
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12792              		.loc 1 664 25 is_stmt 0 view .LVU4486
 12793              	.LBE664:
 12794              	.LBB665:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12795              		.loc 1 666 25 is_stmt 1 view .LVU4487
 667:sieve_extend.c ****     }
 12796              		.loc 1 667 13 view .LVU4488
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12797              		.loc 1 666 32 view .LVU4489
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/cc7rm34x.s 			page 348


 12798              		.loc 1 666 25 view .LVU4490
 667:sieve_extend.c ****     }
 12799              		.loc 1 667 13 view .LVU4491
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12800              		.loc 1 666 32 view .LVU4492
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12801              		.loc 1 666 25 view .LVU4493
 667:sieve_extend.c ****     }
 12802              		.loc 1 667 13 view .LVU4494
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12803              		.loc 1 666 32 view .LVU4495
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12804              		.loc 1 666 25 view .LVU4496
 667:sieve_extend.c ****     }
 12805              		.loc 1 667 13 view .LVU4497
 12806              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12807              		.loc 1 667 22 is_stmt 0 view .LVU4498
 12808 450e C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], 
 12808      07800000 
 12808      00
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12809              		.loc 1 666 32 is_stmt 1 view .LVU4499
 12810              	.LVL771:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12811              		.loc 1 666 25 view .LVU4500
 12812              	.LBE665:
 662:sieve_extend.c ****     {
 12813              		.loc 1 662 24 view .LVU4501
 662:sieve_extend.c ****     {
 12814              		.loc 1 662 12 view .LVU4502
 12815              	.LBB666:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12816              		.loc 1 664 25 view .LVU4503
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12817              		.loc 1 665 13 view .LVU4504
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12818              		.loc 1 664 32 view .LVU4505
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12819              		.loc 1 664 25 view .LVU4506
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12820              		.loc 1 665 13 view .LVU4507
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12821              		.loc 1 664 32 view .LVU4508
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12822              		.loc 1 664 25 view .LVU4509
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12823              		.loc 1 665 13 view .LVU4510
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12824              		.loc 1 664 32 view .LVU4511
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12825              		.loc 1 664 25 view .LVU4512
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12826              		.loc 1 665 13 view .LVU4513
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12827              		.loc 1 664 32 view .LVU4514
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cc7rm34x.s 			page 349


 12828              		.loc 1 664 25 view .LVU4515
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12829              		.loc 1 664 25 is_stmt 0 view .LVU4516
 12830              	.LBE666:
 12831              	.LBB667:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12832              		.loc 1 666 25 is_stmt 1 view .LVU4517
 667:sieve_extend.c ****     }
 12833              		.loc 1 667 13 view .LVU4518
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12834              		.loc 1 666 32 view .LVU4519
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12835              		.loc 1 666 25 view .LVU4520
 667:sieve_extend.c ****     }
 12836              		.loc 1 667 13 view .LVU4521
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12837              		.loc 1 666 32 view .LVU4522
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12838              		.loc 1 666 25 view .LVU4523
 667:sieve_extend.c ****     }
 12839              		.loc 1 667 13 view .LVU4524
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12840              		.loc 1 666 32 view .LVU4525
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12841              		.loc 1 666 25 view .LVU4526
 667:sieve_extend.c ****     }
 12842              		.loc 1 667 13 view .LVU4527
 12843              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12844              		.loc 1 667 34 is_stmt 0 view .LVU4528
 12845 4517 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.575, vect__102.574, _4
 12846              	.LBE667:
 12847              	.LBB668:
 12848              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12849              		.loc 1 665 34 view .LVU4529
 12850 451b C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.579, tmp275, shift
 12851              	.LBE668:
 12852              	.LBB669:
 12853              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12854              		.loc 1 667 34 view .LVU4530
 12855 451f C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.575, vect__102.574, _4
 12856              	.LBE669:
 12857              	.LBB670:
 12858              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12859              		.loc 1 665 34 view .LVU4531
 12860 4523 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.579, tmp276, shift
 12861 4527 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.579, tmp277, shift
 12862              	.LBE670:
 12863              	.LBB671:
 12864              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12865              		.loc 1 667 22 view .LVU4532
 12866 452b C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.580, vect__57.575, vect__104.579
 12866      FE
GAS LISTING /tmp/cc7rm34x.s 			page 350


 12867 4530 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.580, vect__57.575, vect__104.579
 12868 4534 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], 
 12868      07A00000 
 12868      00
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12869              		.loc 1 666 32 is_stmt 1 view .LVU4533
 12870              	.LVL772:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12871              		.loc 1 666 25 view .LVU4534
 12872              	.LBE671:
 662:sieve_extend.c ****     {
 12873              		.loc 1 662 24 view .LVU4535
 662:sieve_extend.c ****     {
 12874              		.loc 1 662 12 view .LVU4536
 12875              	.LBB672:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12876              		.loc 1 664 25 view .LVU4537
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12877              		.loc 1 665 13 view .LVU4538
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12878              		.loc 1 664 32 view .LVU4539
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12879              		.loc 1 664 25 view .LVU4540
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12880              		.loc 1 665 13 view .LVU4541
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12881              		.loc 1 664 32 view .LVU4542
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12882              		.loc 1 664 25 view .LVU4543
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12883              		.loc 1 665 13 view .LVU4544
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12884              		.loc 1 664 32 view .LVU4545
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12885              		.loc 1 664 25 view .LVU4546
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12886              		.loc 1 665 13 view .LVU4547
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12887              		.loc 1 664 32 view .LVU4548
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12888              		.loc 1 664 25 view .LVU4549
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12889              		.loc 1 664 25 is_stmt 0 view .LVU4550
 12890              	.LBE672:
 12891              	.LBB673:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12892              		.loc 1 666 25 is_stmt 1 view .LVU4551
 667:sieve_extend.c ****     }
 12893              		.loc 1 667 13 view .LVU4552
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12894              		.loc 1 666 32 view .LVU4553
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12895              		.loc 1 666 25 view .LVU4554
 667:sieve_extend.c ****     }
 12896              		.loc 1 667 13 view .LVU4555
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12897              		.loc 1 666 32 view .LVU4556
GAS LISTING /tmp/cc7rm34x.s 			page 351


 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12898              		.loc 1 666 25 view .LVU4557
 667:sieve_extend.c ****     }
 12899              		.loc 1 667 13 view .LVU4558
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12900              		.loc 1 666 32 view .LVU4559
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12901              		.loc 1 666 25 view .LVU4560
 667:sieve_extend.c ****     }
 12902              		.loc 1 667 13 view .LVU4561
 12903              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12904              		.loc 1 667 22 is_stmt 0 view .LVU4562
 12905 453d C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.580, vect__57.575, vect__104.579
 12905      DA
 12906 4542 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], v
 12906      07C00000 
 12906      00
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12907              		.loc 1 666 32 is_stmt 1 view .LVU4563
 12908              	.LVL773:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12909              		.loc 1 666 25 view .LVU4564
 12910              	.LBE673:
 662:sieve_extend.c ****     {
 12911              		.loc 1 662 24 view .LVU4565
 662:sieve_extend.c ****     {
 12912              		.loc 1 662 12 view .LVU4566
 12913              	.LBB674:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12914              		.loc 1 664 25 view .LVU4567
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12915              		.loc 1 665 13 view .LVU4568
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12916              		.loc 1 664 32 view .LVU4569
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12917              		.loc 1 664 25 view .LVU4570
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12918              		.loc 1 665 13 view .LVU4571
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12919              		.loc 1 664 32 view .LVU4572
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12920              		.loc 1 664 25 view .LVU4573
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12921              		.loc 1 665 13 view .LVU4574
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12922              		.loc 1 664 32 view .LVU4575
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12923              		.loc 1 664 25 view .LVU4576
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 12924              		.loc 1 665 13 view .LVU4577
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12925              		.loc 1 664 32 view .LVU4578
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12926              		.loc 1 664 25 view .LVU4579
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 12927              		.loc 1 664 25 is_stmt 0 view .LVU4580
GAS LISTING /tmp/cc7rm34x.s 			page 352


 12928              	.LBE674:
 12929              	.LBB675:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12930              		.loc 1 666 25 is_stmt 1 view .LVU4581
 667:sieve_extend.c ****     }
 12931              		.loc 1 667 13 view .LVU4582
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12932              		.loc 1 666 32 view .LVU4583
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12933              		.loc 1 666 25 view .LVU4584
 667:sieve_extend.c ****     }
 12934              		.loc 1 667 13 view .LVU4585
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12935              		.loc 1 666 32 view .LVU4586
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12936              		.loc 1 666 25 view .LVU4587
 667:sieve_extend.c ****     }
 12937              		.loc 1 667 13 view .LVU4588
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12938              		.loc 1 666 32 view .LVU4589
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12939              		.loc 1 666 25 view .LVU4590
 667:sieve_extend.c ****     }
 12940              		.loc 1 667 13 view .LVU4591
 12941              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 12942              		.loc 1 667 22 is_stmt 0 view .LVU4592
 12943 454b C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], 
 12943      07E00000 
 12943      00
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12944              		.loc 1 666 32 is_stmt 1 view .LVU4593
 12945              	.LVL774:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 12946              		.loc 1 666 25 view .LVU4594
 12947              	.LBE675:
 662:sieve_extend.c ****     {
 12948              		.loc 1 662 24 view .LVU4595
 662:sieve_extend.c ****     {
 12949              		.loc 1 662 12 view .LVU4596
 12950 4554 48050001 		add	rax, 256	# ivtmp.588,
 12950      0000
 12951 455a 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.585
 12952 455d 0F87C7FE 		ja	.L972	#,
 12952      FFFF
 12953              	.L1012:
 12954 4563 4589C3   		mov	r11d, r8d	# _25, _25
 12955 4566 428D0495 		lea	eax, 0[0+r10*4]	# i,
 12955      00000000 
 12956 456e 4983C301 		add	r11, 1	# tmp140,
 12957 4572 49C1E305 		sal	r11, 5	# _105,
 12958 4576 4C01DF   		add	rdi, r11	# dst, _105
 12959 4579 4C01DE   		add	rsi, r11	# src, _105
 12960 457c C5F877   		vzeroupper
 12961              	.LVL775:
 12962              	.L973:
 669:sieve_extend.c ****     {
GAS LISTING /tmp/cc7rm34x.s 			page 353


 12963              		.loc 1 669 12 view .LVU4597
 12964              	# sieve_extend.c:669:     for (; i < size; ++i,++src,++dst)
 669:sieve_extend.c ****     {
 12965              		.loc 1 669 5 is_stmt 0 view .LVU4598
 12966 457f 39C2     		cmp	edx, eax	# size, i
 12967 4581 0F8E9400 		jle	.L1016	#,
 12967      0000
 12968              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 12969              		.loc 1 671 35 view .LVU4599
 12970 4587 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 12971 458b 41B84000 		mov	r8d, 64	# tmp142,
 12971      0000
 12972              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 12973              		.loc 1 671 23 view .LVU4600
 12974 4591 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 12974      0E
 12975 4596 4129C8   		sub	r8d, ecx	# _97, shift
 671:sieve_extend.c ****     }    
 12976              		.loc 1 671 9 is_stmt 1 view .LVU4601
 12977              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 12978              		.loc 1 671 43 is_stmt 0 view .LVU4602
 12979 4599 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 12979      DA
 12980              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 12981              		.loc 1 671 32 view .LVU4603
 12982 459e 4D09D9   		or	r9, r11	# tmp146, tmp145
 12983 45a1 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 669:sieve_extend.c ****     {
 12984              		.loc 1 669 22 is_stmt 1 view .LVU4604
 12985              	.LVL776:
 669:sieve_extend.c ****     {
 12986              		.loc 1 669 12 view .LVU4605
 12987              	# sieve_extend.c:669:     for (; i < size; ++i,++src,++dst)
 669:sieve_extend.c ****     {
 12988              		.loc 1 669 22 is_stmt 0 view .LVU4606
 12989 45a4 448D4801 		lea	r9d, 1[rax]	# i,
 12990              	.LVL777:
 12991              	# sieve_extend.c:669:     for (; i < size; ++i,++src,++dst)
 669:sieve_extend.c ****     {
 12992              		.loc 1 669 5 view .LVU4607
 12993 45a8 4439CA   		cmp	edx, r9d	# size, i
 12994 45ab 7E6D     		jle	.L1013	#,
 671:sieve_extend.c ****     }    
 12995              		.loc 1 671 9 is_stmt 1 view .LVU4608
 12996              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 12997              		.loc 1 671 35 is_stmt 0 view .LVU4609
 12998 45ad 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 12999              	.LVL778:
 13000              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13001              		.loc 1 671 23 view .LVU4610
 13002 45b1 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
GAS LISTING /tmp/cc7rm34x.s 			page 354


 13002      D2
 13003              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13004              		.loc 1 671 43 view .LVU4611
 13005 45b6 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 13005      D9
 13006              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13007              		.loc 1 671 32 view .LVU4612
 13008 45bb 4D09DA   		or	r10, r11	# tmp150, tmp149
 13009 45be 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 669:sieve_extend.c ****     {
 13010              		.loc 1 669 22 is_stmt 1 view .LVU4613
 13011              	.LVL779:
 669:sieve_extend.c ****     {
 13012              		.loc 1 669 12 view .LVU4614
 13013              	# sieve_extend.c:669:     for (; i < size; ++i,++src,++dst)
 669:sieve_extend.c ****     {
 13014              		.loc 1 669 22 is_stmt 0 view .LVU4615
 13015 45c2 448D5002 		lea	r10d, 2[rax]	# i,
 13016              	.LVL780:
 13017              	# sieve_extend.c:669:     for (; i < size; ++i,++src,++dst)
 669:sieve_extend.c ****     {
 13018              		.loc 1 669 5 view .LVU4616
 13019 45c6 4439D2   		cmp	edx, r10d	# size, i
 13020 45c9 7E4F     		jle	.L1013	#,
 671:sieve_extend.c ****     }    
 13021              		.loc 1 671 9 is_stmt 1 view .LVU4617
 13022              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13023              		.loc 1 671 35 is_stmt 0 view .LVU4618
 13024 45cb 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 13025              	.LVL781:
 13026              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13027              		.loc 1 671 23 view .LVU4619
 13028 45cf C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 13028      C9
 13029              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13030              		.loc 1 671 43 view .LVU4620
 13031 45d4 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
 13031      DA
 13032              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13033              		.loc 1 671 32 view .LVU4621
 13034 45d9 4D09D9   		or	r9, r11	# tmp154, tmp153
 13035 45dc 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 669:sieve_extend.c ****     {
 13036              		.loc 1 669 22 is_stmt 1 view .LVU4622
 13037              	.LVL782:
 669:sieve_extend.c ****     {
 13038              		.loc 1 669 12 view .LVU4623
 13039              	# sieve_extend.c:669:     for (; i < size; ++i,++src,++dst)
 669:sieve_extend.c ****     {
 13040              		.loc 1 669 22 is_stmt 0 view .LVU4624
 13041 45e0 448D4803 		lea	r9d, 3[rax]	# i,
GAS LISTING /tmp/cc7rm34x.s 			page 355


 13042              	.LVL783:
 13043              	# sieve_extend.c:669:     for (; i < size; ++i,++src,++dst)
 669:sieve_extend.c ****     {
 13044              		.loc 1 669 5 view .LVU4625
 13045 45e4 4439CA   		cmp	edx, r9d	# size, i
 13046 45e7 7E31     		jle	.L1013	#,
 671:sieve_extend.c ****     }    
 13047              		.loc 1 671 9 is_stmt 1 view .LVU4626
 13048              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13049              		.loc 1 671 35 is_stmt 0 view .LVU4627
 13050 45e9 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 13051              	.LVL784:
 13052              	# sieve_extend.c:669:     for (; i < size; ++i,++src,++dst)
 669:sieve_extend.c ****     {
 13053              		.loc 1 669 22 view .LVU4628
 13054 45ed 83C004   		add	eax, 4	# i,
 13055              	.LVL785:
 13056              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13057              		.loc 1 671 23 view .LVU4629
 13058 45f0 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 13058      D2
 13059              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13060              		.loc 1 671 43 view .LVU4630
 13061 45f5 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 13061      D9
 13062              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13063              		.loc 1 671 32 view .LVU4631
 13064 45fa 4D09DA   		or	r10, r11	# tmp158, tmp157
 13065              	# sieve_extend.c:669:     for (; i < size; ++i,++src,++dst)
 669:sieve_extend.c ****     {
 13066              		.loc 1 669 5 view .LVU4632
 13067 45fd 39C2     		cmp	edx, eax	# size, i
 13068              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13069              		.loc 1 671 32 view .LVU4633
 13070 45ff 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 669:sieve_extend.c ****     {
 13071              		.loc 1 669 22 is_stmt 1 view .LVU4634
 13072              	.LVL786:
 669:sieve_extend.c ****     {
 13073              		.loc 1 669 12 view .LVU4635
 13074              	# sieve_extend.c:669:     for (; i < size; ++i,++src,++dst)
 669:sieve_extend.c ****     {
 13075              		.loc 1 669 5 is_stmt 0 view .LVU4636
 13076 4603 7E15     		jle	.L1013	#,
 671:sieve_extend.c ****     }    
 13077              		.loc 1 671 9 is_stmt 1 discriminator 2 view .LVU4637
 13078              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13079              		.loc 1 671 43 is_stmt 0 discriminator 2 view .LVU4638
 13080 4605 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 13081              	.LVL787:
 13082              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
GAS LISTING /tmp/cc7rm34x.s 			page 356


 671:sieve_extend.c ****     }    
 13083              		.loc 1 671 23 discriminator 2 view .LVU4639
 13084 4609 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 13084      C9
 13085              	.LVL788:
 13086              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13087              		.loc 1 671 43 discriminator 2 view .LVU4640
 13088 460e C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 13088      F2
 13089              	.LVL789:
 13090              	# sieve_extend.c:671:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 671:sieve_extend.c ****     }    
 13091              		.loc 1 671 32 discriminator 2 view .LVU4641
 13092 4613 4809F1   		or	rcx, rsi	# tmp163, tmp160
 13093 4616 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 669:sieve_extend.c ****     {
 13094              		.loc 1 669 22 is_stmt 1 discriminator 2 view .LVU4642
 13095              	.LVL790:
 669:sieve_extend.c ****     {
 13096              		.loc 1 669 12 discriminator 2 view .LVU4643
 13097              	.L1013:
 13098              	# sieve_extend.c:673: }
 673:sieve_extend.c **** 
 13099              		.loc 1 673 1 is_stmt 0 view .LVU4644
 13100 461a C3       		ret	
 13101              	.LVL791:
 13102              	.L1016:
 673:sieve_extend.c **** 
 13103              		.loc 1 673 1 view .LVU4645
 13104 461b C3       		ret	
 13105              	.LVL792:
 13106              	.L1015:
 13107              	.LBB676:
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13108              		.loc 1 664 25 is_stmt 1 view .LVU4646
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13109              		.loc 1 665 13 view .LVU4647
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13110              		.loc 1 664 32 view .LVU4648
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13111              		.loc 1 664 25 view .LVU4649
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13112              		.loc 1 665 13 view .LVU4650
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13113              		.loc 1 664 32 view .LVU4651
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13114              		.loc 1 664 25 view .LVU4652
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13115              		.loc 1 665 13 view .LVU4653
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13116              		.loc 1 664 32 view .LVU4654
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13117              		.loc 1 664 25 view .LVU4655
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13118              		.loc 1 665 13 view .LVU4656
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/cc7rm34x.s 			page 357


 13119              		.loc 1 664 32 view .LVU4657
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13120              		.loc 1 664 25 view .LVU4658
 664:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 13121              		.loc 1 664 25 is_stmt 0 view .LVU4659
 13122              	.LBE676:
 13123              	.LBB677:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13124              		.loc 1 666 25 is_stmt 1 view .LVU4660
 667:sieve_extend.c ****     }
 13125              		.loc 1 667 13 view .LVU4661
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13126              		.loc 1 666 32 view .LVU4662
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13127              		.loc 1 666 25 view .LVU4663
 667:sieve_extend.c ****     }
 13128              		.loc 1 667 13 view .LVU4664
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13129              		.loc 1 666 32 view .LVU4665
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13130              		.loc 1 666 25 view .LVU4666
 667:sieve_extend.c ****     }
 13131              		.loc 1 667 13 view .LVU4667
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13132              		.loc 1 666 32 view .LVU4668
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13133              		.loc 1 666 25 view .LVU4669
 667:sieve_extend.c ****     }
 13134              		.loc 1 667 13 view .LVU4670
 13135              	.LBE677:
 13136              	.LBB678:
 13137              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13138              		.loc 1 665 25 is_stmt 0 view .LVU4671
 13139 461c C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.574, MEM[base: src_35(D), index: ivtmp.588_114, o
 13139      7E2055
 13140 4623 41B90200 		mov	r9d, 2	# ivtmp.585,
 13140      0000
 13141              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13142              		.loc 1 665 34 view .LVU4672
 13143 4629 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.588_114, offset: 0B]
 13143      20
 13144 462e B8400000 		mov	eax, 64	# ivtmp.588,
 13144      00
 13145              	.LBE678:
 13146              	.LBB679:
 13147              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 13148              		.loc 1 667 34 view .LVU4673
 13149 4633 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.575, vect__102.574, _4
 13150              	.LBE679:
 13151              	.LBB680:
 13152              	# sieve_extend.c:665:             *(dst+j) = (*(src+j))<<shift;
 665:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 13153              		.loc 1 665 34 view .LVU4674
 13154 4637 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.579, tmp278, shift
GAS LISTING /tmp/cc7rm34x.s 			page 358


 13155              	.LBE680:
 13156              	.LBB681:
 13157              	# sieve_extend.c:667:             *(dst+j) |= (*(src+1)>>(64-shift));
 667:sieve_extend.c ****     }
 13158              		.loc 1 667 22 view .LVU4675
 13159 463b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.580, vect__57.575, vect__104.579
 13159      DA
 13160 4640 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.588_114, offset: 0B], vect_
 13160      20
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13161              		.loc 1 666 32 is_stmt 1 view .LVU4676
 13162              	.LVL793:
 666:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 13163              		.loc 1 666 25 view .LVU4677
 13164              	.LBE681:
 662:sieve_extend.c ****     {
 13165              		.loc 1 662 24 view .LVU4678
 662:sieve_extend.c ****     {
 13166              		.loc 1 662 12 view .LVU4679
 13167 4645 E9F6FCFF 		jmp	.L1004	#
 13167      FF
 13168              	.LVL794:
 13169              	.L1014:
 13170              	# sieve_extend.c:660:     int i = 0;
 660:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 13171              		.loc 1 660 9 is_stmt 0 view .LVU4680
 13172 464a 31C0     		xor	eax, eax	# i
 13173 464c E92EFFFF 		jmp	.L973	#
 13173      FF
 13174              		.cfi_endproc
 13175              	.LFE70:
 13177              		.section	.rodata.str1.8,"aMS",@progbits,1
 13178              		.align 8
 13179              	.LC9:
 13180 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 13180      6C743A20 
 13180      53696576 
 13180      6573697A 
 13180      6520256A 
 13181 0055 000000   		.align 8
 13182              	.LC10:
 13183 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 13183      616C6964 
 13183      20726573 
 13183      756C742E 
 13183      20536965 
 13184              		.section	.rodata.str1.1
 13185              	.LC11:
 13186 0023 44656570 		.string	"DeepAnalyzing"
 13186      416E616C 
 13186      797A696E 
 13186      6700
 13187              		.section	.rodata.str1.8
 13188 00bb 00000000 		.align 8
 13188      00
 13189              	.LC12:
 13190 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
GAS LISTING /tmp/cc7rm34x.s 			page 359


 13190      65722025 
 13190      6A752028 
 13190      256A7529 
 13190      20776173 
 13191              		.align 8
 13192              	.LC13:
 13193 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 13193      65722025 
 13193      6A752028 
 13193      256A7529 
 13193      20776173 
 13194              		.text
 13195 4651 66662E0F 		.p2align 4
 13195      1F840000 
 13195      0000000F 
 13195      1F4000
 13196              		.globl	validatePrimeCount
 13198              	validatePrimeCount:
 13199              	.LVL795:
 13200              	.LFB83:
1135:sieve_extend.c **** 
 13201              		.loc 1 1135 76 is_stmt 1 view -0
 13202              		.cfi_startproc
1135:sieve_extend.c **** 
 13203              		.loc 1 1135 76 is_stmt 0 view .LVU4682
 13204 4660 F30F1EFA 		endbr64	
1137:sieve_extend.c ****     counter_t valid_primes = 0;
 13205              		.loc 1 1137 5 is_stmt 1 view .LVU4683
 13206              	# sieve_extend.c:1135: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1135:sieve_extend.c **** 
 13207              		.loc 1 1135 76 is_stmt 0 view .LVU4684
 13208 4664 4157     		push	r15	#
 13209              		.cfi_def_cfa_offset 16
 13210              		.cfi_offset 15, -16
 13211 4666 4156     		push	r14	#
 13212              		.cfi_def_cfa_offset 24
 13213              		.cfi_offset 14, -24
 13214 4668 4155     		push	r13	#
 13215              		.cfi_def_cfa_offset 32
 13216              		.cfi_offset 13, -32
 13217 466a 4154     		push	r12	#
 13218              		.cfi_def_cfa_offset 40
 13219              		.cfi_offset 12, -40
 13220 466c 55       		push	rbp	#
 13221              		.cfi_def_cfa_offset 48
 13222              		.cfi_offset 6, -48
 13223 466d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 13224 4670 53       		push	rbx	#
 13225              		.cfi_def_cfa_offset 56
 13226              		.cfi_offset 3, -56
 13227 4671 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 13228 4673 488D6424 		lea	rsp, -56[rsp]	#,
 13228      C8
 13229              		.cfi_def_cfa_offset 112
 13230              	# sieve_extend.c:1137:     counter_t primecount = count_primes(sieve);
1137:sieve_extend.c ****     counter_t valid_primes = 0;
 13231              		.loc 1 1137 28 view .LVU4685
GAS LISTING /tmp/cc7rm34x.s 			page 360


 13232 4678 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 13233 467b 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 13234              	.LVL796:
 13235              	.LBB703:
 13236              	.LBI703:
1106:sieve_extend.c ****     counter_t primeCount = 1;
 13237              		.loc 1 1106 18 is_stmt 1 view .LVU4686
 13238              	.LBB704:
 13239              	.LBB705:
1108:sieve_extend.c ****     return primeCount;
 13240              		.loc 1 1108 30 view .LVU4687
 13241 467f 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 13242              	# sieve_extend.c:1108:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1108:sieve_extend.c ****     return primeCount;
 13243              		.loc 1 1108 5 is_stmt 0 view .LVU4688
 13244 4683 4883FF01 		cmp	rdi, 1	# _25,
 13245 4687 0F860B05 		jbe	.L1018	#,
 13245      0000
 13246              	# sieve_extend.c:1108:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1108:sieve_extend.c ****     return primeCount;
 13247              		.loc 1 1108 20 view .LVU4689
 13248 468d B8010000 		mov	eax, 1	# factor,
 13248      00
 13249              	.LBE705:
 13250              	# sieve_extend.c:1107:     counter_t primeCount = 1;
1107:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 13251              		.loc 1 1107 15 view .LVU4690
 13252 4692 41B80100 		mov	r8d, 1	# primeCount,
 13252      0000
 13253              	.LVL797:
 13254 4698 0F1F8400 		.p2align 4
 13254      00000000 
 13255              		.p2align 3
 13256              	.L1021:
 13257              	.LBB708:
1108:sieve_extend.c ****     return primeCount;
 13258              		.loc 1 1108 104 is_stmt 1 view .LVU4691
 13259              	# sieve_extend.c:1108:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1108:sieve_extend.c ****     return primeCount;
 13260              		.loc 1 1108 114 is_stmt 0 view .LVU4692
 13261 46a0 4983C001 		add	r8, 1	# primeCount,
 13262              	.LVL798:
1108:sieve_extend.c ****     return primeCount;
 13263              		.loc 1 1108 52 is_stmt 1 view .LVU4693
 13264              	# sieve_extend.c:1108:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1108:sieve_extend.c ****     return primeCount;
 13265              		.loc 1 1108 61 is_stmt 0 view .LVU4694
 13266 46a4 4883C001 		add	rax, 1	# factor,
 13267              	.LVL799:
 13268              	.L1161:
 13269              	.LBB706:
 13270              	.LBI706:
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 13271              		.loc 1 123 25 is_stmt 1 view .LVU4695
 13272              	.LBB707:
 124:sieve_extend.c ****     return index;
 13273              		.loc 1 124 5 view .LVU4696
GAS LISTING /tmp/cc7rm34x.s 			page 361


 124:sieve_extend.c ****     return index;
 13274              		.loc 1 124 11 view .LVU4697
 13275              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13276              		.loc 1 124 21 is_stmt 0 view .LVU4698
 13277 46a8 4889C1   		mov	rcx, rax	# tmp162, factor
 13278 46ab 48C1E906 		shr	rcx, 6	# tmp162,
 13279              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13280              		.loc 1 124 12 view .LVU4699
 13281 46af 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 13282              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13283              		.loc 1 124 11 view .LVU4700
 13284 46b3 490FA3C3 		bt	r11, rax	# *_106, factor
 13285 46b7 0F83AB00 		jnc	.L1019	#,
 13285      0000
 124:sieve_extend.c ****     return index;
 13286              		.loc 1 124 58 is_stmt 1 view .LVU4701
 13287              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13288              		.loc 1 124 63 is_stmt 0 view .LVU4702
 13289 46bd 4C8D6001 		lea	r12, 1[rax]	# tmp235,
 13290              	.LVL800:
 13291              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13292              		.loc 1 124 21 view .LVU4703
 13293 46c1 4D89E5   		mov	r13, r12	# tmp167, factor
 13294              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13295              		.loc 1 124 63 view .LVU4704
 13296 46c4 4C89E0   		mov	rax, r12	# factor, tmp235
 124:sieve_extend.c ****     return index;
 13297              		.loc 1 124 11 is_stmt 1 view .LVU4705
 13298              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13299              		.loc 1 124 21 is_stmt 0 view .LVU4706
 13300 46c7 49C1ED06 		shr	r13, 6	# tmp167,
 13301              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13302              		.loc 1 124 12 view .LVU4707
 13303 46cb 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 13304              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13305              		.loc 1 124 11 view .LVU4708
 13306 46cf 4D0FA3E7 		bt	r15, r12	# *_35, factor
 13307 46d3 0F838F00 		jnc	.L1019	#,
 13307      0000
 124:sieve_extend.c ****     return index;
 13308              		.loc 1 124 58 is_stmt 1 view .LVU4709
 13309              	.LVL801:
 13310              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13311              		.loc 1 124 63 is_stmt 0 view .LVU4710
 13312 46d9 4883C001 		add	rax, 1	# factor,
 13313              	.LVL802:
 124:sieve_extend.c ****     return index;
GAS LISTING /tmp/cc7rm34x.s 			page 362


 13314              		.loc 1 124 11 is_stmt 1 view .LVU4711
 13315              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13316              		.loc 1 124 21 is_stmt 0 view .LVU4712
 13317 46dd 4989C6   		mov	r14, rax	# tmp279, factor
 13318 46e0 49C1EE06 		shr	r14, 6	# tmp279,
 13319              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13320              		.loc 1 124 12 view .LVU4713
 13321 46e4 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 13322              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13323              		.loc 1 124 11 view .LVU4714
 13324 46e8 480FA3C6 		bt	rsi, rax	# *_35, factor
 13325 46ec 737A     		jnc	.L1019	#,
 124:sieve_extend.c ****     return index;
 13326              		.loc 1 124 58 is_stmt 1 view .LVU4715
 13327              	.LVL803:
 13328              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13329              		.loc 1 124 63 is_stmt 0 view .LVU4716
 13330 46ee 498D4424 		lea	rax, 2[r12]	# factor,
 13330      02
 13331              	.LVL804:
 124:sieve_extend.c ****     return index;
 13332              		.loc 1 124 11 is_stmt 1 view .LVU4717
 13333              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13334              		.loc 1 124 21 is_stmt 0 view .LVU4718
 13335 46f3 4989C2   		mov	r10, rax	# tmp283, factor
 13336 46f6 49C1EA06 		shr	r10, 6	# tmp283,
 13337              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13338              		.loc 1 124 12 view .LVU4719
 13339 46fa 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 13340              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13341              		.loc 1 124 11 view .LVU4720
 13342 46fe 480FA3C1 		bt	rcx, rax	# *_35, factor
 13343 4702 7364     		jnc	.L1019	#,
 124:sieve_extend.c ****     return index;
 13344              		.loc 1 124 58 is_stmt 1 view .LVU4721
 13345              	.LVL805:
 13346              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13347              		.loc 1 124 63 is_stmt 0 view .LVU4722
 13348 4704 498D4424 		lea	rax, 3[r12]	# factor,
 13348      03
 13349              	.LVL806:
 124:sieve_extend.c ****     return index;
 13350              		.loc 1 124 11 is_stmt 1 view .LVU4723
 13351              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13352              		.loc 1 124 21 is_stmt 0 view .LVU4724
 13353 4709 4989C3   		mov	r11, rax	# tmp287, factor
 13354 470c 49C1EB06 		shr	r11, 6	# tmp287,
 13355              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/cc7rm34x.s 			page 363


 124:sieve_extend.c ****     return index;
 13356              		.loc 1 124 12 view .LVU4725
 13357 4710 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 13358              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13359              		.loc 1 124 11 view .LVU4726
 13360 4714 490FA3C5 		bt	r13, rax	# *_35, factor
 13361 4718 734E     		jnc	.L1019	#,
 124:sieve_extend.c ****     return index;
 13362              		.loc 1 124 58 is_stmt 1 view .LVU4727
 13363              	.LVL807:
 13364              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13365              		.loc 1 124 63 is_stmt 0 view .LVU4728
 13366 471a 498D4424 		lea	rax, 4[r12]	# factor,
 13366      04
 13367              	.LVL808:
 124:sieve_extend.c ****     return index;
 13368              		.loc 1 124 11 is_stmt 1 view .LVU4729
 13369              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13370              		.loc 1 124 21 is_stmt 0 view .LVU4730
 13371 471f 4989C7   		mov	r15, rax	# tmp291, factor
 13372 4722 49C1EF06 		shr	r15, 6	# tmp291,
 13373              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13374              		.loc 1 124 12 view .LVU4731
 13375 4726 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 13376              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13377              		.loc 1 124 11 view .LVU4732
 13378 472a 490FA3C6 		bt	r14, rax	# *_35, factor
 13379 472e 7338     		jnc	.L1019	#,
 124:sieve_extend.c ****     return index;
 13380              		.loc 1 124 58 is_stmt 1 view .LVU4733
 13381              	.LVL809:
 13382              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13383              		.loc 1 124 63 is_stmt 0 view .LVU4734
 13384 4730 498D4424 		lea	rax, 5[r12]	# factor,
 13384      05
 13385              	.LVL810:
 124:sieve_extend.c ****     return index;
 13386              		.loc 1 124 11 is_stmt 1 view .LVU4735
 13387              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13388              		.loc 1 124 21 is_stmt 0 view .LVU4736
 13389 4735 4889C6   		mov	rsi, rax	# tmp295, factor
 13390 4738 48C1EE06 		shr	rsi, 6	# tmp295,
 13391              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13392              		.loc 1 124 12 view .LVU4737
 13393 473c 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 13394              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13395              		.loc 1 124 11 view .LVU4738
 13396 4740 490FA3C2 		bt	r10, rax	# *_35, factor
GAS LISTING /tmp/cc7rm34x.s 			page 364


 13397 4744 7322     		jnc	.L1019	#,
 124:sieve_extend.c ****     return index;
 13398              		.loc 1 124 58 is_stmt 1 view .LVU4739
 13399              	.LVL811:
 13400              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13401              		.loc 1 124 63 is_stmt 0 view .LVU4740
 13402 4746 498D4424 		lea	rax, 6[r12]	# factor,
 13402      06
 13403              	.LVL812:
 124:sieve_extend.c ****     return index;
 13404              		.loc 1 124 11 is_stmt 1 view .LVU4741
 13405              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13406              		.loc 1 124 21 is_stmt 0 view .LVU4742
 13407 474b 4889C1   		mov	rcx, rax	# tmp299, factor
 13408 474e 48C1E906 		shr	rcx, 6	# tmp299,
 13409              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13410              		.loc 1 124 12 view .LVU4743
 13411 4752 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 13412              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13413              		.loc 1 124 11 view .LVU4744
 13414 4756 490FA3C3 		bt	r11, rax	# *_35, factor
 13415 475a 730C     		jnc	.L1019	#,
 124:sieve_extend.c ****     return index;
 13416              		.loc 1 124 58 is_stmt 1 view .LVU4745
 13417              	.LVL813:
 13418              	# sieve_extend.c:124:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 13419              		.loc 1 124 63 is_stmt 0 view .LVU4746
 13420 475c 498D4424 		lea	rax, 7[r12]	# factor,
 13420      07
 13421              	.LVL814:
 124:sieve_extend.c ****     return index;
 13422              		.loc 1 124 11 is_stmt 1 view .LVU4747
 13423 4761 E942FFFF 		jmp	.L1161	#
 13423      FF
 13424              		.p2align 4,,7
 13425 4766 6690     		.p2align 3
 13426              	.L1019:
 13427              	.LVL815:
 124:sieve_extend.c ****     return index;
 13428              		.loc 1 124 11 is_stmt 0 view .LVU4748
 13429              	.LBE707:
 13430              	.LBE706:
1108:sieve_extend.c ****     return primeCount;
 13431              		.loc 1 1108 30 is_stmt 1 view .LVU4749
 13432              	# sieve_extend.c:1108:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1108:sieve_extend.c ****     return primeCount;
 13433              		.loc 1 1108 5 is_stmt 0 view .LVU4750
 13434 4768 4839C7   		cmp	rdi, rax	# _25, factor
 13435 476b 0F872FFF 		ja	.L1021	#,
 13435      FFFF
1108:sieve_extend.c ****     return primeCount;
 13436              		.loc 1 1108 5 view .LVU4751
GAS LISTING /tmp/cc7rm34x.s 			page 365


 13437              	.LBE708:
1109:sieve_extend.c **** }
 13438              		.loc 1 1109 5 is_stmt 1 view .LVU4752
 13439              	.LVL816:
1109:sieve_extend.c **** }
 13440              		.loc 1 1109 5 is_stmt 0 view .LVU4753
 13441              	.LBE704:
 13442              	.LBE703:
1138:sieve_extend.c ****     switch(sieve->size) {
 13443              		.loc 1 1138 5 is_stmt 1 view .LVU4754
1139:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13444              		.loc 1 1139 5 view .LVU4755
 13445 4771 83FB03   		cmp	ebx, 3	# option_verboselevel,
 13446 4774 0F9FC2   		setg	dl	#, tmp172
 13447 4777 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 13447      860100
 13448 477e 0F842D06 		je	.L1022	#,
 13448      0000
 13449 4784 0F86CC02 		jbe	.L1162	#,
 13449      0000
 13450 478a 4981F900 		cmp	r9, 100000000	# pretmp_199,
 13450      E1F505
 13451 4791 0F84D905 		je	.L1030	#,
 13451      0000
 13452              		.p2align 4,,4
 13453 4797 0F863303 		jbe	.L1163	#,
 13453      0000
 13454 479d 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 13454      CA9A3B
 13455 47a4 0F85EB05 		jne	.L1028	#,
 13455      0000
 13456 47aa 4981F82E 		cmp	r8, 50847534	# primeCount,
 13456      DF0703
 13457              	# sieve_extend.c:1148:         case 1000000000:    valid_primes = 50847534; break;
1148:sieve_extend.c ****         default:            valid_primes= 0;
 13458              		.loc 1 1148 42 is_stmt 0 view .LVU4756
 13459 47b1 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 13459      03
 13460 47b6 410F94C4 		sete	r12b	#, tmp189
 13461 47ba 4421E2   		and	edx, r12d	# _251, tmp189
 13462 47bd 4981F82E 		cmp	r8, 50847534	# primeCount,
 13462      DF0703
 13463 47c4 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 13464 47c8 410F95C6 		setne	r14b	#, _135
1148:sieve_extend.c ****         default:            valid_primes= 0;
 13465              		.loc 1 1148 29 is_stmt 1 view .LVU4757
 13466              	.LVL817:
1148:sieve_extend.c ****         default:            valid_primes= 0;
 13467              		.loc 1 1148 54 view .LVU4758
 13468 47cc 0F1F4000 		.p2align 4
 13469              		.p2align 3
 13470              	.L1035:
1152:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 13471              		.loc 1 1152 5 view .LVU4759
1153:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13472              		.loc 1 1153 5 view .LVU4760
 13473              	# sieve_extend.c:1153:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
GAS LISTING /tmp/cc7rm34x.s 			page 366


1153:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13474              		.loc 1 1153 8 is_stmt 0 view .LVU4761
 13475 47d0 84D2     		test	dl, dl	# _251
 13476 47d2 0F841704 		je	.L1036	#,
 13476      0000
1153:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13477              		.loc 1 1153 45 is_stmt 1 discriminator 1 view .LVU4762
 13478              	.LVL818:
 13479              	.LBB710:
 13480              	.LBI710:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13481              		.loc 3 105 1 discriminator 1 view .LVU4763
 13482              	.LBB711:
 13483              		.loc 3 107 3 discriminator 1 view .LVU4764
 13484              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13485              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4765
 13486 47d8 4C89CA   		mov	rdx, r9	#, pretmp_199
 13487 47db 488D3500 		lea	rsi, .LC9[rip]	#,
 13487      000000
 13488 47e2 BF010000 		mov	edi, 1	#,
 13488      00
 13489 47e7 31C0     		xor	eax, eax	#
 13490 47e9 E8000000 		call	__printf_chk@PLT	#
 13490      00
 13491              	.LVL819:
 13492              		.loc 3 107 10 discriminator 1 view .LVU4766
 13493              	.LBE711:
 13494              	.LBE710:
1154:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13495              		.loc 1 1154 5 is_stmt 1 discriminator 1 view .LVU4767
 13496              	.L1037:
1158:sieve_extend.c ****     return (valid);
 13497              		.loc 1 1158 5 view .LVU4768
 13498              	# sieve_extend.c:1158:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1158:sieve_extend.c ****     return (valid);
 13499              		.loc 1 1158 8 is_stmt 0 view .LVU4769
 13500 47ee 83FB02   		cmp	ebx, 2	# option_verboselevel,
 13501 47f1 0F8E4C02 		jle	.L1017	#,
 13501      0000
 13502 47f7 4584F6   		test	r14b, r14b	# _135
 13503 47fa 0F844302 		je	.L1017	#,
 13503      0000
1158:sieve_extend.c ****     return (valid);
 13504              		.loc 1 1158 45 is_stmt 1 discriminator 1 view .LVU4770
 13505              	.LBB712:
 13506              	.LBI712:
1112:sieve_extend.c ****     printf("DeepAnalyzing\n");
 13507              		.loc 1 1112 13 discriminator 1 view .LVU4771
 13508              	.LVL820:
 13509              	.LBB713:
1113:sieve_extend.c ****     counter_t warn_prime = 0;
 13510              		.loc 1 1113 5 discriminator 1 view .LVU4772
 13511              	.LBB714:
 13512              	.LBI714:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13513              		.loc 3 105 1 discriminator 1 view .LVU4773
 13514              	.LBB715:
GAS LISTING /tmp/cc7rm34x.s 			page 367


 13515              		.loc 3 107 3 discriminator 1 view .LVU4774
 13516              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13517              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4775
 13518 4800 488D3D00 		lea	rdi, .LC11[rip]	#,
 13518      000000
 13519 4807 E8000000 		call	puts@PLT	#
 13519      00
 13520              	.LVL821:
 13521              		.loc 3 107 10 discriminator 1 view .LVU4776
 13522              	.LBE715:
 13523              	.LBE714:
1114:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13524              		.loc 1 1114 5 is_stmt 1 discriminator 1 view .LVU4777
1115:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13525              		.loc 1 1115 5 discriminator 1 view .LVU4778
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13526              		.loc 1 1116 5 discriminator 1 view .LVU4779
 13527              	.LBB716:
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13528              		.loc 1 1116 10 discriminator 1 view .LVU4780
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13529              		.loc 1 1116 31 discriminator 1 view .LVU4781
 13530              	# sieve_extend.c:1116:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13531              		.loc 1 1116 44 is_stmt 0 discriminator 1 view .LVU4782
 13532 480c 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13533              	# sieve_extend.c:1116:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13534              		.loc 1 1116 5 discriminator 1 view .LVU4783
 13535 4810 4883FF01 		cmp	rdi, 1	# _137,
 13536 4814 0F862902 		jbe	.L1017	#,
 13536      0000
 13537              	.LBB717:
 13538              	.LBB718:
 13539              	.LBB719:
 13540              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13541              		.loc 3 107 10 view .LVU4784
 13542 481a 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 13542      24
 13543              	.LBE719:
 13544              	.LBE718:
 13545              	.LBE717:
 13546              	# sieve_extend.c:1116:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13547              		.loc 1 1116 5 view .LVU4785
 13548 481f 41BE0200 		mov	r14d, 2	# ivtmp.621,
 13548      0000
 13549 4825 41BC0300 		mov	r12d, 3	# ivtmp.619,
 13549      0000
 13550              	.LBE716:
 13551              	# sieve_extend.c:1114:     counter_t warn_prime = 0;
1114:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13552              		.loc 1 1114 15 view .LVU4786
 13553 482b 4531C0   		xor	r8d, r8d	# warn_prime
 13554              	# sieve_extend.c:1115:     counter_t warn_nonprime = 0;
1115:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13555              		.loc 1 1115 15 view .LVU4787
GAS LISTING /tmp/cc7rm34x.s 			page 368


 13556 482e 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 13556      18000000 
 13556      00
 13557              	.LBB738:
 13558              	# sieve_extend.c:1116:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13559              		.loc 1 1116 20 view .LVU4788
 13560 4837 41BF0100 		mov	r15d, 1	# prime,
 13560      0000
 13561              	.LBB726:
 13562              	.LBB723:
 13563              	.LBB720:
 13564              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13565              		.loc 3 107 10 view .LVU4789
 13566 483d 4989ED   		mov	r13, rbp	# sieve, sieve
 13567              	.LVL822:
 13568              		.p2align 4
 13569              		.p2align 3
 13570              	.L1047:
 13571              		.loc 3 107 10 view .LVU4790
 13572              	.LBE720:
 13573              	.LBE723:
 13574              	.LBE726:
1117:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13575              		.loc 1 1117 9 is_stmt 1 view .LVU4791
 13576              	# sieve_extend.c:1117:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1117:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13577              		.loc 1 1117 29 is_stmt 0 view .LVU4792
 13578 4840 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 13579              	# sieve_extend.c:1117:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1117:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13580              		.loc 1 1117 30 view .LVU4793
 13581 4844 4C89FB   		mov	rbx, r15	# tmp198, prime
 13582 4847 48C1EB06 		shr	rbx, 6	# tmp198,
 13583              	# sieve_extend.c:1117:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1117:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13584              		.loc 1 1117 71 view .LVU4794
 13585 484b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 13585      00
 13586 4850 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 13586      C9
 13587              	# sieve_extend.c:1117:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1117:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13588              		.loc 1 1117 12 view .LVU4795
 13589 4855 83E101   		and	ecx, 1	# c,
 13590 4858 0F84BA02 		je	.L1039	#,
 13590      0000
 13591              	.LVL823:
 13592              	.LBB727:
 13593              	.LBB728:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13594              		.loc 1 1126 32 is_stmt 1 view .LVU4796
 13595              	.LBE728:
 13596              	# sieve_extend.c:1125:             counter_t c_prime = 0;
1125:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13597              		.loc 1 1125 23 is_stmt 0 view .LVU4797
 13598 485e 31ED     		xor	ebp, ebp	# c_prime
GAS LISTING /tmp/cc7rm34x.s 			page 369


 13599              	.LBB729:
 13600              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13601              		.loc 1 1126 13 view .LVU4798
 13602 4860 4885FF   		test	rdi, rdi	# _137
 13603 4863 BE030000 		mov	esi, 3	# ivtmp.611,
 13603      00
 13604 4868 0F84E103 		je	.L1151	#,
 13604      0000
 13605 486e 4989FB   		mov	r11, rdi	# tmp231, _137
 13606 4871 4929CB   		sub	r11, rcx	# tmp231, c
 13607 4874 4183E303 		and	r11d, 3	# tmp231,
 13608 4878 4D89DA   		mov	r10, r11	# tmp232, tmp231
 13609 487b 0F84BF00 		je	.L1040	#,
 13609      0000
 13610              	.LVL824:
1127:sieve_extend.c ****             }
 13611              		.loc 1 1127 17 is_stmt 1 view .LVU4799
 13612              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13613              		.loc 1 1127 48 is_stmt 0 view .LVU4800
 13614 4881 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 13615 4885 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.621
 13616 4888 7411     		je	.L1092	#,
 13617              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13618              		.loc 1 1127 33 view .LVU4801
 13619 488a 31D2     		xor	edx, edx	# tmp241
 13620 488c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.619
 13621 488f 48F7F6   		div	rsi	# ivtmp.611
 13622              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13623              		.loc 1 1127 82 view .LVU4802
 13624 4892 31ED     		xor	ebp, ebp	# c_prime
1127:sieve_extend.c ****             }
 13625              		.loc 1 1127 82 view .LVU4803
 13626 4894 4885D2   		test	rdx, rdx	# tmp241
 13627 4897 400F94C5 		sete	bpl	#, c_prime
 13628              	.LVL825:
 13629              	.L1092:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13630              		.loc 1 1126 68 is_stmt 1 view .LVU4804
 13631              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13632              		.loc 1 1126 69 is_stmt 0 view .LVU4805
 13633 489b 4883C101 		add	rcx, 1	# c,
 13634              	.LVL826:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13635              		.loc 1 1126 32 is_stmt 1 view .LVU4806
 13636              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13637              		.loc 1 1126 13 is_stmt 0 view .LVU4807
 13638 489f 4839F9   		cmp	rcx, rdi	# c, _137
 13639 48a2 0F877801 		ja	.L1046	#,
 13639      0000
 13640              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
GAS LISTING /tmp/cc7rm34x.s 			page 370


 13641              		.loc 1 1126 51 view .LVU4808
 13642 48a8 4989C9   		mov	r9, rcx	# tmp244, c
 13643 48ab BE050000 		mov	esi, 5	# ivtmp.611,
 13643      00
 13644 48b0 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 13645              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13646              		.loc 1 1126 47 view .LVU4809
 13647 48b4 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.619
 13648 48b7 0F876301 		ja	.L1046	#,
 13648      0000
 13649 48bd 4983FA01 		cmp	r10, 1	# tmp232,
 13650 48c1 747D     		je	.L1040	#,
 13651 48c3 4983FA02 		cmp	r10, 2	# tmp232,
 13652 48c7 7438     		je	.L1123	#,
1127:sieve_extend.c ****             }
 13653              		.loc 1 1127 17 is_stmt 1 view .LVU4810
 13654              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13655              		.loc 1 1127 48 is_stmt 0 view .LVU4811
 13656 48c9 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 13657 48cd 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.621
 13658 48d0 7417     		je	.L1094	#,
 13659              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13660              		.loc 1 1127 33 view .LVU4812
 13661 48d2 31D2     		xor	edx, edx	# tmp247
 13662 48d4 4C89E0   		mov	rax, r12	# tmp248, ivtmp.619
 13663 48d7 48F7F6   		div	rsi	# ivtmp.611
 13664              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13665              		.loc 1 1127 20 view .LVU4813
 13666 48da 4885D2   		test	rdx, rdx	# tmp247
 13667 48dd 410F94C3 		sete	r11b	#, tmp249
 13668              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13669              		.loc 1 1127 82 view .LVU4814
 13670 48e1 4180FB01 		cmp	r11b, 1	# tmp249,
 13671 48e5 4883DDFF 		sbb	rbp, -1	# c_prime,
 13672              	.LVL827:
 13673              	.L1094:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13674              		.loc 1 1126 68 is_stmt 1 view .LVU4815
 13675              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13676              		.loc 1 1126 69 is_stmt 0 view .LVU4816
 13677 48e9 4883C101 		add	rcx, 1	# c,
 13678              	.LVL828:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13679              		.loc 1 1126 32 is_stmt 1 view .LVU4817
 13680 48ed 4883C602 		add	rsi, 2	# ivtmp.611,
 13681              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13682              		.loc 1 1126 51 is_stmt 0 view .LVU4818
 13683 48f1 4989CA   		mov	r10, rcx	# tmp250, c
 13684 48f4 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 13685              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/cc7rm34x.s 			page 371


1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13686              		.loc 1 1126 47 view .LVU4819
 13687 48f8 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.619
 13688 48fb 0F871F01 		ja	.L1046	#,
 13688      0000
 13689              	.L1123:
1127:sieve_extend.c ****             }
 13690              		.loc 1 1127 17 is_stmt 1 view .LVU4820
 13691              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13692              		.loc 1 1127 48 is_stmt 0 view .LVU4821
 13693 4901 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 13694 4905 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.621
 13695 4908 7415     		je	.L1097	#,
 13696              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13697              		.loc 1 1127 33 view .LVU4822
 13698 490a 31D2     		xor	edx, edx	# tmp253
 13699 490c 4C89E0   		mov	rax, r12	# tmp254, ivtmp.619
 13700 490f 48F7F6   		div	rsi	# ivtmp.611
 13701              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13702              		.loc 1 1127 20 view .LVU4823
 13703 4912 4885D2   		test	rdx, rdx	# tmp253
 13704 4915 0F94C3   		sete	bl	#, tmp255
 13705              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13706              		.loc 1 1127 82 view .LVU4824
 13707 4918 80FB01   		cmp	bl, 1	# tmp255,
 13708 491b 4883DDFF 		sbb	rbp, -1	# c_prime,
 13709              	.LVL829:
 13710              	.L1097:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13711              		.loc 1 1126 68 is_stmt 1 view .LVU4825
 13712              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13713              		.loc 1 1126 69 is_stmt 0 view .LVU4826
 13714 491f 4883C101 		add	rcx, 1	# c,
 13715              	.LVL830:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13716              		.loc 1 1126 32 is_stmt 1 view .LVU4827
 13717 4923 4883C602 		add	rsi, 2	# ivtmp.611,
 13718              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13719              		.loc 1 1126 51 is_stmt 0 view .LVU4828
 13720 4927 4989CB   		mov	r11, rcx	# tmp256, c
 13721 492a 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 13722              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13723              		.loc 1 1126 47 view .LVU4829
 13724 492e 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.619
 13725 4931 0F87E900 		ja	.L1046	#,
 13725      0000
 13726              	.LVL831:
 13727 4937 660F1F84 		.p2align 4
 13727      00000000 
 13727      00
GAS LISTING /tmp/cc7rm34x.s 			page 372


 13728              		.p2align 3
 13729              	.L1040:
1127:sieve_extend.c ****             }
 13730              		.loc 1 1127 17 is_stmt 1 view .LVU4830
 13731              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13732              		.loc 1 1127 48 is_stmt 0 view .LVU4831
 13733 4940 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 13734 4944 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.621
 13735 4947 7417     		je	.L1045	#,
 13736              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13737              		.loc 1 1127 33 view .LVU4832
 13738 4949 31D2     		xor	edx, edx	# tmp214
 13739 494b 4C89E0   		mov	rax, r12	# tmp215, ivtmp.619
 13740 494e 48F7F6   		div	rsi	# ivtmp.611
 13741              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13742              		.loc 1 1127 20 view .LVU4833
 13743 4951 4885D2   		test	rdx, rdx	# tmp214
 13744 4954 410F94C1 		sete	r9b	#, tmp217
 13745              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13746              		.loc 1 1127 82 view .LVU4834
 13747 4958 4180F901 		cmp	r9b, 1	# tmp217,
 13748 495c 4883DDFF 		sbb	rbp, -1	# c_prime,
 13749              	.LVL832:
 13750              	.L1045:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13751              		.loc 1 1126 68 is_stmt 1 view .LVU4835
 13752              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13753              		.loc 1 1126 69 is_stmt 0 view .LVU4836
 13754 4960 4883C101 		add	rcx, 1	# tmp234,
 13755              	.LVL833:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13756              		.loc 1 1126 32 is_stmt 1 view .LVU4837
 13757              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13758              		.loc 1 1126 13 is_stmt 0 view .LVU4838
 13759 4964 4839F9   		cmp	rcx, rdi	# tmp234, _137
 13760 4967 0F87B300 		ja	.L1046	#,
 13760      0000
 13761              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13762              		.loc 1 1126 51 view .LVU4839
 13763 496d 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 13764 4970 4883C602 		add	rsi, 2	# tmp233,
 13765 4974 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 13766              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13767              		.loc 1 1126 47 view .LVU4840
 13768 4978 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.619
 13769 497b 0F879F00 		ja	.L1046	#,
 13769      0000
1127:sieve_extend.c ****             }
 13770              		.loc 1 1127 17 is_stmt 1 view .LVU4841
GAS LISTING /tmp/cc7rm34x.s 			page 373


 13771              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13772              		.loc 1 1127 48 is_stmt 0 view .LVU4842
 13773 4981 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 13774 4985 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.621
 13775 4988 7417     		je	.L1101	#,
 13776              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13777              		.loc 1 1127 33 view .LVU4843
 13778 498a 31D2     		xor	edx, edx	# tmp259
 13779 498c 4C89E0   		mov	rax, r12	# tmp260, ivtmp.619
 13780 498f 48F7F6   		div	rsi	# tmp233
 13781              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13782              		.loc 1 1127 20 view .LVU4844
 13783 4992 4885D2   		test	rdx, rdx	# tmp259
 13784 4995 410F94C2 		sete	r10b	#, tmp261
 13785              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13786              		.loc 1 1127 82 view .LVU4845
 13787 4999 4180FA01 		cmp	r10b, 1	# tmp261,
 13788 499d 4883DDFF 		sbb	rbp, -1	# c_prime,
 13789              	.LVL834:
 13790              	.L1101:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13791              		.loc 1 1126 68 is_stmt 1 view .LVU4846
 13792              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13793              		.loc 1 1126 69 is_stmt 0 view .LVU4847
 13794 49a1 4C8D4901 		lea	r9, 1[rcx]	# c,
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13795              		.loc 1 1126 32 is_stmt 1 view .LVU4848
 13796 49a5 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.611,
 13797              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13798              		.loc 1 1126 51 is_stmt 0 view .LVU4849
 13799 49a9 4D89CB   		mov	r11, r9	# tmp264, c
 13800 49ac 4D0FAFD9 		imul	r11, r9	# tmp264, c
 13801              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13802              		.loc 1 1126 47 view .LVU4850
 13803 49b0 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.619
 13804 49b3 776B     		ja	.L1046	#,
1127:sieve_extend.c ****             }
 13805              		.loc 1 1127 17 is_stmt 1 view .LVU4851
 13806              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13807              		.loc 1 1127 48 is_stmt 0 view .LVU4852
 13808 49b5 4D01C9   		add	r9, r9	# tmp265
 13809 49b8 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.621
 13810 49bb 7417     		je	.L1103	#,
 13811              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13812              		.loc 1 1127 33 view .LVU4853
 13813 49bd 31D2     		xor	edx, edx	# tmp267
 13814 49bf 4C89E0   		mov	rax, r12	# tmp268, ivtmp.619
 13815 49c2 48F7F3   		div	rbx	# ivtmp.611
GAS LISTING /tmp/cc7rm34x.s 			page 374


 13816              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13817              		.loc 1 1127 20 view .LVU4854
 13818 49c5 4885D2   		test	rdx, rdx	# tmp267
 13819 49c8 410F94C2 		sete	r10b	#, tmp269
 13820              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13821              		.loc 1 1127 82 view .LVU4855
 13822 49cc 4180FA01 		cmp	r10b, 1	# tmp269,
 13823 49d0 4883DDFF 		sbb	rbp, -1	# c_prime,
 13824              	.LVL835:
 13825              	.L1103:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13826              		.loc 1 1126 68 is_stmt 1 view .LVU4856
 13827              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13828              		.loc 1 1126 69 is_stmt 0 view .LVU4857
 13829 49d4 4C8D4902 		lea	r9, 2[rcx]	# c,
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13830              		.loc 1 1126 32 is_stmt 1 view .LVU4858
 13831 49d8 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.611,
 13832              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13833              		.loc 1 1126 51 is_stmt 0 view .LVU4859
 13834 49dc 4D89CB   		mov	r11, r9	# tmp272, c
 13835 49df 4D0FAFD9 		imul	r11, r9	# tmp272, c
 13836              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13837              		.loc 1 1126 47 view .LVU4860
 13838 49e3 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.619
 13839 49e6 7738     		ja	.L1046	#,
1127:sieve_extend.c ****             }
 13840              		.loc 1 1127 17 is_stmt 1 view .LVU4861
 13841              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13842              		.loc 1 1127 48 is_stmt 0 view .LVU4862
 13843 49e8 4D01C9   		add	r9, r9	# tmp273
 13844 49eb 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.621
 13845 49ee 7417     		je	.L1105	#,
 13846              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13847              		.loc 1 1127 33 view .LVU4863
 13848 49f0 31D2     		xor	edx, edx	# tmp275
 13849 49f2 4C89E0   		mov	rax, r12	# tmp276, ivtmp.619
 13850 49f5 48F7F3   		div	rbx	# ivtmp.611
 13851              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13852              		.loc 1 1127 20 view .LVU4864
 13853 49f8 4885D2   		test	rdx, rdx	# tmp275
 13854 49fb 410F94C2 		sete	r10b	#, tmp277
 13855              	# sieve_extend.c:1127:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1127:sieve_extend.c ****             }
 13856              		.loc 1 1127 82 view .LVU4865
 13857 49ff 4180FA01 		cmp	r10b, 1	# tmp277,
 13858 4a03 4883DDFF 		sbb	rbp, -1	# c_prime,
 13859              	.LVL836:
 13860              	.L1105:
GAS LISTING /tmp/cc7rm34x.s 			page 375


1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13861              		.loc 1 1126 68 is_stmt 1 view .LVU4866
 13862              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13863              		.loc 1 1126 69 is_stmt 0 view .LVU4867
 13864 4a07 4883C103 		add	rcx, 3	# c,
 13865              	.LVL837:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13866              		.loc 1 1126 32 is_stmt 1 view .LVU4868
 13867 4a0b 4883C606 		add	rsi, 6	# ivtmp.611,
 13868              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13869              		.loc 1 1126 51 is_stmt 0 view .LVU4869
 13870 4a0f 4989C9   		mov	r9, rcx	# tmp278, c
 13871 4a12 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 13872              	# sieve_extend.c:1126:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13873              		.loc 1 1126 47 view .LVU4870
 13874 4a16 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.619
 13875 4a19 0F8621FF 		jbe	.L1040	#,
 13875      FFFF
 13876              	.LVL838:
 13877 4a1f 90       		.p2align 4
 13878              		.p2align 3
 13879              	.L1046:
1126:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13880              		.loc 1 1126 47 view .LVU4871
 13881              	.LBE729:
1129:sieve_extend.c ****         }
 13882              		.loc 1 1129 13 is_stmt 1 view .LVU4872
 13883              	# sieve_extend.c:1129:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1129:sieve_extend.c ****         }
 13884              		.loc 1 1129 16 is_stmt 0 view .LVU4873
 13885 4a20 4885ED   		test	rbp, rbp	# c_prime
 13886 4a23 0F840D02 		je	.L1164	#,
 13886      0000
 13887              	.LVL839:
 13888              	.L1043:
1129:sieve_extend.c ****         }
 13889              		.loc 1 1129 16 view .LVU4874
 13890              	.LBE727:
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13891              		.loc 1 1116 52 is_stmt 1 view .LVU4875
 13892              	# sieve_extend.c:1116:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13893              		.loc 1 1116 57 is_stmt 0 view .LVU4876
 13894 4a29 4983C701 		add	r15, 1	# prime,
 13895              	.LVL840:
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13896              		.loc 1 1116 31 is_stmt 1 view .LVU4877
 13897 4a2d 4983C402 		add	r12, 2	# ivtmp.619,
 13898 4a31 4983C602 		add	r14, 2	# ivtmp.621,
 13899              	# sieve_extend.c:1116:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13900              		.loc 1 1116 5 is_stmt 0 view .LVU4878
 13901 4a35 4939FF   		cmp	r15, rdi	# prime, _137
 13902 4a38 0F8202FE 		jb	.L1047	#,
GAS LISTING /tmp/cc7rm34x.s 			page 376


 13902      FFFF
 13903              	.LVL841:
 13904              	.L1153:
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13905              		.loc 1 1116 5 view .LVU4879
 13906 4a3e 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 13906      24
 13907              	.LVL842:
 13908              	.L1017:
1116:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13909              		.loc 1 1116 5 view .LVU4880
 13910              	.LBE738:
 13911              	.LBE713:
 13912              	.LBE712:
 13913              	# sieve_extend.c:1160: }
1160:sieve_extend.c **** 
 13914              		.loc 1 1160 1 view .LVU4881
 13915 4a43 488D6424 		lea	rsp, 56[rsp]	#,
 13915      38
 13916              		.cfi_remember_state
 13917              		.cfi_def_cfa_offset 56
 13918 4a48 4489E8   		mov	eax, r13d	#, <retval>
 13919 4a4b 5B       		pop	rbx	#
 13920              		.cfi_def_cfa_offset 48
 13921 4a4c 5D       		pop	rbp	#
 13922              		.cfi_def_cfa_offset 40
 13923 4a4d 415C     		pop	r12	#
 13924              		.cfi_def_cfa_offset 32
 13925 4a4f 415D     		pop	r13	#
 13926              		.cfi_def_cfa_offset 24
 13927 4a51 415E     		pop	r14	#
 13928              		.cfi_def_cfa_offset 16
 13929 4a53 415F     		pop	r15	#
 13930              		.cfi_def_cfa_offset 8
 13931 4a55 C3       		ret	
 13932              	.LVL843:
 13933              	.L1162:
 13934              		.cfi_restore_state
 13935              	# sieve_extend.c:1139:     switch(sieve->size) {
1139:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13936              		.loc 1 1139 5 view .LVU4882
 13937 4a56 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 13937      030000
 13938 4a5d 0F84E602 		je	.L1024	#,
 13938      0000
 13939 4a63 7633     		jbe	.L1165	#,
 13940 4a65 4981F910 		cmp	r9, 10000	# pretmp_199,
 13940      270000
 13941 4a6c 0F852303 		jne	.L1028	#,
 13941      0000
 13942 4a72 4981F8CD 		cmp	r8, 1229	# primeCount,
 13942      040000
 13943              	# sieve_extend.c:1143:         case 10000:         valid_primes = 1229;     break;
1143:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13944              		.loc 1 1143 42 view .LVU4883
 13945 4a79 B9CD0400 		mov	ecx, 1229	# valid_primes,
 13945      00
GAS LISTING /tmp/cc7rm34x.s 			page 377


 13946 4a7e 400F94C6 		sete	sil	#, tmp179
 13947 4a82 21F2     		and	edx, esi	# _251, tmp179
 13948 4a84 4981F8CD 		cmp	r8, 1229	# primeCount,
 13948      040000
 13949 4a8b 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 13950 4a8f 410F95C6 		setne	r14b	#, _135
1143:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13951              		.loc 1 1143 29 is_stmt 1 view .LVU4884
 13952              	.LVL844:
1143:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13953              		.loc 1 1143 54 view .LVU4885
 13954              	# sieve_extend.c:1143:         case 10000:         valid_primes = 1229;     break;
1143:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13955              		.loc 1 1143 9 is_stmt 0 view .LVU4886
 13956 4a93 E938FDFF 		jmp	.L1035	#
 13956      FF
 13957              	.LVL845:
 13958              	.L1165:
 13959              	# sieve_extend.c:1139:     switch(sieve->size) {
1139:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13960              		.loc 1 1139 5 view .LVU4887
 13961 4a98 4983F90A 		cmp	r9, 10	# pretmp_199,
 13962 4a9c 0F841A02 		je	.L1026	#,
 13962      0000
 13963 4aa2 4983F964 		cmp	r9, 100	# pretmp_199,
 13964 4aa6 0F85E902 		jne	.L1028	#,
 13964      0000
 13965 4aac 4983F819 		cmp	r8, 25	# primeCount,
 13966 4ab0 0F94C1   		sete	cl	#, tmp173
 13967 4ab3 21CA     		and	edx, ecx	# _251, tmp173
 13968 4ab5 4983F819 		cmp	r8, 25	# primeCount,
 13969 4ab9 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 13970 4abd 410F95C6 		setne	r14b	#, _135
 13971              	# sieve_extend.c:1141:         case 100:           valid_primes = 25;       break;
1141:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 13972              		.loc 1 1141 42 view .LVU4888
 13973 4ac1 B9190000 		mov	ecx, 25	# valid_primes,
 13973      00
 13974 4ac6 E905FDFF 		jmp	.L1035	#
 13974      FF
 13975 4acb 0F1F4400 		.p2align 4,,7
 13975      00
 13976              		.p2align 3
 13977              	.L1163:
 13978              	# sieve_extend.c:1139:     switch(sieve->size) {
1139:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13979              		.loc 1 1139 5 view .LVU4889
 13980 4ad0 4981F940 		cmp	r9, 1000000	# pretmp_199,
 13980      420F00
 13981 4ad7 0F84B801 		je	.L1032	#,
 13981      0000
 13982 4add 4981F980 		cmp	r9, 10000000	# pretmp_199,
 13982      969800
 13983 4ae4 0F85AB02 		jne	.L1028	#,
 13983      0000
 13984 4aea 4981F803 		cmp	r8, 664579	# primeCount,
 13984      240A00
GAS LISTING /tmp/cc7rm34x.s 			page 378


 13985              	# sieve_extend.c:1146:         case 10000000:      valid_primes = 664579;   break;
1146:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13986              		.loc 1 1146 42 view .LVU4890
 13987 4af1 B903240A 		mov	ecx, 664579	# valid_primes,
 13987      00
 13988 4af6 410F94C7 		sete	r15b	#, tmp185
 13989 4afa 4421FA   		and	edx, r15d	# _251, tmp185
 13990 4afd 4981F803 		cmp	r8, 664579	# primeCount,
 13990      240A00
 13991 4b04 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 13992 4b08 410F95C6 		setne	r14b	#, _135
1146:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13993              		.loc 1 1146 29 is_stmt 1 view .LVU4891
 13994              	.LVL846:
1146:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13995              		.loc 1 1146 54 view .LVU4892
 13996              	# sieve_extend.c:1146:         case 10000000:      valid_primes = 664579;   break;
1146:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13997              		.loc 1 1146 9 is_stmt 0 view .LVU4893
 13998 4b0c E9BFFCFF 		jmp	.L1035	#
 13998      FF
 13999              	.LVL847:
 14000              		.p2align 4,,7
 14001 4b11 0F1F8000 		.p2align 3
 14001      000000
 14002              	.L1039:
 14003              	.LBB743:
 14004              	.LBB741:
 14005              	.LBB739:
 14006              	.LBB736:
1118:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14007              		.loc 1 1118 32 is_stmt 1 view .LVU4894
 14008              	# sieve_extend.c:1118:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1118:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14009              		.loc 1 1118 13 is_stmt 0 view .LVU4895
 14010 4b18 4885FF   		test	rdi, rdi	# _137
 14011 4b1b 0F841DFF 		je	.L1153	#,
 14011      FFFF
 14012              	# sieve_extend.c:1118:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1118:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14013              		.loc 1 1118 27 view .LVU4896
 14014 4b21 BB010000 		mov	ebx, 1	# c,
 14014      00
 14015 4b26 EB20     		jmp	.L1044	#
 14016              	.LVL848:
 14017              		.p2align 4,,7
 14018              		.p2align 3
 14019              	.L1053:
 14020              	# sieve_extend.c:1120:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1120:sieve_extend.c ****                 }
 14021              		.loc 1 1120 35 view .LVU4897
 14022 4b28 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 14023              	.LVL849:
 14024              	.L1042:
1118:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14025              		.loc 1 1118 68 is_stmt 1 view .LVU4898
 14026              	# sieve_extend.c:1118:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/cc7rm34x.s 			page 379


1118:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14027              		.loc 1 1118 69 is_stmt 0 view .LVU4899
 14028 4b2b 4883C301 		add	rbx, 1	# c,
 14029              	.LVL850:
1118:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14030              		.loc 1 1118 32 is_stmt 1 view .LVU4900
 14031              	# sieve_extend.c:1118:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1118:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14032              		.loc 1 1118 13 is_stmt 0 view .LVU4901
 14033 4b2f 4839FB   		cmp	rbx, rdi	# c, _137
 14034 4b32 0F87F1FE 		ja	.L1043	#,
 14034      FFFF
 14035              	# sieve_extend.c:1118:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1118:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14036              		.loc 1 1118 51 view .LVU4902
 14037 4b38 4989DB   		mov	r11, rbx	# tmp209, c
 14038 4b3b 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 14039              	# sieve_extend.c:1118:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1118:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 14040              		.loc 1 1118 47 view .LVU4903
 14041 4b3f 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.619
 14042 4b42 0F87E1FE 		ja	.L1043	#,
 14042      FFFF
 14043              	.LVL851:
 14044              	.L1044:
1119:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 14045              		.loc 1 1119 17 is_stmt 1 view .LVU4904
 14046 4b48 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
 14047 4b4c 31D2     		xor	edx, edx	# tmp204
 14048 4b4e 4C89E0   		mov	rax, r12	# tmp203, ivtmp.619
 14049              	# sieve_extend.c:1119:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1119:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 14050              		.loc 1 1119 39 is_stmt 0 view .LVU4905
 14051 4b51 488D7501 		lea	rsi, 1[rbp]	# _55,
 14052 4b55 48F7F6   		div	rsi	# _55
 14053              	# sieve_extend.c:1119:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1119:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 14054              		.loc 1 1119 48 view .LVU4906
 14055 4b58 4885D2   		test	rdx, rdx	# tmp204
 14056 4b5b 75CE     		jne	.L1042	#,
1119:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 14057              		.loc 1 1119 48 view .LVU4907
 14058 4b5d 4939EE   		cmp	r14, rbp	# ivtmp.621, _216
 14059 4b60 74C9     		je	.L1042	#,
1120:sieve_extend.c ****                 }
 14060              		.loc 1 1120 21 is_stmt 1 view .LVU4908
 14061              	# sieve_extend.c:1120:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1120:sieve_extend.c ****                 }
 14062              		.loc 1 1120 24 is_stmt 0 view .LVU4909
 14063 4b62 4983F81D 		cmp	r8, 29	# warn_prime,
 14064              	# sieve_extend.c:1120:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1120:sieve_extend.c ****                 }
 14065              		.loc 1 1120 35 view .LVU4910
 14066 4b66 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 14067              	.LVL852:
 14068              	# sieve_extend.c:1120:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1120:sieve_extend.c ****                 }
GAS LISTING /tmp/cc7rm34x.s 			page 380


 14069              		.loc 1 1120 24 view .LVU4911
 14070 4b6a 77BC     		ja	.L1053	#,
1120:sieve_extend.c ****                 }
 14071              		.loc 1 1120 44 is_stmt 1 view .LVU4912
 14072              	.LVL853:
 14073              	.LBB724:
 14074              	.LBI718:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14075              		.loc 3 105 1 view .LVU4913
 14076              	.LBB721:
 14077              		.loc 3 107 3 view .LVU4914
 14078              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14079              		.loc 3 107 10 is_stmt 0 view .LVU4915
 14080 4b6c 4989F0   		mov	r8, rsi	#, _55
 14081 4b6f 4989C1   		mov	r9, rax	#, tmp203
 14082 4b72 BF010000 		mov	edi, 1	#,
 14082      00
 14083 4b77 4C89F9   		mov	rcx, r15	#, prime
 14084 4b7a 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.619
 14085 4b7e 4C89E2   		mov	rdx, r12	#, ivtmp.619
 14086 4b81 488D3500 		lea	rsi, .LC12[rip]	#,
 14086      000000
 14087 4b88 31C0     		xor	eax, eax	#
 14088 4b8a E8000000 		call	__printf_chk@PLT	#
 14088      00
 14089              	.LVL854:
 14090 4b8f 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 14091              	.LBE721:
 14092              	.LBE724:
 14093              	# sieve_extend.c:1120:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1120:sieve_extend.c ****                 }
 14094              		.loc 1 1120 35 view .LVU4916
 14095 4b93 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 14096              	.LBB725:
 14097              	.LBB722:
 14098              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14099              		.loc 3 107 10 view .LVU4917
 14100 4b96 EB93     		jmp	.L1042	#
 14101              	.LVL855:
 14102              	.L1018:
 14103              		.loc 3 107 10 view .LVU4918
 14104              	.LBE722:
 14105              	.LBE725:
 14106              	.LBE736:
 14107              	.LBE739:
 14108              	.LBE741:
 14109              	.LBE743:
 14110              	.LBB744:
 14111              	.LBB709:
1109:sieve_extend.c **** }
 14112              		.loc 1 1109 5 is_stmt 1 view .LVU4919
1109:sieve_extend.c **** }
 14113              		.loc 1 1109 5 is_stmt 0 view .LVU4920
 14114              	.LBE709:
 14115              	.LBE744:
1138:sieve_extend.c ****     switch(sieve->size) {
 14116              		.loc 1 1138 5 is_stmt 1 view .LVU4921
GAS LISTING /tmp/cc7rm34x.s 			page 381


1139:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14117              		.loc 1 1139 5 view .LVU4922
 14118 4b98 4531ED   		xor	r13d, r13d	# <retval>
 14119 4b9b 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 14119      860100
 14120 4ba2 41BE0100 		mov	r14d, 1	# _135,
 14120      0000
 14121 4ba8 41B80100 		mov	r8d, 1	# primeCount,
 14121      0000
 14122 4bae 0F842302 		je	.L1056	#,
 14122      0000
 14123 4bb4 0F872301 		ja	.L1048	#,
 14123      0000
 14124 4bba 4983F964 		cmp	r9, 100	# pretmp_199,
 14125 4bbe B9190000 		mov	ecx, 25	# valid_primes,
 14125      00
 14126 4bc3 742A     		je	.L1036	#,
 14127              		.p2align 4,,2
 14128 4bc5 0F864001 		jbe	.L1166	#,
 14128      0000
 14129 4bcb 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 14129      030000
 14130              	# sieve_extend.c:1142:         case 1000:          valid_primes = 168;      break;
1142:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14131              		.loc 1 1142 42 is_stmt 0 view .LVU4923
 14132 4bd2 B9A80000 		mov	ecx, 168	# valid_primes,
 14132      00
 14133              	# sieve_extend.c:1139:     switch(sieve->size) {
1139:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14134              		.loc 1 1139 5 view .LVU4924
 14135 4bd7 7416     		je	.L1036	#,
 14136 4bd9 4981F910 		cmp	r9, 10000	# pretmp_199,
 14136      270000
 14137 4be0 B9CD0400 		mov	ecx, 1229	# tmp223,
 14137      00
 14138 4be5 41BA0000 		mov	r10d, 0	# tmp224,
 14138      0000
 14139 4beb 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 14140              	.LVL856:
 14141              	.L1036:
1154:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14142              		.loc 1 1154 5 is_stmt 1 view .LVU4925
 14143              	# sieve_extend.c:1154:     if (!valid && option_verboselevel >= 1) {
1154:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14144              		.loc 1 1154 39 is_stmt 0 view .LVU4926
 14145 4bef 85DB     		test	ebx, ebx	# option_verboselevel
 14146 4bf1 410F9FC4 		setg	r12b	#, tmp194
 14147              	# sieve_extend.c:1154:     if (!valid && option_verboselevel >= 1) {
1154:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14148              		.loc 1 1154 8 view .LVU4927
 14149 4bf5 4520F4   		and	r12b, r14b	# _7, _135
 14150 4bf8 0F84F0FB 		je	.L1037	#,
 14150      FFFF
1155:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 14151              		.loc 1 1155 9 is_stmt 1 view .LVU4928
 14152              	.LVL857:
 14153              	.LBB745:
GAS LISTING /tmp/cc7rm34x.s 			page 382


 14154              	.LBI745:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14155              		.loc 3 105 1 view .LVU4929
 14156              	.LBB746:
 14157              		.loc 3 107 3 view .LVU4930
 14158              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14159              		.loc 3 107 10 is_stmt 0 view .LVU4931
 14160 4bfe 31C0     		xor	eax, eax	#
 14161 4c00 4C89CA   		mov	rdx, r9	#, pretmp_199
 14162 4c03 488D3500 		lea	rsi, .LC10[rip]	#,
 14162      000000
 14163 4c0a BF010000 		mov	edi, 1	#,
 14163      00
 14164 4c0f E8000000 		call	__printf_chk@PLT	#
 14164      00
 14165              	.LVL858:
 14166              		.loc 3 107 10 view .LVU4932
 14167              	.LBE746:
 14168              	.LBE745:
1156:sieve_extend.c ****     }
 14169              		.loc 1 1156 9 is_stmt 1 view .LVU4933
 14170              	# sieve_extend.c:1156:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1156:sieve_extend.c ****     }
 14171              		.loc 1 1156 12 is_stmt 0 view .LVU4934
 14172 4c14 83FB01   		cmp	ebx, 1	# option_verboselevel,
 14173 4c17 0F8426FE 		je	.L1017	#,
 14173      FFFF
1156:sieve_extend.c ****     }
 14174              		.loc 1 1156 49 is_stmt 1 discriminator 1 view .LVU4935
 14175 4c1d 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 14176 4c21 BA640000 		mov	edx, 100	#,
 14176      00
 14177 4c26 4889EF   		mov	rdi, rbp	#, sieve
 14178              	# sieve_extend.c:1154:     if (!valid && option_verboselevel >= 1) {
1154:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14179              		.loc 1 1154 9 is_stmt 0 discriminator 1 view .LVU4936
 14180 4c29 4589E6   		mov	r14d, r12d	# _135, _7
 14181              	# sieve_extend.c:1156:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1156:sieve_extend.c ****     }
 14182              		.loc 1 1156 49 discriminator 1 view .LVU4937
 14183 4c2c E8DFE6FF 		call	show_primes.isra.0	#
 14183      FF
 14184              	.LVL859:
 14185 4c31 E9B8FBFF 		jmp	.L1037	#
 14185      FF
 14186              	.LVL860:
 14187              	.L1164:
 14188              	.LBB747:
 14189              	.LBB742:
 14190              	.LBB740:
 14191              	.LBB737:
 14192              	# sieve_extend.c:1129:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1129:sieve_extend.c ****         }
 14193              		.loc 1 1129 44 view .LVU4938
 14194 4c36 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 14194      18
 14195              	# sieve_extend.c:1129:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
GAS LISTING /tmp/cc7rm34x.s 			page 383


1129:sieve_extend.c ****         }
 14196              		.loc 1 1129 28 view .LVU4939
 14197 4c3b 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 14198              	# sieve_extend.c:1129:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1129:sieve_extend.c ****         }
 14199              		.loc 1 1129 44 view .LVU4940
 14200 4c3f 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 14201              	.LVL861:
 14202              	# sieve_extend.c:1129:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1129:sieve_extend.c ****         }
 14203              		.loc 1 1129 28 view .LVU4941
 14204 4c43 761D     		jbe	.L1051	#,
 14205              	# sieve_extend.c:1129:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1129:sieve_extend.c ****         }
 14206              		.loc 1 1129 44 view .LVU4942
 14207 4c45 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 14207      18
 14208 4c4a E9DAFDFF 		jmp	.L1043	#
 14208      FF
 14209              	.LVL862:
 14210              	.L1151:
1129:sieve_extend.c ****         }
 14211              		.loc 1 1129 44 view .LVU4943
 14212 4c4f 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 14212      18
 14213              	# sieve_extend.c:1129:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1129:sieve_extend.c ****         }
 14214              		.loc 1 1129 28 view .LVU4944
 14215 4c54 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 14216              	# sieve_extend.c:1129:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1129:sieve_extend.c ****         }
 14217              		.loc 1 1129 44 view .LVU4945
 14218 4c58 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 14219              	.LVL863:
 14220              	# sieve_extend.c:1129:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1129:sieve_extend.c ****         }
 14221              		.loc 1 1129 28 view .LVU4946
 14222 4c5c 0F87DCFD 		ja	.L1153	#,
 14222      FFFF
 14223              	.LVL864:
 14224              	.L1051:
 14225              	.LBB730:
 14226              	.LBB731:
 14227              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14228              		.loc 3 107 10 view .LVU4947
 14229 4c62 BF010000 		mov	edi, 1	#,
 14229      00
 14230              	.LBE731:
 14231              	.LBE730:
 14232              	# sieve_extend.c:1129:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1129:sieve_extend.c ****         }
 14233              		.loc 1 1129 53 view .LVU4948
 14234 4c67 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 14234      01
 14235              	.LBB734:
 14236              	.LBB732:
 14237              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/cc7rm34x.s 			page 384


 14238              		.loc 3 107 10 view .LVU4949
 14239 4c6c 4C89F9   		mov	rcx, r15	#, prime
 14240 4c6f 488D3500 		lea	rsi, .LC13[rip]	#,
 14240      000000
 14241 4c76 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 14241      28
 14242              	.LBE732:
 14243              	.LBE734:
1129:sieve_extend.c ****         }
 14244              		.loc 1 1129 53 is_stmt 1 view .LVU4950
 14245              	.LVL865:
 14246              	.LBB735:
 14247              	.LBI730:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14248              		.loc 3 105 1 view .LVU4951
 14249              	.LBB733:
 14250              		.loc 3 107 3 view .LVU4952
 14251              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14252              		.loc 3 107 10 is_stmt 0 view .LVU4953
 14253 4c7b 31C0     		xor	eax, eax	#
 14254 4c7d E8000000 		call	__printf_chk@PLT	#
 14254      00
 14255              	.LVL866:
 14256              		.loc 3 107 10 view .LVU4954
 14257 4c82 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 14258 4c86 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 14258      28
 14259 4c8b 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 14259      18
 14260 4c90 E994FDFF 		jmp	.L1043	#
 14260      FF
 14261              	.LVL867:
 14262              	.L1032:
 14263              		.loc 3 107 10 view .LVU4955
 14264 4c95 4981F8A2 		cmp	r8, 78498	# primeCount,
 14264      320100
 14265              	.LBE733:
 14266              	.LBE735:
 14267              	.LBE737:
 14268              	.LBE740:
 14269              	.LBE742:
 14270              	.LBE747:
 14271              	# sieve_extend.c:1145:         case 1000000:       valid_primes = 78498;    break;
1145:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14272              		.loc 1 1145 42 view .LVU4956
 14273 4c9c B9A23201 		mov	ecx, 78498	# valid_primes,
 14273      00
 14274 4ca1 410F94C5 		sete	r13b	#, tmp183
 14275 4ca5 4421EA   		and	edx, r13d	# _251, tmp183
 14276 4ca8 4981F8A2 		cmp	r8, 78498	# primeCount,
 14276      320100
 14277 4caf 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 14278 4cb3 410F95C6 		setne	r14b	#, _135
1145:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14279              		.loc 1 1145 29 is_stmt 1 view .LVU4957
 14280              	.LVL868:
1145:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
GAS LISTING /tmp/cc7rm34x.s 			page 385


 14281              		.loc 1 1145 54 view .LVU4958
 14282              	# sieve_extend.c:1145:         case 1000000:       valid_primes = 78498;    break;
1145:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14283              		.loc 1 1145 9 is_stmt 0 view .LVU4959
 14284 4cb7 E914FBFF 		jmp	.L1035	#
 14284      FF
 14285              	.LVL869:
 14286              	.L1026:
1145:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14287              		.loc 1 1145 9 view .LVU4960
 14288 4cbc 4983F804 		cmp	r8, 4	# primeCount,
 14289              	# sieve_extend.c:1140:         case 10:            valid_primes = 4;        break;
1140:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 14290              		.loc 1 1140 42 view .LVU4961
 14291 4cc0 B9040000 		mov	ecx, 4	# valid_primes,
 14291      00
 14292 4cc5 410F94C2 		sete	r10b	#, tmp175
 14293 4cc9 4421D2   		and	edx, r10d	# _251, tmp175
 14294 4ccc 4983F804 		cmp	r8, 4	# primeCount,
 14295 4cd0 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 14296 4cd4 410F95C6 		setne	r14b	#, _135
 14297 4cd8 E9F3FAFF 		jmp	.L1035	#
 14297      FF
 14298              	.LVL870:
 14299              	.L1048:
 14300              	# sieve_extend.c:1139:     switch(sieve->size) {
1139:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14301              		.loc 1 1139 5 view .LVU4962
 14302 4cdd 4981F900 		cmp	r9, 100000000	# pretmp_199,
 14302      E1F505
 14303              	# sieve_extend.c:1147:         case 100000000:     valid_primes = 5761455;  break;
1147:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14304              		.loc 1 1147 42 view .LVU4963
 14305 4ce4 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 14305      00
 14306              	# sieve_extend.c:1139:     switch(sieve->size) {
1139:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14307              		.loc 1 1139 5 view .LVU4964
 14308 4ce9 0F8400FF 		je	.L1036	#,
 14308      FFFF
 14309 4cef 762C     		jbe	.L1167	#,
 14310 4cf1 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 14310      CA9A3B
 14311 4cf8 B92EDF07 		mov	ecx, 50847534	# tmp227,
 14311      03
 14312 4cfd B8000000 		mov	eax, 0	# tmp228,
 14312      00
 14313 4d02 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 14314 4d06 E9E4FEFF 		jmp	.L1036	#
 14314      FF
 14315              	.L1166:
 14316 4d0b 31C9     		xor	ecx, ecx	# valid_primes
 14317 4d0d 4983F90A 		cmp	r9, 10	# pretmp_199,
 14318 4d11 0F94C1   		sete	cl	#, valid_primes
 14319 4d14 48C1E102 		sal	rcx, 2	# valid_primes,
 14320 4d18 E9D2FEFF 		jmp	.L1036	#
 14320      FF
GAS LISTING /tmp/cc7rm34x.s 			page 386


 14321              	.L1167:
 14322 4d1d 4981F940 		cmp	r9, 1000000	# pretmp_199,
 14322      420F00
 14323              	# sieve_extend.c:1145:         case 1000000:       valid_primes = 78498;    break;
1145:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14324              		.loc 1 1145 42 view .LVU4965
 14325 4d24 B9A23201 		mov	ecx, 78498	# valid_primes,
 14325      00
 14326              	# sieve_extend.c:1139:     switch(sieve->size) {
1139:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14327              		.loc 1 1139 5 view .LVU4966
 14328 4d29 0F84C0FE 		je	.L1036	#,
 14328      FFFF
 14329 4d2f 4981F980 		cmp	r9, 10000000	# pretmp_199,
 14329      969800
 14330 4d36 B903240A 		mov	ecx, 664579	# tmp225,
 14330      00
 14331 4d3b BE000000 		mov	esi, 0	# tmp226,
 14331      00
 14332 4d40 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 14333 4d44 E9A6FEFF 		jmp	.L1036	#
 14333      FF
 14334              	.LVL871:
 14335              	.L1024:
1139:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14336              		.loc 1 1139 5 view .LVU4967
 14337 4d49 4981F8A8 		cmp	r8, 168	# primeCount,
 14337      000000
 14338              	# sieve_extend.c:1142:         case 1000:          valid_primes = 168;      break;
1142:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14339              		.loc 1 1142 42 view .LVU4968
 14340 4d50 B9A80000 		mov	ecx, 168	# valid_primes,
 14340      00
 14341 4d55 410F94C6 		sete	r14b	#, tmp177
 14342 4d59 4421F2   		and	edx, r14d	# _251, tmp177
 14343 4d5c 4981F8A8 		cmp	r8, 168	# primeCount,
 14343      000000
 14344 4d63 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 14345 4d67 410F95C6 		setne	r14b	#, _135
1142:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14346              		.loc 1 1142 29 is_stmt 1 view .LVU4969
 14347              	.LVL872:
1142:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14348              		.loc 1 1142 54 view .LVU4970
 14349              	# sieve_extend.c:1142:         case 1000:          valid_primes = 168;      break;
1142:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14350              		.loc 1 1142 9 is_stmt 0 view .LVU4971
 14351 4d6b E960FAFF 		jmp	.L1035	#
 14351      FF
 14352              	.LVL873:
 14353              	.L1030:
1142:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14354              		.loc 1 1142 9 view .LVU4972
 14355 4d70 4981F8AF 		cmp	r8, 5761455	# primeCount,
 14355      E95700
 14356              	# sieve_extend.c:1147:         case 100000000:     valid_primes = 5761455;  break;
1147:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
GAS LISTING /tmp/cc7rm34x.s 			page 387


 14357              		.loc 1 1147 42 view .LVU4973
 14358 4d77 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 14358      00
 14359 4d7c 0F94C0   		sete	al	#, tmp187
 14360 4d7f 21C2     		and	edx, eax	# _251, tmp187
 14361 4d81 4981F8AF 		cmp	r8, 5761455	# primeCount,
 14361      E95700
 14362 4d88 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 14363 4d8c 410F95C6 		setne	r14b	#, _135
1147:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14364              		.loc 1 1147 29 is_stmt 1 view .LVU4974
 14365              	.LVL874:
1147:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14366              		.loc 1 1147 54 view .LVU4975
 14367              	# sieve_extend.c:1147:         case 100000000:     valid_primes = 5761455;  break;
1147:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14368              		.loc 1 1147 9 is_stmt 0 view .LVU4976
 14369 4d90 E93BFAFF 		jmp	.L1035	#
 14369      FF
 14370              	.LVL875:
 14371              	.L1028:
1147:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14372              		.loc 1 1147 9 view .LVU4977
 14373 4d95 4D85C0   		test	r8, r8	# primeCount
 14374 4d98 410F94C3 		sete	r11b	#, tmp191
 14375 4d9c 4421DA   		and	edx, r11d	# _251, tmp191
 14376 4d9f 4D85C0   		test	r8, r8	# primeCount
 14377 4da2 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 14378 4da6 410F95C6 		setne	r14b	#, _135
1149:sieve_extend.c ****     }
 14379              		.loc 1 1149 29 is_stmt 1 view .LVU4978
 14380              	# sieve_extend.c:1149:         default:            valid_primes= 0;
1149:sieve_extend.c ****     }
 14381              		.loc 1 1149 41 is_stmt 0 view .LVU4979
 14382 4daa 31C9     		xor	ecx, ecx	# valid_primes
 14383 4dac E91FFAFF 		jmp	.L1035	#
 14383      FF
 14384              	.L1022:
1149:sieve_extend.c ****     }
 14385              		.loc 1 1149 41 view .LVU4980
 14386 4db1 4981F878 		cmp	r8, 9592	# primeCount,
 14386      250000
 14387              	# sieve_extend.c:1144:         case 100000:        valid_primes = 9592;     break;
1144:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14388              		.loc 1 1144 42 view .LVU4981
 14389 4db8 B9782500 		mov	ecx, 9592	# valid_primes,
 14389      00
 14390 4dbd 400F94C7 		sete	dil	#, tmp181
 14391 4dc1 21FA     		and	edx, edi	# _251, tmp181
 14392 4dc3 4981F878 		cmp	r8, 9592	# primeCount,
 14392      250000
 14393 4dca 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 14394 4dce 410F95C6 		setne	r14b	#, _135
1144:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14395              		.loc 1 1144 29 is_stmt 1 view .LVU4982
 14396              	.LVL876:
1144:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
GAS LISTING /tmp/cc7rm34x.s 			page 388


 14397              		.loc 1 1144 54 view .LVU4983
 14398              	# sieve_extend.c:1144:         case 100000:        valid_primes = 9592;     break;
1144:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14399              		.loc 1 1144 9 is_stmt 0 view .LVU4984
 14400 4dd2 E9F9F9FF 		jmp	.L1035	#
 14400      FF
 14401              	.LVL877:
 14402              	.L1056:
 14403              	# sieve_extend.c:1144:         case 100000:        valid_primes = 9592;     break;
1144:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14404              		.loc 1 1144 42 view .LVU4985
 14405 4dd7 B9782500 		mov	ecx, 9592	# valid_primes,
 14405      00
 14406 4ddc E90EFEFF 		jmp	.L1036	#
 14406      FF
 14407              		.cfi_endproc
 14408              	.LFE83:
 14410              		.section	.rodata.str1.8
 14411 0145 000000   		.align 8
 14412              	.LC14:
 14413 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 14413      653A2025 
 14413      73205B6F 
 14413      7074696F 
 14413      6E735D20 
 14414              		.section	.rodata.str1.1
 14415              	.LC15:
 14416 0031 4F707469 		.string	"Options:\n"
 14416      6F6E733A 
 14416      0A00
 14417              		.section	.rodata.str1.8
 14418 0167 00       		.align 8
 14419              	.LC16:
 14420 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 14420      76657262 
 14420      6F736520 
 14420      3C6C6576 
 14420      656C3E20 
 14421 01a3 00000000 		.align 8
 14421      00
 14422              	.LC17:
 14423 01a8 20202020 		.string	"                     1 - show phase progress\n"
 14423      20202020 
 14423      20202020 
 14423      20202020 
 14423      20202020 
 14424 01d6 0000     		.align 8
 14425              	.LC18:
 14426 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 14426      20202020 
 14426      20202020 
 14426      20202020 
 14426      20202020 
 14427 0219 00000000 		.align 8
 14427      000000
 14428              	.LC19:
 14429 0220 20202020 		.string	"                     3 - show actual work\n"
GAS LISTING /tmp/cc7rm34x.s 			page 389


 14429      20202020 
 14429      20202020 
 14429      20202020 
 14429      20202020 
 14430 024b 00000000 		.align 8
 14430      00
 14431              	.LC20:
 14432 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 14432      63686563 
 14432      6B202020 
 14432      20202020 
 14432      20202020 
 14433 028d 000000   		.align 8
 14434              	.LC21:
 14435 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 14435      73686F77 
 14435      203C6D61 
 14435      78696D75 
 14435      6D3E2020 
 14436 02ce 0000     		.align 8
 14437              	.LC22:
 14438 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 14438      74756E65 
 14438      20203C6C 
 14438      6576656C 
 14438      3E202020 
 14439 031d 000000   		.align 8
 14440              	.LC23:
 14441 0320 20202020 		.string	"                     1 - fast tuning\n"
 14441      20202020 
 14441      20202020 
 14441      20202020 
 14441      20202020 
 14442 0346 0000     		.align 8
 14443              	.LC24:
 14444 0348 20202020 		.string	"                     2 - refined tuning\n"
 14444      20202020 
 14444      20202020 
 14444      20202020 
 14444      20202020 
 14445 0371 00000000 		.align 8
 14445      000000
 14446              	.LC25:
 14447 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 14447      20202020 
 14447      20202020 
 14447      20202020 
 14447      20202020 
 14448              		.text
 14449 4de1 66662E0F 		.p2align 4
 14449      1F840000 
 14449      0000000F 
 14449      1F4000
 14450              		.globl	usage
 14452              	usage:
 14453              	.LVL878:
 14454              	.LFB84:
GAS LISTING /tmp/cc7rm34x.s 			page 390


1162:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14455              		.loc 1 1162 24 is_stmt 1 view -0
 14456              		.cfi_startproc
1162:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14457              		.loc 1 1162 24 is_stmt 0 view .LVU4987
 14458 4df0 F30F1EFA 		endbr64	
 14459 4df4 50       		push	rax	#
 14460              		.cfi_def_cfa_offset 16
 14461 4df5 58       		pop	rax	#
 14462              		.cfi_def_cfa_offset 8
1163:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 14463              		.loc 1 1163 5 is_stmt 1 view .LVU4988
 14464              	.LVL879:
 14465              	.LBB748:
 14466              	.LBI748:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14467              		.loc 3 98 1 view .LVU4989
 14468              	.LBB749:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14469              		.loc 3 100 3 view .LVU4990
 14470              	.LBE749:
 14471              	.LBE748:
 14472              	# sieve_extend.c:1162: void usage(char *name) {
1162:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14473              		.loc 1 1162 24 is_stmt 0 view .LVU4991
 14474 4df6 488D6424 		lea	rsp, -8[rsp]	#,
 14474      F8
 14475              		.cfi_def_cfa_offset 16
 14476              	# sieve_extend.c:1162: void usage(char *name) {
1162:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14477              		.loc 1 1162 24 view .LVU4992
 14478 4dfb 4889F9   		mov	rcx, rdi	# name, tmp107
 14479              	.LBB751:
 14480              	.LBB750:
 14481              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14482              		.loc 3 100 10 view .LVU4993
 14483 4dfe 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 14483      000000
 14484              	.LVL880:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14485              		.loc 3 100 10 view .LVU4994
 14486 4e05 488D1500 		lea	rdx, .LC14[rip]	#,
 14486      000000
 14487 4e0c BE010000 		mov	esi, 1	#,
 14487      00
 14488 4e11 31C0     		xor	eax, eax	#
 14489 4e13 E8000000 		call	__fprintf_chk@PLT	#
 14489      00
 14490              	.LVL881:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14491              		.loc 3 100 10 view .LVU4995
 14492              	.LBE750:
 14493              	.LBE751:
1164:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 14494              		.loc 1 1164 5 is_stmt 1 view .LVU4996
 14495              	.LBB752:
GAS LISTING /tmp/cc7rm34x.s 			page 391


 14496              	.LBI752:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14497              		.loc 3 98 1 view .LVU4997
 14498              	.LBB753:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14499              		.loc 3 100 3 view .LVU4998
 14500              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14501              		.loc 3 100 10 is_stmt 0 view .LVU4999
 14502 4e18 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14502      000000
 14503 4e1f BA090000 		mov	edx, 9	#,
 14503      00
 14504 4e24 BE010000 		mov	esi, 1	#,
 14504      00
 14505 4e29 488D3D00 		lea	rdi, .LC15[rip]	#,
 14505      000000
 14506 4e30 E8000000 		call	fwrite@PLT	#
 14506      00
 14507              	.LVL882:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14508              		.loc 3 100 10 view .LVU5000
 14509              	.LBE753:
 14510              	.LBE752:
1165:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 14511              		.loc 1 1165 5 is_stmt 1 view .LVU5001
 14512              	.LBB754:
 14513              	.LBI754:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14514              		.loc 3 98 1 view .LVU5002
 14515              	.LBB755:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14516              		.loc 3 100 3 view .LVU5003
 14517              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14518              		.loc 3 100 10 is_stmt 0 view .LVU5004
 14519 4e35 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14519      000000
 14520 4e3c BA3A0000 		mov	edx, 58	#,
 14520      00
 14521 4e41 BE010000 		mov	esi, 1	#,
 14521      00
 14522 4e46 488D3D00 		lea	rdi, .LC16[rip]	#,
 14522      000000
 14523 4e4d E8000000 		call	fwrite@PLT	#
 14523      00
 14524              	.LVL883:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14525              		.loc 3 100 10 view .LVU5005
 14526              	.LBE755:
 14527              	.LBE754:
1166:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 14528              		.loc 1 1166 5 is_stmt 1 view .LVU5006
 14529              	.LBB756:
 14530              	.LBI756:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14531              		.loc 3 98 1 view .LVU5007
GAS LISTING /tmp/cc7rm34x.s 			page 392


 14532              	.LBB757:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14533              		.loc 3 100 3 view .LVU5008
 14534              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14535              		.loc 3 100 10 is_stmt 0 view .LVU5009
 14536 4e52 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14536      000000
 14537 4e59 BA2D0000 		mov	edx, 45	#,
 14537      00
 14538 4e5e BE010000 		mov	esi, 1	#,
 14538      00
 14539 4e63 488D3D00 		lea	rdi, .LC17[rip]	#,
 14539      000000
 14540 4e6a E8000000 		call	fwrite@PLT	#
 14540      00
 14541              	.LVL884:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14542              		.loc 3 100 10 view .LVU5010
 14543              	.LBE757:
 14544              	.LBE756:
1167:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 14545              		.loc 1 1167 5 is_stmt 1 view .LVU5011
 14546              	.LBB758:
 14547              	.LBI758:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14548              		.loc 3 98 1 view .LVU5012
 14549              	.LBB759:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14550              		.loc 3 100 3 view .LVU5013
 14551              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14552              		.loc 3 100 10 is_stmt 0 view .LVU5014
 14553 4e6f 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14553      000000
 14554 4e76 BA400000 		mov	edx, 64	#,
 14554      00
 14555 4e7b BE010000 		mov	esi, 1	#,
 14555      00
 14556 4e80 488D3D00 		lea	rdi, .LC18[rip]	#,
 14556      000000
 14557 4e87 E8000000 		call	fwrite@PLT	#
 14557      00
 14558              	.LVL885:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14559              		.loc 3 100 10 view .LVU5015
 14560              	.LBE759:
 14561              	.LBE758:
1168:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 14562              		.loc 1 1168 5 is_stmt 1 view .LVU5016
 14563              	.LBB760:
 14564              	.LBI760:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14565              		.loc 3 98 1 view .LVU5017
 14566              	.LBB761:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14567              		.loc 3 100 3 view .LVU5018
GAS LISTING /tmp/cc7rm34x.s 			page 393


 14568              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14569              		.loc 3 100 10 is_stmt 0 view .LVU5019
 14570 4e8c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14570      000000
 14571 4e93 BA2A0000 		mov	edx, 42	#,
 14571      00
 14572 4e98 BE010000 		mov	esi, 1	#,
 14572      00
 14573 4e9d 488D3D00 		lea	rdi, .LC19[rip]	#,
 14573      000000
 14574 4ea4 E8000000 		call	fwrite@PLT	#
 14574      00
 14575              	.LVL886:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14576              		.loc 3 100 10 view .LVU5020
 14577              	.LBE761:
 14578              	.LBE760:
1169:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 14579              		.loc 1 1169 5 is_stmt 1 view .LVU5021
 14580              	.LBB762:
 14581              	.LBI762:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14582              		.loc 3 98 1 view .LVU5022
 14583              	.LBB763:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14584              		.loc 3 100 3 view .LVU5023
 14585              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14586              		.loc 3 100 10 is_stmt 0 view .LVU5024
 14587 4ea9 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14587      000000
 14588 4eb0 BA3C0000 		mov	edx, 60	#,
 14588      00
 14589 4eb5 BE010000 		mov	esi, 1	#,
 14589      00
 14590 4eba 488D3D00 		lea	rdi, .LC20[rip]	#,
 14590      000000
 14591 4ec1 E8000000 		call	fwrite@PLT	#
 14591      00
 14592              	.LVL887:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14593              		.loc 3 100 10 view .LVU5025
 14594              	.LBE763:
 14595              	.LBE762:
1170:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 14596              		.loc 1 1170 5 is_stmt 1 view .LVU5026
 14597              	.LBB764:
 14598              	.LBI764:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14599              		.loc 3 98 1 view .LVU5027
 14600              	.LBB765:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14601              		.loc 3 100 3 view .LVU5028
 14602              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14603              		.loc 3 100 10 is_stmt 0 view .LVU5029
GAS LISTING /tmp/cc7rm34x.s 			page 394


 14604 4ec6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14604      000000
 14605 4ecd BA3D0000 		mov	edx, 61	#,
 14605      00
 14606 4ed2 BE010000 		mov	esi, 1	#,
 14606      00
 14607 4ed7 488D3D00 		lea	rdi, .LC21[rip]	#,
 14607      000000
 14608 4ede E8000000 		call	fwrite@PLT	#
 14608      00
 14609              	.LVL888:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14610              		.loc 3 100 10 view .LVU5030
 14611              	.LBE765:
 14612              	.LBE764:
1171:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 14613              		.loc 1 1171 5 is_stmt 1 view .LVU5031
 14614              	.LBB766:
 14615              	.LBI766:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14616              		.loc 3 98 1 view .LVU5032
 14617              	.LBB767:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14618              		.loc 3 100 3 view .LVU5033
 14619              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14620              		.loc 3 100 10 is_stmt 0 view .LVU5034
 14621 4ee3 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14621      000000
 14622 4eea BA4C0000 		mov	edx, 76	#,
 14622      00
 14623 4eef BE010000 		mov	esi, 1	#,
 14623      00
 14624 4ef4 488D3D00 		lea	rdi, .LC22[rip]	#,
 14624      000000
 14625 4efb E8000000 		call	fwrite@PLT	#
 14625      00
 14626              	.LVL889:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14627              		.loc 3 100 10 view .LVU5035
 14628              	.LBE767:
 14629              	.LBE766:
1172:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 14630              		.loc 1 1172 5 is_stmt 1 view .LVU5036
 14631              	.LBB768:
 14632              	.LBI768:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14633              		.loc 3 98 1 view .LVU5037
 14634              	.LBB769:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14635              		.loc 3 100 3 view .LVU5038
 14636              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14637              		.loc 3 100 10 is_stmt 0 view .LVU5039
 14638 4f00 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14638      000000
 14639 4f07 BA250000 		mov	edx, 37	#,
GAS LISTING /tmp/cc7rm34x.s 			page 395


 14639      00
 14640 4f0c BE010000 		mov	esi, 1	#,
 14640      00
 14641 4f11 488D3D00 		lea	rdi, .LC23[rip]	#,
 14641      000000
 14642 4f18 E8000000 		call	fwrite@PLT	#
 14642      00
 14643              	.LVL890:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14644              		.loc 3 100 10 view .LVU5040
 14645              	.LBE769:
 14646              	.LBE768:
1173:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 14647              		.loc 1 1173 5 is_stmt 1 view .LVU5041
 14648              	.LBB770:
 14649              	.LBI770:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14650              		.loc 3 98 1 view .LVU5042
 14651              	.LBB771:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14652              		.loc 3 100 3 view .LVU5043
 14653              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14654              		.loc 3 100 10 is_stmt 0 view .LVU5044
 14655 4f1d 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14655      000000
 14656 4f24 BA280000 		mov	edx, 40	#,
 14656      00
 14657 4f29 BE010000 		mov	esi, 1	#,
 14657      00
 14658 4f2e 488D3D00 		lea	rdi, .LC24[rip]	#,
 14658      000000
 14659 4f35 E8000000 		call	fwrite@PLT	#
 14659      00
 14660              	.LVL891:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14661              		.loc 3 100 10 view .LVU5045
 14662              	.LBE771:
 14663              	.LBE770:
1174:sieve_extend.c ****     exit(1);
 14664              		.loc 1 1174 5 is_stmt 1 view .LVU5046
 14665              	.LBB772:
 14666              	.LBI772:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14667              		.loc 3 98 1 view .LVU5047
 14668              	.LBB773:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14669              		.loc 3 100 3 view .LVU5048
 14670              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14671              		.loc 3 100 10 is_stmt 0 view .LVU5049
 14672 4f3a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14672      000000
 14673 4f41 488D3D00 		lea	rdi, .LC25[rip]	#,
 14673      000000
 14674 4f48 BA350000 		mov	edx, 53	#,
 14674      00
GAS LISTING /tmp/cc7rm34x.s 			page 396


 14675 4f4d BE010000 		mov	esi, 1	#,
 14675      00
 14676 4f52 E8000000 		call	fwrite@PLT	#
 14676      00
 14677              	.LVL892:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14678              		.loc 3 100 10 view .LVU5050
 14679              	.LBE773:
 14680              	.LBE772:
1175:sieve_extend.c **** }
 14681              		.loc 1 1175 5 is_stmt 1 view .LVU5051
 14682 4f57 BF010000 		mov	edi, 1	#,
 14682      00
 14683 4f5c E8000000 		call	exit@PLT	#
 14683      00
 14684              	.LVL893:
 14685              		.cfi_endproc
 14686              	.LFE84:
 14688              		.section	.rodata.str1.1
 14689              	.LC26:
 14690 003b 256400   		.string	"%d"
 14691              	.LC27:
 14692 003e 2C253033 		.string	",%03d"
 14692      6400
 14693              		.text
 14694 4f61 66662E0F 		.p2align 4
 14694      1F840000 
 14694      0000000F 
 14694      1F4000
 14695              		.globl	printfcomma2
 14697              	printfcomma2:
 14698              	.LVL894:
 14699              	.LFB89:
1221:sieve_extend.c **** 
1222:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
1223:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
1224:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
1225:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
1226:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
1227:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
1228:sieve_extend.c **** }
1229:sieve_extend.c **** 
1230:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1231:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1232:sieve_extend.c **** 
1233:sieve_extend.c ****     double best_avg = 0;
1234:sieve_extend.c ****     best_blocksize_bits = 0;
1235:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1236:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1237:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
1238:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1239:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1240:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
1241:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1242:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1243:sieve_extend.c ****     double sample_duration = default_sample_duration;
1244:sieve_extend.c **** 
GAS LISTING /tmp/cc7rm34x.s 			page 397


1245:sieve_extend.c ****     // determines the size of the resultset
1246:sieve_extend.c ****     switch (tune_level) {
1247:sieve_extend.c ****         case 1:
1248:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1249:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
1250:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/2;
1251:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1252:sieve_extend.c ****             sample_max = 8;
1253:sieve_extend.c ****             sample_duration = 0.1;
1254:sieve_extend.c ****             break;
1255:sieve_extend.c ****         case 2:
1256:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1257:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1258:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
1259:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1260:sieve_extend.c ****             sample_max = 8;
1261:sieve_extend.c ****             sample_duration = 0.2;
1262:sieve_extend.c ****             break;
1263:sieve_extend.c ****         case 3:
1264:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1265:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1266:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
1267:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1268:sieve_extend.c ****             sample_max = 8;
1269:sieve_extend.c ****             sample_duration = 0.2;
1270:sieve_extend.c ****             break;
1271:sieve_extend.c ****     }
1272:sieve_extend.c ****     
1273:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); 
1274:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
1275:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1276:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1277:sieve_extend.c ****     counter_t tuning_results=0;
1278:sieve_extend.c ****     counter_t tuning_result_index=0;
1279:sieve_extend.c ****     
1280:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1281:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1282:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
1283:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1284:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
1285:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1286:sieve_extend.c **** 
1287:sieve_extend.c ****                         // set variables
1288:sieve_extend.c ****                         tuning_results++;
1289:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
1290:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
1291:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
1292:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1293:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
1294:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1295:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1296:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1297:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
1298:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
1299:sieve_extend.c **** 
1300:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
1301:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
GAS LISTING /tmp/cc7rm34x.s 			page 398


1302:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
1303:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
1304:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
1305:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
1306:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
1307:sieve_extend.c ****                         }
1308:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
1309:sieve_extend.c ****                         tuning_result_index++;
1310:sieve_extend.c ****                     }
1311:sieve_extend.c ****                 }
1312:sieve_extend.c ****             }
1313:sieve_extend.c ****         }
1314:sieve_extend.c ****     }
1315:sieve_extend.c ****     if (option_verboselevel >= 2) {
1316:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
1317:sieve_extend.c ****         printf("Best options\n");
1318:sieve_extend.c ****     }
1319:sieve_extend.c ****     counter_t step=0;
1320:sieve_extend.c ****     while (tuning_results>4) {
1321:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1322:sieve_extend.c ****         step++;
1323:sieve_extend.c ****         if (option_verboselevel >= 2) {
1324:sieve_extend.c ****             tuning_result_index = 0;
1325:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
1326:sieve_extend.c ****             if (option_verboselevel >= 3) {
1327:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1328:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
1329:sieve_extend.c ****                 }
1330:sieve_extend.c ****             }
1331:sieve_extend.c ****         }
1332:sieve_extend.c **** 
1333:sieve_extend.c ****         tuning_results = tuning_results / 2;
1334:sieve_extend.c **** 
1335:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1336:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1337:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1338:sieve_extend.c ****         }
1339:sieve_extend.c ****         
1340:sieve_extend.c ****     }
1341:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1342:sieve_extend.c ****     if (option_verboselevel >= 1) {
1343:sieve_extend.c ****         tuning_result_index = 0;
1344:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
1345:sieve_extend.c ****     }
1346:sieve_extend.c **** 
1347:sieve_extend.c ****     free(tuning_result);
1348:sieve_extend.c ****     return best_result;
1349:sieve_extend.c **** }
1350:sieve_extend.c **** 
1351:sieve_extend.c **** void printfcomma2 (int n) {
 14700              		.loc 1 1351 27 view -0
 14701              		.cfi_startproc
 14702              		.loc 1 1351 27 is_stmt 0 view .LVU5053
 14703 4f70 F30F1EFA 		endbr64	
1352:sieve_extend.c ****     if (n < 1000) {
 14704              		.loc 1 1352 5 is_stmt 1 view .LVU5054
 14705              	# sieve_extend.c:1351: void printfcomma2 (int n) {
GAS LISTING /tmp/cc7rm34x.s 			page 399


1351:sieve_extend.c ****     if (n < 1000) {
 14706              		.loc 1 1351 27 is_stmt 0 view .LVU5055
 14707 4f74 4154     		push	r12	#
 14708              		.cfi_def_cfa_offset 16
 14709              		.cfi_offset 12, -16
 14710              	.LBB784:
 14711              	.LBB785:
 14712              	.LBB786:
 14713              	.LBB787:
 14714              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14715              		.loc 3 107 10 view .LVU5056
 14716 4f76 89FA     		mov	edx, edi	#, n
 14717              	.LBE787:
 14718              	.LBE786:
 14719              	.LBE785:
 14720              	.LBE784:
 14721              	# sieve_extend.c:1351: void printfcomma2 (int n) {
1351:sieve_extend.c ****     if (n < 1000) {
 14722              		.loc 1 1351 27 view .LVU5057
 14723 4f78 4189FC   		mov	r12d, edi	# n, tmp99
 14724 4f7b 53       		push	rbx	#
 14725              		.cfi_def_cfa_offset 24
 14726              		.cfi_offset 3, -24
 14727              	.LBB791:
 14728              	.LBB790:
 14729              	.LBB789:
 14730              	.LBB788:
 14731              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14732              		.loc 3 107 10 view .LVU5058
 14733 4f7c 488D3500 		lea	rsi, .LC26[rip]	#,
 14733      000000
 14734              	.LBE788:
 14735              	.LBE789:
 14736              	.LBE790:
 14737              	.LBE791:
 14738              	# sieve_extend.c:1351: void printfcomma2 (int n) {
1351:sieve_extend.c ****     if (n < 1000) {
 14739              		.loc 1 1351 27 view .LVU5059
 14740 4f83 488D6424 		lea	rsp, -8[rsp]	#,
 14740      F8
 14741              		.cfi_def_cfa_offset 32
 14742              	# sieve_extend.c:1352:     if (n < 1000) {
 14743              		.loc 1 1352 8 view .LVU5060
 14744 4f88 81FFE703 		cmp	edi, 999	# n,
 14744      0000
 14745 4f8e 7E2E     		jle	.L1173	#,
1353:sieve_extend.c ****         printf ("%d", n);
1354:sieve_extend.c ****         return;
1355:sieve_extend.c ****     }
1356:sieve_extend.c ****     printfcomma2 (n/1000);
 14746              		.loc 1 1356 5 is_stmt 1 view .LVU5061
 14747 4f90 4863DF   		movsx	rbx, edi	# n, n
 14748 4f93 89F8     		mov	eax, edi	# tmp90, n
 14749 4f95 4869DBD3 		imul	rbx, rbx, 274877907	# tmp87, n,
 14749      4D6210
 14750 4f9c C1F81F   		sar	eax, 31	# tmp90,
 14751 4f9f 48C1FB26 		sar	rbx, 38	# tmp89,
GAS LISTING /tmp/cc7rm34x.s 			page 400


 14752 4fa3 29C3     		sub	ebx, eax	# tmp85, tmp90
 14753 4fa5 89DF     		mov	edi, ebx	#, tmp85
 14754              	.LVL895:
 14755              		.loc 1 1356 5 is_stmt 0 view .LVU5062
 14756 4fa7 E8000000 		call	printfcomma2	#
 14756      00
 14757              	.LVL896:
1357:sieve_extend.c ****     printf (",%03d", n%1000);
 14758              		.loc 1 1357 5 is_stmt 1 view .LVU5063
 14759              	.LBB792:
 14760              	.LBI792:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14761              		.loc 3 105 1 view .LVU5064
 14762              	.LBB793:
 14763              		.loc 3 107 3 view .LVU5065
 14764              	.LBE793:
 14765              	.LBE792:
 14766              	# sieve_extend.c:1357:     printf (",%03d", n%1000);
 14767              		.loc 1 1357 5 is_stmt 0 view .LVU5066
 14768 4fac 69CBE803 		imul	ecx, ebx, 1000	# tmp97, tmp85,
 14768      0000
 14769 4fb2 4489E2   		mov	edx, r12d	# n, n
 14770              	.LBB798:
 14771              	.LBB794:
 14772              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14773              		.loc 3 107 10 view .LVU5067
 14774 4fb5 488D3500 		lea	rsi, .LC27[rip]	#,
 14774      000000
 14775              	.LBE794:
 14776              	.LBE798:
 14777              	# sieve_extend.c:1357:     printf (",%03d", n%1000);
 14778              		.loc 1 1357 5 view .LVU5068
 14779 4fbc 29CA     		sub	edx, ecx	# n, tmp97
 14780              	.LVL897:
 14781              	.L1173:
 14782              	# sieve_extend.c:1358: }
1358:sieve_extend.c **** }
 14783              		.loc 1 1358 1 view .LVU5069
 14784 4fbe 488D6424 		lea	rsp, 8[rsp]	#,
 14784      08
 14785              		.cfi_def_cfa_offset 24
 14786              	.LBB799:
 14787              	.LBB795:
 14788              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14789              		.loc 3 107 10 view .LVU5070
 14790 4fc3 BF010000 		mov	edi, 1	#,
 14790      00
 14791              	.LBE795:
 14792              	.LBE799:
 14793              	# sieve_extend.c:1358: }
 14794              		.loc 1 1358 1 view .LVU5071
 14795 4fc8 5B       		pop	rbx	#
 14796              		.cfi_def_cfa_offset 16
 14797              	.LBB800:
 14798              	.LBB796:
 14799              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14800              		.loc 3 107 10 view .LVU5072
GAS LISTING /tmp/cc7rm34x.s 			page 401


 14801 4fc9 31C0     		xor	eax, eax	#
 14802              	.LBE796:
 14803              	.LBE800:
 14804              	# sieve_extend.c:1358: }
 14805              		.loc 1 1358 1 view .LVU5073
 14806 4fcb 415C     		pop	r12	#
 14807              		.cfi_def_cfa_offset 8
 14808              	.LVL898:
 14809              	.LBB801:
 14810              	.LBB797:
 14811              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14812              		.loc 3 107 10 view .LVU5074
 14813 4fcd E9000000 		jmp	__printf_chk@PLT	#
 14813      00
 14814              	.LVL899:
 14815              	.LBE797:
 14816              	.LBE801:
 14817              		.cfi_endproc
 14818              	.LFE89:
 14820 4fd2 66662E0F 		.p2align 4
 14820      1F840000 
 14820      0000000F 
 14820      1F00
 14821              		.globl	printfcomma
 14823              	printfcomma:
 14824              	.LVL900:
 14825              	.LFB90:
1359:sieve_extend.c **** 
1360:sieve_extend.c **** void printfcomma (int n) {
 14826              		.loc 1 1360 26 is_stmt 1 view -0
 14827              		.cfi_startproc
 14828              		.loc 1 1360 26 is_stmt 0 view .LVU5076
 14829 4fe0 F30F1EFA 		endbr64	
1361:sieve_extend.c ****     if (n < 0) {
 14830              		.loc 1 1361 5 is_stmt 1 view .LVU5077
 14831              	# sieve_extend.c:1360: void printfcomma (int n) {
1360:sieve_extend.c ****     if (n < 0) {
 14832              		.loc 1 1360 26 is_stmt 0 view .LVU5078
 14833 4fe4 4157     		push	r15	#
 14834              		.cfi_def_cfa_offset 16
 14835              		.cfi_offset 15, -16
 14836 4fe6 4156     		push	r14	#
 14837              		.cfi_def_cfa_offset 24
 14838              		.cfi_offset 14, -24
 14839 4fe8 4155     		push	r13	#
 14840              		.cfi_def_cfa_offset 32
 14841              		.cfi_offset 13, -32
 14842 4fea 4154     		push	r12	#
 14843              		.cfi_def_cfa_offset 40
 14844              		.cfi_offset 12, -40
 14845 4fec 4189FC   		mov	r12d, edi	# n, tmp159
 14846 4fef 55       		push	rbp	#
 14847              		.cfi_def_cfa_offset 48
 14848              		.cfi_offset 6, -48
 14849 4ff0 53       		push	rbx	#
 14850              		.cfi_def_cfa_offset 56
 14851              		.cfi_offset 3, -56
GAS LISTING /tmp/cc7rm34x.s 			page 402


 14852 4ff1 488D6424 		lea	rsp, -8[rsp]	#,
 14852      F8
 14853              		.cfi_def_cfa_offset 64
 14854              	# sieve_extend.c:1361:     if (n < 0) {
 14855              		.loc 1 1361 8 view .LVU5079
 14856 4ff6 85FF     		test	edi, edi	# n
 14857 4ff8 0F880A01 		js	.L1183	#,
 14857      0000
 14858              	.LVL901:
 14859              	.L1175:
1362:sieve_extend.c ****         printf ("-");
1363:sieve_extend.c ****         n = -n;
1364:sieve_extend.c ****     }
1365:sieve_extend.c ****     printfcomma2 (n);
 14860              		.loc 1 1365 5 is_stmt 1 view .LVU5080
 14861              	.LBB854:
 14862              	.LBI854:
1351:sieve_extend.c ****     if (n < 1000) {
 14863              		.loc 1 1351 6 view .LVU5081
 14864              	.LBB855:
1352:sieve_extend.c ****         printf ("%d", n);
 14865              		.loc 1 1352 5 view .LVU5082
 14866              	# sieve_extend.c:1352:     if (n < 1000) {
1352:sieve_extend.c ****         printf ("%d", n);
 14867              		.loc 1 1352 8 is_stmt 0 view .LVU5083
 14868 4ffe 4181FCE7 		cmp	r12d, 999	# n,
 14868      030000
 14869              	.LBB856:
 14870              	.LBB857:
 14871              	.LBB858:
 14872              	.LBB859:
 14873              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14874              		.loc 3 107 10 view .LVU5084
 14875 5005 4489E2   		mov	edx, r12d	#, n
 14876 5008 488D3500 		lea	rsi, .LC26[rip]	#,
 14876      000000
 14877              	.LBE859:
 14878              	.LBE858:
 14879              	.LBE857:
 14880              	.LBE856:
 14881              	# sieve_extend.c:1352:     if (n < 1000) {
1352:sieve_extend.c ****         printf ("%d", n);
 14882              		.loc 1 1352 8 view .LVU5085
 14883 500f 0F8EBF00 		jle	.L1182	#,
 14883      0000
 14884              	.LVL902:
1356:sieve_extend.c ****     printf (",%03d", n%1000);
 14885              		.loc 1 1356 5 is_stmt 1 view .LVU5086
 14886 5015 4489E3   		mov	ebx, r12d	# n, n
 14887 5018 4C69EBD3 		imul	r13, rbx, 274877907	# tmp90, n,
 14887      4D6210
 14888 501f 49C1ED26 		shr	r13, 38	# _8,
 14889              	.LVL903:
 14890              	.LBB860:
 14891              	.LBI860:
1351:sieve_extend.c ****     if (n < 1000) {
 14892              		.loc 1 1351 6 view .LVU5087
GAS LISTING /tmp/cc7rm34x.s 			page 403


 14893              	.LBB861:
1352:sieve_extend.c ****         printf ("%d", n);
 14894              		.loc 1 1352 5 view .LVU5088
 14895              	# sieve_extend.c:1352:     if (n < 1000) {
1352:sieve_extend.c ****         printf ("%d", n);
 14896              		.loc 1 1352 8 is_stmt 0 view .LVU5089
 14897 5023 4181FC3F 		cmp	r12d, 999999	# n,
 14897      420F00
 14898 502a 0F8EC000 		jle	.L1184	#,
 14898      0000
1356:sieve_extend.c ****     printf (",%03d", n%1000);
 14899              		.loc 1 1356 5 is_stmt 1 view .LVU5090
 14900 5030 4489ED   		mov	ebp, r13d	# _8, _8
 14901 5033 4C69F5D3 		imul	r14, rbp, 274877907	# tmp98, _8,
 14901      4D6210
 14902 503a 49C1EE26 		shr	r14, 38	# _10,
 14903              	.LVL904:
 14904              	.LBB862:
 14905              	.LBI862:
1351:sieve_extend.c ****     if (n < 1000) {
 14906              		.loc 1 1351 6 view .LVU5091
 14907              	.LBB863:
1352:sieve_extend.c ****         printf ("%d", n);
 14908              		.loc 1 1352 5 view .LVU5092
 14909              	# sieve_extend.c:1352:     if (n < 1000) {
1352:sieve_extend.c ****         printf ("%d", n);
 14910              		.loc 1 1352 8 is_stmt 0 view .LVU5093
 14911 503e 4181FCFF 		cmp	r12d, 999999999	# n,
 14911      C99A3B
 14912 5045 0F8ED500 		jle	.L1185	#,
 14912      0000
1356:sieve_extend.c ****     printf (",%03d", n%1000);
 14913              		.loc 1 1356 5 is_stmt 1 view .LVU5094
 14914              	.LVL905:
 14915              	.LBB864:
 14916              	.LBI864:
1351:sieve_extend.c ****     if (n < 1000) {
 14917              		.loc 1 1351 6 view .LVU5095
 14918              	.LBE864:
 14919              	.LBE863:
 14920              	.LBE862:
 14921              	.LBE861:
 14922              	.LBE860:
 14923              	.LBE855:
 14924              	.LBE854:
1352:sieve_extend.c ****         printf ("%d", n);
 14925              		.loc 1 1352 5 view .LVU5096
 14926              	.LBB930:
 14927              	.LBB925:
 14928              	.LBB912:
 14929              	.LBB909:
 14930              	.LBB897:
 14931              	.LBB895:
 14932              	.LBB881:
 14933              	.LBB865:
 14934              	.LBI865:
1351:sieve_extend.c ****     if (n < 1000) {
GAS LISTING /tmp/cc7rm34x.s 			page 404


 14935              		.loc 1 1351 6 view .LVU5097
 14936              	.LBB866:
1353:sieve_extend.c ****         return;
 14937              		.loc 1 1353 9 view .LVU5098
 14938              	.LBB867:
 14939              	.LBI867:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14940              		.loc 3 105 1 view .LVU5099
 14941              	.LBB868:
 14942              		.loc 3 107 3 view .LVU5100
 14943              	.LBE868:
 14944              	.LBE867:
 14945              	.LBE866:
 14946              	.LBE865:
 14947              	.LBE881:
 14948              	# sieve_extend.c:1356:     printfcomma2 (n/1000);
1356:sieve_extend.c ****     printf (",%03d", n%1000);
 14949              		.loc 1 1356 5 is_stmt 0 view .LVU5101
 14950 504b 4589F7   		mov	r15d, r14d	# _10, _10
 14951              	.LBB882:
 14952              	.LBB878:
 14953              	.LBB875:
 14954              	.LBB872:
 14955              	.LBB869:
 14956              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14957              		.loc 3 107 10 view .LVU5102
 14958 504e 488D3500 		lea	rsi, .LC26[rip]	#,
 14958      000000
 14959              	.LBE869:
 14960              	.LBE872:
 14961              	.LBE875:
 14962              	.LBE878:
 14963              	.LBE882:
 14964              	# sieve_extend.c:1356:     printfcomma2 (n/1000);
1356:sieve_extend.c ****     printf (",%03d", n%1000);
 14965              		.loc 1 1356 5 view .LVU5103
 14966 5055 4D69FFD3 		imul	r15, r15, 274877907	# tmp107, _10,
 14966      4D6210
 14967              	.LBB883:
 14968              	.LBB879:
 14969              	.LBB876:
 14970              	.LBB873:
 14971              	.LBB870:
 14972              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14973              		.loc 3 107 10 view .LVU5104
 14974 505c BF010000 		mov	edi, 1	#,
 14974      00
 14975 5061 31C0     		xor	eax, eax	#
 14976              	.LBE870:
 14977              	.LBE873:
 14978              	.LBE876:
 14979              	.LBE879:
 14980              	.LBE883:
 14981              	# sieve_extend.c:1356:     printfcomma2 (n/1000);
1356:sieve_extend.c ****     printf (",%03d", n%1000);
 14982              		.loc 1 1356 5 view .LVU5105
 14983 5063 49C1EF26 		shr	r15, 38	# tmp105,
GAS LISTING /tmp/cc7rm34x.s 			page 405


 14984              	.LBB884:
 14985              	.LBB880:
 14986              	.LBB877:
 14987              	.LBB874:
 14988              	.LBB871:
 14989              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14990              		.loc 3 107 10 view .LVU5106
 14991 5067 4489FA   		mov	edx, r15d	#, tmp105
 14992              	.LVL906:
 14993              		.loc 3 107 10 view .LVU5107
 14994 506a E8000000 		call	__printf_chk@PLT	#
 14994      00
 14995              	.LVL907:
 14996              		.loc 3 107 10 view .LVU5108
 14997              	.LBE871:
 14998              	.LBE874:
1354:sieve_extend.c ****     }
 14999              		.loc 1 1354 9 is_stmt 1 view .LVU5109
1354:sieve_extend.c ****     }
 15000              		.loc 1 1354 9 is_stmt 0 view .LVU5110
 15001              	.LBE877:
 15002              	.LBE880:
 15003              	.LBE884:
1357:sieve_extend.c **** }
 15004              		.loc 1 1357 5 is_stmt 1 view .LVU5111
 15005              	.LBB885:
 15006              	.LBI885:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15007              		.loc 3 105 1 view .LVU5112
 15008              	.LBB886:
 15009              		.loc 3 107 3 view .LVU5113
 15010              	.LBE886:
 15011              	.LBE885:
 15012              	# sieve_extend.c:1357:     printf (",%03d", n%1000);
1357:sieve_extend.c **** }
 15013              		.loc 1 1357 5 is_stmt 0 view .LVU5114
 15014 506f 4169C7E8 		imul	eax, r15d, 1000	# tmp119, tmp105,
 15014      030000
 15015 5076 4489F2   		mov	edx, r14d	# _10, _10
 15016              	.LBB889:
 15017              	.LBB887:
 15018              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15019              		.loc 3 107 10 view .LVU5115
 15020 5079 488D3500 		lea	rsi, .LC27[rip]	#,
 15020      000000
 15021 5080 BF010000 		mov	edi, 1	#,
 15021      00
 15022              	.LBE887:
 15023              	.LBE889:
 15024              	# sieve_extend.c:1357:     printf (",%03d", n%1000);
1357:sieve_extend.c **** }
 15025              		.loc 1 1357 5 view .LVU5116
 15026 5085 29C2     		sub	edx, eax	# _10, tmp119
 15027              	.LBB890:
 15028              	.LBB888:
 15029              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15030              		.loc 3 107 10 view .LVU5117
GAS LISTING /tmp/cc7rm34x.s 			page 406


 15031 5087 31C0     		xor	eax, eax	#
 15032 5089 E8000000 		call	__printf_chk@PLT	#
 15032      00
 15033              	.LVL908:
 15034              	.L1180:
 15035              		.loc 3 107 10 view .LVU5118
 15036              	.LBE888:
 15037              	.LBE890:
 15038              	.LBE895:
 15039              	.LBE897:
1357:sieve_extend.c **** }
 15040              		.loc 1 1357 5 is_stmt 1 view .LVU5119
 15041              	.LBB898:
 15042              	.LBI898:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15043              		.loc 3 105 1 view .LVU5120
 15044              	.LBB899:
 15045              		.loc 3 107 3 view .LVU5121
 15046              	.LBE899:
 15047              	.LBE898:
 15048              	# sieve_extend.c:1357:     printf (",%03d", n%1000);
1357:sieve_extend.c **** }
 15049              		.loc 1 1357 5 is_stmt 0 view .LVU5122
 15050 508e 4869D5D3 		imul	rdx, rbp, 274877907	# tmp131, _8,
 15050      4D6210
 15051              	.LBB902:
 15052              	.LBB900:
 15053              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15054              		.loc 3 107 10 view .LVU5123
 15055 5095 488D3500 		lea	rsi, .LC27[rip]	#,
 15055      000000
 15056 509c BF010000 		mov	edi, 1	#,
 15056      00
 15057 50a1 31C0     		xor	eax, eax	#
 15058              	.LBE900:
 15059              	.LBE902:
 15060              	# sieve_extend.c:1357:     printf (",%03d", n%1000);
1357:sieve_extend.c **** }
 15061              		.loc 1 1357 5 view .LVU5124
 15062 50a3 48C1EA26 		shr	rdx, 38	# tmp129,
 15063 50a7 69CAE803 		imul	ecx, edx, 1000	# tmp133, tmp129,
 15063      0000
 15064 50ad 4489EA   		mov	edx, r13d	# _8, _8
 15065 50b0 29CA     		sub	edx, ecx	# _8, tmp133
 15066              	.LBB903:
 15067              	.LBB901:
 15068              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15069              		.loc 3 107 10 view .LVU5125
 15070 50b2 E8000000 		call	__printf_chk@PLT	#
 15070      00
 15071              	.LVL909:
 15072              	.L1178:
 15073              		.loc 3 107 10 view .LVU5126
 15074              	.LBE901:
 15075              	.LBE903:
 15076              	.LBE909:
 15077              	.LBE912:
GAS LISTING /tmp/cc7rm34x.s 			page 407


1357:sieve_extend.c **** }
 15078              		.loc 1 1357 5 is_stmt 1 view .LVU5127
 15079              	.LBB913:
 15080              	.LBI913:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15081              		.loc 3 105 1 view .LVU5128
 15082              	.LBB914:
 15083              		.loc 3 107 3 view .LVU5129
 15084              	.LBE914:
 15085              	.LBE913:
 15086              	# sieve_extend.c:1357:     printf (",%03d", n%1000);
1357:sieve_extend.c **** }
 15087              		.loc 1 1357 5 is_stmt 0 view .LVU5130
 15088 50b7 4869F3D3 		imul	rsi, rbx, 274877907	# tmp145, n,
 15088      4D6210
 15089 50be 4489E2   		mov	edx, r12d	# n, n
 15090 50c1 48C1EE26 		shr	rsi, 38	# tmp143,
 15091 50c5 69FEE803 		imul	edi, esi, 1000	# tmp147, tmp143,
 15091      0000
 15092              	.LBB919:
 15093              	.LBB915:
 15094              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15095              		.loc 3 107 10 view .LVU5131
 15096 50cb 488D3500 		lea	rsi, .LC27[rip]	#,
 15096      000000
 15097              	.LBE915:
 15098              	.LBE919:
 15099              	# sieve_extend.c:1357:     printf (",%03d", n%1000);
1357:sieve_extend.c **** }
 15100              		.loc 1 1357 5 view .LVU5132
 15101 50d2 29FA     		sub	edx, edi	# n, tmp147
 15102              	.LVL910:
 15103              	.L1182:
1357:sieve_extend.c **** }
 15104              		.loc 1 1357 5 view .LVU5133
 15105              	.LBE925:
 15106              	.LBE930:
 15107              	# sieve_extend.c:1366: }
1366:sieve_extend.c **** }
 15108              		.loc 1 1366 1 view .LVU5134
 15109 50d4 488D6424 		lea	rsp, 8[rsp]	#,
 15109      08
 15110              		.cfi_remember_state
 15111              		.cfi_def_cfa_offset 56
 15112              	.LBB931:
 15113              	.LBB926:
 15114              	.LBB920:
 15115              	.LBB916:
 15116              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15117              		.loc 3 107 10 view .LVU5135
 15118 50d9 BF010000 		mov	edi, 1	#,
 15118      00
 15119              	.LBE916:
 15120              	.LBE920:
 15121              	.LBE926:
 15122              	.LBE931:
 15123              	# sieve_extend.c:1366: }
GAS LISTING /tmp/cc7rm34x.s 			page 408


 15124              		.loc 1 1366 1 view .LVU5136
 15125 50de 5B       		pop	rbx	#
 15126              		.cfi_def_cfa_offset 48
 15127              	.LBB932:
 15128              	.LBB927:
 15129              	.LBB921:
 15130              	.LBB917:
 15131              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15132              		.loc 3 107 10 view .LVU5137
 15133 50df 31C0     		xor	eax, eax	#
 15134              	.LBE917:
 15135              	.LBE921:
 15136              	.LBE927:
 15137              	.LBE932:
 15138              	# sieve_extend.c:1366: }
 15139              		.loc 1 1366 1 view .LVU5138
 15140 50e1 5D       		pop	rbp	#
 15141              		.cfi_def_cfa_offset 40
 15142 50e2 415C     		pop	r12	#
 15143              		.cfi_def_cfa_offset 32
 15144              	.LVL911:
 15145              		.loc 1 1366 1 view .LVU5139
 15146 50e4 415D     		pop	r13	#
 15147              		.cfi_def_cfa_offset 24
 15148 50e6 415E     		pop	r14	#
 15149              		.cfi_def_cfa_offset 16
 15150 50e8 415F     		pop	r15	#
 15151              		.cfi_def_cfa_offset 8
 15152              	.LBB933:
 15153              	.LBB928:
 15154              	.LBB922:
 15155              	.LBB918:
 15156              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15157              		.loc 3 107 10 view .LVU5140
 15158 50ea E9000000 		jmp	__printf_chk@PLT	#
 15158      00
 15159              	.LVL912:
 15160 50ef 90       		.p2align 4,,7
 15161              		.p2align 3
 15162              	.L1184:
 15163              		.cfi_restore_state
 15164              		.loc 3 107 10 view .LVU5141
 15165              	.LBE918:
 15166              	.LBE922:
 15167              	.LBB923:
 15168              	.LBB910:
 15169              	.LBB904:
 15170              	.LBI904:
1351:sieve_extend.c ****     if (n < 1000) {
 15171              		.loc 1 1351 6 is_stmt 1 view .LVU5142
 15172              	.LBB905:
1353:sieve_extend.c ****         return;
 15173              		.loc 1 1353 9 view .LVU5143
 15174              	.LBB906:
 15175              	.LBI906:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15176              		.loc 3 105 1 view .LVU5144
GAS LISTING /tmp/cc7rm34x.s 			page 409


 15177              	.LBB907:
 15178              		.loc 3 107 3 view .LVU5145
 15179              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15180              		.loc 3 107 10 is_stmt 0 view .LVU5146
 15181 50f0 4489EA   		mov	edx, r13d	#, _8
 15182              	.LVL913:
 15183              		.loc 3 107 10 view .LVU5147
 15184 50f3 488D3500 		lea	rsi, .LC26[rip]	#,
 15184      000000
 15185 50fa BF010000 		mov	edi, 1	#,
 15185      00
 15186 50ff 31C0     		xor	eax, eax	#
 15187 5101 E8000000 		call	__printf_chk@PLT	#
 15187      00
 15188              	.LVL914:
 15189              		.loc 3 107 10 view .LVU5148
 15190              	.LBE907:
 15191              	.LBE906:
1354:sieve_extend.c ****     }
 15192              		.loc 1 1354 9 is_stmt 1 view .LVU5149
 15193 5106 EBAF     		jmp	.L1178	#
 15194              	.LVL915:
 15195              		.p2align 4,,7
 15196              		.p2align 3
 15197              	.L1183:
1354:sieve_extend.c ****     }
 15198              		.loc 1 1354 9 is_stmt 0 view .LVU5150
 15199              	.LBE905:
 15200              	.LBE904:
 15201              	.LBE910:
 15202              	.LBE923:
 15203              	.LBE928:
 15204              	.LBE933:
1362:sieve_extend.c ****         n = -n;
 15205              		.loc 1 1362 9 is_stmt 1 view .LVU5151
 15206              	.LBB934:
 15207              	.LBI934:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15208              		.loc 3 105 1 view .LVU5152
 15209              	.LBB935:
 15210              		.loc 3 107 3 view .LVU5153
 15211              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15212              		.loc 3 107 10 is_stmt 0 view .LVU5154
 15213 5108 BF2D0000 		mov	edi, 45	#,
 15213      00
 15214              	.LVL916:
 15215              		.loc 3 107 10 view .LVU5155
 15216              	.LBE935:
 15217              	.LBE934:
 15218              	# sieve_extend.c:1363:         n = -n;
1363:sieve_extend.c ****     }
 15219              		.loc 1 1363 11 view .LVU5156
 15220 510d 41F7DC   		neg	r12d	# n
 15221              	.LVL917:
 15222              	.LBB937:
 15223              	.LBB936:
 15224              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/cc7rm34x.s 			page 410


 15225              		.loc 3 107 10 view .LVU5157
 15226 5110 E8000000 		call	putchar@PLT	#
 15226      00
 15227              	.LVL918:
 15228              		.loc 3 107 10 view .LVU5158
 15229              	.LBE936:
 15230              	.LBE937:
1363:sieve_extend.c ****     }
 15231              		.loc 1 1363 9 is_stmt 1 view .LVU5159
1363:sieve_extend.c ****     }
 15232              		.loc 1 1363 9 is_stmt 0 view .LVU5160
 15233 5115 E9E4FEFF 		jmp	.L1175	#
 15233      FF
 15234              	.LVL919:
 15235 511a 660F1F44 		.p2align 4,,7
 15235      0000
 15236              		.p2align 3
 15237              	.L1185:
 15238              	.LBB938:
 15239              	.LBB929:
 15240              	.LBB924:
 15241              	.LBB911:
 15242              	.LBB908:
 15243              	.LBB896:
 15244              	.LBB891:
 15245              	.LBI891:
1351:sieve_extend.c ****     if (n < 1000) {
 15246              		.loc 1 1351 6 is_stmt 1 view .LVU5161
 15247              	.LBB892:
1353:sieve_extend.c ****         return;
 15248              		.loc 1 1353 9 view .LVU5162
 15249              	.LBB893:
 15250              	.LBI893:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15251              		.loc 3 105 1 view .LVU5163
 15252              	.LBB894:
 15253              		.loc 3 107 3 view .LVU5164
 15254              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15255              		.loc 3 107 10 is_stmt 0 view .LVU5165
 15256 5120 4489F2   		mov	edx, r14d	#, _10
 15257              	.LVL920:
 15258              		.loc 3 107 10 view .LVU5166
 15259 5123 488D3500 		lea	rsi, .LC26[rip]	#,
 15259      000000
 15260 512a BF010000 		mov	edi, 1	#,
 15260      00
 15261 512f 31C0     		xor	eax, eax	#
 15262 5131 E8000000 		call	__printf_chk@PLT	#
 15262      00
 15263              	.LVL921:
 15264              		.loc 3 107 10 view .LVU5167
 15265              	.LBE894:
 15266              	.LBE893:
1354:sieve_extend.c ****     }
 15267              		.loc 1 1354 9 is_stmt 1 view .LVU5168
 15268 5136 E953FFFF 		jmp	.L1180	#
 15268      FF
GAS LISTING /tmp/cc7rm34x.s 			page 411


 15269              	.LBE892:
 15270              	.LBE891:
 15271              	.LBE896:
 15272              	.LBE908:
 15273              	.LBE911:
 15274              	.LBE924:
 15275              	.LBE929:
 15276              	.LBE938:
 15277              		.cfi_endproc
 15278              	.LFE90:
 15280 513b 0F1F4400 		.p2align 4
 15280      00
 15281              		.globl	benchmark
 15283              	benchmark:
 15284              	.LVL922:
 15285              	.LFB91:
1367:sieve_extend.c **** 
1368:sieve_extend.c **** int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bitword_t* bitarray, count
 15286              		.loc 1 1368 111 view -0
 15287              		.cfi_startproc
 15288              		.loc 1 1368 111 is_stmt 0 view .LVU5170
 15289 5140 F30F1EFA 		endbr64	
 15290 5144 4157     		push	r15	#
 15291              		.cfi_def_cfa_offset 16
 15292              		.cfi_offset 15, -16
 15293 5146 4156     		push	r14	#
 15294              		.cfi_def_cfa_offset 24
 15295              		.cfi_offset 14, -24
 15296 5148 4155     		push	r13	#
 15297              		.cfi_def_cfa_offset 32
 15298              		.cfi_offset 13, -32
 15299 514a 4989D5   		mov	r13, rdx	# max, tmp138
 15300 514d 4154     		push	r12	#
 15301              		.cfi_def_cfa_offset 40
 15302              		.cfi_offset 12, -40
 15303              	# sieve_extend.c:1370:     int passes = 0;
1369:sieve_extend.c ****     struct timespec start_time,end_time;
1370:sieve_extend.c ****     int passes = 0;
 15304              		.loc 1 1370 9 view .LVU5171
 15305 514f 4531E4   		xor	r12d, r12d	# <retval>
 15306              	# sieve_extend.c:1368: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1368:sieve_extend.c ****     struct timespec start_time,end_time;
 15307              		.loc 1 1368 111 view .LVU5172
 15308 5152 55       		push	rbp	#
 15309              		.cfi_def_cfa_offset 48
 15310              		.cfi_offset 6, -48
 15311 5153 4889F5   		mov	rbp, rsi	# bitarray, tmp137
 15312 5156 53       		push	rbx	#
 15313              		.cfi_def_cfa_offset 56
 15314              		.cfi_offset 3, -56
 15315 5157 4889FB   		mov	rbx, rdi	# function, tmp136
 15316              	# sieve_extend.c:1372:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1371:sieve_extend.c ****     double elapsed_time = 0;
1372:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15317              		.loc 1 1372 5 view .LVU5173
 15318 515a BF010000 		mov	edi, 1	#,
 15318      00
GAS LISTING /tmp/cc7rm34x.s 			page 412


 15319              	.LVL923:
 15320              	# sieve_extend.c:1368: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1368:sieve_extend.c ****     struct timespec start_time,end_time;
 15321              		.loc 1 1368 111 view .LVU5174
 15322 515f 488D6424 		lea	rsp, -72[rsp]	#,
 15322      B8
 15323              		.cfi_def_cfa_offset 128
 15324              	# sieve_extend.c:1368: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1368:sieve_extend.c ****     struct timespec start_time,end_time;
 15325              		.loc 1 1368 111 view .LVU5175
 15326 5164 C5FB1144 		vmovsd	QWORD PTR 8[rsp], xmm0	# %sfp, tmp135
 15326      2408
 15327              	# sieve_extend.c:1372:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15328              		.loc 1 1372 5 view .LVU5176
 15329 516a 488D7424 		lea	rsi, 16[rsp]	# tmp99,
 15329      10
 15330              	.LVL924:
 15331              	# sieve_extend.c:1368: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1368:sieve_extend.c ****     struct timespec start_time,end_time;
 15332              		.loc 1 1368 111 view .LVU5177
 15333 516f 64488B04 		mov	rax, QWORD PTR fs:40	# tmp139, MEM[(<address-space-1> long unsigned int *)40B]
 15333      25280000 
 15333      00
 15334 5178 48894424 		mov	QWORD PTR 56[rsp], rax	# D.7355, tmp139
 15334      38
 15335 517d 31C0     		xor	eax, eax	# tmp139
1369:sieve_extend.c ****     int passes = 0;
 15336              		.loc 1 1369 5 is_stmt 1 view .LVU5178
1370:sieve_extend.c ****     double elapsed_time = 0;
 15337              		.loc 1 1370 5 view .LVU5179
 15338              	.LVL925:
1371:sieve_extend.c ****     double elapsed_time = 0;
 15339              		.loc 1 1371 5 view .LVU5180
 15340              		.loc 1 1372 5 view .LVU5181
 15341 517f E8000000 		call	clock_gettime@PLT	#
 15341      00
 15342              	.LVL926:
1373:sieve_extend.c ****     while (elapsed_time <= max_time) {
 15343              		.loc 1 1373 5 view .LVU5182
 15344              		.loc 1 1373 11 view .LVU5183
 15345 5184 C5FB106C 		vmovsd	xmm5, QWORD PTR 8[rsp]	# max_time, %sfp
 15345      2408
 15346 518a C5F92F2D 		vcomisd	xmm5, QWORD PTR .LC6[rip]	# max_time,
 15346      00000000 
 15347 5192 0F827801 		jb	.L1186	#,
 15347      0000
 15348 5198 4C8D7424 		lea	r14, 32[rsp]	# tmp111,
 15348      20
 15349              	.LVL927:
 15350              	.L1189:
1374:sieve_extend.c ****         function(bitarray, max);
 15351              		.loc 1 1374 9 view .LVU5184
 15352 519d 4C89EE   		mov	rsi, r13	#, max
 15353 51a0 4889EF   		mov	rdi, rbp	#, bitarray
 15354 51a3 FFD3     		call	rbx	# function
 15355              	.LVL928:
1375:sieve_extend.c ****         passes++;
GAS LISTING /tmp/cc7rm34x.s 			page 413


 15356              		.loc 1 1375 9 view .LVU5185
 15357              	# sieve_extend.c:1376:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1376:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15358              		.loc 1 1376 9 is_stmt 0 view .LVU5186
 15359 51a5 4C89F6   		mov	rsi, r14	#, tmp111
 15360 51a8 BF010000 		mov	edi, 1	#,
 15360      00
 15361 51ad E8000000 		call	clock_gettime@PLT	#
 15361      00
 15362              	.LVL929:
 15363              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
1377:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15364              		.loc 1 1377 58 view .LVU5187
 15365 51b2 C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 40[rsp]	# tmp102, end_time.tv_nsec
 15365      442428
 15366              	# sieve_extend.c:1375:         passes++;
1375:sieve_extend.c ****         passes++;
 15367              		.loc 1 1375 15 view .LVU5188
 15368 51b9 458D7C24 		lea	r15d, 1[r12]	# tmp113,
 15368      01
 15369              	.LVL930:
 15370              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15371              		.loc 1 1377 64 view .LVU5189
 15372 51be C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR 16[rsp]	# tmp103, start_time.tv_sec
 15372      4C2410
 15373              	# sieve_extend.c:1375:         passes++;
1375:sieve_extend.c ****         passes++;
 15374              		.loc 1 1375 15 view .LVU5190
 15375 51c5 4589FC   		mov	r12d, r15d	# <retval>, tmp113
1376:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15376              		.loc 1 1376 9 is_stmt 1 view .LVU5191
 15377              		.loc 1 1377 9 view .LVU5192
 15378              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15379              		.loc 1 1377 104 is_stmt 0 view .LVU5193
 15380 51c8 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 24[rsp]	# tmp105, start_time.tv_nsec
 15380      5C2418
 15381              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15382              		.loc 1 1377 40 view .LVU5194
 15383 51cf C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 32[rsp]	# tmp106, end_time.tv_sec
 15383      542420
 15384              	# sieve_extend.c:1373:     while (elapsed_time <= max_time) {
1373:sieve_extend.c ****         function(bitarray, max);
 15385              		.loc 1 1373 11 view .LVU5195
 15386 51d6 C5FB1064 		vmovsd	xmm4, QWORD PTR 8[rsp]	# max_time, %sfp
 15386      2408
 15387 51dc C4E2F9BB 		vfmsub231sd	xmm1, xmm0, QWORD PTR .LC8[rip]	# _30, tmp102,
 15387      0D000000 
 15387      00
 15388 51e5 C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _19, tmp106,
 15388      1D000000 
 15388      00
 15389              	.LVL931:
1373:sieve_extend.c ****         function(bitarray, max);
 15390              		.loc 1 1373 11 is_stmt 1 view .LVU5196
 15391              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15392              		.loc 1 1377 22 is_stmt 0 view .LVU5197
 15393 51ee C5E358F1 		vaddsd	xmm6, xmm3, xmm1	# elapsed_time, _19, _30
GAS LISTING /tmp/cc7rm34x.s 			page 414


 15394              	# sieve_extend.c:1373:     while (elapsed_time <= max_time) {
1373:sieve_extend.c ****         function(bitarray, max);
 15395              		.loc 1 1373 11 view .LVU5198
 15396 51f2 C5F92FE6 		vcomisd	xmm4, xmm6	# max_time, elapsed_time
 15397 51f6 0F821401 		jb	.L1186	#,
 15397      0000
 15398              	.LVL932:
1374:sieve_extend.c ****         passes++;
 15399              		.loc 1 1374 9 is_stmt 1 view .LVU5199
 15400 51fc 4C89EE   		mov	rsi, r13	#, max
 15401 51ff 4889EF   		mov	rdi, rbp	#, bitarray
 15402 5202 FFD3     		call	rbx	# function
 15403              	.LVL933:
1375:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15404              		.loc 1 1375 9 view .LVU5200
 15405              	# sieve_extend.c:1376:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1376:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15406              		.loc 1 1376 9 is_stmt 0 view .LVU5201
 15407 5204 4C89F6   		mov	rsi, r14	#, tmp111
 15408 5207 BF010000 		mov	edi, 1	#,
 15408      00
 15409 520c E8000000 		call	clock_gettime@PLT	#
 15409      00
 15410              	.LVL934:
 15411              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15412              		.loc 1 1377 58 view .LVU5202
 15413 5211 C4E1C32A 		vcvtsi2sd	xmm7, xmm7, QWORD PTR 40[rsp]	# tmp114, end_time.tv_nsec
 15413      7C2428
 15414              	# sieve_extend.c:1375:         passes++;
1375:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15415              		.loc 1 1375 15 view .LVU5203
 15416 5218 4183C401 		add	r12d, 1	# <retval>,
 15417              	.LVL935:
1376:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15418              		.loc 1 1376 9 is_stmt 1 view .LVU5204
 15419              		.loc 1 1377 9 view .LVU5205
 15420              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15421              		.loc 1 1377 64 is_stmt 0 view .LVU5206
 15422 521c C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 16[rsp]	# tmp115, start_time.tv_sec
 15422      442410
 15423              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15424              		.loc 1 1377 104 view .LVU5207
 15425 5223 C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 24[rsp]	# tmp117, start_time.tv_nsec
 15425      4C2418
 15426              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15427              		.loc 1 1377 40 view .LVU5208
 15428 522a C461AB2A 		vcvtsi2sd	xmm10, xmm10, QWORD PTR 32[rsp]	# tmp118, end_time.tv_sec
 15428      542420
 15429              	# sieve_extend.c:1373:     while (elapsed_time <= max_time) {
1373:sieve_extend.c ****         function(bitarray, max);
 15430              		.loc 1 1373 11 view .LVU5209
 15431 5231 C57B1064 		vmovsd	xmm12, QWORD PTR 8[rsp]	# max_time, %sfp
 15431      2408
 15432 5237 C462C1BB 		vfmsub231sd	xmm8, xmm7, QWORD PTR .LC8[rip]	# _30, tmp114,
 15432      05000000 
 15432      00
 15433 5240 C462A99D 		vfnmadd132sd	xmm9, xmm10, QWORD PTR .LC8[rip]	# _19, tmp118,
GAS LISTING /tmp/cc7rm34x.s 			page 415


 15433      0D000000 
 15433      00
 15434              	.LVL936:
1373:sieve_extend.c ****         function(bitarray, max);
 15435              		.loc 1 1373 11 is_stmt 1 view .LVU5210
 15436              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15437              		.loc 1 1377 22 is_stmt 0 view .LVU5211
 15438 5249 C4413358 		vaddsd	xmm11, xmm9, xmm8	# elapsed_time, _19, _30
 15438      D8
 15439              	# sieve_extend.c:1373:     while (elapsed_time <= max_time) {
1373:sieve_extend.c ****         function(bitarray, max);
 15440              		.loc 1 1373 11 view .LVU5212
 15441 524e C441792F 		vcomisd	xmm12, xmm11	# max_time, elapsed_time
 15441      E3
 15442 5253 0F82B700 		jb	.L1186	#,
 15442      0000
 15443              	.LVL937:
1374:sieve_extend.c ****         passes++;
 15444              		.loc 1 1374 9 is_stmt 1 view .LVU5213
 15445 5259 4C89EE   		mov	rsi, r13	#, max
 15446 525c 4889EF   		mov	rdi, rbp	#, bitarray
 15447 525f FFD3     		call	rbx	# function
 15448              	.LVL938:
1375:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15449              		.loc 1 1375 9 view .LVU5214
 15450              	# sieve_extend.c:1376:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1376:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15451              		.loc 1 1376 9 is_stmt 0 view .LVU5215
 15452 5261 4C89F6   		mov	rsi, r14	#, tmp111
 15453 5264 BF010000 		mov	edi, 1	#,
 15453      00
 15454 5269 E8000000 		call	clock_gettime@PLT	#
 15454      00
 15455              	.LVL939:
 15456              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15457              		.loc 1 1377 58 view .LVU5216
 15458 526e C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 40[rsp]	# tmp121, end_time.tv_nsec
 15458      6C2428
 15459              	# sieve_extend.c:1375:         passes++;
1375:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15460              		.loc 1 1375 15 view .LVU5217
 15461 5275 458D6702 		lea	r12d, 2[r15]	# <retval>,
 15462              	.LVL940:
1376:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15463              		.loc 1 1376 9 is_stmt 1 view .LVU5218
 15464              		.loc 1 1377 9 view .LVU5219
 15465              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15466              		.loc 1 1377 64 is_stmt 0 view .LVU5220
 15467 5279 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 16[rsp]	# tmp122, start_time.tv_sec
 15467      742410
 15468              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15469              		.loc 1 1377 104 view .LVU5221
 15470 5280 C461832A 		vcvtsi2sd	xmm15, xmm15, QWORD PTR 24[rsp]	# tmp124, start_time.tv_nsec
 15470      7C2418
 15471              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15472              		.loc 1 1377 40 view .LVU5222
 15473 5287 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 32[rsp]	# tmp125, end_time.tv_sec
GAS LISTING /tmp/cc7rm34x.s 			page 416


 15473      6C2420
 15474              	# sieve_extend.c:1373:     while (elapsed_time <= max_time) {
1373:sieve_extend.c ****         function(bitarray, max);
 15475              		.loc 1 1373 11 view .LVU5223
 15476 528e C5FB104C 		vmovsd	xmm1, QWORD PTR 8[rsp]	# max_time, %sfp
 15476      2408
 15477 5294 C46291BB 		vfmsub231sd	xmm14, xmm13, QWORD PTR .LC8[rip]	# _30, tmp121,
 15477      35000000 
 15477      00
 15478 529d C462D19D 		vfnmadd132sd	xmm15, xmm5, QWORD PTR .LC8[rip]	# _19, tmp125,
 15478      3D000000 
 15478      00
 15479              	.LVL941:
1373:sieve_extend.c ****         function(bitarray, max);
 15480              		.loc 1 1373 11 is_stmt 1 view .LVU5224
 15481              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15482              		.loc 1 1377 22 is_stmt 0 view .LVU5225
 15483 52a6 C4C10358 		vaddsd	xmm0, xmm15, xmm14	# elapsed_time, _19, _30
 15483      C6
 15484              	# sieve_extend.c:1373:     while (elapsed_time <= max_time) {
1373:sieve_extend.c ****         function(bitarray, max);
 15485              		.loc 1 1373 11 view .LVU5226
 15486 52ab C5F92FC8 		vcomisd	xmm1, xmm0	# max_time, elapsed_time
 15487 52af 725F     		jb	.L1186	#,
 15488              	.LVL942:
1374:sieve_extend.c ****         passes++;
 15489              		.loc 1 1374 9 is_stmt 1 view .LVU5227
 15490 52b1 4C89EE   		mov	rsi, r13	#, max
 15491 52b4 4889EF   		mov	rdi, rbp	#, bitarray
 15492 52b7 FFD3     		call	rbx	# function
 15493              	.LVL943:
1375:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15494              		.loc 1 1375 9 view .LVU5228
 15495              	# sieve_extend.c:1376:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1376:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15496              		.loc 1 1376 9 is_stmt 0 view .LVU5229
 15497 52b9 4C89F6   		mov	rsi, r14	#, tmp111
 15498 52bc BF010000 		mov	edi, 1	#,
 15498      00
 15499 52c1 E8000000 		call	clock_gettime@PLT	#
 15499      00
 15500              	.LVL944:
 15501              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15502              		.loc 1 1377 58 view .LVU5230
 15503 52c6 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 40[rsp]	# tmp128, end_time.tv_nsec
 15503      5C2428
 15504              	# sieve_extend.c:1375:         passes++;
1375:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15505              		.loc 1 1375 15 view .LVU5231
 15506 52cd 458D6703 		lea	r12d, 3[r15]	# <retval>,
 15507              	.LVL945:
1376:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15508              		.loc 1 1376 9 is_stmt 1 view .LVU5232
 15509              		.loc 1 1377 9 view .LVU5233
 15510              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15511              		.loc 1 1377 64 is_stmt 0 view .LVU5234
 15512 52d1 C4E1CB2A 		vcvtsi2sd	xmm6, xmm6, QWORD PTR 16[rsp]	# tmp129, start_time.tv_sec
GAS LISTING /tmp/cc7rm34x.s 			page 417


 15512      742410
 15513              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15514              		.loc 1 1377 104 view .LVU5235
 15515 52d8 C4E1DB2A 		vcvtsi2sd	xmm4, xmm4, QWORD PTR 24[rsp]	# tmp131, start_time.tv_nsec
 15515      642418
 15516              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15517              		.loc 1 1377 40 view .LVU5236
 15518 52df C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 32[rsp]	# tmp132, end_time.tv_sec
 15518      542420
 15519              	# sieve_extend.c:1373:     while (elapsed_time <= max_time) {
1373:sieve_extend.c ****         function(bitarray, max);
 15520              		.loc 1 1373 11 view .LVU5237
 15521 52e6 C57B1044 		vmovsd	xmm8, QWORD PTR 8[rsp]	# max_time, %sfp
 15521      2408
 15522 52ec C4E2E1BB 		vfmsub231sd	xmm6, xmm3, QWORD PTR .LC8[rip]	# _30, tmp128,
 15522      35000000 
 15522      00
 15523 52f5 C4E2E99D 		vfnmadd132sd	xmm4, xmm2, QWORD PTR .LC8[rip]	# _19, tmp132,
 15523      25000000 
 15523      00
 15524              	.LVL946:
1373:sieve_extend.c ****         function(bitarray, max);
 15525              		.loc 1 1373 11 is_stmt 1 view .LVU5238
 15526              	# sieve_extend.c:1377:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15527              		.loc 1 1377 22 is_stmt 0 view .LVU5239
 15528 52fe C5DB58FE 		vaddsd	xmm7, xmm4, xmm6	# elapsed_time, _19, _30
 15529              	# sieve_extend.c:1373:     while (elapsed_time <= max_time) {
1373:sieve_extend.c ****         function(bitarray, max);
 15530              		.loc 1 1373 11 view .LVU5240
 15531 5302 C5792FC7 		vcomisd	xmm8, xmm7	# max_time, elapsed_time
 15532 5306 0F8391FE 		jnb	.L1189	#,
 15532      FFFF
 15533              	.LVL947:
 15534 530c 0F1F4000 		.p2align 4
 15535              		.p2align 3
 15536              	.L1186:
 15537              	# sieve_extend.c:1380: }
1378:sieve_extend.c ****     }
1379:sieve_extend.c ****     return passes;
1380:sieve_extend.c **** }
 15538              		.loc 1 1380 1 view .LVU5241
 15539 5310 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp140, D.7355
 15539      38
 15540 5315 64483304 		xor	rax, QWORD PTR fs:40	# tmp140, MEM[(<address-space-1> long unsigned int *)40B]
 15540      25280000 
 15540      00
 15541 531e 7513     		jne	.L1202	#,
 15542 5320 488D6424 		lea	rsp, 72[rsp]	#,
 15542      48
 15543              		.cfi_remember_state
 15544              		.cfi_def_cfa_offset 56
 15545 5325 4489E0   		mov	eax, r12d	#, <retval>
 15546 5328 5B       		pop	rbx	#
 15547              		.cfi_def_cfa_offset 48
 15548              	.LVL948:
 15549              		.loc 1 1380 1 view .LVU5242
 15550 5329 5D       		pop	rbp	#
GAS LISTING /tmp/cc7rm34x.s 			page 418


 15551              		.cfi_def_cfa_offset 40
 15552              	.LVL949:
 15553              		.loc 1 1380 1 view .LVU5243
 15554 532a 415C     		pop	r12	#
 15555              		.cfi_def_cfa_offset 32
 15556 532c 415D     		pop	r13	#
 15557              		.cfi_def_cfa_offset 24
 15558              	.LVL950:
 15559              		.loc 1 1380 1 view .LVU5244
 15560 532e 415E     		pop	r14	#
 15561              		.cfi_def_cfa_offset 16
 15562 5330 415F     		pop	r15	#
 15563              		.cfi_def_cfa_offset 8
 15564 5332 C3       		ret	
 15565              	.LVL951:
 15566              	.L1202:
 15567              		.cfi_restore_state
 15568              		.loc 1 1380 1 view .LVU5245
 15569 5333 E8000000 		call	__stack_chk_fail@PLT	#
 15569      00
 15570              	.LVL952:
 15571              		.cfi_endproc
 15572              	.LFE91:
 15574 5338 0F1F8400 		.p2align 4
 15574      00000000 
 15575              		.globl	test
 15577              	test:
 15578              	.LVL953:
 15579              	.LFB92:
1381:sieve_extend.c **** 
1382:sieve_extend.c **** void test(bitword_t* __restrict bitarray, counter_t max) {
 15580              		.loc 1 1382 58 is_stmt 1 view -0
 15581              		.cfi_startproc
 15582              		.loc 1 1382 58 is_stmt 0 view .LVU5247
 15583 5340 F30F1EFA 		endbr64	
 15584              	.LBB940:
1383:sieve_extend.c ****     //#pragma GCC unroll 16
1384:sieve_extend.c ****     #pragma GCC ivdep 
1385:sieve_extend.c ****     for (counter_t x=0; x<max; x++) {
 15585              		.loc 1 1385 10 is_stmt 1 view .LVU5248
 15586              	.LVL954:
 15587              		.loc 1 1385 25 view .LVU5249
 15588              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
 15589              		.loc 1 1385 5 is_stmt 0 view .LVU5250
 15590 5344 4885F6   		test	rsi, rsi	# max
 15591 5347 0F846901 		je	.L1245	#,
 15591      0000
 15592 534d 4889F1   		mov	rcx, rsi	# tmp97, max
 15593              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
 15594              		.loc 1 1385 20 view .LVU5251
 15595 5350 31C0     		xor	eax, eax	# x
 15596 5352 83E107   		and	ecx, 7	# tmp97,
 15597              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
1386:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15598              		.loc 1 1386 34 view .LVU5252
 15599 5355 BA010000 		mov	edx, 1	# tmp92,
 15599      00
GAS LISTING /tmp/cc7rm34x.s 			page 419


 15600 535a 0F84AD00 		je	.L1205	#,
 15600      0000
 15601 5360 4883F901 		cmp	rcx, 1	# tmp97,
 15602 5364 0F848600 		je	.L1230	#,
 15602      0000
 15603 536a 4883F902 		cmp	rcx, 2	# tmp97,
 15604 536e 746C     		je	.L1231	#,
 15605 5370 4883F903 		cmp	rcx, 3	# tmp97,
 15606 5374 7452     		je	.L1232	#,
 15607 5376 4883F904 		cmp	rcx, 4	# tmp97,
 15608 537a 7438     		je	.L1233	#,
 15609 537c 4883F905 		cmp	rcx, 5	# tmp97,
 15610 5380 741E     		je	.L1234	#,
 15611 5382 4883F906 		cmp	rcx, 6	# tmp97,
 15612 5386 0F852C01 		jne	.L1246	#,
 15612      0000
 15613              	.LVL955:
 15614              	.L1235:
 15615              		.loc 1 1386 9 is_stmt 1 view .LVU5253
 15616              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15617              		.loc 1 1386 18 is_stmt 0 view .LVU5254
 15618 538c 4989C1   		mov	r9, rax	# tmp122, x
 15619              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15620              		.loc 1 1386 34 view .LVU5255
 15621 538f C462F9F7 		shlx	r8, rdx, rax	# tmp123, tmp92, x
 15621      C2
 15622              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15623              		.loc 1 1386 18 view .LVU5256
 15624 5394 49C1E906 		shr	r9, 6	# tmp122,
 15625              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15626              		.loc 1 1385 33 view .LVU5257
 15627 5398 4883C001 		add	rax, 1	# x,
 15628              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15629              		.loc 1 1386 34 view .LVU5258
 15630 539c 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_4, tmp123
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15631              		.loc 1 1385 32 is_stmt 1 view .LVU5259
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15632              		.loc 1 1385 25 view .LVU5260
 15633              	.L1234:
 15634              		.loc 1 1386 9 view .LVU5261
 15635              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15636              		.loc 1 1386 18 is_stmt 0 view .LVU5262
 15637 53a0 4989C2   		mov	r10, rax	# tmp124, x
 15638              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15639              		.loc 1 1386 34 view .LVU5263
 15640 53a3 C462F9F7 		shlx	r11, rdx, rax	# tmp125, tmp92, x
 15640      DA
 15641              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15642              		.loc 1 1386 18 view .LVU5264
 15643 53a8 49C1EA06 		shr	r10, 6	# tmp124,
 15644              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15645              		.loc 1 1385 33 view .LVU5265
 15646 53ac 4883C001 		add	rax, 1	# x,
 15647              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
GAS LISTING /tmp/cc7rm34x.s 			page 420


 15648              		.loc 1 1386 34 view .LVU5266
 15649 53b0 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_4, tmp125
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15650              		.loc 1 1385 32 is_stmt 1 view .LVU5267
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15651              		.loc 1 1385 25 view .LVU5268
 15652              	.L1233:
 15653              		.loc 1 1386 9 view .LVU5269
 15654              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15655              		.loc 1 1386 18 is_stmt 0 view .LVU5270
 15656 53b4 4889C1   		mov	rcx, rax	# tmp126, x
 15657              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15658              		.loc 1 1386 34 view .LVU5271
 15659 53b7 C462F9F7 		shlx	r9, rdx, rax	# tmp127, tmp92, x
 15659      CA
 15660              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15661              		.loc 1 1386 18 view .LVU5272
 15662 53bc 48C1E906 		shr	rcx, 6	# tmp126,
 15663              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15664              		.loc 1 1385 33 view .LVU5273
 15665 53c0 4883C001 		add	rax, 1	# x,
 15666              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15667              		.loc 1 1386 34 view .LVU5274
 15668 53c4 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# *_4, tmp127
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15669              		.loc 1 1385 32 is_stmt 1 view .LVU5275
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15670              		.loc 1 1385 25 view .LVU5276
 15671              	.L1232:
 15672              		.loc 1 1386 9 view .LVU5277
 15673              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15674              		.loc 1 1386 18 is_stmt 0 view .LVU5278
 15675 53c8 4989C2   		mov	r10, rax	# tmp128, x
 15676              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15677              		.loc 1 1386 34 view .LVU5279
 15678 53cb C462F9F7 		shlx	r8, rdx, rax	# tmp129, tmp92, x
 15678      C2
 15679              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15680              		.loc 1 1386 18 view .LVU5280
 15681 53d0 49C1EA06 		shr	r10, 6	# tmp128,
 15682              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15683              		.loc 1 1385 33 view .LVU5281
 15684 53d4 4883C001 		add	rax, 1	# x,
 15685              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15686              		.loc 1 1386 34 view .LVU5282
 15687 53d8 4E8904D7 		mov	QWORD PTR [rdi+r10*8], r8	# *_4, tmp129
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15688              		.loc 1 1385 32 is_stmt 1 view .LVU5283
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15689              		.loc 1 1385 25 view .LVU5284
 15690              	.L1231:
 15691              		.loc 1 1386 9 view .LVU5285
 15692              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15693              		.loc 1 1386 18 is_stmt 0 view .LVU5286
 15694 53dc 4989C3   		mov	r11, rax	# tmp130, x
GAS LISTING /tmp/cc7rm34x.s 			page 421


 15695              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15696              		.loc 1 1386 34 view .LVU5287
 15697 53df C4E2F9F7 		shlx	rcx, rdx, rax	# tmp131, tmp92, x
 15697      CA
 15698              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15699              		.loc 1 1386 18 view .LVU5288
 15700 53e4 49C1EB06 		shr	r11, 6	# tmp130,
 15701              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15702              		.loc 1 1385 33 view .LVU5289
 15703 53e8 4883C001 		add	rax, 1	# x,
 15704              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15705              		.loc 1 1386 34 view .LVU5290
 15706 53ec 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_4, tmp131
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15707              		.loc 1 1385 32 is_stmt 1 view .LVU5291
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15708              		.loc 1 1385 25 view .LVU5292
 15709              	.L1230:
 15710              		.loc 1 1386 9 view .LVU5293
 15711              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15712              		.loc 1 1386 18 is_stmt 0 view .LVU5294
 15713 53f0 4989C1   		mov	r9, rax	# tmp132, x
 15714              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15715              		.loc 1 1386 34 view .LVU5295
 15716 53f3 C462F9F7 		shlx	r10, rdx, rax	# tmp133, tmp92, x
 15716      D2
 15717              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15718              		.loc 1 1386 18 view .LVU5296
 15719 53f8 49C1E906 		shr	r9, 6	# tmp132,
 15720              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15721              		.loc 1 1385 33 view .LVU5297
 15722 53fc 4883C001 		add	rax, 1	# x,
 15723              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15724              		.loc 1 1386 34 view .LVU5298
 15725 5400 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_4, tmp133
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15726              		.loc 1 1385 32 is_stmt 1 view .LVU5299
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15727              		.loc 1 1385 25 view .LVU5300
 15728              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15729              		.loc 1 1385 5 is_stmt 0 view .LVU5301
 15730 5404 4839C6   		cmp	rsi, rax	# max, x
 15731 5407 0F84BD00 		je	.L1247	#,
 15731      0000
 15732              	.L1205:
 15733              		.loc 1 1386 9 is_stmt 1 discriminator 3 view .LVU5302
 15734              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15735              		.loc 1 1385 33 is_stmt 0 discriminator 3 view .LVU5303
 15736 540d 488D4801 		lea	rcx, 1[rax]	# tmp98,
 15737              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15738              		.loc 1 1386 18 discriminator 3 view .LVU5304
 15739 5411 4989C3   		mov	r11, rax	# tmp90, x
 15740 5414 49C1EB06 		shr	r11, 6	# tmp90,
GAS LISTING /tmp/cc7rm34x.s 			page 422


 15741 5418 4989C9   		mov	r9, rcx	# tmp100, tmp98
 15742 541b 49C1E906 		shr	r9, 6	# tmp100,
 15743              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15744              		.loc 1 1386 34 discriminator 3 view .LVU5305
 15745 541f C462F9F7 		shlx	r8, rdx, rax	# tmp93, tmp92, x
 15745      C2
 15746 5424 C462F1F7 		shlx	r10, rdx, rcx	# tmp101, tmp92, tmp98
 15746      D2
 15747 5429 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_4, tmp93
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15748              		.loc 1 1385 32 is_stmt 1 discriminator 3 view .LVU5306
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15749              		.loc 1 1385 25 discriminator 3 view .LVU5307
 15750              		.loc 1 1386 9 discriminator 3 view .LVU5308
 15751              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15752              		.loc 1 1386 34 is_stmt 0 discriminator 3 view .LVU5309
 15753 542d 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_4, tmp101
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15754              		.loc 1 1385 32 is_stmt 1 discriminator 3 view .LVU5310
 15755              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15756              		.loc 1 1385 33 is_stmt 0 discriminator 3 view .LVU5311
 15757 5431 4C8D5802 		lea	r11, 2[rax]	# x,
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15758              		.loc 1 1385 25 is_stmt 1 discriminator 3 view .LVU5312
 15759              		.loc 1 1386 9 discriminator 3 view .LVU5313
 15760              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15761              		.loc 1 1385 33 is_stmt 0 discriminator 3 view .LVU5314
 15762 5435 4C8D4803 		lea	r9, 3[rax]	# x,
 15763              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15764              		.loc 1 1386 18 discriminator 3 view .LVU5315
 15765 5439 4D89D8   		mov	r8, r11	# tmp103, x
 15766 543c 49C1E806 		shr	r8, 6	# tmp103,
 15767 5440 4D89CA   		mov	r10, r9	# tmp106, x
 15768 5443 49C1EA06 		shr	r10, 6	# tmp106,
 15769              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15770              		.loc 1 1386 34 discriminator 3 view .LVU5316
 15771 5447 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp104, tmp92, x
 15771      CA
 15772 544c C462B1F7 		shlx	r11, rdx, r9	# tmp107, tmp92, x
 15772      DA
 15773 5451 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_4, tmp104
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15774              		.loc 1 1385 32 is_stmt 1 discriminator 3 view .LVU5317
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15775              		.loc 1 1385 25 discriminator 3 view .LVU5318
 15776              		.loc 1 1386 9 discriminator 3 view .LVU5319
 15777              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15778              		.loc 1 1386 34 is_stmt 0 discriminator 3 view .LVU5320
 15779 5455 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_4, tmp107
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15780              		.loc 1 1385 32 is_stmt 1 discriminator 3 view .LVU5321
 15781              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15782              		.loc 1 1385 33 is_stmt 0 discriminator 3 view .LVU5322
 15783 5459 488D4804 		lea	rcx, 4[rax]	# x,
GAS LISTING /tmp/cc7rm34x.s 			page 423


1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15784              		.loc 1 1385 25 is_stmt 1 discriminator 3 view .LVU5323
 15785              		.loc 1 1386 9 discriminator 3 view .LVU5324
 15786              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15787              		.loc 1 1385 33 is_stmt 0 discriminator 3 view .LVU5325
 15788 545d 4C8D5005 		lea	r10, 5[rax]	# x,
 15789              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15790              		.loc 1 1386 18 discriminator 3 view .LVU5326
 15791 5461 4989C8   		mov	r8, rcx	# tmp109, x
 15792 5464 49C1E806 		shr	r8, 6	# tmp109,
 15793 5468 4D89D3   		mov	r11, r10	# tmp112, x
 15794 546b 49C1EB06 		shr	r11, 6	# tmp112,
 15795              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15796              		.loc 1 1386 34 discriminator 3 view .LVU5327
 15797 546f C462F1F7 		shlx	r9, rdx, rcx	# tmp110, tmp92, x
 15797      CA
 15798 5474 C4E2A9F7 		shlx	rcx, rdx, r10	# tmp113, tmp92, x
 15798      CA
 15799 5479 4E890CC7 		mov	QWORD PTR [rdi+r8*8], r9	# *_4, tmp110
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15800              		.loc 1 1385 32 is_stmt 1 discriminator 3 view .LVU5328
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15801              		.loc 1 1385 25 discriminator 3 view .LVU5329
 15802              		.loc 1 1386 9 discriminator 3 view .LVU5330
 15803              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15804              		.loc 1 1386 34 is_stmt 0 discriminator 3 view .LVU5331
 15805 547d 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_4, tmp113
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15806              		.loc 1 1385 32 is_stmt 1 discriminator 3 view .LVU5332
 15807              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15808              		.loc 1 1385 33 is_stmt 0 discriminator 3 view .LVU5333
 15809 5481 4C8D4806 		lea	r9, 6[rax]	# x,
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15810              		.loc 1 1385 25 is_stmt 1 discriminator 3 view .LVU5334
 15811              		.loc 1 1386 9 discriminator 3 view .LVU5335
 15812              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15813              		.loc 1 1385 33 is_stmt 0 discriminator 3 view .LVU5336
 15814 5485 4C8D5807 		lea	r11, 7[rax]	# x,
 15815              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15816              		.loc 1 1386 18 discriminator 3 view .LVU5337
 15817 5489 4D89C8   		mov	r8, r9	# tmp115, x
 15818              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15819              		.loc 1 1386 34 discriminator 3 view .LVU5338
 15820 548c C462B1F7 		shlx	r10, rdx, r9	# tmp116, tmp92, x
 15820      D2
 15821              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15822              		.loc 1 1385 33 discriminator 3 view .LVU5339
 15823 5491 4883C008 		add	rax, 8	# x,
 15824              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15825              		.loc 1 1386 18 discriminator 3 view .LVU5340
 15826 5495 49C1E806 		shr	r8, 6	# tmp115,
 15827 5499 4D89D9   		mov	r9, r11	# tmp118, x
 15828 549c 49C1E906 		shr	r9, 6	# tmp118,
GAS LISTING /tmp/cc7rm34x.s 			page 424


 15829              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15830              		.loc 1 1385 5 discriminator 3 view .LVU5341
 15831 54a0 4839C6   		cmp	rsi, rax	# max, x
 15832              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15833              		.loc 1 1386 34 discriminator 3 view .LVU5342
 15834 54a3 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp119, tmp92, x
 15834      CA
 15835 54a8 4E8914C7 		mov	QWORD PTR [rdi+r8*8], r10	# *_4, tmp116
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15836              		.loc 1 1385 32 is_stmt 1 discriminator 3 view .LVU5343
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15837              		.loc 1 1385 25 discriminator 3 view .LVU5344
 15838              		.loc 1 1386 9 discriminator 3 view .LVU5345
 15839              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
 15840              		.loc 1 1386 34 is_stmt 0 discriminator 3 view .LVU5346
 15841 54ac 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_4, tmp119
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15842              		.loc 1 1385 32 is_stmt 1 discriminator 3 view .LVU5347
 15843              	.LVL956:
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15844              		.loc 1 1385 25 discriminator 3 view .LVU5348
 15845              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15846              		.loc 1 1385 5 is_stmt 0 discriminator 3 view .LVU5349
 15847 54b0 0F8557FF 		jne	.L1205	#,
 15847      FFFF
 15848              	.LVL957:
 15849              	.L1245:
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15850              		.loc 1 1385 5 discriminator 3 view .LVU5350
 15851              	.LBE940:
 15852              	# sieve_extend.c:1388: }
1387:sieve_extend.c ****     }
1388:sieve_extend.c **** }
 15853              		.loc 1 1388 1 view .LVU5351
 15854 54b6 C3       		ret	
 15855              	.LVL958:
 15856              		.p2align 4,,7
 15857 54b7 90       		.p2align 3
 15858              	.L1246:
 15859              	.LBB941:
1386:sieve_extend.c ****     }
 15860              		.loc 1 1386 9 is_stmt 1 view .LVU5352
 15861              	# sieve_extend.c:1386:         bitarray[wordindex(x)] = markmask(x);
1386:sieve_extend.c ****     }
 15862              		.loc 1 1386 34 is_stmt 0 view .LVU5353
 15863 54b8 48C704C7 		mov	QWORD PTR [rdi+rax*8], 1	# *_4,
 15863      01000000 
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15864              		.loc 1 1385 32 is_stmt 1 view .LVU5354
 15865              	.LVL959:
 15866              	# sieve_extend.c:1385:     for (counter_t x=0; x<max; x++) {
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15867              		.loc 1 1385 33 is_stmt 0 view .LVU5355
 15868 54c0 B8010000 		mov	eax, 1	# x,
 15868      00
GAS LISTING /tmp/cc7rm34x.s 			page 425


1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15869              		.loc 1 1385 25 is_stmt 1 view .LVU5356
 15870 54c5 E9C2FEFF 		jmp	.L1235	#
 15870      FF
 15871              	.L1247:
1385:sieve_extend.c ****         bitarray[wordindex(x)] = markmask(x);
 15872              		.loc 1 1385 25 is_stmt 0 view .LVU5357
 15873 54ca C3       		ret	
 15874              	.LBE941:
 15875              		.cfi_endproc
 15876              	.LFE92:
 15878 54cb 0F1F4400 		.p2align 4
 15878      00
 15879              		.globl	test2
 15881              	test2:
 15882              	.LFB104:
 15883              		.cfi_startproc
 15884 54d0 F30F1EFA 		endbr64	
 15885 54d4 4885F6   		test	rsi, rsi	# max
 15886 54d7 0F846901 		je	.L1290	#,
 15886      0000
 15887 54dd 4889F1   		mov	rcx, rsi	# tmp97, max
 15888 54e0 31C0     		xor	eax, eax	# x
 15889 54e2 83E107   		and	ecx, 7	# tmp97,
 15890 54e5 BA010000 		mov	edx, 1	# tmp92,
 15890      00
 15891 54ea 0F84AD00 		je	.L1250	#,
 15891      0000
 15892 54f0 4883F901 		cmp	rcx, 1	# tmp97,
 15893 54f4 0F848600 		je	.L1275	#,
 15893      0000
 15894 54fa 4883F902 		cmp	rcx, 2	# tmp97,
 15895 54fe 746C     		je	.L1276	#,
 15896 5500 4883F903 		cmp	rcx, 3	# tmp97,
 15897 5504 7452     		je	.L1277	#,
 15898 5506 4883F904 		cmp	rcx, 4	# tmp97,
 15899 550a 7438     		je	.L1278	#,
 15900 550c 4883F905 		cmp	rcx, 5	# tmp97,
 15901 5510 741E     		je	.L1279	#,
 15902 5512 4883F906 		cmp	rcx, 6	# tmp97,
 15903 5516 0F852C01 		jne	.L1291	#,
 15903      0000
 15904              	.L1280:
 15905 551c 4989C1   		mov	r9, rax	# tmp122, x
 15906 551f C462F9F7 		shlx	r8, rdx, rax	# tmp123, tmp92, x
 15906      C2
 15907 5524 49C1E906 		shr	r9, 6	# tmp122,
 15908 5528 4883C001 		add	rax, 1	# x,
 15909 552c 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_9, tmp123
 15910              	.L1279:
 15911 5530 4989C2   		mov	r10, rax	# tmp124, x
 15912 5533 C462F9F7 		shlx	r11, rdx, rax	# tmp125, tmp92, x
 15912      DA
 15913 5538 49C1EA06 		shr	r10, 6	# tmp124,
 15914 553c 4883C001 		add	rax, 1	# x,
 15915 5540 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_9, tmp125
 15916              	.L1278:
GAS LISTING /tmp/cc7rm34x.s 			page 426


 15917 5544 4889C1   		mov	rcx, rax	# tmp126, x
 15918 5547 C462F9F7 		shlx	r9, rdx, rax	# tmp127, tmp92, x
 15918      CA
 15919 554c 48C1E906 		shr	rcx, 6	# tmp126,
 15920 5550 4883C001 		add	rax, 1	# x,
 15921 5554 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# *_9, tmp127
 15922              	.L1277:
 15923 5558 4989C2   		mov	r10, rax	# tmp128, x
 15924 555b C462F9F7 		shlx	r8, rdx, rax	# tmp129, tmp92, x
 15924      C2
 15925 5560 49C1EA06 		shr	r10, 6	# tmp128,
 15926 5564 4883C001 		add	rax, 1	# x,
 15927 5568 4E8904D7 		mov	QWORD PTR [rdi+r10*8], r8	# *_9, tmp129
 15928              	.L1276:
 15929 556c 4989C3   		mov	r11, rax	# tmp130, x
 15930 556f C4E2F9F7 		shlx	rcx, rdx, rax	# tmp131, tmp92, x
 15930      CA
 15931 5574 49C1EB06 		shr	r11, 6	# tmp130,
 15932 5578 4883C001 		add	rax, 1	# x,
 15933 557c 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_9, tmp131
 15934              	.L1275:
 15935 5580 4989C1   		mov	r9, rax	# tmp132, x
 15936 5583 C462F9F7 		shlx	r10, rdx, rax	# tmp133, tmp92, x
 15936      D2
 15937 5588 49C1E906 		shr	r9, 6	# tmp132,
 15938 558c 4883C001 		add	rax, 1	# x,
 15939 5590 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_9, tmp133
 15940 5594 4839C6   		cmp	rsi, rax	# max, x
 15941 5597 0F84BD00 		je	.L1292	#,
 15941      0000
 15942              	.L1250:
 15943 559d 488D4801 		lea	rcx, 1[rax]	# tmp98,
 15944 55a1 4989C3   		mov	r11, rax	# tmp90, x
 15945 55a4 49C1EB06 		shr	r11, 6	# tmp90,
 15946 55a8 4989C9   		mov	r9, rcx	# tmp100, tmp98
 15947 55ab 49C1E906 		shr	r9, 6	# tmp100,
 15948 55af C462F9F7 		shlx	r8, rdx, rax	# tmp93, tmp92, x
 15948      C2
 15949 55b4 C462F1F7 		shlx	r10, rdx, rcx	# tmp101, tmp92, tmp98
 15949      D2
 15950 55b9 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_9, tmp93
 15951 55bd 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_9, tmp101
 15952 55c1 4C8D5802 		lea	r11, 2[rax]	# x,
 15953 55c5 4C8D4803 		lea	r9, 3[rax]	# x,
 15954 55c9 4D89D8   		mov	r8, r11	# tmp103, x
 15955 55cc 49C1E806 		shr	r8, 6	# tmp103,
 15956 55d0 4D89CA   		mov	r10, r9	# tmp106, x
 15957 55d3 49C1EA06 		shr	r10, 6	# tmp106,
 15958 55d7 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp104, tmp92, x
 15958      CA
 15959 55dc C462B1F7 		shlx	r11, rdx, r9	# tmp107, tmp92, x
 15959      DA
 15960 55e1 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_9, tmp104
 15961 55e5 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_9, tmp107
 15962 55e9 488D4804 		lea	rcx, 4[rax]	# x,
 15963 55ed 4C8D5005 		lea	r10, 5[rax]	# x,
 15964 55f1 4989C8   		mov	r8, rcx	# tmp109, x
GAS LISTING /tmp/cc7rm34x.s 			page 427


 15965 55f4 49C1E806 		shr	r8, 6	# tmp109,
 15966 55f8 4D89D3   		mov	r11, r10	# tmp112, x
 15967 55fb 49C1EB06 		shr	r11, 6	# tmp112,
 15968 55ff C462F1F7 		shlx	r9, rdx, rcx	# tmp110, tmp92, x
 15968      CA
 15969 5604 C4E2A9F7 		shlx	rcx, rdx, r10	# tmp113, tmp92, x
 15969      CA
 15970 5609 4E890CC7 		mov	QWORD PTR [rdi+r8*8], r9	# *_9, tmp110
 15971 560d 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_9, tmp113
 15972 5611 4C8D4806 		lea	r9, 6[rax]	# x,
 15973 5615 4C8D5807 		lea	r11, 7[rax]	# x,
 15974 5619 4D89C8   		mov	r8, r9	# tmp115, x
 15975 561c C462B1F7 		shlx	r10, rdx, r9	# tmp116, tmp92, x
 15975      D2
 15976 5621 4883C008 		add	rax, 8	# x,
 15977 5625 49C1E806 		shr	r8, 6	# tmp115,
 15978 5629 4D89D9   		mov	r9, r11	# tmp118, x
 15979 562c 49C1E906 		shr	r9, 6	# tmp118,
 15980 5630 4839C6   		cmp	rsi, rax	# max, x
 15981 5633 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp119, tmp92, x
 15981      CA
 15982 5638 4E8914C7 		mov	QWORD PTR [rdi+r8*8], r10	# *_9, tmp116
 15983 563c 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_9, tmp119
 15984 5640 0F8557FF 		jne	.L1250	#,
 15984      FFFF
 15985              	.L1290:
 15986 5646 C3       		ret	
 15987              		.p2align 4,,7
 15988 5647 90       		.p2align 3
 15989              	.L1291:
 15990 5648 48C704C7 		mov	QWORD PTR [rdi+rax*8], 1	# *_9,
 15990      01000000 
 15991 5650 B8010000 		mov	eax, 1	# x,
 15991      00
 15992 5655 E9C2FEFF 		jmp	.L1280	#
 15992      FF
 15993              	.L1292:
 15994 565a C3       		ret	
 15995              		.cfi_endproc
 15996              	.LFE104:
 15998 565b 0F1F4400 		.p2align 4
 15998      00
 15999              		.globl	test3
 16001              	test3:
 16002              	.LVL960:
 16003              	.LFB94:
1389:sieve_extend.c **** 
1390:sieve_extend.c **** void test2(bitword_t* __restrict bitarray, counter_t max) {
1391:sieve_extend.c ****     //#pragma GCC unroll 16
1392:sieve_extend.c ****     #pragma GCC ivdep 
1393:sieve_extend.c ****     for (counter_t x=0; x<max; x++) {
1394:sieve_extend.c ****         *(bitarray+wordindex(x)) = markmask(x);
1395:sieve_extend.c ****     }
1396:sieve_extend.c **** }
1397:sieve_extend.c **** 
1398:sieve_extend.c **** void test3(bitword_t* __restrict bitarray, counter_t max) {
 16004              		.loc 1 1398 59 is_stmt 1 view -0
GAS LISTING /tmp/cc7rm34x.s 			page 428


 16005              		.cfi_startproc
 16006              		.loc 1 1398 59 is_stmt 0 view .LVU5359
 16007 5660 F30F1EFA 		endbr64	
1399:sieve_extend.c ****     for (register counter_t x=0; x<max; ) {
 16008              		.loc 1 1399 5 is_stmt 1 view .LVU5360
 16009              	.LBB942:
 16010              		.loc 1 1399 10 view .LVU5361
 16011              	.LVL961:
 16012              		.loc 1 1399 34 view .LVU5362
 16013              	# sieve_extend.c:1399:     for (register counter_t x=0; x<max; ) {
 16014              		.loc 1 1399 5 is_stmt 0 view .LVU5363
 16015 5664 4885F6   		test	rsi, rsi	# max
 16016 5667 0F840401 		je	.L1317	#,
 16016      0000
 16017              	# sieve_extend.c:1399:     for (register counter_t x=0; x<max; ) {
 16018              		.loc 1 1399 29 view .LVU5364
 16019 566d 31C0     		xor	eax, eax	# x
 16020              	.LBB943:
 16021              	# sieve_extend.c:1405:             mask |= markmask(x);
1400:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
1401:sieve_extend.c ****         register counter_t index_word = wordstart(x);
1402:sieve_extend.c **** 
1403:sieve_extend.c ****         #pragma GCC ivdep
1404:sieve_extend.c ****         do {
1405:sieve_extend.c ****             mask |= markmask(x);
 16022              		.loc 1 1405 21 view .LVU5365
 16023 566f 41BA0100 		mov	r10d, 1	# tmp95,
 16023      0000
 16024              	.LVL962:
 16025 5675 66662E0F 		.p2align 4
 16025      1F840000 
 16025      000000
 16026              		.p2align 3
 16027              	.L1296:
1400:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 16028              		.loc 1 1400 9 is_stmt 1 view .LVU5366
1401:sieve_extend.c **** 
 16029              		.loc 1 1401 9 view .LVU5367
 16030              	# sieve_extend.c:1401:         register counter_t index_word = wordstart(x);
1401:sieve_extend.c **** 
 16031              		.loc 1 1401 28 is_stmt 0 view .LVU5368
 16032 5680 4989C0   		mov	r8, rax	# index_word, x
 16033              	# sieve_extend.c:1400:         register bitword_t mask = SAFE_ZERO;
1400:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 16034              		.loc 1 1400 28 view .LVU5369
 16035 5683 31C9     		xor	ecx, ecx	# mask
 16036              	# sieve_extend.c:1401:         register counter_t index_word = wordstart(x);
1401:sieve_extend.c **** 
 16037              		.loc 1 1401 28 view .LVU5370
 16038 5685 4983E0C0 		and	r8, -64	# index_word,
 16039              	.LVL963:
 16040              	.L1295:
 16041              		.loc 1 1405 13 is_stmt 1 discriminator 1 view .LVU5371
 16042              	# sieve_extend.c:1406:             x++;
1406:sieve_extend.c ****             x++;
 16043              		.loc 1 1406 14 is_stmt 0 discriminator 1 view .LVU5372
 16044 5689 4C8D4801 		lea	r9, 1[rax]	# tmp98,
GAS LISTING /tmp/cc7rm34x.s 			page 429


 16045              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16046              		.loc 1 1405 21 discriminator 1 view .LVU5373
 16047 568d C4C2F9F7 		shlx	rdx, r10, rax	# tmp94, tmp95, x
 16047      D2
 16048              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
1407:sieve_extend.c ****         } while(wordstart(x)==index_word);
 16049              		.loc 1 1407 17 discriminator 1 view .LVU5374
 16050 5692 4D89CB   		mov	r11, r9	# tmp96, x
 16051              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16052              		.loc 1 1405 18 discriminator 1 view .LVU5375
 16053 5695 4809D1   		or	rcx, rdx	# mask, tmp94
 16054              	.LVL964:
1406:sieve_extend.c ****             x++;
 16055              		.loc 1 1406 13 is_stmt 1 discriminator 1 view .LVU5376
 16056              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16057              		.loc 1 1407 17 is_stmt 0 discriminator 1 view .LVU5377
 16058 5698 4983E3C0 		and	r11, -64	# tmp96,
 16059              	# sieve_extend.c:1406:             x++;
1406:sieve_extend.c ****             x++;
 16060              		.loc 1 1406 14 discriminator 1 view .LVU5378
 16061 569c 4C89C8   		mov	rax, r9	# x, tmp98
 16062              	.LVL965:
 16063              		.loc 1 1407 16 is_stmt 1 discriminator 1 view .LVU5379
 16064              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16065              		.loc 1 1407 9 is_stmt 0 discriminator 1 view .LVU5380
 16066 569f 4D39C3   		cmp	r11, r8	# tmp96, index_word
 16067 56a2 0F85B800 		jne	.L1316	#,
 16067      0000
1405:sieve_extend.c ****             x++;
 16068              		.loc 1 1405 13 is_stmt 1 view .LVU5381
 16069              	# sieve_extend.c:1406:             x++;
1406:sieve_extend.c ****             x++;
 16070              		.loc 1 1406 14 is_stmt 0 view .LVU5382
 16071 56a8 4883C001 		add	rax, 1	# x,
 16072              	.LVL966:
 16073              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16074              		.loc 1 1405 21 view .LVU5383
 16075 56ac C4C2B1F7 		shlx	rdx, r10, r9	# tmp99, tmp95, x
 16075      D2
 16076              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16077              		.loc 1 1407 17 view .LVU5384
 16078 56b1 4989C3   		mov	r11, rax	# tmp100, x
 16079              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16080              		.loc 1 1405 18 view .LVU5385
 16081 56b4 4809D1   		or	rcx, rdx	# mask, tmp99
 16082              	.LVL967:
1406:sieve_extend.c ****             x++;
 16083              		.loc 1 1406 13 is_stmt 1 view .LVU5386
 16084              		.loc 1 1407 16 view .LVU5387
 16085              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16086              		.loc 1 1407 17 is_stmt 0 view .LVU5388
 16087 56b7 4983E3C0 		and	r11, -64	# tmp100,
 16088              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
GAS LISTING /tmp/cc7rm34x.s 			page 430


 16089              		.loc 1 1407 9 view .LVU5389
 16090 56bb 4D39C3   		cmp	r11, r8	# tmp100, index_word
 16091 56be 0F859C00 		jne	.L1316	#,
 16091      0000
1405:sieve_extend.c ****             x++;
 16092              		.loc 1 1405 13 is_stmt 1 view .LVU5390
 16093              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16094              		.loc 1 1405 21 is_stmt 0 view .LVU5391
 16095 56c4 C4C2F9F7 		shlx	rax, r10, rax	# tmp101, tmp95, x
 16095      C2
 16096              	.LVL968:
 16097              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16098              		.loc 1 1405 18 view .LVU5392
 16099 56c9 4809C1   		or	rcx, rax	# mask, tmp101
 16100              	.LVL969:
1406:sieve_extend.c ****             x++;
 16101              		.loc 1 1406 13 is_stmt 1 view .LVU5393
 16102              	# sieve_extend.c:1406:             x++;
1406:sieve_extend.c ****             x++;
 16103              		.loc 1 1406 14 is_stmt 0 view .LVU5394
 16104 56cc 498D4102 		lea	rax, 2[r9]	# x,
 16105              	.LVL970:
 16106              		.loc 1 1407 16 is_stmt 1 view .LVU5395
 16107              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16108              		.loc 1 1407 17 is_stmt 0 view .LVU5396
 16109 56d0 4889C2   		mov	rdx, rax	# tmp102, x
 16110 56d3 4883E2C0 		and	rdx, -64	# tmp102,
 16111              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16112              		.loc 1 1407 9 view .LVU5397
 16113 56d7 4C39C2   		cmp	rdx, r8	# tmp102, index_word
 16114 56da 0F858000 		jne	.L1316	#,
 16114      0000
1405:sieve_extend.c ****             x++;
 16115              		.loc 1 1405 13 is_stmt 1 view .LVU5398
 16116              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16117              		.loc 1 1405 21 is_stmt 0 view .LVU5399
 16118 56e0 C442F9F7 		shlx	r11, r10, rax	# tmp103, tmp95, x
 16118      DA
 16119              	# sieve_extend.c:1406:             x++;
1406:sieve_extend.c ****             x++;
 16120              		.loc 1 1406 14 view .LVU5400
 16121 56e5 498D4103 		lea	rax, 3[r9]	# x,
 16122              	.LVL971:
 16123              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16124              		.loc 1 1407 17 view .LVU5401
 16125 56e9 4889C2   		mov	rdx, rax	# tmp104, x
 16126              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16127              		.loc 1 1405 18 view .LVU5402
 16128 56ec 4C09D9   		or	rcx, r11	# mask, tmp103
 16129              	.LVL972:
1406:sieve_extend.c ****             x++;
 16130              		.loc 1 1406 13 is_stmt 1 view .LVU5403
 16131              		.loc 1 1407 16 view .LVU5404
GAS LISTING /tmp/cc7rm34x.s 			page 431


 16132              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16133              		.loc 1 1407 17 is_stmt 0 view .LVU5405
 16134 56ef 4883E2C0 		and	rdx, -64	# tmp104,
 16135              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16136              		.loc 1 1407 9 view .LVU5406
 16137 56f3 4C39C2   		cmp	rdx, r8	# tmp104, index_word
 16138 56f6 7568     		jne	.L1316	#,
1405:sieve_extend.c ****             x++;
 16139              		.loc 1 1405 13 is_stmt 1 view .LVU5407
 16140              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16141              		.loc 1 1405 21 is_stmt 0 view .LVU5408
 16142 56f8 C4C2F9F7 		shlx	rax, r10, rax	# tmp105, tmp95, x
 16142      C2
 16143              	.LVL973:
 16144              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16145              		.loc 1 1405 18 view .LVU5409
 16146 56fd 4809C1   		or	rcx, rax	# mask, tmp105
 16147              	.LVL974:
1406:sieve_extend.c ****             x++;
 16148              		.loc 1 1406 13 is_stmt 1 view .LVU5410
 16149              	# sieve_extend.c:1406:             x++;
1406:sieve_extend.c ****             x++;
 16150              		.loc 1 1406 14 is_stmt 0 view .LVU5411
 16151 5700 498D4104 		lea	rax, 4[r9]	# x,
 16152              	.LVL975:
 16153              		.loc 1 1407 16 is_stmt 1 view .LVU5412
 16154              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16155              		.loc 1 1407 17 is_stmt 0 view .LVU5413
 16156 5704 4989C3   		mov	r11, rax	# tmp106, x
 16157 5707 4983E3C0 		and	r11, -64	# tmp106,
 16158              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16159              		.loc 1 1407 9 view .LVU5414
 16160 570b 4D39C3   		cmp	r11, r8	# tmp106, index_word
 16161 570e 7550     		jne	.L1316	#,
1405:sieve_extend.c ****             x++;
 16162              		.loc 1 1405 13 is_stmt 1 view .LVU5415
 16163              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16164              		.loc 1 1405 21 is_stmt 0 view .LVU5416
 16165 5710 C4C2F9F7 		shlx	rdx, r10, rax	# tmp107, tmp95, x
 16165      D2
 16166              	# sieve_extend.c:1406:             x++;
1406:sieve_extend.c ****             x++;
 16167              		.loc 1 1406 14 view .LVU5417
 16168 5715 498D4105 		lea	rax, 5[r9]	# x,
 16169              	.LVL976:
 16170              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16171              		.loc 1 1407 17 view .LVU5418
 16172 5719 4989C3   		mov	r11, rax	# tmp108, x
 16173              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16174              		.loc 1 1405 18 view .LVU5419
 16175 571c 4809D1   		or	rcx, rdx	# mask, tmp107
 16176              	.LVL977:
1406:sieve_extend.c ****             x++;
GAS LISTING /tmp/cc7rm34x.s 			page 432


 16177              		.loc 1 1406 13 is_stmt 1 view .LVU5420
 16178              		.loc 1 1407 16 view .LVU5421
 16179              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16180              		.loc 1 1407 17 is_stmt 0 view .LVU5422
 16181 571f 4983E3C0 		and	r11, -64	# tmp108,
 16182              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16183              		.loc 1 1407 9 view .LVU5423
 16184 5723 4D39C3   		cmp	r11, r8	# tmp108, index_word
 16185 5726 7538     		jne	.L1316	#,
1405:sieve_extend.c ****             x++;
 16186              		.loc 1 1405 13 is_stmt 1 view .LVU5424
 16187              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16188              		.loc 1 1405 21 is_stmt 0 view .LVU5425
 16189 5728 C4C2F9F7 		shlx	rax, r10, rax	# tmp109, tmp95, x
 16189      C2
 16190              	.LVL978:
 16191              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16192              		.loc 1 1405 18 view .LVU5426
 16193 572d 4809C1   		or	rcx, rax	# mask, tmp109
 16194              	.LVL979:
1406:sieve_extend.c ****             x++;
 16195              		.loc 1 1406 13 is_stmt 1 view .LVU5427
 16196              	# sieve_extend.c:1406:             x++;
1406:sieve_extend.c ****             x++;
 16197              		.loc 1 1406 14 is_stmt 0 view .LVU5428
 16198 5730 498D4106 		lea	rax, 6[r9]	# x,
 16199              	.LVL980:
 16200              		.loc 1 1407 16 is_stmt 1 view .LVU5429
 16201              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16202              		.loc 1 1407 17 is_stmt 0 view .LVU5430
 16203 5734 4889C2   		mov	rdx, rax	# tmp110, x
 16204 5737 4883E2C0 		and	rdx, -64	# tmp110,
 16205              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16206              		.loc 1 1407 9 view .LVU5431
 16207 573b 4C39C2   		cmp	rdx, r8	# tmp110, index_word
 16208 573e 7520     		jne	.L1316	#,
1405:sieve_extend.c ****             x++;
 16209              		.loc 1 1405 13 is_stmt 1 view .LVU5432
 16210              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16211              		.loc 1 1405 21 is_stmt 0 view .LVU5433
 16212 5740 C442F9F7 		shlx	r11, r10, rax	# tmp111, tmp95, x
 16212      DA
 16213              	# sieve_extend.c:1406:             x++;
1406:sieve_extend.c ****             x++;
 16214              		.loc 1 1406 14 view .LVU5434
 16215 5745 498D4107 		lea	rax, 7[r9]	# x,
 16216              	.LVL981:
 16217              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16218              		.loc 1 1407 17 view .LVU5435
 16219 5749 4989C1   		mov	r9, rax	# tmp112, x
 16220              	.LVL982:
 16221              	# sieve_extend.c:1405:             mask |= markmask(x);
1405:sieve_extend.c ****             x++;
 16222              		.loc 1 1405 18 view .LVU5436
GAS LISTING /tmp/cc7rm34x.s 			page 433


 16223 574c 4C09D9   		or	rcx, r11	# mask, tmp111
 16224              	.LVL983:
1406:sieve_extend.c ****             x++;
 16225              		.loc 1 1406 13 is_stmt 1 view .LVU5437
 16226              		.loc 1 1407 16 view .LVU5438
 16227              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16228              		.loc 1 1407 17 is_stmt 0 view .LVU5439
 16229 574f 4983E1C0 		and	r9, -64	# tmp112,
 16230              	# sieve_extend.c:1407:         } while(wordstart(x)==index_word);
 16231              		.loc 1 1407 9 view .LVU5440
 16232 5753 4D39C1   		cmp	r9, r8	# tmp112, index_word
 16233 5756 0F842DFF 		je	.L1295	#,
 16233      FFFF
 16234 575c 0F1F4000 		.p2align 4
 16235              		.p2align 3
 16236              	.L1316:
1408:sieve_extend.c ****         bitarray[wordindex(index_word)] = mask;
 16237              		.loc 1 1408 9 is_stmt 1 view .LVU5441
 16238              	# sieve_extend.c:1408:         bitarray[wordindex(index_word)] = mask;
 16239              		.loc 1 1408 18 is_stmt 0 view .LVU5442
 16240 5760 49C1E806 		shr	r8, 6	# tmp97,
 16241              	.LVL984:
 16242              		.loc 1 1408 18 view .LVU5443
 16243              	.LBE943:
 16244              	# sieve_extend.c:1399:     for (register counter_t x=0; x<max; ) {
1399:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 16245              		.loc 1 1399 5 view .LVU5444
 16246 5764 4839C6   		cmp	rsi, rax	# max, x
 16247              	.LBB944:
 16248              	# sieve_extend.c:1408:         bitarray[wordindex(index_word)] = mask;
 16249              		.loc 1 1408 41 view .LVU5445
 16250 5767 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_6, mask
 16251              		.loc 1 1408 41 view .LVU5446
 16252              	.LBE944:
1399:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 16253              		.loc 1 1399 34 is_stmt 1 view .LVU5447
 16254              	# sieve_extend.c:1399:     for (register counter_t x=0; x<max; ) {
1399:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 16255              		.loc 1 1399 5 is_stmt 0 view .LVU5448
 16256 576b 0F870FFF 		ja	.L1296	#,
 16256      FFFF
 16257              	.LVL985:
 16258              	.L1317:
1399:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 16259              		.loc 1 1399 5 view .LVU5449
 16260              	.LBE942:
 16261              	# sieve_extend.c:1410: }
1409:sieve_extend.c ****     }
1410:sieve_extend.c **** }
 16262              		.loc 1 1410 1 view .LVU5450
 16263 5771 C3       		ret	
 16264              		.cfi_endproc
 16265              	.LFE94:
 16267              		.section	.rodata.str1.1
 16268              	.LC29:
 16269 0044 5573696E 		.string	"Using Pointers"
 16269      6720506F 
GAS LISTING /tmp/cc7rm34x.s 			page 434


 16269      696E7465 
 16269      727300
 16270              	.LC30:
 16271 0053 2D2D6865 		.string	"--help"
 16271      6C7000
 16272              	.LC31:
 16273 005a 2D2D7665 		.string	"--verbose"
 16273      72626F73 
 16273      6500
 16274              	.LC32:
 16275 0064 4E6F2076 		.string	"No verbose level specified\n"
 16275      6572626F 
 16275      7365206C 
 16275      6576656C 
 16275      20737065 
 16276              		.section	.rodata.str1.8
 16277 03ae 0000     		.align 8
 16278              	.LC33:
 16279 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 16279      723A2049 
 16279      6E76616C 
 16279      6964206D 
 16279      65617375 
 16280              		.section	.rodata.str1.1
 16281              	.LC34:
 16282 0080 56657262 		.string	"Verbose level set to %d\n"
 16282      6F736520 
 16282      6C657665 
 16282      6C207365 
 16282      7420746F 
 16283              	.LC35:
 16284 0099 2D2D6368 		.string	"--check"
 16284      65636B00 
 16285              	.LC36:
 16286 00a1 2D2D7475 		.string	"--tune"
 16286      6E6500
 16287              	.LC37:
 16288 00a8 4E6F2074 		.string	"No tune level specified\n"
 16288      756E6520 
 16288      6C657665 
 16288      6C207370 
 16288      65636966 
 16289              		.section	.rodata.str1.8
 16290 03d5 000000   		.align 8
 16291              	.LC38:
 16292 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 16292      723A2049 
 16292      6E76616C 
 16292      69642074 
 16292      756E6520 
 16293              		.section	.rodata.str1.1
 16294              	.LC39:
 16295 00c1 54756E65 		.string	"Tune level set to %d\n"
 16295      206C6576 
 16295      656C2073 
 16295      65742074 
 16295      6F202564 
GAS LISTING /tmp/cc7rm34x.s 			page 435


 16296              	.LC40:
 16297 00d7 2D2D7368 		.string	"--show"
 16297      6F7700
 16298              	.LC41:
 16299 00de 4E6F2073 		.string	"No show maximum specified\n"
 16299      686F7720 
 16299      6D617869 
 16299      6D756D20 
 16299      73706563 
 16300              	.LC42:
 16301 00f9 256A7500 		.string	"%ju"
 16302              		.section	.rodata.str1.8
 16303 03f7 00       		.align 8
 16304              	.LC43:
 16305 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 16305      723A2049 
 16305      6E76616C 
 16305      69642073 
 16305      686F7720 
 16306              		.section	.rodata.str1.1
 16307              	.LC44:
 16308 00fd 53686F77 		.string	"Show maximum set to %ju\n"
 16308      206D6178 
 16308      696D756D 
 16308      20736574 
 16308      20746F20 
 16309              	.LC45:
 16310 0116 496E7661 		.string	"Invalid size %s\n"
 16310      6C696420 
 16310      73697A65 
 16310      2025730A 
 16310      00
 16311              	.LC46:
 16312 0127 56616C69 		.string	"Validating... "
 16312      64617469 
 16312      6E672E2E 
 16312      2E2000
 16313              	.LC47:
 16314 0136 2E2E2E43 		.string	"...Checking size %ju ..."
 16314      6865636B 
 16314      696E6720 
 16314      73697A65 
 16314      20256A75 
 16315              	.LC48:
 16316 014f 2E626C6F 		.string	".blocksize %ju-"
 16316      636B7369 
 16316      7A652025 
 16316      6A752D00 
 16317              	.LC49:
 16318 015f 76616C69 		.string	"valid;"
 16318      643B00
 16319              	.LC50:
 16320 0166 2E2E2E56 		.string	"...Valid algorithm"
 16320      616C6964 
 16320      20616C67 
 16320      6F726974 
 16320      686D00
GAS LISTING /tmp/cc7rm34x.s 			page 436


 16321              	.LC51:
 16322 0179 54756E69 		.string	"Tuning..."
 16322      6E672E2E 
 16322      2E00
 16323              	.LC52:
 16324 0183 2E283E29 		.string	".(>)"
 16324      00
 16325              		.section	.rodata.str1.8
 16326 0419 00000000 		.align 8
 16326      000000
 16327              	.LC53:
 16328 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 16328      6B73697A 
 16328      655F6269 
 16328      74732025 
 16328      31306A75 
 16329              		.section	.rodata.str1.1
 16330              	.LC54:
 16331 0188 2E2E2E2E 		.string	"...."
 16331      00
 16332              		.section	.rodata.str1.8
 16333 04a7 00       		.align 8
 16334              	.LC55:
 16335 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; best ve
 16335      72657375 
 16335      6C74732E 
 16335      20496E69 
 16335      74616C20 
 16336              		.section	.rodata.str1.1
 16337              	.LC56:
 16338 018d 42657374 		.string	"Best options"
 16338      206F7074 
 16338      696F6E73 
 16338      00
 16339              	.LC57:
 16340 019a 28256A75 		.string	"(%ju) "
 16340      292000
 16341              	.LC58:
 16342 01a1 2E2E2E00 		.string	"..."
 16343              	.LC59:
 16344 01a5 2E426573 		.string	".Best result:"
 16344      74207265 
 16344      73756C74 
 16344      3A00
 16345              		.section	.rodata.str1.8
 16346 050f 00       		.align 8
 16347              	.LC60:
 16348 0510 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 16348      686D6172 
 16348      6B696E67 
 16348      2E2E2E20 
 16348      77697468 
 16349 0547 00       		.align 8
 16350              	.LC62:
 16351 0548 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 16351      65727661 
 16351      6E64616D 
GAS LISTING /tmp/cc7rm34x.s 			page 437


 16351      5F657874 
 16351      656E643B 
 16352 058a 00000000 		.align 8
 16352      0000
 16353              	.LC63:
 16354 0590 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 16354      6573202D 
 16354      20706572 
 16354      20352073 
 16354      65636F6E 
 16355              		.section	.rodata.str1.1
 16356              	.LC64:
 16357 01b3 53686F77 		.string	"Show result set:"
 16357      20726573 
 16357      756C7420 
 16357      7365743A 
 16357      00
 16358              		.section	.text.startup,"ax",@progbits
 16359              		.p2align 4
 16360              		.globl	main
 16362              	main:
 16363              	.LVL986:
 16364              	.LFB95:
1411:sieve_extend.c **** 
1412:sieve_extend.c **** //void test4(bitword_t* __restrict bitarray, counter_t max) {
1413:sieve_extend.c **** //    bitvector_t* bitvector = (bitvector_t*) bitarray;
1414:sieve_extend.c **** //    for (register int x=0; x<max; ) {
1415:sieve_extend.c **** //        register bitvector_t mask = {};
1416:sieve_extend.c **** //        register counter_t index_vector = vectorstart(x);
1417:sieve_extend.c **** //        register counter_t index_word = wordindex(x);
1418:sieve_extend.c **** //        register word = wordindex(x);
1419:sieve_extend.c **** //        #pragma GCC ivdep
1420:sieve_extend.c **** //        do {
1421:sieve_extend.c **** //            mask[word[] |= markmask(x);
1422:sieve_extend.c **** //            x++;
1423:sieve_extend.c **** //            word =
1424:sieve_extend.c **** //        } while(wordstart(x)==index_word);
1425:sieve_extend.c **** //        bitvector[wordindex(index_word)] = mask;
1426:sieve_extend.c **** //    }
1427:sieve_extend.c **** //}
1428:sieve_extend.c **** 
1429:sieve_extend.c **** int main(int argc, char *argv[]) {
 16365              		.loc 1 1429 34 is_stmt 1 view -0
 16366              		.cfi_startproc
 16367              		.loc 1 1429 34 is_stmt 0 view .LVU5452
 16368 0000 F30F1EFA 		endbr64	
 16369 0004 4157     		push	r15	#
 16370              		.cfi_def_cfa_offset 16
 16371              		.cfi_offset 15, -16
 16372 0006 4156     		push	r14	#
 16373              		.cfi_def_cfa_offset 24
 16374              		.cfi_offset 14, -24
 16375 0008 4155     		push	r13	#
 16376              		.cfi_def_cfa_offset 32
 16377              		.cfi_offset 13, -32
 16378 000a 4154     		push	r12	#
 16379              		.cfi_def_cfa_offset 40
GAS LISTING /tmp/cc7rm34x.s 			page 438


 16380              		.cfi_offset 12, -40
 16381 000c 55       		push	rbp	#
 16382              		.cfi_def_cfa_offset 48
 16383              		.cfi_offset 6, -48
 16384 000d 53       		push	rbx	#
 16385              		.cfi_def_cfa_offset 56
 16386              		.cfi_offset 3, -56
 16387 000e 488DA424 		lea	rsp, -248[rsp]	#,
 16387      08FFFFFF 
 16388              		.cfi_def_cfa_offset 304
 16389              	# sieve_extend.c:1429: int main(int argc, char *argv[]) {
 16390              		.loc 1 1429 34 view .LVU5453
 16391 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp571, MEM[(<address-space-1> long unsigned int *)40B]
 16391      25280000 
 16391      00
 16392 001f 48898424 		mov	QWORD PTR 232[rsp], rax	# D.7510, tmp571
 16392      E8000000 
 16393 0027 31C0     		xor	eax, eax	# tmp571
1430:sieve_extend.c ****     
1431:sieve_extend.c ****     // struct sieve_state* sieve_instance = sieve(1000000, default_blocksize);
1432:sieve_extend.c ****     // int passes1 = benchmark(1, test , sieve_instance->bitarray, 500000);
1433:sieve_extend.c ****     // int passes2 = benchmark(1, test2, sieve_instance->bitarray, 500000);
1434:sieve_extend.c ****     // int passes3 = benchmark(1, test3, sieve_instance->bitarray, 500000);
1435:sieve_extend.c ****     // delete_sieve(sieve_instance);
1436:sieve_extend.c ****     // printf("Passes1:"); printfcomma2(passes1);printf("\n");
1437:sieve_extend.c ****     // printf("Passes2:"); printfcomma2(passes2);printf("\n");
1438:sieve_extend.c ****     // printf("Passes3:"); printfcomma2(passes3);printf("\n");
1439:sieve_extend.c ****     // exit(0);
1440:sieve_extend.c ****     
1441:sieve_extend.c ****     
1442:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 16394              		.loc 1 1442 5 is_stmt 1 view .LVU5454
 16395              	# sieve_extend.c:1442:     counter_t option_maxFactor  = default_sieve_limit;
 16396              		.loc 1 1442 15 is_stmt 0 view .LVU5455
 16397 0029 48C78424 		mov	QWORD PTR 176[rsp], 1000000	# option_maxFactor,
 16397      B0000000 
 16397      40420F00 
1443:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 16398              		.loc 1 1443 5 is_stmt 1 view .LVU5456
 16399              	.LBB1053:
 16400              	# sieve_extend.c:1448:     for (int arg=1; arg < argc; arg++) {
1444:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1445:sieve_extend.c ****     int option_check = default_check_level;
1446:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1447:sieve_extend.c **** 
1448:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 16401              		.loc 1 1448 5 is_stmt 0 view .LVU5457
 16402 0035 83FF01   		cmp	edi, 1	# argc,
 16403              	.LBE1053:
 16404              	# sieve_extend.c:1443:     counter_t option_showMaxFactor = default_showMaxFactor;
1443:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 16405              		.loc 1 1443 15 view .LVU5458
 16406 0038 48C78424 		mov	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 16406      B8000000 
 16406      00000000 
1444:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 16407              		.loc 1 1444 5 is_stmt 1 view .LVU5459
GAS LISTING /tmp/cc7rm34x.s 			page 439


 16408              	# sieve_extend.c:1444:     int option_verboselevel = default_verbose_level;
1444:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 16409              		.loc 1 1444 9 is_stmt 0 view .LVU5460
 16410 0044 C78424A8 		mov	DWORD PTR 168[rsp], 1	# option_verboselevel,
 16410      00000001 
 16410      000000
1445:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 16411              		.loc 1 1445 5 is_stmt 1 view .LVU5461
 16412              	.LVL987:
1446:sieve_extend.c **** 
 16413              		.loc 1 1446 5 view .LVU5462
 16414              	# sieve_extend.c:1446:     int option_tunelevel = default_tune_level;
1446:sieve_extend.c **** 
 16415              		.loc 1 1446 9 is_stmt 0 view .LVU5463
 16416 004f C78424AC 		mov	DWORD PTR 172[rsp], 0	# option_tunelevel,
 16416      00000000 
 16416      000000
 16417              		.loc 1 1448 5 is_stmt 1 view .LVU5464
 16418              	.LBB1078:
 16419              		.loc 1 1448 10 view .LVU5465
 16420              	.LVL988:
 16421              		.loc 1 1448 21 view .LVU5466
 16422              	# sieve_extend.c:1448:     for (int arg=1; arg < argc; arg++) {
 16423              		.loc 1 1448 5 is_stmt 0 view .LVU5467
 16424 005a 0F8E2C05 		jle	.L1336	#,
 16424      0000
 16425 0060 89FD     		mov	ebp, edi	# argc, tmp527
 16426 0062 4989F4   		mov	r12, rsi	# argv, tmp528
 16427              	# sieve_extend.c:1448:     for (int arg=1; arg < argc; arg++) {
 16428              		.loc 1 1448 14 view .LVU5468
 16429 0065 BB010000 		mov	ebx, 1	# arg,
 16429      00
 16430 006a 4C8D2D00 		lea	r13, .LC30[rip]	# tmp467,
 16430      000000
 16431              	# sieve_extend.c:1450:         else if (strcmp(argv[arg], "--verbose")==0) {
1449:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1450:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 16432              		.loc 1 1450 18 view .LVU5469
 16433 0071 4C8D3500 		lea	r14, .LC31[rip]	# tmp482,
 16433      000000
 16434 0078 EB66     		jmp	.L1319	#
 16435              	.LVL989:
 16436 007a 660F1F44 		.p2align 4,,7
 16436      0000
 16437              		.p2align 3
 16438              	.L1455:
1451:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 16439              		.loc 1 1451 13 is_stmt 1 view .LVU5470
 16440              	# sieve_extend.c:1451:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 16441              		.loc 1 1451 16 is_stmt 0 view .LVU5471
 16442 0080 83C301   		add	ebx, 1	# arg,
 16443              	.LVL990:
 16444              		.loc 1 1451 16 view .LVU5472
 16445 0083 39DD     		cmp	ebp, ebx	# argc, arg
 16446 0085 0F8E2B0F 		jle	.L1453	#,
 16446      0000
1452:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
GAS LISTING /tmp/cc7rm34x.s 			page 440


 16447              		.loc 1 1452 13 is_stmt 1 view .LVU5473
 16448              	# sieve_extend.c:1452:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 16449              		.loc 1 1452 28 is_stmt 0 view .LVU5474
 16450 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 16450      08
 16451              	# sieve_extend.c:1452:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 16452              		.loc 1 1452 17 view .LVU5475
 16453 0090 488D9424 		lea	rdx, 168[rsp]	# tmp303,
 16453      A8000000 
 16454 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 16455 009b 31C0     		xor	eax, eax	#
 16456 009d 488D3500 		lea	rsi, .LC26[rip]	#,
 16456      000000
 16457 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 16457      00
 16458              	.LVL991:
 16459              	# sieve_extend.c:1452:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 16460              		.loc 1 1452 16 view .LVU5476
 16461 00a9 83F801   		cmp	eax, 1	# tmp529,
 16462 00ac 0F850C05 		jne	.L1325	#,
 16462      0000
 16463              	# sieve_extend.c:1452:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 16464              		.loc 1 1452 91 discriminator 1 view .LVU5477
 16465 00b2 8B9424A8 		mov	edx, DWORD PTR 168[rsp]	# option_verboselevel.16_19, option_verboselevel
 16465      000000
 16466              	# sieve_extend.c:1452:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 16467              		.loc 1 1452 68 discriminator 1 view .LVU5478
 16468 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 16469 00bc 0F8FFC04 		jg	.L1325	#,
 16469      0000
1453:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1454:sieve_extend.c ****             }
1455:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 16470              		.loc 1 1455 13 is_stmt 1 view .LVU5479
 16471              	.LVL992:
 16472              	.LBB1054:
 16473              	.LBI1054:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16474              		.loc 3 105 1 view .LVU5480
 16475              	.LBB1055:
 16476              		.loc 3 107 3 view .LVU5481
 16477              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16478              		.loc 3 107 10 is_stmt 0 view .LVU5482
 16479 00c2 488D3500 		lea	rsi, .LC34[rip]	#,
 16479      000000
 16480 00c9 BF010000 		mov	edi, 1	#,
 16480      00
 16481 00ce 31C0     		xor	eax, eax	#
 16482 00d0 E8000000 		call	__printf_chk@PLT	#
 16482      00
 16483              	.LVL993:
 16484              	.L1327:
 16485              		.loc 3 107 10 view .LVU5483
 16486              	.LBE1055:
 16487              	.LBE1054:
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16488              		.loc 1 1448 33 is_stmt 1 discriminator 2 view .LVU5484
GAS LISTING /tmp/cc7rm34x.s 			page 441


 16489              	# sieve_extend.c:1448:     for (int arg=1; arg < argc; arg++) {
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16490              		.loc 1 1448 36 is_stmt 0 discriminator 2 view .LVU5485
 16491 00d5 83C301   		add	ebx, 1	# arg,
 16492              	.LVL994:
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16493              		.loc 1 1448 21 is_stmt 1 discriminator 2 view .LVU5486
 16494              	# sieve_extend.c:1448:     for (int arg=1; arg < argc; arg++) {
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16495              		.loc 1 1448 5 is_stmt 0 discriminator 2 view .LVU5487
 16496 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 16497 00da 0F8E0001 		jle	.L1454	#,
 16497      0000
 16498              	.LVL995:
 16499              	.L1319:
1449:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 16500              		.loc 1 1449 9 is_stmt 1 view .LVU5488
 16501              	# sieve_extend.c:1449:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1449:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 16502              		.loc 1 1449 24 is_stmt 0 view .LVU5489
 16503 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 16504              	# sieve_extend.c:1449:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1449:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 16505              		.loc 1 1449 13 view .LVU5490
 16506 00e3 41B90700 		mov	r9d, 7	# tmp292,
 16506      0000
 16507              	# sieve_extend.c:1449:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1449:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 16508              		.loc 1 1449 24 view .LVU5491
 16509 00e9 48C1E003 		sal	rax, 3	# _2,
 16510              	# sieve_extend.c:1449:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1449:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 16511              		.loc 1 1449 13 view .LVU5492
 16512 00ed 4C89EF   		mov	rdi, r13	# tmp291, tmp467
 16513              	# sieve_extend.c:1449:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1449:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 16514              		.loc 1 1449 24 view .LVU5493
 16515 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 16516              	# sieve_extend.c:1449:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1449:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 16517              		.loc 1 1449 13 view .LVU5494
 16518 00f4 4C89C9   		mov	rcx, r9	# tmp493, tmp292
 16519 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 16520 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 16521 00fd F3A6     		repz cmpsb
 16522 00ff 0F97C2   		seta	dl	#, tmp293
 16523 0102 80DA00   		sbb	dl, 0	# _5
 16524              	# sieve_extend.c:1449:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1449:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 16525              		.loc 1 1449 12 view .LVU5495
 16526 0105 84D2     		test	dl, dl	# _5
 16527 0107 0F84CE04 		je	.L1451	#,
 16527      0000
1450:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 16528              		.loc 1 1450 14 is_stmt 1 view .LVU5496
 16529              	# sieve_extend.c:1450:         else if (strcmp(argv[arg], "--verbose")==0) {
1450:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
GAS LISTING /tmp/cc7rm34x.s 			page 442


 16530              		.loc 1 1450 18 is_stmt 0 view .LVU5497
 16531 010d B90A0000 		mov	ecx, 10	# tmp298,
 16531      00
 16532 0112 4C89C6   		mov	rsi, r8	# _4, _4
 16533 0115 4C89F7   		mov	rdi, r14	# tmp297, tmp482
 16534 0118 F3A6     		repz cmpsb
 16535 011a 410F97C2 		seta	r10b	#, tmp299
 16536 011e 4180DA00 		sbb	r10b, 0	# _11
 16537              	# sieve_extend.c:1450:         else if (strcmp(argv[arg], "--verbose")==0) {
1450:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 16538              		.loc 1 1450 17 view .LVU5498
 16539 0122 4584D2   		test	r10b, r10b	# _11
 16540 0125 0F8455FF 		je	.L1455	#,
 16540      FFFF
1456:sieve_extend.c ****         } 
1457:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 16541              		.loc 1 1457 14 is_stmt 1 view .LVU5499
 16542              	# sieve_extend.c:1457:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 16543              		.loc 1 1457 18 is_stmt 0 view .LVU5500
 16544 012b B9080000 		mov	ecx, 8	# tmp308,
 16544      00
 16545 0130 4C89C6   		mov	rsi, r8	# _4, _4
 16546 0133 488D3D00 		lea	rdi, .LC35[rip]	# tmp307,
 16546      000000
 16547 013a F3A6     		repz cmpsb
 16548 013c 410F97C3 		seta	r11b	#, tmp309
 16549 0140 4180DB00 		sbb	r11b, 0	# _23
 16550              	# sieve_extend.c:1457:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 16551              		.loc 1 1457 17 view .LVU5501
 16552 0144 4584DB   		test	r11b, r11b	# _23
 16553 0147 748C     		je	.L1327	#,
1458:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 16554              		.loc 1 1458 14 is_stmt 1 view .LVU5502
 16555              	# sieve_extend.c:1458:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 16556              		.loc 1 1458 18 is_stmt 0 view .LVU5503
 16557 0149 4C89C6   		mov	rsi, r8	# _4, _4
 16558 014c 488D3D00 		lea	rdi, .LC36[rip]	# tmp313,
 16558      000000
 16559 0153 4C89C9   		mov	rcx, r9	# tmp499, tmp292
 16560 0156 F3A6     		repz cmpsb
 16561 0158 0F97C2   		seta	dl	#, tmp315
 16562 015b 80DA00   		sbb	dl, 0	# _24
 16563              	# sieve_extend.c:1458:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 16564              		.loc 1 1458 17 view .LVU5504
 16565 015e 84D2     		test	dl, dl	# _24
 16566 0160 0F855A01 		jne	.L1328	#,
 16566      0000
 16567              		.loc 1 1458 52 is_stmt 1 discriminator 1 view .LVU5505
 16568              	# sieve_extend.c:1458:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 16569              		.loc 1 1458 68 is_stmt 0 discriminator 1 view .LVU5506
 16570 0166 C78424AC 		mov	DWORD PTR 172[rsp], 0	# option_tunelevel,
 16570      00000000 
 16570      000000
1459:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 16571              		.loc 1 1459 13 is_stmt 1 discriminator 1 view .LVU5507
 16572              	# sieve_extend.c:1459:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 16573              		.loc 1 1459 16 is_stmt 0 discriminator 1 view .LVU5508
GAS LISTING /tmp/cc7rm34x.s 			page 443


 16574 0171 83C301   		add	ebx, 1	# arg,
 16575              	.LVL996:
 16576              		.loc 1 1459 16 discriminator 1 view .LVU5509
 16577 0174 39DD     		cmp	ebp, ebx	# argc, arg
 16578 0176 0F8E7A0E 		jle	.L1456	#,
 16578      0000
1460:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 16579              		.loc 1 1460 13 is_stmt 1 view .LVU5510
 16580              	# sieve_extend.c:1460:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 16581              		.loc 1 1460 28 is_stmt 0 view .LVU5511
 16582 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 16582      08
 16583              	# sieve_extend.c:1460:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 16584              		.loc 1 1460 17 view .LVU5512
 16585 0181 488D9424 		lea	rdx, 172[rsp]	# tmp319,
 16585      AC000000 
 16586 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 16587 018c 31C0     		xor	eax, eax	#
 16588 018e 488D3500 		lea	rsi, .LC26[rip]	#,
 16588      000000
 16589 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 16589      00
 16590              	.LVL997:
 16591              	# sieve_extend.c:1460:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 16592              		.loc 1 1460 16 view .LVU5513
 16593 019a 83F801   		cmp	eax, 1	# tmp530,
 16594 019d 0F85350E 		jne	.L1330	#,
 16594      0000
 16595              	# sieve_extend.c:1460:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 16596              		.loc 1 1460 85 discriminator 1 view .LVU5514
 16597 01a3 8B9424AC 		mov	edx, DWORD PTR 172[rsp]	# option_tunelevel.20_32, option_tunelevel
 16597      000000
 16598              	# sieve_extend.c:1460:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 16599              		.loc 1 1460 65 discriminator 1 view .LVU5515
 16600 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 16601 01ad 0F8F250E 		jg	.L1330	#,
 16601      0000
1461:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1462:sieve_extend.c ****             }
1463:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 16602              		.loc 1 1463 13 is_stmt 1 view .LVU5516
 16603              	.LVL998:
 16604              	.LBB1056:
 16605              	.LBI1056:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16606              		.loc 3 105 1 view .LVU5517
 16607              	.LBB1057:
 16608              		.loc 3 107 3 view .LVU5518
 16609              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16610              		.loc 3 107 10 is_stmt 0 view .LVU5519
 16611 01b3 31C0     		xor	eax, eax	#
 16612 01b5 488D3500 		lea	rsi, .LC39[rip]	#,
 16612      000000
 16613 01bc BF010000 		mov	edi, 1	#,
 16613      00
 16614              	.LBE1057:
 16615              	.LBE1056:
GAS LISTING /tmp/cc7rm34x.s 			page 444


 16616              	# sieve_extend.c:1448:     for (int arg=1; arg < argc; arg++) {
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16617              		.loc 1 1448 36 view .LVU5520
 16618 01c1 83C301   		add	ebx, 1	# arg,
 16619              	.LVL999:
 16620              	.LBB1059:
 16621              	.LBB1058:
 16622              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16623              		.loc 3 107 10 view .LVU5521
 16624 01c4 E8000000 		call	__printf_chk@PLT	#
 16624      00
 16625              	.LVL1000:
 16626              		.loc 3 107 10 view .LVU5522
 16627              	.LBE1058:
 16628              	.LBE1059:
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16629              		.loc 1 1448 33 is_stmt 1 view .LVU5523
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16630              		.loc 1 1448 21 view .LVU5524
 16631              	# sieve_extend.c:1448:     for (int arg=1; arg < argc; arg++) {
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16632              		.loc 1 1448 5 is_stmt 0 view .LVU5525
 16633 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 16634 01cb 0F8F0FFF 		jg	.L1319	#,
 16634      FFFF
 16635 01d1 66662E0F 		.p2align 4
 16635      1F840000 
 16635      0000000F 
 16635      1F4000
 16636              		.p2align 3
 16637              	.L1454:
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16638              		.loc 1 1448 5 view .LVU5526
 16639              	.LBE1078:
1464:sieve_extend.c ****         }
1465:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1466:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1467:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1468:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1469:sieve_extend.c ****             }
1470:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1471:sieve_extend.c ****         }
1472:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1473:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1474:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1475:sieve_extend.c ****         }
1476:sieve_extend.c ****     }
1477:sieve_extend.c **** 
1478:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 16640              		.loc 1 1478 5 is_stmt 1 view .LVU5527
1479:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1480:sieve_extend.c ****         printf("\nResult set:\n");
1481:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1482:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,3);
1483:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1484:sieve_extend.c ****         else printf("The sieve is VALID\n");
1485:sieve_extend.c ****         delete_sieve(sieve_instance);
GAS LISTING /tmp/cc7rm34x.s 			page 445


1486:sieve_extend.c ****         exit(0);
1487:sieve_extend.c ****     }
1488:sieve_extend.c **** 
1489:sieve_extend.c ****     struct timespec start_time,end_time;
 16641              		.loc 1 1489 5 view .LVU5528
1490:sieve_extend.c **** 
1491:sieve_extend.c ****     if (option_verboselevel >=1) {
 16642              		.loc 1 1491 5 view .LVU5529
 16643              	# sieve_extend.c:1491:     if (option_verboselevel >=1) {
 16644              		.loc 1 1491 8 is_stmt 0 view .LVU5530
 16645 01e0 8BAC24A8 		mov	ebp, DWORD PTR 168[rsp]	#, option_verboselevel
 16645      000000
 16646              	.LVL1001:
 16647              		.loc 1 1491 8 view .LVU5531
 16648 01e7 85ED     		test	ebp, ebp	#
 16649 01e9 0F8F9D03 		jg	.L1336	#,
 16649      0000
 16650              	.LVL1002:
 16651              	.L1337:
1492:sieve_extend.c ****         #if __APPLE__
1493:sieve_extend.c ****             printf("Apple detected. Using arrays instead of pointers\n");
1494:sieve_extend.c ****         #else
1495:sieve_extend.c ****             printf("Using Pointers\n");
1496:sieve_extend.c ****         #endif
1497:sieve_extend.c ****     }
1498:sieve_extend.c ****         
1499:sieve_extend.c ****     if (option_check) {
1500:sieve_extend.c ****         // Count the number of primes and validate the result
1501:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
1502:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 16652              		.loc 1 1502 9 is_stmt 1 view .LVU5532
 16653              	# sieve_extend.c:1502:         if (option_verboselevel >= 2) printf("\n");
 16654              		.loc 1 1502 12 is_stmt 0 view .LVU5533
 16655 01ef 83BC24A8 		cmp	DWORD PTR 168[rsp], 1	# option_verboselevel,
 16655      00000001 
 16656 01f7 7E0A     		jle	.L1338	#,
 16657              		.loc 1 1502 39 is_stmt 1 view .LVU5534
 16658              	.LVL1003:
 16659              	.LBB1079:
 16660              	.LBI1079:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16661              		.loc 3 105 1 view .LVU5535
 16662              	.LBB1080:
 16663              		.loc 3 107 3 view .LVU5536
 16664              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16665              		.loc 3 107 10 is_stmt 0 view .LVU5537
 16666 01f9 BF0A0000 		mov	edi, 10	#,
 16666      00
 16667 01fe E8000000 		call	putchar@PLT	#
 16667      00
 16668              	.LVL1004:
 16669              	.L1338:
 16670              		.loc 3 107 10 view .LVU5538
 16671              	.LBE1080:
 16672              	.LBE1079:
 16673              	.LBB1081:
 16674              	# sieve_extend.c:1448:     for (int arg=1; arg < argc; arg++) {
GAS LISTING /tmp/cc7rm34x.s 			page 446


1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16675              		.loc 1 1448 14 view .LVU5539
 16676 0203 C7442428 		mov	DWORD PTR 40[rsp], 7	# %sfp,
 16676      07000000 
 16677 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 16677      0000
 16678              	.LBE1081:
 16679              	.LBB1082:
 16680              	.LBB1083:
 16681              	.LBB1084:
 16682              	.LBB1085:
 16683              	.LBB1086:
 16684              	.LBB1087:
 16685              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16686              		.loc 3 107 10 view .LVU5540
 16687 0211 4C8D3500 		lea	r14, .LC48[rip]	# tmp481,
 16687      000000
 16688              	.L1345:
 16689              	.LVL1005:
 16690              		.loc 3 107 10 view .LVU5541
 16691              	.LBE1087:
 16692              	.LBE1086:
 16693              	.LBE1085:
 16694              	.LBE1084:
1503:sieve_extend.c **** 
1504:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1505:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1506:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 16695              		.loc 1 1506 13 is_stmt 1 view .LVU5542
 16696              	# sieve_extend.c:1506:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 16697              		.loc 1 1506 37 is_stmt 0 view .LVU5543
 16698 0218 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 16698      000000
 16699              	# sieve_extend.c:1506:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 16700              		.loc 1 1506 16 view .LVU5544
 16701 021f 83F801   		cmp	eax, 1	# prephitmp_67,
 16702 0222 7E1D     		jle	.L1339	#,
 16703              		.loc 1 1506 43 is_stmt 1 view .LVU5545
 16704              	.LVL1006:
 16705              	.LBB1103:
 16706              	.LBI1103:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16707              		.loc 3 105 1 view .LVU5546
 16708              	.LBB1104:
 16709              		.loc 3 107 3 view .LVU5547
 16710              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16711              		.loc 3 107 10 is_stmt 0 view .LVU5548
 16712 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 16713 0227 488D3500 		lea	rsi, .LC47[rip]	#,
 16713      000000
 16714 022e BF010000 		mov	edi, 1	#,
 16714      00
 16715 0233 31C0     		xor	eax, eax	#
 16716 0235 E8000000 		call	__printf_chk@PLT	#
 16716      00
 16717              	.LVL1007:
 16718 023a 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
GAS LISTING /tmp/cc7rm34x.s 			page 447


 16718      000000
 16719              	.LVL1008:
 16720              	.L1339:
 16721              		.loc 3 107 10 view .LVU5549
 16722              	.LBE1104:
 16723              	.LBE1103:
 16724              	.LBE1083:
 16725              	.LBE1082:
 16726              	.LBB1113:
 16727              	# sieve_extend.c:1448:     for (int arg=1; arg < argc; arg++) {
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16728              		.loc 1 1448 14 view .LVU5550
 16729 0241 41BC0500 		mov	r12d, 5	# ivtmp_69,
 16729      0000
 16730 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 16730      00
 16731 024c EB56     		jmp	.L1343	#
 16732              	.LVL1009:
 16733 024e 6690     		.p2align 4,,7
 16734              		.p2align 3
 16735              	.L1340:
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 16736              		.loc 1 1448 14 view .LVU5551
 16737              	.LBE1113:
 16738              	.LBB1114:
 16739              	.LBB1110:
 16740              	.LBB1105:
 16741              	.LBB1098:
1507:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1508:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1509:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1510:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 16742              		.loc 1 1510 17 is_stmt 1 view .LVU5552
 16743              	# sieve_extend.c:1510:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 16744              		.loc 1 1510 40 is_stmt 0 view .LVU5553
 16745 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 16746 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 16747 0256 E8000000 		call	sieve	#
 16747      00
 16748              	.LVL1010:
 16749              	# sieve_extend.c:1511:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1511:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 16750              		.loc 1 1511 29 view .LVU5554
 16751 025b 8BB424A8 		mov	esi, DWORD PTR 168[rsp]	#, option_verboselevel
 16751      000000
 16752              	# sieve_extend.c:1510:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1510:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 16753              		.loc 1 1510 40 view .LVU5555
 16754 0262 4989C7   		mov	r15, rax	# sieve_instance_check, tmp533
 16755              	.LVL1011:
 16756              		.loc 1 1511 17 is_stmt 1 view .LVU5556
 16757              	# sieve_extend.c:1511:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 16758              		.loc 1 1511 29 is_stmt 0 view .LVU5557
 16759 0265 4889C7   		mov	rdi, rax	#, sieve_instance_check
 16760 0268 E8000000 		call	validatePrimeCount	#
 16760      00
 16761              	.LVL1012:
GAS LISTING /tmp/cc7rm34x.s 			page 448


 16762              	.LBB1089:
 16763              	.LBB1090:
 16764              	# sieve_extend.c:118:     free(sieve->bitarray);
 118:sieve_extend.c ****     free(sieve);
 16765              		.loc 1 118 5 view .LVU5558
 16766 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_check_130->bitarray
 16767              	.LBE1090:
 16768              	.LBE1089:
 16769              	# sieve_extend.c:1511:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 16770              		.loc 1 1511 29 view .LVU5559
 16771 0270 89C3     		mov	ebx, eax	# valid, tmp534
 16772              	.LVL1013:
1512:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 16773              		.loc 1 1512 17 is_stmt 1 view .LVU5560
 16774              	.LBB1092:
 16775              	.LBI1089:
 117:sieve_extend.c ****     free(sieve->bitarray);
 16776              		.loc 1 117 13 view .LVU5561
 16777              	.LBB1091:
 118:sieve_extend.c ****     free(sieve);
 16778              		.loc 1 118 5 view .LVU5562
 16779 0272 E8000000 		call	free@PLT	#
 16779      00
 16780              	.LVL1014:
 119:sieve_extend.c **** }
 16781              		.loc 1 119 5 view .LVU5563
 16782 0277 4C89FF   		mov	rdi, r15	#, sieve_instance_check
 16783 027a E8000000 		call	free@PLT	#
 16783      00
 16784              	.LVL1015:
 119:sieve_extend.c **** }
 16785              		.loc 1 119 5 is_stmt 0 view .LVU5564
 16786              	.LBE1091:
 16787              	.LBE1092:
1513:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 16788              		.loc 1 1513 17 is_stmt 1 view .LVU5565
 16789              	# sieve_extend.c:1513:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 16790              		.loc 1 1513 20 is_stmt 0 view .LVU5566
 16791 027f 85DB     		test	ebx, ebx	# valid
 16792 0281 0F84D902 		je	.L1381	#,
 16792      0000
 16793              		.loc 1 1513 44 is_stmt 1 discriminator 2 view .LVU5567
 16794              	# sieve_extend.c:1513:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 16795              		.loc 1 1513 68 is_stmt 0 discriminator 2 view .LVU5568
 16796 0287 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 16796      000000
 16797              	# sieve_extend.c:1513:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 16798              		.loc 1 1513 47 discriminator 2 view .LVU5569
 16799 028e 83F802   		cmp	eax, 2	# prephitmp_67,
 16800 0291 0F8FE900 		jg	.L1457	#,
 16800      0000
 16801              	.LBE1098:
1508:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 16802              		.loc 1 1508 75 is_stmt 1 discriminator 2 view .LVU5570
 16803              	# sieve_extend.c:1508:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1508:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 16804              		.loc 1 1508 90 is_stmt 0 discriminator 2 view .LVU5571
GAS LISTING /tmp/cc7rm34x.s 			page 449


 16805 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 16806              	.LVL1016:
1508:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 16807              		.loc 1 1508 49 is_stmt 1 discriminator 2 view .LVU5572
 16808              	# sieve_extend.c:1508:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1508:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 16809              		.loc 1 1508 13 is_stmt 0 discriminator 2 view .LVU5573
 16810 029a 4183EC01 		sub	r12d, 1	# ivtmp_69,
 16811 029e 0F840301 		je	.L1458	#,
 16811      0000
 16812              	.LVL1017:
 16813              	.L1343:
 16814              	.LBB1099:
1509:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 16815              		.loc 1 1509 17 is_stmt 1 view .LVU5574
 16816              	# sieve_extend.c:1509:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1509:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 16817              		.loc 1 1509 20 is_stmt 0 view .LVU5575
 16818 02a4 83F802   		cmp	eax, 2	# prephitmp_67,
 16819 02a7 7EA7     		jle	.L1340	#,
1509:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 16820              		.loc 1 1509 47 is_stmt 1 view .LVU5576
 16821              	.LVL1018:
 16822              	.LBB1093:
 16823              	.LBI1086:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16824              		.loc 3 105 1 view .LVU5577
 16825              	.LBB1088:
 16826              		.loc 3 107 3 view .LVU5578
 16827              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16828              		.loc 3 107 10 is_stmt 0 view .LVU5579
 16829 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 16830 02ac 4C89F6   		mov	rsi, r14	#, tmp481
 16831 02af BF010000 		mov	edi, 1	#,
 16831      00
 16832 02b4 31C0     		xor	eax, eax	#
 16833 02b6 E8000000 		call	__printf_chk@PLT	#
 16833      00
 16834              	.LVL1019:
 16835 02bb EB93     		jmp	.L1340	#
 16836              	.LVL1020:
 16837 02bd 0F1F00   		.p2align 4,,7
 16838              		.p2align 3
 16839              	.L1328:
 16840              		.loc 3 107 10 view .LVU5580
 16841              	.LBE1088:
 16842              	.LBE1093:
 16843              	.LBE1099:
 16844              	.LBE1105:
 16845              	.LBE1110:
 16846              	.LBE1114:
 16847              	.LBB1115:
1465:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 16848              		.loc 1 1465 14 is_stmt 1 view .LVU5581
 16849              	# sieve_extend.c:1465:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1465:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 16850              		.loc 1 1465 18 is_stmt 0 view .LVU5582
GAS LISTING /tmp/cc7rm34x.s 			page 450


 16851 02c0 4C89C9   		mov	rcx, r9	# tmp292, tmp292
 16852 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 16853 02c6 488D3D00 		lea	rdi, .LC40[rip]	# tmp323,
 16853      000000
 16854 02cd F3A6     		repz cmpsb
 16855 02cf 410F97C1 		seta	r9b	#, tmp325
 16856 02d3 4180D900 		sbb	r9b, 0	# _36
 16857              	# sieve_extend.c:1465:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1465:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 16858              		.loc 1 1465 17 view .LVU5583
 16859 02d7 4584C9   		test	r9b, r9b	# _36
 16860 02da 756C     		jne	.L1332	#,
1465:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 16861              		.loc 1 1465 52 is_stmt 1 discriminator 1 view .LVU5584
 16862              	# sieve_extend.c:1465:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1465:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 16863              		.loc 1 1465 72 is_stmt 0 discriminator 1 view .LVU5585
 16864 02dc 48C78424 		mov	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 16864      B8000000 
 16864      00000000 
1466:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 16865              		.loc 1 1466 13 is_stmt 1 discriminator 1 view .LVU5586
 16866              	# sieve_extend.c:1466:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1466:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 16867              		.loc 1 1466 16 is_stmt 0 discriminator 1 view .LVU5587
 16868 02e8 83C301   		add	ebx, 1	# arg,
 16869              	.LVL1021:
1466:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 16870              		.loc 1 1466 16 discriminator 1 view .LVU5588
 16871 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 16872 02ed 0F8E2E0D 		jle	.L1459	#,
 16872      0000
1467:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 16873              		.loc 1 1467 13 is_stmt 1 view .LVU5589
 16874              	# sieve_extend.c:1467:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1467:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 16875              		.loc 1 1467 28 is_stmt 0 view .LVU5590
 16876 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 16876      08
 16877              	# sieve_extend.c:1467:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1467:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 16878              		.loc 1 1467 17 view .LVU5591
 16879 02f8 488D9424 		lea	rdx, 184[rsp]	# tmp329,
 16879      B8000000 
 16880 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 16881 0303 31C0     		xor	eax, eax	#
 16882 0305 488D3500 		lea	rsi, .LC42[rip]	#,
 16882      000000
 16883 030c E8000000 		call	__isoc99_sscanf@PLT	#
 16883      00
 16884              	.LVL1022:
 16885              	# sieve_extend.c:1467:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1467:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 16886              		.loc 1 1467 16 view .LVU5592
 16887 0311 83F801   		cmp	eax, 1	# tmp531,
 16888 0314 0F85CD0C 		jne	.L1334	#,
 16888      0000
GAS LISTING /tmp/cc7rm34x.s 			page 451


 16889              	# sieve_extend.c:1467:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1467:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 16890              		.loc 1 1467 106 discriminator 1 view .LVU5593
 16891 031a 488B9424 		mov	rdx, QWORD PTR 184[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 16891      B8000000 
 16892              	# sieve_extend.c:1467:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1467:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 16893              		.loc 1 1467 82 discriminator 1 view .LVU5594
 16894 0322 483B9424 		cmp	rdx, QWORD PTR 176[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 16894      B0000000 
 16895 032a 0F87B70C 		ja	.L1334	#,
 16895      0000
1470:sieve_extend.c ****         }
 16896              		.loc 1 1470 13 is_stmt 1 view .LVU5595
 16897              	.LVL1023:
 16898              	.LBB1060:
 16899              	.LBI1060:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16900              		.loc 3 105 1 view .LVU5596
 16901              	.LBB1061:
 16902              		.loc 3 107 3 view .LVU5597
 16903              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16904              		.loc 3 107 10 is_stmt 0 view .LVU5598
 16905 0330 488D3500 		lea	rsi, .LC44[rip]	#,
 16905      000000
 16906 0337 BF010000 		mov	edi, 1	#,
 16906      00
 16907 033c 31C0     		xor	eax, eax	#
 16908 033e E8000000 		call	__printf_chk@PLT	#
 16908      00
 16909              	.LVL1024:
 16910 0343 E98DFDFF 		jmp	.L1327	#
 16910      FF
 16911              	.LVL1025:
 16912              		.p2align 4,,7
 16913              		.p2align 3
 16914              	.L1332:
 16915              		.loc 3 107 10 view .LVU5599
 16916              	.LBE1061:
 16917              	.LBE1060:
1472:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 16918              		.loc 1 1472 14 is_stmt 1 view .LVU5600
 16919              	# sieve_extend.c:1472:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1472:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 16920              		.loc 1 1472 18 is_stmt 0 view .LVU5601
 16921 0348 31C0     		xor	eax, eax	#
 16922 034a 488D9424 		lea	rdx, 176[rsp]	# tmp331,
 16922      B0000000 
 16923 0352 488D3500 		lea	rsi, .LC42[rip]	#,
 16923      000000
 16924 0359 4C89C7   		mov	rdi, r8	#, _4
 16925 035c E8000000 		call	__isoc99_sscanf@PLT	#
 16925      00
 16926              	.LVL1026:
 16927              	# sieve_extend.c:1472:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1472:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 16928              		.loc 1 1472 17 view .LVU5602
GAS LISTING /tmp/cc7rm34x.s 			page 452


 16929 0361 83F801   		cmp	eax, 1	# tmp532,
 16930 0364 0F846BFD 		je	.L1327	#,
 16930      FFFF
1473:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 16931              		.loc 1 1473 13 is_stmt 1 view .LVU5603
 16932              	.LVL1027:
 16933              	.LBB1062:
 16934              	.LBI1062:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16935              		.loc 3 98 1 view .LVU5604
 16936              	.LBB1063:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16937              		.loc 3 100 3 view .LVU5605
 16938              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16939              		.loc 3 100 10 is_stmt 0 view .LVU5606
 16940 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 16941 036d 488D1500 		lea	rdx, .LC45[rip]	#,
 16941      000000
 16942 0374 E94F0200 		jmp	.L1450	#
 16942      00
 16943              	.LVL1028:
 16944 0379 0F1F8000 		.p2align 4,,7
 16944      000000
 16945              		.p2align 3
 16946              	.L1457:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 16947              		.loc 3 100 10 view .LVU5607
 16948              	.LBE1063:
 16949              	.LBE1062:
 16950              	.LBE1115:
 16951              	.LBB1116:
 16952              	.LBB1111:
 16953              	.LBB1106:
 16954              	.LBB1100:
 16955              		.loc 1 1513 74 is_stmt 1 view .LVU5608
 16956              	.LBB1094:
 16957              	.LBI1094:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 16958              		.loc 3 105 1 view .LVU5609
 16959              	.LBB1095:
 16960              		.loc 3 107 3 view .LVU5610
 16961              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16962              		.loc 3 107 10 is_stmt 0 view .LVU5611
 16963 0380 31C0     		xor	eax, eax	#
 16964 0382 488D3500 		lea	rsi, .LC49[rip]	#,
 16964      000000
 16965 0389 BF010000 		mov	edi, 1	#,
 16965      00
 16966              	.LBE1095:
 16967              	.LBE1094:
 16968              	.LBE1100:
 16969              	# sieve_extend.c:1508:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1508:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 16970              		.loc 1 1508 90 view .LVU5612
 16971 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 16972              	.LVL1029:
GAS LISTING /tmp/cc7rm34x.s 			page 453


 16973              	.LBB1101:
 16974              	.LBB1097:
 16975              	.LBB1096:
 16976              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 16977              		.loc 3 107 10 view .LVU5613
 16978 0391 E8000000 		call	__printf_chk@PLT	#
 16978      00
 16979              	.LVL1030:
 16980 0396 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 16980      000000
 16981              	.LVL1031:
 16982              		.loc 3 107 10 view .LVU5614
 16983              	.LBE1096:
 16984              	.LBE1097:
 16985              	.LBE1101:
1508:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 16986              		.loc 1 1508 75 is_stmt 1 view .LVU5615
1508:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 16987              		.loc 1 1508 49 view .LVU5616
 16988              	# sieve_extend.c:1508:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1508:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 16989              		.loc 1 1508 13 is_stmt 0 view .LVU5617
 16990 039d 4183EC01 		sub	r12d, 1	# ivtmp_69,
 16991 03a1 0F85FDFE 		jne	.L1343	#,
 16991      FFFF
 16992              	.L1458:
1508:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 16993              		.loc 1 1508 13 view .LVU5618
 16994              	.LBE1106:
1514:sieve_extend.c ****             }
1515:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 16995              		.loc 1 1515 13 is_stmt 1 view .LVU5619
 16996              	# sieve_extend.c:1515:             if (option_verboselevel >= 2) printf("\n");
 16997              		.loc 1 1515 16 is_stmt 0 view .LVU5620
 16998 03a7 83F801   		cmp	eax, 1	# prephitmp_67,
 16999 03aa 7E0A     		jle	.L1344	#,
 17000              		.loc 1 1515 43 is_stmt 1 view .LVU5621
 17001              	.LVL1032:
 17002              	.LBB1107:
 17003              	.LBI1107:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17004              		.loc 3 105 1 view .LVU5622
 17005              	.LBB1108:
 17006              		.loc 3 107 3 view .LVU5623
 17007              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17008              		.loc 3 107 10 is_stmt 0 view .LVU5624
 17009 03ac BF0A0000 		mov	edi, 10	#,
 17009      00
 17010 03b1 E8000000 		call	putchar@PLT	#
 17010      00
 17011              	.LVL1033:
 17012              	.L1344:
 17013              		.loc 3 107 10 view .LVU5625
 17014              	.LBE1108:
 17015              	.LBE1107:
 17016              	.LBE1111:
1505:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
GAS LISTING /tmp/cc7rm34x.s 			page 454


 17017              		.loc 1 1505 77 is_stmt 1 discriminator 2 view .LVU5626
 17018              	# sieve_extend.c:1505:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1505:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17019              		.loc 1 1505 93 is_stmt 0 discriminator 2 view .LVU5627
 17020 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp337,
 17020      00
 17021              	.LVL1034:
1505:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17022              		.loc 1 1505 93 discriminator 2 view .LVU5628
 17023 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 17024              	.LVL1035:
1505:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17025              		.loc 1 1505 47 is_stmt 1 discriminator 2 view .LVU5629
 17026              	# sieve_extend.c:1505:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1505:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17027              		.loc 1 1505 9 is_stmt 0 discriminator 2 view .LVU5630
 17028 03be 836C2428 		sub	DWORD PTR 40[rsp], 1	# %sfp,
 17028      01
 17029 03c3 0F854FFE 		jne	.L1345	#,
 17029      FFFF
 17030              	.LBE1116:
1516:sieve_extend.c ****         }
1517:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 17031              		.loc 1 1517 9 is_stmt 1 view .LVU5631
 17032              	# sieve_extend.c:1517:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 17033              		.loc 1 1517 12 is_stmt 0 view .LVU5632
 17034 03c9 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 17034      00000000 
 17035 03d1 0F8FCC09 		jg	.L1460	#,
 17035      0000
1518:sieve_extend.c ****     }
1519:sieve_extend.c ****     
1520:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 17036              		.loc 1 1520 5 is_stmt 1 view .LVU5633
 17037              	.LVL1036:
1521:sieve_extend.c ****     if (option_tunelevel) {
 17038              		.loc 1 1521 5 view .LVU5634
 17039              	# sieve_extend.c:1521:     if (option_tunelevel) {
 17040              		.loc 1 1521 9 is_stmt 0 view .LVU5635
 17041 03d7 448B8424 		mov	r8d, DWORD PTR 172[rsp]	# option_tunelevel.41_405, option_tunelevel
 17041      AC000000 
 17042              	# sieve_extend.c:1520:     counter_t best_blocksize_bits = default_blocksize;
1520:sieve_extend.c ****     if (option_tunelevel) {
 17043              		.loc 1 1520 15 view .LVU5636
 17044 03df 41BC00FC 		mov	r12d, 261120	# best_result$blocksize_bits,
 17044      0300
 17045              	# sieve_extend.c:1521:     if (option_tunelevel) {
 17046              		.loc 1 1521 8 view .LVU5637
 17047 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.41_405
 17048 03e8 0F85B802 		jne	.L1461	#,
 17048      0000
 17049              	.LVL1037:
 17050              	.L1374:
 17051              	.LBB1117:
1522:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1523:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1524:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
GAS LISTING /tmp/cc7rm34x.s 			page 455


1525:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1526:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1527:sieve_extend.c ****     }
1528:sieve_extend.c **** 
1529:sieve_extend.c ****     double max_time = default_sieve_duration;
1530:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1531:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
1532:sieve_extend.c ****         counter_t passes = 0;
 17052              		.loc 1 1532 9 is_stmt 1 view .LVU5638
1533:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 17053              		.loc 1 1533 9 view .LVU5639
1534:sieve_extend.c ****         double elapsed_time = 0;
 17054              		.loc 1 1534 9 view .LVU5640
1535:sieve_extend.c ****         struct sieve_state *sieve_instance;
 17055              		.loc 1 1535 9 view .LVU5641
1536:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 17056              		.loc 1 1536 9 view .LVU5642
 17057 03ee 488DB424 		lea	rsi, 192[rsp]	# tmp440,
 17057      C0000000 
 17058 03f6 BF010000 		mov	edi, 1	#,
 17058      00
 17059 03fb E8000000 		call	clock_gettime@PLT	#
 17059      00
 17060              	.LVL1038:
1537:sieve_extend.c ****         while (elapsed_time <= max_time) {
 17061              		.loc 1 1537 9 view .LVU5643
 17062              		.loc 1 1537 15 view .LVU5644
 17063              	# sieve_extend.c:1532:         counter_t passes = 0;
1532:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 17064              		.loc 1 1532 19 is_stmt 0 view .LVU5645
 17065 0400 4531FF   		xor	r15d, r15d	# passes
 17066 0403 4C8DAC24 		lea	r13, 208[rsp]	# tmp464,
 17066      D0000000 
 17067              	.LVL1039:
 17068              	.L1375:
1538:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17069              		.loc 1 1538 13 is_stmt 1 view .LVU5646
 17070              	# sieve_extend.c:1538:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 17071              		.loc 1 1538 30 is_stmt 0 view .LVU5647
 17072 040b 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	#, option_maxFactor
 17072      B0000000 
 17073 0413 4C89E6   		mov	rsi, r12	#, best_result$blocksize_bits
 17074              	# sieve_extend.c:1540:             passes++;
1539:sieve_extend.c ****             delete_sieve(sieve_instance);
1540:sieve_extend.c ****             passes++;
 17075              		.loc 1 1540 19 view .LVU5648
 17076 0416 4983C701 		add	r15, 1	# passes,
 17077              	# sieve_extend.c:1538:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1538:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17078              		.loc 1 1538 30 view .LVU5649
 17079 041a E8000000 		call	sieve	#
 17079      00
 17080              	.LVL1040:
 17081              	.LBB1118:
 17082              	.LBB1119:
 17083              	# sieve_extend.c:118:     free(sieve->bitarray);
 118:sieve_extend.c ****     free(sieve);
GAS LISTING /tmp/cc7rm34x.s 			page 456


 17084              		.loc 1 118 5 view .LVU5650
 17085 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_148->bitarray
 17086              	.LBE1119:
 17087              	.LBE1118:
 17088              	# sieve_extend.c:1538:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1538:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17089              		.loc 1 1538 30 view .LVU5651
 17090 0422 4989C6   		mov	r14, rax	# sieve_instance, tmp536
 17091              	.LVL1041:
1539:sieve_extend.c ****             delete_sieve(sieve_instance);
 17092              		.loc 1 1539 13 is_stmt 1 view .LVU5652
 17093              	.LBB1123:
 17094              	.LBI1118:
 117:sieve_extend.c ****     free(sieve->bitarray);
 17095              		.loc 1 117 13 view .LVU5653
 17096              	.LBB1120:
 118:sieve_extend.c ****     free(sieve);
 17097              		.loc 1 118 5 view .LVU5654
 17098 0425 E8000000 		call	free@PLT	#
 17098      00
 17099              	.LVL1042:
 119:sieve_extend.c **** }
 17100              		.loc 1 119 5 view .LVU5655
 17101 042a 4C89F7   		mov	rdi, r14	#, sieve_instance
 17102 042d E8000000 		call	free@PLT	#
 17102      00
 17103              	.LVL1043:
 119:sieve_extend.c **** }
 17104              		.loc 1 119 5 is_stmt 0 view .LVU5656
 17105              	.LBE1120:
 17106              	.LBE1123:
 17107              		.loc 1 1540 13 is_stmt 1 view .LVU5657
1541:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17108              		.loc 1 1541 13 view .LVU5658
 17109 0432 4C89EE   		mov	rsi, r13	#, tmp464
 17110 0435 BF010000 		mov	edi, 1	#,
 17110      00
 17111 043a E8000000 		call	clock_gettime@PLT	#
 17111      00
 17112              	.LVL1044:
1542:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17113              		.loc 1 1542 13 view .LVU5659
 17114              	# sieve_extend.c:1542:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17115              		.loc 1 1542 62 is_stmt 0 view .LVU5660
 17116 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 216[rsp]	# tmp443, end_time.tv_nsec
 17116      AC24D800 
 17116      0000
 17117              	# sieve_extend.c:1542:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17118              		.loc 1 1542 68 view .LVU5661
 17119 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 192[rsp]	# tmp444, start_time.tv_sec
 17119      9424C000 
 17119      0000
 17120              	# sieve_extend.c:1542:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17121              		.loc 1 1542 108 view .LVU5662
 17122 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 200[rsp]	# tmp446, start_time.tv_nsec
 17122      8424C800 
 17122      0000
GAS LISTING /tmp/cc7rm34x.s 			page 457


 17123              	# sieve_extend.c:1542:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17124              		.loc 1 1542 44 view .LVU5663
 17125 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 208[rsp]	# tmp447, end_time.tv_sec
 17125      8C24D000 
 17125      0000
 17126              	# sieve_extend.c:1537:         while (elapsed_time <= max_time) {
1537:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17127              		.loc 1 1537 15 view .LVU5664
 17128 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC61[rip]	# tmp649,
 17128      00000000 
 17129 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _305, tmp444,
 17129      2D000000 
 17129      00
 17130 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _306, tmp447,
 17130      05000000 
 17130      00
 17131              	# sieve_extend.c:1542:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17132              		.loc 1 1542 26 view .LVU5665
 17133 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _305, _306
 17133      C0
 17134              	.LVL1045:
1537:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17135              		.loc 1 1537 15 is_stmt 1 view .LVU5666
 17136 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp649, elapsed_time
 17137 048a 0F828500 		jb	.L1447	#,
 17137      0000
 17138              	.LVL1046:
1538:sieve_extend.c ****             delete_sieve(sieve_instance);
 17139              		.loc 1 1538 13 view .LVU5667
 17140              	# sieve_extend.c:1538:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1538:sieve_extend.c ****             delete_sieve(sieve_instance);
 17141              		.loc 1 1538 30 is_stmt 0 view .LVU5668
 17142 0490 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	#, option_maxFactor
 17142      B0000000 
 17143 0498 4C89E6   		mov	rsi, r12	#, best_result$blocksize_bits
 17144              	# sieve_extend.c:1540:             passes++;
1540:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17145              		.loc 1 1540 19 view .LVU5669
 17146 049b 4983C701 		add	r15, 1	# passes,
 17147              	# sieve_extend.c:1538:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1538:sieve_extend.c ****             delete_sieve(sieve_instance);
 17148              		.loc 1 1538 30 view .LVU5670
 17149 049f E8000000 		call	sieve	#
 17149      00
 17150              	.LVL1047:
 17151              	.LBB1124:
 17152              	.LBB1121:
 17153              	# sieve_extend.c:118:     free(sieve->bitarray);
 118:sieve_extend.c ****     free(sieve);
 17154              		.loc 1 118 5 view .LVU5671
 17155 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_148->bitarray
 17156              	.LBE1121:
 17157              	.LBE1124:
 17158              	# sieve_extend.c:1538:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1538:sieve_extend.c ****             delete_sieve(sieve_instance);
 17159              		.loc 1 1538 30 view .LVU5672
 17160 04a7 4889C5   		mov	rbp, rax	# sieve_instance, tmp538
GAS LISTING /tmp/cc7rm34x.s 			page 458


1539:sieve_extend.c ****             passes++;
 17161              		.loc 1 1539 13 is_stmt 1 view .LVU5673
 17162              	.LVL1048:
 17163              	.LBB1125:
 117:sieve_extend.c ****     free(sieve->bitarray);
 17164              		.loc 1 117 13 view .LVU5674
 17165              	.LBB1122:
 118:sieve_extend.c ****     free(sieve);
 17166              		.loc 1 118 5 view .LVU5675
 17167 04aa E8000000 		call	free@PLT	#
 17167      00
 17168              	.LVL1049:
 119:sieve_extend.c **** }
 17169              		.loc 1 119 5 view .LVU5676
 17170 04af 4889EF   		mov	rdi, rbp	#, sieve_instance
 17171 04b2 E8000000 		call	free@PLT	#
 17171      00
 17172              	.LVL1050:
 119:sieve_extend.c **** }
 17173              		.loc 1 119 5 is_stmt 0 view .LVU5677
 17174              	.LBE1122:
 17175              	.LBE1125:
1540:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 17176              		.loc 1 1540 13 is_stmt 1 view .LVU5678
1541:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 17177              		.loc 1 1541 13 view .LVU5679
 17178 04b7 4C89EE   		mov	rsi, r13	#, tmp464
 17179 04ba BF010000 		mov	edi, 1	#,
 17179      00
 17180 04bf E8000000 		call	clock_gettime@PLT	#
 17180      00
 17181              	.LVL1051:
 17182              		.loc 1 1542 13 view .LVU5680
 17183              	# sieve_extend.c:1542:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17184              		.loc 1 1542 62 is_stmt 0 view .LVU5681
 17185 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 216[rsp]	# tmp521, end_time.tv_nsec
 17185      9C24D800 
 17185      0000
 17186              	# sieve_extend.c:1542:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17187              		.loc 1 1542 68 view .LVU5682
 17188 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 192[rsp]	# tmp522, start_time.tv_sec
 17188      A424C000 
 17188      0000
 17189              	# sieve_extend.c:1542:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17190              		.loc 1 1542 108 view .LVU5683
 17191 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 200[rsp]	# tmp524, start_time.tv_nsec
 17191      AC24C800 
 17191      0000
 17192              	# sieve_extend.c:1542:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17193              		.loc 1 1542 44 view .LVU5684
 17194 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 208[rsp]	# tmp525, end_time.tv_sec
 17194      B424D000 
 17194      0000
 17195              	# sieve_extend.c:1537:         while (elapsed_time <= max_time) {
1537:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17196              		.loc 1 1537 15 view .LVU5685
 17197 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC61[rip]	# tmp656,
GAS LISTING /tmp/cc7rm34x.s 			page 459


 17197      00000000 
 17198 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _305, tmp522,
 17198      1D000000 
 17198      00
 17199 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _306, tmp525,
 17199      2D000000 
 17199      00
 17200              	# sieve_extend.c:1542:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 17201              		.loc 1 1542 26 view .LVU5686
 17202 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _305, _306
 17202      C5
 17203              	.LVL1052:
1537:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 17204              		.loc 1 1537 15 is_stmt 1 view .LVU5687
 17205 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp656, elapsed_time
 17206 050f 0F83F6FE 		jnb	.L1375	#,
 17206      FFFF
 17207              	.L1447:
1543:sieve_extend.c ****         }
1544:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 17208              		.loc 1 1544 9 view .LVU5688
 17209              	.LVL1053:
 17210              	.LBB1126:
 17211              	.LBI1126:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17212              		.loc 3 105 1 view .LVU5689
 17213              	.LBB1127:
 17214              		.loc 3 107 3 view .LVU5690
 17215              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17216              		.loc 3 107 10 is_stmt 0 view .LVU5691
 17217 0515 4C89FA   		mov	rdx, r15	#, passes
 17218 0518 488D3500 		lea	rsi, .LC62[rip]	#,
 17218      000000
 17219 051f BF010000 		mov	edi, 1	#,
 17219      00
 17220 0524 B8010000 		mov	eax, 1	#,
 17220      00
 17221 0529 C5FB1144 		vmovsd	QWORD PTR 40[rsp], xmm0	# %sfp, elapsed_time
 17221      2428
 17222 052f E8000000 		call	__printf_chk@PLT	#
 17222      00
 17223              	.LVL1054:
 17224              		.loc 3 107 10 view .LVU5692
 17225              	.LBE1127:
 17226              	.LBE1126:
1545:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 17227              		.loc 1 1545 9 is_stmt 1 view .LVU5693
 17228              	# sieve_extend.c:1545:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 17229              		.loc 1 1545 12 is_stmt 0 view .LVU5694
 17230 0534 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 17230      00000000 
 17231 053c 0F8FF500 		jg	.L1462	#,
 17231      0000
 17232              	.LVL1055:
 17233              	.L1373:
 17234              		.loc 1 1545 12 view .LVU5695
 17235              	.LBE1117:
GAS LISTING /tmp/cc7rm34x.s 			page 460


1546:sieve_extend.c ****     }
1547:sieve_extend.c ****     
1548:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 17236              		.loc 1 1548 5 is_stmt 1 view .LVU5696
 17237              	# sieve_extend.c:1548:     if (option_showMaxFactor > 0) {
 17238              		.loc 1 1548 8 is_stmt 0 view .LVU5697
 17239 0542 4883BC24 		cmp	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 17239      B8000000 
 17239      00
 17240 054b 0F859300 		jne	.L1463	#,
 17240      0000
 17241 0551 66662E0F 		.p2align 4
 17241      1F840000 
 17241      0000000F 
 17241      1F4000
 17242              		.p2align 3
 17243              	.L1381:
 17244              	.LBB1134:
 17245              	.LBB1112:
 17246              	.LBB1109:
 17247              	.LBB1102:
1513:sieve_extend.c ****             }
 17248              		.loc 1 1513 29 is_stmt 1 discriminator 1 view .LVU5698
 17249              	.LBE1102:
 17250              	.LBE1109:
 17251              	.LBE1112:
 17252              	.LBE1134:
 17253              	# sieve_extend.c:1555: }
1549:sieve_extend.c ****         printf("Show result set:\n");
1550:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1551:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1552:sieve_extend.c ****         delete_sieve(sieve_instance);
1553:sieve_extend.c ****         printf("\n");
1554:sieve_extend.c ****     }
1555:sieve_extend.c **** }
 17254              		.loc 1 1555 1 is_stmt 0 discriminator 1 view .LVU5699
 17255 0560 488B8424 		mov	rax, QWORD PTR 232[rsp]	# tmp572, D.7510
 17255      E8000000 
 17256 0568 64483304 		xor	rax, QWORD PTR fs:40	# tmp572, MEM[(<address-space-1> long unsigned int *)40B]
 17256      25280000 
 17256      00
 17257 0571 0F85A50A 		jne	.L1464	#,
 17257      0000
 17258              	# sieve_extend.c:1555: }
 17259              		.loc 1 1555 1 view .LVU5700
 17260 0577 488DA424 		lea	rsp, 248[rsp]	#,
 17260      F8000000 
 17261              		.cfi_remember_state
 17262              		.cfi_def_cfa_offset 56
 17263 057f 31C0     		xor	eax, eax	#
 17264 0581 5B       		pop	rbx	#
 17265              		.cfi_def_cfa_offset 48
 17266 0582 5D       		pop	rbp	#
 17267              		.cfi_def_cfa_offset 40
 17268 0583 415C     		pop	r12	#
 17269              		.cfi_def_cfa_offset 32
 17270 0585 415D     		pop	r13	#
GAS LISTING /tmp/cc7rm34x.s 			page 461


 17271              		.cfi_def_cfa_offset 24
 17272 0587 415E     		pop	r14	#
 17273              		.cfi_def_cfa_offset 16
 17274 0589 415F     		pop	r15	#
 17275              		.cfi_def_cfa_offset 8
 17276 058b C3       		ret	
 17277              	.L1336:
 17278              		.cfi_restore_state
1495:sieve_extend.c ****         #endif
 17279              		.loc 1 1495 13 is_stmt 1 view .LVU5701
 17280              	.LVL1056:
 17281              	.LBB1135:
 17282              	.LBI1135:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17283              		.loc 3 105 1 view .LVU5702
 17284              	.LBB1136:
 17285              		.loc 3 107 3 view .LVU5703
 17286              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17287              		.loc 3 107 10 is_stmt 0 view .LVU5704
 17288 058c 488D3D00 		lea	rdi, .LC29[rip]	#,
 17288      000000
 17289 0593 E8000000 		call	puts@PLT	#
 17289      00
 17290              	.LVL1057:
 17291              		.loc 3 107 10 view .LVU5705
 17292              	.LBE1136:
 17293              	.LBE1135:
1499:sieve_extend.c ****         // Count the number of primes and validate the result
 17294              		.loc 1 1499 5 is_stmt 1 view .LVU5706
1501:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 17295              		.loc 1 1501 9 view .LVU5707
 17296              	# sieve_extend.c:1501:         if (option_verboselevel >= 1) printf("Validating... ");
1501:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 17297              		.loc 1 1501 12 is_stmt 0 view .LVU5708
 17298 0598 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 17298      00000000 
 17299 05a0 0F8E49FC 		jle	.L1337	#,
 17299      FFFF
1501:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 17300              		.loc 1 1501 39 is_stmt 1 view .LVU5709
 17301              	.LVL1058:
 17302              	.LBB1137:
 17303              	.LBI1137:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17304              		.loc 3 105 1 view .LVU5710
 17305              	.LBB1138:
 17306              		.loc 3 107 3 view .LVU5711
 17307              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17308              		.loc 3 107 10 is_stmt 0 view .LVU5712
 17309 05a6 488D3500 		lea	rsi, .LC46[rip]	#,
 17309      000000
 17310 05ad BF010000 		mov	edi, 1	#,
 17310      00
 17311 05b2 31C0     		xor	eax, eax	#
 17312 05b4 E8000000 		call	__printf_chk@PLT	#
 17312      00
 17313              	.LVL1059:
GAS LISTING /tmp/cc7rm34x.s 			page 462


 17314 05b9 E931FCFF 		jmp	.L1337	#
 17314      FF
 17315              	.LVL1060:
 17316              	.L1325:
 17317              		.loc 3 107 10 view .LVU5713
 17318              	.LBE1138:
 17319              	.LBE1137:
 17320              	.LBB1139:
1453:sieve_extend.c ****             }
 17321              		.loc 1 1453 17 is_stmt 1 view .LVU5714
 17322              	.LBB1064:
 17323              	.LBI1064:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17324              		.loc 3 98 1 view .LVU5715
 17325              	.LBB1065:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17326              		.loc 3 100 3 view .LVU5716
 17327              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17328              		.loc 3 100 10 is_stmt 0 view .LVU5717
 17329 05be 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 17330 05c1 488D1500 		lea	rdx, .LC33[rip]	#,
 17330      000000
 17331              	.LVL1061:
 17332              	.L1450:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17333              		.loc 3 100 10 view .LVU5718
 17334              	.LBE1065:
 17335              	.LBE1064:
 17336              	.LBB1066:
 17337              	.LBB1067:
 17338 05c8 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 17338      000000
 17339 05cf BE010000 		mov	esi, 1	#,
 17339      00
 17340 05d4 31C0     		xor	eax, eax	#
 17341 05d6 E8000000 		call	__fprintf_chk@PLT	#
 17341      00
 17342              	.LVL1062:
 17343              	.L1451:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17344              		.loc 3 100 10 view .LVU5719
 17345              	.LBE1067:
 17346              	.LBE1066:
1461:sieve_extend.c ****             }
 17347              		.loc 1 1461 80 is_stmt 1 view .LVU5720
 17348 05db 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 17349 05df E8000000 		call	usage	#
 17349      00
 17350              	.LVL1063:
 17351              	.L1463:
1461:sieve_extend.c ****             }
 17352              		.loc 1 1461 80 is_stmt 0 view .LVU5721
 17353              	.LBE1139:
 17354              	.LBB1140:
1549:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 17355              		.loc 1 1549 9 is_stmt 1 view .LVU5722
GAS LISTING /tmp/cc7rm34x.s 			page 463


 17356              	.LBB1141:
 17357              	.LBI1141:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17358              		.loc 3 105 1 view .LVU5723
 17359              	.LBB1142:
 17360              		.loc 3 107 3 view .LVU5724
 17361              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17362              		.loc 3 107 10 is_stmt 0 view .LVU5725
 17363 05e4 488D3D00 		lea	rdi, .LC64[rip]	#,
 17363      000000
 17364 05eb E8000000 		call	puts@PLT	#
 17364      00
 17365              	.LVL1064:
 17366              		.loc 3 107 10 view .LVU5726
 17367              	.LBE1142:
 17368              	.LBE1141:
1550:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 17369              		.loc 1 1550 9 is_stmt 1 view .LVU5727
 17370              	# sieve_extend.c:1550:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1550:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 17371              		.loc 1 1550 46 is_stmt 0 view .LVU5728
 17372 05f0 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	# option_maxFactor.52_94, option_maxFactor
 17372      B0000000 
 17373 05f8 4889FE   		mov	rsi, rdi	#, option_maxFactor.52_94
 17374 05fb E8000000 		call	sieve	#
 17374      00
 17375              	.LVL1065:
 17376              	# sieve_extend.c:1551:         show_primes(sieve_instance, option_showMaxFactor);
1551:sieve_extend.c ****         delete_sieve(sieve_instance);
 17377              		.loc 1 1551 9 view .LVU5729
 17378 0600 488B9424 		mov	rdx, QWORD PTR 184[rsp]	#, option_showMaxFactor
 17378      B8000000 
 17379              	# sieve_extend.c:1550:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1550:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 17380              		.loc 1 1550 46 view .LVU5730
 17381 0608 4989C4   		mov	r12, rax	# sieve_instance, tmp537
 17382              	.LVL1066:
1551:sieve_extend.c ****         delete_sieve(sieve_instance);
 17383              		.loc 1 1551 9 is_stmt 1 view .LVU5731
 17384 060b 488D7008 		lea	rsi, 8[rax]	# tmp462,
 17385 060f 4889C7   		mov	rdi, rax	#, sieve_instance
 17386 0612 E8000000 		call	show_primes.isra.0	#
 17386      00
 17387              	.LVL1067:
1552:sieve_extend.c ****         printf("\n");
 17388              		.loc 1 1552 9 view .LVU5732
 17389              	.LBB1143:
 17390              	.LBI1143:
 117:sieve_extend.c ****     free(sieve->bitarray);
 17391              		.loc 1 117 13 view .LVU5733
 17392              	.LBB1144:
 118:sieve_extend.c ****     free(sieve);
 17393              		.loc 1 118 5 view .LVU5734
 17394 0617 498B3C24 		mov	rdi, QWORD PTR [r12]	#, sieve_instance_153->bitarray
 17395 061b E8000000 		call	free@PLT	#
 17395      00
 17396              	.LVL1068:
GAS LISTING /tmp/cc7rm34x.s 			page 464


 119:sieve_extend.c **** }
 17397              		.loc 1 119 5 view .LVU5735
 17398 0620 4C89E7   		mov	rdi, r12	#, sieve_instance
 17399 0623 E8000000 		call	free@PLT	#
 17399      00
 17400              	.LVL1069:
 119:sieve_extend.c **** }
 17401              		.loc 1 119 5 is_stmt 0 view .LVU5736
 17402              	.LBE1144:
 17403              	.LBE1143:
1553:sieve_extend.c ****     }
 17404              		.loc 1 1553 9 is_stmt 1 view .LVU5737
 17405              	.LBB1145:
 17406              	.LBI1145:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17407              		.loc 3 105 1 view .LVU5738
 17408              	.LBB1146:
 17409              		.loc 3 107 3 view .LVU5739
 17410              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17411              		.loc 3 107 10 is_stmt 0 view .LVU5740
 17412 0628 BF0A0000 		mov	edi, 10	#,
 17412      00
 17413 062d E8000000 		call	putchar@PLT	#
 17413      00
 17414              	.LVL1070:
 17415 0632 E929FFFF 		jmp	.L1381	#
 17415      FF
 17416              	.LVL1071:
 17417              	.L1462:
 17418              		.loc 3 107 10 view .LVU5741
 17419              	.LBE1146:
 17420              	.LBE1145:
 17421              	.LBE1140:
 17422              	.LBB1147:
1545:sieve_extend.c ****     }
 17423              		.loc 1 1545 39 is_stmt 1 discriminator 1 view .LVU5742
 17424              	.LBB1128:
 17425              	.LBI1128:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17426              		.loc 3 105 1 discriminator 1 view .LVU5743
 17427              	.LBB1129:
 17428              		.loc 3 107 3 discriminator 1 view .LVU5744
 17429              	.LBE1129:
 17430              	.LBE1128:
 17431              	# sieve_extend.c:1545:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1545:sieve_extend.c ****     }
 17432              		.loc 1 1545 39 is_stmt 0 discriminator 1 view .LVU5745
 17433 0637 C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp450, passes
 17433      C7
 17434 063c 4D85FF   		test	r15, r15	# passes
 17435 063f C5FB1074 		vmovsd	xmm6, QWORD PTR 40[rsp]	# elapsed_time, %sfp
 17435      2428
 17436 0645 7919     		jns	.L1378	#,
 17437 0647 4C89F9   		mov	rcx, r15	# tmp452, passes
 17438 064a 4D89FA   		mov	r10, r15	# tmp453, passes
 17439 064d 48D1E9   		shr	rcx	# tmp452
 17440 0650 4183E201 		and	r10d, 1	# tmp453,
GAS LISTING /tmp/cc7rm34x.s 			page 465


 17441 0654 4C09D1   		or	rcx, r10	# tmp517, tmp453
 17442 0657 C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rcx	# tmp451, tmp517
 17442      F9
 17443 065c C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp450, tmp451, tmp451
 17444              	.L1378:
1545:sieve_extend.c ****     }
 17445              		.loc 1 1545 39 discriminator 1 view .LVU5746
 17446 0660 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp454, tmp450, elapsed_time
 17447              	# sieve_extend.c:1545:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1545:sieve_extend.c ****     }
 17448              		.loc 1 1545 95 discriminator 1 view .LVU5747
 17449 0664 4B8D14BF 		lea	rdx, [r15+r15*4]	# tmp455,
 17450              	# sieve_extend.c:1545:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1545:sieve_extend.c ****     }
 17451              		.loc 1 1545 39 discriminator 1 view .LVU5748
 17452 0668 4885D2   		test	rdx, rdx	# tmp455
 17453 066b C4E1E32A 		vcvtsi2sd	xmm3, xmm3, rdx	# tmp456, tmp455
 17453      DA
 17454 0670 7915     		jns	.L1380	#,
 17455 0672 4989D3   		mov	r11, rdx	# tmp458, tmp455
 17456 0675 83E201   		and	edx, 1	# tmp459,
 17457 0678 49D1EB   		shr	r11	# tmp458
 17458 067b 4909D3   		or	r11, rdx	# tmp518, tmp459
 17459 067e C4C1DB2A 		vcvtsi2sd	xmm4, xmm4, r11	# tmp457, tmp518
 17459      E3
 17460 0683 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp456, tmp457, tmp457
 17461              	.L1380:
 17462 0687 C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp460, tmp456, elapsed_time
 17463              	.LBB1131:
 17464              	.LBB1130:
 17465              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17466              		.loc 3 107 10 discriminator 1 view .LVU5749
 17467 068b 488D3500 		lea	rsi, .LC63[rip]	#,
 17467      000000
 17468 0692 BF010000 		mov	edi, 1	#,
 17468      00
 17469 0697 B8020000 		mov	eax, 2	#,
 17469      00
 17470 069c E8000000 		call	__printf_chk@PLT	#
 17470      00
 17471              	.LVL1072:
 17472 06a1 E99CFEFF 		jmp	.L1373	#
 17472      FF
 17473              	.LVL1073:
 17474              	.L1461:
 17475              		.loc 3 107 10 discriminator 1 view .LVU5750
 17476              	.LBE1130:
 17477              	.LBE1131:
 17478              	.LBE1147:
 17479              	.LBB1148:
1522:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 17480              		.loc 1 1522 9 is_stmt 1 view .LVU5751
 17481              	# sieve_extend.c:1522:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1522:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 17482              		.loc 1 1522 44 is_stmt 0 view .LVU5752
 17483 06a6 448B9424 		mov	r10d, DWORD PTR 168[rsp]	# option_verboselevel.42_64, option_verboselevel
 17483      A8000000 
GAS LISTING /tmp/cc7rm34x.s 			page 466


 17484 06ae 4183E801 		sub	r8d, 1	#,
 17485 06b2 4C8B9C24 		mov	r11, QWORD PTR 176[rsp]	# option_maxFactor.43_65, option_maxFactor
 17485      B0000000 
 17486 06ba 4183F802 		cmp	r8d, 2	# _215,
 17487 06be 44895424 		mov	DWORD PTR 104[rsp], r10d	# %sfp, option_verboselevel.42_64
 17487      68
 17488 06c3 4C899C24 		mov	QWORD PTR 136[rsp], r11	# %sfp, option_maxFactor.43_65
 17488      88000000 
 17489              	.LVL1074:
 17490              	.LBB1149:
 17491              	.LBI1149:
1230:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 17492              		.loc 1 1230 27 is_stmt 1 view .LVU5753
 17493              	.LBB1150:
1231:sieve_extend.c **** 
 17494              		.loc 1 1231 5 view .LVU5754
1233:sieve_extend.c ****     best_blocksize_bits = 0;
 17495              		.loc 1 1233 5 view .LVU5755
1234:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 17496              		.loc 1 1234 5 view .LVU5756
1235:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 17497              		.loc 1 1235 5 view .LVU5757
1236:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 17498              		.loc 1 1236 5 view .LVU5758
1237:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 17499              		.loc 1 1237 5 view .LVU5759
1238:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 17500              		.loc 1 1238 5 view .LVU5760
1239:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 17501              		.loc 1 1239 5 view .LVU5761
1240:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 17502              		.loc 1 1240 5 view .LVU5762
1241:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 17503              		.loc 1 1241 5 view .LVU5763
1242:sieve_extend.c ****     double sample_duration = default_sample_duration;
 17504              		.loc 1 1242 5 view .LVU5764
1243:sieve_extend.c **** 
 17505              		.loc 1 1243 5 view .LVU5765
1246:sieve_extend.c ****         case 1:
 17506              		.loc 1 1246 5 view .LVU5766
 17507 06cb 0F86EA07 		jbe	.L1382	#,
 17507      0000
 17508 06d1 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC28[rip]	# sample_duration,
 17508      00000000 
 17509 06d9 48C74424 		mov	QWORD PTR 120[rsp], 5	# %sfp,
 17509      78050000 
 17509      00
 17510 06e2 48C74424 		mov	QWORD PTR 112[rsp], 128	# %sfp,
 17510      70800000 
 17510      00
 17511 06eb 48C78424 		mov	QWORD PTR 144[rsp], 32	# %sfp,
 17511      90000000 
 17511      20000000 
 17512 06f7 48C78424 		mov	QWORD PTR 152[rsp], 4	# %sfp,
 17512      98000000 
 17512      04000000 
 17513 0703 C5FB11B4 		vmovsd	QWORD PTR 128[rsp], xmm6	# %sfp, sample_duration
GAS LISTING /tmp/cc7rm34x.s 			page 467


 17513      24800000 
 17513      00
 17514              	.LVL1075:
 17515              	.L1350:
1275:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 17516              		.loc 1 1275 5 view .LVU5767
 17517              	# sieve_extend.c:1275:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1275:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 17518              		.loc 1 1275 33 is_stmt 0 view .LVU5768
 17519 070c B8400000 		mov	eax, 64	# tmp350,
 17519      00
 17520 0711 31D2     		xor	edx, edx	# tmp349
 17521 0713 48F7B424 		div	QWORD PTR 152[rsp]	# %sfp
 17521      98000000 
 17522              	# sieve_extend.c:1275:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1275:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 17523              		.loc 1 1275 254 view .LVU5769
 17524 071b 31D2     		xor	edx, edx	# tmp357
 17525              	# sieve_extend.c:1277:     counter_t tuning_results=0;
1277:sieve_extend.c ****     counter_t tuning_result_index=0;
 17526              		.loc 1 1277 15 view .LVU5770
 17527 071d 4531FF   		xor	r15d, r15d	# tuning_results
 17528              	# sieve_extend.c:1275:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1275:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 17529              		.loc 1 1275 83 view .LVU5771
 17530 0720 488D7801 		lea	rdi, 1[rax]	# _232,
 17531              	.LVL1076:
1276:sieve_extend.c ****     counter_t tuning_results=0;
 17532              		.loc 1 1276 5 is_stmt 1 view .LVU5772
 17533              	# sieve_extend.c:1275:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1275:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 17534              		.loc 1 1275 254 is_stmt 0 view .LVU5773
 17535 0724 B8001000 		mov	eax, 4096	# tmp358,
 17535      00
 17536 0729 48F77424 		div	QWORD PTR 112[rsp]	# %sfp
 17536      70
 17537              	.LVL1077:
 17538              	# sieve_extend.c:1275:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1275:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 17539              		.loc 1 1275 148 view .LVU5774
 17540 072e 31D2     		xor	edx, edx	# tmp367
 17541              	# sieve_extend.c:1276:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1276:sieve_extend.c ****     counter_t tuning_results=0;
 17542              		.loc 1 1276 41 view .LVU5775
 17543 0730 480FAFC7 		imul	rax, rdi	# tmp363, _232
 17544              	.LVL1078:
1276:sieve_extend.c ****     counter_t tuning_results=0;
 17545              		.loc 1 1276 41 view .LVU5776
 17546 0734 480FAFF8 		imul	rdi, rax	# tmp364, tmp363
 17547              	.LVL1079:
 17548              	# sieve_extend.c:1275:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1275:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 17549              		.loc 1 1275 148 view .LVU5777
 17550 0738 B8000100 		mov	eax, 256	# tmp368,
 17550      00
 17551 073d 48F7B424 		div	QWORD PTR 144[rsp]	# %sfp
 17551      90000000 
GAS LISTING /tmp/cc7rm34x.s 			page 468


 17552              	# sieve_extend.c:1275:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1275:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 17553              		.loc 1 1275 201 view .LVU5778
 17554 0745 4883C001 		add	rax, 1	# tmp373,
 17555              	# sieve_extend.c:1276:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1276:sieve_extend.c ****     counter_t tuning_results=0;
 17556              		.loc 1 1276 41 view .LVU5779
 17557 0749 480FAFF8 		imul	rdi, rax	# tmp374, tmp373
 17558 074d 48C1E708 		sal	rdi, 8	# tmp374,
 17559 0751 E8000000 		call	malloc@PLT	#
 17559      00
 17560              	.LVL1080:
 17561              	# sieve_extend.c:1233:     double best_avg = 0;
1233:sieve_extend.c ****     best_blocksize_bits = 0;
 17562              		.loc 1 1233 12 view .LVU5780
 17563 0756 C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 17564              	# sieve_extend.c:1276:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1276:sieve_extend.c ****     counter_t tuning_results=0;
 17565              		.loc 1 1276 41 view .LVU5781
 17566 075a 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, tmp535
 17566      40
 17567              	.LVL1081:
1277:sieve_extend.c ****     counter_t tuning_result_index=0;
 17568              		.loc 1 1277 5 is_stmt 1 view .LVU5782
1278:sieve_extend.c ****     
 17569              		.loc 1 1278 5 view .LVU5783
1280:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 17570              		.loc 1 1280 5 view .LVU5784
 17571              	.LBB1151:
1280:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 17572              		.loc 1 1280 10 view .LVU5785
1280:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 17573              		.loc 1 1280 42 view .LVU5786
 17574              	.LBE1151:
 17575              	# sieve_extend.c:1237:     counter_t best_vectorstep_faster = 0;
1237:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 17576              		.loc 1 1237 15 is_stmt 0 view .LVU5787
 17577 075f 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
 17577      60000000 
 17577      00
 17578              	# sieve_extend.c:1236:     counter_t best_mediumstep_faster = 0;
1236:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 17579              		.loc 1 1236 15 view .LVU5788
 17580 0768 48C74424 		mov	QWORD PTR 88[rsp], 0	# %sfp,
 17580      58000000 
 17580      00
 17581              	# sieve_extend.c:1235:     counter_t best_smallstep_faster = 0;
1235:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 17582              		.loc 1 1235 15 view .LVU5789
 17583 0771 48C74424 		mov	QWORD PTR 80[rsp], 0	# %sfp,
 17583      50000000 
 17583      00
 17584              	# sieve_extend.c:1234:     best_blocksize_bits = 0;
1234:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 17585              		.loc 1 1234 25 view .LVU5790
 17586 077a 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 17586      48000000 
GAS LISTING /tmp/cc7rm34x.s 			page 469


 17586      00
 17587              	.LBB1181:
 17588              	# sieve_extend.c:1280:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1280:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 17589              		.loc 1 1280 20 view .LVU5791
 17590 0783 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 17590      30000000 
 17590      00
 17591              	.LBE1181:
 17592              	# sieve_extend.c:1233:     double best_avg = 0;
1233:sieve_extend.c ****     best_blocksize_bits = 0;
 17593              		.loc 1 1233 12 view .LVU5792
 17594 078c C5FB114C 		vmovsd	QWORD PTR 56[rsp], xmm1	# %sfp, best_avg
 17594      2438
 17595              	.LVL1082:
 17596              	.L1352:
 17597              	.LBB1182:
 17598              	.LBB1152:
1281:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 17599              		.loc 1 1281 62 is_stmt 1 view .LVU5793
 17600              	.LBB1153:
 17601              	.LBB1154:
 17602              	# sieve_extend.c:1283:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1283:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 17603              		.loc 1 1283 32 is_stmt 0 view .LVU5794
 17604 0792 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 17604      30
 17605 0797 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, smallstep_faster
 17605      28
 17606              	.LVL1083:
 17607 079c 0F1F4000 		.p2align 4
 17608              		.p2align 3
 17609              	.L1364:
1283:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 17610              		.loc 1 1283 32 view .LVU5795
 17611              	.LBE1154:
1282:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 17612              		.loc 1 1282 67 is_stmt 1 view .LVU5796
 17613              	.LBB1177:
 17614              	# sieve_extend.c:1283:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1283:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 17615              		.loc 1 1283 32 is_stmt 0 view .LVU5797
 17616 07a0 4C8B7424 		mov	r14, QWORD PTR 40[rsp]	# vectorstep_faster, %sfp
 17616      28
 17617              	.LVL1084:
 17618 07a5 66662E0F 		.p2align 4
 17618      1F840000 
 17618      000000
 17619              		.p2align 3
 17620              	.L1362:
1283:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 17621              		.loc 1 1283 50 is_stmt 1 view .LVU5798
 17622              	.LBB1155:
 17623              	# sieve_extend.c:1284:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1284:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 17624              		.loc 1 1284 36 is_stmt 0 view .LVU5799
 17625 07b0 C744246C 		mov	DWORD PTR 108[rsp], 6	# %sfp,
GAS LISTING /tmp/cc7rm34x.s 			page 470


 17625      06000000 
 17626              	.LBE1155:
 17627              	# sieve_extend.c:1283:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1283:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 17628              		.loc 1 1283 32 view .LVU5800
 17629 07b8 41BC0001 		mov	r12d, 256	# blocksize_kb,
 17629      0000
 17630              	.LVL1085:
 17631 07be 6690     		.p2align 4
 17632              		.p2align 3
 17633              	.L1360:
 17634              	.LBB1175:
1284:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 17635              		.loc 1 1284 49 is_stmt 1 view .LVU5801
 17636 07c0 4F8D147F 		lea	r10, [r15+r15*2]	# tmp401,
 17637              	# sieve_extend.c:1284:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1284:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 17638              		.loc 1 1284 134 is_stmt 0 view .LVU5802
 17639 07c4 4C89E3   		mov	rbx, r12	# ivtmp.692, blocksize_kb
 17640 07c7 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# tuning_result, %sfp
 17640      40
 17641              	# sieve_extend.c:1284:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1284:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 17642              		.loc 1 1284 36 view .LVU5803
 17643 07cc 31ED     		xor	ebp, ebp	# free_bits
 17644 07ce 49C1E205 		sal	r10, 5	# tmp402,
 17645              	# sieve_extend.c:1284:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1284:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 17646              		.loc 1 1284 134 view .LVU5804
 17647 07d2 48C1E30D 		sal	rbx, 13	# ivtmp.692,
 17648 07d6 4F8D2C13 		lea	r13, [r11+r10]	# ivtmp.691,
 17649 07da EB4F     		jmp	.L1358	#
 17650              	.LVL1086:
 17651 07dc 0F1F4000 		.p2align 4,,7
 17652              		.p2align 3
 17653              	.L1355:
 17654              	.LBB1156:
1301:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 17655              		.loc 1 1301 29 is_stmt 1 view .LVU5805
1302:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 17656              		.loc 1 1302 29 view .LVU5806
1303:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 17657              		.loc 1 1303 29 view .LVU5807
1304:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 17658              		.loc 1 1304 29 view .LVU5808
1305:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 17659              		.loc 1 1305 29 view .LVU5809
1306:sieve_extend.c ****                         }
 17660              		.loc 1 1306 29 view .LVU5810
 17661              	# sieve_extend.c:1306:                             if (option_verboselevel >=2) { printf(".(>)"); t
1306:sieve_extend.c ****                         }
 17662              		.loc 1 1306 32 is_stmt 0 view .LVU5811
 17663 07e0 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 17663      01
 17664 07e5 0F8F0504 		jg	.L1465	#,
 17664      0000
1306:sieve_extend.c ****                         }
GAS LISTING /tmp/cc7rm34x.s 			page 471


 17665              		.loc 1 1306 32 view .LVU5812
 17666 07eb 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 17666      28
 17667 07f0 488B5424 		mov	rdx, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 17667      30
 17668 07f5 4C897424 		mov	QWORD PTR 96[rsp], r14	# %sfp, vectorstep_faster
 17668      60
 17669              	# sieve_extend.c:1301:                             best_avg = tuning_result[tuning_result_index].av
1301:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 17670              		.loc 1 1301 38 view .LVU5813
 17671 07fa C5FB115C 		vmovsd	QWORD PTR 56[rsp], xmm3	# %sfp, _256
 17671      2438
 17672 0800 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, mediumstep_faster
 17672      58
 17673              	# sieve_extend.c:1302:                             best_blocksize_bits = blocksize_bits;
1302:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 17674              		.loc 1 1302 49 view .LVU5814
 17675 0805 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, ivtmp.692
 17675      48
 17676 080a 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, smallstep_faster
 17676      50
 17677              	.LVL1087:
 17678              	.L1353:
1309:sieve_extend.c ****                     }
 17679              		.loc 1 1309 25 is_stmt 1 view .LVU5815
1309:sieve_extend.c ****                     }
 17680              		.loc 1 1309 25 is_stmt 0 view .LVU5816
 17681              	.LBE1156:
1284:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 17682              		.loc 1 1284 141 is_stmt 1 view .LVU5817
 17683              	# sieve_extend.c:1284:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1284:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 17684              		.loc 1 1284 151 is_stmt 0 view .LVU5818
 17685 080f 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# freebits_steps, %sfp
 17685      70
 17686 0814 4983C560 		add	r13, 96	# ivtmp.691,
 17687 0818 4801D5   		add	rbp, rdx	# free_bits, freebits_steps
 17688              	.LVL1088:
1284:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 17689              		.loc 1 1284 49 is_stmt 1 view .LVU5819
 17690 081b 4829D3   		sub	rbx, rdx	# ivtmp.692, freebits_steps
 17691              	.LVL1089:
 17692              	# sieve_extend.c:1284:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1284:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 17693              		.loc 1 1284 21 is_stmt 0 view .LVU5820
 17694 081e 4881FDFF 		cmp	rbp, 4095	# free_bits,
 17694      0F0000
 17695 0825 0F87ED00 		ja	.L1354	#,
 17695      0000
 17696              	.LVL1090:
 17697              	.L1358:
 17698              	.LBB1173:
1285:sieve_extend.c **** 
 17699              		.loc 1 1285 25 is_stmt 1 view .LVU5821
1288:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 17700              		.loc 1 1288 25 view .LVU5822
 17701              	# sieve_extend.c:1295:                         tuning_result[tuning_result_index].smallstep_faster 
GAS LISTING /tmp/cc7rm34x.s 			page 472


1295:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 17702              		.loc 1 1295 77 is_stmt 0 view .LVU5823
 17703 082b 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 17703      30
 17704 0830 4C89FE   		mov	rsi, r15	# tuning_results, tuning_results
 17705              	# sieve_extend.c:1289:                         tuning_result[tuning_result_index].maxints = maxints
1289:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 17706              		.loc 1 1289 68 view .LVU5824
 17707 0833 488B8C24 		mov	rcx, QWORD PTR 136[rsp]	# option_maxFactor.43_65, %sfp
 17707      88000000 
 17708              	# sieve_extend.c:1288:                         tuning_results++;
1288:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 17709              		.loc 1 1288 39 view .LVU5825
 17710 083b 4983C701 		add	r15, 1	# tuning_results,
 17711              	.LVL1091:
1289:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 17712              		.loc 1 1289 25 is_stmt 1 view .LVU5826
 17713              	# sieve_extend.c:1291:                         tuning_result[tuning_result_index].sample_max = samp
1291:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 17714              		.loc 1 1291 71 is_stmt 0 view .LVU5827
 17715 083f 4C8B4C24 		mov	r9, QWORD PTR 120[rsp]	# sample_max, %sfp
 17715      78
 17716              	# sieve_extend.c:1296:                         tuning_result[tuning_result_index].mediumstep_faster
1296:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 17717              		.loc 1 1296 78 view .LVU5828
 17718 0844 488B4424 		mov	rax, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 17718      28
 17719              	# sieve_extend.c:1295:                         tuning_result[tuning_result_index].smallstep_faster 
1295:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 17720              		.loc 1 1295 77 view .LVU5829
 17721 0849 49897D20 		mov	QWORD PTR 32[r13], rdi	# MEM[base: _520, offset: 32B], smallstep_faster
 17722              	# sieve_extend.c:1298:                         tune_benchmark(tuning_result, tuning_result_index);
1298:sieve_extend.c **** 
 17723              		.loc 1 1298 25 view .LVU5830
 17724 084d 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	#, %sfp
 17724      40
 17725              	# sieve_extend.c:1290:                         tuning_result[tuning_result_index].sample_duration =
1290:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 17726              		.loc 1 1290 76 view .LVU5831
 17727 0852 C5FB10A4 		vmovsd	xmm4, QWORD PTR 128[rsp]	# sample_duration, %sfp
 17727      24800000 
 17727      00
 17728              	# sieve_extend.c:1289:                         tuning_result[tuning_result_index].maxints = maxints
1289:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 17729              		.loc 1 1289 68 view .LVU5832
 17730 085b 49894D00 		mov	QWORD PTR 0[r13], rcx	# MEM[base: _520, offset: 0B], option_maxFactor.43_65
1290:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 17731              		.loc 1 1290 25 is_stmt 1 view .LVU5833
 17732              	# sieve_extend.c:1291:                         tuning_result[tuning_result_index].sample_max = samp
1291:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 17733              		.loc 1 1291 71 is_stmt 0 view .LVU5834
 17734 085f 4D894D38 		mov	QWORD PTR 56[r13], r9	# MEM[base: _520, offset: 56B], sample_max
 17735              	# sieve_extend.c:1292:                         tuning_result[tuning_result_index].blocksize_kb = bl
1292:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 17736              		.loc 1 1292 73 view .LVU5835
 17737 0863 4D896510 		mov	QWORD PTR 16[r13], r12	# MEM[base: _520, offset: 16B], blocksize_kb
 17738              	# sieve_extend.c:1293:                         tuning_result[tuning_result_index].free_bits = free_
GAS LISTING /tmp/cc7rm34x.s 			page 473


1293:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 17739              		.loc 1 1293 70 view .LVU5836
 17740 0867 49896D18 		mov	QWORD PTR 24[r13], rbp	# MEM[base: _520, offset: 24B], free_bits
 17741              	# sieve_extend.c:1294:                         tuning_result[tuning_result_index].blocksize_bits = 
1294:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 17742              		.loc 1 1294 75 view .LVU5837
 17743 086b 49895D08 		mov	QWORD PTR 8[r13], rbx	# MEM[base: _520, offset: 8B], ivtmp.692
 17744              	# sieve_extend.c:1296:                         tuning_result[tuning_result_index].mediumstep_faster
1296:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 17745              		.loc 1 1296 78 view .LVU5838
 17746 086f 49894528 		mov	QWORD PTR 40[r13], rax	# MEM[base: _520, offset: 40B], mediumstep_faster
 17747              	# sieve_extend.c:1297:                         tuning_result[tuning_result_index].vectorstep_faster
1297:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 17748              		.loc 1 1297 78 view .LVU5839
 17749 0873 4D897530 		mov	QWORD PTR 48[r13], r14	# MEM[base: _520, offset: 48B], vectorstep_faster
 17750              	# sieve_extend.c:1290:                         tuning_result[tuning_result_index].sample_duration =
1290:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 17751              		.loc 1 1290 76 view .LVU5840
 17752 0877 C4C17B11 		vmovsd	QWORD PTR 64[r13], xmm4	# MEM[base: _520, offset: 64B], sample_duration
 17752      6540
1291:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 17753              		.loc 1 1291 25 is_stmt 1 view .LVU5841
1292:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 17754              		.loc 1 1292 25 view .LVU5842
1293:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 17755              		.loc 1 1293 25 view .LVU5843
1294:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 17756              		.loc 1 1294 25 view .LVU5844
1295:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 17757              		.loc 1 1295 25 view .LVU5845
1296:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 17758              		.loc 1 1296 25 view .LVU5846
1297:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 17759              		.loc 1 1297 25 view .LVU5847
1298:sieve_extend.c **** 
 17760              		.loc 1 1298 25 view .LVU5848
 17761 087d E8000000 		call	tune_benchmark	#
 17761      00
 17762              	.LVL1092:
1300:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 17763              		.loc 1 1300 25 view .LVU5849
 17764              	# sieve_extend.c:1300:                         if ( tuning_result[tuning_result_index].avg > best_a
1300:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 17765              		.loc 1 1300 64 is_stmt 0 view .LVU5850
 17766 0882 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r13]	# _256, MEM[base: _520, offset: 88B]
 17766      5D58
 17767              	# sieve_extend.c:1300:                         if ( tuning_result[tuning_result_index].avg > best_a
1300:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 17768              		.loc 1 1300 28 view .LVU5851
 17769 0888 C5F92F5C 		vcomisd	xmm3, QWORD PTR 56[rsp]	# _256, %sfp
 17769      2438
 17770 088e 0F874CFF 		ja	.L1355	#,
 17770      FFFF
 17771              	.L1356:
1308:sieve_extend.c ****                         tuning_result_index++;
 17772              		.loc 1 1308 25 is_stmt 1 view .LVU5852
 17773              	# sieve_extend.c:1308:                         if (option_verboselevel >= 3) { printf("...."); tuni
GAS LISTING /tmp/cc7rm34x.s 			page 474


1308:sieve_extend.c ****                         tuning_result_index++;
 17774              		.loc 1 1308 28 is_stmt 0 view .LVU5853
 17775 0894 837C2468 		cmp	DWORD PTR 104[rsp], 2	# %sfp,
 17775      02
 17776 0899 0F8E70FF 		jle	.L1353	#,
 17776      FFFF
1308:sieve_extend.c ****                         tuning_result_index++;
 17777              		.loc 1 1308 57 is_stmt 1 view .LVU5854
 17778              	.LVL1093:
 17779              	.LBB1157:
 17780              	.LBI1157:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17781              		.loc 3 105 1 view .LVU5855
 17782              	.LBB1158:
 17783              		.loc 3 107 3 view .LVU5856
 17784              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17785              		.loc 3 107 10 is_stmt 0 view .LVU5857
 17786 089f 488D3500 		lea	rsi, .LC54[rip]	#,
 17786      000000
 17787 08a6 BF010000 		mov	edi, 1	#,
 17787      00
 17788 08ab 31C0     		xor	eax, eax	#
 17789 08ad E8000000 		call	__printf_chk@PLT	#
 17789      00
 17790              	.LVL1094:
 17791              		.loc 3 107 10 view .LVU5858
 17792              	.LBE1158:
 17793              	.LBE1157:
1308:sieve_extend.c ****                         tuning_result_index++;
 17794              		.loc 1 1308 73 is_stmt 1 view .LVU5859
 17795              	.LBB1159:
 17796              	.LBI1159:
1222:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 17797              		.loc 1 1222 20 view .LVU5860
 17798              	.LBB1160:
1223:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 17799              		.loc 1 1223 5 view .LVU5861
 17800              	.LBB1161:
 17801              	.LBI1161:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17802              		.loc 3 105 1 view .LVU5862
 17803              	.LBB1162:
 17804              		.loc 3 107 3 view .LVU5863
 17805              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17806              		.loc 3 107 10 is_stmt 0 view .LVU5864
 17807 08b2 498B4538 		mov	rax, QWORD PTR 56[r13]	# MEM[base: _520, offset: 56B], MEM[base: _520, offset: 56B]
 17808 08b6 BF010000 		mov	edi, 1	#,
 17808      00
 17809 08bb C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[base: _520, offset: 80B], MEM[base: _520, offset: 80B]
 17809      4550
 17810 08c1 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _520, offset: 16B], MEM[base: _520, offset: 16B]
 17811 08c5 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _520, offset: 8B], MEM[base: _520, offset: 8B]
 17812 08c9 48894424 		mov	QWORD PTR 24[rsp], rax	#, MEM[base: _520, offset: 56B]
 17812      18
 17813 08ce B8030000 		mov	eax, 3	#,
 17813      00
 17814 08d3 498B7548 		mov	rsi, QWORD PTR 72[r13]	# MEM[base: _520, offset: 72B], MEM[base: _520, offset: 72B]
GAS LISTING /tmp/cc7rm34x.s 			page 475


 17815 08d7 48897424 		mov	QWORD PTR 16[rsp], rsi	#, MEM[base: _520, offset: 72B]
 17815      10
 17816 08dc 488D3500 		lea	rsi, .LC53[rip]	#,
 17816      000000
 17817 08e3 4D8B4530 		mov	r8, QWORD PTR 48[r13]	# MEM[base: _520, offset: 48B], MEM[base: _520, offset: 48B]
 17818 08e7 4C894424 		mov	QWORD PTR 8[rsp], r8	#, MEM[base: _520, offset: 48B]
 17818      08
 17819 08ec 4D8B5528 		mov	r10, QWORD PTR 40[r13]	# MEM[base: _520, offset: 40B], MEM[base: _520, offset: 40B]
 17820 08f0 4C891424 		mov	QWORD PTR [rsp], r10	#, MEM[base: _520, offset: 40B]
 17821 08f4 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _520, offset: 32B]
 17822 08f8 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _520, offset: 24B]
 17823 08fc C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[base: _520, offset: 88B]
 17823      5558
 17824 0902 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[base: _520, offset: 64B]
 17824      4D40
 17825 0908 E8000000 		call	__printf_chk@PLT	#
 17825      00
 17826              	.LVL1095:
 17827              		.loc 3 107 10 view .LVU5865
 17828              	.LBE1162:
 17829              	.LBE1161:
 17830              	# sieve_extend.c:1228: }
1228:sieve_extend.c **** 
 17831              		.loc 1 1228 1 view .LVU5866
 17832 090d E9FDFEFF 		jmp	.L1353	#
 17832      FF
 17833              	.LVL1096:
 17834              		.p2align 4,,7
 17835 0912 660F1F44 		.p2align 3
 17835      0000
 17836              	.L1354:
1228:sieve_extend.c **** 
 17837              		.loc 1 1228 1 view .LVU5867
 17838              	.LBE1160:
 17839              	.LBE1159:
 17840              	.LBE1173:
 17841              	.LBE1175:
1283:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 17842              		.loc 1 1283 67 is_stmt 1 view .LVU5868
 17843              	# sieve_extend.c:1283:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1283:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 17844              		.loc 1 1283 80 is_stmt 0 view .LVU5869
 17845 0918 49D1EC   		shr	r12	# blocksize_kb
 17846              	.LVL1097:
1283:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 17847              		.loc 1 1283 50 is_stmt 1 view .LVU5870
 17848              	# sieve_extend.c:1283:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1283:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 17849              		.loc 1 1283 17 is_stmt 0 view .LVU5871
 17850 091b 836C246C 		sub	DWORD PTR 108[rsp], 1	# %sfp,
 17850      01
 17851 0920 0F859AFE 		jne	.L1360	#,
 17851      FFFF
 17852              	.LBE1177:
1282:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 17853              		.loc 1 1282 101 is_stmt 1 view .LVU5872
 17854              	# sieve_extend.c:1282:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
GAS LISTING /tmp/cc7rm34x.s 			page 476


1282:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 17855              		.loc 1 1282 119 is_stmt 0 view .LVU5873
 17856 0926 4C03B424 		add	r14, QWORD PTR 144[rsp]	# vectorstep_faster, %sfp
 17856      90000000 
 17857              	.LVL1098:
1282:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 17858              		.loc 1 1282 67 is_stmt 1 view .LVU5874
 17859              	# sieve_extend.c:1282:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1282:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 17860              		.loc 1 1282 13 is_stmt 0 view .LVU5875
 17861 092e 4981FE00 		cmp	r14, 256	# vectorstep_faster,
 17861      010000
 17862 0935 0F8675FE 		jbe	.L1362	#,
 17862      FFFF
 17863              	.LBE1153:
1281:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 17864              		.loc 1 1281 94 is_stmt 1 view .LVU5876
 17865              	# sieve_extend.c:1281:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1281:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 17866              		.loc 1 1281 112 is_stmt 0 view .LVU5877
 17867 093b 4C8BB424 		mov	r14, QWORD PTR 152[rsp]	# smallstep_faster_steps, %sfp
 17867      98000000 
 17868              	.LVL1099:
1281:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 17869              		.loc 1 1281 112 view .LVU5878
 17870 0943 4C017424 		add	QWORD PTR 40[rsp], r14	# %sfp, smallstep_faster_steps
 17870      28
 17871              	.LVL1100:
1281:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 17872              		.loc 1 1281 112 view .LVU5879
 17873 0948 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 17873      28
 17874              	.LVL1101:
1281:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 17875              		.loc 1 1281 62 is_stmt 1 view .LVU5880
 17876              	# sieve_extend.c:1281:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1281:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 17877              		.loc 1 1281 9 is_stmt 0 view .LVU5881
 17878 094d 4983FC40 		cmp	r12, 64	# mediumstep_faster,
 17879 0951 0F8649FE 		jbe	.L1364	#,
 17879      FFFF
 17880              	.LBE1152:
1280:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 17881              		.loc 1 1280 75 is_stmt 1 view .LVU5882
 17882              	# sieve_extend.c:1280:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1280:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 17883              		.loc 1 1280 92 is_stmt 0 view .LVU5883
 17884 0957 488B9C24 		mov	rbx, QWORD PTR 152[rsp]	# smallstep_faster_steps, %sfp
 17884      98000000 
 17885 095f 48015C24 		add	QWORD PTR 48[rsp], rbx	# %sfp, smallstep_faster_steps
 17885      30
 17886              	.LVL1102:
1280:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 17887              		.loc 1 1280 92 view .LVU5884
 17888 0964 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 17888      30
 17889              	.LVL1103:
GAS LISTING /tmp/cc7rm34x.s 			page 477


1280:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 17890              		.loc 1 1280 42 is_stmt 1 view .LVU5885
 17891              	# sieve_extend.c:1280:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1280:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 17892              		.loc 1 1280 5 is_stmt 0 view .LVU5886
 17893 0969 4983FD20 		cmp	r13, 32	# smallstep_faster,
 17894 096d 0F861FFE 		jbe	.L1352	#,
 17894      FFFF
 17895              	.LBE1182:
1315:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 17896              		.loc 1 1315 5 is_stmt 1 view .LVU5887
 17897              	# sieve_extend.c:1315:     if (option_verboselevel >= 2) {
1315:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 17898              		.loc 1 1315 8 is_stmt 0 view .LVU5888
 17899 0973 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 17899      01
 17900 0978 7E3A     		jle	.L1365	#,
1316:sieve_extend.c ****         printf("Best options\n");
 17901              		.loc 1 1316 9 is_stmt 1 view .LVU5889
 17902              	.LVL1104:
 17903              	.LBB1183:
 17904              	.LBI1183:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17905              		.loc 3 105 1 view .LVU5890
 17906              	.LBB1184:
 17907              		.loc 3 107 3 view .LVU5891
 17908              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17909              		.loc 3 107 10 is_stmt 0 view .LVU5892
 17910 097a 488B6C24 		mov	rbp, QWORD PTR 96[rsp]	# best_vectorstep_faster, %sfp
 17910      60
 17911              	.LVL1105:
 17912              		.loc 3 107 10 view .LVU5893
 17913 097f BF010000 		mov	edi, 1	#,
 17913      00
 17914 0984 4C8B4C24 		mov	r9, QWORD PTR 88[rsp]	#, %sfp
 17914      58
 17915 0989 4C89FA   		mov	rdx, r15	#, tuning_results
 17916 098c 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	#, %sfp
 17916      50
 17917 0991 488D3500 		lea	rsi, .LC55[rip]	#,
 17917      000000
 17918 0998 488B4C24 		mov	rcx, QWORD PTR 72[rsp]	#, %sfp
 17918      48
 17919 099d 31C0     		xor	eax, eax	#
 17920 099f 48892C24 		mov	QWORD PTR [rsp], rbp	#, best_vectorstep_faster
 17921 09a3 E8000000 		call	__printf_chk@PLT	#
 17921      00
 17922              	.LVL1106:
 17923              		.loc 3 107 10 view .LVU5894
 17924              	.LBE1184:
 17925              	.LBE1183:
1317:sieve_extend.c ****     }
 17926              		.loc 1 1317 9 is_stmt 1 view .LVU5895
 17927              	.LBB1185:
 17928              	.LBI1185:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17929              		.loc 3 105 1 view .LVU5896
GAS LISTING /tmp/cc7rm34x.s 			page 478


 17930              	.LBB1186:
 17931              		.loc 3 107 3 view .LVU5897
 17932              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17933              		.loc 3 107 10 is_stmt 0 view .LVU5898
 17934 09a8 488D3D00 		lea	rdi, .LC56[rip]	#,
 17934      000000
 17935 09af E8000000 		call	puts@PLT	#
 17935      00
 17936              	.LVL1107:
 17937              	.L1365:
 17938              		.loc 3 107 10 view .LVU5899
 17939              	.LBE1186:
 17940              	.LBE1185:
 17941              	.LBB1187:
 17942              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 17943              		.loc 1 1335 24 view .LVU5900
 17944 09b4 4531DB   		xor	r11d, r11d	# step
 17945              	.LBE1187:
 17946              	.LBB1188:
 17947              	# sieve_extend.c:1327:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 17948              		.loc 1 1327 75 view .LVU5901
 17949 09b7 41BE0A00 		mov	r14d, 10	# tmp476,
 17949      0000
 17950 09bd 4C8B6C24 		mov	r13, QWORD PTR 120[rsp]	# sample_max, %sfp
 17950      78
 17951              	.LVL1108:
1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 17952              		.loc 1 1327 75 view .LVU5902
 17953 09c2 4C8B6424 		mov	r12, QWORD PTR 64[rsp]	# tuning_result, %sfp
 17953      40
 17954              	.LVL1109:
1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 17955              		.loc 1 1327 75 view .LVU5903
 17956 09c7 4C895C24 		mov	QWORD PTR 48[rsp], r11	# %sfp, step
 17956      30
 17957              	.LVL1110:
 17958              	.L1370:
1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 17959              		.loc 1 1327 75 view .LVU5904
 17960              	.LBE1188:
1320:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 17961              		.loc 1 1320 11 is_stmt 1 view .LVU5905
 17962 09cc 4983FF04 		cmp	r15, 4	# tuning_results,
 17963 09d0 0F862E04 		jbe	.L1466	#,
 17963      0000
1321:sieve_extend.c ****         step++;
 17964              		.loc 1 1321 9 view .LVU5906
 17965 09d6 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 17965      000000
 17966 09dd BA600000 		mov	edx, 96	#,
 17966      00
 17967 09e2 4C89FE   		mov	rsi, r15	#, tuning_results
 17968 09e5 4C89E7   		mov	rdi, r12	#, tuning_result
 17969 09e8 E8000000 		call	qsort@PLT	#
 17969      00
GAS LISTING /tmp/cc7rm34x.s 			page 479


 17970              	.LVL1111:
1322:sieve_extend.c ****         if (option_verboselevel >= 2) {
 17971              		.loc 1 1322 9 view .LVU5907
1323:sieve_extend.c ****             tuning_result_index = 0;
 17972              		.loc 1 1323 9 view .LVU5908
 17973              	# sieve_extend.c:1322:         step++;
1322:sieve_extend.c ****         if (option_verboselevel >= 2) {
 17974              		.loc 1 1322 13 is_stmt 0 view .LVU5909
 17975 09ed 48834424 		add	QWORD PTR 48[rsp], 1	# %sfp,
 17975      3001
 17976              	.LVL1112:
 17977              	# sieve_extend.c:1323:         if (option_verboselevel >= 2) {
1323:sieve_extend.c ****             tuning_result_index = 0;
 17978              		.loc 1 1323 12 view .LVU5910
 17979 09f3 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 17979      01
 17980 09f8 0F8F8902 		jg	.L1366	#,
 17980      0000
 17981              	.L1368:
1333:sieve_extend.c **** 
 17982              		.loc 1 1333 9 is_stmt 1 view .LVU5911
 17983              	# sieve_extend.c:1333:         tuning_results = tuning_results / 2;
1333:sieve_extend.c **** 
 17984              		.loc 1 1333 24 is_stmt 0 view .LVU5912
 17985 09fe 49D1EF   		shr	r15	# tuning_results
 17986              	.LVL1113:
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 17987              		.loc 1 1335 9 is_stmt 1 view .LVU5913
 17988              	.LBB1197:
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 17989              		.loc 1 1335 14 view .LVU5914
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 17990              		.loc 1 1335 29 view .LVU5915
 17991              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 17992              		.loc 1 1335 24 is_stmt 0 view .LVU5916
 17993 0a01 31ED     		xor	ebp, ebp	# i
 17994 0a03 4D89FB   		mov	r11, r15	# tmp490, tuning_results
 17995 0a06 498D5C24 		lea	rbx, 56[r12]	# ivtmp.673,
 17995      38
 17996 0a0b 4183E307 		and	r11d, 7	# tmp490,
 17997 0a0f 0F84D300 		je	.L1367	#,
 17997      0000
 17998 0a15 4983FB01 		cmp	r11, 1	# tmp490,
 17999 0a19 0F84AA00 		je	.L1425	#,
 17999      0000
 18000 0a1f 4983FB02 		cmp	r11, 2	# tmp490,
 18001 0a23 0F848A00 		je	.L1426	#,
 18001      0000
 18002 0a29 4983FB03 		cmp	r11, 3	# tmp490,
 18003 0a2d 746E     		je	.L1427	#,
 18004 0a2f 4983FB04 		cmp	r11, 4	# tmp490,
 18005 0a33 7452     		je	.L1428	#,
 18006 0a35 4983FB05 		cmp	r11, 5	# tmp490,
 18007 0a39 7436     		je	.L1429	#,
 18008 0a3b 4983FB06 		cmp	r11, 6	# tmp490,
 18009 0a3f 741A     		je	.L1430	#,
GAS LISTING /tmp/cc7rm34x.s 			page 480


1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18010              		.loc 1 1336 13 is_stmt 1 view .LVU5917
 18011 0a41 31F6     		xor	esi, esi	#
 18012 0a43 4C89E7   		mov	rdi, r12	#, tuning_result
 18013 0a46 E8000000 		call	tune_benchmark	#
 18013      00
 18014              	.LVL1114:
1337:sieve_extend.c ****         }
 18015              		.loc 1 1337 13 view .LVU5918
 18016              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18017              		.loc 1 1335 48 is_stmt 0 view .LVU5919
 18018 0a4b BD010000 		mov	ebp, 1	# i,
 18018      00
 18019              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18020              		.loc 1 1337 41 view .LVU5920
 18021 0a50 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18022              		.loc 1 1335 47 is_stmt 1 view .LVU5921
 18023              	.LVL1115:
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18024              		.loc 1 1335 29 view .LVU5922
 18025 0a53 498D9C24 		lea	rbx, 152[r12]	# ivtmp.673,
 18025      98000000 
 18026              	.L1430:
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18027              		.loc 1 1336 13 view .LVU5923
 18028 0a5b 4889EE   		mov	rsi, rbp	#, i
 18029 0a5e 4C89E7   		mov	rdi, r12	#, tuning_result
 18030 0a61 E8000000 		call	tune_benchmark	#
 18030      00
 18031              	.LVL1116:
1337:sieve_extend.c ****         }
 18032              		.loc 1 1337 13 view .LVU5924
 18033              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18034              		.loc 1 1335 48 is_stmt 0 view .LVU5925
 18035 0a66 4883C501 		add	rbp, 1	# i,
 18036              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18037              		.loc 1 1337 41 view .LVU5926
 18038 0a6a 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18039              		.loc 1 1335 47 is_stmt 1 view .LVU5927
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18040              		.loc 1 1335 29 view .LVU5928
 18041 0a6d 4883C360 		add	rbx, 96	# ivtmp.673,
 18042              	.L1429:
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18043              		.loc 1 1336 13 view .LVU5929
 18044 0a71 4889EE   		mov	rsi, rbp	#, i
 18045 0a74 4C89E7   		mov	rdi, r12	#, tuning_result
 18046 0a77 E8000000 		call	tune_benchmark	#
 18046      00
 18047              	.LVL1117:
1337:sieve_extend.c ****         }
GAS LISTING /tmp/cc7rm34x.s 			page 481


 18048              		.loc 1 1337 13 view .LVU5930
 18049              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18050              		.loc 1 1335 48 is_stmt 0 view .LVU5931
 18051 0a7c 4883C501 		add	rbp, 1	# i,
 18052              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18053              		.loc 1 1337 41 view .LVU5932
 18054 0a80 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18055              		.loc 1 1335 47 is_stmt 1 view .LVU5933
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18056              		.loc 1 1335 29 view .LVU5934
 18057 0a83 4883C360 		add	rbx, 96	# ivtmp.673,
 18058              	.L1428:
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18059              		.loc 1 1336 13 view .LVU5935
 18060 0a87 4889EE   		mov	rsi, rbp	#, i
 18061 0a8a 4C89E7   		mov	rdi, r12	#, tuning_result
 18062 0a8d E8000000 		call	tune_benchmark	#
 18062      00
 18063              	.LVL1118:
1337:sieve_extend.c ****         }
 18064              		.loc 1 1337 13 view .LVU5936
 18065              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18066              		.loc 1 1335 48 is_stmt 0 view .LVU5937
 18067 0a92 4883C501 		add	rbp, 1	# i,
 18068              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18069              		.loc 1 1337 41 view .LVU5938
 18070 0a96 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18071              		.loc 1 1335 47 is_stmt 1 view .LVU5939
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18072              		.loc 1 1335 29 view .LVU5940
 18073 0a99 4883C360 		add	rbx, 96	# ivtmp.673,
 18074              	.L1427:
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18075              		.loc 1 1336 13 view .LVU5941
 18076 0a9d 4889EE   		mov	rsi, rbp	#, i
 18077 0aa0 4C89E7   		mov	rdi, r12	#, tuning_result
 18078 0aa3 E8000000 		call	tune_benchmark	#
 18078      00
 18079              	.LVL1119:
1337:sieve_extend.c ****         }
 18080              		.loc 1 1337 13 view .LVU5942
 18081              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18082              		.loc 1 1335 48 is_stmt 0 view .LVU5943
 18083 0aa8 4883C501 		add	rbp, 1	# i,
 18084              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18085              		.loc 1 1337 41 view .LVU5944
 18086 0aac 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18087              		.loc 1 1335 47 is_stmt 1 view .LVU5945
GAS LISTING /tmp/cc7rm34x.s 			page 482


1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18088              		.loc 1 1335 29 view .LVU5946
 18089 0aaf 4883C360 		add	rbx, 96	# ivtmp.673,
 18090              	.L1426:
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18091              		.loc 1 1336 13 view .LVU5947
 18092 0ab3 4889EE   		mov	rsi, rbp	#, i
 18093 0ab6 4C89E7   		mov	rdi, r12	#, tuning_result
 18094 0ab9 E8000000 		call	tune_benchmark	#
 18094      00
 18095              	.LVL1120:
1337:sieve_extend.c ****         }
 18096              		.loc 1 1337 13 view .LVU5948
 18097              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18098              		.loc 1 1335 48 is_stmt 0 view .LVU5949
 18099 0abe 4883C501 		add	rbp, 1	# i,
 18100              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18101              		.loc 1 1337 41 view .LVU5950
 18102 0ac2 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18103              		.loc 1 1335 47 is_stmt 1 view .LVU5951
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18104              		.loc 1 1335 29 view .LVU5952
 18105 0ac5 4883C360 		add	rbx, 96	# ivtmp.673,
 18106              	.L1425:
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18107              		.loc 1 1336 13 view .LVU5953
 18108 0ac9 4889EE   		mov	rsi, rbp	#, i
 18109 0acc 4C89E7   		mov	rdi, r12	#, tuning_result
 18110              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18111              		.loc 1 1335 48 is_stmt 0 view .LVU5954
 18112 0acf 4883C501 		add	rbp, 1	# i,
 18113              	# sieve_extend.c:1336:             tune_benchmark(tuning_result, i);
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18114              		.loc 1 1336 13 view .LVU5955
 18115 0ad3 E8000000 		call	tune_benchmark	#
 18115      00
 18116              	.LVL1121:
1337:sieve_extend.c ****         }
 18117              		.loc 1 1337 13 is_stmt 1 view .LVU5956
 18118              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18119              		.loc 1 1337 41 is_stmt 0 view .LVU5957
 18120 0ad8 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18121              		.loc 1 1335 47 is_stmt 1 view .LVU5958
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18122              		.loc 1 1335 29 view .LVU5959
 18123 0adb 4883C360 		add	rbx, 96	# ivtmp.673,
 18124              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18125              		.loc 1 1335 9 is_stmt 0 view .LVU5960
 18126 0adf 4939EF   		cmp	r15, rbp	# tuning_results, i
 18127 0ae2 0F84E4FE 		je	.L1370	#,
GAS LISTING /tmp/cc7rm34x.s 			page 483


 18127      FFFF
 18128              	.L1367:
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18129              		.loc 1 1336 13 is_stmt 1 view .LVU5961
 18130 0ae8 4889EE   		mov	rsi, rbp	#, i
 18131 0aeb 4C89E7   		mov	rdi, r12	#, tuning_result
 18132 0aee E8000000 		call	tune_benchmark	#
 18132      00
 18133              	.LVL1122:
1337:sieve_extend.c ****         }
 18134              		.loc 1 1337 13 view .LVU5962
 18135 0af3 488D7B60 		lea	rdi, 96[rbx]	# tmp492,
 18136              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18137              		.loc 1 1337 41 is_stmt 0 view .LVU5963
 18138 0af7 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18139              		.loc 1 1335 47 is_stmt 1 view .LVU5964
 18140 0afa 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp492
 18140      28
 18141              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18142              		.loc 1 1335 48 is_stmt 0 view .LVU5965
 18143 0aff 488D7501 		lea	rsi, 1[rbp]	# tmp491,
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18144              		.loc 1 1335 29 is_stmt 1 view .LVU5966
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18145              		.loc 1 1336 13 view .LVU5967
 18146 0b03 4C89E7   		mov	rdi, r12	#, tuning_result
 18147 0b06 E8000000 		call	tune_benchmark	#
 18147      00
 18148              	.LVL1123:
1337:sieve_extend.c ****         }
 18149              		.loc 1 1337 13 view .LVU5968
 18150              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18151              		.loc 1 1337 41 is_stmt 0 view .LVU5969
 18152 0b0b 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# tmp492, %sfp
 18152      28
 18153 0b10 488D83C0 		lea	rax, 192[rbx]	# ivtmp.673,
 18153      000000
 18154              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18155              		.loc 1 1335 48 view .LVU5970
 18156 0b17 488D7502 		lea	rsi, 2[rbp]	# i,
 18157              	# sieve_extend.c:1336:             tune_benchmark(tuning_result, i);
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18158              		.loc 1 1336 13 view .LVU5971
 18159 0b1b 4C89E7   		mov	rdi, r12	#, tuning_result
 18160 0b1e 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, ivtmp.673
 18160      28
 18161              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18162              		.loc 1 1337 41 view .LVU5972
 18163 0b23 4D0129   		add	QWORD PTR [r9], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18164              		.loc 1 1335 47 is_stmt 1 view .LVU5973
GAS LISTING /tmp/cc7rm34x.s 			page 484


1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18165              		.loc 1 1335 29 view .LVU5974
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18166              		.loc 1 1336 13 view .LVU5975
 18167 0b26 E8000000 		call	tune_benchmark	#
 18167      00
 18168              	.LVL1124:
1337:sieve_extend.c ****         }
 18169              		.loc 1 1337 13 view .LVU5976
 18170              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18171              		.loc 1 1337 41 is_stmt 0 view .LVU5977
 18172 0b2b 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.673, %sfp
 18172      28
 18173 0b30 4C8D8320 		lea	r8, 288[rbx]	# ivtmp.673,
 18173      010000
 18174 0b37 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.673
 18174      28
 18175              	# sieve_extend.c:1336:             tune_benchmark(tuning_result, i);
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18176              		.loc 1 1336 13 view .LVU5978
 18177 0b3c 4C89E7   		mov	rdi, r12	#, tuning_result
 18178              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18179              		.loc 1 1337 41 view .LVU5979
 18180 0b3f 4C012E   		add	QWORD PTR [rsi], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18181              		.loc 1 1335 47 is_stmt 1 view .LVU5980
 18182              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18183              		.loc 1 1335 48 is_stmt 0 view .LVU5981
 18184 0b42 488D7503 		lea	rsi, 3[rbp]	# i,
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18185              		.loc 1 1335 29 is_stmt 1 view .LVU5982
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18186              		.loc 1 1336 13 view .LVU5983
 18187 0b46 E8000000 		call	tune_benchmark	#
 18187      00
 18188              	.LVL1125:
1337:sieve_extend.c ****         }
 18189              		.loc 1 1337 13 view .LVU5984
 18190              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18191              		.loc 1 1337 41 is_stmt 0 view .LVU5985
 18192 0b4b 4C8B5424 		mov	r10, QWORD PTR 40[rsp]	# ivtmp.673, %sfp
 18192      28
 18193 0b50 488D9380 		lea	rdx, 384[rbx]	# ivtmp.673,
 18193      010000
 18194              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18195              		.loc 1 1335 48 view .LVU5986
 18196 0b57 488D7504 		lea	rsi, 4[rbp]	# i,
 18197              	# sieve_extend.c:1336:             tune_benchmark(tuning_result, i);
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18198              		.loc 1 1336 13 view .LVU5987
 18199 0b5b 4C89E7   		mov	rdi, r12	#, tuning_result
 18200 0b5e 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, ivtmp.673
GAS LISTING /tmp/cc7rm34x.s 			page 485


 18200      28
 18201              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18202              		.loc 1 1337 41 view .LVU5988
 18203 0b63 4D012A   		add	QWORD PTR [r10], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18204              		.loc 1 1335 47 is_stmt 1 view .LVU5989
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18205              		.loc 1 1335 29 view .LVU5990
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18206              		.loc 1 1336 13 view .LVU5991
 18207 0b66 E8000000 		call	tune_benchmark	#
 18207      00
 18208              	.LVL1126:
1337:sieve_extend.c ****         }
 18209              		.loc 1 1337 13 view .LVU5992
 18210              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18211              		.loc 1 1337 41 is_stmt 0 view .LVU5993
 18212 0b6b 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# ivtmp.673, %sfp
 18212      28
 18213 0b70 4C8D9BE0 		lea	r11, 480[rbx]	# ivtmp.673,
 18213      010000
 18214              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18215              		.loc 1 1335 48 view .LVU5994
 18216 0b77 488D7505 		lea	rsi, 5[rbp]	# i,
 18217              	# sieve_extend.c:1336:             tune_benchmark(tuning_result, i);
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18218              		.loc 1 1336 13 view .LVU5995
 18219 0b7b 4C89E7   		mov	rdi, r12	#, tuning_result
 18220 0b7e 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, ivtmp.673
 18220      28
 18221              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18222              		.loc 1 1337 41 view .LVU5996
 18223 0b83 4C0129   		add	QWORD PTR [rcx], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18224              		.loc 1 1335 47 is_stmt 1 view .LVU5997
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18225              		.loc 1 1335 29 view .LVU5998
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18226              		.loc 1 1336 13 view .LVU5999
 18227 0b86 E8000000 		call	tune_benchmark	#
 18227      00
 18228              	.LVL1127:
1337:sieve_extend.c ****         }
 18229              		.loc 1 1337 13 view .LVU6000
 18230              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18231              		.loc 1 1337 41 is_stmt 0 view .LVU6001
 18232 0b8b 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# ivtmp.673, %sfp
 18232      28
 18233 0b90 4C8D8B40 		lea	r9, 576[rbx]	# ivtmp.673,
 18233      020000
 18234 0b97 4C894C24 		mov	QWORD PTR 40[rsp], r9	# %sfp, ivtmp.673
 18234      28
GAS LISTING /tmp/cc7rm34x.s 			page 486


 18235              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18236              		.loc 1 1335 48 view .LVU6002
 18237 0b9c 488D7506 		lea	rsi, 6[rbp]	# i,
 18238              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18239              		.loc 1 1337 41 view .LVU6003
 18240 0ba0 4C012F   		add	QWORD PTR [rdi], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18241              		.loc 1 1335 47 is_stmt 1 view .LVU6004
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18242              		.loc 1 1335 29 view .LVU6005
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18243              		.loc 1 1336 13 view .LVU6006
 18244 0ba3 4C89E7   		mov	rdi, r12	#, tuning_result
 18245 0ba6 E8000000 		call	tune_benchmark	#
 18245      00
 18246              	.LVL1128:
1337:sieve_extend.c ****         }
 18247              		.loc 1 1337 13 view .LVU6007
 18248              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18249              		.loc 1 1337 41 is_stmt 0 view .LVU6008
 18250 0bab 488B4424 		mov	rax, QWORD PTR 40[rsp]	# ivtmp.673, %sfp
 18250      28
 18251              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18252              		.loc 1 1335 48 view .LVU6009
 18253 0bb0 488D7507 		lea	rsi, 7[rbp]	# i,
 18254 0bb4 4C8D83A0 		lea	r8, 672[rbx]	# ivtmp.673,
 18254      020000
 18255              	# sieve_extend.c:1336:             tune_benchmark(tuning_result, i);
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18256              		.loc 1 1336 13 view .LVU6010
 18257 0bbb 4C89E7   		mov	rdi, r12	#, tuning_result
 18258 0bbe 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.673
 18258      28
 18259              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18260              		.loc 1 1335 48 view .LVU6011
 18261 0bc3 4883C508 		add	rbp, 8	# i,
 18262              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18263              		.loc 1 1337 41 view .LVU6012
 18264 0bc7 4C0128   		add	QWORD PTR [rax], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18265              		.loc 1 1335 47 is_stmt 1 view .LVU6013
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18266              		.loc 1 1335 29 view .LVU6014
1336:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 18267              		.loc 1 1336 13 view .LVU6015
 18268 0bca 4881C300 		add	rbx, 768	# ivtmp.673,
 18268      030000
 18269 0bd1 E8000000 		call	tune_benchmark	#
 18269      00
 18270              	.LVL1129:
1337:sieve_extend.c ****         }
GAS LISTING /tmp/cc7rm34x.s 			page 487


 18271              		.loc 1 1337 13 view .LVU6016
 18272              	# sieve_extend.c:1337:             tuning_result[i].sample_max += sample_max;
1337:sieve_extend.c ****         }
 18273              		.loc 1 1337 41 is_stmt 0 view .LVU6017
 18274 0bd6 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.673, %sfp
 18274      28
 18275 0bdb 4C012E   		add	QWORD PTR [rsi], r13	# MEM[base: _159, offset: 0B], sample_max
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18276              		.loc 1 1335 47 is_stmt 1 view .LVU6018
 18277              	.LVL1130:
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18278              		.loc 1 1335 29 view .LVU6019
 18279              	# sieve_extend.c:1335:         for (counter_t i=0; i<tuning_results; i++) {
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18280              		.loc 1 1335 9 is_stmt 0 view .LVU6020
 18281 0bde 4939EF   		cmp	r15, rbp	# tuning_results, i
 18282 0be1 0F8501FF 		jne	.L1367	#,
 18282      FFFF
 18283 0be7 E9E0FDFF 		jmp	.L1370	#
 18283      FF
 18284              	.LVL1131:
 18285 0bec 0F1F4000 		.p2align 4,,7
 18286              		.p2align 3
 18287              	.L1465:
1335:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18288              		.loc 1 1335 9 view .LVU6021
 18289              	.LBE1197:
 18290              	.LBB1198:
 18291              	.LBB1180:
 18292              	.LBB1179:
 18293              	.LBB1178:
 18294              	.LBB1176:
 18295              	.LBB1174:
 18296              	.LBB1163:
 18297              	.LBB1164:
 18298              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18299              		.loc 3 107 10 view .LVU6022
 18300 0bf0 488D3500 		lea	rsi, .LC52[rip]	#,
 18300      000000
 18301 0bf7 BF010000 		mov	edi, 1	#,
 18301      00
 18302 0bfc C5FB115C 		vmovsd	QWORD PTR 56[rsp], xmm3	# %sfp, _256
 18302      2438
 18303              	.LBE1164:
 18304              	.LBE1163:
1306:sieve_extend.c ****                         }
 18305              		.loc 1 1306 60 is_stmt 1 view .LVU6023
 18306              	.LVL1132:
 18307              	.LBB1166:
 18308              	.LBI1163:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18309              		.loc 3 105 1 view .LVU6024
 18310              	.LBB1165:
 18311              		.loc 3 107 3 view .LVU6025
 18312              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18313              		.loc 3 107 10 is_stmt 0 view .LVU6026
 18314 0c02 31C0     		xor	eax, eax	#
GAS LISTING /tmp/cc7rm34x.s 			page 488


 18315 0c04 E8000000 		call	__printf_chk@PLT	#
 18315      00
 18316              	.LVL1133:
 18317              		.loc 3 107 10 view .LVU6027
 18318              	.LBE1165:
 18319              	.LBE1166:
1306:sieve_extend.c ****                         }
 18320              		.loc 1 1306 76 is_stmt 1 view .LVU6028
 18321              	.LBB1167:
 18322              	.LBI1167:
1222:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18323              		.loc 1 1222 20 view .LVU6029
 18324              	.LBB1168:
1223:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18325              		.loc 1 1223 5 view .LVU6030
 18326              	.LBB1169:
 18327              	.LBI1169:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18328              		.loc 3 105 1 view .LVU6031
 18329              	.LBB1170:
 18330              		.loc 3 107 3 view .LVU6032
 18331              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18332              		.loc 3 107 10 is_stmt 0 view .LVU6033
 18333 0c09 4D8B4538 		mov	r8, QWORD PTR 56[r13]	# MEM[base: _520, offset: 56B], MEM[base: _520, offset: 56B]
 18334 0c0d BF010000 		mov	edi, 1	#,
 18334      00
 18335 0c12 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _520, offset: 16B], MEM[base: _520, offset: 16B]
 18336 0c16 488D3500 		lea	rsi, .LC53[rip]	#,
 18336      000000
 18337 0c1d C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[base: _520, offset: 80B], MEM[base: _520, offset: 80B]
 18337      4550
 18338 0c23 B8030000 		mov	eax, 3	#,
 18338      00
 18339 0c28 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _520, offset: 8B], MEM[base: _520, offset: 8B]
 18340 0c2c 4C894424 		mov	QWORD PTR 24[rsp], r8	#, MEM[base: _520, offset: 56B]
 18340      18
 18341 0c31 4D8B5548 		mov	r10, QWORD PTR 72[r13]	# MEM[base: _520, offset: 72B], MEM[base: _520, offset: 72B]
 18342 0c35 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _520, offset: 72B]
 18342      10
 18343 0c3a 4D8B5D30 		mov	r11, QWORD PTR 48[r13]	# MEM[base: _520, offset: 48B], MEM[base: _520, offset: 48B]
 18344 0c3e 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _520, offset: 48B]
 18344      08
 18345 0c43 4D8B4D28 		mov	r9, QWORD PTR 40[r13]	# MEM[base: _520, offset: 40B], MEM[base: _520, offset: 40B]
 18346 0c47 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[base: _520, offset: 40B]
 18347 0c4b 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _520, offset: 32B]
 18348 0c4f 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _520, offset: 24B]
 18349 0c53 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[base: _520, offset: 88B]
 18349      5558
 18350 0c59 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[base: _520, offset: 64B]
 18350      4D40
 18351 0c5f E8000000 		call	__printf_chk@PLT	#
 18351      00
 18352              	.LVL1134:
 18353              		.loc 3 107 10 view .LVU6034
 18354              	.LBE1170:
 18355              	.LBE1169:
 18356              	# sieve_extend.c:1228: }
GAS LISTING /tmp/cc7rm34x.s 			page 489


1228:sieve_extend.c **** 
 18357              		.loc 1 1228 1 view .LVU6035
 18358 0c64 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 18358      28
 18359 0c69 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18359      30
 18360 0c6e 4C897424 		mov	QWORD PTR 96[rsp], r14	# %sfp, vectorstep_faster
 18360      60
 18361              	.LBE1168:
 18362              	.LBE1167:
 18363              	# sieve_extend.c:1302:                             best_blocksize_bits = blocksize_bits;
1302:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 18364              		.loc 1 1302 49 view .LVU6036
 18365 0c73 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, ivtmp.692
 18365      48
 18366              	.LBB1172:
 18367              	.LBB1171:
 18368              	# sieve_extend.c:1228: }
1228:sieve_extend.c **** 
 18369              		.loc 1 1228 1 view .LVU6037
 18370 0c78 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, mediumstep_faster
 18370      58
 18371 0c7d 48897C24 		mov	QWORD PTR 80[rsp], rdi	# %sfp, smallstep_faster
 18371      50
 18372 0c82 E90DFCFF 		jmp	.L1356	#
 18372      FF
 18373              	.LVL1135:
 18374              	.L1366:
1228:sieve_extend.c **** 
 18375              		.loc 1 1228 1 view .LVU6038
 18376              	.LBE1171:
 18377              	.LBE1172:
 18378              	.LBE1174:
 18379              	.LBE1176:
 18380              	.LBE1178:
 18381              	.LBE1179:
 18382              	.LBE1180:
 18383              	.LBE1198:
1324:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 18384              		.loc 1 1324 13 is_stmt 1 view .LVU6039
1325:sieve_extend.c ****             if (option_verboselevel >= 3) {
 18385              		.loc 1 1325 13 view .LVU6040
 18386              	.LBB1199:
 18387              	.LBI1199:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18388              		.loc 3 105 1 view .LVU6041
 18389              	.LBB1200:
 18390              		.loc 3 107 3 view .LVU6042
 18391              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18392              		.loc 3 107 10 is_stmt 0 view .LVU6043
 18393 0c87 488B5424 		mov	rdx, QWORD PTR 48[rsp]	#, %sfp
 18393      30
 18394 0c8c 488D3500 		lea	rsi, .LC57[rip]	#,
 18394      000000
 18395 0c93 BF010000 		mov	edi, 1	#,
 18395      00
 18396 0c98 31C0     		xor	eax, eax	#
GAS LISTING /tmp/cc7rm34x.s 			page 490


 18397 0c9a E8000000 		call	__printf_chk@PLT	#
 18397      00
 18398              	.LVL1136:
 18399              		.loc 3 107 10 view .LVU6044
 18400              	.LBE1200:
 18401              	.LBE1199:
1325:sieve_extend.c ****             if (option_verboselevel >= 3) {
 18402              		.loc 1 1325 47 is_stmt 1 view .LVU6045
 18403              	.LBB1201:
 18404              	.LBI1201:
1222:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18405              		.loc 1 1222 20 view .LVU6046
 18406              	.LBB1202:
1223:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18407              		.loc 1 1223 5 view .LVU6047
 18408              	.LBB1203:
 18409              	.LBI1203:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18410              		.loc 3 105 1 view .LVU6048
 18411              	.LBB1204:
 18412              		.loc 3 107 3 view .LVU6049
 18413              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18414              		.loc 3 107 10 is_stmt 0 view .LVU6050
 18415 0c9f 498B5C24 		mov	rbx, QWORD PTR 56[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 56B], MEM[(struc
 18415      38
 18416 0ca4 488D3500 		lea	rsi, .LC53[rip]	#,
 18416      000000
 18417 0cab C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 80B], MEM[(s
 18417      442450
 18418 0cb2 498B4C24 		mov	rcx, QWORD PTR 16[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 16B], MEM[(struc
 18418      10
 18419 0cb7 498B5424 		mov	rdx, QWORD PTR 8[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 8B], MEM[(struct 
 18419      08
 18420 0cbc 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_242 + 56B]
 18420      18
 18421 0cc1 498B7C24 		mov	rdi, QWORD PTR 72[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 72B], MEM[(struc
 18421      48
 18422 0cc6 48897C24 		mov	QWORD PTR 16[rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_242 + 72B]
 18422      10
 18423 0ccb BF010000 		mov	edi, 1	#,
 18423      00
 18424 0cd0 4D8B4C24 		mov	r9, QWORD PTR 48[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 48B], MEM[(struct
 18424      30
 18425 0cd5 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_242 + 48B]
 18425      08
 18426 0cda 498B4424 		mov	rax, QWORD PTR 40[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 40B], MEM[(struc
 18426      28
 18427 0cdf 48890424 		mov	QWORD PTR [rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_242 + 40B]
 18428 0ce3 B8030000 		mov	eax, 3	#,
 18428      00
 18429 0ce8 4D8B4C24 		mov	r9, QWORD PTR 32[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 32B]
 18429      20
 18430 0ced 4D8B4424 		mov	r8, QWORD PTR 24[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 24B]
 18430      18
 18431 0cf2 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 88B]
 18431      542458
 18432 0cf9 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 64B]
GAS LISTING /tmp/cc7rm34x.s 			page 491


 18432      4C2440
 18433 0d00 E8000000 		call	__printf_chk@PLT	#
 18433      00
 18434              	.LVL1137:
 18435              		.loc 3 107 10 view .LVU6051
 18436              	.LBE1204:
 18437              	.LBE1203:
 18438              	.LBE1202:
 18439              	.LBE1201:
1326:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 18440              		.loc 1 1326 13 is_stmt 1 view .LVU6052
 18441              	# sieve_extend.c:1326:             if (option_verboselevel >= 3) {
1326:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 18442              		.loc 1 1326 16 is_stmt 0 view .LVU6053
 18443 0d05 837C2468 		cmp	DWORD PTR 104[rsp], 2	# %sfp,
 18443      02
 18444 0d0a 0F84EEFC 		je	.L1368	#,
 18444      FFFF
 18445 0d10 498D5C24 		lea	rbx, 8[r12]	# ivtmp.679,
 18445      08
 18446              	.LBB1205:
 18447              	# sieve_extend.c:1327:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18448              		.loc 1 1327 32 view .LVU6054
 18449 0d15 31ED     		xor	ebp, ebp	# tuning_result_index
 18450              	.L1369:
 18451              	.LVL1138:
1328:sieve_extend.c ****                 }
 18452              		.loc 1 1328 21 is_stmt 1 view .LVU6055
 18453              	.LBB1189:
 18454              	.LBI1189:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18455              		.loc 3 105 1 view .LVU6056
 18456              	.LBB1190:
 18457              		.loc 3 107 3 view .LVU6057
 18458              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18459              		.loc 3 107 10 is_stmt 0 view .LVU6058
 18460 0d17 488D3500 		lea	rsi, .LC58[rip]	#,
 18460      000000
 18461 0d1e BF010000 		mov	edi, 1	#,
 18461      00
 18462 0d23 31C0     		xor	eax, eax	#
 18463              	.LBE1190:
 18464              	.LBE1189:
 18465              	# sieve_extend.c:1327:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18466              		.loc 1 1327 118 view .LVU6059
 18467 0d25 4883C501 		add	rbp, 1	# tuning_result_index,
 18468              	.LVL1139:
 18469              	.LBB1192:
 18470              	.LBB1191:
 18471              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18472              		.loc 3 107 10 view .LVU6060
 18473 0d29 E8000000 		call	__printf_chk@PLT	#
 18473      00
 18474              	.LVL1140:
 18475              		.loc 3 107 10 view .LVU6061
GAS LISTING /tmp/cc7rm34x.s 			page 492


 18476              	.LBE1191:
 18477              	.LBE1192:
1328:sieve_extend.c ****                 }
 18478              		.loc 1 1328 36 is_stmt 1 view .LVU6062
 18479              	.LBB1193:
 18480              	.LBI1193:
1222:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18481              		.loc 1 1222 20 view .LVU6063
 18482              	.LBB1194:
1223:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18483              		.loc 1 1223 5 view .LVU6064
 18484              	.LBB1195:
 18485              	.LBI1195:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18486              		.loc 3 105 1 view .LVU6065
 18487              	.LBB1196:
 18488              		.loc 3 107 3 view .LVU6066
 18489              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18490              		.loc 3 107 10 is_stmt 0 view .LVU6067
 18491 0d2e 488B7330 		mov	rsi, QWORD PTR 48[rbx]	# MEM[base: _224, offset: 48B], MEM[base: _224, offset: 48B]
 18492 0d32 BF010000 		mov	edi, 1	#,
 18492      00
 18493 0d37 488B4B08 		mov	rcx, QWORD PTR 8[rbx]	# MEM[base: _224, offset: 8B], MEM[base: _224, offset: 8B]
 18494 0d3b B8030000 		mov	eax, 3	#,
 18494      00
 18495 0d40 C5FB1043 		vmovsd	xmm0, QWORD PTR 72[rbx]	# MEM[base: _224, offset: 72B], MEM[base: _224, offset: 72B]
 18495      48
 18496 0d45 4883C360 		add	rbx, 96	# ivtmp.679,
 18497 0d49 48897424 		mov	QWORD PTR 24[rsp], rsi	#, MEM[base: _224, offset: 48B]
 18497      18
 18498 0d4e 488D3500 		lea	rsi, .LC53[rip]	#,
 18498      000000
 18499 0d55 4C8B43E0 		mov	r8, QWORD PTR -32[rbx]	# MEM[base: _224, offset: 64B], MEM[base: _224, offset: 64B]
 18500 0d59 4C894424 		mov	QWORD PTR 16[rsp], r8	#, MEM[base: _224, offset: 64B]
 18500      10
 18501 0d5e 4C8B53C8 		mov	r10, QWORD PTR -56[rbx]	# MEM[base: _224, offset: 40B], MEM[base: _224, offset: 40B]
 18502 0d62 4C895424 		mov	QWORD PTR 8[rsp], r10	#, MEM[base: _224, offset: 40B]
 18502      08
 18503 0d67 488B53C0 		mov	rdx, QWORD PTR -64[rbx]	# MEM[base: _224, offset: 32B], MEM[base: _224, offset: 32B]
 18504 0d6b 48891424 		mov	QWORD PTR [rsp], rdx	#, MEM[base: _224, offset: 32B]
 18505 0d6f 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _224, offset: 24B]
 18506 0d73 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _224, offset: 16B]
 18507 0d77 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _224, offset: 0B]
 18508 0d7b C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _224, offset: 80B]
 18508      F0
 18509 0d80 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _224, offset: 56B]
 18509      D8
 18510 0d85 E8000000 		call	__printf_chk@PLT	#
 18510      00
 18511              	.LVL1141:
 18512              		.loc 3 107 10 view .LVU6068
 18513              	.LBE1196:
 18514              	.LBE1195:
 18515              	.LBE1194:
 18516              	.LBE1193:
1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18517              		.loc 1 1327 99 is_stmt 1 view .LVU6069
GAS LISTING /tmp/cc7rm34x.s 			page 493


1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18518              		.loc 1 1327 55 view .LVU6070
 18519              	# sieve_extend.c:1327:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18520              		.loc 1 1327 75 is_stmt 0 view .LVU6071
 18521 0d8a 4983FF0A 		cmp	r15, 10	# tuning_results,
 18522 0d8e 4C89F1   		mov	rcx, r14	# tmp424, tmp476
 18523 0d91 490F46CF 		cmovbe	rcx, r15	# tuning_results,, tmp424
 18524              	# sieve_extend.c:1327:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18525              		.loc 1 1327 17 view .LVU6072
 18526 0d95 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp424
 18527 0d98 0F8279FF 		jb	.L1369	#,
 18527      FFFF
 18528 0d9e E95BFCFF 		jmp	.L1368	#
 18528      FF
 18529              	.LVL1142:
 18530              	.L1460:
1327:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18531              		.loc 1 1327 17 view .LVU6073
 18532              	.LBE1205:
 18533              	.LBE1150:
 18534              	.LBE1149:
 18535              	.LBE1148:
1517:sieve_extend.c ****     }
 18536              		.loc 1 1517 39 is_stmt 1 view .LVU6074
 18537              	.LBB1224:
 18538              	.LBI1224:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18539              		.loc 3 105 1 view .LVU6075
 18540              	.LBB1225:
 18541              		.loc 3 107 3 view .LVU6076
 18542              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18543              		.loc 3 107 10 is_stmt 0 view .LVU6077
 18544 0da3 488D3D00 		lea	rdi, .LC50[rip]	#,
 18544      000000
 18545              	.LBE1225:
 18546              	.LBE1224:
 18547              	# sieve_extend.c:1520:     counter_t best_blocksize_bits = default_blocksize;
1520:sieve_extend.c ****     if (option_tunelevel) {
 18548              		.loc 1 1520 15 view .LVU6078
 18549 0daa 41BC00FC 		mov	r12d, 261120	# best_result$blocksize_bits,
 18549      0300
 18550              	.LBB1227:
 18551              	.LBB1226:
 18552              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18553              		.loc 3 107 10 view .LVU6079
 18554 0db0 E8000000 		call	puts@PLT	#
 18554      00
 18555              	.LVL1143:
 18556              		.loc 3 107 10 view .LVU6080
 18557              	.LBE1226:
 18558              	.LBE1227:
1520:sieve_extend.c ****     if (option_tunelevel) {
 18559              		.loc 1 1520 5 is_stmt 1 view .LVU6081
1521:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 18560              		.loc 1 1521 5 view .LVU6082
GAS LISTING /tmp/cc7rm34x.s 			page 494


 18561              	# sieve_extend.c:1521:     if (option_tunelevel) {
1521:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 18562              		.loc 1 1521 9 is_stmt 0 view .LVU6083
 18563 0db5 448B8424 		mov	r8d, DWORD PTR 172[rsp]	# option_tunelevel.41_63, option_tunelevel
 18563      AC000000 
 18564              	# sieve_extend.c:1521:     if (option_tunelevel) {
1521:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 18565              		.loc 1 1521 8 view .LVU6084
 18566 0dbd 4585C0   		test	r8d, r8d	# option_tunelevel.41_63
 18567 0dc0 0F858701 		jne	.L1467	#,
 18567      0000
 18568              	.LVL1144:
 18569              	.L1347:
 18570              	.LBB1228:
1531:sieve_extend.c ****         counter_t passes = 0;
 18571              		.loc 1 1531 9 is_stmt 1 view .LVU6085
 18572              	# sieve_extend.c:1531:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1531:sieve_extend.c ****         counter_t passes = 0;
 18573              		.loc 1 1531 12 is_stmt 0 view .LVU6086
 18574 0dc6 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 18574      00000000 
 18575 0dce 0F8E1AF6 		jle	.L1374	#,
 18575      FFFF
1531:sieve_extend.c ****         counter_t passes = 0;
 18576              		.loc 1 1531 39 is_stmt 1 discriminator 1 view .LVU6087
 18577              	.LVL1145:
 18578              	.LBB1132:
 18579              	.LBI1132:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18580              		.loc 3 105 1 discriminator 1 view .LVU6088
 18581              	.LBB1133:
 18582              		.loc 3 107 3 discriminator 1 view .LVU6089
 18583              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18584              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6090
 18585 0dd4 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 18585      000000
 18586 0ddb 4C89E2   		mov	rdx, r12	#, best_result$blocksize_bits
 18587 0dde 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 18587      000000
 18588 0de5 488D3500 		lea	rsi, .LC60[rip]	#,
 18588      000000
 18589 0dec 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 18589      000000
 18590 0df3 BF010000 		mov	edi, 1	#,
 18590      00
 18591 0df8 31C0     		xor	eax, eax	#
 18592 0dfa E8000000 		call	__printf_chk@PLT	#
 18592      00
 18593              	.LVL1146:
 18594 0dff E9EAF5FF 		jmp	.L1374	#
 18594      FF
 18595              	.LVL1147:
 18596              	.L1466:
 18597              		.loc 3 107 10 discriminator 1 view .LVU6091
 18598              	.LBE1133:
 18599              	.LBE1132:
 18600              	.LBE1228:
GAS LISTING /tmp/cc7rm34x.s 			page 495


 18601              	.LBB1229:
 18602              	.LBB1221:
 18603              	.LBB1218:
1341:sieve_extend.c ****     if (option_verboselevel >= 1) {
 18604              		.loc 1 1341 5 is_stmt 1 view .LVU6092
 18605              	# sieve_extend.c:1341:     tuning_result_type best_result = tuning_result[0];
1341:sieve_extend.c ****     if (option_verboselevel >= 1) {
 18606              		.loc 1 1341 24 is_stmt 0 view .LVU6093
 18607 0e04 4C8B7C24 		mov	r15, QWORD PTR 64[rsp]	# tuning_result, %sfp
 18607      40
 18608              	.LVL1148:
 18609              	# sieve_extend.c:1342:     if (option_verboselevel >= 1) {
1342:sieve_extend.c ****         tuning_result_index = 0;
 18610              		.loc 1 1342 8 view .LVU6094
 18611 0e09 837C2468 		cmp	DWORD PTR 104[rsp], 0	# %sfp,
 18611      00
 18612              	# sieve_extend.c:1341:     tuning_result_type best_result = tuning_result[0];
1341:sieve_extend.c ****     if (option_verboselevel >= 1) {
 18613              		.loc 1 1341 24 view .LVU6095
 18614 0e0e 4D8B6708 		mov	r12, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 18615              	.LVL1149:
1341:sieve_extend.c ****     if (option_verboselevel >= 1) {
 18616              		.loc 1 1341 24 view .LVU6096
 18617 0e12 4D8B7720 		mov	r14, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 18618 0e16 498B6F28 		mov	rbp, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 18619 0e1a 498B5F30 		mov	rbx, QWORD PTR 48[r15]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
1342:sieve_extend.c ****         tuning_result_index = 0;
 18620              		.loc 1 1342 5 is_stmt 1 view .LVU6097
 18621              	# sieve_extend.c:1342:     if (option_verboselevel >= 1) {
1342:sieve_extend.c ****         tuning_result_index = 0;
 18622              		.loc 1 1342 8 is_stmt 0 view .LVU6098
 18623 0e1e 7E6E     		jle	.L1372	#,
1343:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 18624              		.loc 1 1343 9 is_stmt 1 view .LVU6099
 18625              	.LVL1150:
1344:sieve_extend.c ****     }
 18626              		.loc 1 1344 9 view .LVU6100
 18627              	.LBB1206:
 18628              	.LBI1206:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18629              		.loc 3 105 1 view .LVU6101
 18630              	.LBB1207:
 18631              		.loc 3 107 3 view .LVU6102
 18632              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18633              		.loc 3 107 10 is_stmt 0 view .LVU6103
 18634 0e20 488D3500 		lea	rsi, .LC59[rip]	#,
 18634      000000
 18635 0e27 BF010000 		mov	edi, 1	#,
 18635      00
 18636 0e2c 31C0     		xor	eax, eax	#
 18637 0e2e E8000000 		call	__printf_chk@PLT	#
 18637      00
 18638              	.LVL1151:
 18639              		.loc 3 107 10 view .LVU6104
 18640              	.LBE1207:
 18641              	.LBE1206:
1344:sieve_extend.c ****     }
GAS LISTING /tmp/cc7rm34x.s 			page 496


 18642              		.loc 1 1344 34 is_stmt 1 view .LVU6105
 18643              	.LBB1208:
 18644              	.LBI1208:
1222:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18645              		.loc 1 1222 20 view .LVU6106
 18646              	.LBB1209:
1223:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18647              		.loc 1 1223 5 view .LVU6107
 18648              	.LBB1210:
 18649              	.LBI1210:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18650              		.loc 3 105 1 view .LVU6108
 18651              	.LBB1211:
 18652              		.loc 3 107 3 view .LVU6109
 18653              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18654              		.loc 3 107 10 is_stmt 0 view .LVU6110
 18655 0e33 4D8B4F38 		mov	r9, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 56B], MEM[(struct
 18656 0e37 BF010000 		mov	edi, 1	#,
 18656      00
 18657 0e3c C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 80B], MEM[(s
 18657      4750
 18658 0e42 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 16B], MEM[(struc
 18659 0e46 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 8B], MEM[(struct 
 18660 0e4a 4C894C24 		mov	QWORD PTR 24[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_242 + 56B]
 18660      18
 18661 0e4f 498B4748 		mov	rax, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 72B], MEM[(struc
 18662 0e53 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_242 + 72B]
 18662      10
 18663 0e58 B8030000 		mov	eax, 3	#,
 18663      00
 18664 0e5d 498B7730 		mov	rsi, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 48B], MEM[(struc
 18665 0e61 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[(struct tuning_result_type *)tuning_result_242 + 48B]
 18665      08
 18666 0e66 488D3500 		lea	rsi, .LC53[rip]	#,
 18666      000000
 18667 0e6d 4D8B4728 		mov	r8, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 40B], MEM[(struct
 18668 0e71 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[(struct tuning_result_type *)tuning_result_242 + 40B]
 18669 0e75 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 32B]
 18670 0e79 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 24B]
 18671 0e7d C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 88B]
 18671      5758
 18672 0e83 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 64B]
 18672      4F40
 18673 0e89 E8000000 		call	__printf_chk@PLT	#
 18673      00
 18674              	.LVL1152:
 18675              	.L1372:
 18676              		.loc 3 107 10 view .LVU6111
 18677              	.LBE1211:
 18678              	.LBE1210:
 18679              	.LBE1209:
 18680              	.LBE1208:
1347:sieve_extend.c ****     return best_result;
 18681              		.loc 1 1347 5 is_stmt 1 view .LVU6112
 18682 0e8e 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	#, %sfp
 18682      40
 18683 0e93 E8000000 		call	free@PLT	#
GAS LISTING /tmp/cc7rm34x.s 			page 497


 18683      00
 18684              	.LVL1153:
1348:sieve_extend.c **** }
 18685              		.loc 1 1348 5 view .LVU6113
1348:sieve_extend.c **** }
 18686              		.loc 1 1348 5 is_stmt 0 view .LVU6114
 18687              	.LBE1218:
 18688              	.LBE1221:
1523:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 18689              		.loc 1 1523 9 is_stmt 1 view .LVU6115
 18690              	# sieve_extend.c:1523:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1523:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 18691              		.loc 1 1523 33 is_stmt 0 view .LVU6116
 18692 0e98 4C893500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r14	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 18692      000000
1524:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 18693              		.loc 1 1524 9 is_stmt 1 view .LVU6117
 18694              	.LBE1229:
 18695              	# sieve_extend.c:1530:     if (best_blocksize_bits > 0) {
1530:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 18696              		.loc 1 1530 8 is_stmt 0 view .LVU6118
 18697 0e9f 4D85E4   		test	r12, r12	# best_result$blocksize_bits
 18698              	.LBB1230:
 18699              	# sieve_extend.c:1524:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1524:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 18700              		.loc 1 1524 34 view .LVU6119
 18701 0ea2 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 18701      000000
1525:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 18702              		.loc 1 1525 9 is_stmt 1 view .LVU6120
 18703              	# sieve_extend.c:1525:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1525:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 18704              		.loc 1 1525 34 is_stmt 0 view .LVU6121
 18705 0ea9 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 18705      000000
1526:sieve_extend.c ****     }
 18706              		.loc 1 1526 9 is_stmt 1 view .LVU6122
 18707              	.LVL1154:
1526:sieve_extend.c ****     }
 18708              		.loc 1 1526 9 is_stmt 0 view .LVU6123
 18709              	.LBE1230:
1529:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 18710              		.loc 1 1529 5 is_stmt 1 view .LVU6124
1530:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 18711              		.loc 1 1530 5 view .LVU6125
 18712              	# sieve_extend.c:1530:     if (best_blocksize_bits > 0) {
1530:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 18713              		.loc 1 1530 8 is_stmt 0 view .LVU6126
 18714 0eb0 0F848CF6 		je	.L1373	#,
 18714      FFFF
 18715 0eb6 E90BFFFF 		jmp	.L1347	#
 18715      FF
 18716              	.LVL1155:
 18717              	.L1382:
1530:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 18718              		.loc 1 1530 8 view .LVU6127
 18719 0ebb 488D3D00 		lea	rdi, CSWTCH.122[rip]	# tmp339,
GAS LISTING /tmp/cc7rm34x.s 			page 498


 18719      000000
 18720 0ec2 4C8D0D00 		lea	r9, CSWTCH.123[rip]	# tmp341,
 18720      000000
 18721 0ec9 488D2D00 		lea	rbp, CSWTCH.124[rip]	# tmp343,
 18721      000000
 18722              	.LVL1156:
1530:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 18723              		.loc 1 1530 8 view .LVU6128
 18724 0ed0 488D1D00 		lea	rbx, CSWTCH.125[rip]	# tmp345,
 18724      000000
 18725              	.LVL1157:
1530:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 18726              		.loc 1 1530 8 view .LVU6129
 18727 0ed7 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.122
 18728 0edb 4F8B34C1 		mov	r14, QWORD PTR [r9+r8*8]	# vectorstep_faster_steps, CSWTCH.123
 18729 0edf 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# freebits_steps, CSWTCH.124
 18729      00
 18730              	.LVL1158:
1530:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 18731              		.loc 1 1530 8 view .LVU6130
 18732 0ee4 C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.125
 18732      3CC3
 18733 0eea 48898C24 		mov	QWORD PTR 152[rsp], rcx	# %sfp, smallstep_faster_steps
 18733      98000000 
 18734 0ef2 4C89B424 		mov	QWORD PTR 144[rsp], r14	# %sfp, vectorstep_faster_steps
 18734      90000000 
 18735 0efa 4C897C24 		mov	QWORD PTR 112[rsp], r15	# %sfp, freebits_steps
 18735      70
 18736              	.LBB1231:
 18737              	# sieve_extend.c:1448:     for (int arg=1; arg < argc; arg++) {
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18738              		.loc 1 1448 14 view .LVU6131
 18739 0eff 48C74424 		mov	QWORD PTR 120[rsp], 8	# %sfp,
 18739      78080000 
 18739      00
 18740 0f08 C5FB11BC 		vmovsd	QWORD PTR 128[rsp], xmm7	# %sfp, sample_duration
 18740      24800000 
 18740      00
 18741              	.L1348:
 18742              	.LVL1159:
1448:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 18743              		.loc 1 1448 14 view .LVU6132
 18744              	.LBE1231:
 18745              	.LBB1232:
 18746              	.LBB1222:
 18747              	.LBB1219:
1273:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 18748              		.loc 1 1273 5 is_stmt 1 view .LVU6133
 18749              	# sieve_extend.c:1273:     if (option_verboselevel >= 1) printf("Tuning..."); 
1273:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 18750              		.loc 1 1273 8 is_stmt 0 view .LVU6134
 18751 0f11 448B6C24 		mov	r13d, DWORD PTR 104[rsp]	# option_verboselevel.42_64, %sfp
 18751      68
 18752              	.LVL1160:
1273:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 18753              		.loc 1 1273 8 view .LVU6135
 18754 0f16 4585ED   		test	r13d, r13d	# option_verboselevel.42_64
GAS LISTING /tmp/cc7rm34x.s 			page 499


 18755 0f19 0F8EEDF7 		jle	.L1350	#,
 18755      FFFF
1273:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 18756              		.loc 1 1273 35 is_stmt 1 view .LVU6136
 18757              	.LVL1161:
 18758              	.LBB1212:
 18759              	.LBI1212:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18760              		.loc 3 105 1 view .LVU6137
 18761              	.LBB1213:
 18762              		.loc 3 107 3 view .LVU6138
 18763              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18764              		.loc 3 107 10 is_stmt 0 view .LVU6139
 18765 0f1f 31C0     		xor	eax, eax	#
 18766 0f21 488D3500 		lea	rsi, .LC51[rip]	#,
 18766      000000
 18767 0f28 BF010000 		mov	edi, 1	#,
 18767      00
 18768              	.LBE1213:
 18769              	.LBE1212:
 18770              	# sieve_extend.c:1274:     if (option_verboselevel >= 2) printf("\n");
1274:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 18771              		.loc 1 1274 8 view .LVU6140
 18772 0f2d 4489EB   		mov	ebx, r13d	# option_verboselevel.42_64, option_verboselevel.42_64
 18773              	.LBB1215:
 18774              	.LBB1214:
 18775              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18776              		.loc 3 107 10 view .LVU6141
 18777 0f30 E8000000 		call	__printf_chk@PLT	#
 18777      00
 18778              	.LVL1162:
 18779              		.loc 3 107 10 view .LVU6142
 18780              	.LBE1214:
 18781              	.LBE1215:
1274:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 18782              		.loc 1 1274 5 is_stmt 1 view .LVU6143
 18783              	# sieve_extend.c:1274:     if (option_verboselevel >= 2) printf("\n");
1274:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 18784              		.loc 1 1274 8 is_stmt 0 view .LVU6144
 18785 0f35 83EB01   		sub	ebx, 1	# option_verboselevel.42_64,
 18786 0f38 0F84CEF7 		je	.L1350	#,
 18786      FFFF
1274:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 18787              		.loc 1 1274 35 is_stmt 1 view .LVU6145
 18788              	.LVL1163:
 18789              	.LBB1216:
 18790              	.LBI1216:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18791              		.loc 3 105 1 view .LVU6146
 18792              	.LBB1217:
 18793              		.loc 3 107 3 view .LVU6147
 18794              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18795              		.loc 3 107 10 is_stmt 0 view .LVU6148
 18796 0f3e BF0A0000 		mov	edi, 10	#,
 18796      00
 18797 0f43 E8000000 		call	putchar@PLT	#
 18797      00
GAS LISTING /tmp/cc7rm34x.s 			page 500


 18798              	.LVL1164:
 18799 0f48 E9BFF7FF 		jmp	.L1350	#
 18799      FF
 18800              	.LVL1165:
 18801              	.L1467:
 18802              		.loc 3 107 10 view .LVU6149
 18803              	.LBE1217:
 18804              	.LBE1216:
 18805              	.LBE1219:
 18806              	.LBE1222:
1522:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18807              		.loc 1 1522 9 is_stmt 1 view .LVU6150
 18808              	# sieve_extend.c:1522:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1522:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18809              		.loc 1 1522 44 is_stmt 0 view .LVU6151
 18810 0f4d 8B9424A8 		mov	edx, DWORD PTR 168[rsp]	# option_verboselevel.42_64, option_verboselevel
 18810      000000
 18811 0f54 4183E801 		sub	r8d, 1	#,
 18812 0f58 488BB424 		mov	rsi, QWORD PTR 176[rsp]	# option_maxFactor.43_65, option_maxFactor
 18812      B0000000 
 18813 0f60 4183F802 		cmp	r8d, 2	# _215,
 18814 0f64 89542468 		mov	DWORD PTR 104[rsp], edx	# %sfp, option_verboselevel.42_64
 18815 0f68 4889B424 		mov	QWORD PTR 136[rsp], rsi	# %sfp, option_maxFactor.43_65
 18815      88000000 
 18816              	.LVL1166:
 18817              	.LBB1223:
1230:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 18818              		.loc 1 1230 27 is_stmt 1 view .LVU6152
 18819              	.LBB1220:
1231:sieve_extend.c **** 
 18820              		.loc 1 1231 5 view .LVU6153
1233:sieve_extend.c ****     best_blocksize_bits = 0;
 18821              		.loc 1 1233 5 view .LVU6154
1234:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18822              		.loc 1 1234 5 view .LVU6155
1235:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18823              		.loc 1 1235 5 view .LVU6156
1236:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 18824              		.loc 1 1236 5 view .LVU6157
1237:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 18825              		.loc 1 1237 5 view .LVU6158
1238:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 18826              		.loc 1 1238 5 view .LVU6159
1239:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 18827              		.loc 1 1239 5 view .LVU6160
1240:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 18828              		.loc 1 1240 5 view .LVU6161
1241:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 18829              		.loc 1 1241 5 view .LVU6162
1242:sieve_extend.c ****     double sample_duration = default_sample_duration;
 18830              		.loc 1 1242 5 view .LVU6163
1243:sieve_extend.c **** 
 18831              		.loc 1 1243 5 view .LVU6164
1246:sieve_extend.c ****         case 1:
 18832              		.loc 1 1246 5 view .LVU6165
 18833 0f70 0F8645FF 		jbe	.L1382	#,
 18833      FFFF
GAS LISTING /tmp/cc7rm34x.s 			page 501


 18834 0f76 C5FB1005 		vmovsd	xmm0, QWORD PTR .LC28[rip]	# sample_duration,
 18834      00000000 
 18835 0f7e 48C74424 		mov	QWORD PTR 120[rsp], 5	# %sfp,
 18835      78050000 
 18835      00
 18836 0f87 48C74424 		mov	QWORD PTR 112[rsp], 128	# %sfp,
 18836      70800000 
 18836      00
 18837 0f90 48C78424 		mov	QWORD PTR 144[rsp], 32	# %sfp,
 18837      90000000 
 18837      20000000 
 18838 0f9c 48C78424 		mov	QWORD PTR 152[rsp], 4	# %sfp,
 18838      98000000 
 18838      04000000 
 18839 0fa8 C5FB1184 		vmovsd	QWORD PTR 128[rsp], xmm0	# %sfp, sample_duration
 18839      24800000 
 18839      00
 18840 0fb1 E95BFFFF 		jmp	.L1348	#
 18840      FF
 18841              	.LVL1167:
 18842              	.L1453:
1246:sieve_extend.c ****         case 1:
 18843              		.loc 1 1246 5 is_stmt 0 view .LVU6166
 18844              	.LBE1220:
 18845              	.LBE1223:
 18846              	.LBE1232:
 18847              	.LBB1233:
1451:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 18848              		.loc 1 1451 34 is_stmt 1 discriminator 1 view .LVU6167
 18849              	.LBB1069:
 18850              	.LBI1069:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18851              		.loc 3 98 1 discriminator 1 view .LVU6168
 18852              	.LBB1070:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18853              		.loc 3 100 3 discriminator 1 view .LVU6169
 18854              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18855              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6170
 18856 0fb6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18856      000000
 18857 0fbd BA1B0000 		mov	edx, 27	#,
 18857      00
 18858 0fc2 BE010000 		mov	esi, 1	#,
 18858      00
 18859 0fc7 488D3D00 		lea	rdi, .LC32[rip]	#,
 18859      000000
 18860 0fce E8000000 		call	fwrite@PLT	#
 18860      00
 18861              	.LVL1168:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18862              		.loc 3 100 10 discriminator 1 view .LVU6171
 18863              	.LBE1070:
 18864              	.LBE1069:
1451:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 18865              		.loc 1 1451 83 is_stmt 1 discriminator 1 view .LVU6172
 18866 0fd3 E903F6FF 		jmp	.L1451	#
GAS LISTING /tmp/cc7rm34x.s 			page 502


 18866      FF
 18867              	.L1330:
1461:sieve_extend.c ****             }
 18868              		.loc 1 1461 17 view .LVU6173
 18869              	.LVL1169:
 18870              	.LBB1071:
 18871              	.LBI1066:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18872              		.loc 3 98 1 view .LVU6174
 18873              	.LBB1068:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18874              		.loc 3 100 3 view .LVU6175
 18875              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18876              		.loc 3 100 10 is_stmt 0 view .LVU6176
 18877 0fd8 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 18878 0fdb 488D1500 		lea	rdx, .LC38[rip]	#,
 18878      000000
 18879 0fe2 E9E1F5FF 		jmp	.L1450	#
 18879      FF
 18880              	.LVL1170:
 18881              	.L1334:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18882              		.loc 3 100 10 view .LVU6177
 18883              	.LBE1068:
 18884              	.LBE1071:
1468:sieve_extend.c ****             }
 18885              		.loc 1 1468 17 is_stmt 1 view .LVU6178
 18886              	.LBB1072:
 18887              	.LBI1072:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18888              		.loc 3 98 1 view .LVU6179
 18889              	.LBB1073:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18890              		.loc 3 100 3 view .LVU6180
 18891              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18892              		.loc 3 100 10 is_stmt 0 view .LVU6181
 18893 0fe7 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 18894 0fea 488D1500 		lea	rdx, .LC43[rip]	#,
 18894      000000
 18895 0ff1 E9D2F5FF 		jmp	.L1450	#
 18895      FF
 18896              	.LVL1171:
 18897              	.L1456:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18898              		.loc 3 100 10 view .LVU6182
 18899              	.LBE1073:
 18900              	.LBE1072:
1459:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 18901              		.loc 1 1459 34 is_stmt 1 discriminator 1 view .LVU6183
 18902              	.LBB1074:
 18903              	.LBI1074:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18904              		.loc 3 98 1 discriminator 1 view .LVU6184
 18905              	.LBB1075:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/cc7rm34x.s 			page 503


 18906              		.loc 3 100 3 discriminator 1 view .LVU6185
 18907              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18908              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6186
 18909 0ff6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18909      000000
 18910 0ffd 488D3D00 		lea	rdi, .LC37[rip]	#,
 18910      000000
 18911 1004 BA180000 		mov	edx, 24	#,
 18911      00
 18912 1009 BE010000 		mov	esi, 1	#,
 18912      00
 18913 100e E8000000 		call	fwrite@PLT	#
 18913      00
 18914              	.LVL1172:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18915              		.loc 3 100 10 discriminator 1 view .LVU6187
 18916              	.LBE1075:
 18917              	.LBE1074:
1459:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 18918              		.loc 1 1459 80 is_stmt 1 discriminator 1 view .LVU6188
 18919 1013 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 18920 1017 E8000000 		call	usage	#
 18920      00
 18921              	.LVL1173:
 18922              	.L1464:
1459:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 18923              		.loc 1 1459 80 is_stmt 0 discriminator 1 view .LVU6189
 18924              	.LBE1233:
 18925              	# sieve_extend.c:1555: }
 18926              		.loc 1 1555 1 view .LVU6190
 18927 101c E8000000 		call	__stack_chk_fail@PLT	#
 18927      00
 18928              	.LVL1174:
 18929              	.L1459:
 18930              	.LBB1234:
1466:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18931              		.loc 1 1466 34 is_stmt 1 discriminator 1 view .LVU6191
 18932              	.LBB1076:
 18933              	.LBI1076:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18934              		.loc 3 98 1 discriminator 1 view .LVU6192
 18935              	.LBB1077:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18936              		.loc 3 100 3 discriminator 1 view .LVU6193
 18937              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18938              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6194
 18939 1021 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18939      000000
 18940 1028 488D3D00 		lea	rdi, .LC41[rip]	#,
 18940      000000
 18941 102f BA1A0000 		mov	edx, 26	#,
 18941      00
 18942 1034 BE010000 		mov	esi, 1	#,
 18942      00
 18943 1039 E8000000 		call	fwrite@PLT	#
GAS LISTING /tmp/cc7rm34x.s 			page 504


 18943      00
 18944              	.LVL1175:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18945              		.loc 3 100 10 discriminator 1 view .LVU6195
 18946              	.LBE1077:
 18947              	.LBE1076:
1466:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 18948              		.loc 1 1466 82 is_stmt 1 discriminator 1 view .LVU6196
 18949 103e 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 18950 1042 E8000000 		call	usage	#
 18950      00
 18951              	.LVL1176:
 18952              	.LBE1234:
 18953              		.cfi_endproc
 18954              	.LFE95:
 18956              		.section	.rodata
 18957              		.align 16
 18960              	CSWTCH.125:
 18961 0000 9A999999 		.long	2576980378
 18962 0004 9999B93F 		.long	1069128089
 18963 0008 9A999999 		.long	2576980378
 18964 000c 9999C93F 		.long	1070176665
 18965 0010 9A999999 		.long	2576980378
 18966 0014 9999C93F 		.long	1070176665
 18967 0018 00000000 		.align 16
 18967      00000000 
 18970              	CSWTCH.124:
 18971 0020 00080000 		.quad	2048
 18971      00000000 
 18972 0028 00040000 		.quad	1024
 18972      00000000 
 18973 0030 40000000 		.quad	64
 18973      00000000 
 18974 0038 00000000 		.align 16
 18974      00000000 
 18977              	CSWTCH.123:
 18978 0040 20000000 		.quad	32
 18978      00000000 
 18979 0048 10000000 		.quad	16
 18979      00000000 
 18980 0050 04000000 		.quad	4
 18980      00000000 
 18981 0058 00000000 		.align 16
 18981      00000000 
 18984              	CSWTCH.122:
 18985 0060 10000000 		.quad	16
 18985      00000000 
 18986 0068 08000000 		.quad	8
 18986      00000000 
 18987 0070 04000000 		.quad	4
 18987      00000000 
 18988              		.globl	debug_hitpoint
 18989              		.bss
 18990              		.align 32
 18993              	debug_hitpoint:
 18994 0000 00000000 		.zero	40
 18994      00000000 
GAS LISTING /tmp/cc7rm34x.s 			page 505


 18994      00000000 
 18994      00000000 
 18994      00000000 
 18995              		.globl	global_VECTORSTEP_FASTER
 18996              		.data
 18997              		.align 8
 19000              	global_VECTORSTEP_FASTER:
 19001 0000 80000000 		.quad	128
 19001      00000000 
 19002              		.globl	global_MEDIUMSTEP_FASTER
 19003              		.bss
 19004              		.align 8
 19007              	global_MEDIUMSTEP_FASTER:
 19008 0028 00000000 		.zero	8
 19008      00000000 
 19009              		.globl	global_SMALLSTEP_FASTER
 19010              		.align 8
 19013              	global_SMALLSTEP_FASTER:
 19014 0030 00000000 		.zero	8
 19014      00000000 
 19015              		.section	.rodata.cst32,"aM",@progbits,32
 19016              		.align 32
 19017              	.LC0:
 19018 0000 00000000 		.quad	0
 19018      00000000 
 19019 0008 01000000 		.quad	1
 19019      00000000 
 19020 0010 02000000 		.quad	2
 19020      00000000 
 19021 0018 03000000 		.quad	3
 19021      00000000 
 19022              		.align 32
 19023              	.LC1:
 19024 0020 08000000 		.quad	8
 19024      00000000 
 19025 0028 08000000 		.quad	8
 19025      00000000 
 19026 0030 08000000 		.quad	8
 19026      00000000 
 19027 0038 08000000 		.quad	8
 19027      00000000 
 19028              		.align 32
 19029              	.LC2:
 19030 0040 04000000 		.quad	4
 19030      00000000 
 19031 0048 04000000 		.quad	4
 19031      00000000 
 19032 0050 04000000 		.quad	4
 19032      00000000 
 19033 0058 04000000 		.quad	4
 19033      00000000 
 19034              		.align 32
 19035              	.LC3:
 19036 0060 3F000000 		.long	63
 19037 0064 3F000000 		.long	63
 19038 0068 3F000000 		.long	63
 19039 006c 3F000000 		.long	63
GAS LISTING /tmp/cc7rm34x.s 			page 506


 19040 0070 3F000000 		.long	63
 19041 0074 3F000000 		.long	63
 19042 0078 3F000000 		.long	63
 19043 007c 3F000000 		.long	63
 19044              		.section	.rodata.cst8,"aM",@progbits,8
 19045              		.align 8
 19046              	.LC6:
 19047 0000 00000000 		.long	0
 19048 0004 00000000 		.long	0
 19049              		.align 8
 19050              	.LC7:
 19051 0008 00000000 		.long	0
 19052 000c 0000F87F 		.long	2146959360
 19053              		.align 8
 19054              	.LC8:
 19055 0010 95D626E8 		.long	3894859413
 19056 0014 0B2E113E 		.long	1041313291
 19057              		.align 8
 19058              	.LC28:
 19059 0018 9A999999 		.long	2576980378
 19060 001c 9999B93F 		.long	1069128089
 19061              		.align 8
 19062              	.LC61:
 19063 0020 00000000 		.long	0
 19064 0024 00001440 		.long	1075052544
 19065              		.text
 19066              	.Letext0:
 19067              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 19068              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 19069              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 19070              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 19071              		.file 8 "/usr/include/stdio.h"
 19072              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 19073              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 19074              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 19075              		.file 12 "/usr/include/stdint.h"
 19076              		.file 13 "/usr/include/time.h"
 19077              		.file 14 "/usr/include/math.h"
 19078              		.file 15 "/usr/include/stdlib.h"
 19079              		.file 16 "<built-in>"
 45586              		.section	.note.gnu.property,"a"
 45587              		.align 8
 45588 0000 04000000 		.long	 1f - 0f
 45589 0004 10000000 		.long	 4f - 1f
 45590 0008 05000000 		.long	 5
 45591              	0:
 45592 000c 474E5500 		.string	 "GNU"
 45593              	1:
 45594              		.align 8
 45595 0010 020000C0 		.long	 0xc0000002
 45596 0014 04000000 		.long	 3f - 2f
 45597              	2:
 45598 0018 03000000 		.long	 0x3
 45599              	3:
 45600 001c 00000000 		.align 8
 45601              	4:
GAS LISTING /tmp/cc7rm34x.s 			page 507


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/cc7rm34x.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/cc7rm34x.s:19017  .rodata.cst32:0000000000000000 .LC0
     /tmp/cc7rm34x.s:19023  .rodata.cst32:0000000000000020 .LC1
     /tmp/cc7rm34x.s:19029  .rodata.cst32:0000000000000040 .LC2
     /tmp/cc7rm34x.s:19035  .rodata.cst32:0000000000000060 .LC3
     /tmp/cc7rm34x.s:1227   .text:00000000000006c0 extendSieve_shiftright_ivdep
     /tmp/cc7rm34x.s:3065   .text:0000000000001310 compare_tuning_result
     /tmp/cc7rm34x.s:3091   .text:0000000000001330 setBitsTrue_largeRange_vector
     /tmp/cc7rm34x.s:4890   .text:0000000000001d00 extendSieve_aligned
     /tmp/cc7rm34x.s:5779   .text:0000000000002280 extendSieve_shiftleft
     /tmp/cc7rm34x.s:8453   .text:0000000000003310 show_primes.isra.0
     /tmp/cc7rm34x.s:8448   .rodata.str1.1:0000000000000006 .LC5
     /tmp/cc7rm34x.s:8446   .rodata.str1.1:0000000000000000 .LC4
     /tmp/cc7rm34x.s:8860   .text:00000000000034b0 sieve
     /tmp/cc7rm34x.s:19000  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/cc7rm34x.s:11819  .text:0000000000004160 tune_benchmark
     /tmp/cc7rm34x.s:19007  .bss:0000000000000028 global_MEDIUMSTEP_FASTER
     /tmp/cc7rm34x.s:19013  .bss:0000000000000030 global_SMALLSTEP_FASTER
     /tmp/cc7rm34x.s:19050  .rodata.cst8:0000000000000008 .LC7
     /tmp/cc7rm34x.s:19054  .rodata.cst8:0000000000000010 .LC8
     /tmp/cc7rm34x.s:12036  .text:00000000000042a0 shiftvec
     /tmp/cc7rm34x.s:13198  .text:0000000000004660 validatePrimeCount
     /tmp/cc7rm34x.s:13179  .rodata.str1.8:0000000000000000 .LC9
     /tmp/cc7rm34x.s:13185  .rodata.str1.1:0000000000000023 .LC11
     /tmp/cc7rm34x.s:13189  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/cc7rm34x.s:13182  .rodata.str1.8:0000000000000058 .LC10
     /tmp/cc7rm34x.s:13192  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/cc7rm34x.s:14452  .text:0000000000004df0 usage
     /tmp/cc7rm34x.s:14412  .rodata.str1.8:0000000000000148 .LC14
     /tmp/cc7rm34x.s:14415  .rodata.str1.1:0000000000000031 .LC15
     /tmp/cc7rm34x.s:14419  .rodata.str1.8:0000000000000168 .LC16
     /tmp/cc7rm34x.s:14422  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/cc7rm34x.s:14425  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/cc7rm34x.s:14428  .rodata.str1.8:0000000000000220 .LC19
     /tmp/cc7rm34x.s:14431  .rodata.str1.8:0000000000000250 .LC20
     /tmp/cc7rm34x.s:14434  .rodata.str1.8:0000000000000290 .LC21
     /tmp/cc7rm34x.s:14437  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/cc7rm34x.s:14440  .rodata.str1.8:0000000000000320 .LC23
     /tmp/cc7rm34x.s:14443  .rodata.str1.8:0000000000000348 .LC24
     /tmp/cc7rm34x.s:14446  .rodata.str1.8:0000000000000378 .LC25
     /tmp/cc7rm34x.s:14697  .text:0000000000004f70 printfcomma2
     /tmp/cc7rm34x.s:14689  .rodata.str1.1:000000000000003b .LC26
     /tmp/cc7rm34x.s:14691  .rodata.str1.1:000000000000003e .LC27
     /tmp/cc7rm34x.s:14823  .text:0000000000004fe0 printfcomma
     /tmp/cc7rm34x.s:15283  .text:0000000000005140 benchmark
     /tmp/cc7rm34x.s:19046  .rodata.cst8:0000000000000000 .LC6
     /tmp/cc7rm34x.s:15577  .text:0000000000005340 test
     /tmp/cc7rm34x.s:15881  .text:00000000000054d0 test2
     /tmp/cc7rm34x.s:16001  .text:0000000000005660 test3
     /tmp/cc7rm34x.s:16362  .text.startup:0000000000000000 main
     /tmp/cc7rm34x.s:16270  .rodata.str1.1:0000000000000053 .LC30
     /tmp/cc7rm34x.s:16272  .rodata.str1.1:000000000000005a .LC31
     /tmp/cc7rm34x.s:16281  .rodata.str1.1:0000000000000080 .LC34
     /tmp/cc7rm34x.s:16283  .rodata.str1.1:0000000000000099 .LC35
     /tmp/cc7rm34x.s:16285  .rodata.str1.1:00000000000000a1 .LC36
GAS LISTING /tmp/cc7rm34x.s 			page 508


     /tmp/cc7rm34x.s:16294  .rodata.str1.1:00000000000000c1 .LC39
     /tmp/cc7rm34x.s:16315  .rodata.str1.1:000000000000014f .LC48
     /tmp/cc7rm34x.s:16313  .rodata.str1.1:0000000000000136 .LC47
     /tmp/cc7rm34x.s:16296  .rodata.str1.1:00000000000000d7 .LC40
     /tmp/cc7rm34x.s:16300  .rodata.str1.1:00000000000000f9 .LC42
     /tmp/cc7rm34x.s:16307  .rodata.str1.1:00000000000000fd .LC44
     /tmp/cc7rm34x.s:16309  .rodata.str1.1:0000000000000116 .LC45
     /tmp/cc7rm34x.s:16317  .rodata.str1.1:000000000000015f .LC49
     /tmp/cc7rm34x.s:19062  .rodata.cst8:0000000000000020 .LC61
     /tmp/cc7rm34x.s:16350  .rodata.str1.8:0000000000000548 .LC62
     /tmp/cc7rm34x.s:16268  .rodata.str1.1:0000000000000044 .LC29
     /tmp/cc7rm34x.s:16311  .rodata.str1.1:0000000000000127 .LC46
     /tmp/cc7rm34x.s:16278  .rodata.str1.8:00000000000003b0 .LC33
     /tmp/cc7rm34x.s:16356  .rodata.str1.1:00000000000001b3 .LC64
     /tmp/cc7rm34x.s:16353  .rodata.str1.8:0000000000000590 .LC63
     /tmp/cc7rm34x.s:19058  .rodata.cst8:0000000000000018 .LC28
     /tmp/cc7rm34x.s:16330  .rodata.str1.1:0000000000000188 .LC54
     /tmp/cc7rm34x.s:16327  .rodata.str1.8:0000000000000420 .LC53
     /tmp/cc7rm34x.s:16334  .rodata.str1.8:00000000000004a8 .LC55
     /tmp/cc7rm34x.s:16337  .rodata.str1.1:000000000000018d .LC56
     /tmp/cc7rm34x.s:16323  .rodata.str1.1:0000000000000183 .LC52
     /tmp/cc7rm34x.s:16339  .rodata.str1.1:000000000000019a .LC57
     /tmp/cc7rm34x.s:16341  .rodata.str1.1:00000000000001a1 .LC58
     /tmp/cc7rm34x.s:16319  .rodata.str1.1:0000000000000166 .LC50
     /tmp/cc7rm34x.s:16347  .rodata.str1.8:0000000000000510 .LC60
     /tmp/cc7rm34x.s:16343  .rodata.str1.1:00000000000001a5 .LC59
     /tmp/cc7rm34x.s:18984  .rodata:0000000000000060 CSWTCH.122
     /tmp/cc7rm34x.s:18977  .rodata:0000000000000040 CSWTCH.123
     /tmp/cc7rm34x.s:18970  .rodata:0000000000000020 CSWTCH.124
     /tmp/cc7rm34x.s:18960  .rodata:0000000000000000 CSWTCH.125
     /tmp/cc7rm34x.s:16321  .rodata.str1.1:0000000000000179 .LC51
     /tmp/cc7rm34x.s:16274  .rodata.str1.1:0000000000000064 .LC32
     /tmp/cc7rm34x.s:16291  .rodata.str1.8:00000000000003d8 .LC38
     /tmp/cc7rm34x.s:16304  .rodata.str1.8:00000000000003f8 .LC43
     /tmp/cc7rm34x.s:16287  .rodata.str1.1:00000000000000a8 .LC37
     /tmp/cc7rm34x.s:16298  .rodata.str1.1:00000000000000de .LC41
     /tmp/cc7rm34x.s:18993  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
