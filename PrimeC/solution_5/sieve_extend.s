GAS LISTING /tmp/ccgH0yRS.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -funroll-all-loops
  21              	# -fno-asynchronous-unwind-tables -fno-exceptions -fverbose-asm
  22              	# -fstack-protector-strong -Wformat -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccgH0yRS.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB64:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** #include <stdio.h>
   2:sieve_extend.c **** #include <stdlib.h>
   3:sieve_extend.c **** #include <stdint.h>
   4:sieve_extend.c **** #include <time.h>
   5:sieve_extend.c **** #include <math.h>
   6:sieve_extend.c **** #include <string.h>
   7:sieve_extend.c **** 
   8:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
   9:sieve_extend.c **** #define option_runonce 0
  10:sieve_extend.c **** #define debug if (option_runonce)
  11:sieve_extend.c **** #define debug2 if (option_runonce>=2)
  12:sieve_extend.c **** 
  13:sieve_extend.c **** #define default_sieve_limit 1000000
  14:sieve_extend.c **** #define default_blocksize (32*1024*8-1024)
  15:sieve_extend.c **** #define default_sieve_duration 5
  16:sieve_extend.c **** #define default_sample_duration 0.1
  17:sieve_extend.c **** #define default_sample_max 5
  18:sieve_extend.c **** #define default_verbose_level 2
  19:sieve_extend.c **** #define default_tune_level 0
  20:sieve_extend.c **** #define default_check_level 1
  21:sieve_extend.c **** #define default_show_primes_on_error 100
  22:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  23:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  24:sieve_extend.c **** 
  25:sieve_extend.c **** // 64 bit
  26:sieve_extend.c **** #define TYPE uint64_t
GAS LISTING /tmp/ccgH0yRS.s 			page 3


  27:sieve_extend.c **** 
  28:sieve_extend.c **** // calculate the rest dynamically
  29:sieve_extend.c **** #define counter_t TYPE
  30:sieve_extend.c **** #define bitshift_t TYPE
  31:sieve_extend.c **** #define bitword_t uint64_t
  32:sieve_extend.c **** 
  33:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  34:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  35:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  36:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  37:sieve_extend.c **** //#define SHIFT ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4)+p
  38:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  39:sieve_extend.c **** 
  40:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  41:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  42:sieve_extend.c **** #define VECTOR_SIZE_counter (VECTOR_SIZE_bytes*8)
  43:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  44:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  45:sieve_extend.c **** 
  46:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  47:sieve_extend.c **** 
  48:sieve_extend.c **** // globals for tuning
  49:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  50:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 0;
  51:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = 128;
  52:sieve_extend.c **** 
  53:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  54:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  55:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  56:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  57:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  58:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  59:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  60:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)96)
  61:sieve_extend.c **** 
  62:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  63:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  64:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  65:sieve_extend.c **** 
  66:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  67:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  68:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  69:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  70:sieve_extend.c **** 
  71:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  72:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  73:sieve_extend.c **** // #define bitindex(index) ((bitshift_t)(index)&((bitword_t)(WORD_SIZE-1)))
  74:sieve_extend.c **** //#define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORD_SIZE_bitshift-SAFE_SHIFTBIT)
  75:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  76:sieve_extend.c **** #define  markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  77:sieve_extend.c **** #define  markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  78:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  79:sieve_extend.c **** // #define chopmask2(index) (((bitword_t)2U << bitindex(index))-SAFE_SHIFTBIT)
  80:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  81:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  82:sieve_extend.c **** #define chopmask2(index) chopmask(index)
  83:sieve_extend.c **** #define real(bit) (bit*2+1)
GAS LISTING /tmp/ccgH0yRS.s 			page 4


  84:sieve_extend.c **** 
  85:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  86:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  87:sieve_extend.c **** 
  88:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  89:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  90:sieve_extend.c **** 
  91:sieve_extend.c **** counter_t debug_hitpoint[5] = { 0,0,0,0,0};
  92:sieve_extend.c **** 
  93:sieve_extend.c **** struct sieve_state {
  94:sieve_extend.c ****     bitword_t* bitarray;
  95:sieve_extend.c ****     counter_t  bits;
  96:sieve_extend.c ****     counter_t  size;
  97:sieve_extend.c **** };
  98:sieve_extend.c **** 
  99:sieve_extend.c **** #include "debugtools.h"
 100:sieve_extend.c **** 
 101:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 102:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 103:sieve_extend.c **** static struct sieve_state *create_sieve(counter_t size) {
 104:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 105:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 106:sieve_extend.c **** 
 107:sieve_extend.c ****     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)memSize );
 108:sieve_extend.c ****     sieve->bits     = size >> 1;
 109:sieve_extend.c ****     sieve->size     = size;
 110:sieve_extend.c **** 
 111:sieve_extend.c ****     // moved clearing the sieve with 0 to the sieve_block_extend
 112:sieve_extend.c ****     // it gave weird malloc problems at this point
 113:sieve_extend.c ****     return sieve;
 114:sieve_extend.c **** }
 115:sieve_extend.c **** 
 116:sieve_extend.c **** static void delete_sieve(struct sieve_state *sieve) {
 117:sieve_extend.c ****     free(sieve->bitarray);
 118:sieve_extend.c ****     free(sieve);
 119:sieve_extend.c **** }
 120:sieve_extend.c **** 
 121:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 122:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitarray, register counter_t index) {
 123:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 124:sieve_extend.c ****     return index;
 125:sieve_extend.c **** }
 126:sieve_extend.c **** 
 127:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 128:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitarray, register counter_t index) {
 129:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 130:sieve_extend.c **** 
 131:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 132:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 133:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 134:sieve_extend.c ****    index += distance;
 135:sieve_extend.c ****    distance += index_bit;
 136:sieve_extend.c **** 
 137:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 138:sieve_extend.c ****        index_word++;
 139:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 140:sieve_extend.c ****        index += distance;
GAS LISTING /tmp/ccgH0yRS.s 			page 5


 141:sieve_extend.c ****    }
 142:sieve_extend.c **** 
 143:sieve_extend.c ****    return index;
 144:sieve_extend.c **** }
 145:sieve_extend.c **** 
 146:sieve_extend.c **** 
 147:sieve_extend.c **** static void inline applyMask(bitword_t* __restrict bitarray, const counter_t step, const counter_t 
 148:sieve_extend.c **** //#if __APPLE__
 149:sieve_extend.c **** //   register const counter_t step_2 = step * 2;
 150:sieve_extend.c **** //   register const counter_t step_3 = step * 3;
 151:sieve_extend.c **** //   register const counter_t step_4 = step * 4;
 152:sieve_extend.c **** //   register const counter_t range_stop_word = wordindex(range_stop);
 153:sieve_extend.c **** //   const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (co
 154:sieve_extend.c **** //
 155:sieve_extend.c **** //   #pragma ivdep
 156:sieve_extend.c **** //   for (;index_word < loop_stop_word;  index_word += step_4) {
 157:sieve_extend.c **** //       bitarray[index_word         ] |= mask;
 158:sieve_extend.c **** //       bitarray[index_word + step  ] |= mask;
 159:sieve_extend.c **** //       bitarray[index_word + step_2] |= mask;
 160:sieve_extend.c **** //       bitarray[index_word + step_3] |= mask;
 161:sieve_extend.c **** //   }
 162:sieve_extend.c **** //
 163:sieve_extend.c **** //   #pragma ivdep
 164:sieve_extend.c **** //   while (index_word < range_stop_word) {
 165:sieve_extend.c **** //       bitarray[index_word] |= mask;
 166:sieve_extend.c **** //       index_word += step;
 167:sieve_extend.c **** //   }
 168:sieve_extend.c **** //
 169:sieve_extend.c **** //   if (index_word == wordindex(range_stop)) {
 170:sieve_extend.c **** //       bitarray[wordindex(range_stop)] |= (mask & chopmask2(range_stop));
 171:sieve_extend.c **** //   }
 172:sieve_extend.c **** //#endif
 173:sieve_extend.c **** //    ALTERNATIVE using pointers is faster in gcc
 174:sieve_extend.c **** //#if __linux__
 175:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 176:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 177:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 178:sieve_extend.c **** 
 179:sieve_extend.c ****   #pragma unroll
 180:sieve_extend.c ****    #pragma ivdep
 181:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 182:sieve_extend.c ****        *index_ptr |= mask;
 183:sieve_extend.c ****        index_ptr+=step;
 184:sieve_extend.c ****        *index_ptr |= mask;
 185:sieve_extend.c ****        index_ptr+=step;
 186:sieve_extend.c ****        *index_ptr |= mask;
 187:sieve_extend.c ****        index_ptr+=step;
 188:sieve_extend.c ****        *index_ptr |= mask;
 189:sieve_extend.c ****        index_ptr+=step;
 190:sieve_extend.c ****        *index_ptr |= mask;
 191:sieve_extend.c ****        index_ptr+=step;
 192:sieve_extend.c ****    }
 193:sieve_extend.c **** 
 194:sieve_extend.c ****    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];
 195:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 196:sieve_extend.c ****        *index_ptr |= mask;
 197:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccgH0yRS.s 			page 6


 198:sieve_extend.c ****    }
 199:sieve_extend.c **** 
 200:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 201:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 202:sieve_extend.c ****    }
 203:sieve_extend.c **** 
 204:sieve_extend.c **** //    const counter_t range_stop_word = wordindex(range_stop);
 205:sieve_extend.c **** //    bitword_t* __restrict index_ptr = &bitarray[index_word];
 206:sieve_extend.c **** //    bitword_t* __restrict fast_loop_ptr = &bitarray[((range_stop_word>step*4) ? (range_stop_word 
 207:sieve_extend.c **** //    bitword_t* __restrict range_stop_ptr = &bitarray[(range_stop_word)];//>step_4) ? (range_stop_
 208:sieve_extend.c **** //    const int loop_iterations = ((range_stop_word - index_word) / (step*4));
 209:sieve_extend.c **** 
 210:sieve_extend.c **** //      debug printf("..%ju loop iterations for step %ju range in words (%ju - %ju)\n",(uintmax_t)l
 211:sieve_extend.c **** 
 212:sieve_extend.c **** //     #pragma unroll 1
 213:sieve_extend.c **** //    #pragma ivdep
 214:sieve_extend.c **** //    for ( int i=0; i < loop_iterations; i++) {
 215:sieve_extend.c **** //        *(index_ptr) |= mask;
 216:sieve_extend.c **** //        *(index_ptr+step) |= mask;
 217:sieve_extend.c **** //        *(index_ptr+2*step) |= mask;
 218:sieve_extend.c **** //        *(index_ptr+3*step) |= mask;
 219:sieve_extend.c **** //        index_ptr += 4*step;
 220:sieve_extend.c **** //    }
 221:sieve_extend.c **** 
 222:sieve_extend.c **** //    while ( index_ptr < range_stop_ptr) {
 223:sieve_extend.c **** //        *index_ptr |= mask;
 224:sieve_extend.c **** //        index_ptr+=step;
 225:sieve_extend.c **** //    }
 226:sieve_extend.c **** 
 227:sieve_extend.c **** //    if (index_ptr == range_stop_ptr) {
 228:sieve_extend.c **** //       *range_stop_ptr |= (mask & chopmask(range_stop));
 229:sieve_extend.c **** //    }
 230:sieve_extend.c **** //#endif
 231:sieve_extend.c **** }
 232:sieve_extend.c **** 
 233:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 234:sieve_extend.c **** static void inline setBitsTrue_smallStep(bitword_t* __restrict bitarray, const counter_t range_star
 235:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 236:sieve_extend.c **** 
 237:sieve_extend.c ****     // build the pattern in a word
 238:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
 239:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 240:sieve_extend.c ****         pattern |= (pattern << patternsize);
 241:sieve_extend.c **** 
 242:sieve_extend.c ****     // debug if (step==13) { printf("Before\n"); dump_bitarray(bitarray,10); }
 243:sieve_extend.c ****     
 244:sieve_extend.c ****     // initialize loop variables and stop if this is it
 245:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 246:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 247:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 248:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 249:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 250:sieve_extend.c ****        return;
 251:sieve_extend.c ****     }
 252:sieve_extend.c ****     
 253:sieve_extend.c ****     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 254:sieve_extend.c **** 
GAS LISTING /tmp/ccgH0yRS.s 			page 7


 255:sieve_extend.c ****    // from now on, we are before range_stop_word
 256:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 257:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 259:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 260:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 261:sieve_extend.c ****    #pragma unroll
 262:sieve_extend.c ****    #pragma ivdep
 263:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; i++) {
 264:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 265:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 266:sieve_extend.c **** 
 267:sieve_extend.c ****         // bitarray[range_start_word+i] |=  (pattern >> (pattern_size-((shift+i*pattern_shift) % st
 268:sieve_extend.c ****    }
 269:sieve_extend.c ****    bitarray[range_stop_word] &= chopmask(range_stop);
 270:sieve_extend.c **** 
 271:sieve_extend.c **** //    for(counter_t check=range_start; check<=range_stop; check+=step) {
 272:sieve_extend.c **** //         if (!(bitarray[wordindex(check)] & markmask(check))) {
 273:sieve_extend.c **** //             printf("Bit %ju not set\n",check);
 274:sieve_extend.c **** //             dump_bitarray(bitarray,4);
 275:sieve_extend.c **** //             printWord(pattern); printf("\n");
 276:sieve_extend.c **** //             exit(0);
 277:sieve_extend.c **** //         }
 278:sieve_extend.c **** //    }
 279:sieve_extend.c **** 
 280:sieve_extend.c ****     // pattern = (pattern << (bitindex_calc(range_start) % step)); // correct for inital offset
 281:sieve_extend.c ****     // const register bitshift_t pattern_shift = WORD_SIZE_bitshift % step;
 282:sieve_extend.c ****     // const register bitshift_t pattern_shift_flipped = WORD_SIZE_bitshift - pattern_shift - patte
 283:sieve_extend.c ****     // const register counter_t loop_range = range_stop_word - range_start_word;
 284:sieve_extend.c ****     // #pragma unroll
 285:sieve_extend.c ****     // #pragma ivdep
 286:sieve_extend.c ****     // for (counter_t i=1; i <= loop_range; i++) {
 287:sieve_extend.c ****     //     pattern = (pattern >> pattern_shift) | (pattern << pattern_shift_flipped);
 288:sieve_extend.c ****     //     bitarray[range_start_word+i] |= pattern;
 289:sieve_extend.c ****     // }
 290:sieve_extend.c ****     // bitarray[range_stop_word] &= chopmask(range_stop);
 291:sieve_extend.c **** }
 292:sieve_extend.c **** 
 293:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 294:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 295:sieve_extend.c **** // This is especially true for small steps over long ranges
 296:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 297:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitarray, const counter_t range_start, co
 298:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 299:sieve_extend.c **** 
 300:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 301:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 302:sieve_extend.c **** 
 303:sieve_extend.c ****         #pragma ivdep
 304:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 305:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 306:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 307:sieve_extend.c ****             #pragma ivdep
 308:sieve_extend.c ****             do {
 309:sieve_extend.c ****                 mask |= markmask(index);
 310:sieve_extend.c ****                 index += step;
 311:sieve_extend.c ****             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccgH0yRS.s 			page 8


 312:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 313:sieve_extend.c ****             //     mask |= markmask(index);
 314:sieve_extend.c ****             bitarray[index_word] |= mask;
 315:sieve_extend.c ****         }
 316:sieve_extend.c ****     }
 317:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 318:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 319:sieve_extend.c ****         
 320:sieve_extend.c ****         #pragma ivdep
 321:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
 322:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 323:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 324:sieve_extend.c ****             #pragma ivdep
 325:sieve_extend.c ****             do {
 326:sieve_extend.c ****                 mask |= markmask(index);
 327:sieve_extend.c ****                 index += step;
 328:sieve_extend.c ****             } while (index_word == wordindex(index));
 329:sieve_extend.c ****             // #pragma ivdep
 330:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 331:sieve_extend.c ****             //     mask |= markmask(index);
 332:sieve_extend.c ****             applyMask(bitarray, step, range_stop, mask, index_word);
 333:sieve_extend.c ****         }
 334:sieve_extend.c ****     }
 335:sieve_extend.c **** }
 336:sieve_extend.c **** 
 337:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 338:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitarray, const counter_t range_sta
 339:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 340:sieve_extend.c ****     
 341:sieve_extend.c ****     #pragma unroll
 342:sieve_extend.c ****     #pragma ivdep
 343:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 344:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 345:sieve_extend.c ****     }
 346:sieve_extend.c **** 
 347:sieve_extend.c **** //    counter_t loop_iterations = (range_stop - range_start) / step;
 348:sieve_extend.c **** //    #pragma unroll
 349:sieve_extend.c **** //     #pragma ivdep
 350:sieve_extend.c **** //     for (register counter_t i = 0; i <= loop_iterations; i++) {
 351:sieve_extend.c **** //         bitarray[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 352:sieve_extend.c **** //     }
 353:sieve_extend.c **** }
 354:sieve_extend.c **** 
 355:sieve_extend.c **** // small ranges (< WORD_SIZE * step) mean the mask is unique
 356:sieve_extend.c **** static void setBitsTrue_race(bitword_t* bitarray, counter_t index1, counter_t index2, const counter
 357:sieve_extend.c ****     debug printf("Setting bits step %ju and %ju in %ju bit range (%ju-%ju) using race (%ju occuranc
 358:sieve_extend.c **** 
 359:sieve_extend.c ****     counter_t index1_word = wordindex(index1);
 360:sieve_extend.c ****     counter_t index2_word = wordindex(index2);
 361:sieve_extend.c ****     
 362:sieve_extend.c ****     while (1) {
 363:sieve_extend.c ****         if (index1_word == index2_word) {
 364:sieve_extend.c ****             bitword_t mask = SAFE_ZERO;
 365:sieve_extend.c ****             counter_t index_word = index1_word;
 366:sieve_extend.c ****             do {
 367:sieve_extend.c ****                 mask |= markmask(index1);
 368:sieve_extend.c ****                 index1 += step1;
GAS LISTING /tmp/ccgH0yRS.s 			page 9


 369:sieve_extend.c ****                 index1_word = wordindex(index1);
 370:sieve_extend.c ****             } while (index1_word == index_word);
 371:sieve_extend.c ****             do {
 372:sieve_extend.c ****                 mask |= markmask(index2);
 373:sieve_extend.c ****                 index2 += step2;
 374:sieve_extend.c ****                 index2_word = wordindex(index2);
 375:sieve_extend.c ****             } while (index2_word == index_word);
 376:sieve_extend.c ****             bitarray[index_word] |= mask;
 377:sieve_extend.c ****         }
 378:sieve_extend.c **** 
 379:sieve_extend.c ****         // because step is larger, index2 is the most likely to get out of bounds first
 380:sieve_extend.c ****         if (index2 > range_stop) {
 381:sieve_extend.c ****             while (index1 <= range_stop) {
 382:sieve_extend.c ****                 bitarray[wordindex(index1)] |= markmask(index1);
 383:sieve_extend.c ****                 index1 += step1;
 384:sieve_extend.c ****             }
 385:sieve_extend.c ****             return;
 386:sieve_extend.c ****         }
 387:sieve_extend.c **** 
 388:sieve_extend.c ****         if (index1 > range_stop) {
 389:sieve_extend.c ****             while (index2 <= range_stop) {
 390:sieve_extend.c ****                 bitarray[wordindex(index2)] |= markmask(index2);
 391:sieve_extend.c ****                 index2 += step2;
 392:sieve_extend.c ****             }
 393:sieve_extend.c ****             return;
 394:sieve_extend.c ****         }
 395:sieve_extend.c **** 
 396:sieve_extend.c ****         while (index1_word < index2_word) {
 397:sieve_extend.c ****             bitarray[index1_word] |= markmask(index1);
 398:sieve_extend.c ****             index1 += step1;
 399:sieve_extend.c ****             index1_word = wordindex(index1);
 400:sieve_extend.c ****         }
 401:sieve_extend.c ****         
 402:sieve_extend.c ****         while (index2_word < index1_word){
 403:sieve_extend.c ****             bitarray[index2_word] |= markmask(index2);
 404:sieve_extend.c ****             index2 += step2;
 405:sieve_extend.c ****             index2_word = wordindex(index2);
 406:sieve_extend.c ****         }
 407:sieve_extend.c **** 
 408:sieve_extend.c ****     }
 409:sieve_extend.c **** }
 410:sieve_extend.c **** 
 411:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 412:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitarray, const counter_t range_sta
 413:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 414:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 415:sieve_extend.c **** 
 416:sieve_extend.c **** //    #pragma unroll
 417:sieve_extend.c ****     #pragma ivdep
 418:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 419:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 420:sieve_extend.c ****     }
 421:sieve_extend.c **** }
 422:sieve_extend.c **** 
 423:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word, counter_t range_star
 424:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 425:sieve_extend.c **** 
GAS LISTING /tmp/ccgH0yRS.s 			page 10


 426:sieve_extend.c ****     // const counter_t range_stop_unique_oneword =  min(range_start + WORD_SIZE_counter * step, ran
 427:sieve_extend.c ****     // for (counter_t index = range_start; index <= range_stop_unique_oneword; index += step) {
 428:sieve_extend.c ****     //     applyMask(bitarray_word, step, range_stop, markmask(index), wordindex(index));
 429:sieve_extend.c ****     // }
 430:sieve_extend.c ****     // return;
 431:sieve_extend.c **** 
 432:sieve_extend.c ****     bitvector_t* __restrict bitarray_vector = __builtin_assume_aligned( (bitvector_t*) bitarray_wor
 433:sieve_extend.c ****     
 434:sieve_extend.c ****     // find out where the first complete vector is
 435:sieve_extend.c ****     // printWord(range_start); printf("\n");
 436:sieve_extend.c ****     // printWord(~VECTORMASK); printf("\n");
 437:sieve_extend.c ****     // printWord(vectorstart(range_start)); printf("\n\n");
 438:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 439:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 440:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 441:sieve_extend.c **** 
 442:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 443:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 444:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 445:sieve_extend.c **** 
 446:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 447:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 448:sieve_extend.c ****             return;                 
 449:sieve_extend.c ****         }
 450:sieve_extend.c **** 
 451:sieve_extend.c ****         debug2 printf("..Marking without vector until %ju\n",range_start_atvector);
 452:sieve_extend.c ****         register counter_t index = range_start; // outside to later adjust range_start
 453:sieve_extend.c **** 
 454:sieve_extend.c ****         // #pragma ivdep unroll
 455:sieve_extend.c ****         // for (; index < range_start_atvector; index += step) 
 456:sieve_extend.c ****         //     bitarray_word[wordindex(index)] |= markmask(index);
 457:sieve_extend.c ****         // range_start = index;
 458:sieve_extend.c **** 
 459:sieve_extend.c ****         #pragma ivdep unroll
 460:sieve_extend.c ****         for (; range_start < range_start_atvector;) {
 461:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 462:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 463:sieve_extend.c ****             do {
 464:sieve_extend.c ****                 mask |= markmask(range_start);
 465:sieve_extend.c ****                 range_start += step;
 466:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 467:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 468:sieve_extend.c ****         }
 469:sieve_extend.c ****     }
 470:sieve_extend.c ****     
 471:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 472:sieve_extend.c ****     
 473:sieve_extend.c ****     const counter_t step_2 = step * 2;
 474:sieve_extend.c ****     const counter_t step_3 = step * 3;
 475:sieve_extend.c ****     const counter_t step_4 = step * 4;
 476:sieve_extend.c **** 
 477:sieve_extend.c ****     #pragma ivdep unroll
 478:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 479:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 480:sieve_extend.c ****         register bitvector_t quadmask = { };
 481:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 482:sieve_extend.c ****         
GAS LISTING /tmp/ccgH0yRS.s 			page 11


 483:sieve_extend.c ****         // build a quadmask
 484:sieve_extend.c ****         #pragma ivdep unroll
 485:sieve_extend.c ****         do {
 486:sieve_extend.c ****             quadmask[word] |= markmask(index);
 487:sieve_extend.c ****             index += step;
 488:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 489:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 490:sieve_extend.c ****         
 491:sieve_extend.c ****         // use mask on all n*step multiples
 492:sieve_extend.c ****         register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_WORD
 493:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 494:sieve_extend.c ****         
 495:sieve_extend.c ****         // if (current_vector+step_4 <= range_stop_vector) {
 496:sieve_extend.c ****         //     register const counter_t loop_stop_vector = (range_stop_vector > step_4) ? (range_st
 497:sieve_extend.c ****         //     #pragma ivdep unroll
 498:sieve_extend.c ****         //     for(; current_vector <= loop_stop_vector; current_vector += step_4) {
 499:sieve_extend.c ****         //         bitarray_vector[current_vector       ] |= quadmask;
 500:sieve_extend.c ****         //         bitarray_vector[current_vector+step  ] |= quadmask;
 501:sieve_extend.c ****         //         bitarray_vector[current_vector+step_2] |= quadmask;
 502:sieve_extend.c ****         //         bitarray_vector[current_vector+step_3] |= quadmask;
 503:sieve_extend.c ****         //     }
 504:sieve_extend.c ****         // }
 505:sieve_extend.c **** 
 506:sieve_extend.c ****         #pragma ivdep unroll
 507:sieve_extend.c ****         for(; current_vector+step_4 < range_stop_vector; current_vector += step_4) {
 508:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 511:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 512:sieve_extend.c ****         }
 513:sieve_extend.c **** 
 514:sieve_extend.c ****         #pragma ivdep unroll
 515:sieve_extend.c ****         for(; current_vector < range_stop_vector; current_vector += step) {
 516:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 517:sieve_extend.c ****         }
 518:sieve_extend.c ****         
 519:sieve_extend.c ****         if unlikely(current_vector == range_stop_vector) {
 520:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 521:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 522:sieve_extend.c ****             if likely(index_word <= range_stop_word) {
 523:sieve_extend.c ****                 #pragma ivdep
 524:sieve_extend.c ****                 for (word =0; word < VECTOR_ELEMENTS; word++) {
 525:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 526:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 527:sieve_extend.c ****                 }
 528:sieve_extend.c ****             }
 529:sieve_extend.c **** 
 530:sieve_extend.c ****         }
 531:sieve_extend.c ****     }
 532:sieve_extend.c **** }
 533:sieve_extend.c **** 
 534:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitarray, const counter_t source_start, con
  90              		.loc 1 534 153 view -0
  91              		.cfi_startproc
 535:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 535 5 view .LVU1
 536:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitarray(bitarray, 4); }
GAS LISTING /tmp/ccgH0yRS.s 			page 12


 537:sieve_extend.c **** 
 538:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 538 5 view .LVU2
 539:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
  94              		.loc 1 539 5 view .LVU3
  95              	# sieve_extend.c:534: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 534:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 534 153 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:538:     const counter_t source_word = wordindex(source_start);
 538:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 102              		.loc 1 538 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:534: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 534:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 534 153 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 109              		.loc 1 539 134 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:534: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 534:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 534 153 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:538:     const counter_t source_word = wordindex(source_start);
 538:sieve_extend.c ****     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_start)) | (bitarray[sou
 116              		.loc 1 538 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 120              		.loc 1 539 134 view .LVU10
 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:534: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 534:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 534 153 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 126              		.loc 1 539 133 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 129              		.loc 1 539 167 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:534: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 534:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 534 153 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 135              		.loc 1 539 133 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 138              		.loc 1 539 167 view .LVU16
GAS LISTING /tmp/ccgH0yRS.s 			page 13


 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:534: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 534:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 534 153 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 148              		.loc 1 539 167 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:534: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 534:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 534 153 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 157              		.loc 1 539 58 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 161              		.loc 1 539 112 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 164              		.loc 1 539 58 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
 165      D1
 166              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 167              		.loc 1 539 85 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
 169              	# sieve_extend.c:534: static void extendSieve_smallSize(bitword_t* __restrict bitarray, const count
 534:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 534 153 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:539:     register bitword_t pattern = ((bitarray[source_word] >> bitindex(source_s
 173              		.loc 1 539 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 540 5 is_stmt 1 view .LVU26
 177              	.LBB315:
 178              		.loc 1 540 10 view .LVU27
 179              		.loc 1 540 54 view .LVU28
 180              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 540 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
GAS LISTING /tmp/ccgH0yRS.s 			page 14


 541:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 541 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 540 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 192              		.loc 1 541 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 195              		.loc 1 541 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 540 90 is_stmt 1 discriminator 3 view .LVU34
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 540 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 540 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 541 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 540 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 209              		.loc 1 541 29 view .LVU39
 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 212              		.loc 1 541 17 view .LVU40
 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 540 90 is_stmt 1 view .LVU41
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 540 54 view .LVU42
 217              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 540 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 541 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 540 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 226              		.loc 1 541 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
GAS LISTING /tmp/ccgH0yRS.s 			page 15


 227      D0
 228              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 229              		.loc 1 541 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 540 90 is_stmt 1 view .LVU48
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 540 54 view .LVU49
 234              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 540 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 541 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 540 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 243              		.loc 1 541 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 540 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 249              		.loc 1 541 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 540 90 is_stmt 1 view .LVU56
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 540 54 view .LVU57
 254              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 540 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 541 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 540 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 263              		.loc 1 541 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 540 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 269              		.loc 1 541 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
GAS LISTING /tmp/ccgH0yRS.s 			page 16


 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 540 90 is_stmt 1 view .LVU64
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 540 54 view .LVU65
 274              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 540 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 541 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 540 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 283              		.loc 1 541 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 540 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 289              		.loc 1 541 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 540 90 is_stmt 1 view .LVU72
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 540 54 view .LVU73
 294              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 295              		.loc 1 540 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 541 9 is_stmt 1 view .LVU75
 299              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 540 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 303              		.loc 1 541 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 540 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 309              		.loc 1 541 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 540 90 is_stmt 1 view .LVU80
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 540 54 view .LVU81
 314              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/ccgH0yRS.s 			page 17


 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 540 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 541 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 540 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 323              		.loc 1 541 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:541:         pattern |= (pattern << pattern_size);
 326              		.loc 1 541 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 540 90 is_stmt 1 view .LVU87
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 540 54 view .LVU88
 331              	# sieve_extend.c:540:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 540 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
 337              		.p2align 3
 338              	.L2:
 540:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 540 5 view .LVU90
 340              	.LBE315:
 542:sieve_extend.c **** 
 543:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 543 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:543:     const counter_t destination_start = source_start + size;
 343              		.loc 1 543 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 544:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 544 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:545:     counter_t destination_stop_word = wordindex(destination_stop);
 545:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 545 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:544:     counter_t destination_start_word = wordindex(destination_start);
 544:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 544 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 544:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
GAS LISTING /tmp/ccgH0yRS.s 			page 18


 355              		.loc 1 544 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 545 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:545:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 545 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 546:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 546 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 546 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:546:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 546 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 547:sieve_extend.c ****         bitarray[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(des
 548:sieve_extend.c ****         return;
 549:sieve_extend.c ****     }
 550:sieve_extend.c **** 
 551:sieve_extend.c ****     bitarray[destination_start_word] |= (pattern << bitindex(destination_start));
 376              		.loc 1 551 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:551:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 378              		.loc 1 551 38 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
 380              	# sieve_extend.c:554:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 552:sieve_extend.c **** 
 553:sieve_extend.c ****     // TODO: refactor according to smallstep
 554:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 554 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:551:     bitarray[destination_start_word] |= (pattern << bitindex(destination_star
 551:sieve_extend.c **** 
 384              		.loc 1 551 38 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 554 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:554:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 554 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.140,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 555:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
GAS LISTING /tmp/ccgH0yRS.s 			page 19


 394              		.loc 1 555 5 is_stmt 1 view .LVU108
 556:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 556 5 view .LVU109
 557:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 557 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:557:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 557 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:556:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 556:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 556 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:557:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 557 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 558:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 558 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:555:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 555:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 555 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:556:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 556:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 556 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 556:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 556 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.141,
 421              	# sieve_extend.c:558:     destination_start_word++;
 422              		.loc 1 558 27 view .LVU118
 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 559:sieve_extend.c ****     
 560:sieve_extend.c ****     #pragma unroll
 561:sieve_extend.c ****     #pragma ivdep
 562:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 425              		.loc 1 562 5 is_stmt 1 view .LVU119
 426              	.LBB316:
 427              		.loc 1 562 10 view .LVU120
 428              		.loc 1 562 25 view .LVU121
 429 0193 4D8D6901 		lea	r13, 1[r9]	# niters.139,
 430 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 431 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 432              	.LBE316:
 433              	# sieve_extend.c:555:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 555:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 434              		.loc 1 555 31 is_stmt 0 view .LVU122
 435 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 436              	.LVL26:
 555:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 437              		.loc 1 555 31 view .LVU123
GAS LISTING /tmp/ccgH0yRS.s 			page 20


 438 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 439 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 440 01aa 0F860505 		jbe	.L11	#,
 440      0000
 441 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.141
 442 01b3 0F84F404 		je	.L12	#,
 442      0000
 443              	.LBB317:
 563:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 444              		.loc 1 563 9 is_stmt 1 view .LVU124
 445              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 446              		.loc 1 563 72 is_stmt 0 view .LVU125
 447 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 448 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 449              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 450              		.loc 1 563 55 view .LVU126
 451 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 451      F0
 452              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 453              		.loc 1 563 127 view .LVU127
 454 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 454      F8
 455              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 456              		.loc 1 563 116 view .LVU128
 457 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 458 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 459              		.loc 1 562 40 is_stmt 1 view .LVU129
 460              	.LVL27:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 461              		.loc 1 562 25 view .LVU130
 462 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.141,
 463              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 464              		.loc 1 562 40 is_stmt 0 view .LVU131
 465 01d4 41BE0100 		mov	r14d, 1	# i,
 465      0000
 466 01da 7452     		je	.L7	#,
 467              		.loc 1 563 9 is_stmt 1 view .LVU132
 468              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 469              		.loc 1 563 81 is_stmt 0 view .LVU133
 470 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 471              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 472              		.loc 1 563 72 view .LVU134
 473 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 474              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 475              		.loc 1 563 99 view .LVU135
 476 01e3 4183E63F 		and	r14d, 63	# _328,
 477              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 478              		.loc 1 563 72 view .LVU136
 479 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 480              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 481              		.loc 1 563 127 view .LVU137
 482 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 482      F0
 483              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 484              		.loc 1 563 55 view .LVU138
GAS LISTING /tmp/ccgH0yRS.s 			page 21


 485 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 485      F8
 486              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 487              		.loc 1 563 116 view .LVU139
 488 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 489 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 489      10
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 490              		.loc 1 562 40 is_stmt 1 view .LVU140
 491              	.LVL28:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 492              		.loc 1 562 25 view .LVU141
 493 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.141,
 494              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 495              		.loc 1 562 40 is_stmt 0 view .LVU142
 496 0200 41BE0200 		mov	r14d, 2	# i,
 496      0000
 497 0206 7526     		jne	.L7	#,
 498              		.loc 1 563 9 is_stmt 1 view .LVU143
 499              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 500              		.loc 1 563 81 is_stmt 0 view .LVU144
 501 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 502              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 503              		.loc 1 563 72 view .LVU145
 504 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 505              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 506              		.loc 1 563 99 view .LVU146
 507 020f 4183E63F 		and	r14d, 63	# _104,
 508              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 509              		.loc 1 563 72 view .LVU147
 510 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 511              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 512              		.loc 1 563 127 view .LVU148
 513 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 513      F0
 514              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 515              		.loc 1 563 55 view .LVU149
 516 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 516      F8
 517              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 518              		.loc 1 563 116 view .LVU150
 519 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 520 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 520      18
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 521              		.loc 1 562 40 is_stmt 1 view .LVU151
 522              	.LVL29:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 523              		.loc 1 562 25 view .LVU152
 524              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 525              		.loc 1 562 40 is_stmt 0 view .LVU153
 526 0228 41BE0300 		mov	r14d, 3	# i,
 526      0000
 527              	.LVL30:
 528              	.L7:
GAS LISTING /tmp/ccgH0yRS.s 			page 22


 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 529              		.loc 1 562 40 view .LVU154
 530 022e 4929F5   		sub	r13, rsi	# niters.142, prolog_loop_niters.141
 531 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 532 0234 4D89EB   		mov	r11, r13	# bnd.143, niters.142
 533 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 533      DE
 534 023c 49C1EB03 		shr	r11, 3	# bnd.143,
 535 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.161,
 536 0244 49C1E306 		sal	r11, 6	# tmp391,
 537 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 537      CB
 538 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 538      E0
 539 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 540 0256 4183E340 		and	r11d, 64	# tmp391,
 541 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.146, tmp382,
 541      00000000 
 542 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 542      7424F8
 543 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 543      D4
 544 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 544      6C24F4
 545 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 545      6424FC
 546 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 546      00000000 
 547 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 547      00000000 
 548 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 548      00000000 
 549 0294 0F849600 		je	.L9	#,
 549      0000
 550              	.LVL31:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 551              		.loc 1 562 40 view .LVU155
 552 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.146, vect_vec_iv_.146
 553 029e 4883C640 		add	rsi, 64	# ivtmp.161,
 554              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 555              		.loc 1 563 81 view .LVU156
 556 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 557 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 557      F0
 558              		.loc 1 563 9 is_stmt 1 view .LVU157
 559              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 560              		.loc 1 563 81 is_stmt 0 view .LVU158
 561 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.146, vect_vec_iv_.146,
 561      C220
 562 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.146, vect_vec_iv_.146,
 562      DA31
 563 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 563      D8
 564 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 564      DBD8
 565 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 566 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.148, vect_cst__146, tmp542
GAS LISTING /tmp/ccgH0yRS.s 			page 23


 566      E1
 567              	.LVL32:
 568              		.loc 1 563 81 view .LVU159
 569 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 570              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 571              		.loc 1 563 99 view .LVU160
 572 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.150, vect__47.149, tmp498
 572      C5
 573              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 574              		.loc 1 563 72 view .LVU161
 575 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.151, vect_cst__152, vect__48.150
 576              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 577              		.loc 1 563 116 view .LVU162
 578 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.150
 578      D8
 579 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.151
 579      D7
 580 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 580      CB
 581 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 581      DA
 582 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.151
 582      F901
 583 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 583      E1
 584 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.150
 584      C001
 585 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.152, tmp554
 585      F9
 586 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.154, tmp557
 586      D8
 587 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 587      D7
 588 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 588      DB
 589              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 590              		.loc 1 563 44 view .LVU163
 591 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.156
 591      C0
 592              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 593              		.loc 1 563 116 view .LVU164
 594 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 594      CB
 595              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 596              		.loc 1 563 44 view .LVU165
 597 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.156
 597      E0
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 598              		.loc 1 562 40 is_stmt 1 view .LVU166
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 599              		.loc 1 562 25 view .LVU167
 600 0320 4C39FE   		cmp	rsi, r15	# ivtmp.161, _344
 601 0323 0F841201 		je	.L37	#,
 601      0000
 602 0329 0F1F8000 		.p2align 4
 602      000000
 603              		.p2align 3
GAS LISTING /tmp/ccgH0yRS.s 			page 24


 604              	.L9:
 605              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 606              		.loc 1 563 81 is_stmt 0 discriminator 3 view .LVU168
 607 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 608 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 608      E0
 609              		.loc 1 563 9 is_stmt 1 discriminator 3 view .LVU169
 610              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 611              		.loc 1 563 81 is_stmt 0 discriminator 3 view .LVU170
 612 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.146, vect_vec_iv_.146,
 612      F920
 613 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.146, vect_vec_iv_.146,
 613      F131
 614 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 614      D7D8
 615 034b 4883EE80 		sub	rsi, -128	# ivtmp.161,
 616 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 616      C6D8
 617 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 618 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.148, vect_cst__146, tmp400
 618      DB
 619 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 620              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 621              		.loc 1 563 99 discriminator 3 view .LVU171
 622 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.150, vect__47.149, tmp498
 622      FD
 623              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 624              		.loc 1 563 72 discriminator 3 view .LVU172
 625 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.151, vect_cst__152, vect__48.150
 625      CF
 626              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 627              		.loc 1 563 116 discriminator 3 view .LVU173
 628 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.150
 628      C7
 629 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.151
 629      F1
 630 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 630      D8
 631 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 631      D6
 632 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.151
 632      C901
 633 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 634 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.150
 634      FF01
 635 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.152, tmp412
 635      C9
 636 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.154, tmp415
 636      D7
 637 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 637      F1
 638 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 638      C2
 639              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 640              		.loc 1 563 44 discriminator 3 view .LVU174
 641 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.156
 641      80
GAS LISTING /tmp/ccgH0yRS.s 			page 25


 642              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 643              		.loc 1 563 81 discriminator 3 view .LVU175
 644 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.146, vect_vec_iv_.146, tmp497
 645              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 646              		.loc 1 563 116 discriminator 3 view .LVU176
 647 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 648              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 649              		.loc 1 563 81 discriminator 3 view .LVU177
 650 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.146, vect_vec_iv_.146,
 650      CB20
 651 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 651      C9D8
 652 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.146, vect_vec_iv_.146, tmp496
 652      F0
 653              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 654              		.loc 1 563 44 discriminator 3 view .LVU178
 655 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.156
 655      A0
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 656              		.loc 1 562 40 is_stmt 1 discriminator 3 view .LVU179
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 657              		.loc 1 562 25 discriminator 3 view .LVU180
 658              		.loc 1 563 9 discriminator 3 view .LVU181
 659              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 660              		.loc 1 563 81 is_stmt 0 discriminator 3 view .LVU182
 661 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.146, vect_vec_iv_.146,
 661      E331
 662 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 662      D8
 663 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 663      D7
 664 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.148, vect_cst__146, tmp517
 664      C2
 665 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.149, vect__45.148, vect_cst__148
 666              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 667              		.loc 1 563 99 discriminator 3 view .LVU183
 668 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.150, vect__47.149, tmp498
 668      CD
 669              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 670              		.loc 1 563 72 discriminator 3 view .LVU184
 671 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.151, vect_cst__152, vect__48.150
 671      E1
 672              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 673              		.loc 1 563 116 discriminator 3 view .LVU185
 674 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.150
 674      F9
 675 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.151
 675      DC
 676 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 676      D7
 677 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 677      CB
 678 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.151
 678      E301
 679 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 679      C2
 680 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.150
GAS LISTING /tmp/ccgH0yRS.s 			page 26


 680      C901
 681 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.152, tmp529
 681      E3
 682 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.154, tmp532
 682      C9
 683 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.153, vect_cst__156, vect_patt_139.152
 683      DC
 684 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.155, vect_cst__156, vect_patt_137.154
 684      F9
 685              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 686              		.loc 1 563 44 discriminator 3 view .LVU186
 687 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.156
 687      C0
 688              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 689              		.loc 1 563 116 discriminator 3 view .LVU187
 690 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.156, vect_patt_138.153, vect_patt_136.155
 690      D7
 691              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 692              		.loc 1 563 44 discriminator 3 view .LVU188
 693 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.156
 693      E0
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 694              		.loc 1 562 40 is_stmt 1 discriminator 3 view .LVU189
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 695              		.loc 1 562 25 discriminator 3 view .LVU190
 696 0432 4C39FE   		cmp	rsi, r15	# ivtmp.161, _344
 697 0435 0F85F5FE 		jne	.L9	#,
 697      FFFF
 698              	.L37:
 699 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.144, niters.142
 700 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.144,
 701 0442 4901F6   		add	r14, rsi	# tmp.145, niters_vector_mult_vf.144
 702 0445 4939F5   		cmp	r13, rsi	# niters.142, niters_vector_mult_vf.144
 703 0448 0F845A02 		je	.L50	#,
 703      0000
 704 044e C5F877   		vzeroupper
 705              	.L6:
 706              	.LVL33:
 707              		.loc 1 563 9 view .LVU191
 708              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 709              		.loc 1 563 81 is_stmt 0 view .LVU192
 710 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 711              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 712              		.loc 1 563 72 view .LVU193
 713 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 714              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 715              		.loc 1 563 81 view .LVU194
 716 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.145
 717              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 718              		.loc 1 563 17 view .LVU195
 719 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 720              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 721              		.loc 1 563 81 view .LVU196
 722 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 723              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 724              		.loc 1 563 99 view .LVU197
 725 0462 4183E73F 		and	r15d, 63	# _49,
GAS LISTING /tmp/ccgH0yRS.s 			page 27


 726              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 727              		.loc 1 563 127 view .LVU198
 728 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 728      F0
 729              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 730              		.loc 1 563 72 view .LVU199
 731 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 732              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 733              		.loc 1 562 40 view .LVU200
 734 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 735              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 736              		.loc 1 563 55 view .LVU201
 737 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 737      E8
 738              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 739              		.loc 1 563 116 view .LVU202
 740 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 741 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 742              		.loc 1 562 40 is_stmt 1 view .LVU203
 743              	.LVL34:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 744              		.loc 1 562 25 view .LVU204
 745              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 746              		.loc 1 562 5 is_stmt 0 view .LVU205
 747 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 748 0481 0F87F101 		ja	.L10	#,
 748      0000
 749              		.loc 1 563 9 is_stmt 1 view .LVU206
 750              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 751              		.loc 1 563 81 is_stmt 0 view .LVU207
 752 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 753              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 754              		.loc 1 563 72 view .LVU208
 755 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
 756              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 757              		.loc 1 563 81 view .LVU209
 758 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 759              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 760              		.loc 1 563 17 view .LVU210
 761 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 762              	.LVL35:
 763              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 764              		.loc 1 563 81 view .LVU211
 765 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 766              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 767              		.loc 1 563 99 view .LVU212
 768 0497 4183E33F 		and	r11d, 63	# _83,
 769              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 770              		.loc 1 563 72 view .LVU213
 771 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 772              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 773              		.loc 1 563 127 view .LVU214
 774 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 774      D8
GAS LISTING /tmp/ccgH0yRS.s 			page 28


 775              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 776              		.loc 1 563 55 view .LVU215
 777 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 777      F0
 778              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 779              		.loc 1 563 116 view .LVU216
 780 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 781 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 782              		.loc 1 562 40 is_stmt 1 view .LVU217
 783 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 784              	.LVL36:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 785              		.loc 1 562 25 view .LVU218
 786              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 787              		.loc 1 562 5 is_stmt 0 view .LVU219
 788 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 789 04b6 0F82BC01 		jb	.L10	#,
 789      0000
 790              		.loc 1 563 9 is_stmt 1 view .LVU220
 791              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 792              		.loc 1 563 81 is_stmt 0 view .LVU221
 793 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 794              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 795              		.loc 1 563 72 view .LVU222
 796 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 797              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 798              		.loc 1 563 81 view .LVU223
 799 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 800              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 801              		.loc 1 563 17 view .LVU224
 802 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 803              	.LVL37:
 804              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 805              		.loc 1 563 81 view .LVU225
 806 04c8 01CE     		add	esi, ecx	# tmp433, shift
 807              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 808              		.loc 1 563 99 view .LVU226
 809 04ca 83E63F   		and	esi, 63	# _190,
 810              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 811              		.loc 1 563 72 view .LVU227
 812 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 813              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 814              		.loc 1 563 127 view .LVU228
 815 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 815      F0
 816              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 817              		.loc 1 563 55 view .LVU229
 818 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 818      D8
 819              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 820              		.loc 1 563 116 view .LVU230
 821 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 822 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 823              		.loc 1 562 40 is_stmt 1 view .LVU231
GAS LISTING /tmp/ccgH0yRS.s 			page 29


 824 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 825              	.LVL38:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 826              		.loc 1 562 25 view .LVU232
 827              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 828              		.loc 1 562 5 is_stmt 0 view .LVU233
 829 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 830 04e8 0F828A01 		jb	.L10	#,
 830      0000
 831              		.loc 1 563 9 is_stmt 1 view .LVU234
 832              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 833              		.loc 1 563 81 is_stmt 0 view .LVU235
 834 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 835              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 836              		.loc 1 563 72 view .LVU236
 837 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 838              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 839              		.loc 1 563 81 view .LVU237
 840 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 841              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 842              		.loc 1 563 17 view .LVU238
 843 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 844              	.LVL39:
 845              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 846              		.loc 1 563 81 view .LVU239
 847 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 848              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 849              		.loc 1 563 99 view .LVU240
 850 04fe 4183E33F 		and	r11d, 63	# _205,
 851              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 852              		.loc 1 563 127 view .LVU241
 853 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 853      F0
 854              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 855              		.loc 1 563 72 view .LVU242
 856 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
 857              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 858              		.loc 1 563 55 view .LVU243
 859 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 859      E8
 860              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 861              		.loc 1 563 116 view .LVU244
 862 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 863 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 864              		.loc 1 562 40 is_stmt 1 view .LVU245
 865 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 866              	.LVL40:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 867              		.loc 1 562 25 view .LVU246
 868              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 869              		.loc 1 562 5 is_stmt 0 view .LVU247
 870 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 871 051d 0F825501 		jb	.L10	#,
 871      0000
GAS LISTING /tmp/ccgH0yRS.s 			page 30


 872              		.loc 1 563 9 is_stmt 1 view .LVU248
 873              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 874              		.loc 1 563 81 is_stmt 0 view .LVU249
 875 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 876              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 877              		.loc 1 563 72 view .LVU250
 878 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 879              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 880              		.loc 1 563 81 view .LVU251
 881 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 882              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 883              		.loc 1 563 17 view .LVU252
 884 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 885              	.LVL41:
 886              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 887              		.loc 1 563 81 view .LVU253
 888 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 889              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 890              		.loc 1 563 99 view .LVU254
 891 0533 4183E33F 		and	r11d, 63	# _220,
 892              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 893              		.loc 1 563 127 view .LVU255
 894 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 894      F0
 895              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 896              		.loc 1 563 72 view .LVU256
 897 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 898              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 899              		.loc 1 563 55 view .LVU257
 900 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 900      E8
 901              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 902              		.loc 1 563 116 view .LVU258
 903 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 904 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 905              		.loc 1 562 40 is_stmt 1 view .LVU259
 906 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 907              	.LVL42:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 908              		.loc 1 562 25 view .LVU260
 909              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 910              		.loc 1 562 5 is_stmt 0 view .LVU261
 911 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 912 0552 0F822001 		jb	.L10	#,
 912      0000
 913              		.loc 1 563 9 is_stmt 1 view .LVU262
 914              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 915              		.loc 1 563 81 is_stmt 0 view .LVU263
 916 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 917              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 918              		.loc 1 563 72 view .LVU264
 919 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 920              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 921              		.loc 1 563 81 view .LVU265
 922 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
GAS LISTING /tmp/ccgH0yRS.s 			page 31


 923              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 924              		.loc 1 563 17 view .LVU266
 925 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 926              	.LVL43:
 927              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 928              		.loc 1 563 81 view .LVU267
 929 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 930              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 931              		.loc 1 563 99 view .LVU268
 932 0568 4183E33F 		and	r11d, 63	# _235,
 933              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 934              		.loc 1 563 127 view .LVU269
 935 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 935      F0
 936              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 937              		.loc 1 563 72 view .LVU270
 938 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 939              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 940              		.loc 1 563 55 view .LVU271
 941 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 941      E8
 942              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 943              		.loc 1 563 116 view .LVU272
 944 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 945 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 946              		.loc 1 562 40 is_stmt 1 view .LVU273
 947 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 948              	.LVL44:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 949              		.loc 1 562 25 view .LVU274
 950              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 951              		.loc 1 562 5 is_stmt 0 view .LVU275
 952 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 953 0587 0F82EB00 		jb	.L10	#,
 953      0000
 954              		.loc 1 563 9 is_stmt 1 view .LVU276
 955              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 956              		.loc 1 563 81 is_stmt 0 view .LVU277
 957 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 958              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 959              		.loc 1 563 72 view .LVU278
 960 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 961              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 962              		.loc 1 563 81 view .LVU279
 963 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 964              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 965              		.loc 1 563 17 view .LVU280
 966 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 967              	.LVL45:
 968              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 969              		.loc 1 563 81 view .LVU281
 970 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 971              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 972              		.loc 1 563 99 view .LVU282
 973 059d 4183E33F 		and	r11d, 63	# _250,
GAS LISTING /tmp/ccgH0yRS.s 			page 32


 974              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 975              		.loc 1 563 127 view .LVU283
 976 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 976      F0
 977              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 978              		.loc 1 563 72 view .LVU284
 979 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 980              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 981              		.loc 1 563 55 view .LVU285
 982 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 982      E8
 983              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 984              		.loc 1 563 116 view .LVU286
 985 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 986 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 987              		.loc 1 562 40 is_stmt 1 view .LVU287
 988 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 989              	.LVL46:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 990              		.loc 1 562 25 view .LVU288
 991              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 992              		.loc 1 562 5 is_stmt 0 view .LVU289
 993 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 994 05bc 0F82B600 		jb	.L10	#,
 994      0000
 995              		.loc 1 563 9 is_stmt 1 view .LVU290
 996              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 997              		.loc 1 563 81 is_stmt 0 view .LVU291
 998 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 999              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1000              		.loc 1 563 72 view .LVU292
 1001 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1002              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1003              		.loc 1 563 81 view .LVU293
 1004 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
 1005              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1006              		.loc 1 563 17 view .LVU294
 1007 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1008              	.LVL47:
 1009              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1010              		.loc 1 563 81 view .LVU295
 1011 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1012              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1013              		.loc 1 563 99 view .LVU296
 1014 05d2 4183E33F 		and	r11d, 63	# _265,
 1015              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1016              		.loc 1 563 127 view .LVU297
 1017 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1017      F0
 1018              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1019              		.loc 1 563 72 view .LVU298
 1020 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1021              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1022              		.loc 1 563 55 view .LVU299
 1023 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
GAS LISTING /tmp/ccgH0yRS.s 			page 33


 1023      E8
 1024              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1025              		.loc 1 563 116 view .LVU300
 1026 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1027 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1028              		.loc 1 562 40 is_stmt 1 view .LVU301
 1029 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1030              	.LVL48:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1031              		.loc 1 562 25 view .LVU302
 1032              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1033              		.loc 1 562 5 is_stmt 0 view .LVU303
 1034 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1035 05f1 0F828100 		jb	.L10	#,
 1035      0000
 1036              		.loc 1 563 9 is_stmt 1 view .LVU304
 1037              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1038              		.loc 1 563 81 is_stmt 0 view .LVU305
 1039 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1040              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1041              		.loc 1 563 72 view .LVU306
 1042 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1043              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1044              		.loc 1 563 81 view .LVU307
 1045 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1046              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1047              		.loc 1 563 17 view .LVU308
 1048 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1049              	.LVL49:
 1050              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1051              		.loc 1 563 81 view .LVU309
 1052 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1053              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1054              		.loc 1 563 99 view .LVU310
 1055 0607 4183E33F 		and	r11d, 63	# _280,
 1056              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1057              		.loc 1 563 127 view .LVU311
 1058 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1058      F0
 1059              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1060              		.loc 1 563 72 view .LVU312
 1061 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1062              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1063              		.loc 1 563 55 view .LVU313
 1064 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1064      E8
 1065              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1066              		.loc 1 563 116 view .LVU314
 1067 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1068 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1069              		.loc 1 562 40 is_stmt 1 view .LVU315
 1070 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1071              	.LVL50:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
GAS LISTING /tmp/ccgH0yRS.s 			page 34


 1072              		.loc 1 562 25 view .LVU316
 1073              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1074              		.loc 1 562 5 is_stmt 0 view .LVU317
 1075 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1076 0626 7250     		jb	.L10	#,
 1077              		.loc 1 563 9 is_stmt 1 view .LVU318
 1078              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1079              		.loc 1 563 81 is_stmt 0 view .LVU319
 1080 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1081              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1082              		.loc 1 563 72 view .LVU320
 1083 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1084              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1085              		.loc 1 563 81 view .LVU321
 1086 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1087              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1088              		.loc 1 562 40 view .LVU322
 1089 0632 4983C60A 		add	r14, 10	# i,
 1090              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1091              		.loc 1 563 17 view .LVU323
 1092 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1093              	.LVL51:
 1094              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1095              		.loc 1 563 81 view .LVU324
 1096 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1097              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1098              		.loc 1 563 99 view .LVU325
 1099 063c 4183E33F 		and	r11d, 63	# _295,
 1100              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1101              		.loc 1 563 127 view .LVU326
 1102 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1102      F0
 1103              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1104              		.loc 1 563 72 view .LVU327
 1105 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
 1106              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1107              		.loc 1 563 55 view .LVU328
 1108 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1108      E8
 1109              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1110              		.loc 1 563 116 view .LVU329
 1111 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1112              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1113              		.loc 1 562 5 view .LVU330
 1114 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1115              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1116              		.loc 1 563 116 view .LVU331
 1117 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1118              		.loc 1 562 40 is_stmt 1 view .LVU332
 1119              	.LVL52:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1120              		.loc 1 562 25 view .LVU333
 1121              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
GAS LISTING /tmp/ccgH0yRS.s 			page 35


 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1122              		.loc 1 562 5 is_stmt 0 view .LVU334
 1123 0657 721F     		jb	.L10	#,
 1124              		.loc 1 563 9 is_stmt 1 view .LVU335
 1125              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1126              		.loc 1 563 81 is_stmt 0 view .LVU336
 1127 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1128              	.LVL53:
 1129              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1130              		.loc 1 563 17 view .LVU337
 1131 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1132              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1133              		.loc 1 563 81 view .LVU338
 1134 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1135              	.LVL54:
 1136              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1137              		.loc 1 563 99 view .LVU339
 1138 0662 83E13F   		and	ecx, 63	# _108,
 1139              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1140              		.loc 1 563 72 view .LVU340
 1141 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1142              	.LVL55:
 1143              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1144              		.loc 1 563 55 view .LVU341
 1145 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1145      D0
 1146              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1147              		.loc 1 563 127 view .LVU342
 1148 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1148      C0
 1149              	.LVL56:
 1150              	# sieve_extend.c:563:         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((sh
 1151              		.loc 1 563 116 view .LVU343
 1152 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1153 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1154              		.loc 1 562 40 is_stmt 1 view .LVU344
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1155              		.loc 1 562 25 view .LVU345
 1156              	.L10:
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1157              		.loc 1 562 25 is_stmt 0 view .LVU346
 1158              	.LBE317:
 564:sieve_extend.c ****     }
 565:sieve_extend.c ****     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1159              		.loc 1 565 5 is_stmt 1 view .LVU347
 1160              	# sieve_extend.c:565:     bitarray[destination_stop_word] &= chopmask(destination_stop);
 1161              		.loc 1 565 37 is_stmt 0 view .LVU348
 1162 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1163              	# sieve_extend.c:566: }
 566:sieve_extend.c **** }
 1164              		.loc 1 566 1 view .LVU349
 1165 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1166 0680 5B       		pop	rbx	#
 1167 0681 415C     		pop	r12	#
 1168              	.LVL57:
 1169              		.loc 1 566 1 view .LVU350
GAS LISTING /tmp/ccgH0yRS.s 			page 36


 1170 0683 415D     		pop	r13	#
 1171 0685 415E     		pop	r14	#
 1172 0687 415F     		pop	r15	#
 1173 0689 5D       		pop	rbp	#
 1174              		.cfi_remember_state
 1175              		.cfi_def_cfa 7, 8
 1176 068a C3       		ret	
 1177              	.LVL58:
 1178 068b 0F1F4400 		.p2align 4,,7
 1178      00
 1179              		.p2align 3
 1180              	.L49:
 1181              		.cfi_restore_state
 547:sieve_extend.c ****         return;
 1182              		.loc 1 547 9 is_stmt 1 view .LVU351
 1183              	# sieve_extend.c:547:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 547:sieve_extend.c ****         return;
 1184              		.loc 1 547 86 is_stmt 0 view .LVU352
 1185 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1186              	# sieve_extend.c:547:         bitarray[destination_start_word] |= (pattern << bitindex(destination_
 547:sieve_extend.c ****         return;
 1187              		.loc 1 547 42 view .LVU353
 1188 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1189 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 548:sieve_extend.c ****     }
 1190              		.loc 1 548 9 is_stmt 1 view .LVU354
 1191              	# sieve_extend.c:566: }
 1192              		.loc 1 566 1 is_stmt 0 view .LVU355
 1193 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1194 069d 5B       		pop	rbx	#
 1195 069e 415C     		pop	r12	#
 1196              	.LVL59:
 1197              		.loc 1 566 1 view .LVU356
 1198 06a0 415D     		pop	r13	#
 1199 06a2 415E     		pop	r14	#
 1200 06a4 415F     		pop	r15	#
 1201 06a6 5D       		pop	rbp	#
 1202              		.cfi_remember_state
 1203              		.cfi_def_cfa 7, 8
 1204 06a7 C3       		ret	
 1205              	.LVL60:
 1206              	.L50:
 1207              		.cfi_restore_state
 1208              		.loc 1 566 1 view .LVU357
 1209 06a8 C5F877   		vzeroupper
 1210 06ab EBCB     		jmp	.L10	#
 1211              	.LVL61:
 1212              	.L12:
 1213              	.LBB318:
 1214              	# sieve_extend.c:562:     for (counter_t i=0; i<=loop_range; ++i ) {
 562:sieve_extend.c ****         bitarray[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift) &
 1215              		.loc 1 562 20 view .LVU358
 1216 06ad 4531F6   		xor	r14d, r14d	# i
 1217 06b0 E979FBFF 		jmp	.L7	#
 1217      FF
 1218              	.L11:
 1219 06b5 4531F6   		xor	r14d, r14d	# tmp.145
GAS LISTING /tmp/ccgH0yRS.s 			page 37


 1220              		.p2align 4,,2
 1221 06b8 E994FDFF 		jmp	.L6	#
 1221      FF
 1222              	.LBE318:
 1223              		.cfi_endproc
 1224              	.LFE64:
 1226 06bd 0F1F00   		.p2align 4
 1228              	extendSieve_shiftright_ivdep:
 1229              	.LVL62:
 1230              	.LFB69:
 567:sieve_extend.c **** 
 568:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_start, const counter_t 
 569:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 570:sieve_extend.c **** 
 571:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 572:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 573:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 574:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 575:sieve_extend.c ****     
 576:sieve_extend.c ****     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 577:sieve_extend.c **** 
 578:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 579:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 580:sieve_extend.c ****         copy_word += size;
 581:sieve_extend.c ****     }
 582:sieve_extend.c **** 
 583:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 584:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 585:sieve_extend.c ****         source_word++;
 586:sieve_extend.c ****         copy_word++;
 587:sieve_extend.c ****     }
 588:sieve_extend.c **** 
 589:sieve_extend.c **** }
 590:sieve_extend.c **** 
 591:sieve_extend.c **** //https://stackoverflow.com/questions/1898153/how-to-determine-if-memory-is-aligned
 592:sieve_extend.c **** #define is_unaligned(POINTER, BYTE_COUNT) (((uintptr_t)(const void *)(POINTER)) % (BYTE_COUNT))
 593:sieve_extend.c **** 
 594:sieve_extend.c **** void shiftvec(uint64_t* __restrict dst, const uint64_t* __restrict src, int size, int shift)
 595:sieve_extend.c **** {
 596:sieve_extend.c ****     int i = 0;
 597:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 598:sieve_extend.c ****     for (; i+4 < size; i+=4,dst+=4,src+=4)
 599:sieve_extend.c ****     {
 600:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 601:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 602:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 603:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 604:sieve_extend.c ****     }
 605:sieve_extend.c ****     for (; i < size; ++i,++src,++dst)
 606:sieve_extend.c ****     {
 607:sieve_extend.c ****         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 608:sieve_extend.c ****     }    
 609:sieve_extend.c **** }
 610:sieve_extend.c **** 
 611:sieve_extend.c **** #define forward_distance 3
 612:sieve_extend.c **** static void extendSieve_shiftright_ptr(bitword_t* bitarray, const counter_t source_start, const cou
 613:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
GAS LISTING /tmp/ccgH0yRS.s 			page 38


 614:sieve_extend.c ****    
 615:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 616:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 617:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 618:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 619:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 620:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 621:sieve_extend.c **** 
 622:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 623:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 624:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 625:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 626:sieve_extend.c ****         return; // rapid exit for one word variant
 627:sieve_extend.c ****     }
 628:sieve_extend.c **** 
 629:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 630:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 631:sieve_extend.c ****                                 & keepmask(copy_start);
 632:sieve_extend.c **** 
 633:sieve_extend.c ****     copy_word++;
 634:sieve_extend.c **** 
 635:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 636:sieve_extend.c ****     if (((copy_word - source_word) > forward_distance)) {
 637:sieve_extend.c ****         // shiftvec(&bitarray[copy_word], &bitarray[source_word],size_word,shift );
 638:sieve_extend.c ****         
 639:sieve_extend.c ****         bitword_t* __restrict copy_ptr   = &bitarray[copy_word];
 640:sieve_extend.c ****         bitword_t* __restrict source_ptr = &bitarray[source_word];
 641:sieve_extend.c ****         // bitword_t* copy_ptr   = &bitarray[copy_word];
 642:sieve_extend.c ****         // bitword_t* source_ptr = &bitarray[source_word];
 643:sieve_extend.c ****         bitword_t* __restrict dest_ptr   = &bitarray[destination_stop_word];
 644:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
 645:sieve_extend.c **** 
 646:sieve_extend.c ****         #pragma ivdep 
 647:sieve_extend.c ****         for (long i = 0; (i+forward_distance) < size_word_ptr; i+=forward_distance, copy_ptr+=forwa
 648:sieve_extend.c ****             #pragma ivdep
 649:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 650:sieve_extend.c ****                 *(copy_ptr+j)  = (*(source_ptr+j  ) >> shift_flipped); 
 651:sieve_extend.c ****             #pragma ivdep
 652:sieve_extend.c ****             for (counter_t j = 0; j < forward_distance; ++j) 
 653:sieve_extend.c ****                 *(copy_ptr+j) |= (*(source_ptr+j+1) << shift);
 654:sieve_extend.c ****         }
 655:sieve_extend.c **** 
 656:sieve_extend.c ****         size_word_ptr = dest_ptr - copy_ptr;
 657:sieve_extend.c ****         #pragma ivdep 
 658:sieve_extend.c ****         for (counter_t i=0; i <= size_word_ptr; i++)
 659:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 660:sieve_extend.c **** 
 661:sieve_extend.c ****         // #pragma GCC ivdep
 662:sieve_extend.c ****         // for (; i <= size_word; i++) 
 663:sieve_extend.c ****         //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 664:sieve_extend.c ****     }
 665:sieve_extend.c ****     else {
 666:sieve_extend.c ****         register counter_t i = 0;
 667:sieve_extend.c ****         bitword_t* copy_ptr   = &bitarray[copy_word];
 668:sieve_extend.c ****         bitword_t* source_ptr = &bitarray[source_word];
 669:sieve_extend.c ****         bitword_t* dest_ptr   = &bitarray[destination_stop_word];
 670:sieve_extend.c ****         long size_word_ptr   = dest_ptr - copy_ptr;
GAS LISTING /tmp/ccgH0yRS.s 			page 39


 671:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 672:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 673:sieve_extend.c ****     }
 674:sieve_extend.c **** 
 675:sieve_extend.c ****     // for (; i <= size_word; i++) 
 676:sieve_extend.c ****     //     *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 677:sieve_extend.c **** 
 678:sieve_extend.c ****     // for (; i <= size_word; i++) 
 679:sieve_extend.c ****     //     bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_wo
 680:sieve_extend.c **** 
 681:sieve_extend.c ****     // for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 682:sieve_extend.c ****     //     bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1
 683:sieve_extend.c **** }
 684:sieve_extend.c **** 
 685:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitarray, const counter_t aligned
 686:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 687:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 688:sieve_extend.c ****     counter_t distance = 0;
 689:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 690:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 691:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 692:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 693:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 694:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 695:sieve_extend.c ****         copy_word += 2;
 696:sieve_extend.c ****         source_word += 2;
 697:sieve_extend.c ****         distance += 2;
 698:sieve_extend.c ****     }
 699:sieve_extend.c ****     return distance;
 700:sieve_extend.c **** }
 701:sieve_extend.c **** 
 702:sieve_extend.c **** //static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counte
 703:sieve_extend.c **** //    const bitword_t* destination_stop_ptr = &bitarray[wordindex(destination_stop)];
 704:sieve_extend.c **** //    const counter_t copy_start = source_start + size;
 705:sieve_extend.c **** //    register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 706:sieve_extend.c **** //    register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 707:sieve_extend.c **** //    register bitword_t* source_ptr = &bitarray[wordindex(source_start)];
 708:sieve_extend.c **** //    register bitword_t* copy_ptr = &bitarray[wordindex(copy_start)];
 709:sieve_extend.c **** //    const bitword_t* aligned_copy_ptr = min(source_ptr + size, destination_stop_ptr); // after <<
 710:sieve_extend.c **** //
 711:sieve_extend.c **** //    *copy_ptr |= ((*source_ptr >> shift) | (*(source_ptr+1) << shift_flipped)) & ~chopmask2(copy_
 712:sieve_extend.c **** //    copy_ptr++;
 713:sieve_extend.c **** //    source_ptr++;
 714:sieve_extend.c **** //
 715:sieve_extend.c **** //    while (copy_ptr+3 <= aligned_copy_ptr) {
 716:sieve_extend.c **** //        bitword_t source0 = *source_ptr >> shift;
 717:sieve_extend.c **** //        bitword_t source1 = *(source_ptr+1);
 718:sieve_extend.c **** //        *copy_ptr = (source0) | (source1 << shift_flipped);
 719:sieve_extend.c **** //        bitword_t source2 = *(source_ptr+2);
 720:sieve_extend.c **** //        *(copy_ptr+1) = (source1 >> shift) | (source2 << shift_flipped);
 721:sieve_extend.c **** //        bitword_t source3 = *(source_ptr+3);
 722:sieve_extend.c **** //        *(copy_ptr+2) = (source2 >> shift) | (source3 << shift_flipped);
 723:sieve_extend.c **** //
 724:sieve_extend.c **** //        copy_ptr+=3;
 725:sieve_extend.c **** //        source_ptr+=3;
 726:sieve_extend.c **** //    }
 727:sieve_extend.c **** //
GAS LISTING /tmp/ccgH0yRS.s 			page 40


 728:sieve_extend.c **** //    while (copy_ptr <= aligned_copy_ptr) {
 729:sieve_extend.c **** //        register bitword_t source0 = *source_ptr >> shift;
 730:sieve_extend.c **** //        source_ptr++;
 731:sieve_extend.c **** //        register bitword_t source1 = *source_ptr << shift_flipped;
 732:sieve_extend.c **** //        *copy_ptr = source0 | source1;
 733:sieve_extend.c **** //        copy_ptr++;
 734:sieve_extend.c **** //    }
 735:sieve_extend.c **** //
 736:sieve_extend.c **** //    if (copy_ptr >= destination_stop_ptr) return;
 737:sieve_extend.c **** //
 738:sieve_extend.c **** //    source_ptr = copy_ptr - size; // recalibrate
 739:sieve_extend.c **** //    const size_t memsize = (size_t)size*sizeof(bitword_t);
 740:sieve_extend.c **** //     while (copy_ptr + size <= destination_stop_ptr) {
 741:sieve_extend.c **** //         memcpy(copy_ptr, source_ptr, memsize );
 742:sieve_extend.c **** //         copy_ptr += size;
 743:sieve_extend.c **** //     }
 744:sieve_extend.c **** //
 745:sieve_extend.c **** //    while (copy_ptr <= destination_stop_ptr) {
 746:sieve_extend.c **** //        // *copy_ptr++ = *source_ptr++;
 747:sieve_extend.c **** //        *copy_ptr = *source_ptr;
 748:sieve_extend.c **** //        copy_ptr++;
 749:sieve_extend.c **** //        source_ptr++;
 750:sieve_extend.c **** //    }
 751:sieve_extend.c **** //
 752:sieve_extend.c **** //}
 753:sieve_extend.c **** 
 754:sieve_extend.c **** 
 755:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t source_start, const c
 1231              		.loc 1 755 149 is_stmt 1 view -0
 1232              		.cfi_startproc
 756:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1233              		.loc 1 756 5 view .LVU360
 757:sieve_extend.c ****    
 758:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 1234              		.loc 1 758 5 view .LVU361
 1235              	# sieve_extend.c:755: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 755:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1236              		.loc 1 755 149 is_stmt 0 view .LVU362
 1237 06c0 55       		push	rbp	#
 1238              		.cfi_def_cfa_offset 16
 1239              		.cfi_offset 6, -16
 1240              	# sieve_extend.c:759:     const counter_t copy_start = source_start + size;
 759:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1241              		.loc 1 759 21 view .LVU363
 1242 06c1 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 1243              	# sieve_extend.c:758:     const counter_t destination_stop_word = wordindex(destination_stop);
 758:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1244              		.loc 1 758 21 view .LVU364
 1245 06c5 4889C8   		mov	rax, rcx	# destination_stop_word, destination_stop
 1246              	# sieve_extend.c:755: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 755:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1247              		.loc 1 755 149 view .LVU365
 1248 06c8 4889E5   		mov	rbp, rsp	#,
 1249              		.cfi_def_cfa_register 6
 1250              	# sieve_extend.c:760:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 760:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1251              		.loc 1 760 39 view .LVU366
GAS LISTING /tmp/ccgH0yRS.s 			page 41


 1252 06cb 4D89C2   		mov	r10, r8	# _4, copy_start
 1253              	# sieve_extend.c:755: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 755:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1254              		.loc 1 755 149 view .LVU367
 1255 06ce 4157     		push	r15	#
 1256              	# sieve_extend.c:763:     register counter_t copy_word = wordindex(copy_start);
 761:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 762:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 763:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1257              		.loc 1 763 24 view .LVU368
 1258 06d0 49C1E806 		shr	r8, 6	# copy_word,
 1259              	# sieve_extend.c:760:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 760:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1260              		.loc 1 760 39 view .LVU369
 1261 06d4 4183E23F 		and	r10d, 63	# _4,
 1262              	# sieve_extend.c:755: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 755:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1263              		.loc 1 755 149 view .LVU370
 1264 06d8 4156     		push	r14	#
 1265              	# sieve_extend.c:758:     const counter_t destination_stop_word = wordindex(destination_stop);
 758:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1266              		.loc 1 758 21 view .LVU371
 1267 06da 48C1E806 		shr	rax, 6	# destination_stop_word,
 1268              		.cfi_offset 15, -24
 1269              		.cfi_offset 14, -32
 1270              	# sieve_extend.c:760:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 760:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1271              		.loc 1 760 31 view .LVU372
 1272 06de 4D89D6   		mov	r14, r10	# shift, _4
 1273              	# sieve_extend.c:755: static void extendSieve_shiftright_ivdep(bitword_t* bitarray, const counter_t
 755:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1274              		.loc 1 755 149 view .LVU373
 1275 06e1 4155     		push	r13	#
 1276 06e3 F7D1     		not	ecx	# tmp401
 1277              	.LVL63:
 755:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1278              		.loc 1 755 149 view .LVU374
 1279 06e5 4154     		push	r12	#
 1280              		.cfi_offset 13, -40
 1281              		.cfi_offset 12, -48
 1282 06e7 4E8D24C5 		lea	r12, 0[0+r8*8]	# _176,
 1282      00000000 
 1283 06ef 53       		push	rbx	#
 1284 06f0 4E8D2C27 		lea	r13, [rdi+r12]	# _177,
 1285 06f4 4D8B7D00 		mov	r15, QWORD PTR 0[r13]	# pretmp_178, *_177
 1286 06f8 4883E4E0 		and	rsp, -32	#,
 1287              		.cfi_offset 3, -56
 1288              	.LVL64:
 759:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1289              		.loc 1 759 5 is_stmt 1 view .LVU375
 760:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1290              		.loc 1 760 5 view .LVU376
 1291              	# sieve_extend.c:758:     const counter_t destination_stop_word = wordindex(destination_stop);
 758:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1292              		.loc 1 758 21 is_stmt 0 view .LVU377
 1293 06fc 48894424 		mov	QWORD PTR -8[rsp], rax	# %sfp, destination_stop_word
 1293      F8
GAS LISTING /tmp/ccgH0yRS.s 			page 42


 1294              	.LVL65:
 1295              	# sieve_extend.c:760:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 760:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1296              		.loc 1 760 67 view .LVU378
 1297 0701 4889F0   		mov	rax, rsi	# _5, source_start
 1298              	# sieve_extend.c:762:     register counter_t source_word = wordindex(source_start);
 762:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1299              		.loc 1 762 24 view .LVU379
 1300 0704 48C1EE06 		shr	rsi, 6	# source_word,
 1301              	.LVL66:
 1302              	# sieve_extend.c:760:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 760:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1303              		.loc 1 760 67 view .LVU380
 1304 0708 83E03F   		and	eax, 63	# _5,
 1305              	.LVL67:
 761:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1306              		.loc 1 761 5 is_stmt 1 view .LVU381
 762:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1307              		.loc 1 762 5 view .LVU382
 1308              		.loc 1 763 5 view .LVU383
 764:sieve_extend.c **** 
 765:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 1309              		.loc 1 765 5 view .LVU384
 1310              	# sieve_extend.c:760:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 760:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1311              		.loc 1 760 31 is_stmt 0 view .LVU385
 1312 070b 4929C6   		sub	r14, rax	# shift, _5
 1313              	.LVL68:
 760:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1314              		.loc 1 760 31 view .LVU386
 1315 070e 488D1CF5 		lea	rbx, 0[0+rsi*8]	# _179,
 1315      00000000 
 1316              	# sieve_extend.c:761:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 761:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1317              		.loc 1 761 31 view .LVU387
 1318 0716 4883C040 		add	rax, 64	# tmp394,
 1319              	.LVL69:
 761:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1320              		.loc 1 761 31 view .LVU388
 1321 071a 4C8D1C1F 		lea	r11, [rdi+rbx]	# _180,
 1322 071e 4C897C24 		mov	QWORD PTR -24[rsp], r15	# %sfp, pretmp_178
 1322      E8
 1323 0723 4C29D0   		sub	rax, r10	# shift_flipped, _4
 1324              	.LVL70:
 761:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1325              		.loc 1 761 31 view .LVU389
 1326 0726 C44289F7 		shlx	r9, QWORD PTR [r11], r14	# tmp396, *_180, shift
 1326      0B
 1327 072b C442FBF7 		shrx	r15, r15, rax	# tmp398, pretmp_178, shift_flipped
 1327      FF
 1328 0730 44897424 		mov	DWORD PTR -12[rsp], r14d	# %sfp, shift
 1328      F4
 1329 0735 4D09F9   		or	r9, r15	# _186, tmp398
 1330              	# sieve_extend.c:765:     if (copy_word >= destination_stop_word) { 
 1331              		.loc 1 765 8 view .LVU390
 1332 0738 4C394424 		cmp	QWORD PTR -8[rsp], r8	# %sfp, copy_word
 1332      F8
GAS LISTING /tmp/ccgH0yRS.s 			page 43


 1333 073d 49C7C7FF 		mov	r15, -1	# tmp400,
 1333      FFFFFF
 1334 0744 894424F0 		mov	DWORD PTR -16[rsp], eax	# %sfp, shift_flipped
 1335 0748 C442A9F7 		shlx	r10, r15, r10	# _189, tmp400, _4
 1335      D7
 1336              	.LVL71:
 1337              		.loc 1 765 8 view .LVU391
 1338 074d C442F3F7 		shrx	r15, r15, rcx	# _193, tmp400, tmp401
 1338      FF
 1339 0752 0F86F80A 		jbe	.L260	#,
 1339      0000
 766:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 767:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 768:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 769:sieve_extend.c ****         return; // rapid exit for one word variant
 770:sieve_extend.c ****     }
 771:sieve_extend.c **** 
 772:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 1340              		.loc 1 772 5 is_stmt 1 view .LVU392
 1341              	# sieve_extend.c:774:                                 & keepmask(copy_start);
 773:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 774:sieve_extend.c ****                                 & keepmask(copy_start);
 1342              		.loc 1 774 33 is_stmt 0 view .LVU393
 1343 0758 4D21D1   		and	r9, r10	# tmp407, _189
 1344              	# sieve_extend.c:776:     copy_word++;
 775:sieve_extend.c **** 
 776:sieve_extend.c ****     copy_word++;
 1345              		.loc 1 776 14 view .LVU394
 1346 075b 498D4801 		lea	rcx, 1[r8]	# copy_word,
 1347              	# sieve_extend.c:772:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 772:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1348              		.loc 1 772 25 view .LVU395
 1349 075f 4C0B4C24 		or	r9, QWORD PTR -24[rsp]	# tmp408, %sfp
 1349      E8
 1350              	# sieve_extend.c:780:     if (size >= WORD_SIZE_counter) {
 777:sieve_extend.c **** 
 778:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 779:sieve_extend.c **** 
 780:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 1351              		.loc 1 780 8 view .LVU396
 1352 0764 4883FA3F 		cmp	rdx, 63	# size,
 1353              	# sieve_extend.c:772:     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start
 772:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 1354              		.loc 1 772 25 view .LVU397
 1355 0768 4D894D00 		mov	QWORD PTR 0[r13], r9	# *_177, tmp408
 776:sieve_extend.c **** 
 1356              		.loc 1 776 5 is_stmt 1 view .LVU398
 1357              	.LVL72:
 778:sieve_extend.c **** 
 1358              		.loc 1 778 5 view .LVU399
 1359              		.loc 1 780 5 view .LVU400
 1360              	# sieve_extend.c:780:     if (size >= WORD_SIZE_counter) {
 1361              		.loc 1 780 8 is_stmt 0 view .LVU401
 1362 076c 0F876604 		ja	.L261	#,
 1362      0000
 781:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 782:sieve_extend.c **** 
GAS LISTING /tmp/ccgH0yRS.s 			page 44


 783:sieve_extend.c ****         #pragma unroll
 784:sieve_extend.c ****         #pragma ivdep
 785:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; i++) {
 786:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 787:sieve_extend.c ****         }
 788:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 789:sieve_extend.c ****     }
 790:sieve_extend.c **** 
 791:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1363              		.loc 1 791 12 is_stmt 1 discriminator 1 view .LVU402
 1364              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 1365              		.loc 1 791 5 is_stmt 0 discriminator 1 view .LVU403
 1366 0772 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1366      F8
 1367 0777 4939CB   		cmp	r11, rcx	# destination_stop_word, copy_word
 1368 077a 0F824104 		jb	.L66	#,
 1368      0000
 1369 0780 4D89DC   		mov	r12, r11	# _173, destination_stop_word
 1370 0783 498D5301 		lea	rdx, 1[r11]	# _198,
 1371              	.LVL73:
 1372              		.loc 1 791 5 discriminator 1 view .LVU404
 1373 0787 4929CC   		sub	r12, rcx	# _173, copy_word
 1374 078a 4C8D0CF5 		lea	r9, 40[0+rsi*8]	# _168,
 1374      28000000 
 1375 0792 4C896424 		mov	QWORD PTR -32[rsp], r12	# %sfp, _173
 1375      E0
 1376 0797 4C8D24CD 		lea	r12, 0[0+rcx*8]	# _166,
 1376      00000000 
 1377 079f 48895424 		mov	QWORD PTR -24[rsp], rdx	# %sfp, _198
 1377      E8
 1378 07a4 4D8D5424 		lea	r10, 32[r12]	# tmp497,
 1378      20
 1379 07a9 488D14F5 		lea	rdx, 0[0+rsi*8]	# _260,
 1379      00000000 
 1380 07b1 4D8D6802 		lea	r13, 2[r8]	# _175,
 1381 07b5 4C39D2   		cmp	rdx, r10	# _260, tmp497
 1382 07b8 410F9DC2 		setge	r10b	#, tmp499
 1383 07bc 4D39CC   		cmp	r12, r9	# _166, _168
 1384 07bf 410F9DC1 		setge	r9b	#, tmp501
 1385 07c3 4508CA   		or	r10b, r9b	# tmp499, tmp501
 1386 07c6 0F843808 		je	.L56	#,
 1386      0000
 1387 07cc 48837C24 		cmp	QWORD PTR -32[rsp], 5	# %sfp,
 1387      E005
 1388 07d2 410F97C2 		seta	r10b	#, tmp504
 1389 07d6 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1389      E8
 1390 07db 410F96C1 		setbe	r9b	#, tmp506
 1391 07df 4584CA   		test	r10b, r9b	# tmp504, tmp506
 1392 07e2 0F841C08 		je	.L56	#,
 1392      0000
 1393 07e8 4D29C3   		sub	r11, r8	# tmp508, copy_word
 1394 07eb 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1394      E8
 1395 07f0 41B90100 		mov	r9d, 1	# tmp509,
 1395      0000
 1396 07f6 4D0F46CB 		cmovbe	r9, r11	# tmp508,, niters.171
GAS LISTING /tmp/ccgH0yRS.s 			page 45


 1397 07fa 4801FA   		add	rdx, rdi	# vectp.172, bitarray
 1398 07fd 48C1EA03 		shr	rdx, 3	# tmp511,
 1399 0801 48F7DA   		neg	rdx	# tmp512
 1400 0804 83E203   		and	edx, 3	# prolog_loop_niters.173,
 1401 0807 0F847B0A 		je	.L77	#,
 1401      0000
 792:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1402              		.loc 1 792 9 is_stmt 1 view .LVU405
 1403              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1404              		.loc 1 792 99 is_stmt 0 view .LVU406
 1405 080d 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_354, *_354
 1405      08
 1406              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1407              		.loc 1 792 83 view .LVU407
 1408 0812 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 1409              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1410              		.loc 1 792 99 view .LVU408
 1411 0816 C46289F7 		shlx	r11, rbx, r14	# tmp513, *_354, shift
 1411      DB
 1412              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1413              		.loc 1 792 54 view .LVU409
 1414 081b C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rsi*8], rax	# tmp515, *_349, shift_flipped
 1414      1CF7
 1415              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1416              		.loc 1 792 83 view .LVU410
 1417 0821 4C895424 		mov	QWORD PTR -40[rsp], r10	# %sfp, tmp566
 1417      D8
 1418              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1419              		.loc 1 792 72 view .LVU411
 1420 0826 4909DB   		or	r11, rbx	# tmp517, tmp515
 1421 0829 4E891C27 		mov	QWORD PTR [rdi+r12], r11	# *_358, tmp517
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1422              		.loc 1 791 48 is_stmt 1 view .LVU412
 1423              	.LVL74:
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1424              		.loc 1 791 12 view .LVU413
 1425 082d 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.173,
 1426              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1427              		.loc 1 792 29 is_stmt 0 view .LVU414
 1428 0831 4D89EC   		mov	r12, r13	# copy_word, _175
 1429 0834 745E     		je	.L67	#,
 1430              		.loc 1 792 9 is_stmt 1 view .LVU415
 1431              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1432              		.loc 1 792 40 is_stmt 0 view .LVU416
 1433 0836 4E8D24D5 		lea	r12, 0[0+r10*8]	# _367,
 1433      00000000 
 1434              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1435              		.loc 1 792 83 view .LVU417
 1436 083e 4C8D5E02 		lea	r11, 2[rsi]	# source_word,
 1437              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1438              		.loc 1 792 54 view .LVU418
 1439 0842 4A8B1C27 		mov	rbx, QWORD PTR [rdi+r12]	# *_368, *_368
 1440              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1441              		.loc 1 792 83 view .LVU419
 1442 0846 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1442      D8
 1443              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccgH0yRS.s 			page 46


 1444              		.loc 1 792 99 view .LVU420
 1445 084b C42289F7 		shlx	r11, QWORD PTR 8[rdi+r12], r14	# tmp518, *_373, shift
 1445      5C2708
 1446              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1447              		.loc 1 792 54 view .LVU421
 1448 0852 C462FBF7 		shrx	r12, rbx, rax	# tmp520, *_368, shift_flipped
 1448      E3
 1449              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1450              		.loc 1 792 72 view .LVU422
 1451 0857 4D09E3   		or	r11, r12	# tmp522, tmp520
 1452 085a 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.173,
 1453              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1454              		.loc 1 791 57 view .LVU423
 1455 085e 4D8D6003 		lea	r12, 3[r8]	# copy_word,
 1456              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1457              		.loc 1 792 72 view .LVU424
 1458 0862 4E891CEF 		mov	QWORD PTR [rdi+r13*8], r11	# *_377, tmp522
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1459              		.loc 1 791 48 is_stmt 1 view .LVU425
 1460              	.LVL75:
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1461              		.loc 1 791 12 view .LVU426
 1462 0866 752C     		jne	.L67	#,
 1463              		.loc 1 792 9 view .LVU427
 1464              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1465              		.loc 1 792 40 is_stmt 0 view .LVU428
 1466 0868 488D5E02 		lea	rbx, 2[rsi]	# source_word,
 1467              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1468              		.loc 1 792 83 view .LVU429
 1469 086c 4C8D5E03 		lea	r11, 3[rsi]	# source_word,
 1470 0870 4C895C24 		mov	QWORD PTR -40[rsp], r11	# %sfp, source_word
 1470      D8
 1471              	.LVL76:
 1472              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1473              		.loc 1 792 40 view .LVU430
 1474 0875 48C1E303 		sal	rbx, 3	# source_word,
 1475              	.LVL77:
 1476              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1477              		.loc 1 792 99 view .LVU431
 1478 0879 C46289F7 		shlx	r11, QWORD PTR 8[rdi+rbx], r14	# tmp523, *_111, shift
 1478      5C1F08
 1479              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1480              		.loc 1 792 54 view .LVU432
 1481 0880 488B1C1F 		mov	rbx, QWORD PTR [rdi+rbx]	# *_121, *_121
 1482 0884 C4E2FBF7 		shrx	rbx, rbx, rax	# tmp525, *_121, shift_flipped
 1482      DB
 1483              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1484              		.loc 1 792 72 view .LVU433
 1485 0889 4909DB   		or	r11, rbx	# tmp527, tmp525
 1486 088c 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# *_103, tmp527
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1487              		.loc 1 791 48 is_stmt 1 view .LVU434
 1488              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1489              		.loc 1 791 57 is_stmt 0 view .LVU435
 1490 0890 4D8D6004 		lea	r12, 4[r8]	# copy_word,
GAS LISTING /tmp/ccgH0yRS.s 			page 47


 1491              	.LVL78:
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1492              		.loc 1 791 12 is_stmt 1 view .LVU436
 1493              	.L67:
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1494              		.loc 1 791 12 is_stmt 0 view .LVU437
 1495 0894 4901D2   		add	r10, rdx	# tmp531, prolog_loop_niters.173
 1496 0897 4929D1   		sub	r9, rdx	# niters.174, prolog_loop_niters.173
 1497 089a 4E8D04D7 		lea	r8, [rdi+r10*8]	# vectp.184,
 1498 089e 4D89CA   		mov	r10, r9	# bnd.175, niters.174
 1499 08a1 49C1EA02 		shr	r10, 2	# bnd.175,
 1500 08a5 4801D6   		add	rsi, rdx	# tmp528, prolog_loop_niters.173
 1501 08a8 49C1E205 		sal	r10, 5	# _469,
 1502 08ac 4801D1   		add	rcx, rdx	# tmp533, prolog_loop_niters.173
 1503 08af 4D8D5AE0 		lea	r11, -32[r10]	# tmp588,
 1504              	# sieve_extend.c:776:     copy_word++;
 776:sieve_extend.c **** 
 1505              		.loc 1 776 14 view .LVU438
 1506 08b3 31D2     		xor	edx, edx	# ivtmp.222
 1507 08b5 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.180,
 1508 08b9 488D0CCF 		lea	rcx, [rdi+rcx*8]	# vectp.189,
 1509 08bd 49C1EB05 		shr	r11, 5	# tmp586,
 1510 08c1 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 1510      24F0
 1511 08c7 4983C301 		add	r11, 1	# tmp589,
 1512 08cb C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 1512      24F4
 1513 08d1 4183E307 		and	r11d, 7	# tmp590,
 1514 08d5 0F841A01 		je	.L69	#,
 1514      0000
 1515 08db 4983FB01 		cmp	r11, 1	# tmp590,
 1516 08df 0F84E700 		je	.L191	#,
 1516      0000
 1517 08e5 4983FB02 		cmp	r11, 2	# tmp590,
 1518 08e9 0F84BD00 		je	.L192	#,
 1518      0000
 1519 08ef 4983FB03 		cmp	r11, 3	# tmp590,
 1520 08f3 0F849200 		je	.L193	#,
 1520      0000
 1521 08f9 4983FB04 		cmp	r11, 4	# tmp590,
 1522 08fd 746C     		je	.L194	#,
 1523 08ff 4983FB05 		cmp	r11, 5	# tmp590,
 1524 0903 7445     		je	.L195	#,
 1525 0905 4983FB06 		cmp	r11, 6	# tmp590,
 1526 0909 741E     		je	.L196	#,
 1527              		.loc 1 792 9 is_stmt 1 view .LVU439
 1528              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1529              		.loc 1 792 54 is_stmt 0 view .LVU440
 1530 090b C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp1085, MEM[base: vectp.180_10, index: ivtmp.222_467, offset: 0
 1531 090f BA200000 		mov	edx, 32	# ivtmp.222,
 1531      00
 1532              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1533              		.loc 1 792 99 view .LVU441
 1534 0914 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8]	# tmp1086, MEM[base: vectp.184_17, index: ivtmp.222_467, offset: 0B
 1534      38
 1535              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1536              		.loc 1 792 54 view .LVU442
GAS LISTING /tmp/ccgH0yRS.s 			page 48


 1537 0919 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.182, tmp1085, _184
 1538              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1539              		.loc 1 792 99 view .LVU443
 1540 091d C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__67.186, tmp1086, _182
 1541              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1542              		.loc 1 792 72 view .LVU444
 1543 0921 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__70.187, vect__62.182, vect__67.186
 1544              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1545              		.loc 1 792 29 view .LVU445
 1546 0925 C5FE7F21 		vmovdqu	YMMWORD PTR [rcx], ymm4	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], vect
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1547              		.loc 1 791 48 is_stmt 1 view .LVU446
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1548              		.loc 1 791 12 view .LVU447
 1549              	.L196:
 1550              		.loc 1 792 9 view .LVU448
 1551              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1552              		.loc 1 792 54 is_stmt 0 view .LVU449
 1553 0929 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp1087, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1553      16
 1554              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1555              		.loc 1 792 99 view .LVU450
 1556 092e C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rdx]	# tmp1088, MEM[base: vectp.184_17, index: ivtmp.222_467, offset
 1556      0C10
 1557              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1558              		.loc 1 792 54 view .LVU451
 1559 0934 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.182, tmp1087, _184
 1560              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1561              		.loc 1 792 99 view .LVU452
 1562 0938 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__67.186, tmp1088, _182
 1563              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1564              		.loc 1 792 72 view .LVU453
 1565 093c C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__70.187, vect__62.182, vect__67.186
 1565      DA
 1566              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1567              		.loc 1 792 29 view .LVU454
 1568 0941 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm11	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B],
 1568      11
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1569              		.loc 1 791 48 is_stmt 1 view .LVU455
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1570              		.loc 1 791 12 view .LVU456
 1571 0946 4883C220 		add	rdx, 32	# ivtmp.222,
 1572              	.L195:
 1573              		.loc 1 792 9 view .LVU457
 1574              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1575              		.loc 1 792 54 is_stmt 0 view .LVU458
 1576 094a C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp1089, MEM[base: vectp.180_10, index: ivtmp.222_467, offs
 1576      16
 1577              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1578              		.loc 1 792 99 view .LVU459
 1579 094f C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r8+rdx]	# tmp1090, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1579      3410
 1580              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1581              		.loc 1 792 54 view .LVU460
 1582 0955 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__62.182, tmp1089, _184
 1583              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccgH0yRS.s 			page 49


 1584              		.loc 1 792 99 view .LVU461
 1585 0959 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__67.186, tmp1090, _182
 1586              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1587              		.loc 1 792 72 view .LVU462
 1588 095d C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__70.187, vect__62.182, vect__67.186
 1588      F7
 1589              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1590              		.loc 1 792 29 view .LVU463
 1591 0962 C5FE7F34 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm6	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1591      11
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1592              		.loc 1 791 48 is_stmt 1 view .LVU464
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1593              		.loc 1 791 12 view .LVU465
 1594 0967 4883C220 		add	rdx, 32	# ivtmp.222,
 1595              	.L194:
 1596              		.loc 1 792 9 view .LVU466
 1597              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1598              		.loc 1 792 54 is_stmt 0 view .LVU467
 1599 096b C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp1091, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1599      16
 1600              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1601              		.loc 1 792 99 view .LVU468
 1602 0970 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1092, MEM[base: vectp.184_17, index: ivtmp.222_467, offset
 1602      1C10
 1603              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1604              		.loc 1 792 54 view .LVU469
 1605 0976 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__62.182, tmp1091, _184
 1606              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1607              		.loc 1 792 99 view .LVU470
 1608 097a C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__67.186, tmp1092, _182
 1609              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1610              		.loc 1 792 72 view .LVU471
 1611 097e C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__70.187, vect__62.182, vect__67.186
 1612              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1613              		.loc 1 792 29 view .LVU472
 1614 0982 C5FE7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm5	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1614      11
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1615              		.loc 1 791 48 is_stmt 1 view .LVU473
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1616              		.loc 1 791 12 view .LVU474
 1617 0987 4883C220 		add	rdx, 32	# ivtmp.222,
 1618              	.L193:
 1619              		.loc 1 792 9 view .LVU475
 1620              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1621              		.loc 1 792 54 is_stmt 0 view .LVU476
 1622 098b C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp1093, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1622      16
 1623              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1624              		.loc 1 792 99 view .LVU477
 1625 0990 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r8+rdx]	# tmp1094, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1625      1410
 1626              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1627              		.loc 1 792 54 view .LVU478
 1628 0996 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__62.182, tmp1093, _184
 1629              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccgH0yRS.s 			page 50


 1630              		.loc 1 792 99 view .LVU479
 1631 099a C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__67.186, tmp1094, _182
 1632              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1633              		.loc 1 792 72 view .LVU480
 1634 099e C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__70.187, vect__62.182, vect__67.186
 1634      E3
 1635              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1636              		.loc 1 792 29 view .LVU481
 1637 09a3 C57E7F24 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm12	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B],
 1637      11
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1638              		.loc 1 791 48 is_stmt 1 view .LVU482
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1639              		.loc 1 791 12 view .LVU483
 1640 09a8 4883C220 		add	rdx, 32	# ivtmp.222,
 1641              	.L192:
 1642              		.loc 1 792 9 view .LVU484
 1643              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1644              		.loc 1 792 54 is_stmt 0 view .LVU485
 1645 09ac C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp1095, MEM[base: vectp.180_10, index: ivtmp.222_467, offs
 1645      16
 1646              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1647              		.loc 1 792 99 view .LVU486
 1648 09b1 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rdx]	# tmp1096, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1648      3C10
 1649              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1650              		.loc 1 792 54 view .LVU487
 1651 09b7 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__62.182, tmp1095, _184
 1652              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1653              		.loc 1 792 99 view .LVU488
 1654 09bb C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__67.186, tmp1096, _182
 1655              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1656              		.loc 1 792 72 view .LVU489
 1657 09bf C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__70.187, vect__62.182, vect__67.186
 1658              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1659              		.loc 1 792 29 view .LVU490
 1660 09c3 C5FE7F14 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm2	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1660      11
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1661              		.loc 1 791 48 is_stmt 1 view .LVU491
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1662              		.loc 1 791 12 view .LVU492
 1663 09c8 4883C220 		add	rdx, 32	# ivtmp.222,
 1664              	.L191:
 1665              		.loc 1 792 9 view .LVU493
 1666              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1667              		.loc 1 792 54 is_stmt 0 view .LVU494
 1668 09cc C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp1097, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1668      16
 1669              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1670              		.loc 1 792 99 view .LVU495
 1671 09d1 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r8+rdx]	# tmp1098, MEM[base: vectp.184_17, index: ivtmp.222_467, offset
 1671      1C10
 1672              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1673              		.loc 1 792 54 view .LVU496
 1674 09d7 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__62.182, tmp1097, _184
 1675              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccgH0yRS.s 			page 51


 1676              		.loc 1 792 99 view .LVU497
 1677 09db C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__67.186, tmp1098, _182
 1678              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1679              		.loc 1 792 72 view .LVU498
 1680 09df C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__70.187, vect__62.182, vect__67.186
 1681              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1682              		.loc 1 792 29 view .LVU499
 1683 09e3 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm8	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B], 
 1683      11
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1684              		.loc 1 791 48 is_stmt 1 view .LVU500
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1685              		.loc 1 791 12 view .LVU501
 1686 09e8 4883C220 		add	rdx, 32	# ivtmp.222,
 1687 09ec 4C39D2   		cmp	rdx, r10	# ivtmp.222, _469
 1688 09ef 0F842E01 		je	.L244	#,
 1688      0000
 1689              	.L69:
 1690              		.loc 1 792 9 discriminator 2 view .LVU502
 1691              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1692              		.loc 1 792 54 is_stmt 0 discriminator 2 view .LVU503
 1693 09f5 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp1015, MEM[base: vectp.180_10, index: ivtmp.222_467, offse
 1693      16
 1694              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1695              		.loc 1 792 99 discriminator 2 view .LVU504
 1696 09fa C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r8+rdx]	# tmp1016, MEM[base: vectp.184_17, index: ivtmp.222_467, offse
 1696      1C10
 1697              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1698              		.loc 1 792 54 discriminator 2 view .LVU505
 1699 0a00 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__62.182, tmp1015, _184
 1700              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1701              		.loc 1 792 99 discriminator 2 view .LVU506
 1702 0a04 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__67.186, tmp1016, _182
 1703              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1704              		.loc 1 792 72 discriminator 2 view .LVU507
 1705 0a08 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__70.187, vect__62.182, vect__67.186
 1705      EC
 1706              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1707              		.loc 1 792 29 discriminator 2 view .LVU508
 1708 0a0d C57E7F2C 		vmovdqu	YMMWORD PTR [rcx+rdx], ymm13	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B],
 1708      11
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1709              		.loc 1 791 48 is_stmt 1 discriminator 2 view .LVU509
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1710              		.loc 1 791 12 discriminator 2 view .LVU510
 1711              		.loc 1 792 9 discriminator 2 view .LVU511
 1712              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1713              		.loc 1 792 54 is_stmt 0 discriminator 2 view .LVU512
 1714 0a12 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp1017, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1714      1620
 1715              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1716              		.loc 1 792 99 discriminator 2 view .LVU513
 1717 0a18 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r8+rdx]	# tmp1018, MEM[base: vectp.184_17, index: ivtmp.222_467, offs
 1717      741020
 1718              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1719              		.loc 1 792 54 discriminator 2 view .LVU514
 1720 0a1f C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__62.182, tmp1017, _184
GAS LISTING /tmp/ccgH0yRS.s 			page 52


 1721              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1722              		.loc 1 792 99 discriminator 2 view .LVU515
 1723 0a23 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__67.186, tmp1018, _182
 1724              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1725              		.loc 1 792 72 discriminator 2 view .LVU516
 1726 0a27 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__70.187, vect__62.182, vect__67.186
 1727              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1728              		.loc 1 792 29 discriminator 2 view .LVU517
 1729 0a2b C5FE7F7C 		vmovdqu	YMMWORD PTR 32[rcx+rdx], ymm7	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B]
 1729      1120
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1730              		.loc 1 791 48 is_stmt 1 discriminator 2 view .LVU518
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1731              		.loc 1 791 12 discriminator 2 view .LVU519
 1732              		.loc 1 792 9 discriminator 2 view .LVU520
 1733              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1734              		.loc 1 792 54 is_stmt 0 discriminator 2 view .LVU521
 1735 0a31 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp1019, MEM[base: vectp.180_10, index: ivtmp.222_467, off
 1735      1640
 1736              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1737              		.loc 1 792 99 discriminator 2 view .LVU522
 1738 0a37 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r8+rdx]	# tmp1020, MEM[base: vectp.184_17, index: ivtmp.222_467, offs
 1738      5C1040
 1739              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1740              		.loc 1 792 54 discriminator 2 view .LVU523
 1741 0a3e C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__62.182, tmp1019, _184
 1742              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1743              		.loc 1 792 99 discriminator 2 view .LVU524
 1744 0a42 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__67.186, tmp1020, _182
 1745              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1746              		.loc 1 792 72 discriminator 2 view .LVU525
 1747 0a46 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__70.187, vect__62.182, vect__67.186
 1747      C8
 1748              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1749              		.loc 1 792 29 discriminator 2 view .LVU526
 1750 0a4b C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rdx], ymm9	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B]
 1750      1140
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1751              		.loc 1 791 48 is_stmt 1 discriminator 2 view .LVU527
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1752              		.loc 1 791 12 discriminator 2 view .LVU528
 1753              		.loc 1 792 9 discriminator 2 view .LVU529
 1754              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1755              		.loc 1 792 54 is_stmt 0 discriminator 2 view .LVU530
 1756 0a51 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp1021, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1756      1660
 1757              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1758              		.loc 1 792 99 discriminator 2 view .LVU531
 1759 0a57 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r8+rdx]	# tmp1022, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1759      641060
 1760              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1761              		.loc 1 792 54 discriminator 2 view .LVU532
 1762 0a5e C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__62.182, tmp1021, _184
 1763              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1764              		.loc 1 792 99 discriminator 2 view .LVU533
 1765 0a62 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__67.186, tmp1022, _182
 1766              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccgH0yRS.s 			page 53


 1767              		.loc 1 792 72 discriminator 2 view .LVU534
 1768 0a66 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__70.187, vect__62.182, vect__67.186
 1768      F5
 1769              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1770              		.loc 1 792 29 discriminator 2 view .LVU535
 1771 0a6b C57E7F74 		vmovdqu	YMMWORD PTR 96[rcx+rdx], ymm14	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B
 1771      1160
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1772              		.loc 1 791 48 is_stmt 1 discriminator 2 view .LVU536
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1773              		.loc 1 791 12 discriminator 2 view .LVU537
 1774              		.loc 1 792 9 discriminator 2 view .LVU538
 1775              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1776              		.loc 1 792 54 is_stmt 0 discriminator 2 view .LVU539
 1777 0a71 C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp1023, MEM[base: vectp.180_10, index: ivtmp.222_467, o
 1777      16800000 
 1777      00
 1778              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1779              		.loc 1 792 99 discriminator 2 view .LVU540
 1780 0a7a C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r8+rdx]	# tmp1024, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1780      94108000 
 1780      0000
 1781              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1782              		.loc 1 792 54 discriminator 2 view .LVU541
 1783 0a84 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__62.182, tmp1023, _184
 1784              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1785              		.loc 1 792 99 discriminator 2 view .LVU542
 1786 0a88 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__67.186, tmp1024, _182
 1787              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1788              		.loc 1 792 72 discriminator 2 view .LVU543
 1789 0a8c C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__70.187, vect__62.182, vect__67.186
 1790              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1791              		.loc 1 792 29 discriminator 2 view .LVU544
 1792 0a90 C5FE7FA4 		vmovdqu	YMMWORD PTR 128[rcx+rdx], ymm4	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B
 1792      11800000 
 1792      00
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1793              		.loc 1 791 48 is_stmt 1 discriminator 2 view .LVU545
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1794              		.loc 1 791 12 discriminator 2 view .LVU546
 1795              		.loc 1 792 9 discriminator 2 view .LVU547
 1796              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1797              		.loc 1 792 54 is_stmt 0 discriminator 2 view .LVU548
 1798 0a99 C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp1025, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1798      16A00000 
 1798      00
 1799              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1800              		.loc 1 792 99 discriminator 2 view .LVU549
 1801 0aa2 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r8+rdx]	# tmp1026, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1801      9C10A000 
 1801      0000
 1802              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1803              		.loc 1 792 54 discriminator 2 view .LVU550
 1804 0aac C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__62.182, tmp1025, _184
 1805              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1806              		.loc 1 792 99 discriminator 2 view .LVU551
 1807 0ab0 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__67.186, tmp1026, _182
GAS LISTING /tmp/ccgH0yRS.s 			page 54


 1808              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1809              		.loc 1 792 72 discriminator 2 view .LVU552
 1810 0ab4 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__70.187, vect__62.182, vect__67.186
 1810      D1
 1811              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1812              		.loc 1 792 29 discriminator 2 view .LVU553
 1813 0ab9 C57E7F94 		vmovdqu	YMMWORD PTR 160[rcx+rdx], ymm10	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0
 1813      11A00000 
 1813      00
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1814              		.loc 1 791 48 is_stmt 1 discriminator 2 view .LVU554
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1815              		.loc 1 791 12 discriminator 2 view .LVU555
 1816              		.loc 1 792 9 discriminator 2 view .LVU556
 1817              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1818              		.loc 1 792 54 is_stmt 0 discriminator 2 view .LVU557
 1819 0ac2 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp1027, MEM[base: vectp.180_10, index: ivtmp.222_467, o
 1819      16C00000 
 1819      00
 1820              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1821              		.loc 1 792 99 discriminator 2 view .LVU558
 1822 0acb C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r8+rdx]	# tmp1028, MEM[base: vectp.184_17, index: ivtmp.222_467, of
 1822      AC10C000 
 1822      0000
 1823              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1824              		.loc 1 792 54 discriminator 2 view .LVU559
 1825 0ad5 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__62.182, tmp1027, _184
 1826              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1827              		.loc 1 792 99 discriminator 2 view .LVU560
 1828 0ad9 C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__67.186, tmp1028, _182
 1829              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1830              		.loc 1 792 72 discriminator 2 view .LVU561
 1831 0add C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__70.187, vect__62.182, vect__67.186
 1831      FE
 1832              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1833              		.loc 1 792 29 discriminator 2 view .LVU562
 1834 0ae2 C57E7FBC 		vmovdqu	YMMWORD PTR 192[rcx+rdx], ymm15	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0
 1834      11C00000 
 1834      00
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1835              		.loc 1 791 48 is_stmt 1 discriminator 2 view .LVU563
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1836              		.loc 1 791 12 discriminator 2 view .LVU564
 1837              		.loc 1 792 9 discriminator 2 view .LVU565
 1838              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1839              		.loc 1 792 54 is_stmt 0 discriminator 2 view .LVU566
 1840 0aeb C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp1029, MEM[base: vectp.180_10, index: ivtmp.222_467, of
 1840      16E00000 
 1840      00
 1841              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1842              		.loc 1 792 99 discriminator 2 view .LVU567
 1843 0af4 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rdx]	# tmp1030, MEM[base: vectp.184_17, index: ivtmp.222_467, off
 1843      BC10E000 
 1843      0000
 1844              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1845              		.loc 1 792 54 discriminator 2 view .LVU568
 1846 0afe C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__62.182, tmp1029, _184
GAS LISTING /tmp/ccgH0yRS.s 			page 55


 1847              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1848              		.loc 1 792 99 discriminator 2 view .LVU569
 1849 0b02 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__67.186, tmp1030, _182
 1850              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1851              		.loc 1 792 72 discriminator 2 view .LVU570
 1852 0b06 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__70.187, vect__62.182, vect__67.186
 1853              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1854              		.loc 1 792 29 discriminator 2 view .LVU571
 1855 0b0a C5FE7FAC 		vmovdqu	YMMWORD PTR 224[rcx+rdx], ymm5	# MEM[base: vectp.189_212, index: ivtmp.222_467, offset: 0B
 1855      11E00000 
 1855      00
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1856              		.loc 1 791 48 is_stmt 1 discriminator 2 view .LVU572
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1857              		.loc 1 791 12 discriminator 2 view .LVU573
 1858 0b13 4881C200 		add	rdx, 256	# ivtmp.222,
 1858      010000
 1859 0b1a 4C39D2   		cmp	rdx, r10	# ivtmp.222, _469
 1860 0b1d 0F85D2FE 		jne	.L69	#,
 1860      FFFF
 1861              	.L244:
 1862 0b23 4C8B5424 		mov	r10, QWORD PTR -40[rsp]	# source_word, %sfp
 1862      D8
 1863 0b28 4C89CB   		mov	rbx, r9	# niters_vector_mult_vf.176, niters.174
 1864 0b2b 4883E3FC 		and	rbx, -4	# niters_vector_mult_vf.176,
 1865 0b2f 4901DC   		add	r12, rbx	# tmp.177, niters_vector_mult_vf.176
 1866 0b32 4901DA   		add	r10, rbx	# source_word, niters_vector_mult_vf.176
 1867 0b35 4C39CB   		cmp	rbx, r9	# niters_vector_mult_vf.176, niters.174
 1868 0b38 0F844207 		je	.L257	#,
 1868      0000
 1869              	.LVL79:
 1870              		.loc 1 792 9 view .LVU574
 1871              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1872              		.loc 1 791 5 is_stmt 0 view .LVU575
 1873 0b3e 488B5424 		mov	rdx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 1873      F8
 1874              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1875              		.loc 1 791 57 view .LVU576
 1876 0b43 4D8D5C24 		lea	r11, 1[r12]	# copy_word,
 1876      01
 1877              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1878              		.loc 1 792 99 view .LVU577
 1879 0b48 C42289F7 		shlx	r8, QWORD PTR 8[rdi+r10*8], r14	# tmp545, *_66, shift
 1879      44D708
 1880              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1881              		.loc 1 792 54 view .LVU578
 1882 0b4f C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r10*8], rax	# tmp547, *_61, shift_flipped
 1882      34D7
 1883              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1884              		.loc 1 792 72 view .LVU579
 1885 0b55 4909F0   		or	r8, rsi	# tmp549, tmp547
 1886              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1887              		.loc 1 792 83 view .LVU580
 1888 0b58 4D8D4A01 		lea	r9, 1[r10]	# _64,
 1889              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccgH0yRS.s 			page 56


 1890              		.loc 1 792 72 view .LVU581
 1891 0b5c 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# *_70, tmp549
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1892              		.loc 1 791 48 is_stmt 1 view .LVU582
 1893              	.LVL80:
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1894              		.loc 1 791 12 view .LVU583
 1895              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1896              		.loc 1 791 5 is_stmt 0 view .LVU584
 1897 0b60 4939D3   		cmp	r11, rdx	# copy_word, destination_stop_word
 1898 0b63 0F871707 		ja	.L257	#,
 1898      0000
 1899              		.loc 1 792 9 is_stmt 1 view .LVU585
 1900              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1901              		.loc 1 791 57 is_stmt 0 view .LVU586
 1902 0b69 4983C402 		add	r12, 2	# copy_word,
 1903              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1904              		.loc 1 792 99 view .LVU587
 1905 0b6d C4A289F7 		shlx	rcx, QWORD PTR 8[rdi+r9*8], r14	# tmp550, *_53, shift
 1905      4CCF08
 1906              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1907              		.loc 1 792 54 view .LVU588
 1908 0b74 4A8B1CCF 		mov	rbx, QWORD PTR [rdi+r9*8]	# *_48, *_48
 1909              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1910              		.loc 1 792 83 view .LVU589
 1911 0b78 4983C202 		add	r10, 2	# _51,
 1912              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1913              		.loc 1 792 54 view .LVU590
 1914 0b7c C462FBF7 		shrx	r9, rbx, rax	# tmp552, *_48, shift_flipped
 1914      CB
 1915              	.LVL81:
 1916              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1917              		.loc 1 792 72 view .LVU591
 1918 0b81 4C09C9   		or	rcx, r9	# tmp554, tmp552
 1919 0b84 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_57, tmp554
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1920              		.loc 1 791 48 is_stmt 1 view .LVU592
 1921              	.LVL82:
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1922              		.loc 1 791 12 view .LVU593
 1923              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1924              		.loc 1 791 5 is_stmt 0 view .LVU594
 1925 0b88 4C39E2   		cmp	rdx, r12	# destination_stop_word, copy_word
 1926 0b8b 0F82EF06 		jb	.L257	#,
 1926      0000
 1927              		.loc 1 792 9 is_stmt 1 view .LVU595
 1928              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1929              		.loc 1 792 99 is_stmt 0 view .LVU596
 1930 0b91 C42289F7 		shlx	r14, QWORD PTR 8[rdi+r10*8], r14	# tmp555, *_36, shift
 1930      74D708
 1931              	.LVL83:
 1932              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1933              		.loc 1 792 54 view .LVU597
 1934 0b98 4E8B14D7 		mov	r10, QWORD PTR [rdi+r10*8]	# *_30, *_30
GAS LISTING /tmp/ccgH0yRS.s 			page 57


 1935              	.LVL84:
 1936              		.loc 1 792 54 view .LVU598
 1937 0b9c C4C2FBF7 		shrx	rax, r10, rax	# tmp557, *_30, shift_flipped
 1937      C2
 1938              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 1939              		.loc 1 792 72 view .LVU599
 1940 0ba1 4C09F0   		or	rax, r14	# tmp559, tmp555
 1941 0ba4 4A8904E7 		mov	QWORD PTR [rdi+r12*8], rax	# *_40, tmp559
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1942              		.loc 1 791 48 is_stmt 1 view .LVU600
 1943              	.LVL85:
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1944              		.loc 1 791 12 view .LVU601
 1945 0ba8 C5F877   		vzeroupper
 1946              	.LVL86:
 1947              	.L73:
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 1948              		.loc 1 791 12 is_stmt 0 view .LVU602
 1949 0bab 4C3B6C24 		cmp	r13, QWORD PTR -24[rsp]	# _175, %sfp
 1949      E8
 1950 0bb0 B9000000 		mov	ecx, 0	# tmp544,
 1950      00
 1951 0bb5 4C8B6424 		mov	r12, QWORD PTR -32[rsp]	#, %sfp
 1951      E0
 1952 0bba 490F46CC 		cmovbe	rcx, r12	#,, tmp543
 1953 0bbe 4C01E9   		add	rcx, r13	# copy_word, _175
 1954              	.L66:
 793:sieve_extend.c ****     }
 794:sieve_extend.c ****     bitarray[copy_word] &= chopmask(destination_stop);
 1955              		.loc 1 794 5 is_stmt 1 view .LVU603
 1956              	# sieve_extend.c:794:     bitarray[copy_word] &= chopmask(destination_stop);
 1957              		.loc 1 794 25 is_stmt 0 view .LVU604
 1958 0bc1 4C213CCF 		and	QWORD PTR [rdi+rcx*8], r15	# *_72, _193
 1959              	# sieve_extend.c:796: }
 795:sieve_extend.c **** 
 796:sieve_extend.c **** }
 1960              		.loc 1 796 1 view .LVU605
 1961 0bc5 488D65D8 		lea	rsp, -40[rbp]	#,
 1962 0bc9 5B       		pop	rbx	#
 1963 0bca 415C     		pop	r12	#
 1964 0bcc 415D     		pop	r13	#
 1965 0bce 415E     		pop	r14	#
 1966 0bd0 415F     		pop	r15	#
 1967 0bd2 5D       		pop	rbp	#
 1968              		.cfi_remember_state
 1969              		.cfi_def_cfa 7, 8
 1970 0bd3 C3       		ret	
 1971              	.LVL87:
 1972              		.p2align 4,,7
 1973 0bd4 0F1F4000 		.p2align 3
 1974              	.L261:
 1975              		.cfi_restore_state
 1976              	.LBB319:
 781:sieve_extend.c **** 
 1977              		.loc 1 781 9 is_stmt 1 view .LVU606
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1978              		.loc 1 785 9 view .LVU607
GAS LISTING /tmp/ccgH0yRS.s 			page 58


 1979              	.LBB320:
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1980              		.loc 1 785 14 view .LVU608
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1981              		.loc 1 785 40 view .LVU609
 1982              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1983              		.loc 1 785 9 is_stmt 0 view .LVU610
 1984 0bd8 4C8B6C24 		mov	r13, QWORD PTR -8[rsp]	# loop_distance, %sfp
 1984      F8
 1985 0bdd 4889F2   		mov	rdx, rsi	# source_word, source_word
 1986              	.LVL88:
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 1987              		.loc 1 785 9 view .LVU611
 1988 0be0 4929CD   		sub	r13, rcx	# loop_distance, copy_word
 1989 0be3 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, loop_distance
 1989      E8
 1990 0be8 0F84FB03 		je	.L62	#,
 1990      0000
 1991 0bee 4D8D5424 		lea	r10, 8[r12]	# tmp413,
 1991      08
 1992 0bf3 4C8D4B28 		lea	r9, 40[rbx]	# tmp412,
 1993 0bf7 4D39D1   		cmp	r9, r10	# tmp412, tmp413
 1994 0bfa 4C8D6B08 		lea	r13, 8[rbx]	# tmp417,
 1995 0bfe 410F9EC1 		setle	r9b	#, tmp415
 1996 0c02 4983C428 		add	r12, 40	# tmp416,
 1997 0c06 4D39EC   		cmp	r12, r13	# tmp416, tmp417
 1998 0c09 488D5601 		lea	rdx, 1[rsi]	# _232,
 1999 0c0d 410F9EC5 		setle	r13b	#, tmp419
 2000 0c11 4509E9   		or	r9d, r13d	# tmp420, tmp419
 2001 0c14 4C8D6B20 		lea	r13, 32[rbx]	# tmp421,
 2002 0c18 4D39D5   		cmp	r13, r10	# tmp421, tmp413
 2003 0c1b 410F9EC2 		setle	r10b	#, tmp424
 2004 0c1f 4939DC   		cmp	r12, rbx	# tmp416, _179
 2005 0c22 410F9EC4 		setle	r12b	#, tmp427
 2006 0c26 4509E2   		or	r10d, r12d	# tmp428, tmp427
 2007 0c29 4584D1   		test	r9b, r10b	# tmp420, tmp428
 2008 0c2c 0F846706 		je	.L57	#,
 2008      0000
 2009 0c32 4C8B4C24 		mov	r9, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2009      E8
 2010 0c37 4D8D69FF 		lea	r13, -1[r9]	# tmp430,
 2011 0c3b 4983FD05 		cmp	r13, 5	# tmp430,
 2012 0c3f 0F865406 		jbe	.L57	#,
 2012      0000
 2013 0c45 4D89D9   		mov	r9, r11	# tmp433, _180
 2014              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2015              		.loc 1 785 33 view .LVU612
 2016 0c48 4531E4   		xor	r12d, r12d	# i
 2017 0c4b 49C1E903 		shr	r9, 3	# tmp433,
 2018 0c4f 49F7D9   		neg	r9	# tmp434
 2019 0c52 4183E103 		and	r9d, 3	# prolog_loop_niters.192,
 2020 0c56 7468     		je	.L58	#,
 786:sieve_extend.c ****         }
 2021              		.loc 1 786 13 is_stmt 1 view .LVU613
 2022              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccgH0yRS.s 			page 59


 786:sieve_extend.c ****         }
 2023              		.loc 1 786 109 is_stmt 0 view .LVU614
 2024 0c58 488B5C1F 		mov	rbx, QWORD PTR 8[rdi+rbx]	# *_428, *_428
 2024      08
 2025 0c5d C46289F7 		shlx	r10, rbx, r14	# tmp435, *_428, shift
 2025      D3
 2026              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2027              		.loc 1 786 62 view .LVU615
 2028 0c62 4D8B1B   		mov	r11, QWORD PTR [r11]	# *_180, *_180
 2029 0c65 C442FBF7 		shrx	r12, r11, rax	# tmp437, *_180, shift_flipped
 2029      E3
 2030              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2031              		.loc 1 786 80 view .LVU616
 2032 0c6a 4D09E2   		or	r10, r12	# tmp439, tmp437
 2033 0c6d 4983F901 		cmp	r9, 1	# prolog_loop_niters.192,
 2034 0c71 4C8914CF 		mov	QWORD PTR [rdi+rcx*8], r10	# *_433, tmp439
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2035              		.loc 1 785 58 is_stmt 1 view .LVU617
 2036              	.LVL89:
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2037              		.loc 1 785 40 view .LVU618
 2038              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2039              		.loc 1 785 59 is_stmt 0 view .LVU619
 2040 0c75 41BC0100 		mov	r12d, 1	# i,
 2040      0000
 2041 0c7b 7443     		je	.L58	#,
 786:sieve_extend.c ****         }
 2042              		.loc 1 786 13 is_stmt 1 view .LVU620
 2043              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2044              		.loc 1 786 109 is_stmt 0 view .LVU621
 2045 0c7d C46289F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r14	# tmp441, *_448, shift
 2045      6CD708
 2046              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2047              		.loc 1 786 62 view .LVU622
 2048 0c84 C4E2FBF7 		shrx	rbx, QWORD PTR [rdi+rdx*8], rax	# tmp443, *_443, shift_flipped
 2048      1CD7
 2049              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2050              		.loc 1 786 80 view .LVU623
 2051 0c8a 4909DD   		or	r13, rbx	# tmp445, tmp443
 2052 0c8d 4983F903 		cmp	r9, 3	# prolog_loop_niters.192,
 2053 0c91 4E896CC7 		mov	QWORD PTR 16[rdi+r8*8], r13	# *_453, tmp445
 2053      10
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2054              		.loc 1 785 58 is_stmt 1 view .LVU624
 2055              	.LVL90:
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2056              		.loc 1 785 40 view .LVU625
 2057              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2058              		.loc 1 785 59 is_stmt 0 view .LVU626
 2059 0c96 41BC0200 		mov	r12d, 2	# i,
GAS LISTING /tmp/ccgH0yRS.s 			page 60


 2059      0000
 2060 0c9c 7522     		jne	.L58	#,
 786:sieve_extend.c ****         }
 2061              		.loc 1 786 13 is_stmt 1 view .LVU627
 2062              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2063              		.loc 1 786 58 is_stmt 0 view .LVU628
 2064 0c9e 4C8D5E02 		lea	r11, 2[rsi]	# tmp446,
 2065              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2066              		.loc 1 786 109 view .LVU629
 2067 0ca2 C42289F7 		shlx	r10, QWORD PTR 8[rdi+r11*8], r14	# tmp448, *_286, shift
 2067      54DF08
 2068              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2069              		.loc 1 786 62 view .LVU630
 2070 0ca9 4E8B24DF 		mov	r12, QWORD PTR [rdi+r11*8]	# *_281, *_281
 2071 0cad C442FBF7 		shrx	r13, r12, rax	# tmp450, *_281, shift_flipped
 2071      EC
 2072              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2073              		.loc 1 786 80 view .LVU631
 2074 0cb2 4D09EA   		or	r10, r13	# tmp452, tmp450
 2075              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2076              		.loc 1 785 59 view .LVU632
 2077 0cb5 41BC0300 		mov	r12d, 3	# i,
 2077      0000
 2078              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2079              		.loc 1 786 80 view .LVU633
 2080 0cbb 4E8954C7 		mov	QWORD PTR 24[rdi+r8*8], r10	# *_291, tmp452
 2080      18
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2081              		.loc 1 785 58 is_stmt 1 view .LVU634
 2082              	.LVL91:
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2083              		.loc 1 785 40 view .LVU635
 2084              	.L58:
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2085              		.loc 1 785 40 is_stmt 0 view .LVU636
 2086 0cc0 488B5C24 		mov	rbx, QWORD PTR -24[rsp]	# niters.193, %sfp
 2086      E8
 2087 0cc5 4E8D040E 		lea	r8, [rsi+r9]	# tmp453,
 2088 0cc9 4E8D14C7 		lea	r10, [rdi+r8*8]	# vectp.198,
 2089 0ccd 4C01CA   		add	rdx, r9	# tmp455, prolog_loop_niters.192
 2090 0cd0 C5F96E4C 		vmovd	xmm1, DWORD PTR -16[rsp]	# _184, %sfp
 2090      24F0
 2091 0cd6 4C8D1CD7 		lea	r11, [rdi+rdx*8]	# vectp.202,
 2092 0cda 4C29CB   		sub	rbx, r9	# niters.193, prolog_loop_niters.192
 2093              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2094              		.loc 1 785 33 view .LVU637
 2095 0cdd 31D2     		xor	edx, edx	# ivtmp.241
 2096 0cdf 4989DD   		mov	r13, rbx	# bnd.194, niters.193
 2097 0ce2 4901C9   		add	r9, rcx	# tmp457, copy_word
 2098 0ce5 49C1ED02 		shr	r13, 2	# bnd.194,
GAS LISTING /tmp/ccgH0yRS.s 			page 61


 2099 0ce9 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.207,
 2100 0ced 49C1E505 		sal	r13, 5	# bnd.194,
 2101 0cf1 C5F96E44 		vmovd	xmm0, DWORD PTR -12[rsp]	# _182, %sfp
 2101      24F4
 2102 0cf7 4D8D45E0 		lea	r8, -32[r13]	# tmp582,
 2103 0cfb 49C1E805 		shr	r8, 5	# tmp580,
 2104 0cff 4983C001 		add	r8, 1	# tmp583,
 2105 0d03 4183E007 		and	r8d, 7	# tmp584,
 2106 0d07 0F840901 		je	.L60	#,
 2106      0000
 2107 0d0d 4983F801 		cmp	r8, 1	# tmp584,
 2108 0d11 0F84D300 		je	.L179	#,
 2108      0000
 2109 0d17 4983F802 		cmp	r8, 2	# tmp584,
 2110 0d1b 0F84A600 		je	.L180	#,
 2110      0000
 2111 0d21 4983F803 		cmp	r8, 3	# tmp584,
 2112 0d25 747E     		je	.L181	#,
 2113 0d27 4983F804 		cmp	r8, 4	# tmp584,
 2114 0d2b 7455     		je	.L182	#,
 2115 0d2d 4983F805 		cmp	r8, 5	# tmp584,
 2116 0d31 742D     		je	.L183	#,
 2117 0d33 4983F806 		cmp	r8, 6	# tmp584,
 2118 0d37 0F858007 		jne	.L262	#,
 2118      0000
 2119              	.L184:
 786:sieve_extend.c ****         }
 2120              		.loc 1 786 13 is_stmt 1 view .LVU638
 2121              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2122              		.loc 1 786 62 is_stmt 0 view .LVU639
 2123 0d3d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r10+rdx]	# tmp1073, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2123      2412
 2124              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2125              		.loc 1 786 109 view .LVU640
 2126 0d43 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r11+rdx]	# tmp1074, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2126      3413
 2127              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2128              		.loc 1 786 62 view .LVU641
 2129 0d49 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.200, tmp1073, _184
 2130              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2131              		.loc 1 786 109 view .LVU642
 2132 0d4d C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__54.204, tmp1074, _182
 2133              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2134              		.loc 1 786 80 view .LVU643
 2135 0d51 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__58.205, vect__49.200, vect__54.204
 2135      F7
 2136              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2137              		.loc 1 786 35 view .LVU644
 2138 0d56 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm6	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2138      3411
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccgH0yRS.s 			page 62


 2139              		.loc 1 785 58 is_stmt 1 view .LVU645
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2140              		.loc 1 785 40 view .LVU646
 2141 0d5c 4883C220 		add	rdx, 32	# ivtmp.241,
 2142              	.L183:
 786:sieve_extend.c ****         }
 2143              		.loc 1 786 13 view .LVU647
 2144              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2145              		.loc 1 786 62 is_stmt 0 view .LVU648
 2146 0d60 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r10+rdx]	# tmp1075, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2146      1412
 2147              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2148              		.loc 1 786 109 view .LVU649
 2149 0d66 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r11+rdx]	# tmp1076, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2149      2413
 2150              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2151              		.loc 1 786 62 view .LVU650
 2152 0d6c C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__49.200, tmp1075, _184
 2153              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2154              		.loc 1 786 109 view .LVU651
 2155 0d70 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__54.204, tmp1076, _182
 2156              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2157              		.loc 1 786 80 view .LVU652
 2158 0d74 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__58.205, vect__49.200, vect__54.204
 2159              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2160              		.loc 1 786 35 view .LVU653
 2161 0d78 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm8	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2161      0411
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2162              		.loc 1 785 58 is_stmt 1 view .LVU654
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2163              		.loc 1 785 40 view .LVU655
 2164 0d7e 4883C220 		add	rdx, 32	# ivtmp.241,
 2165              	.L182:
 786:sieve_extend.c ****         }
 2166              		.loc 1 786 13 view .LVU656
 2167              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2168              		.loc 1 786 62 is_stmt 0 view .LVU657
 2169 0d82 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r10+rdx]	# tmp1077, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2169      0C12
 2170              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2171              		.loc 1 786 109 view .LVU658
 2172 0d88 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1078, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2172      1C13
 2173              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2174              		.loc 1 786 62 view .LVU659
 2175 0d8e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__49.200, tmp1077, _184
 2176              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccgH0yRS.s 			page 63


 786:sieve_extend.c ****         }
 2177              		.loc 1 786 109 view .LVU660
 2178 0d92 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__54.204, tmp1078, _182
 2179              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2180              		.loc 1 786 80 view .LVU661
 2181 0d96 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__58.205, vect__49.200, vect__54.204
 2181      E3
 2182              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2183              		.loc 1 786 35 view .LVU662
 2184 0d9b C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm12	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], 
 2184      2411
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2185              		.loc 1 785 58 is_stmt 1 view .LVU663
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2186              		.loc 1 785 40 view .LVU664
 2187 0da1 4883C220 		add	rdx, 32	# ivtmp.241,
 2188              	.L181:
 786:sieve_extend.c ****         }
 2189              		.loc 1 786 13 view .LVU665
 2190              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2191              		.loc 1 786 62 is_stmt 0 view .LVU666
 2192 0da5 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r10+rdx]	# tmp1079, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2192      2C12
 2193              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2194              		.loc 1 786 109 view .LVU667
 2195 0dab C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r11+rdx]	# tmp1080, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2195      3C13
 2196              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2197              		.loc 1 786 62 view .LVU668
 2198 0db1 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__49.200, tmp1079, _184
 2199              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2200              		.loc 1 786 109 view .LVU669
 2201 0db5 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__54.204, tmp1080, _182
 2202              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2203              		.loc 1 786 80 view .LVU670
 2204 0db9 C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__58.205, vect__49.200, vect__54.204
 2205              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2206              		.loc 1 786 35 view .LVU671
 2207 0dbd C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm2	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2207      1411
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2208              		.loc 1 785 58 is_stmt 1 view .LVU672
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2209              		.loc 1 785 40 view .LVU673
 2210 0dc3 4883C220 		add	rdx, 32	# ivtmp.241,
 2211              	.L180:
 786:sieve_extend.c ****         }
 2212              		.loc 1 786 13 view .LVU674
 2213              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
GAS LISTING /tmp/ccgH0yRS.s 			page 64


 786:sieve_extend.c ****         }
 2214              		.loc 1 786 62 is_stmt 0 view .LVU675
 2215 0dc7 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r10+rdx]	# tmp1081, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2215      3C12
 2216              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2217              		.loc 1 786 109 view .LVU676
 2218 0dcd C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR [r11+rdx]	# tmp1082, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2218      2C13
 2219              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2220              		.loc 1 786 62 view .LVU677
 2221 0dd3 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__49.200, tmp1081, _184
 2222              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2223              		.loc 1 786 109 view .LVU678
 2224 0dd7 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__54.204, tmp1082, _182
 2225              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2226              		.loc 1 786 80 view .LVU679
 2227 0ddb C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__58.205, vect__49.200, vect__54.204
 2227      C8
 2228              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2229              		.loc 1 786 35 view .LVU680
 2230 0de0 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm9	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2230      0C11
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2231              		.loc 1 785 58 is_stmt 1 view .LVU681
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2232              		.loc 1 785 40 view .LVU682
 2233 0de6 4883C220 		add	rdx, 32	# ivtmp.241,
 2234              	.L179:
 786:sieve_extend.c ****         }
 2235              		.loc 1 786 13 view .LVU683
 2236              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2237              		.loc 1 786 62 is_stmt 0 view .LVU684
 2238 0dea C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r10+rdx]	# tmp1083, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2238      1412
 2239              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2240              		.loc 1 786 109 view .LVU685
 2241 0df0 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11+rdx]	# tmp1084, MEM[base: vectp.202_332, index: ivtmp.241_483, offs
 2241      1C13
 2242              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2243              		.loc 1 786 62 view .LVU686
 2244 0df6 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__49.200, tmp1083, _184
 2245              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2246              		.loc 1 786 109 view .LVU687
 2247 0dfa C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__54.204, tmp1084, _182
 2248              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2249              		.loc 1 786 80 view .LVU688
 2250 0dfe C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__58.205, vect__49.200, vect__54.204
GAS LISTING /tmp/ccgH0yRS.s 			page 65


 2250      EC
 2251              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2252              		.loc 1 786 35 view .LVU689
 2253 0e03 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm13	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], 
 2253      2C11
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2254              		.loc 1 785 58 is_stmt 1 view .LVU690
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2255              		.loc 1 785 40 view .LVU691
 2256 0e09 4883C220 		add	rdx, 32	# ivtmp.241,
 2257 0e0d 4C39EA   		cmp	rdx, r13	# ivtmp.241, _485
 2258 0e10 0F843E01 		je	.L243	#,
 2258      0000
 2259              	.L60:
 786:sieve_extend.c ****         }
 2260              		.loc 1 786 13 discriminator 3 view .LVU692
 2261              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2262              		.loc 1 786 62 is_stmt 0 discriminator 3 view .LVU693
 2263 0e16 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r10+rdx]	# tmp980, MEM[base: vectp.198_325, index: ivtmp.241_483, offs
 2263      3412
 2264              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2265              		.loc 1 786 109 discriminator 3 view .LVU694
 2266 0e1c C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r11+rdx]	# tmp981, MEM[base: vectp.202_332, index: ivtmp.241_483, offse
 2266      3413
 2267              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2268              		.loc 1 786 62 discriminator 3 view .LVU695
 2269 0e22 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__49.200, tmp980, _184
 2270              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2271              		.loc 1 786 109 discriminator 3 view .LVU696
 2272 0e26 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__54.204, tmp981, _182
 2273              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2274              		.loc 1 786 80 discriminator 3 view .LVU697
 2275 0e2a C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__58.205, vect__49.200, vect__54.204
 2276              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2277              		.loc 1 786 35 discriminator 3 view .LVU698
 2278 0e2e C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rdx], ymm7	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], v
 2278      3C11
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2279              		.loc 1 785 58 is_stmt 1 discriminator 3 view .LVU699
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2280              		.loc 1 785 40 discriminator 3 view .LVU700
 786:sieve_extend.c ****         }
 2281              		.loc 1 786 13 discriminator 3 view .LVU701
 2282              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2283              		.loc 1 786 62 is_stmt 0 discriminator 3 view .LVU702
 2284 0e34 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r10+rdx]	# tmp982, MEM[base: vectp.198_325, index: ivtmp.241_483, off
 2284      641220
 2285              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
GAS LISTING /tmp/ccgH0yRS.s 			page 66


 2286              		.loc 1 786 109 discriminator 3 view .LVU703
 2287 0e3b C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 32[r11+rdx]	# tmp983, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2287      6C1320
 2288              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2289              		.loc 1 786 62 discriminator 3 view .LVU704
 2290 0e42 C55DD3C1 		vpsrlq	ymm8, ymm4, xmm1	# vect__49.200, tmp982, _184
 2291              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2292              		.loc 1 786 109 discriminator 3 view .LVU705
 2293 0e46 C555F3C8 		vpsllq	ymm9, ymm5, xmm0	# vect__54.204, tmp983, _182
 2294              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2295              		.loc 1 786 80 discriminator 3 view .LVU706
 2296 0e4a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.205, vect__49.200, vect__54.204
 2296      D1
 2297              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2298              		.loc 1 786 35 discriminator 3 view .LVU707
 2299 0e4f C4417E7F 		vmovdqu	YMMWORD PTR 32[r9+rdx], ymm10	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B]
 2299      541120
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2300              		.loc 1 785 58 is_stmt 1 discriminator 3 view .LVU708
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2301              		.loc 1 785 40 discriminator 3 view .LVU709
 786:sieve_extend.c ****         }
 2302              		.loc 1 786 13 discriminator 3 view .LVU710
 2303              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2304              		.loc 1 786 62 is_stmt 0 discriminator 3 view .LVU711
 2305 0e56 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r10+rdx]	# tmp984, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2305      5C1240
 2306              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2307              		.loc 1 786 109 discriminator 3 view .LVU712
 2308 0e5d C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r11+rdx]	# tmp985, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2308      5C1340
 2309              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2310              		.loc 1 786 62 discriminator 3 view .LVU713
 2311 0e64 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__49.200, tmp984, _184
 2312              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2313              		.loc 1 786 109 discriminator 3 view .LVU714
 2314 0e68 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__54.204, tmp985, _182
 2315              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2316              		.loc 1 786 80 discriminator 3 view .LVU715
 2317 0e6c C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__58.205, vect__49.200, vect__54.204
 2317      F5
 2318              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2319              		.loc 1 786 35 discriminator 3 view .LVU716
 2320 0e71 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rdx], ymm14	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B]
 2320      741140
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2321              		.loc 1 785 58 is_stmt 1 discriminator 3 view .LVU717
GAS LISTING /tmp/ccgH0yRS.s 			page 67


 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2322              		.loc 1 785 40 discriminator 3 view .LVU718
 786:sieve_extend.c ****         }
 2323              		.loc 1 786 13 discriminator 3 view .LVU719
 2324              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2325              		.loc 1 786 62 is_stmt 0 discriminator 3 view .LVU720
 2326 0e78 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r10+rdx]	# tmp986, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2326      7C1260
 2327              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2328              		.loc 1 786 109 discriminator 3 view .LVU721
 2329 0e7f C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 96[r11+rdx]	# tmp987, MEM[base: vectp.202_332, index: ivtmp.241_483, off
 2329      541360
 2330              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2331              		.loc 1 786 62 discriminator 3 view .LVU722
 2332 0e86 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__49.200, tmp986, _184
 2333              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2334              		.loc 1 786 109 discriminator 3 view .LVU723
 2335 0e8a C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__54.204, tmp987, _182
 2336              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2337              		.loc 1 786 80 discriminator 3 view .LVU724
 2338 0e8e C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__58.205, vect__49.200, vect__54.204
 2339              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2340              		.loc 1 786 35 discriminator 3 view .LVU725
 2341 0e92 C4C17E7F 		vmovdqu	YMMWORD PTR 96[r9+rdx], ymm4	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B],
 2341      641160
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2342              		.loc 1 785 58 is_stmt 1 discriminator 3 view .LVU726
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2343              		.loc 1 785 40 discriminator 3 view .LVU727
 786:sieve_extend.c ****         }
 2344              		.loc 1 786 13 discriminator 3 view .LVU728
 2345              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2346              		.loc 1 786 62 is_stmt 0 discriminator 3 view .LVU729
 2347 0e99 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 128[r10+rdx]	# tmp988, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2347      84128000 
 2347      0000
 2348              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2349              		.loc 1 786 109 discriminator 3 view .LVU730
 2350 0ea3 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR 128[r11+rdx]	# tmp989, MEM[base: vectp.202_332, index: ivtmp.241_483, of
 2350      8C138000 
 2350      0000
 2351              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2352              		.loc 1 786 62 discriminator 3 view .LVU731
 2353 0ead C5BDD3E9 		vpsrlq	ymm5, ymm8, xmm1	# vect__49.200, tmp988, _184
 2354              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2355              		.loc 1 786 109 discriminator 3 view .LVU732
 2356 0eb1 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__54.204, tmp989, _182
GAS LISTING /tmp/ccgH0yRS.s 			page 68


 2357              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2358              		.loc 1 786 80 discriminator 3 view .LVU733
 2359 0eb5 C44155EB 		vpor	ymm11, ymm5, ymm10	# vect__58.205, vect__49.200, vect__54.204
 2359      DA
 2360              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2361              		.loc 1 786 35 discriminator 3 view .LVU734
 2362 0eba C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rdx], ymm11	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B
 2362      9C118000 
 2362      0000
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2363              		.loc 1 785 58 is_stmt 1 discriminator 3 view .LVU735
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2364              		.loc 1 785 40 discriminator 3 view .LVU736
 786:sieve_extend.c ****         }
 2365              		.loc 1 786 13 discriminator 3 view .LVU737
 2366              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2367              		.loc 1 786 62 is_stmt 0 discriminator 3 view .LVU738
 2368 0ec4 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r10+rdx]	# tmp990, MEM[base: vectp.198_325, index: ivtmp.241_483, o
 2368      A412A000 
 2368      0000
 2369              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2370              		.loc 1 786 109 discriminator 3 view .LVU739
 2371 0ece C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r11+rdx]	# tmp991, MEM[base: vectp.202_332, index: ivtmp.241_483, of
 2371      9C13A000 
 2371      0000
 2372              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2373              		.loc 1 786 62 discriminator 3 view .LVU740
 2374 0ed8 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__49.200, tmp990, _184
 2375              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2376              		.loc 1 786 109 discriminator 3 view .LVU741
 2377 0edc C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__54.204, tmp991, _182
 2378              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2379              		.loc 1 786 80 discriminator 3 view .LVU742
 2380 0ee0 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__58.205, vect__49.200, vect__54.204
 2380      FE
 2381              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2382              		.loc 1 786 35 discriminator 3 view .LVU743
 2383 0ee5 C4417E7F 		vmovdqu	YMMWORD PTR 160[r9+rdx], ymm15	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B
 2383      BC11A000 
 2383      0000
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2384              		.loc 1 785 58 is_stmt 1 discriminator 3 view .LVU744
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2385              		.loc 1 785 40 discriminator 3 view .LVU745
 786:sieve_extend.c ****         }
 2386              		.loc 1 786 13 discriminator 3 view .LVU746
 2387              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2388              		.loc 1 786 62 is_stmt 0 discriminator 3 view .LVU747
GAS LISTING /tmp/ccgH0yRS.s 			page 69


 2389 0eef C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r10+rdx]	# tmp992, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2389      B412C000 
 2389      0000
 2390              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2391              		.loc 1 786 109 discriminator 3 view .LVU748
 2392 0ef9 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 192[r11+rdx]	# tmp993, MEM[base: vectp.202_332, index: ivtmp.241_483, of
 2392      BC13C000 
 2392      0000
 2393              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2394              		.loc 1 786 62 discriminator 3 view .LVU749
 2395 0f03 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__49.200, tmp992, _184
 2396              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2397              		.loc 1 786 109 discriminator 3 view .LVU750
 2398 0f07 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__54.204, tmp993, _182
 2399              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2400              		.loc 1 786 80 discriminator 3 view .LVU751
 2401 0f0b C56DEBC4 		vpor	ymm8, ymm2, ymm4	# vect__58.205, vect__49.200, vect__54.204
 2402              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2403              		.loc 1 786 35 discriminator 3 view .LVU752
 2404 0f0f C4417E7F 		vmovdqu	YMMWORD PTR 192[r9+rdx], ymm8	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B]
 2404      8411C000 
 2404      0000
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2405              		.loc 1 785 58 is_stmt 1 discriminator 3 view .LVU753
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2406              		.loc 1 785 40 discriminator 3 view .LVU754
 786:sieve_extend.c ****         }
 2407              		.loc 1 786 13 discriminator 3 view .LVU755
 2408              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2409              		.loc 1 786 62 is_stmt 0 discriminator 3 view .LVU756
 2410 0f19 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 224[r10+rdx]	# tmp994, MEM[base: vectp.198_325, index: ivtmp.241_483, of
 2410      AC12E000 
 2410      0000
 2411              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2412              		.loc 1 786 109 discriminator 3 view .LVU757
 2413 0f23 C4417E6F 		vmovdqu	ymm10, YMMWORD PTR 224[r11+rdx]	# tmp995, MEM[base: vectp.202_332, index: ivtmp.241_483, o
 2413      9413E000 
 2413      0000
 2414              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2415              		.loc 1 786 62 discriminator 3 view .LVU758
 2416 0f2d C555D3C9 		vpsrlq	ymm9, ymm5, xmm1	# vect__49.200, tmp994, _184
 2417              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2418              		.loc 1 786 109 discriminator 3 view .LVU759
 2419 0f31 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__54.204, tmp995, _182
 2420              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2421              		.loc 1 786 80 discriminator 3 view .LVU760
 2422 0f35 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.205, vect__49.200, vect__54.204
GAS LISTING /tmp/ccgH0yRS.s 			page 70


 2422      E3
 2423              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2424              		.loc 1 786 35 discriminator 3 view .LVU761
 2425 0f3a C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rdx], ymm12	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B
 2425      A411E000 
 2425      0000
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2426              		.loc 1 785 58 is_stmt 1 discriminator 3 view .LVU762
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2427              		.loc 1 785 40 discriminator 3 view .LVU763
 2428 0f44 4881C200 		add	rdx, 256	# ivtmp.241,
 2428      010000
 2429 0f4b 4C39EA   		cmp	rdx, r13	# ivtmp.241, _485
 2430 0f4e 0F85C2FE 		jne	.L60	#,
 2430      FFFF
 2431              	.L243:
 2432 0f54 4C8B6C24 		mov	r13, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2432      E8
 2433 0f59 4989DA   		mov	r10, rbx	# niters_vector_mult_vf.195, niters.193
 2434 0f5c 4983E2FC 		and	r10, -4	# niters_vector_mult_vf.195,
 2435 0f60 4C39D3   		cmp	rbx, r10	# niters.193, niters_vector_mult_vf.195
 2436 0f63 4F8D2414 		lea	r12, [r12+r10]	# tmp.196,
 2437 0f67 4A8D142E 		lea	rdx, [rsi+r13]	# source_word,
 2438 0f6b 0F840703 		je	.L255	#,
 2438      0000
 2439              	.LVL92:
 786:sieve_extend.c ****         }
 2440              		.loc 1 786 13 view .LVU764
 2441              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2442              		.loc 1 786 58 is_stmt 0 view .LVU765
 2443 0f71 4A8D1C26 		lea	rbx, [rsi+r12]	# tmp467,
 2444              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2445              		.loc 1 786 21 view .LVU766
 2446 0f75 4E8D1C21 		lea	r11, [rcx+r12]	# tmp468,
 2447              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2448              		.loc 1 786 62 view .LVU767
 2449 0f79 4C8B04DF 		mov	r8, QWORD PTR [rdi+rbx*8]	# *_386, *_386
 2450              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2451              		.loc 1 786 109 view .LVU768
 2452 0f7d C46289F7 		shlx	r9, QWORD PTR 8[rdi+rbx*8], r14	# tmp469, *_391, shift
 2452      4CDF08
 2453              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2454              		.loc 1 786 62 view .LVU769
 2455 0f84 C442FBF7 		shrx	r10, r8, rax	# tmp471, *_386, shift_flipped
 2455      D0
 2456              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2457              		.loc 1 786 80 view .LVU770
 2458 0f89 4D09D1   		or	r9, r10	# tmp473, tmp471
 2459 0f8c 4E890CDF 		mov	QWORD PTR [rdi+r11*8], r9	# *_396, tmp473
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccgH0yRS.s 			page 71


 2460              		.loc 1 785 58 is_stmt 1 view .LVU771
 2461              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2462              		.loc 1 785 59 is_stmt 0 view .LVU772
 2463 0f90 4D8D4C24 		lea	r9, 1[r12]	# i,
 2463      01
 2464              	.LVL93:
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2465              		.loc 1 785 40 is_stmt 1 view .LVU773
 2466              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2467              		.loc 1 785 9 is_stmt 0 view .LVU774
 2468 0f95 4D39CD   		cmp	r13, r9	# loop_distance, i
 2469 0f98 0F86DA02 		jbe	.L255	#,
 2469      0000
 786:sieve_extend.c ****         }
 2470              		.loc 1 786 13 is_stmt 1 view .LVU775
 2471              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2472              		.loc 1 786 58 is_stmt 0 view .LVU776
 2473 0f9e 4A8D1C0E 		lea	rbx, [rsi+r9]	# tmp474,
 2474              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2475              		.loc 1 785 59 view .LVU777
 2476 0fa2 4983C402 		add	r12, 2	# i,
 2477              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2478              		.loc 1 786 62 view .LVU778
 2479 0fa6 4C8B1CDF 		mov	r11, QWORD PTR [rdi+rbx*8]	# *_404, *_404
 2480              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2481              		.loc 1 786 21 view .LVU779
 2482 0faa 4901C9   		add	r9, rcx	# tmp475, copy_word
 2483              	.LVL94:
 2484              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2485              		.loc 1 786 109 view .LVU780
 2486 0fad C46289F7 		shlx	r8, QWORD PTR 8[rdi+rbx*8], r14	# tmp476, *_409, shift
 2486      44DF08
 2487              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2488              		.loc 1 786 62 view .LVU781
 2489 0fb4 C442FBF7 		shrx	r10, r11, rax	# tmp478, *_404, shift_flipped
 2489      D3
 2490              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2491              		.loc 1 786 80 view .LVU782
 2492 0fb9 4D09D0   		or	r8, r10	# tmp480, tmp478
 2493              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2494              		.loc 1 785 9 view .LVU783
 2495 0fbc 4D39E5   		cmp	r13, r12	# loop_distance, i
 2496              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2497              		.loc 1 786 80 view .LVU784
 2498 0fbf 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_414, tmp480
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
GAS LISTING /tmp/ccgH0yRS.s 			page 72


 2499              		.loc 1 785 58 is_stmt 1 view .LVU785
 2500              	.LVL95:
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2501              		.loc 1 785 40 view .LVU786
 2502              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2503              		.loc 1 785 9 is_stmt 0 view .LVU787
 2504 0fc3 0F86AF02 		jbe	.L255	#,
 2504      0000
 786:sieve_extend.c ****         }
 2505              		.loc 1 786 13 is_stmt 1 view .LVU788
 2506              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2507              		.loc 1 786 58 is_stmt 0 view .LVU789
 2508 0fc9 4C01E6   		add	rsi, r12	# tmp481, i
 2509              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2510              		.loc 1 786 21 view .LVU790
 2511 0fcc 4901CC   		add	r12, rcx	# tmp482, copy_word
 2512              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2513              		.loc 1 786 109 view .LVU791
 2514 0fcf C4E289F7 		shlx	rcx, QWORD PTR 8[rdi+rsi*8], r14	# tmp483, *_311, shift
 2514      4CF708
 2515              	.LVL96:
 2516              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2517              		.loc 1 786 62 view .LVU792
 2518 0fd6 488B34F7 		mov	rsi, QWORD PTR [rdi+rsi*8]	# *_306, *_306
 2519 0fda C462FBF7 		shrx	r14, rsi, rax	# tmp485, *_306, shift_flipped
 2519      F6
 2520              	.LVL97:
 2521              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2522              		.loc 1 786 80 view .LVU793
 2523 0fdf 4909CE   		or	r14, rcx	# tmp487, tmp483
 2524 0fe2 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# *_316, tmp487
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2525              		.loc 1 785 58 is_stmt 1 view .LVU794
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2526              		.loc 1 785 40 view .LVU795
 2527 0fe6 C5F877   		vzeroupper
 2528              	.L62:
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2529              		.loc 1 785 40 is_stmt 0 view .LVU796
 2530              	.LBE320:
 788:sieve_extend.c ****     }
 2531              		.loc 1 788 9 is_stmt 1 view .LVU797
 788:sieve_extend.c ****     }
 2532              		.loc 1 788 39 view .LVU798
 2533              	.LVL98:
 788:sieve_extend.c ****     }
 2534              		.loc 1 788 39 is_stmt 0 view .LVU799
 2535              	.LBE319:
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2536              		.loc 1 791 12 is_stmt 1 view .LVU800
 2537 0fe9 488B4C24 		mov	rcx, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
GAS LISTING /tmp/ccgH0yRS.s 			page 73


 2537      F8
 2538 0fee 48C1E203 		sal	rdx, 3	# _260,
 2539              	.LVL99:
 2540              	.LBB322:
 2541              	# sieve_extend.c:788:         source_word += loop_distance; copy_word+= loop_distance;
 788:sieve_extend.c ****     }
 2542              		.loc 1 788 21 is_stmt 0 view .LVU801
 2543 0ff2 48C74424 		mov	QWORD PTR -32[rsp], 0	# %sfp,
 2543      E0000000 
 2543      00
 2544 0ffb 4C8D6901 		lea	r13, 1[rcx]	# _198,
 2545 0fff 4C896C24 		mov	QWORD PTR -24[rsp], r13	# %sfp, _198
 2545      E8
 2546              	.LVL100:
 2547              	.L56:
 788:sieve_extend.c ****     }
 2548              		.loc 1 788 21 view .LVU802
 2549 1004 4C8B5C24 		mov	r11, QWORD PTR -8[rsp]	# destination_stop_word, %sfp
 2549      F8
 2550 1009 4801FA   		add	rdx, rdi	# ivtmp.214, bitarray
 2551              	.LBE322:
 2552              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2553              		.loc 1 792 99 view .LVU803
 2554 100c 440FB664 		movzx	r12d, BYTE PTR -12[rsp]	# tmp1038, %sfp
 2554      24F4
 2555 1012 C46299F7 		shlx	r14, QWORD PTR 8[rdx], r12	# tmp560, MEM[base: _465, offset: 8B], tmp1038
 2555      7208
 2556              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2557              		.loc 1 792 54 view .LVU804
 2558 1018 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1039, %sfp
 2558      24F0
 2559              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2560              		.loc 1 791 57 view .LVU805
 2561 101e 4C8D6101 		lea	r12, 1[rcx]	# copy_word,
 2562 1022 4D89D8   		mov	r8, r11	# tmp570, destination_stop_word
 2563              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2564              		.loc 1 792 54 view .LVU806
 2565 1025 C4E2ABF7 		shrx	rsi, QWORD PTR [rdx], r10	# tmp562, MEM[base: _465, offset: 0B], tmp1039
 2565      32
 2566 102a 4929C8   		sub	r8, rcx	# tmp570, copy_word
 2567              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2568              		.loc 1 792 72 view .LVU807
 2569 102d 4909F6   		or	r14, rsi	# tmp564, tmp562
 2570 1030 4C8934CF 		mov	QWORD PTR [rdi+rcx*8], r14	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 2571 1034 4183E007 		and	r8d, 7	# tmp571,
 2572              	.LVL101:
 792:sieve_extend.c ****     }
 2573              		.loc 1 792 9 is_stmt 1 view .LVU808
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2574              		.loc 1 791 48 view .LVU809
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2575              		.loc 1 791 12 view .LVU810
GAS LISTING /tmp/ccgH0yRS.s 			page 74


 2576              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2577              		.loc 1 791 5 is_stmt 0 view .LVU811
 2578 1038 4D39E3   		cmp	r11, r12	# destination_stop_word, copy_word
 2579 103b 4C8D7208 		lea	r14, 8[rdx]	# ivtmp.214,
 2580 103f 0F8266FB 		jb	.L73	#,
 2580      FFFF
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2581              		.loc 1 791 5 view .LVU812
 2582 1045 4D85C0   		test	r8, r8	# tmp571
 2583 1048 0F844001 		je	.L249	#,
 2583      0000
 2584 104e 4983F801 		cmp	r8, 1	# tmp571,
 2585 1052 0F840601 		je	.L198	#,
 2585      0000
 2586 1058 4983F802 		cmp	r8, 2	# tmp571,
 2587 105c 0F84D800 		je	.L199	#,
 2587      0000
 2588 1062 4983F803 		cmp	r8, 3	# tmp571,
 2589 1066 0F84A900 		je	.L200	#,
 2589      0000
 2590 106c 4983F804 		cmp	r8, 4	# tmp571,
 2591 1070 747D     		je	.L201	#,
 2592 1072 4983F805 		cmp	r8, 5	# tmp571,
 2593 1076 7452     		je	.L202	#,
 2594 1078 4983F806 		cmp	r8, 6	# tmp571,
 2595 107c 7428     		je	.L203	#,
 792:sieve_extend.c ****     }
 2596              		.loc 1 792 9 is_stmt 1 view .LVU813
 2597              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2598              		.loc 1 792 54 is_stmt 0 view .LVU814
 2599 107e 498B06   		mov	rax, QWORD PTR [r14]	# MEM[base: _465, offset: 0B], MEM[base: _465, offset: 0B]
 2600              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2601              		.loc 1 792 99 view .LVU815
 2602 1081 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1042, %sfp
 2602      24F4
 2603 1087 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp777, MEM[base: _465, offset: 8B], tmp1042
 2603      5E08
 2604              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2605              		.loc 1 792 54 view .LVU816
 2606 108d 0FB65C24 		movzx	ebx, BYTE PTR -16[rsp]	# tmp1043, %sfp
 2606      F0
 2607 1092 C462E3F7 		shrx	r8, rax, rbx	# tmp779, MEM[base: _465, offset: 0B], tmp1043
 2607      C0
 2608              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2609              		.loc 1 792 72 view .LVU817
 2610 1097 4D09D8   		or	r8, r11	# tmp780, tmp777
 2611 109a 4C8D7210 		lea	r14, 16[rdx]	# ivtmp.214,
 2612 109e 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2613              		.loc 1 791 48 is_stmt 1 view .LVU818
 2614              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
GAS LISTING /tmp/ccgH0yRS.s 			page 75


 2615              		.loc 1 791 57 is_stmt 0 view .LVU819
 2616 10a2 4C8D6102 		lea	r12, 2[rcx]	# copy_word,
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2617              		.loc 1 791 12 is_stmt 1 view .LVU820
 2618              	.L203:
 792:sieve_extend.c ****     }
 2619              		.loc 1 792 9 view .LVU821
 2620              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2621              		.loc 1 792 99 is_stmt 0 view .LVU822
 2622 10a6 0FB65424 		movzx	edx, BYTE PTR -12[rsp]	# tmp1044, %sfp
 2622      F4
 2623 10ab C442E9F7 		shlx	r10, QWORD PTR 8[r14], rdx	# tmp782, MEM[base: _465, offset: 8B], tmp1044
 2623      5608
 2624              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2625              		.loc 1 792 54 view .LVU823
 2626 10b1 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1045, %sfp
 2626      F0
 2627              	.LVL102:
 792:sieve_extend.c ****     }
 2628              		.loc 1 792 54 view .LVU824
 2629 10b6 C4C2F3F7 		shrx	rsi, QWORD PTR [r14], rcx	# tmp784, MEM[base: _465, offset: 0B], tmp1045
 2629      36
 2630              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2631              		.loc 1 792 72 view .LVU825
 2632 10bb 4909F2   		or	r10, rsi	# tmp785, tmp784
 2633 10be 4983C608 		add	r14, 8	# ivtmp.214,
 2634 10c2 4E8914E7 		mov	QWORD PTR [rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2635              		.loc 1 791 48 is_stmt 1 view .LVU826
 2636              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2637              		.loc 1 791 57 is_stmt 0 view .LVU827
 2638 10c6 4983C401 		add	r12, 1	# copy_word,
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2639              		.loc 1 791 12 is_stmt 1 view .LVU828
 2640              	.L202:
 792:sieve_extend.c ****     }
 2641              		.loc 1 792 9 view .LVU829
 2642              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2643              		.loc 1 792 99 is_stmt 0 view .LVU830
 2644 10ca 440FB64C 		movzx	r9d, BYTE PTR -12[rsp]	# tmp1046, %sfp
 2644      24F4
 2645 10d0 C442B1F7 		shlx	r11, QWORD PTR 8[r14], r9	# tmp787, MEM[base: _465, offset: 8B], tmp1046
 2645      5E08
 2646              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2647              		.loc 1 792 54 view .LVU831
 2648 10d6 0FB64424 		movzx	eax, BYTE PTR -16[rsp]	# tmp1047, %sfp
 2648      F0
 2649 10db C4C2FBF7 		shrx	rbx, QWORD PTR [r14], rax	# tmp789, MEM[base: _465, offset: 0B], tmp1047
 2649      1E
 2650              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
GAS LISTING /tmp/ccgH0yRS.s 			page 76


 2651              		.loc 1 792 72 view .LVU832
 2652 10e0 4909DB   		or	r11, rbx	# tmp790, tmp789
 2653 10e3 4983C608 		add	r14, 8	# ivtmp.214,
 2654 10e7 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2655              		.loc 1 791 48 is_stmt 1 view .LVU833
 2656              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2657              		.loc 1 791 57 is_stmt 0 view .LVU834
 2658 10eb 4983C401 		add	r12, 1	# copy_word,
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2659              		.loc 1 791 12 is_stmt 1 view .LVU835
 2660              	.L201:
 792:sieve_extend.c ****     }
 2661              		.loc 1 792 9 view .LVU836
 2662              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2663              		.loc 1 792 99 is_stmt 0 view .LVU837
 2664 10ef 440FB644 		movzx	r8d, BYTE PTR -12[rsp]	# tmp1048, %sfp
 2664      24F4
 2665 10f5 C4C2B9F7 		shlx	rdx, QWORD PTR 8[r14], r8	# tmp792, MEM[base: _465, offset: 8B], tmp1048
 2665      5608
 2666              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2667              		.loc 1 792 54 view .LVU838
 2668 10fb 440FB654 		movzx	r10d, BYTE PTR -16[rsp]	# tmp1049, %sfp
 2668      24F0
 2669 1101 C4C2ABF7 		shrx	rcx, QWORD PTR [r14], r10	# tmp794, MEM[base: _465, offset: 0B], tmp1049
 2669      0E
 2670              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2671              		.loc 1 792 72 view .LVU839
 2672 1106 4809CA   		or	rdx, rcx	# tmp795, tmp794
 2673 1109 4983C608 		add	r14, 8	# ivtmp.214,
 2674 110d 4A8914E7 		mov	QWORD PTR [rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2675              		.loc 1 791 48 is_stmt 1 view .LVU840
 2676              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2677              		.loc 1 791 57 is_stmt 0 view .LVU841
 2678 1111 4983C401 		add	r12, 1	# copy_word,
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2679              		.loc 1 791 12 is_stmt 1 view .LVU842
 2680              	.L200:
 792:sieve_extend.c ****     }
 2681              		.loc 1 792 9 view .LVU843
 2682              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2683              		.loc 1 792 99 is_stmt 0 view .LVU844
 2684 1115 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1050, %sfp
 2684      F4
 2685 111a C442C9F7 		shlx	r9, QWORD PTR 8[r14], rsi	# tmp797, MEM[base: _465, offset: 8B], tmp1050
 2685      4E08
 2686              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2687              		.loc 1 792 54 view .LVU845
 2688 1120 440FB65C 		movzx	r11d, BYTE PTR -16[rsp]	# tmp1051, %sfp
GAS LISTING /tmp/ccgH0yRS.s 			page 77


 2688      24F0
 2689 1126 C4C2A3F7 		shrx	rax, QWORD PTR [r14], r11	# tmp799, MEM[base: _465, offset: 0B], tmp1051
 2689      06
 2690              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2691              		.loc 1 792 72 view .LVU846
 2692 112b 4909C1   		or	r9, rax	# tmp800, tmp799
 2693 112e 4983C608 		add	r14, 8	# ivtmp.214,
 2694 1132 4E890CE7 		mov	QWORD PTR [rdi+r12*8], r9	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2695              		.loc 1 791 48 is_stmt 1 view .LVU847
 2696              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2697              		.loc 1 791 57 is_stmt 0 view .LVU848
 2698 1136 4983C401 		add	r12, 1	# copy_word,
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2699              		.loc 1 791 12 is_stmt 1 view .LVU849
 2700              	.L199:
 792:sieve_extend.c ****     }
 2701              		.loc 1 792 9 view .LVU850
 2702              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2703              		.loc 1 792 99 is_stmt 0 view .LVU851
 2704 113a 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1052, %sfp
 2704      F4
 2705 113f C442E1F7 		shlx	r8, QWORD PTR 8[r14], rbx	# tmp802, MEM[base: _465, offset: 8B], tmp1052
 2705      4608
 2706              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2707              		.loc 1 792 54 view .LVU852
 2708 1145 0FB65424 		movzx	edx, BYTE PTR -16[rsp]	# tmp1053, %sfp
 2708      F0
 2709 114a C442EBF7 		shrx	r10, QWORD PTR [r14], rdx	# tmp804, MEM[base: _465, offset: 0B], tmp1053
 2709      16
 2710              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2711              		.loc 1 792 72 view .LVU853
 2712 114f 4D09D0   		or	r8, r10	# tmp805, tmp804
 2713 1152 4983C608 		add	r14, 8	# ivtmp.214,
 2714 1156 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2715              		.loc 1 791 48 is_stmt 1 view .LVU854
 2716              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2717              		.loc 1 791 57 is_stmt 0 view .LVU855
 2718 115a 4983C401 		add	r12, 1	# copy_word,
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2719              		.loc 1 791 12 is_stmt 1 view .LVU856
 2720              	.L198:
 792:sieve_extend.c ****     }
 2721              		.loc 1 792 9 view .LVU857
 2722              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2723              		.loc 1 792 99 is_stmt 0 view .LVU858
 2724 115e 0FB64C24 		movzx	ecx, BYTE PTR -12[rsp]	# tmp1054, %sfp
 2724      F4
 2725 1163 C4C2F1F7 		shlx	rsi, QWORD PTR 8[r14], rcx	# tmp807, MEM[base: _465, offset: 8B], tmp1054
GAS LISTING /tmp/ccgH0yRS.s 			page 78


 2725      7608
 2726              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2727              		.loc 1 792 54 view .LVU859
 2728 1169 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1055, %sfp
 2728      24F0
 2729 116f C442B3F7 		shrx	r11, QWORD PTR [r14], r9	# tmp809, MEM[base: _465, offset: 0B], tmp1055
 2729      1E
 2730              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2731              		.loc 1 792 72 view .LVU860
 2732 1174 4C09DE   		or	rsi, r11	# tmp810, tmp809
 2733 1177 4983C608 		add	r14, 8	# ivtmp.214,
 2734 117b 4A8934E7 		mov	QWORD PTR [rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2735              		.loc 1 791 48 is_stmt 1 view .LVU861
 2736              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2737              		.loc 1 791 57 is_stmt 0 view .LVU862
 2738 117f 4983C401 		add	r12, 1	# copy_word,
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2739              		.loc 1 791 12 is_stmt 1 view .LVU863
 2740              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2741              		.loc 1 791 5 is_stmt 0 view .LVU864
 2742 1183 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2742      F8
 2743 1188 0F821DFA 		jb	.L73	#,
 2743      FFFF
 2744              	.L249:
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2745              		.loc 1 791 5 view .LVU865
 2746 118e 8B4424F4 		mov	eax, DWORD PTR -12[rsp]	# _182, %sfp
 2747 1192 8B5C24F0 		mov	ebx, DWORD PTR -16[rsp]	# _184, %sfp
 2748              	.L72:
 792:sieve_extend.c ****     }
 2749              		.loc 1 792 9 is_stmt 1 view .LVU866
 2750              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2751              		.loc 1 792 54 is_stmt 0 view .LVU867
 2752 1196 C4C2E3F7 		shrx	rdx, QWORD PTR [r14], rbx	# tmp725, MEM[base: _465, offset: 0B], _184
 2752      16
 2753              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2754              		.loc 1 792 99 view .LVU868
 2755 119b C442F9F7 		shlx	r8, QWORD PTR 8[r14], rax	# tmp723, MEM[base: _465, offset: 8B], _182
 2755      4608
 2756              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2757              		.loc 1 792 72 view .LVU869
 2758 11a1 4909D0   		or	r8, rdx	# tmp726, tmp725
 2759 11a4 4983C640 		add	r14, 64	# ivtmp.214,
 2760 11a8 4E8904E7 		mov	QWORD PTR [rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset: 0
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2761              		.loc 1 791 48 is_stmt 1 view .LVU870
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2762              		.loc 1 791 12 view .LVU871
GAS LISTING /tmp/ccgH0yRS.s 			page 79


 792:sieve_extend.c ****     }
 2763              		.loc 1 792 9 view .LVU872
 2764              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2765              		.loc 1 792 54 is_stmt 0 view .LVU873
 2766 11ac C4C2E3F7 		shrx	rcx, QWORD PTR -56[r14], rbx	# tmp732, MEM[base: _465, offset: 0B], _184
 2766      4EC8
 2767              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2768              		.loc 1 792 99 view .LVU874
 2769 11b2 C442F9F7 		shlx	r10, QWORD PTR -48[r14], rax	# tmp730, MEM[base: _465, offset: 8B], _182
 2769      56D0
 2770              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2771              		.loc 1 792 72 view .LVU875
 2772 11b8 4909CA   		or	r10, rcx	# tmp733, tmp732
 2773 11bb 4E8954E7 		mov	QWORD PTR 8[rdi+r12*8], r10	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2773      08
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2774              		.loc 1 791 48 is_stmt 1 view .LVU876
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2775              		.loc 1 791 12 view .LVU877
 792:sieve_extend.c ****     }
 2776              		.loc 1 792 9 view .LVU878
 2777              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2778              		.loc 1 792 54 is_stmt 0 view .LVU879
 2779 11c0 C442E3F7 		shrx	r9, QWORD PTR -48[r14], rbx	# tmp739, MEM[base: _465, offset: 0B], _184
 2779      4ED0
 2780              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2781              		.loc 1 792 99 view .LVU880
 2782 11c6 C4C2F9F7 		shlx	rsi, QWORD PTR -40[r14], rax	# tmp737, MEM[base: _465, offset: 8B], _182
 2782      76D8
 2783              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2784              		.loc 1 792 72 view .LVU881
 2785 11cc 4C09CE   		or	rsi, r9	# tmp740, tmp739
 2786 11cf 4A8974E7 		mov	QWORD PTR 16[rdi+r12*8], rsi	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2786      10
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2787              		.loc 1 791 48 is_stmt 1 view .LVU882
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2788              		.loc 1 791 12 view .LVU883
 792:sieve_extend.c ****     }
 2789              		.loc 1 792 9 view .LVU884
 2790              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2791              		.loc 1 792 54 is_stmt 0 view .LVU885
 2792 11d4 C442E3F7 		shrx	r8, QWORD PTR -40[r14], rbx	# tmp746, MEM[base: _465, offset: 0B], _184
 2792      46D8
 2793              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2794              		.loc 1 792 99 view .LVU886
 2795 11da C442F9F7 		shlx	r11, QWORD PTR -32[r14], rax	# tmp744, MEM[base: _465, offset: 8B], _182
 2795      5EE0
 2796              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
GAS LISTING /tmp/ccgH0yRS.s 			page 80


 792:sieve_extend.c ****     }
 2797              		.loc 1 792 72 view .LVU887
 2798 11e0 4D09C3   		or	r11, r8	# tmp747, tmp746
 2799 11e3 4E895CE7 		mov	QWORD PTR 24[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2799      18
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2800              		.loc 1 791 48 is_stmt 1 view .LVU888
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2801              		.loc 1 791 12 view .LVU889
 792:sieve_extend.c ****     }
 2802              		.loc 1 792 9 view .LVU890
 2803              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2804              		.loc 1 792 99 is_stmt 0 view .LVU891
 2805 11e8 C4C2F9F7 		shlx	rdx, QWORD PTR -24[r14], rax	# tmp751, MEM[base: _465, offset: 8B], _182
 2805      56E8
 2806              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2807              		.loc 1 792 54 view .LVU892
 2808 11ee C442E3F7 		shrx	r10, QWORD PTR -32[r14], rbx	# tmp753, MEM[base: _465, offset: 0B], _184
 2808      56E0
 2809              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2810              		.loc 1 792 72 view .LVU893
 2811 11f4 4C09D2   		or	rdx, r10	# tmp754, tmp753
 2812 11f7 4A8954E7 		mov	QWORD PTR 32[rdi+r12*8], rdx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2812      20
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2813              		.loc 1 791 48 is_stmt 1 view .LVU894
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2814              		.loc 1 791 12 view .LVU895
 792:sieve_extend.c ****     }
 2815              		.loc 1 792 9 view .LVU896
 2816              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2817              		.loc 1 792 99 is_stmt 0 view .LVU897
 2818 11fc C4C2F9F7 		shlx	rcx, QWORD PTR -16[r14], rax	# tmp758, MEM[base: _465, offset: 8B], _182
 2818      4EF0
 2819              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2820              		.loc 1 792 54 view .LVU898
 2821 1202 C4C2E3F7 		shrx	rsi, QWORD PTR -24[r14], rbx	# tmp760, MEM[base: _465, offset: 0B], _184
 2821      76E8
 2822              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2823              		.loc 1 792 72 view .LVU899
 2824 1208 4809F1   		or	rcx, rsi	# tmp761, tmp760
 2825 120b 4A894CE7 		mov	QWORD PTR 40[rdi+r12*8], rcx	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2825      28
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2826              		.loc 1 791 48 is_stmt 1 view .LVU900
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2827              		.loc 1 791 12 view .LVU901
 792:sieve_extend.c ****     }
 2828              		.loc 1 792 9 view .LVU902
 2829              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
GAS LISTING /tmp/ccgH0yRS.s 			page 81


 2830              		.loc 1 792 99 is_stmt 0 view .LVU903
 2831 1210 C442F9F7 		shlx	r11, QWORD PTR -8[r14], rax	# tmp765, MEM[base: _465, offset: 8B], _182
 2831      5EF8
 2832              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2833              		.loc 1 792 54 view .LVU904
 2834 1216 C442E3F7 		shrx	r9, QWORD PTR -16[r14], rbx	# tmp767, MEM[base: _465, offset: 0B], _184
 2834      4EF0
 2835              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2836              		.loc 1 792 72 view .LVU905
 2837 121c 4D09CB   		or	r11, r9	# tmp768, tmp767
 2838 121f 4E895CE7 		mov	QWORD PTR 48[rdi+r12*8], r11	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset
 2838      30
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2839              		.loc 1 791 48 is_stmt 1 view .LVU906
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2840              		.loc 1 791 12 view .LVU907
 792:sieve_extend.c ****     }
 2841              		.loc 1 792 9 view .LVU908
 2842              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2843              		.loc 1 792 99 is_stmt 0 view .LVU909
 2844 1224 C442F9F7 		shlx	r8, QWORD PTR [r14], rax	# tmp772, MEM[base: _465, offset: 8B], _182
 2844      06
 2845              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2846              		.loc 1 792 54 view .LVU910
 2847 1229 C4C2E3F7 		shrx	rdx, QWORD PTR -8[r14], rbx	# tmp774, MEM[base: _465, offset: 0B], _184
 2847      56F8
 2848              	# sieve_extend.c:792:         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bit
 792:sieve_extend.c ****     }
 2849              		.loc 1 792 72 view .LVU911
 2850 122f 4909D0   		or	r8, rdx	# tmp775, tmp774
 2851 1232 4E8944E7 		mov	QWORD PTR 56[rdi+r12*8], r8	# MEM[base: bitarray_90(D), index: copy_word_155, step: 8, offset:
 2851      38
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2852              		.loc 1 791 48 is_stmt 1 view .LVU912
 2853              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2854              		.loc 1 791 57 is_stmt 0 view .LVU913
 2855 1237 4983C408 		add	r12, 8	# copy_word,
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2856              		.loc 1 791 12 is_stmt 1 view .LVU914
 2857              	# sieve_extend.c:791:     for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 791:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 2858              		.loc 1 791 5 is_stmt 0 view .LVU915
 2859 123b 4C396424 		cmp	QWORD PTR -8[rsp], r12	# %sfp, copy_word
 2859      F8
 2860 1240 0F8350FF 		jnb	.L72	#,
 2860      FFFF
 2861 1246 E960F9FF 		jmp	.L73	#
 2861      FF
 2862              	.LVL103:
 2863 124b 0F1F4400 		.p2align 4,,7
 2863      00
 2864              		.p2align 3
GAS LISTING /tmp/ccgH0yRS.s 			page 82


 2865              	.L260:
 766:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2866              		.loc 1 766 9 is_stmt 1 view .LVU916
 2867              	# sieve_extend.c:766:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 766:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2868              		.loc 1 766 29 is_stmt 0 view .LVU917
 2869 1250 488B7C24 		mov	rdi, QWORD PTR -24[rsp]	# pretmp_178, %sfp
 2869      E8
 2870              	.LVL104:
 2871              	# sieve_extend.c:768:                                 & keepmask(copy_start) & chopmask(destination
 768:sieve_extend.c ****         return; // rapid exit for one word variant
 2872              		.loc 1 768 56 view .LVU918
 2873 1255 4D21FA   		and	r10, r15	# _189, _193
 2874 1258 4D21D1   		and	r9, r10	# tmp405, tmp404
 2875              	# sieve_extend.c:766:         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the s
 766:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 2876              		.loc 1 766 29 view .LVU919
 2877 125b 4C09CF   		or	rdi, r9	# pretmp_178, tmp405
 2878 125e 49897D00 		mov	QWORD PTR 0[r13], rdi	# *_177, tmp406
 769:sieve_extend.c ****     }
 2879              		.loc 1 769 9 is_stmt 1 view .LVU920
 2880              	# sieve_extend.c:796: }
 2881              		.loc 1 796 1 is_stmt 0 view .LVU921
 2882 1262 488D65D8 		lea	rsp, -40[rbp]	#,
 2883 1266 5B       		pop	rbx	#
 2884 1267 415C     		pop	r12	#
 2885 1269 415D     		pop	r13	#
 2886 126b 415E     		pop	r14	#
 2887              	.LVL105:
 2888              		.loc 1 796 1 view .LVU922
 2889 126d 415F     		pop	r15	#
 2890 126f 5D       		pop	rbp	#
 2891              		.cfi_remember_state
 2892              		.cfi_def_cfa 7, 8
 2893 1270 C3       		ret	
 2894              	.LVL106:
 2895              		.p2align 4,,7
 2896 1271 0F1F8000 		.p2align 3
 2896      000000
 2897              	.L255:
 2898              		.cfi_restore_state
 2899              		.loc 1 796 1 view .LVU923
 2900 1278 C5F877   		vzeroupper
 2901 127b E969FDFF 		jmp	.L62	#
 2901      FF
 2902              	.LVL107:
 2903              		.p2align 4,,7
 2904              		.p2align 3
 2905              	.L257:
 2906              		.loc 1 796 1 view .LVU924
 2907 1280 C5F877   		vzeroupper
 2908 1283 E923F9FF 		jmp	.L73	#
 2908      FF
 2909              	.LVL108:
 2910              		.p2align 4,,7
 2911              		.p2align 3
 2912              	.L77:
GAS LISTING /tmp/ccgH0yRS.s 			page 83


 2913              	# sieve_extend.c:762:     register counter_t source_word = wordindex(source_start);
 762:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2914              		.loc 1 762 24 view .LVU925
 2915 1288 48897424 		mov	QWORD PTR -40[rsp], rsi	# %sfp, source_word
 2915      D8
 2916              	# sieve_extend.c:776:     copy_word++;
 776:sieve_extend.c **** 
 2917              		.loc 1 776 14 view .LVU926
 2918 128d 4989CC   		mov	r12, rcx	# copy_word, copy_word
 2919 1290 4C8D5601 		lea	r10, 1[rsi]	# tmp566,
 2920 1294 E9FBF5FF 		jmp	.L67	#
 2920      FF
 2921              	.LVL109:
 2922              	.L57:
 776:sieve_extend.c **** 
 2923              		.loc 1 776 14 view .LVU927
 2924 1299 488B5424 		mov	rdx, QWORD PTR -24[rsp]	# loop_distance, %sfp
 2924      E8
 2925              	.LBB323:
 2926              	.LBB321:
 2927              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2928              		.loc 1 786 35 view .LVU928
 2929 129e 4929F0   		sub	r8, rsi	# tmp490, source_word
 2930 12a1 4801F2   		add	rdx, rsi	# loop_distance, source_word
 2931 12a4 4C8D24D7 		lea	r12, [rdi+rdx*8]	# _481,
 2932 12a8 4C89E0   		mov	rax, r12	# tmp575, _481
 2933 12ab 4C29D8   		sub	rax, r11	# tmp575, ivtmp.232
 2934 12ae 4883E808 		sub	rax, 8	# tmp576,
 2935 12b2 48C1E803 		shr	rax, 3	# tmp574,
 2936 12b6 4883C001 		add	rax, 1	# tmp577,
 2937 12ba 83E007   		and	eax, 7	# tmp578,
 2938 12bd 0F842401 		je	.L250	#,
 2938      0000
 2939 12c3 4883F801 		cmp	rax, 1	# tmp578,
 2940 12c7 0F84EF00 		je	.L185	#,
 2940      0000
 2941 12cd 4883F802 		cmp	rax, 2	# tmp578,
 2942 12d1 0F84C400 		je	.L186	#,
 2942      0000
 2943 12d7 4883F803 		cmp	rax, 3	# tmp578,
 2944 12db 0F849800 		je	.L187	#,
 2944      0000
 2945 12e1 4883F804 		cmp	rax, 4	# tmp578,
 2946 12e5 7471     		je	.L188	#,
 2947 12e7 4883F805 		cmp	rax, 5	# tmp578,
 2948 12eb 7449     		je	.L189	#,
 2949 12ed 4883F806 		cmp	rax, 6	# tmp578,
 2950 12f1 7422     		je	.L190	#,
 2951              	.LVL110:
 786:sieve_extend.c ****         }
 2952              		.loc 1 786 13 is_stmt 1 view .LVU929
 2953              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2954              		.loc 1 786 62 is_stmt 0 view .LVU930
 2955 12f3 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1057, %sfp
 2955      24F0
GAS LISTING /tmp/ccgH0yRS.s 			page 84


 2956 12f9 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp812, MEM[base: _475, offset: 0B], tmp1057
 2956      2B
 2957              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2958              		.loc 1 786 109 view .LVU931
 2959 12fe 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1058, %sfp
 2959      F4
 2960 1303 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp814, MEM[base: _475, offset: 8B], tmp1058
 2960      5308
 2961              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2962              		.loc 1 786 80 view .LVU932
 2963 1309 4D09D5   		or	r13, r10	# tmp815, tmp814
 2964 130c 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp815
 2964      08
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2965              		.loc 1 785 58 is_stmt 1 view .LVU933
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2966              		.loc 1 785 40 view .LVU934
 2967 1311 4983C308 		add	r11, 8	# ivtmp.232,
 2968              	.L190:
 786:sieve_extend.c ****         }
 2969              		.loc 1 786 13 view .LVU935
 2970              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2971              		.loc 1 786 62 is_stmt 0 view .LVU936
 2972 1315 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1059, %sfp
 2972      F0
 2973              	.LVL111:
 786:sieve_extend.c ****         }
 2974              		.loc 1 786 62 view .LVU937
 2975 131a C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp817, MEM[base: _475, offset: 0B], tmp1059
 2975      33
 2976              	.LVL112:
 2977              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2978              		.loc 1 786 109 view .LVU938
 2979 131f 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1060, %sfp
 2979      F4
 2980 1324 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp819, MEM[base: _475, offset: 8B], tmp1060
 2980      4308
 2981              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2982              		.loc 1 786 80 view .LVU939
 2983 132a 4909C6   		or	r14, rax	# tmp820, tmp819
 2984 132d 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp820
 2984      08
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2985              		.loc 1 785 58 is_stmt 1 view .LVU940
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 2986              		.loc 1 785 40 view .LVU941
 2987 1332 4983C308 		add	r11, 8	# ivtmp.232,
 2988              	.L189:
 786:sieve_extend.c ****         }
 2989              		.loc 1 786 13 view .LVU942
 2990              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
GAS LISTING /tmp/ccgH0yRS.s 			page 85


 2991              		.loc 1 786 62 is_stmt 0 view .LVU943
 2992 1336 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1061, %sfp
 2992      24F0
 2993 133c C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp822, MEM[base: _475, offset: 0B], tmp1061
 2993      2B
 2994              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2995              		.loc 1 786 109 view .LVU944
 2996 1341 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1062, %sfp
 2996      F4
 2997 1346 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp824, MEM[base: _475, offset: 8B], tmp1062
 2997      5308
 2998              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 2999              		.loc 1 786 80 view .LVU945
 3000 134c 4D09D5   		or	r13, r10	# tmp825, tmp824
 3001 134f 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp825
 3001      08
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3002              		.loc 1 785 58 is_stmt 1 view .LVU946
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3003              		.loc 1 785 40 view .LVU947
 3004 1354 4983C308 		add	r11, 8	# ivtmp.232,
 3005              	.L188:
 786:sieve_extend.c ****         }
 3006              		.loc 1 786 13 view .LVU948
 3007              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3008              		.loc 1 786 62 is_stmt 0 view .LVU949
 3009 1358 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1063, %sfp
 3009      F0
 3010 135d C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp827, MEM[base: _475, offset: 0B], tmp1063
 3010      33
 3011              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3012              		.loc 1 786 109 view .LVU950
 3013 1362 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1064, %sfp
 3013      F4
 3014 1367 C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp829, MEM[base: _475, offset: 8B], tmp1064
 3014      4308
 3015              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3016              		.loc 1 786 80 view .LVU951
 3017 136d 4909C6   		or	r14, rax	# tmp830, tmp829
 3018 1370 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp830
 3018      08
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3019              		.loc 1 785 58 is_stmt 1 view .LVU952
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3020              		.loc 1 785 40 view .LVU953
 3021 1375 4983C308 		add	r11, 8	# ivtmp.232,
 3022              	.L187:
 786:sieve_extend.c ****         }
 3023              		.loc 1 786 13 view .LVU954
 3024              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3025              		.loc 1 786 62 is_stmt 0 view .LVU955
GAS LISTING /tmp/ccgH0yRS.s 			page 86


 3026 1379 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1065, %sfp
 3026      24F0
 3027 137f C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp832, MEM[base: _475, offset: 0B], tmp1065
 3027      2B
 3028              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3029              		.loc 1 786 109 view .LVU956
 3030 1384 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1066, %sfp
 3030      F4
 3031 1389 C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp834, MEM[base: _475, offset: 8B], tmp1066
 3031      5308
 3032              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3033              		.loc 1 786 80 view .LVU957
 3034 138f 4D09D5   		or	r13, r10	# tmp835, tmp834
 3035 1392 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp835
 3035      08
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3036              		.loc 1 785 58 is_stmt 1 view .LVU958
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3037              		.loc 1 785 40 view .LVU959
 3038 1397 4983C308 		add	r11, 8	# ivtmp.232,
 3039              	.L186:
 786:sieve_extend.c ****         }
 3040              		.loc 1 786 13 view .LVU960
 3041              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3042              		.loc 1 786 62 is_stmt 0 view .LVU961
 3043 139b 0FB64C24 		movzx	ecx, BYTE PTR -16[rsp]	# tmp1067, %sfp
 3043      F0
 3044 13a0 C442F3F7 		shrx	r14, QWORD PTR [r11], rcx	# tmp837, MEM[base: _475, offset: 0B], tmp1067
 3044      33
 3045              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3046              		.loc 1 786 109 view .LVU962
 3047 13a5 0FB67424 		movzx	esi, BYTE PTR -12[rsp]	# tmp1068, %sfp
 3047      F4
 3048 13aa C4C2C9F7 		shlx	rax, QWORD PTR 8[r11], rsi	# tmp839, MEM[base: _475, offset: 8B], tmp1068
 3048      4308
 3049              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3050              		.loc 1 786 80 view .LVU963
 3051 13b0 4909C6   		or	r14, rax	# tmp840, tmp839
 3052 13b3 4F8974C3 		mov	QWORD PTR 8[r11+r8*8], r14	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp840
 3052      08
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3053              		.loc 1 785 58 is_stmt 1 view .LVU964
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3054              		.loc 1 785 40 view .LVU965
 3055 13b8 4983C308 		add	r11, 8	# ivtmp.232,
 3056              	.L185:
 786:sieve_extend.c ****         }
 3057              		.loc 1 786 13 view .LVU966
 3058              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3059              		.loc 1 786 62 is_stmt 0 view .LVU967
 3060 13bc 440FB64C 		movzx	r9d, BYTE PTR -16[rsp]	# tmp1069, %sfp
GAS LISTING /tmp/ccgH0yRS.s 			page 87


 3060      24F0
 3061 13c2 C442B3F7 		shrx	r13, QWORD PTR [r11], r9	# tmp842, MEM[base: _475, offset: 0B], tmp1069
 3061      2B
 3062              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3063              		.loc 1 786 109 view .LVU968
 3064 13c7 0FB65C24 		movzx	ebx, BYTE PTR -12[rsp]	# tmp1070, %sfp
 3064      F4
 3065 13cc C442E1F7 		shlx	r10, QWORD PTR 8[r11], rbx	# tmp844, MEM[base: _475, offset: 8B], tmp1070
 3065      5308
 3066              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3067              		.loc 1 786 80 view .LVU969
 3068 13d2 4D09D5   		or	r13, r10	# tmp845, tmp844
 3069 13d5 4F896CC3 		mov	QWORD PTR 8[r11+r8*8], r13	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp845
 3069      08
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3070              		.loc 1 785 58 is_stmt 1 view .LVU970
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3071              		.loc 1 785 40 view .LVU971
 3072 13da 4983C308 		add	r11, 8	# ivtmp.232,
 3073              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3074              		.loc 1 785 9 is_stmt 0 view .LVU972
 3075 13de 4D39E3   		cmp	r11, r12	# ivtmp.232, _481
 3076 13e1 0F8402FC 		je	.L62	#,
 3076      FFFF
 3077              	.L250:
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3078              		.loc 1 785 9 view .LVU973
 3079 13e7 8B4C24F4 		mov	ecx, DWORD PTR -12[rsp]	# _182, %sfp
 3080 13eb 448B7424 		mov	r14d, DWORD PTR -16[rsp]	# _184, %sfp
 3080      F0
 3081              	.L64:
 786:sieve_extend.c ****         }
 3082              		.loc 1 786 13 is_stmt 1 view .LVU974
 3083              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3084              		.loc 1 786 109 is_stmt 0 view .LVU975
 3085 13f0 C4C2F1F7 		shlx	rax, QWORD PTR 8[r11], rcx	# tmp493, MEM[base: _475, offset: 8B], _182
 3085      4308
 3086              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3087              		.loc 1 786 62 view .LVU976
 3088 13f6 C4C28BF7 		shrx	rsi, QWORD PTR [r11], r14	# tmp491, MEM[base: _475, offset: 0B], _184
 3088      33
 3089              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3090              		.loc 1 786 80 view .LVU977
 3091 13fb 4809C6   		or	rsi, rax	# tmp495, tmp493
 3092 13fe 4D8D6B08 		lea	r13, 8[r11]	# tmp579,
 3093 1402 4B8974C3 		mov	QWORD PTR 8[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp495
 3093      08
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3094              		.loc 1 785 58 is_stmt 1 view .LVU978
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3095              		.loc 1 785 40 view .LVU979
GAS LISTING /tmp/ccgH0yRS.s 			page 88


 786:sieve_extend.c ****         }
 3096              		.loc 1 786 13 view .LVU980
 3097              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3098              		.loc 1 786 62 is_stmt 0 view .LVU981
 3099 1407 C4428BF7 		shrx	r9, QWORD PTR 8[r11], r14	# tmp636, MEM[base: _475, offset: 0B], _184
 3099      4B08
 3100              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3101              		.loc 1 786 109 view .LVU982
 3102 140d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp638, MEM[base: _475, offset: 8B], _182
 3102      5D08
 3103              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3104              		.loc 1 786 80 view .LVU983
 3105 1413 4909D9   		or	r9, rbx	# tmp639, tmp638
 3106 1416 4D8D5310 		lea	r10, 16[r11]	# ivtmp.232,
 3107 141a 4D8D6B18 		lea	r13, 24[r11]	# ivtmp.232,
 3108 141e 4F894CC3 		mov	QWORD PTR 16[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp639
 3108      10
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3109              		.loc 1 785 58 is_stmt 1 view .LVU984
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3110              		.loc 1 785 40 view .LVU985
 786:sieve_extend.c ****         }
 3111              		.loc 1 786 13 view .LVU986
 3112              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3113              		.loc 1 786 62 is_stmt 0 view .LVU987
 3114 1423 C4C28BF7 		shrx	rsi, QWORD PTR 16[r11], r14	# tmp642, MEM[base: _475, offset: 0B], _184
 3114      7310
 3115              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3116              		.loc 1 786 109 view .LVU988
 3117 1429 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp644, MEM[base: _475, offset: 8B], _182
 3117      4208
 3118              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3119              		.loc 1 786 80 view .LVU989
 3120 142f 4809C6   		or	rsi, rax	# tmp645, tmp644
 3121 1432 4B8974C3 		mov	QWORD PTR 24[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp645
 3121      18
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3122              		.loc 1 785 58 is_stmt 1 view .LVU990
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3123              		.loc 1 785 40 view .LVU991
 786:sieve_extend.c ****         }
 3124              		.loc 1 786 13 view .LVU992
 3125              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3126              		.loc 1 786 62 is_stmt 0 view .LVU993
 3127 1437 C4428BF7 		shrx	r9, QWORD PTR 24[r11], r14	# tmp648, MEM[base: _475, offset: 0B], _184
 3127      4B18
 3128              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3129              		.loc 1 786 109 view .LVU994
 3130 143d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp650, MEM[base: _475, offset: 8B], _182
GAS LISTING /tmp/ccgH0yRS.s 			page 89


 3130      5D08
 3131              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3132              		.loc 1 786 80 view .LVU995
 3133 1443 4909D9   		or	r9, rbx	# tmp651, tmp650
 3134 1446 4D8D5320 		lea	r10, 32[r11]	# ivtmp.232,
 3135 144a 4D8D6B28 		lea	r13, 40[r11]	# ivtmp.232,
 3136 144e 4F894CC3 		mov	QWORD PTR 32[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp651
 3136      20
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3137              		.loc 1 785 58 is_stmt 1 view .LVU996
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3138              		.loc 1 785 40 view .LVU997
 786:sieve_extend.c ****         }
 3139              		.loc 1 786 13 view .LVU998
 3140              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3141              		.loc 1 786 62 is_stmt 0 view .LVU999
 3142 1453 C4C28BF7 		shrx	rsi, QWORD PTR 32[r11], r14	# tmp654, MEM[base: _475, offset: 0B], _184
 3142      7320
 3143              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3144              		.loc 1 786 109 view .LVU1000
 3145 1459 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp656, MEM[base: _475, offset: 8B], _182
 3145      4208
 3146              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3147              		.loc 1 786 80 view .LVU1001
 3148 145f 4809C6   		or	rsi, rax	# tmp657, tmp656
 3149 1462 4B8974C3 		mov	QWORD PTR 40[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp657
 3149      28
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3150              		.loc 1 785 58 is_stmt 1 view .LVU1002
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3151              		.loc 1 785 40 view .LVU1003
 786:sieve_extend.c ****         }
 3152              		.loc 1 786 13 view .LVU1004
 3153              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3154              		.loc 1 786 62 is_stmt 0 view .LVU1005
 3155 1467 C4428BF7 		shrx	r9, QWORD PTR 40[r11], r14	# tmp660, MEM[base: _475, offset: 0B], _184
 3155      4B28
 3156              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3157              		.loc 1 786 109 view .LVU1006
 3158 146d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp662, MEM[base: _475, offset: 8B], _182
 3158      5D08
 3159              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3160              		.loc 1 786 80 view .LVU1007
 3161 1473 4909D9   		or	r9, rbx	# tmp663, tmp662
 3162 1476 4D8D5330 		lea	r10, 48[r11]	# ivtmp.232,
 3163 147a 4D8D6B38 		lea	r13, 56[r11]	# ivtmp.232,
 3164 147e 4F894CC3 		mov	QWORD PTR 48[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp663
 3164      30
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3165              		.loc 1 785 58 is_stmt 1 view .LVU1008
GAS LISTING /tmp/ccgH0yRS.s 			page 90


 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3166              		.loc 1 785 40 view .LVU1009
 786:sieve_extend.c ****         }
 3167              		.loc 1 786 13 view .LVU1010
 3168              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3169              		.loc 1 786 62 is_stmt 0 view .LVU1011
 3170 1483 C4C28BF7 		shrx	rsi, QWORD PTR 48[r11], r14	# tmp666, MEM[base: _475, offset: 0B], _184
 3170      7330
 3171              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3172              		.loc 1 786 109 view .LVU1012
 3173 1489 C4C2F1F7 		shlx	rax, QWORD PTR 8[r10], rcx	# tmp668, MEM[base: _475, offset: 8B], _182
 3173      4208
 3174              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3175              		.loc 1 786 80 view .LVU1013
 3176 148f 4809C6   		or	rsi, rax	# tmp669, tmp668
 3177 1492 4B8974C3 		mov	QWORD PTR 56[r11+r8*8], rsi	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp669
 3177      38
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3178              		.loc 1 785 58 is_stmt 1 view .LVU1014
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3179              		.loc 1 785 40 view .LVU1015
 786:sieve_extend.c ****         }
 3180              		.loc 1 786 13 view .LVU1016
 3181              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3182              		.loc 1 786 62 is_stmt 0 view .LVU1017
 3183 1497 C4428BF7 		shrx	r9, QWORD PTR 56[r11], r14	# tmp672, MEM[base: _475, offset: 0B], _184
 3183      4B38
 3184              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3185              		.loc 1 786 109 view .LVU1018
 3186 149d C4C2F1F7 		shlx	rbx, QWORD PTR 8[r13], rcx	# tmp674, MEM[base: _475, offset: 8B], _182
 3186      5D08
 3187              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3188              		.loc 1 786 80 view .LVU1019
 3189 14a3 4909D9   		or	r9, rbx	# tmp675, tmp674
 3190 14a6 4F894CC3 		mov	QWORD PTR 64[r11+r8*8], r9	# MEM[base: _475, index: _477, step: 8, offset: 8B], tmp675
 3190      40
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3191              		.loc 1 785 58 is_stmt 1 view .LVU1020
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3192              		.loc 1 785 40 view .LVU1021
 3193 14ab 4983C340 		add	r11, 64	# ivtmp.232,
 3194              	# sieve_extend.c:785:         for (register counter_t i = 0; i <loop_distance; i++) {
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3195              		.loc 1 785 9 is_stmt 0 view .LVU1022
 3196 14af 4D39E3   		cmp	r11, r12	# ivtmp.232, _481
 3197 14b2 0F8538FF 		jne	.L64	#,
 3197      FFFF
 3198 14b8 E92CFBFF 		jmp	.L62	#
 3198      FF
 3199              	.LVL113:
 3200              	.L262:
GAS LISTING /tmp/ccgH0yRS.s 			page 91


 786:sieve_extend.c ****         }
 3201              		.loc 1 786 13 is_stmt 1 view .LVU1023
 3202              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3203              		.loc 1 786 62 is_stmt 0 view .LVU1024
 3204 14bd C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r10]	# tmp1071, MEM[base: vectp.198_325, index: ivtmp.241_483, offset: 
 3204      02
 3205 14c2 BA200000 		mov	edx, 32	# ivtmp.241,
 3205      00
 3206              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3207              		.loc 1 786 109 view .LVU1025
 3208 14c7 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r11]	# tmp1072, MEM[base: vectp.202_332, index: ivtmp.241_483, offset: 
 3208      1B
 3209              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3210              		.loc 1 786 62 view .LVU1026
 3211 14cc C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__49.200, tmp1071, _184
 3212              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3213              		.loc 1 786 109 view .LVU1027
 3214 14d0 C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__54.204, tmp1072, _182
 3215              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3216              		.loc 1 786 80 view .LVU1028
 3217 14d4 C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.205, vect__49.200, vect__54.204
 3217      DA
 3218              	# sieve_extend.c:786:             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped
 786:sieve_extend.c ****         }
 3219              		.loc 1 786 35 view .LVU1029
 3220 14d9 C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm11	# MEM[base: vectp.207_341, index: ivtmp.241_483, offset: 0B], vect
 3220      19
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3221              		.loc 1 785 58 is_stmt 1 view .LVU1030
 785:sieve_extend.c ****             bitarray[copy_word+i] = (bitarray[source_word+i] >> shift_flipped) | (bitarray[source_w
 3222              		.loc 1 785 40 view .LVU1031
 3223 14de E95AF8FF 		jmp	.L184	#
 3223      FF
 3224              	.LBE321:
 3225              	.LBE323:
 3226              		.cfi_endproc
 3227              	.LFE69:
 3229 14e3 66662E0F 		.p2align 4
 3229      1F840000 
 3229      00000066 
 3229      90
 3230              		.globl	compare_tuning_result
 3232              	compare_tuning_result:
 3233              	.LVL114:
 3234              	.LFB81:
 797:sieve_extend.c **** 
 798:sieve_extend.c **** static void extendSieve_shiftright_base(bitword_t* bitarray, const counter_t source_start, const co
 799:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 800:sieve_extend.c ****    
 801:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 802:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 803:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
GAS LISTING /tmp/ccgH0yRS.s 			page 92


 804:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 805:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 806:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 807:sieve_extend.c **** 
 808:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 809:sieve_extend.c ****         bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose da
 810:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 811:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 812:sieve_extend.c ****         return; // rapid exit for one word variant
 813:sieve_extend.c ****     }
 814:sieve_extend.c **** 
 815:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] << shift)  // or the start in to not lose data
 816:sieve_extend.c ****                                 | (bitarray[copy_word] >> shift_flipped))
 817:sieve_extend.c ****                                 & keepmask(copy_start);
 818:sieve_extend.c ****     
 819:sieve_extend.c ****     copy_word++;
 820:sieve_extend.c **** 
 821:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 822:sieve_extend.c **** 
 823:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 824:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word] >> shift_flipped) | (bitarray[source_word+1] <
 825:sieve_extend.c ****     // bitarray[copy_word] &= chopmask(destination_stop);
 826:sieve_extend.c **** 
 827:sieve_extend.c **** }
 828:sieve_extend.c **** 
 829:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source_start, const counter_
 830:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 831:sieve_extend.c **** 
 832:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 833:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 834:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 835:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 836:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 837:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 838:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 839:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 840:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 841:sieve_extend.c **** 
 842:sieve_extend.c ****     copy_word++;
 843:sieve_extend.c ****     source_word++;
 844:sieve_extend.c **** 
 845:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 846:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 847:sieve_extend.c ****     source_word += distance;
 848:sieve_extend.c ****     copy_word += distance;
 849:sieve_extend.c **** 
 850:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 851:sieve_extend.c **** 
 852:sieve_extend.c ****     #pragma ivdep
 853:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 854:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 855:sieve_extend.c ****     }
 856:sieve_extend.c **** 
 857:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 858:sieve_extend.c **** 
 859:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 860:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
GAS LISTING /tmp/ccgH0yRS.s 			page 93


 861:sieve_extend.c **** 
 862:sieve_extend.c ****     #pragma ivdep
 863:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 864:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 865:sieve_extend.c **** 
 866:sieve_extend.c ****     #pragma ivdep
 867:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 868:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 869:sieve_extend.c **** 
 870:sieve_extend.c **** 
 871:sieve_extend.c ****  }
 872:sieve_extend.c **** 
 873:sieve_extend.c **** static inline void extendSieve(bitword_t* bitarray, const counter_t source_start, const counter_t s
 874:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 875:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 876:sieve_extend.c ****         return; // rapid exit for small sizes
 877:sieve_extend.c ****     }
 878:sieve_extend.c **** 
 879:sieve_extend.c ****     const counter_t copy_start  = source_start + size;
 880:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 881:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 882:sieve_extend.c **** 
 883:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_start, size, destinatio
 884:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 885:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 886:sieve_extend.c **** }
 887:sieve_extend.c **** 
 888:sieve_extend.c **** static void sieve_block_stripe(struct sieve_state *sieve, const counter_t block_start, const counte
 889:sieve_extend.c ****     counter_t prime = prime_start;
 890:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 891:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 892:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 893:sieve_extend.c **** 
 894:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 895:sieve_extend.c ****     
 896:sieve_extend.c ****     while (start <= block_stop) {
 897:sieve_extend.c ****         step  = prime * 2 + 1;
 898:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 899:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 900:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 901:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 902:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 903:sieve_extend.c ****     }
 904:sieve_extend.c ****     
 905:sieve_extend.c ****     while (start <= block_stop) {
 906:sieve_extend.c ****         step  = prime * 2 + 1;
 907:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 908:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 909:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 910:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 911:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 912:sieve_extend.c ****     }
 913:sieve_extend.c **** 
 914:sieve_extend.c **** //     counter_t start1 = 0; // save value
 915:sieve_extend.c **** //     counter_t step1 = 0; // save value
 916:sieve_extend.c **** //     while (start <= block_stop) {
 917:sieve_extend.c **** //         step  = prime * 2 + 1;
GAS LISTING /tmp/ccgH0yRS.s 			page 94


 918:sieve_extend.c **** //         if (step > 64) break;
 919:sieve_extend.c **** //         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_star
 920:sieve_extend.c **** //         start1 = start; // save value
 921:sieve_extend.c **** //         step1 = step; // save value
 922:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 923:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 924:sieve_extend.c **** //         step  = prime * 2 + 1;
 925:sieve_extend.c **** //         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + pr
 926:sieve_extend.c **** //         if (start <= block_stop) setBitsTrue_race(bitarray, start1, start, step1, step, block_st
 927:sieve_extend.c **** // //        else                     setBitsTrue_largeSteps(bitarray, start1, step1, block_stop);
 928:sieve_extend.c **** //         prime = searchBitFalse(bitarray, prime+1 );
 929:sieve_extend.c **** //         start = prime * prime * 2 + prime * 2;
 930:sieve_extend.c **** //     }
 931:sieve_extend.c **** 
 932:sieve_extend.c ****     while (start <= block_stop) {
 933:sieve_extend.c ****         step  = prime * 2 + 1;
 934:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 935:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 936:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 937:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 938:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 939:sieve_extend.c ****     }
 940:sieve_extend.c **** 
 941:sieve_extend.c ****     while (start <= block_stop) {
 942:sieve_extend.c ****         step  = prime * 2 + 1;
 943:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 944:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 945:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 946:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 947:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 948:sieve_extend.c ****     }
 949:sieve_extend.c **** 
 950:sieve_extend.c ****     while (start <= block_stop) {
 951:sieve_extend.c ****         step  = prime * 2 + 1;
 952:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 953:sieve_extend.c ****         if likely(start <= block_stop)
 954:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 955:sieve_extend.c ****         prime = searchBitFalse_longRange(bitarray, prime+1 );
 956:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 957:sieve_extend.c ****     }
 958:sieve_extend.c **** }
 959:sieve_extend.c **** 
 960:sieve_extend.c **** struct block {
 961:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 962:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 963:sieve_extend.c ****     counter_t prime; // next prime to be striped
 964:sieve_extend.c **** };
 965:sieve_extend.c **** 
 966:sieve_extend.c **** // returns prime that could not be handled:
 967:sieve_extend.c **** // start is too large
 968:sieve_extend.c **** // range is too big
 969:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_state *sieve, const counter_t block_start, cons
 970:sieve_extend.c ****     register counter_t prime   = 0;
 971:sieve_extend.c ****     counter_t patternsize_bits = 1;
 972:sieve_extend.c ****     counter_t pattern_start    = 0;
 973:sieve_extend.c ****     counter_t range_stop       = block_start;
 974:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
GAS LISTING /tmp/ccgH0yRS.s 			page 95


 975:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 976:sieve_extend.c **** 
 977:sieve_extend.c ****     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared; the rest is populated
 978:sieve_extend.c ****     
 979:sieve_extend.c ****     for (;range_stop < block_stop;) {
 980:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 981:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 982:sieve_extend.c ****         if unlikely(start > block_stop) break;
 983:sieve_extend.c **** 
 984:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 985:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 986:sieve_extend.c **** 
 987:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 988:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 989:sieve_extend.c ****         block.pattern_start = pattern_start;
 990:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 991:sieve_extend.c **** 
 992:sieve_extend.c ****         if (patternsize_bits>1) {
 993:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 994:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 995:sieve_extend.c ****         }
 996:sieve_extend.c ****         patternsize_bits *= step;
 997:sieve_extend.c **** 
 998:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarray, start, (bitshift_t)
 999:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
1000:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
1001:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
1002:sieve_extend.c ****         block.prime = prime;
1003:sieve_extend.c ****     } 
1004:sieve_extend.c **** 
1005:sieve_extend.c ****     return block;
1006:sieve_extend.c **** }
1007:sieve_extend.c **** 
1008:sieve_extend.c **** static struct sieve_state *sieve(const counter_t maxints, const counter_t blocksize) {
1009:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
1010:sieve_extend.c ****     counter_t prime     = 0;
1011:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
1012:sieve_extend.c **** 
1013:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
1014:sieve_extend.c **** 
1015:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
1016:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
1017:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
1018:sieve_extend.c ****     prime = block.prime;
1019:sieve_extend.c **** 
1020:sieve_extend.c ****     // #pragma unroll 8
1021:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
1022:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
1023:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
1024:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
1025:sieve_extend.c ****     } 
1026:sieve_extend.c **** 
1027:sieve_extend.c ****     return sieve;
1028:sieve_extend.c **** }
1029:sieve_extend.c **** 
1030:sieve_extend.c **** static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1031:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
GAS LISTING /tmp/ccgH0yRS.s 			page 96


1032:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1033:sieve_extend.c ****         primeCount++;
1034:sieve_extend.c ****         if (factor < maxFactor/2) {
1035:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
1036:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
1037:sieve_extend.c ****         }
1038:sieve_extend.c ****     }
1039:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
1040:sieve_extend.c **** }
1041:sieve_extend.c **** 
1042:sieve_extend.c **** static counter_t count_primes(struct sieve_state *sieve) {
1043:sieve_extend.c ****     counter_t primeCount = 1;
1044:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
1045:sieve_extend.c ****     return primeCount;
1046:sieve_extend.c **** }
1047:sieve_extend.c **** 
1048:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_state *sieve) {
1049:sieve_extend.c ****     printf("DeepAnalyzing\n");
1050:sieve_extend.c ****     counter_t warn_prime = 0;
1051:sieve_extend.c ****     counter_t warn_nonprime = 0;
1052:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1053:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
1054:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1055:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1056:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
1057:sieve_extend.c ****                 }
1058:sieve_extend.c ****             }
1059:sieve_extend.c ****         }
1060:sieve_extend.c ****         else {
1061:sieve_extend.c ****             counter_t c_prime = 0;
1062:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1063:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
1064:sieve_extend.c ****             }
1065:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
1066:sieve_extend.c ****         }
1067:sieve_extend.c ****     }
1068:sieve_extend.c **** }
1069:sieve_extend.c **** 
1070:sieve_extend.c **** 
1071:sieve_extend.c **** int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1072:sieve_extend.c **** 
1073:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
1074:sieve_extend.c ****     counter_t valid_primes = 0;
1075:sieve_extend.c ****     switch(sieve->size) {
1076:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
1077:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
1078:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
1079:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
1080:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
1081:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
1082:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
1083:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
1084:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
1085:sieve_extend.c ****         default:            valid_primes= 0;
1086:sieve_extend.c ****     }
1087:sieve_extend.c **** 
1088:sieve_extend.c ****     int valid = (valid_primes == primecount);
GAS LISTING /tmp/ccgH0yRS.s 			page 97


1089:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
1090:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
1091:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
1092:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
1093:sieve_extend.c ****     }
1094:sieve_extend.c ****     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1095:sieve_extend.c ****     return (valid);
1096:sieve_extend.c **** }
1097:sieve_extend.c **** 
1098:sieve_extend.c **** void usage(char *name) {
1099:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
1100:sieve_extend.c ****     fprintf(stderr, "Options:\n");
1101:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
1102:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
1103:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
1104:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
1105:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
1106:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
1107:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
1108:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
1109:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
1110:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
1111:sieve_extend.c ****     exit(1);
1112:sieve_extend.c **** }
1113:sieve_extend.c **** 
1114:sieve_extend.c **** typedef struct  {
1115:sieve_extend.c ****     counter_t maxints;
1116:sieve_extend.c ****     counter_t blocksize_bits;
1117:sieve_extend.c ****     counter_t blocksize_kb;
1118:sieve_extend.c ****     counter_t free_bits;
1119:sieve_extend.c ****     counter_t smallstep_faster;
1120:sieve_extend.c ****     counter_t mediumstep_faster;
1121:sieve_extend.c ****     counter_t vectorstep_faster;
1122:sieve_extend.c ****     counter_t sample_max;
1123:sieve_extend.c ****     double    sample_duration;
1124:sieve_extend.c ****     counter_t passes;
1125:sieve_extend.c ****     double    elapsed_time;
1126:sieve_extend.c ****     double    avg;
1127:sieve_extend.c **** } tuning_result_type;
1128:sieve_extend.c **** 
1129:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 3235              		.loc 1 1129 57 view -0
 3236              		.cfi_startproc
 3237              		.loc 1 1129 57 is_stmt 0 view .LVU1033
 3238 14f0 F30F1EFA 		endbr64	
1130:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 3239              		.loc 1 1130 5 is_stmt 1 view .LVU1034
 3240              	.LVL115:
1131:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 3241              		.loc 1 1131 5 view .LVU1035
1132:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 3242              		.loc 1 1132 5 view .LVU1036
 3243              	# sieve_extend.c:1132:     return (resultB->avg > resultA->avg ? 1 : -1);
 3244              		.loc 1 1132 45 is_stmt 0 view .LVU1037
 3245 14f4 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 3245      58
 3246 14f9 31C0     		xor	eax, eax	# <retval>
GAS LISTING /tmp/ccgH0yRS.s 			page 98


 3247 14fb C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 3247      58
 3248 1500 0F97C0   		seta	al	#, <retval>
 3249 1503 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 3250              	# sieve_extend.c:1133: }
1133:sieve_extend.c **** }
 3251              		.loc 1 1133 1 view .LVU1038
 3252 1507 C3       		ret	
 3253              		.cfi_endproc
 3254              	.LFE81:
 3256 1508 0F1F8400 		.p2align 4
 3256      00000000 
 3258              	setBitsTrue_largeRange_vector:
 3259              	.LVL116:
 3260              	.LFB63:
 423:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3261              		.loc 1 423 153 is_stmt 1 view -0
 3262              		.cfi_startproc
 423:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3263              		.loc 1 423 153 is_stmt 0 view .LVU1040
 3264 1510 55       		push	rbp	#
 3265              		.cfi_def_cfa_offset 16
 3266              		.cfi_offset 6, -16
 3267              	# sieve_extend.c:438:     counter_t range_start_atvector = vectorstart(range_start);
 438:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3268              		.loc 1 438 15 view .LVU1041
 3269 1511 4989F3   		mov	r11, rsi	# range_start_atvector, range_start
 3270              	# sieve_extend.c:423: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 423:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3271              		.loc 1 423 153 view .LVU1042
 3272 1514 4889E5   		mov	rbp, rsp	#,
 3273              		.cfi_def_cfa_register 6
 3274              	# sieve_extend.c:438:     counter_t range_start_atvector = vectorstart(range_start);
 438:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3275              		.loc 1 438 15 view .LVU1043
 3276 1517 4530DB   		xor	r11b, r11b	# range_start_atvector
 3277              	# sieve_extend.c:423: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 423:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3278              		.loc 1 423 153 view .LVU1044
 3279 151a 4157     		push	r15	#
 3280 151c 4156     		push	r14	#
 3281 151e 4155     		push	r13	#
 3282 1520 4154     		push	r12	#
 3283 1522 53       		push	rbx	#
 3284 1523 4883E4E0 		and	rsp, -32	#,
 3285 1527 488DA424 		lea	rsp, -160[rsp]	#,
 3285      60FFFFFF 
 3286              		.cfi_offset 15, -24
 3287              		.cfi_offset 14, -32
 3288              		.cfi_offset 13, -40
 3289              		.cfi_offset 12, -48
 3290              		.cfi_offset 3, -56
 3291              	# sieve_extend.c:423: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitarray_word
 423:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3292              		.loc 1 423 153 view .LVU1045
 3293 152f 64488B04 		mov	rax, QWORD PTR fs:40	# tmp561, MEM[(<address-space-1> long unsigned int *)40B]
 3293      25280000 
GAS LISTING /tmp/ccgH0yRS.s 			page 99


 3293      00
 3294 1538 48898424 		mov	QWORD PTR 152[rsp], rax	# D.6676, tmp561
 3294      98000000 
 3295 1540 31C0     		xor	eax, eax	# tmp561
 424:sieve_extend.c **** 
 3296              		.loc 1 424 5 is_stmt 1 view .LVU1046
 432:sieve_extend.c ****     
 3297              		.loc 1 432 5 view .LVU1047
 3298              	.LVL117:
 438:sieve_extend.c ****     if likely((range_start_atvector + step) < range_start) { // not the first step possible in this
 3299              		.loc 1 438 5 view .LVU1048
 439:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 3300              		.loc 1 439 5 view .LVU1049
 3301              	# sieve_extend.c:439:     if likely((range_start_atvector + step) < range_start) { // not the first
 439:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",range_start+step, range_
 3302              		.loc 1 439 8 is_stmt 0 view .LVU1050
 3303 1542 498D0413 		lea	rax, [r11+rdx]	# tmp224,
 3304 1546 4839F0   		cmp	rax, rsi	# tmp224, range_start
 3305 1549 0F83FE00 		jnb	.L267	#,
 3305      0000
 3306              	.LBB324:
 440:sieve_extend.c **** 
 3307              		.loc 1 440 9 is_stmt 1 view .LVU1051
 442:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3308              		.loc 1 442 9 view .LVU1052
 3309              	# sieve_extend.c:442:         range_start_atvector += VECTOR_SIZE; // find next vector
 442:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3310              		.loc 1 442 30 is_stmt 0 view .LVU1053
 3311 154f 4981C300 		add	r11, 256	# range_start_atvector,
 3311      010000
 3312              	.LVL118:
 443:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3313              		.loc 1 443 9 is_stmt 1 view .LVU1054
 3314              	# sieve_extend.c:443:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 443:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3315              		.loc 1 443 12 is_stmt 0 view .LVU1055
 3316 1556 4939CB   		cmp	r11, rcx	# range_start_atvector, range_stop
 3317 1559 0F874C0A 		ja	.L268	#,
 3317      0000
 460:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3318              		.loc 1 460 16 is_stmt 1 view .LVU1056
 3319              	# sieve_extend.c:460:         for (; range_start < range_start_atvector;) {
 460:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3320              		.loc 1 460 9 is_stmt 0 view .LVU1057
 3321 155f 4C39DE   		cmp	rsi, r11	# range_start, range_start_atvector
 3322              	.LBB325:
 3323              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3324              		.loc 1 464 25 view .LVU1058
 3325 1562 41B90100 		mov	r9d, 1	# tmp232,
 3325      0000
 3326              	.LBE325:
 3327              	# sieve_extend.c:460:         for (; range_start < range_start_atvector;) {
 460:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3328              		.loc 1 460 9 view .LVU1059
 3329 1568 0F83DF00 		jnb	.L267	#,
 3329      0000
GAS LISTING /tmp/ccgH0yRS.s 			page 100


 3330              	.LVL119:
 3331 156e 6690     		.p2align 4
 3332              		.p2align 3
 3333              	.L269:
 3334              	.LBB326:
 461:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3335              		.loc 1 461 13 is_stmt 1 view .LVU1060
 3336              	# sieve_extend.c:461:             register counter_t index_word = wordindex(range_start);
 461:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3337              		.loc 1 461 32 is_stmt 0 view .LVU1061
 3338 1570 4989F0   		mov	r8, rsi	# index_word, range_start
 3339              	# sieve_extend.c:462:             register bitword_t mask = SAFE_ZERO;
 462:sieve_extend.c ****             do {
 3340              		.loc 1 462 32 view .LVU1062
 3341 1573 31DB     		xor	ebx, ebx	# mask
 3342              	# sieve_extend.c:461:             register counter_t index_word = wordindex(range_start);
 461:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 3343              		.loc 1 461 32 view .LVU1063
 3344 1575 49C1E806 		shr	r8, 6	# index_word,
 3345              	.LVL120:
 462:sieve_extend.c ****             do {
 3346              		.loc 1 462 13 is_stmt 1 view .LVU1064
 3347              	.L272:
 463:sieve_extend.c ****                 mask |= markmask(range_start);
 3348              		.loc 1 463 13 discriminator 1 view .LVU1065
 464:sieve_extend.c ****                 range_start += step;
 3349              		.loc 1 464 17 discriminator 1 view .LVU1066
 3350              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3351              		.loc 1 464 25 is_stmt 0 discriminator 1 view .LVU1067
 3352 1579 C442C9F7 		shlx	r10, r9, rsi	# tmp231, tmp232, range_start
 3352      D1
 3353              	# sieve_extend.c:465:                 range_start += step;
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3354              		.loc 1 465 29 discriminator 1 view .LVU1068
 3355 157e 4801D6   		add	rsi, rdx	# range_start, step
 3356              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3357              		.loc 1 466 22 discriminator 1 view .LVU1069
 3358 1581 4989F4   		mov	r12, rsi	# tmp233, range_start
 3359              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3360              		.loc 1 464 22 discriminator 1 view .LVU1070
 3361 1584 4C09D3   		or	rbx, r10	# mask, tmp231
 3362              	.LVL121:
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3363              		.loc 1 465 17 is_stmt 1 discriminator 1 view .LVU1071
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3364              		.loc 1 466 21 discriminator 1 view .LVU1072
 3365              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3366              		.loc 1 466 22 is_stmt 0 discriminator 1 view .LVU1073
 3367 1587 49C1EC06 		shr	r12, 6	# tmp233,
 3368              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3369              		.loc 1 466 13 discriminator 1 view .LVU1074
 3370 158b 4D39C4   		cmp	r12, r8	# tmp233, index_word
GAS LISTING /tmp/ccgH0yRS.s 			page 101


 3371 158e 0F85AC00 		jne	.L440	#,
 3371      0000
 463:sieve_extend.c ****                 mask |= markmask(range_start);
 3372              		.loc 1 463 13 is_stmt 1 view .LVU1075
 464:sieve_extend.c ****                 range_start += step;
 3373              		.loc 1 464 17 view .LVU1076
 3374              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3375              		.loc 1 464 25 is_stmt 0 view .LVU1077
 3376 1594 C442C9F7 		shlx	r13, r9, rsi	# tmp485, tmp232, range_start
 3376      E9
 3377              	# sieve_extend.c:465:                 range_start += step;
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3378              		.loc 1 465 29 view .LVU1078
 3379 1599 4801D6   		add	rsi, rdx	# range_start, step
 3380              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3381              		.loc 1 466 22 view .LVU1079
 3382 159c 4989F6   		mov	r14, rsi	# tmp486, range_start
 3383              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3384              		.loc 1 464 22 view .LVU1080
 3385 159f 4C09EB   		or	rbx, r13	# mask, tmp485
 3386              	.LVL122:
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3387              		.loc 1 465 17 is_stmt 1 view .LVU1081
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3388              		.loc 1 466 21 view .LVU1082
 3389              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3390              		.loc 1 466 22 is_stmt 0 view .LVU1083
 3391 15a2 49C1EE06 		shr	r14, 6	# tmp486,
 3392              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3393              		.loc 1 466 13 view .LVU1084
 3394 15a6 4D39C6   		cmp	r14, r8	# tmp486, index_word
 3395 15a9 0F859100 		jne	.L440	#,
 3395      0000
 463:sieve_extend.c ****                 mask |= markmask(range_start);
 3396              		.loc 1 463 13 is_stmt 1 view .LVU1085
 464:sieve_extend.c ****                 range_start += step;
 3397              		.loc 1 464 17 view .LVU1086
 3398              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3399              		.loc 1 464 25 is_stmt 0 view .LVU1087
 3400 15af C442C9F7 		shlx	r15, r9, rsi	# tmp487, tmp232, range_start
 3400      F9
 3401              	# sieve_extend.c:465:                 range_start += step;
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3402              		.loc 1 465 29 view .LVU1088
 3403 15b4 4801D6   		add	rsi, rdx	# range_start, step
 3404              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3405              		.loc 1 466 22 view .LVU1089
 3406 15b7 4889F0   		mov	rax, rsi	# tmp488, range_start
 3407              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
GAS LISTING /tmp/ccgH0yRS.s 			page 102


 3408              		.loc 1 464 22 view .LVU1090
 3409 15ba 4C09FB   		or	rbx, r15	# mask, tmp487
 3410              	.LVL123:
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3411              		.loc 1 465 17 is_stmt 1 view .LVU1091
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3412              		.loc 1 466 21 view .LVU1092
 3413              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3414              		.loc 1 466 22 is_stmt 0 view .LVU1093
 3415 15bd 48C1E806 		shr	rax, 6	# tmp488,
 3416              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3417              		.loc 1 466 13 view .LVU1094
 3418 15c1 4C39C0   		cmp	rax, r8	# tmp488, index_word
 3419 15c4 757A     		jne	.L440	#,
 463:sieve_extend.c ****                 mask |= markmask(range_start);
 3420              		.loc 1 463 13 is_stmt 1 view .LVU1095
 464:sieve_extend.c ****                 range_start += step;
 3421              		.loc 1 464 17 view .LVU1096
 3422              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3423              		.loc 1 464 25 is_stmt 0 view .LVU1097
 3424 15c6 C442C9F7 		shlx	r10, r9, rsi	# tmp489, tmp232, range_start
 3424      D1
 3425              	# sieve_extend.c:465:                 range_start += step;
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3426              		.loc 1 465 29 view .LVU1098
 3427 15cb 4801D6   		add	rsi, rdx	# range_start, step
 3428              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3429              		.loc 1 466 22 view .LVU1099
 3430 15ce 4989F4   		mov	r12, rsi	# tmp490, range_start
 3431              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3432              		.loc 1 464 22 view .LVU1100
 3433 15d1 4C09D3   		or	rbx, r10	# mask, tmp489
 3434              	.LVL124:
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3435              		.loc 1 465 17 is_stmt 1 view .LVU1101
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3436              		.loc 1 466 21 view .LVU1102
 3437              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3438              		.loc 1 466 22 is_stmt 0 view .LVU1103
 3439 15d4 49C1EC06 		shr	r12, 6	# tmp490,
 3440              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3441              		.loc 1 466 13 view .LVU1104
 3442 15d8 4D39C4   		cmp	r12, r8	# tmp490, index_word
 3443 15db 7563     		jne	.L440	#,
 463:sieve_extend.c ****                 mask |= markmask(range_start);
 3444              		.loc 1 463 13 is_stmt 1 view .LVU1105
 464:sieve_extend.c ****                 range_start += step;
 3445              		.loc 1 464 17 view .LVU1106
 3446              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
GAS LISTING /tmp/ccgH0yRS.s 			page 103


 3447              		.loc 1 464 25 is_stmt 0 view .LVU1107
 3448 15dd C442C9F7 		shlx	r13, r9, rsi	# tmp491, tmp232, range_start
 3448      E9
 3449              	# sieve_extend.c:465:                 range_start += step;
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3450              		.loc 1 465 29 view .LVU1108
 3451 15e2 4801D6   		add	rsi, rdx	# range_start, step
 3452              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3453              		.loc 1 466 22 view .LVU1109
 3454 15e5 4989F6   		mov	r14, rsi	# tmp492, range_start
 3455              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3456              		.loc 1 464 22 view .LVU1110
 3457 15e8 4C09EB   		or	rbx, r13	# mask, tmp491
 3458              	.LVL125:
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3459              		.loc 1 465 17 is_stmt 1 view .LVU1111
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3460              		.loc 1 466 21 view .LVU1112
 3461              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3462              		.loc 1 466 22 is_stmt 0 view .LVU1113
 3463 15eb 49C1EE06 		shr	r14, 6	# tmp492,
 3464              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3465              		.loc 1 466 13 view .LVU1114
 3466 15ef 4D39C6   		cmp	r14, r8	# tmp492, index_word
 3467 15f2 754C     		jne	.L440	#,
 463:sieve_extend.c ****                 mask |= markmask(range_start);
 3468              		.loc 1 463 13 is_stmt 1 view .LVU1115
 464:sieve_extend.c ****                 range_start += step;
 3469              		.loc 1 464 17 view .LVU1116
 3470              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3471              		.loc 1 464 25 is_stmt 0 view .LVU1117
 3472 15f4 C442C9F7 		shlx	r15, r9, rsi	# tmp493, tmp232, range_start
 3472      F9
 3473              	# sieve_extend.c:465:                 range_start += step;
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3474              		.loc 1 465 29 view .LVU1118
 3475 15f9 4801D6   		add	rsi, rdx	# range_start, step
 3476              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3477              		.loc 1 466 22 view .LVU1119
 3478 15fc 4889F0   		mov	rax, rsi	# tmp494, range_start
 3479              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3480              		.loc 1 464 22 view .LVU1120
 3481 15ff 4C09FB   		or	rbx, r15	# mask, tmp493
 3482              	.LVL126:
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3483              		.loc 1 465 17 is_stmt 1 view .LVU1121
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3484              		.loc 1 466 21 view .LVU1122
 3485              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
GAS LISTING /tmp/ccgH0yRS.s 			page 104


 3486              		.loc 1 466 22 is_stmt 0 view .LVU1123
 3487 1602 48C1E806 		shr	rax, 6	# tmp494,
 3488              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3489              		.loc 1 466 13 view .LVU1124
 3490 1606 4C39C0   		cmp	rax, r8	# tmp494, index_word
 3491 1609 7535     		jne	.L440	#,
 463:sieve_extend.c ****                 mask |= markmask(range_start);
 3492              		.loc 1 463 13 is_stmt 1 view .LVU1125
 464:sieve_extend.c ****                 range_start += step;
 3493              		.loc 1 464 17 view .LVU1126
 3494              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3495              		.loc 1 464 25 is_stmt 0 view .LVU1127
 3496 160b C442C9F7 		shlx	r10, r9, rsi	# tmp495, tmp232, range_start
 3496      D1
 3497              	# sieve_extend.c:465:                 range_start += step;
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3498              		.loc 1 465 29 view .LVU1128
 3499 1610 4801D6   		add	rsi, rdx	# range_start, step
 3500              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3501              		.loc 1 466 22 view .LVU1129
 3502 1613 4989F4   		mov	r12, rsi	# tmp496, range_start
 3503              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3504              		.loc 1 464 22 view .LVU1130
 3505 1616 4C09D3   		or	rbx, r10	# mask, tmp495
 3506              	.LVL127:
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3507              		.loc 1 465 17 is_stmt 1 view .LVU1131
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3508              		.loc 1 466 21 view .LVU1132
 3509              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3510              		.loc 1 466 22 is_stmt 0 view .LVU1133
 3511 1619 49C1EC06 		shr	r12, 6	# tmp496,
 3512              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3513              		.loc 1 466 13 view .LVU1134
 3514 161d 4D39C4   		cmp	r12, r8	# tmp496, index_word
 3515 1620 751E     		jne	.L440	#,
 463:sieve_extend.c ****                 mask |= markmask(range_start);
 3516              		.loc 1 463 13 is_stmt 1 view .LVU1135
 464:sieve_extend.c ****                 range_start += step;
 3517              		.loc 1 464 17 view .LVU1136
 3518              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3519              		.loc 1 464 25 is_stmt 0 view .LVU1137
 3520 1622 C442C9F7 		shlx	r13, r9, rsi	# tmp497, tmp232, range_start
 3520      E9
 3521              	# sieve_extend.c:465:                 range_start += step;
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3522              		.loc 1 465 29 view .LVU1138
 3523 1627 4801D6   		add	rsi, rdx	# range_start, step
 3524              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
GAS LISTING /tmp/ccgH0yRS.s 			page 105


 3525              		.loc 1 466 22 view .LVU1139
 3526 162a 4989F6   		mov	r14, rsi	# tmp498, range_start
 3527              	# sieve_extend.c:464:                 mask |= markmask(range_start);
 464:sieve_extend.c ****                 range_start += step;
 3528              		.loc 1 464 22 view .LVU1140
 3529 162d 4C09EB   		or	rbx, r13	# mask, tmp497
 3530              	.LVL128:
 465:sieve_extend.c ****             } while (wordindex(range_start) == index_word);
 3531              		.loc 1 465 17 is_stmt 1 view .LVU1141
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3532              		.loc 1 466 21 view .LVU1142
 3533              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3534              		.loc 1 466 22 is_stmt 0 view .LVU1143
 3535 1630 49C1EE06 		shr	r14, 6	# tmp498,
 3536              	# sieve_extend.c:466:             } while (wordindex(range_start) == index_word);
 466:sieve_extend.c ****             bitarray_word[index_word] |= mask;
 3537              		.loc 1 466 13 view .LVU1144
 3538 1634 4D39C6   		cmp	r14, r8	# tmp498, index_word
 3539 1637 0F843CFF 		je	.L272	#,
 3539      FFFF
 3540 163d 0F1F00   		.p2align 4
 3541              		.p2align 3
 3542              	.L440:
 467:sieve_extend.c ****         }
 3543              		.loc 1 467 13 is_stmt 1 view .LVU1145
 3544              	# sieve_extend.c:467:             bitarray_word[index_word] |= mask;
 467:sieve_extend.c ****         }
 3545              		.loc 1 467 39 is_stmt 0 view .LVU1146
 3546 1640 4A091CC7 		or	QWORD PTR [rdi+r8*8], rbx	# *_26, mask
 467:sieve_extend.c ****         }
 3547              		.loc 1 467 39 view .LVU1147
 3548              	.LBE326:
 460:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3549              		.loc 1 460 16 is_stmt 1 view .LVU1148
 3550              	# sieve_extend.c:460:         for (; range_start < range_start_atvector;) {
 460:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3551              		.loc 1 460 9 is_stmt 0 view .LVU1149
 3552 1644 4939F3   		cmp	r11, rsi	# range_start_atvector, range_start
 3553 1647 0F8723FF 		ja	.L269	#,
 3553      FFFF
 3554              	.LVL129:
 3555              	.L267:
 460:sieve_extend.c ****             register counter_t index_word = wordindex(range_start);
 3556              		.loc 1 460 9 view .LVU1150
 3557              	.LBE324:
 471:sieve_extend.c ****     
 3558              		.loc 1 471 5 is_stmt 1 view .LVU1151
 3559              	# sieve_extend.c:471:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 471:sieve_extend.c ****     
 3560              		.loc 1 471 42 is_stmt 0 view .LVU1152
 3561 164d 4989D3   		mov	r11, rdx	# tmp235, step
 3562              	.LVL130:
 3563              	# sieve_extend.c:475:     const counter_t step_4 = step * 4;
 475:sieve_extend.c **** 
 3564              		.loc 1 475 21 view .LVU1153
 3565 1650 4C8D2495 		lea	r12, 0[0+rdx*4]	# step_4,
GAS LISTING /tmp/ccgH0yRS.s 			page 106


 3565      00000000 
 3566              	# sieve_extend.c:471:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 471:sieve_extend.c ****     
 3567              		.loc 1 471 42 view .LVU1154
 3568 1658 49C1E308 		sal	r11, 8	# tmp235,
 3569 165c 4901F3   		add	r11, rsi	# tmp236, range_start
 3570              	# sieve_extend.c:471:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 471:sieve_extend.c ****     
 3571              		.loc 1 471 21 view .LVU1155
 3572 165f 4939CB   		cmp	r11, rcx	# tmp236, range_stop
 3573 1662 4C0F47D9 		cmova	r11, rcx	# tmp236,, tmp236, range_stop
 3574 1666 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, range_stop_unique
 3574      58
 3575              	.LVL131:
 473:sieve_extend.c ****     const counter_t step_3 = step * 3;
 3576              		.loc 1 473 5 is_stmt 1 view .LVU1156
 474:sieve_extend.c ****     const counter_t step_4 = step * 4;
 3577              		.loc 1 474 5 view .LVU1157
 475:sieve_extend.c **** 
 3578              		.loc 1 475 5 view .LVU1158
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3579              		.loc 1 478 5 view .LVU1159
 3580              	.LBB328:
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3581              		.loc 1 478 10 view .LVU1160
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3582              		.loc 1 478 41 view .LVU1161
 3583              	# sieve_extend.c:478:     for (counter_t index = range_start; index < range_stop_unique;) {
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 3584              		.loc 1 478 5 is_stmt 0 view .LVU1162
 3585 166b 4C39DE   		cmp	rsi, r11	# range_start, range_stop_unique
 3586 166e 0F83FF04 		jnb	.L266	#,
 3586      0000
 3587              	.LBB329:
 3588              	# sieve_extend.c:493:         const counter_t range_stop_vector = vectorindex(range_stop);
 493:sieve_extend.c ****         
 3589              		.loc 1 493 25 view .LVU1163
 3590 1674 4989C8   		mov	r8, rcx	# range_stop_vector, range_stop
 3591              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3592              		.loc 1 486 31 view .LVU1164
 3593 1677 41BA0100 		mov	r10d, 1	# tmp266,
 3593      0000
 3594              	.LBB330:
 3595              	# sieve_extend.c:521:             counter_t range_stop_word = wordindex(range_stop);
 521:sieve_extend.c ****             if likely(index_word <= range_stop_word) {
 3596              		.loc 1 521 23 view .LVU1165
 3597 167d 48C1E906 		shr	rcx, 6	# range_stop,
 3598              	.LVL132:
 521:sieve_extend.c ****             if likely(index_word <= range_stop_word) {
 3599              		.loc 1 521 23 view .LVU1166
 3600              	.LBE330:
 3601              	# sieve_extend.c:493:         const counter_t range_stop_vector = vectorindex(range_stop);
 493:sieve_extend.c ****         
 3602              		.loc 1 493 25 view .LVU1167
 3603 1681 49C1E808 		shr	r8, 8	# range_stop_vector,
 3604              	.LVL133:
GAS LISTING /tmp/ccgH0yRS.s 			page 107


 493:sieve_extend.c ****         
 3605              		.loc 1 493 25 view .LVU1168
 3606 1685 4883FA01 		cmp	rdx, 1	# step,
 3607              	# sieve_extend.c:480:         register bitvector_t quadmask = { };
 480:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3608              		.loc 1 480 30 view .LVU1169
 3609 1689 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp262
 3610 168d 4889CB   		mov	rbx, rcx	# range_stop_word, range_stop
 3611              	.LBB331:
 3612              	# sieve_extend.c:521:             counter_t range_stop_word = wordindex(range_stop);
 521:sieve_extend.c ****             if likely(index_word <= range_stop_word) {
 3613              		.loc 1 521 23 view .LVU1170
 3614 1690 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, range_stop
 3614      50
 3615 1695 0F852C05 		jne	.L461	#,
 3615      0000
 3616              	.LVL134:
 3617 169b 0F1F4400 		.p2align 4
 3617      00
 3618              		.p2align 3
 3619              	.L273:
 521:sieve_extend.c ****             if likely(index_word <= range_stop_word) {
 3620              		.loc 1 521 23 view .LVU1171
 3621              	.LBE331:
 479:sieve_extend.c ****         register bitvector_t quadmask = { };
 3622              		.loc 1 479 9 is_stmt 1 view .LVU1172
 3623              	# sieve_extend.c:479:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 479:sieve_extend.c ****         register bitvector_t quadmask = { };
 3624              		.loc 1 479 54 is_stmt 0 view .LVU1173
 3625 16a0 4889F2   		mov	rdx, rsi	# ivtmp.267, range_start
 3626              	# sieve_extend.c:481:         register counter_t word = wordindex(index) - current_vector_start_wor
 481:sieve_extend.c ****         
 3627              		.loc 1 481 35 view .LVU1174
 3628 16a3 4989F1   		mov	r9, rsi	# tmp263, range_start
 3629              	# sieve_extend.c:479:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 479:sieve_extend.c ****         register bitvector_t quadmask = { };
 3630              		.loc 1 479 54 view .LVU1175
 3631 16a6 48C1EA08 		shr	rdx, 8	# ivtmp.267,
 3632              	# sieve_extend.c:481:         register counter_t word = wordindex(index) - current_vector_start_wor
 481:sieve_extend.c ****         
 3633              		.loc 1 481 35 view .LVU1176
 3634 16aa 49C1E906 		shr	r9, 6	# tmp263,
 3635              	# sieve_extend.c:479:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 479:sieve_extend.c ****         register bitvector_t quadmask = { };
 3636              		.loc 1 479 25 view .LVU1177
 3637 16ae 4C8D3495 		lea	r14, 0[0+rdx*4]	# current_vector_start_word,
 3637      00000000 
 3638              	.LVL135:
 480:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3639              		.loc 1 480 9 is_stmt 1 view .LVU1178
 3640              	# sieve_extend.c:480:         register bitvector_t quadmask = { };
 480:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3641              		.loc 1 480 30 is_stmt 0 view .LVU1179
 3642 16b6 C5FD7F54 		vmovdqa	YMMWORD PTR 96[rsp], ymm2	# quadmask, tmp262
 3642      2460
 481:sieve_extend.c ****         
 3643              		.loc 1 481 9 is_stmt 1 view .LVU1180
GAS LISTING /tmp/ccgH0yRS.s 			page 108


 3644              	# sieve_extend.c:481:         register counter_t word = wordindex(index) - current_vector_start_wor
 481:sieve_extend.c ****         
 3645              		.loc 1 481 28 is_stmt 0 view .LVU1181
 3646 16bc 4D29F1   		sub	r9, r14	# word, current_vector_start_word
 3647              	.LVL136:
 3648              	.L285:
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3649              		.loc 1 485 9 is_stmt 1 view .LVU1182
 486:sieve_extend.c ****             index += step;
 3650              		.loc 1 486 13 view .LVU1183
 3651              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3652              		.loc 1 486 31 is_stmt 0 view .LVU1184
 3653 16bf C442C9F7 		shlx	r12, r10, rsi	# tmp265, tmp266, range_start
 3653      E2
 3654              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3655              		.loc 1 486 28 view .LVU1185
 3656 16c4 4E0964CC 		or	QWORD PTR 96[rsp+r9*8], r12	# quadmask, tmp265
 3656      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3657              		.loc 1 487 13 is_stmt 1 view .LVU1186
 3658              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3659              		.loc 1 487 19 is_stmt 0 view .LVU1187
 3660 16c9 4C8D4E01 		lea	r9, 1[rsi]	# tmp306,
 3661              	.LVL137:
 3662              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3663              		.loc 1 488 20 view .LVU1188
 3664 16cd 4C89C9   		mov	rcx, r9	# tmp267, range_start
 3665              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3666              		.loc 1 487 19 view .LVU1189
 3667 16d0 4C89CE   		mov	rsi, r9	# range_start, tmp306
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3668              		.loc 1 488 13 is_stmt 1 view .LVU1190
 3669              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3670              		.loc 1 488 20 is_stmt 0 view .LVU1191
 3671 16d3 48C1E906 		shr	rcx, 6	# tmp267,
 3672              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3673              		.loc 1 488 18 view .LVU1192
 3674 16d7 4C29F1   		sub	rcx, r14	# word, current_vector_start_word
 489:sieve_extend.c ****         
 3675              		.loc 1 489 17 is_stmt 1 view .LVU1193
 3676              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 3677              		.loc 1 489 9 is_stmt 0 view .LVU1194
 3678 16da 4883F903 		cmp	rcx, 3	# word,
 3679 16de 0F87EC00 		ja	.L438	#,
 3679      0000
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3680              		.loc 1 485 9 is_stmt 1 view .LVU1195
 486:sieve_extend.c ****             index += step;
 3681              		.loc 1 486 13 view .LVU1196
GAS LISTING /tmp/ccgH0yRS.s 			page 109


 3682              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3683              		.loc 1 487 19 is_stmt 0 view .LVU1197
 3684 16e4 4883C601 		add	rsi, 1	# range_start,
 3685              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3686              		.loc 1 486 31 view .LVU1198
 3687 16e8 C4C2B1F7 		shlx	rax, r10, r9	# tmp416, tmp266, range_start
 3687      C2
 3688              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3689              		.loc 1 488 20 view .LVU1199
 3690 16ed 4989F7   		mov	r15, rsi	# tmp417, range_start
 3691              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3692              		.loc 1 486 28 view .LVU1200
 3693 16f0 480944CC 		or	QWORD PTR 96[rsp+rcx*8], rax	# quadmask, tmp416
 3693      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3694              		.loc 1 487 13 is_stmt 1 view .LVU1201
 3695              	.LVL138:
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3696              		.loc 1 488 13 view .LVU1202
 3697              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3698              		.loc 1 488 20 is_stmt 0 view .LVU1203
 3699 16f5 49C1EF06 		shr	r15, 6	# tmp417,
 3700              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3701              		.loc 1 488 18 view .LVU1204
 3702 16f9 4D29F7   		sub	r15, r14	# word, current_vector_start_word
 489:sieve_extend.c ****         
 3703              		.loc 1 489 17 is_stmt 1 view .LVU1205
 3704              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 3705              		.loc 1 489 9 is_stmt 0 view .LVU1206
 3706 16fc 4983FF03 		cmp	r15, 3	# word,
 3707 1700 0F87CA00 		ja	.L438	#,
 3707      0000
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3708              		.loc 1 485 9 is_stmt 1 view .LVU1207
 486:sieve_extend.c ****             index += step;
 3709              		.loc 1 486 13 view .LVU1208
 3710              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3711              		.loc 1 486 31 is_stmt 0 view .LVU1209
 3712 1706 C4C2C9F7 		shlx	rsi, r10, rsi	# tmp419, tmp266, range_start
 3712      F2
 3713              	.LVL139:
 3714              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3715              		.loc 1 486 28 view .LVU1210
 3716 170b 4A0974FC 		or	QWORD PTR 96[rsp+r15*8], rsi	# quadmask, tmp419
 3716      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3717              		.loc 1 487 13 is_stmt 1 view .LVU1211
 3718              	.LVL140:
GAS LISTING /tmp/ccgH0yRS.s 			page 110


 3719              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3720              		.loc 1 487 19 is_stmt 0 view .LVU1212
 3721 1710 498D7102 		lea	rsi, 2[r9]	# range_start,
 3722              	.LVL141:
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3723              		.loc 1 488 13 is_stmt 1 view .LVU1213
 3724              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3725              		.loc 1 488 20 is_stmt 0 view .LVU1214
 3726 1714 4989F5   		mov	r13, rsi	# tmp420, range_start
 3727 1717 49C1ED06 		shr	r13, 6	# tmp420,
 3728              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3729              		.loc 1 488 18 view .LVU1215
 3730 171b 4D29F5   		sub	r13, r14	# word, current_vector_start_word
 489:sieve_extend.c ****         
 3731              		.loc 1 489 17 is_stmt 1 view .LVU1216
 3732              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 3733              		.loc 1 489 9 is_stmt 0 view .LVU1217
 3734 171e 4983FD03 		cmp	r13, 3	# word,
 3735 1722 0F87A800 		ja	.L438	#,
 3735      0000
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3736              		.loc 1 485 9 is_stmt 1 view .LVU1218
 486:sieve_extend.c ****             index += step;
 3737              		.loc 1 486 13 view .LVU1219
 3738              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3739              		.loc 1 486 31 is_stmt 0 view .LVU1220
 3740 1728 C442C9F7 		shlx	r12, r10, rsi	# tmp422, tmp266, range_start
 3740      E2
 3741              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3742              		.loc 1 487 19 view .LVU1221
 3743 172d 498D7103 		lea	rsi, 3[r9]	# range_start,
 3744              	.LVL142:
 3745              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3746              		.loc 1 488 20 view .LVU1222
 3747 1731 4889F1   		mov	rcx, rsi	# tmp423, range_start
 3748              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3749              		.loc 1 486 28 view .LVU1223
 3750 1734 4E0964EC 		or	QWORD PTR 96[rsp+r13*8], r12	# quadmask, tmp422
 3750      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3751              		.loc 1 487 13 is_stmt 1 view .LVU1224
 3752              	.LVL143:
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3753              		.loc 1 488 13 view .LVU1225
 3754              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3755              		.loc 1 488 20 is_stmt 0 view .LVU1226
 3756 1739 48C1E906 		shr	rcx, 6	# tmp423,
 3757              	.LVL144:
GAS LISTING /tmp/ccgH0yRS.s 			page 111


 3758              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3759              		.loc 1 488 18 view .LVU1227
 3760 173d 4C29F1   		sub	rcx, r14	# word, current_vector_start_word
 489:sieve_extend.c ****         
 3761              		.loc 1 489 17 is_stmt 1 view .LVU1228
 3762              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 3763              		.loc 1 489 9 is_stmt 0 view .LVU1229
 3764 1740 4883F903 		cmp	rcx, 3	# word,
 3765 1744 0F878600 		ja	.L438	#,
 3765      0000
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3766              		.loc 1 485 9 is_stmt 1 view .LVU1230
 486:sieve_extend.c ****             index += step;
 3767              		.loc 1 486 13 view .LVU1231
 3768              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3769              		.loc 1 486 31 is_stmt 0 view .LVU1232
 3770 174a C4C2C9F7 		shlx	rax, r10, rsi	# tmp425, tmp266, range_start
 3770      C2
 3771              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3772              		.loc 1 487 19 view .LVU1233
 3773 174f 498D7104 		lea	rsi, 4[r9]	# range_start,
 3774              	.LVL145:
 3775              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3776              		.loc 1 488 20 view .LVU1234
 3777 1753 4989F7   		mov	r15, rsi	# tmp426, range_start
 3778              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3779              		.loc 1 486 28 view .LVU1235
 3780 1756 480944CC 		or	QWORD PTR 96[rsp+rcx*8], rax	# quadmask, tmp425
 3780      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3781              		.loc 1 487 13 is_stmt 1 view .LVU1236
 3782              	.LVL146:
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3783              		.loc 1 488 13 view .LVU1237
 3784              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3785              		.loc 1 488 20 is_stmt 0 view .LVU1238
 3786 175b 49C1EF06 		shr	r15, 6	# tmp426,
 3787              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3788              		.loc 1 488 18 view .LVU1239
 3789 175f 4D29F7   		sub	r15, r14	# word, current_vector_start_word
 489:sieve_extend.c ****         
 3790              		.loc 1 489 17 is_stmt 1 view .LVU1240
 3791              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 3792              		.loc 1 489 9 is_stmt 0 view .LVU1241
 3793 1762 4983FF03 		cmp	r15, 3	# word,
 3794 1766 7768     		ja	.L438	#,
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3795              		.loc 1 485 9 is_stmt 1 view .LVU1242
GAS LISTING /tmp/ccgH0yRS.s 			page 112


 486:sieve_extend.c ****             index += step;
 3796              		.loc 1 486 13 view .LVU1243
 3797              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3798              		.loc 1 486 31 is_stmt 0 view .LVU1244
 3799 1768 C4C2C9F7 		shlx	rsi, r10, rsi	# tmp428, tmp266, range_start
 3799      F2
 3800              	.LVL147:
 3801              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3802              		.loc 1 486 28 view .LVU1245
 3803 176d 4A0974FC 		or	QWORD PTR 96[rsp+r15*8], rsi	# quadmask, tmp428
 3803      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3804              		.loc 1 487 13 is_stmt 1 view .LVU1246
 3805              	.LVL148:
 3806              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3807              		.loc 1 487 19 is_stmt 0 view .LVU1247
 3808 1772 498D7105 		lea	rsi, 5[r9]	# range_start,
 3809              	.LVL149:
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3810              		.loc 1 488 13 is_stmt 1 view .LVU1248
 3811              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3812              		.loc 1 488 20 is_stmt 0 view .LVU1249
 3813 1776 4989F5   		mov	r13, rsi	# tmp429, range_start
 3814 1779 49C1ED06 		shr	r13, 6	# tmp429,
 3815              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3816              		.loc 1 488 18 view .LVU1250
 3817 177d 4D29F5   		sub	r13, r14	# word, current_vector_start_word
 489:sieve_extend.c ****         
 3818              		.loc 1 489 17 is_stmt 1 view .LVU1251
 3819              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 3820              		.loc 1 489 9 is_stmt 0 view .LVU1252
 3821 1780 4983FD03 		cmp	r13, 3	# word,
 3822 1784 774A     		ja	.L438	#,
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3823              		.loc 1 485 9 is_stmt 1 view .LVU1253
 486:sieve_extend.c ****             index += step;
 3824              		.loc 1 486 13 view .LVU1254
 3825              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3826              		.loc 1 486 31 is_stmt 0 view .LVU1255
 3827 1786 C442C9F7 		shlx	r12, r10, rsi	# tmp431, tmp266, range_start
 3827      E2
 3828              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3829              		.loc 1 487 19 view .LVU1256
 3830 178b 498D7106 		lea	rsi, 6[r9]	# range_start,
 3831              	.LVL150:
 3832              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3833              		.loc 1 488 20 view .LVU1257
 3834 178f 4889F1   		mov	rcx, rsi	# tmp432, range_start
GAS LISTING /tmp/ccgH0yRS.s 			page 113


 3835              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3836              		.loc 1 486 28 view .LVU1258
 3837 1792 4E0964EC 		or	QWORD PTR 96[rsp+r13*8], r12	# quadmask, tmp431
 3837      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3838              		.loc 1 487 13 is_stmt 1 view .LVU1259
 3839              	.LVL151:
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3840              		.loc 1 488 13 view .LVU1260
 3841              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3842              		.loc 1 488 20 is_stmt 0 view .LVU1261
 3843 1797 48C1E906 		shr	rcx, 6	# tmp432,
 3844              	.LVL152:
 3845              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3846              		.loc 1 488 18 view .LVU1262
 3847 179b 4C29F1   		sub	rcx, r14	# word, current_vector_start_word
 489:sieve_extend.c ****         
 3848              		.loc 1 489 17 is_stmt 1 view .LVU1263
 3849              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 3850              		.loc 1 489 9 is_stmt 0 view .LVU1264
 3851 179e 4883F903 		cmp	rcx, 3	# word,
 3852 17a2 772C     		ja	.L438	#,
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 3853              		.loc 1 485 9 is_stmt 1 view .LVU1265
 486:sieve_extend.c ****             index += step;
 3854              		.loc 1 486 13 view .LVU1266
 3855              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3856              		.loc 1 486 31 is_stmt 0 view .LVU1267
 3857 17a4 C4C2C9F7 		shlx	rax, r10, rsi	# tmp434, tmp266, range_start
 3857      C2
 3858              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3859              		.loc 1 487 19 view .LVU1268
 3860 17a9 498D7107 		lea	rsi, 7[r9]	# range_start,
 3861              	.LVL153:
 3862              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3863              		.loc 1 488 20 view .LVU1269
 3864 17ad 4989F1   		mov	r9, rsi	# tmp435, range_start
 3865              	.LVL154:
 3866              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 3867              		.loc 1 486 28 view .LVU1270
 3868 17b0 480944CC 		or	QWORD PTR 96[rsp+rcx*8], rax	# quadmask, tmp434
 3868      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3869              		.loc 1 487 13 is_stmt 1 view .LVU1271
 3870              	.LVL155:
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3871              		.loc 1 488 13 view .LVU1272
 3872              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
GAS LISTING /tmp/ccgH0yRS.s 			page 114


 3873              		.loc 1 488 20 is_stmt 0 view .LVU1273
 3874 17b5 49C1E906 		shr	r9, 6	# tmp435,
 3875              	.LVL156:
 3876              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3877              		.loc 1 488 18 view .LVU1274
 3878 17b9 4D29F1   		sub	r9, r14	# word, current_vector_start_word
 3879              	.LVL157:
 489:sieve_extend.c ****         
 3880              		.loc 1 489 17 is_stmt 1 view .LVU1275
 3881              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 3882              		.loc 1 489 9 is_stmt 0 view .LVU1276
 3883 17bc 4983F903 		cmp	r9, 3	# word,
 3884 17c0 0F86F9FE 		jbe	.L285	#,
 3884      FFFF
 3885              	.LVL158:
 3886 17c6 662E0F1F 		.p2align 4
 3886      84000000 
 3886      0000
 3887              		.p2align 3
 3888              	.L438:
 492:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 3889              		.loc 1 492 9 is_stmt 1 view .LVU1277
 493:sieve_extend.c ****         
 3890              		.loc 1 493 9 view .LVU1278
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3891              		.loc 1 507 9 view .LVU1279
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3892              		.loc 1 507 15 view .LVU1280
 3893              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3894              		.loc 1 507 29 is_stmt 0 view .LVU1281
 3895 17d0 4C8D7204 		lea	r14, 4[rdx]	# ivtmp.267,
 3896              	.LVL159:
 3897              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3898              		.loc 1 507 9 view .LVU1282
 3899 17d4 4D39F0   		cmp	r8, r14	# range_stop_vector, ivtmp.267
 3900 17d7 0F861202 		jbe	.L286	#,
 3900      0000
 3901 17dd 4D89F5   		mov	r13, r14	# tmp301, ivtmp.267
 3902 17e0 4D8D6604 		lea	r12, 4[r14]	# ivtmp.267,
 3903 17e4 48C1E205 		sal	rdx, 5	# tmp268,
 3904              	.LVL160:
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3905              		.loc 1 507 9 view .LVU1283
 3906 17e8 49F7D5   		not	r13	# tmp301
 3907              	.LVL161:
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3908              		.loc 1 507 9 view .LVU1284
 3909 17eb 4D01C5   		add	r13, r8	# tmp302, range_stop_vector
 3910 17ee 4C8D3C17 		lea	r15, [rdi+rdx]	# ivtmp.268,
 3911              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3912              		.loc 1 508 52 view .LVU1285
 3913 17f2 C57D6F5C 		vmovdqa	ymm11, YMMWORD PTR 96[rsp]	# quadmask.57_218, quadmask
GAS LISTING /tmp/ccgH0yRS.s 			page 115


 3913      2460
 3914 17f8 4C89F2   		mov	rdx, r14	# ivtmp.267, ivtmp.267
 3915 17fb 49C1ED02 		shr	r13, 2	# tmp300,
 3916 17ff C44125EB 		vpor	ymm12, ymm11, YMMWORD PTR [r15]	# tmp269, quadmask.57_218, MEM[base: _246, offset: 0B]
 3916      27
 3917              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3918              		.loc 1 509 52 view .LVU1286
 3919 1804 C44125EB 		vpor	ymm13, ymm11, YMMWORD PTR 32[r15]	# tmp270, quadmask.57_218, MEM[base: _246, offset: 32B]
 3919      6F20
 3920 180a 4183E503 		and	r13d, 3	# tmp303,
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3921              		.loc 1 508 13 is_stmt 1 view .LVU1287
 3922              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3923              		.loc 1 510 52 is_stmt 0 view .LVU1288
 3924 180e C44125EB 		vpor	ymm14, ymm11, YMMWORD PTR 64[r15]	# tmp271, quadmask.57_218, MEM[base: _246, offset: 64B]
 3924      7740
 3925              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 3926              		.loc 1 511 52 view .LVU1289
 3927 1814 C44125EB 		vpor	ymm15, ymm11, YMMWORD PTR 96[r15]	# tmp272, quadmask.57_218, MEM[base: _246, offset: 96B]
 3927      7F60
 3928              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3929              		.loc 1 507 9 view .LVU1290
 3930 181a 4D39C4   		cmp	r12, r8	# ivtmp.267, range_stop_vector
 3931 181d 498D8F80 		lea	rcx, 128[r15]	# ivtmp.268,
 3931      000000
 3932              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3933              		.loc 1 508 52 view .LVU1291
 3934 1824 C4417D7F 		vmovdqa	YMMWORD PTR [r15], ymm12	# MEM[base: _246, offset: 0B], tmp269
 3934      27
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3935              		.loc 1 509 13 is_stmt 1 view .LVU1292
 3936              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3937              		.loc 1 509 52 is_stmt 0 view .LVU1293
 3938 1829 C4417D7F 		vmovdqa	YMMWORD PTR 32[r15], ymm13	# MEM[base: _246, offset: 32B], tmp270
 3938      6F20
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3939              		.loc 1 510 13 is_stmt 1 view .LVU1294
 3940              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3941              		.loc 1 510 52 is_stmt 0 view .LVU1295
 3942 182f C4417D7F 		vmovdqa	YMMWORD PTR 64[r15], ymm14	# MEM[base: _246, offset: 64B], tmp271
 3942      7740
 511:sieve_extend.c ****         }
 3943              		.loc 1 511 13 is_stmt 1 view .LVU1296
 3944              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 3945              		.loc 1 511 52 is_stmt 0 view .LVU1297
 3946 1835 C4417D7F 		vmovdqa	YMMWORD PTR 96[r15], ymm15	# MEM[base: _246, offset: 96B], tmp272
 3946      7F60
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3947              		.loc 1 507 58 is_stmt 1 view .LVU1298
GAS LISTING /tmp/ccgH0yRS.s 			page 116


 3948              	.LVL162:
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3949              		.loc 1 507 15 view .LVU1299
 3950              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3951              		.loc 1 507 9 is_stmt 0 view .LVU1300
 3952 183b 0F83AE01 		jnb	.L286	#,
 3952      0000
 3953 1841 4D85ED   		test	r13, r13	# tmp303
 3954 1844 0F84AF00 		je	.L287	#,
 3954      0000
 3955 184a 4983FD01 		cmp	r13, 1	# tmp303,
 3956 184e 746F     		je	.L398	#,
 3957 1850 4983FD02 		cmp	r13, 2	# tmp303,
 3958 1854 743B     		je	.L399	#,
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3959              		.loc 1 508 13 is_stmt 1 view .LVU1301
 3960              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3961              		.loc 1 508 52 is_stmt 0 view .LVU1302
 3962 1856 C4C125EB 		vpor	ymm0, ymm11, YMMWORD PTR 128[r15]	# tmp402, quadmask.57_218, MEM[base: _246, offset: 0B]
 3962      87800000 
 3962      00
 3963 185f 4D8D6608 		lea	r12, 8[r14]	# ivtmp.267,
 3964 1863 C4C17D7F 		vmovdqa	YMMWORD PTR 128[r15], ymm0	# MEM[base: _246, offset: 0B], tmp402
 3964      87800000 
 3964      00
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3965              		.loc 1 509 13 is_stmt 1 view .LVU1303
 3966              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3967              		.loc 1 509 52 is_stmt 0 view .LVU1304
 3968 186c C5A5EB49 		vpor	ymm1, ymm11, YMMWORD PTR 32[rcx]	# tmp403, quadmask.57_218, MEM[base: _246, offset: 32B]
 3968      20
 3969              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3970              		.loc 1 510 52 view .LVU1305
 3971 1871 C5A5EB59 		vpor	ymm3, ymm11, YMMWORD PTR 64[rcx]	# tmp404, quadmask.57_218, MEM[base: _246, offset: 64B]
 3971      40
 3972              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3973              		.loc 1 509 52 view .LVU1306
 3974 1876 C5FD7F49 		vmovdqa	YMMWORD PTR 32[rcx], ymm1	# MEM[base: _246, offset: 32B], tmp403
 3974      20
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3975              		.loc 1 510 13 is_stmt 1 view .LVU1307
 3976              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 3977              		.loc 1 511 52 is_stmt 0 view .LVU1308
 3978 187b C5A5EB61 		vpor	ymm4, ymm11, YMMWORD PTR 96[rcx]	# tmp405, quadmask.57_218, MEM[base: _246, offset: 96B]
 3978      60
 3979              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3980              		.loc 1 510 52 view .LVU1309
 3981 1880 C5FD7F59 		vmovdqa	YMMWORD PTR 64[rcx], ymm3	# MEM[base: _246, offset: 64B], tmp404
 3981      40
 511:sieve_extend.c ****         }
GAS LISTING /tmp/ccgH0yRS.s 			page 117


 3982              		.loc 1 511 13 is_stmt 1 view .LVU1310
 3983              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 3984              		.loc 1 511 52 is_stmt 0 view .LVU1311
 3985 1885 C5FD7F61 		vmovdqa	YMMWORD PTR 96[rcx], ymm4	# MEM[base: _246, offset: 96B], tmp405
 3985      60
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3986              		.loc 1 507 58 is_stmt 1 view .LVU1312
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 3987              		.loc 1 507 15 view .LVU1313
 3988 188a 498D8F00 		lea	rcx, 256[r15]	# ivtmp.268,
 3988      010000
 3989              	.L399:
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3990              		.loc 1 508 13 view .LVU1314
 3991              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 3992              		.loc 1 508 52 is_stmt 0 view .LVU1315
 3993 1891 C5A5EB29 		vpor	ymm5, ymm11, YMMWORD PTR [rcx]	# tmp407, quadmask.57_218, MEM[base: _246, offset: 0B]
 3994              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 3995              		.loc 1 509 52 view .LVU1316
 3996 1895 C5A5EB71 		vpor	ymm6, ymm11, YMMWORD PTR 32[rcx]	# tmp408, quadmask.57_218, MEM[base: _246, offset: 32B]
 3996      20
 3997              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 3998              		.loc 1 510 52 view .LVU1317
 3999 189a C5A5EB79 		vpor	ymm7, ymm11, YMMWORD PTR 64[rcx]	# tmp409, quadmask.57_218, MEM[base: _246, offset: 64B]
 3999      40
 4000              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4001              		.loc 1 511 52 view .LVU1318
 4002 189f C525EB41 		vpor	ymm8, ymm11, YMMWORD PTR 96[rcx]	# tmp410, quadmask.57_218, MEM[base: _246, offset: 96B]
 4002      60
 4003              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4004              		.loc 1 508 52 view .LVU1319
 4005 18a4 C5FD7F29 		vmovdqa	YMMWORD PTR [rcx], ymm5	# MEM[base: _246, offset: 0B], tmp407
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4006              		.loc 1 509 13 is_stmt 1 view .LVU1320
 4007 18a8 4983C404 		add	r12, 4	# ivtmp.267,
 4008              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4009              		.loc 1 509 52 is_stmt 0 view .LVU1321
 4010 18ac C5FD7F71 		vmovdqa	YMMWORD PTR 32[rcx], ymm6	# MEM[base: _246, offset: 32B], tmp408
 4010      20
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4011              		.loc 1 510 13 is_stmt 1 view .LVU1322
 4012 18b1 4883E980 		sub	rcx, -128	# ivtmp.268,
 4013              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4014              		.loc 1 510 52 is_stmt 0 view .LVU1323
 4015 18b5 C5FD7F79 		vmovdqa	YMMWORD PTR -64[rcx], ymm7	# MEM[base: _246, offset: 64B], tmp409
 4015      C0
 511:sieve_extend.c ****         }
 4016              		.loc 1 511 13 is_stmt 1 view .LVU1324
 4017              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
GAS LISTING /tmp/ccgH0yRS.s 			page 118


 511:sieve_extend.c ****         }
 4018              		.loc 1 511 52 is_stmt 0 view .LVU1325
 4019 18ba C57D7F41 		vmovdqa	YMMWORD PTR -32[rcx], ymm8	# MEM[base: _246, offset: 96B], tmp410
 4019      E0
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4020              		.loc 1 507 58 is_stmt 1 view .LVU1326
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4021              		.loc 1 507 15 view .LVU1327
 4022              	.L398:
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4023              		.loc 1 508 13 view .LVU1328
 4024              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4025              		.loc 1 508 52 is_stmt 0 view .LVU1329
 4026 18bf C525EB09 		vpor	ymm9, ymm11, YMMWORD PTR [rcx]	# tmp412, quadmask.57_218, MEM[base: _246, offset: 0B]
 4027              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4028              		.loc 1 509 52 view .LVU1330
 4029 18c3 C525EB51 		vpor	ymm10, ymm11, YMMWORD PTR 32[rcx]	# tmp413, quadmask.57_218, MEM[base: _246, offset: 32B]
 4029      20
 4030              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4031              		.loc 1 510 52 view .LVU1331
 4032 18c8 C525EB61 		vpor	ymm12, ymm11, YMMWORD PTR 64[rcx]	# tmp414, quadmask.57_218, MEM[base: _246, offset: 64B]
 4032      40
 4033              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4034              		.loc 1 511 52 view .LVU1332
 4035 18cd C525EB69 		vpor	ymm13, ymm11, YMMWORD PTR 96[rcx]	# tmp415, quadmask.57_218, MEM[base: _246, offset: 96B]
 4035      60
 4036 18d2 4C89E2   		mov	rdx, r12	# ivtmp.267, ivtmp.267
 4037 18d5 4983C404 		add	r12, 4	# ivtmp.267,
 4038              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4039              		.loc 1 508 52 view .LVU1333
 4040 18d9 C57D7F09 		vmovdqa	YMMWORD PTR [rcx], ymm9	# MEM[base: _246, offset: 0B], tmp412
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4041              		.loc 1 509 13 is_stmt 1 view .LVU1334
 4042 18dd 4883E980 		sub	rcx, -128	# ivtmp.268,
 4043              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4044              		.loc 1 509 52 is_stmt 0 view .LVU1335
 4045 18e1 C57D7F51 		vmovdqa	YMMWORD PTR -96[rcx], ymm10	# MEM[base: _246, offset: 32B], tmp413
 4045      A0
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4046              		.loc 1 510 13 is_stmt 1 view .LVU1336
 4047              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4048              		.loc 1 510 52 is_stmt 0 view .LVU1337
 4049 18e6 C57D7F61 		vmovdqa	YMMWORD PTR -64[rcx], ymm12	# MEM[base: _246, offset: 64B], tmp414
 4049      C0
 511:sieve_extend.c ****         }
 4050              		.loc 1 511 13 is_stmt 1 view .LVU1338
 4051              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4052              		.loc 1 511 52 is_stmt 0 view .LVU1339
 4053 18eb C57D7F69 		vmovdqa	YMMWORD PTR -32[rcx], ymm13	# MEM[base: _246, offset: 96B], tmp415
GAS LISTING /tmp/ccgH0yRS.s 			page 119


 4053      E0
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4054              		.loc 1 507 58 is_stmt 1 view .LVU1340
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4055              		.loc 1 507 15 view .LVU1341
 4056              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4057              		.loc 1 507 9 is_stmt 0 view .LVU1342
 4058 18f0 4D39C4   		cmp	r12, r8	# ivtmp.267, range_stop_vector
 4059 18f3 0F83F600 		jnb	.L286	#,
 4059      0000
 4060              	.L287:
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4061              		.loc 1 508 13 is_stmt 1 view .LVU1343
 4062              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4063              		.loc 1 508 52 is_stmt 0 view .LVU1344
 4064 18f9 C525EB31 		vpor	ymm14, ymm11, YMMWORD PTR [rcx]	# tmp315, quadmask.57_218, MEM[base: _246, offset: 0B]
 4065              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4066              		.loc 1 509 52 view .LVU1345
 4067 18fd C525EB79 		vpor	ymm15, ymm11, YMMWORD PTR 32[rcx]	# tmp316, quadmask.57_218, MEM[base: _246, offset: 32B]
 4067      20
 4068              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4069              		.loc 1 508 52 view .LVU1346
 4070 1902 C57D7F31 		vmovdqa	YMMWORD PTR [rcx], ymm14	# MEM[base: _246, offset: 0B], tmp315
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4071              		.loc 1 509 13 is_stmt 1 view .LVU1347
 4072              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4073              		.loc 1 510 52 is_stmt 0 view .LVU1348
 4074 1906 C5A5EB41 		vpor	ymm0, ymm11, YMMWORD PTR 64[rcx]	# tmp317, quadmask.57_218, MEM[base: _246, offset: 64B]
 4074      40
 4075              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4076              		.loc 1 511 52 view .LVU1349
 4077 190b C5A5EB49 		vpor	ymm1, ymm11, YMMWORD PTR 96[rcx]	# tmp318, quadmask.57_218, MEM[base: _246, offset: 96B]
 4077      60
 4078              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4079              		.loc 1 508 52 view .LVU1350
 4080 1910 C5A5EB99 		vpor	ymm3, ymm11, YMMWORD PTR 128[rcx]	# tmp322, quadmask.57_218, MEM[base: _246, offset: 0B]
 4080      80000000 
 4081              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4082              		.loc 1 509 52 view .LVU1351
 4083 1918 C5A5EBA1 		vpor	ymm4, ymm11, YMMWORD PTR 160[rcx]	# tmp323, quadmask.57_218, MEM[base: _246, offset: 32B]
 4083      A0000000 
 4084              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4085              		.loc 1 510 52 view .LVU1352
 4086 1920 C5A5EBA9 		vpor	ymm5, ymm11, YMMWORD PTR 192[rcx]	# tmp324, quadmask.57_218, MEM[base: _246, offset: 64B]
 4086      C0000000 
 4087              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4088              		.loc 1 511 52 view .LVU1353
GAS LISTING /tmp/ccgH0yRS.s 			page 120


 4089 1928 C5A5EBB1 		vpor	ymm6, ymm11, YMMWORD PTR 224[rcx]	# tmp325, quadmask.57_218, MEM[base: _246, offset: 96B]
 4089      E0000000 
 4090              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4091              		.loc 1 508 52 view .LVU1354
 4092 1930 C5A5EBB9 		vpor	ymm7, ymm11, YMMWORD PTR 256[rcx]	# tmp329, quadmask.57_218, MEM[base: _246, offset: 0B]
 4092      00010000 
 4093              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4094              		.loc 1 509 52 view .LVU1355
 4095 1938 C525EB81 		vpor	ymm8, ymm11, YMMWORD PTR 288[rcx]	# tmp330, quadmask.57_218, MEM[base: _246, offset: 32B]
 4095      20010000 
 4096              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4097              		.loc 1 510 52 view .LVU1356
 4098 1940 C525EB89 		vpor	ymm9, ymm11, YMMWORD PTR 320[rcx]	# tmp331, quadmask.57_218, MEM[base: _246, offset: 64B]
 4098      40010000 
 4099              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4100              		.loc 1 511 52 view .LVU1357
 4101 1948 C525EB91 		vpor	ymm10, ymm11, YMMWORD PTR 352[rcx]	# tmp332, quadmask.57_218, MEM[base: _246, offset: 96B]
 4101      60010000 
 4102              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4103              		.loc 1 508 52 view .LVU1358
 4104 1950 C525EBA1 		vpor	ymm12, ymm11, YMMWORD PTR 384[rcx]	# tmp336, quadmask.57_218, MEM[base: _246, offset: 0B]
 4104      80010000 
 4105              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4106              		.loc 1 509 52 view .LVU1359
 4107 1958 C525EBA9 		vpor	ymm13, ymm11, YMMWORD PTR 416[rcx]	# tmp337, quadmask.57_218, MEM[base: _246, offset: 32B]
 4107      A0010000 
 4108              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4109              		.loc 1 510 52 view .LVU1360
 4110 1960 C525EBB1 		vpor	ymm14, ymm11, YMMWORD PTR 448[rcx]	# tmp338, quadmask.57_218, MEM[base: _246, offset: 64B]
 4110      C0010000 
 4111 1968 498D5424 		lea	rdx, 12[r12]	# ivtmp.267,
 4111      0C
 4112 196d 4983C410 		add	r12, 16	# ivtmp.267,
 4113              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4114              		.loc 1 509 52 view .LVU1361
 4115 1971 C57D7F79 		vmovdqa	YMMWORD PTR 32[rcx], ymm15	# MEM[base: _246, offset: 32B], tmp316
 4115      20
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4116              		.loc 1 510 13 is_stmt 1 view .LVU1362
 4117              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4118              		.loc 1 511 52 is_stmt 0 view .LVU1363
 4119 1976 C525EBB9 		vpor	ymm15, ymm11, YMMWORD PTR 480[rcx]	# tmp339, quadmask.57_218, MEM[base: _246, offset: 96B]
 4119      E0010000 
 4120              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4121              		.loc 1 510 52 view .LVU1364
 4122 197e C5FD7F41 		vmovdqa	YMMWORD PTR 64[rcx], ymm0	# MEM[base: _246, offset: 64B], tmp317
 4122      40
GAS LISTING /tmp/ccgH0yRS.s 			page 121


 511:sieve_extend.c ****         }
 4123              		.loc 1 511 13 is_stmt 1 view .LVU1365
 4124 1983 4881C100 		add	rcx, 512	# ivtmp.268,
 4124      020000
 4125              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4126              		.loc 1 511 52 is_stmt 0 view .LVU1366
 4127 198a C5FD7F89 		vmovdqa	YMMWORD PTR -416[rcx], ymm1	# MEM[base: _246, offset: 96B], tmp318
 4127      60FEFFFF 
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4128              		.loc 1 507 58 is_stmt 1 view .LVU1367
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4129              		.loc 1 507 15 view .LVU1368
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4130              		.loc 1 508 13 view .LVU1369
 4131              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4132              		.loc 1 508 52 is_stmt 0 view .LVU1370
 4133 1992 C5FD7F99 		vmovdqa	YMMWORD PTR -384[rcx], ymm3	# MEM[base: _246, offset: 0B], tmp322
 4133      80FEFFFF 
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4134              		.loc 1 509 13 is_stmt 1 view .LVU1371
 4135              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4136              		.loc 1 509 52 is_stmt 0 view .LVU1372
 4137 199a C5FD7FA1 		vmovdqa	YMMWORD PTR -352[rcx], ymm4	# MEM[base: _246, offset: 32B], tmp323
 4137      A0FEFFFF 
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4138              		.loc 1 510 13 is_stmt 1 view .LVU1373
 4139              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4140              		.loc 1 510 52 is_stmt 0 view .LVU1374
 4141 19a2 C5FD7FA9 		vmovdqa	YMMWORD PTR -320[rcx], ymm5	# MEM[base: _246, offset: 64B], tmp324
 4141      C0FEFFFF 
 511:sieve_extend.c ****         }
 4142              		.loc 1 511 13 is_stmt 1 view .LVU1375
 4143              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4144              		.loc 1 511 52 is_stmt 0 view .LVU1376
 4145 19aa C5FD7FB1 		vmovdqa	YMMWORD PTR -288[rcx], ymm6	# MEM[base: _246, offset: 96B], tmp325
 4145      E0FEFFFF 
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4146              		.loc 1 507 58 is_stmt 1 view .LVU1377
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4147              		.loc 1 507 15 view .LVU1378
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4148              		.loc 1 508 13 view .LVU1379
 4149              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4150              		.loc 1 508 52 is_stmt 0 view .LVU1380
 4151 19b2 C5FD7FB9 		vmovdqa	YMMWORD PTR -256[rcx], ymm7	# MEM[base: _246, offset: 0B], tmp329
 4151      00FFFFFF 
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4152              		.loc 1 509 13 is_stmt 1 view .LVU1381
 4153              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4154              		.loc 1 509 52 is_stmt 0 view .LVU1382
GAS LISTING /tmp/ccgH0yRS.s 			page 122


 4155 19ba C57D7F81 		vmovdqa	YMMWORD PTR -224[rcx], ymm8	# MEM[base: _246, offset: 32B], tmp330
 4155      20FFFFFF 
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4156              		.loc 1 510 13 is_stmt 1 view .LVU1383
 4157              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4158              		.loc 1 510 52 is_stmt 0 view .LVU1384
 4159 19c2 C57D7F89 		vmovdqa	YMMWORD PTR -192[rcx], ymm9	# MEM[base: _246, offset: 64B], tmp331
 4159      40FFFFFF 
 511:sieve_extend.c ****         }
 4160              		.loc 1 511 13 is_stmt 1 view .LVU1385
 4161              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4162              		.loc 1 511 52 is_stmt 0 view .LVU1386
 4163 19ca C57D7F91 		vmovdqa	YMMWORD PTR -160[rcx], ymm10	# MEM[base: _246, offset: 96B], tmp332
 4163      60FFFFFF 
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4164              		.loc 1 507 58 is_stmt 1 view .LVU1387
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4165              		.loc 1 507 15 view .LVU1388
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4166              		.loc 1 508 13 view .LVU1389
 4167              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4168              		.loc 1 508 52 is_stmt 0 view .LVU1390
 4169 19d2 C57D7F61 		vmovdqa	YMMWORD PTR -128[rcx], ymm12	# MEM[base: _246, offset: 0B], tmp336
 4169      80
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4170              		.loc 1 509 13 is_stmt 1 view .LVU1391
 4171              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4172              		.loc 1 509 52 is_stmt 0 view .LVU1392
 4173 19d7 C57D7F69 		vmovdqa	YMMWORD PTR -96[rcx], ymm13	# MEM[base: _246, offset: 32B], tmp337
 4173      A0
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4174              		.loc 1 510 13 is_stmt 1 view .LVU1393
 4175              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4176              		.loc 1 510 52 is_stmt 0 view .LVU1394
 4177 19dc C57D7F71 		vmovdqa	YMMWORD PTR -64[rcx], ymm14	# MEM[base: _246, offset: 64B], tmp338
 4177      C0
 511:sieve_extend.c ****         }
 4178              		.loc 1 511 13 is_stmt 1 view .LVU1395
 4179              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4180              		.loc 1 511 52 is_stmt 0 view .LVU1396
 4181 19e1 C57D7F79 		vmovdqa	YMMWORD PTR -32[rcx], ymm15	# MEM[base: _246, offset: 96B], tmp339
 4181      E0
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4182              		.loc 1 507 58 is_stmt 1 view .LVU1397
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4183              		.loc 1 507 15 view .LVU1398
 4184              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4185              		.loc 1 507 9 is_stmt 0 view .LVU1399
 4186 19e6 4D39C4   		cmp	r12, r8	# ivtmp.267, range_stop_vector
 4187 19e9 0F820AFF 		jb	.L287	#,
GAS LISTING /tmp/ccgH0yRS.s 			page 123


 4187      FFFF
 4188              	.LVL163:
 4189              	.L286:
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4190              		.loc 1 515 15 is_stmt 1 view .LVU1400
 4191              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4192              		.loc 1 515 9 is_stmt 0 view .LVU1401
 4193 19ef 4939D0   		cmp	r8, rdx	# range_stop_vector, ivtmp.267
 4194 19f2 0F86A101 		jbe	.L288	#,
 4194      0000
 4195 19f8 4889D0   		mov	rax, rdx	# tmp273, ivtmp.267
 4196 19fb 4D89C1   		mov	r9, r8	# tmp296, range_stop_vector
 4197 19fe 48C1E005 		sal	rax, 5	# tmp273,
 4198 1a02 4929D1   		sub	r9, rdx	# tmp296, ivtmp.267
 4199              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4200              		.loc 1 516 45 view .LVU1402
 4201 1a05 C57D6F5C 		vmovdqa	ymm11, YMMWORD PTR 96[rsp]	# quadmask.61_174, quadmask
 4201      2460
 4202 1a0b 4801F8   		add	rax, rdi	# ivtmp.278, bitarray_word
 4203 1a0e 4183E107 		and	r9d, 7	# tmp297,
 4204 1a12 0F849900 		je	.L289	#,
 4204      0000
 4205 1a18 4983F901 		cmp	r9, 1	# tmp297,
 4206 1a1c 747E     		je	.L386	#,
 4207 1a1e 4983F902 		cmp	r9, 2	# tmp297,
 4208 1a22 7468     		je	.L387	#,
 4209 1a24 4983F903 		cmp	r9, 3	# tmp297,
 4210 1a28 7452     		je	.L388	#,
 4211 1a2a 4983F904 		cmp	r9, 4	# tmp297,
 4212 1a2e 743C     		je	.L389	#,
 4213 1a30 4983F905 		cmp	r9, 5	# tmp297,
 4214 1a34 7426     		je	.L390	#,
 4215 1a36 4983F906 		cmp	r9, 6	# tmp297,
 4216 1a3a 7410     		je	.L391	#,
 516:sieve_extend.c ****         }
 4217              		.loc 1 516 13 is_stmt 1 view .LVU1403
 4218              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4219              		.loc 1 516 45 is_stmt 0 view .LVU1404
 4220 1a3c C5A5EB00 		vpor	ymm0, ymm11, YMMWORD PTR [rax]	# tmp395, quadmask.61_174, MEM[base: _263, offset: 0B]
 4221              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4222              		.loc 1 515 66 view .LVU1405
 4223 1a40 4883C201 		add	rdx, 1	# ivtmp.267,
 4224              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4225              		.loc 1 516 45 view .LVU1406
 4226 1a44 C5FD7F00 		vmovdqa	YMMWORD PTR [rax], ymm0	# MEM[base: _263, offset: 0B], tmp395
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4227              		.loc 1 515 51 is_stmt 1 view .LVU1407
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4228              		.loc 1 515 15 view .LVU1408
 4229 1a48 4883C020 		add	rax, 32	# ivtmp.278,
 4230              	.L391:
 516:sieve_extend.c ****         }
GAS LISTING /tmp/ccgH0yRS.s 			page 124


 4231              		.loc 1 516 13 view .LVU1409
 4232              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4233              		.loc 1 516 45 is_stmt 0 view .LVU1410
 4234 1a4c C5A5EB08 		vpor	ymm1, ymm11, YMMWORD PTR [rax]	# tmp396, quadmask.61_174, MEM[base: _263, offset: 0B]
 4235              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4236              		.loc 1 515 66 view .LVU1411
 4237 1a50 4883C201 		add	rdx, 1	# ivtmp.267,
 4238              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4239              		.loc 1 516 45 view .LVU1412
 4240 1a54 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: _263, offset: 0B], tmp396
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4241              		.loc 1 515 51 is_stmt 1 view .LVU1413
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4242              		.loc 1 515 15 view .LVU1414
 4243 1a58 4883C020 		add	rax, 32	# ivtmp.278,
 4244              	.L390:
 516:sieve_extend.c ****         }
 4245              		.loc 1 516 13 view .LVU1415
 4246              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4247              		.loc 1 516 45 is_stmt 0 view .LVU1416
 4248 1a5c C5A5EB18 		vpor	ymm3, ymm11, YMMWORD PTR [rax]	# tmp397, quadmask.61_174, MEM[base: _263, offset: 0B]
 4249              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4250              		.loc 1 515 66 view .LVU1417
 4251 1a60 4883C201 		add	rdx, 1	# ivtmp.267,
 4252              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4253              		.loc 1 516 45 view .LVU1418
 4254 1a64 C5FD7F18 		vmovdqa	YMMWORD PTR [rax], ymm3	# MEM[base: _263, offset: 0B], tmp397
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4255              		.loc 1 515 51 is_stmt 1 view .LVU1419
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4256              		.loc 1 515 15 view .LVU1420
 4257 1a68 4883C020 		add	rax, 32	# ivtmp.278,
 4258              	.L389:
 516:sieve_extend.c ****         }
 4259              		.loc 1 516 13 view .LVU1421
 4260              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4261              		.loc 1 516 45 is_stmt 0 view .LVU1422
 4262 1a6c C5A5EB20 		vpor	ymm4, ymm11, YMMWORD PTR [rax]	# tmp398, quadmask.61_174, MEM[base: _263, offset: 0B]
 4263              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4264              		.loc 1 515 66 view .LVU1423
 4265 1a70 4883C201 		add	rdx, 1	# ivtmp.267,
 4266              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4267              		.loc 1 516 45 view .LVU1424
 4268 1a74 C5FD7F20 		vmovdqa	YMMWORD PTR [rax], ymm4	# MEM[base: _263, offset: 0B], tmp398
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4269              		.loc 1 515 51 is_stmt 1 view .LVU1425
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4270              		.loc 1 515 15 view .LVU1426
GAS LISTING /tmp/ccgH0yRS.s 			page 125


 4271 1a78 4883C020 		add	rax, 32	# ivtmp.278,
 4272              	.L388:
 516:sieve_extend.c ****         }
 4273              		.loc 1 516 13 view .LVU1427
 4274              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4275              		.loc 1 516 45 is_stmt 0 view .LVU1428
 4276 1a7c C5A5EB28 		vpor	ymm5, ymm11, YMMWORD PTR [rax]	# tmp399, quadmask.61_174, MEM[base: _263, offset: 0B]
 4277              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4278              		.loc 1 515 66 view .LVU1429
 4279 1a80 4883C201 		add	rdx, 1	# ivtmp.267,
 4280              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4281              		.loc 1 516 45 view .LVU1430
 4282 1a84 C5FD7F28 		vmovdqa	YMMWORD PTR [rax], ymm5	# MEM[base: _263, offset: 0B], tmp399
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4283              		.loc 1 515 51 is_stmt 1 view .LVU1431
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4284              		.loc 1 515 15 view .LVU1432
 4285 1a88 4883C020 		add	rax, 32	# ivtmp.278,
 4286              	.L387:
 516:sieve_extend.c ****         }
 4287              		.loc 1 516 13 view .LVU1433
 4288              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4289              		.loc 1 516 45 is_stmt 0 view .LVU1434
 4290 1a8c C5A5EB30 		vpor	ymm6, ymm11, YMMWORD PTR [rax]	# tmp400, quadmask.61_174, MEM[base: _263, offset: 0B]
 4291              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4292              		.loc 1 515 66 view .LVU1435
 4293 1a90 4883C201 		add	rdx, 1	# ivtmp.267,
 4294              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4295              		.loc 1 516 45 view .LVU1436
 4296 1a94 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: _263, offset: 0B], tmp400
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4297              		.loc 1 515 51 is_stmt 1 view .LVU1437
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4298              		.loc 1 515 15 view .LVU1438
 4299 1a98 4883C020 		add	rax, 32	# ivtmp.278,
 4300              	.L386:
 516:sieve_extend.c ****         }
 4301              		.loc 1 516 13 view .LVU1439
 4302              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4303              		.loc 1 516 45 is_stmt 0 view .LVU1440
 4304 1a9c C5A5EB38 		vpor	ymm7, ymm11, YMMWORD PTR [rax]	# tmp401, quadmask.61_174, MEM[base: _263, offset: 0B]
 4305              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4306              		.loc 1 515 66 view .LVU1441
 4307 1aa0 4883C201 		add	rdx, 1	# ivtmp.267,
 4308              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4309              		.loc 1 516 45 view .LVU1442
 4310 1aa4 C5FD7F38 		vmovdqa	YMMWORD PTR [rax], ymm7	# MEM[base: _263, offset: 0B], tmp401
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/ccgH0yRS.s 			page 126


 4311              		.loc 1 515 51 is_stmt 1 view .LVU1443
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4312              		.loc 1 515 15 view .LVU1444
 4313 1aa8 4883C020 		add	rax, 32	# ivtmp.278,
 4314              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4315              		.loc 1 515 9 is_stmt 0 view .LVU1445
 4316 1aac 4939D0   		cmp	r8, rdx	# range_stop_vector, ivtmp.267
 4317 1aaf 7476     		je	.L437	#,
 4318              	.L289:
 516:sieve_extend.c ****         }
 4319              		.loc 1 516 13 is_stmt 1 view .LVU1446
 4320              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4321              		.loc 1 516 45 is_stmt 0 view .LVU1447
 4322 1ab1 C525EB00 		vpor	ymm8, ymm11, YMMWORD PTR [rax]	# tmp274, quadmask.61_174, MEM[base: _263, offset: 0B]
 4323 1ab5 C525EB48 		vpor	ymm9, ymm11, YMMWORD PTR 32[rax]	# tmp342, quadmask.61_174, MEM[base: _263, offset: 0B]
 4323      20
 4324 1aba C525EB50 		vpor	ymm10, ymm11, YMMWORD PTR 64[rax]	# tmp345, quadmask.61_174, MEM[base: _263, offset: 0B]
 4324      40
 4325 1abf C525EB60 		vpor	ymm12, ymm11, YMMWORD PTR 96[rax]	# tmp348, quadmask.61_174, MEM[base: _263, offset: 0B]
 4325      60
 4326 1ac4 C525EBA8 		vpor	ymm13, ymm11, YMMWORD PTR 128[rax]	# tmp351, quadmask.61_174, MEM[base: _263, offset: 0B]
 4326      80000000 
 4327 1acc C525EBB0 		vpor	ymm14, ymm11, YMMWORD PTR 160[rax]	# tmp354, quadmask.61_174, MEM[base: _263, offset: 0B]
 4327      A0000000 
 4328 1ad4 C525EBB8 		vpor	ymm15, ymm11, YMMWORD PTR 192[rax]	# tmp357, quadmask.61_174, MEM[base: _263, offset: 0B]
 4328      C0000000 
 4329 1adc C5A5EB80 		vpor	ymm0, ymm11, YMMWORD PTR 224[rax]	# tmp360, quadmask.61_174, MEM[base: _263, offset: 0B]
 4329      E0000000 
 4330              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4331              		.loc 1 515 66 view .LVU1448
 4332 1ae4 4883C208 		add	rdx, 8	# ivtmp.267,
 4333 1ae8 48050001 		add	rax, 256	# ivtmp.278,
 4333      0000
 4334              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4335              		.loc 1 516 45 view .LVU1449
 4336 1aee C57D7F80 		vmovdqa	YMMWORD PTR -256[rax], ymm8	# MEM[base: _263, offset: 0B], tmp274
 4336      00FFFFFF 
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4337              		.loc 1 515 51 is_stmt 1 view .LVU1450
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4338              		.loc 1 515 15 view .LVU1451
 516:sieve_extend.c ****         }
 4339              		.loc 1 516 13 view .LVU1452
 4340              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4341              		.loc 1 516 45 is_stmt 0 view .LVU1453
 4342 1af6 C57D7F88 		vmovdqa	YMMWORD PTR -224[rax], ymm9	# MEM[base: _263, offset: 0B], tmp342
 4342      20FFFFFF 
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4343              		.loc 1 515 51 is_stmt 1 view .LVU1454
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4344              		.loc 1 515 15 view .LVU1455
 516:sieve_extend.c ****         }
GAS LISTING /tmp/ccgH0yRS.s 			page 127


 4345              		.loc 1 516 13 view .LVU1456
 4346              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4347              		.loc 1 516 45 is_stmt 0 view .LVU1457
 4348 1afe C57D7F90 		vmovdqa	YMMWORD PTR -192[rax], ymm10	# MEM[base: _263, offset: 0B], tmp345
 4348      40FFFFFF 
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4349              		.loc 1 515 51 is_stmt 1 view .LVU1458
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4350              		.loc 1 515 15 view .LVU1459
 516:sieve_extend.c ****         }
 4351              		.loc 1 516 13 view .LVU1460
 4352              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4353              		.loc 1 516 45 is_stmt 0 view .LVU1461
 4354 1b06 C57D7FA0 		vmovdqa	YMMWORD PTR -160[rax], ymm12	# MEM[base: _263, offset: 0B], tmp348
 4354      60FFFFFF 
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4355              		.loc 1 515 51 is_stmt 1 view .LVU1462
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4356              		.loc 1 515 15 view .LVU1463
 516:sieve_extend.c ****         }
 4357              		.loc 1 516 13 view .LVU1464
 4358              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4359              		.loc 1 516 45 is_stmt 0 view .LVU1465
 4360 1b0e C57D7F68 		vmovdqa	YMMWORD PTR -128[rax], ymm13	# MEM[base: _263, offset: 0B], tmp351
 4360      80
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4361              		.loc 1 515 51 is_stmt 1 view .LVU1466
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4362              		.loc 1 515 15 view .LVU1467
 516:sieve_extend.c ****         }
 4363              		.loc 1 516 13 view .LVU1468
 4364              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4365              		.loc 1 516 45 is_stmt 0 view .LVU1469
 4366 1b13 C57D7F70 		vmovdqa	YMMWORD PTR -96[rax], ymm14	# MEM[base: _263, offset: 0B], tmp354
 4366      A0
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4367              		.loc 1 515 51 is_stmt 1 view .LVU1470
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4368              		.loc 1 515 15 view .LVU1471
 516:sieve_extend.c ****         }
 4369              		.loc 1 516 13 view .LVU1472
 4370              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4371              		.loc 1 516 45 is_stmt 0 view .LVU1473
 4372 1b18 C57D7F78 		vmovdqa	YMMWORD PTR -64[rax], ymm15	# MEM[base: _263, offset: 0B], tmp357
 4372      C0
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4373              		.loc 1 515 51 is_stmt 1 view .LVU1474
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4374              		.loc 1 515 15 view .LVU1475
 516:sieve_extend.c ****         }
 4375              		.loc 1 516 13 view .LVU1476
 4376              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/ccgH0yRS.s 			page 128


 516:sieve_extend.c ****         }
 4377              		.loc 1 516 45 is_stmt 0 view .LVU1477
 4378 1b1d C5FD7F40 		vmovdqa	YMMWORD PTR -32[rax], ymm0	# MEM[base: _263, offset: 0B], tmp360
 4378      E0
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4379              		.loc 1 515 51 is_stmt 1 view .LVU1478
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4380              		.loc 1 515 15 view .LVU1479
 4381              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4382              		.loc 1 515 9 is_stmt 0 view .LVU1480
 4383 1b22 4939D0   		cmp	r8, rdx	# range_stop_vector, ivtmp.267
 4384 1b25 758A     		jne	.L289	#,
 4385              	.L437:
 4386              	.LVL164:
 4387              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4388              		.loc 1 515 66 view .LVU1481
 4389 1b27 4C89C2   		mov	rdx, r8	# ivtmp.267, range_stop_vector
 4390              	.LVL165:
 4391              	.L290:
 4392              	.LBB332:
 520:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 4393              		.loc 1 520 13 is_stmt 1 view .LVU1482
 4394              	# sieve_extend.c:520:             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 520:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 4395              		.loc 1 520 23 is_stmt 0 view .LVU1483
 4396 1b2a 4C8D3495 		lea	r14, 0[0+rdx*4]	# index_word,
 4396      00000000 
 4397              	.LVL166:
 521:sieve_extend.c ****             if likely(index_word <= range_stop_word) {
 4398              		.loc 1 521 13 is_stmt 1 view .LVU1484
 522:sieve_extend.c ****                 #pragma ivdep
 4399              		.loc 1 522 13 view .LVU1485
 4400              	# sieve_extend.c:522:             if likely(index_word <= range_stop_word) {
 522:sieve_extend.c ****                 #pragma ivdep
 4401              		.loc 1 522 16 is_stmt 0 view .LVU1486
 4402 1b32 4C39F3   		cmp	rbx, r14	# range_stop_word, index_word
 4403 1b35 7228     		jb	.L291	#,
 4404              	.LVL167:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 4405              		.loc 1 524 31 is_stmt 1 view .LVU1487
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4406              		.loc 1 525 21 view .LVU1488
 526:sieve_extend.c ****                 }
 4407              		.loc 1 526 25 view .LVU1489
 4408              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 4409              		.loc 1 526 56 is_stmt 0 view .LVU1490
 4410 1b37 4C8B7C24 		mov	r15, QWORD PTR 96[rsp]	# quadmask, quadmask
 4410      60
 4411              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4412              		.loc 1 525 24 view .LVU1491
 4413 1b3c 4D8D6E01 		lea	r13, 1[r14]	# _92,
 4414              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
GAS LISTING /tmp/ccgH0yRS.s 			page 129


 4415              		.loc 1 526 56 view .LVU1492
 4416 1b40 48C1E205 		sal	rdx, 5	# tmp275,
 4417 1b44 4C093C17 		or	QWORD PTR [rdi+rdx], r15	# *_126, quadmask
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 4418              		.loc 1 524 55 is_stmt 1 view .LVU1493
 4419              	.LVL168:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 4420              		.loc 1 524 31 view .LVU1494
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4421              		.loc 1 525 21 view .LVU1495
 4422              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4423              		.loc 1 525 24 is_stmt 0 view .LVU1496
 4424 1b48 4939DD   		cmp	r13, rbx	# _92, range_stop_word
 4425 1b4b 7664     		jbe	.L462	#,
 4426              	.L293:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 4427              		.loc 1 524 55 is_stmt 1 view .LVU1497
 4428              	.LVL169:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 4429              		.loc 1 524 31 view .LVU1498
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4430              		.loc 1 525 21 view .LVU1499
 4431              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4432              		.loc 1 525 24 is_stmt 0 view .LVU1500
 4433 1b4d 498D5602 		lea	rdx, 2[r14]	# _88,
 4434 1b51 4839DA   		cmp	rdx, rbx	# _88, range_stop_word
 4435 1b54 7666     		jbe	.L463	#,
 4436              	.L294:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 4437              		.loc 1 524 55 is_stmt 1 view .LVU1501
 4438              	.LVL170:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 4439              		.loc 1 524 31 view .LVU1502
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4440              		.loc 1 525 21 view .LVU1503
 4441              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4442              		.loc 1 525 24 is_stmt 0 view .LVU1504
 4443 1b56 4983C603 		add	r14, 3	# _86,
 4444              	.LVL171:
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4445              		.loc 1 525 24 view .LVU1505
 4446 1b5a 4939DE   		cmp	r14, rbx	# _86, range_stop_word
 4447 1b5d 7647     		jbe	.L464	#,
 4448              	.LVL172:
 4449              	.L291:
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4450              		.loc 1 525 24 view .LVU1506
 4451              	.LBE332:
 4452              	.LBE329:
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4453              		.loc 1 478 41 is_stmt 1 view .LVU1507
 4454              	# sieve_extend.c:478:     for (counter_t index = range_start; index < range_stop_unique;) {
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4455              		.loc 1 478 5 is_stmt 0 view .LVU1508
GAS LISTING /tmp/ccgH0yRS.s 			page 130


 4456 1b5f 4939F3   		cmp	r11, rsi	# range_stop_unique, range_start
 4457 1b62 0F8738FB 		ja	.L273	#,
 4457      FFFF
 4458              	.LVL173:
 4459 1b68 0F1F8400 		.p2align 4
 4459      00000000 
 4460              		.p2align 3
 4461              	.L459:
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4462              		.loc 1 478 5 view .LVU1509
 4463 1b70 C5F877   		vzeroupper
 4464              	.LVL174:
 4465              	.L266:
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4466              		.loc 1 478 5 view .LVU1510
 4467              	.LBE328:
 4468              	# sieve_extend.c:532: }
 532:sieve_extend.c **** 
 4469              		.loc 1 532 1 view .LVU1511
 4470 1b73 488B8424 		mov	rax, QWORD PTR 152[rsp]	# tmp562, D.6676
 4470      98000000 
 4471 1b7b 64483304 		xor	rax, QWORD PTR fs:40	# tmp562, MEM[(<address-space-1> long unsigned int *)40B]
 4471      25280000 
 4471      00
 4472 1b84 0F853805 		jne	.L465	#,
 4472      0000
 4473 1b8a 488D65D8 		lea	rsp, -40[rbp]	#,
 4474 1b8e 5B       		pop	rbx	#
 4475 1b8f 415C     		pop	r12	#
 4476 1b91 415D     		pop	r13	#
 4477 1b93 415E     		pop	r14	#
 4478 1b95 415F     		pop	r15	#
 4479 1b97 5D       		pop	rbp	#
 4480              		.cfi_remember_state
 4481              		.cfi_def_cfa 7, 8
 4482 1b98 C3       		ret	
 4483              	.LVL175:
 4484              	.L288:
 4485              		.cfi_restore_state
 4486              	.LBB340:
 4487              	.LBB336:
 519:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 4488              		.loc 1 519 9 is_stmt 1 view .LVU1512
 4489              	# sieve_extend.c:519:         if unlikely(current_vector == range_stop_vector) {
 519:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 4490              		.loc 1 519 12 is_stmt 0 view .LVU1513
 4491 1b99 748F     		je	.L290	#,
 519:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 4492              		.loc 1 519 12 view .LVU1514
 4493              	.LBE336:
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4494              		.loc 1 478 41 is_stmt 1 view .LVU1515
 4495              	# sieve_extend.c:478:     for (counter_t index = range_start; index < range_stop_unique;) {
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 4496              		.loc 1 478 5 is_stmt 0 view .LVU1516
 4497 1b9b 4939F3   		cmp	r11, rsi	# range_stop_unique, range_start
 4498 1b9e 0F87FCFA 		ja	.L273	#,
GAS LISTING /tmp/ccgH0yRS.s 			page 131


 4498      FFFF
 4499              		.p2align 4,,8
 4500 1ba4 EBCA     		jmp	.L459	#
 4501              	.LVL176:
 4502              	.L464:
 4503              	.LBB337:
 4504              	.LBB333:
 526:sieve_extend.c ****                 }
 4505              		.loc 1 526 25 is_stmt 1 view .LVU1517
 4506              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 4507              		.loc 1 526 56 is_stmt 0 view .LVU1518
 4508 1ba6 488B4424 		mov	rax, QWORD PTR 120[rsp]	# quadmask, quadmask
 4508      78
 4509 1bab 4A0904F7 		or	QWORD PTR [rdi+r14*8], rax	# *_84, quadmask
 4510 1baf EBAE     		jmp	.L291	#
 4511              	.LVL177:
 4512              	.L462:
 526:sieve_extend.c ****                 }
 4513              		.loc 1 526 25 is_stmt 1 view .LVU1519
 4514              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 4515              		.loc 1 526 56 is_stmt 0 view .LVU1520
 4516 1bb1 4C8B6424 		mov	r12, QWORD PTR 104[rsp]	# quadmask, quadmask
 4516      68
 4517 1bb6 4E0924EF 		or	QWORD PTR [rdi+r13*8], r12	# *_67, quadmask
 4518 1bba EB91     		jmp	.L293	#
 4519              	.LVL178:
 4520              	.L463:
 526:sieve_extend.c ****                 }
 4521              		.loc 1 526 25 is_stmt 1 view .LVU1521
 4522              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 4523              		.loc 1 526 56 is_stmt 0 view .LVU1522
 4524 1bbc 488B4C24 		mov	rcx, QWORD PTR 112[rsp]	# quadmask, quadmask
 4524      70
 4525 1bc1 48090CD7 		or	QWORD PTR [rdi+rdx*8], rcx	# *_75, quadmask
 4526 1bc5 EB8F     		jmp	.L294	#
 4527              	.LVL179:
 4528              	.L461:
 4529              	# sieve_extend.c:520:             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 520:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 4530              		.loc 1 520 23 view .LVU1523
 4531 1bc7 4A8D0485 		lea	rax, 0[0+r8*4]	# index_word,
 4531      00000000 
 4532 1bcf 4C8D0C52 		lea	r9, [rdx+rdx*2]	# tmp239,
 4533              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4534              		.loc 1 525 24 view .LVU1524
 4535 1bd3 488D5801 		lea	rbx, 1[rax]	# _147,
 4536 1bd7 4C8D7802 		lea	r15, 2[rax]	# _161,
 4537              	# sieve_extend.c:520:             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 520:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 4538              		.loc 1 520 23 view .LVU1525
 4539 1bdb 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, index_word
 4539      48
 4540              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
GAS LISTING /tmp/ccgH0yRS.s 			page 132


 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4541              		.loc 1 525 24 view .LVU1526
 4542 1be0 4883C003 		add	rax, 3	# _175,
 4543 1be4 4989D6   		mov	r14, rdx	# _278, step
 4544              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 4545              		.loc 1 526 56 view .LVU1527
 4546 1be7 4C8D2CC7 		lea	r13, [rdi+rax*8]	# _180,
 4547 1beb 4889D1   		mov	rcx, rdx	# _285, step
 4548 1bee 4989D2   		mov	r10, rdx	# _289, step
 4549              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4550              		.loc 1 525 24 view .LVU1528
 4551 1bf1 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, _175
 4551      30
 4552              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 4553              		.loc 1 526 56 view .LVU1529
 4554 1bf6 4E8D1CFF 		lea	r11, [rdi+r15*8]	# _166,
 4555              	.LVL180:
 526:sieve_extend.c ****                 }
 4556              		.loc 1 526 56 view .LVU1530
 4557 1bfa 49C1E607 		sal	r14, 7	# _278,
 4558 1bfe 488D04DF 		lea	rax, [rdi+rbx*8]	# _152,
 4559 1c02 48C1E105 		sal	rcx, 5	# _285,
 4560 1c06 49C1E105 		sal	r9, 5	# tmp240,
 4561              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 4562              		.loc 1 525 24 view .LVU1531
 4563 1c0a 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, _147
 4563      40
 4564 1c0f 4C897C24 		mov	QWORD PTR 56[rsp], r15	# %sfp, _161
 4564      38
 4565              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 4566              		.loc 1 526 56 view .LVU1532
 4567 1c14 4C896C24 		mov	QWORD PTR 40[rsp], r13	# %sfp, _180
 4567      28
 4568 1c19 49C1E206 		sal	r10, 6	# _289,
 4569 1c1d 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, _166
 4569      20
 4570 1c22 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, _152
 4570      18
 4571 1c27 660F1F84 		.p2align 4
 4571      00000000 
 4571      00
 4572              		.p2align 3
 4573              	.L284:
 526:sieve_extend.c ****                 }
 4574              		.loc 1 526 56 view .LVU1533
 4575              	.LBE333:
 479:sieve_extend.c ****         register bitvector_t quadmask = { };
 4576              		.loc 1 479 9 is_stmt 1 view .LVU1534
 4577              	# sieve_extend.c:479:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 479:sieve_extend.c ****         register bitvector_t quadmask = { };
 4578              		.loc 1 479 54 is_stmt 0 view .LVU1535
 4579 1c30 4889F0   		mov	rax, rsi	# ivtmp.293, range_start
GAS LISTING /tmp/ccgH0yRS.s 			page 133


 4580              	# sieve_extend.c:481:         register counter_t word = wordindex(index) - current_vector_start_wor
 481:sieve_extend.c ****         
 4581              		.loc 1 481 35 view .LVU1536
 4582 1c33 4989F5   		mov	r13, rsi	# tmp242, range_start
 4583              	# sieve_extend.c:479:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 479:sieve_extend.c ****         register bitvector_t quadmask = { };
 4584              		.loc 1 479 54 view .LVU1537
 4585 1c36 48C1E808 		shr	rax, 8	# ivtmp.293,
 4586              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4587              		.loc 1 486 31 view .LVU1538
 4588 1c3a BB010000 		mov	ebx, 1	# tmp245,
 4588      00
 4589              	# sieve_extend.c:480:         register bitvector_t quadmask = { };
 480:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4590              		.loc 1 480 30 view .LVU1539
 4591 1c3f C5F9EFC0 		vpxor	xmm0, xmm0, xmm0	# tmp241
 4592              	# sieve_extend.c:479:         const counter_t current_vector_start_word =  vectorindex(index) << (S
 479:sieve_extend.c ****         register bitvector_t quadmask = { };
 4593              		.loc 1 479 25 view .LVU1540
 4594 1c43 4C8D1C85 		lea	r11, 0[0+rax*4]	# current_vector_start_word,
 4594      00000000 
 4595              	.LVL181:
 480:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4596              		.loc 1 480 9 is_stmt 1 view .LVU1541
 4597              	# sieve_extend.c:481:         register counter_t word = wordindex(index) - current_vector_start_wor
 481:sieve_extend.c ****         
 4598              		.loc 1 481 35 is_stmt 0 view .LVU1542
 4599 1c4b 49C1ED06 		shr	r13, 6	# tmp242,
 4600              	# sieve_extend.c:480:         register bitvector_t quadmask = { };
 480:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4601              		.loc 1 480 30 view .LVU1543
 4602 1c4f C5FD7F44 		vmovdqa	YMMWORD PTR 96[rsp], ymm0	# quadmask, tmp241
 4602      2460
 481:sieve_extend.c ****         
 4603              		.loc 1 481 9 is_stmt 1 view .LVU1544
 4604              	# sieve_extend.c:481:         register counter_t word = wordindex(index) - current_vector_start_wor
 481:sieve_extend.c ****         
 4605              		.loc 1 481 28 is_stmt 0 view .LVU1545
 4606 1c55 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 4607              	.LVL182:
 4608              	.L274:
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4609              		.loc 1 485 9 is_stmt 1 discriminator 1 view .LVU1546
 486:sieve_extend.c ****             index += step;
 4610              		.loc 1 486 13 discriminator 1 view .LVU1547
 4611              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4612              		.loc 1 486 31 is_stmt 0 discriminator 1 view .LVU1548
 4613 1c58 C462C9F7 		shlx	r15, rbx, rsi	# tmp244, tmp245, range_start
 4613      FB
 4614              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4615              		.loc 1 487 19 discriminator 1 view .LVU1549
 4616 1c5d 4801D6   		add	rsi, rdx	# range_start, step
 4617              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccgH0yRS.s 			page 134


 4618              		.loc 1 486 28 discriminator 1 view .LVU1550
 4619 1c60 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp244
 4619      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4620              		.loc 1 487 13 is_stmt 1 discriminator 1 view .LVU1551
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4621              		.loc 1 488 13 discriminator 1 view .LVU1552
 4622              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4623              		.loc 1 488 20 is_stmt 0 discriminator 1 view .LVU1553
 4624 1c65 4989F5   		mov	r13, rsi	# tmp246, range_start
 4625              	.LVL183:
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4626              		.loc 1 488 20 discriminator 1 view .LVU1554
 4627 1c68 49C1ED06 		shr	r13, 6	# tmp246,
 4628              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4629              		.loc 1 488 18 discriminator 1 view .LVU1555
 4630 1c6c 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 489:sieve_extend.c ****         
 4631              		.loc 1 489 17 is_stmt 1 discriminator 1 view .LVU1556
 4632              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 4633              		.loc 1 489 9 is_stmt 0 discriminator 1 view .LVU1557
 4634 1c6f 4983FD03 		cmp	r13, 3	# word,
 4635 1c73 0F87D700 		ja	.L439	#,
 4635      0000
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4636              		.loc 1 485 9 is_stmt 1 view .LVU1558
 486:sieve_extend.c ****             index += step;
 4637              		.loc 1 486 13 view .LVU1559
 4638              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4639              		.loc 1 486 31 is_stmt 0 view .LVU1560
 4640 1c79 C462C9F7 		shlx	r15, rbx, rsi	# tmp465, tmp245, range_start
 4640      FB
 4641              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4642              		.loc 1 487 19 view .LVU1561
 4643 1c7e 4801D6   		add	rsi, rdx	# range_start, step
 4644              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4645              		.loc 1 486 28 view .LVU1562
 4646 1c81 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp465
 4646      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4647              		.loc 1 487 13 is_stmt 1 view .LVU1563
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4648              		.loc 1 488 13 view .LVU1564
 4649              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4650              		.loc 1 488 20 is_stmt 0 view .LVU1565
 4651 1c86 4989F5   		mov	r13, rsi	# tmp466, range_start
 4652 1c89 49C1ED06 		shr	r13, 6	# tmp466,
 4653              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4654              		.loc 1 488 18 view .LVU1566
GAS LISTING /tmp/ccgH0yRS.s 			page 135


 4655 1c8d 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 489:sieve_extend.c ****         
 4656              		.loc 1 489 17 is_stmt 1 view .LVU1567
 4657              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 4658              		.loc 1 489 9 is_stmt 0 view .LVU1568
 4659 1c90 4983FD03 		cmp	r13, 3	# word,
 4660 1c94 0F87B600 		ja	.L439	#,
 4660      0000
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4661              		.loc 1 485 9 is_stmt 1 view .LVU1569
 486:sieve_extend.c ****             index += step;
 4662              		.loc 1 486 13 view .LVU1570
 4663              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4664              		.loc 1 486 31 is_stmt 0 view .LVU1571
 4665 1c9a C462C9F7 		shlx	r15, rbx, rsi	# tmp468, tmp245, range_start
 4665      FB
 4666              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4667              		.loc 1 487 19 view .LVU1572
 4668 1c9f 4801D6   		add	rsi, rdx	# range_start, step
 4669              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4670              		.loc 1 486 28 view .LVU1573
 4671 1ca2 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp468
 4671      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4672              		.loc 1 487 13 is_stmt 1 view .LVU1574
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4673              		.loc 1 488 13 view .LVU1575
 4674              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4675              		.loc 1 488 20 is_stmt 0 view .LVU1576
 4676 1ca7 4989F5   		mov	r13, rsi	# tmp469, range_start
 4677 1caa 49C1ED06 		shr	r13, 6	# tmp469,
 4678              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4679              		.loc 1 488 18 view .LVU1577
 4680 1cae 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 489:sieve_extend.c ****         
 4681              		.loc 1 489 17 is_stmt 1 view .LVU1578
 4682              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 4683              		.loc 1 489 9 is_stmt 0 view .LVU1579
 4684 1cb1 4983FD03 		cmp	r13, 3	# word,
 4685 1cb5 0F879500 		ja	.L439	#,
 4685      0000
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4686              		.loc 1 485 9 is_stmt 1 view .LVU1580
 486:sieve_extend.c ****             index += step;
 4687              		.loc 1 486 13 view .LVU1581
 4688              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4689              		.loc 1 486 31 is_stmt 0 view .LVU1582
 4690 1cbb C462C9F7 		shlx	r15, rbx, rsi	# tmp471, tmp245, range_start
 4690      FB
GAS LISTING /tmp/ccgH0yRS.s 			page 136


 4691              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4692              		.loc 1 487 19 view .LVU1583
 4693 1cc0 4801D6   		add	rsi, rdx	# range_start, step
 4694              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4695              		.loc 1 486 28 view .LVU1584
 4696 1cc3 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp471
 4696      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4697              		.loc 1 487 13 is_stmt 1 view .LVU1585
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4698              		.loc 1 488 13 view .LVU1586
 4699              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4700              		.loc 1 488 20 is_stmt 0 view .LVU1587
 4701 1cc8 4989F5   		mov	r13, rsi	# tmp472, range_start
 4702 1ccb 49C1ED06 		shr	r13, 6	# tmp472,
 4703              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4704              		.loc 1 488 18 view .LVU1588
 4705 1ccf 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 489:sieve_extend.c ****         
 4706              		.loc 1 489 17 is_stmt 1 view .LVU1589
 4707              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 4708              		.loc 1 489 9 is_stmt 0 view .LVU1590
 4709 1cd2 4983FD03 		cmp	r13, 3	# word,
 4710 1cd6 7778     		ja	.L439	#,
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4711              		.loc 1 485 9 is_stmt 1 view .LVU1591
 486:sieve_extend.c ****             index += step;
 4712              		.loc 1 486 13 view .LVU1592
 4713              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4714              		.loc 1 486 31 is_stmt 0 view .LVU1593
 4715 1cd8 C462C9F7 		shlx	r15, rbx, rsi	# tmp474, tmp245, range_start
 4715      FB
 4716              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4717              		.loc 1 487 19 view .LVU1594
 4718 1cdd 4801D6   		add	rsi, rdx	# range_start, step
 4719              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4720              		.loc 1 486 28 view .LVU1595
 4721 1ce0 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp474
 4721      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4722              		.loc 1 487 13 is_stmt 1 view .LVU1596
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4723              		.loc 1 488 13 view .LVU1597
 4724              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4725              		.loc 1 488 20 is_stmt 0 view .LVU1598
 4726 1ce5 4989F5   		mov	r13, rsi	# tmp475, range_start
 4727 1ce8 49C1ED06 		shr	r13, 6	# tmp475,
 4728              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccgH0yRS.s 			page 137


 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4729              		.loc 1 488 18 view .LVU1599
 4730 1cec 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 489:sieve_extend.c ****         
 4731              		.loc 1 489 17 is_stmt 1 view .LVU1600
 4732              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 4733              		.loc 1 489 9 is_stmt 0 view .LVU1601
 4734 1cef 4983FD03 		cmp	r13, 3	# word,
 4735 1cf3 775B     		ja	.L439	#,
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4736              		.loc 1 485 9 is_stmt 1 view .LVU1602
 486:sieve_extend.c ****             index += step;
 4737              		.loc 1 486 13 view .LVU1603
 4738              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4739              		.loc 1 486 31 is_stmt 0 view .LVU1604
 4740 1cf5 C462C9F7 		shlx	r15, rbx, rsi	# tmp477, tmp245, range_start
 4740      FB
 4741              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4742              		.loc 1 487 19 view .LVU1605
 4743 1cfa 4801D6   		add	rsi, rdx	# range_start, step
 4744              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4745              		.loc 1 486 28 view .LVU1606
 4746 1cfd 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp477
 4746      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4747              		.loc 1 487 13 is_stmt 1 view .LVU1607
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4748              		.loc 1 488 13 view .LVU1608
 4749              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4750              		.loc 1 488 20 is_stmt 0 view .LVU1609
 4751 1d02 4989F5   		mov	r13, rsi	# tmp478, range_start
 4752 1d05 49C1ED06 		shr	r13, 6	# tmp478,
 4753              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4754              		.loc 1 488 18 view .LVU1610
 4755 1d09 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 489:sieve_extend.c ****         
 4756              		.loc 1 489 17 is_stmt 1 view .LVU1611
 4757              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 4758              		.loc 1 489 9 is_stmt 0 view .LVU1612
 4759 1d0c 4983FD03 		cmp	r13, 3	# word,
 4760 1d10 773E     		ja	.L439	#,
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4761              		.loc 1 485 9 is_stmt 1 view .LVU1613
 486:sieve_extend.c ****             index += step;
 4762              		.loc 1 486 13 view .LVU1614
 4763              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4764              		.loc 1 486 31 is_stmt 0 view .LVU1615
 4765 1d12 C462C9F7 		shlx	r15, rbx, rsi	# tmp480, tmp245, range_start
 4765      FB
GAS LISTING /tmp/ccgH0yRS.s 			page 138


 4766              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4767              		.loc 1 487 19 view .LVU1616
 4768 1d17 4801D6   		add	rsi, rdx	# range_start, step
 4769              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4770              		.loc 1 486 28 view .LVU1617
 4771 1d1a 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp480
 4771      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4772              		.loc 1 487 13 is_stmt 1 view .LVU1618
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4773              		.loc 1 488 13 view .LVU1619
 4774              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4775              		.loc 1 488 20 is_stmt 0 view .LVU1620
 4776 1d1f 4989F5   		mov	r13, rsi	# tmp481, range_start
 4777 1d22 49C1ED06 		shr	r13, 6	# tmp481,
 4778              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4779              		.loc 1 488 18 view .LVU1621
 4780 1d26 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 489:sieve_extend.c ****         
 4781              		.loc 1 489 17 is_stmt 1 view .LVU1622
 4782              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 4783              		.loc 1 489 9 is_stmt 0 view .LVU1623
 4784 1d29 4983FD03 		cmp	r13, 3	# word,
 4785 1d2d 7721     		ja	.L439	#,
 485:sieve_extend.c ****             quadmask[word] |= markmask(index);
 4786              		.loc 1 485 9 is_stmt 1 view .LVU1624
 486:sieve_extend.c ****             index += step;
 4787              		.loc 1 486 13 view .LVU1625
 4788              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4789              		.loc 1 486 31 is_stmt 0 view .LVU1626
 4790 1d2f C462C9F7 		shlx	r15, rbx, rsi	# tmp483, tmp245, range_start
 4790      FB
 4791              	# sieve_extend.c:487:             index += step;
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4792              		.loc 1 487 19 view .LVU1627
 4793 1d34 4801D6   		add	rsi, rdx	# range_start, step
 4794              	# sieve_extend.c:486:             quadmask[word] |= markmask(index);
 486:sieve_extend.c ****             index += step;
 4795              		.loc 1 486 28 view .LVU1628
 4796 1d37 4E097CEC 		or	QWORD PTR 96[rsp+r13*8], r15	# quadmask, tmp483
 4796      60
 487:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4797              		.loc 1 487 13 is_stmt 1 view .LVU1629
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4798              		.loc 1 488 13 view .LVU1630
 4799              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4800              		.loc 1 488 20 is_stmt 0 view .LVU1631
 4801 1d3c 4989F5   		mov	r13, rsi	# tmp484, range_start
 4802 1d3f 49C1ED06 		shr	r13, 6	# tmp484,
 4803              	.LVL184:
GAS LISTING /tmp/ccgH0yRS.s 			page 139


 4804              	# sieve_extend.c:488:             word = wordindex(index) - current_vector_start_word;
 488:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4805              		.loc 1 488 18 view .LVU1632
 4806 1d43 4D29DD   		sub	r13, r11	# word, current_vector_start_word
 4807              	.LVL185:
 489:sieve_extend.c ****         
 4808              		.loc 1 489 17 is_stmt 1 view .LVU1633
 4809              	# sieve_extend.c:489:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 489:sieve_extend.c ****         
 4810              		.loc 1 489 9 is_stmt 0 view .LVU1634
 4811 1d46 4983FD03 		cmp	r13, 3	# word,
 4812 1d4a 0F8608FF 		jbe	.L274	#,
 4812      FFFF
 4813              	.LVL186:
 4814              		.p2align 4
 4815              		.p2align 3
 4816              	.L439:
 492:sieve_extend.c ****         const counter_t range_stop_vector = vectorindex(range_stop);
 4817              		.loc 1 492 9 is_stmt 1 view .LVU1635
 493:sieve_extend.c ****         
 4818              		.loc 1 493 9 view .LVU1636
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4819              		.loc 1 507 9 view .LVU1637
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4820              		.loc 1 507 15 view .LVU1638
 4821              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4822              		.loc 1 507 29 is_stmt 0 view .LVU1639
 4823 1d50 4A8D1C20 		lea	rbx, [rax+r12]	# ivtmp.293,
 4824              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4825              		.loc 1 507 9 view .LVU1640
 4826 1d54 4C39C3   		cmp	rbx, r8	# ivtmp.293, range_stop_vector
 4827 1d57 0F831301 		jnb	.L275	#,
 4827      0000
 4828 1d5d 48C1E005 		sal	rax, 5	# tmp247,
 4829              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4830              		.loc 1 508 52 view .LVU1641
 4831 1d61 C5FD6F54 		vmovdqa	ymm2, YMMWORD PTR 96[rsp]	# quadmask.57_42, quadmask
 4831      2460
 4832 1d67 4C8D1C07 		lea	r11, [rdi+rax]	# ivtmp.296,
 4833              	.LVL187:
 4834              	.L276:
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4835              		.loc 1 508 13 is_stmt 1 discriminator 2 view .LVU1642
 4836              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4837              		.loc 1 508 52 is_stmt 0 discriminator 2 view .LVU1643
 4838 1d6b C4C16DEB 		vpor	ymm1, ymm2, YMMWORD PTR [r11]	# tmp248, quadmask.57_42, MEM[base: _282, offset: 0B]
 4838      0B
 4839 1d70 4889D8   		mov	rax, rbx	# ivtmp.293, ivtmp.293
 4840 1d73 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm1	# MEM[base: _282, offset: 0B], tmp248
 4840      0B
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4841              		.loc 1 509 13 is_stmt 1 discriminator 2 view .LVU1644
 4842 1d78 4A8D1C23 		lea	rbx, [rbx+r12]	# ivtmp.293,
GAS LISTING /tmp/ccgH0yRS.s 			page 140


 4843              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4844              		.loc 1 509 52 is_stmt 0 discriminator 2 view .LVU1645
 4845 1d7c C4C16DEB 		vpor	ymm3, ymm2, YMMWORD PTR [r11+rcx]	# tmp249, quadmask.57_42, MEM[base: _282, index: _285, offs
 4845      1C0B
 4846 1d82 C4C17D7F 		vmovdqa	YMMWORD PTR [r11+rcx], ymm3	# MEM[base: _282, index: _285, offset: 0B], tmp249
 4846      1C0B
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4847              		.loc 1 510 13 is_stmt 1 discriminator 2 view .LVU1646
 4848              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4849              		.loc 1 510 52 is_stmt 0 discriminator 2 view .LVU1647
 4850 1d88 C4816DEB 		vpor	ymm4, ymm2, YMMWORD PTR [r11+r10]	# tmp250, quadmask.57_42, MEM[base: _282, index: _289, offs
 4850      2413
 4851 1d8e C4817D7F 		vmovdqa	YMMWORD PTR [r11+r10], ymm4	# MEM[base: _282, index: _289, offset: 0B], tmp250
 4851      2413
 511:sieve_extend.c ****         }
 4852              		.loc 1 511 13 is_stmt 1 discriminator 2 view .LVU1648
 4853              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4854              		.loc 1 511 52 is_stmt 0 discriminator 2 view .LVU1649
 4855 1d94 C4816DEB 		vpor	ymm5, ymm2, YMMWORD PTR [r11+r9]	# tmp251, quadmask.57_42, MEM[base: _282, index: _293, offse
 4855      2C0B
 4856 1d9a C4817D7F 		vmovdqa	YMMWORD PTR [r11+r9], ymm5	# MEM[base: _282, index: _293, offset: 0B], tmp251
 4856      2C0B
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4857              		.loc 1 507 58 is_stmt 1 discriminator 2 view .LVU1650
 4858              	.LVL188:
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4859              		.loc 1 507 15 discriminator 2 view .LVU1651
 4860 1da0 4D01F3   		add	r11, r14	# ivtmp.296, _278
 4861              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4862              		.loc 1 507 9 is_stmt 0 discriminator 2 view .LVU1652
 4863 1da3 4939D8   		cmp	r8, rbx	# range_stop_vector, ivtmp.293
 4864 1da6 0F86C400 		jbe	.L275	#,
 4864      0000
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4865              		.loc 1 508 13 is_stmt 1 view .LVU1653
 4866              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4867              		.loc 1 508 52 is_stmt 0 view .LVU1654
 4868 1dac C4C16DEB 		vpor	ymm6, ymm2, YMMWORD PTR [r11]	# tmp449, quadmask.57_42, MEM[base: _282, offset: 0B]
 4868      33
 4869 1db1 4E8D3C23 		lea	r15, [rbx+r12]	# ivtmp.293,
 4870 1db5 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm6	# MEM[base: _282, offset: 0B], tmp449
 4870      33
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4871              		.loc 1 509 13 is_stmt 1 view .LVU1655
 4872 1dba 4889D8   		mov	rax, rbx	# ivtmp.293, ivtmp.293
 4873              	.LVL189:
 4874              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4875              		.loc 1 509 52 is_stmt 0 view .LVU1656
 4876 1dbd C4C16DEB 		vpor	ymm7, ymm2, YMMWORD PTR [r11+rcx]	# tmp450, quadmask.57_42, MEM[base: _282, index: _285, offs
 4876      3C0B
 4877 1dc3 C4C17D7F 		vmovdqa	YMMWORD PTR [r11+rcx], ymm7	# MEM[base: _282, index: _285, offset: 0B], tmp450
GAS LISTING /tmp/ccgH0yRS.s 			page 141


 4877      3C0B
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4878              		.loc 1 510 13 is_stmt 1 view .LVU1657
 4879              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4880              		.loc 1 510 52 is_stmt 0 view .LVU1658
 4881 1dc9 C4016DEB 		vpor	ymm8, ymm2, YMMWORD PTR [r11+r10]	# tmp451, quadmask.57_42, MEM[base: _282, index: _289, offs
 4881      0413
 4882 1dcf C4017D7F 		vmovdqa	YMMWORD PTR [r11+r10], ymm8	# MEM[base: _282, index: _289, offset: 0B], tmp451
 4882      0413
 511:sieve_extend.c ****         }
 4883              		.loc 1 511 13 is_stmt 1 view .LVU1659
 4884              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4885              		.loc 1 511 52 is_stmt 0 view .LVU1660
 4886 1dd5 C4016DEB 		vpor	ymm9, ymm2, YMMWORD PTR [r11+r9]	# tmp452, quadmask.57_42, MEM[base: _282, index: _293, offse
 4886      0C0B
 4887 1ddb C4017D7F 		vmovdqa	YMMWORD PTR [r11+r9], ymm9	# MEM[base: _282, index: _293, offset: 0B], tmp452
 4887      0C0B
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4888              		.loc 1 507 58 is_stmt 1 view .LVU1661
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4889              		.loc 1 507 15 view .LVU1662
 4890 1de1 4D01F3   		add	r11, r14	# ivtmp.296, _278
 4891              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4892              		.loc 1 507 9 is_stmt 0 view .LVU1663
 4893 1de4 4D39F8   		cmp	r8, r15	# range_stop_vector, ivtmp.293
 4894 1de7 0F868300 		jbe	.L275	#,
 4894      0000
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4895              		.loc 1 508 13 is_stmt 1 view .LVU1664
 4896              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4897              		.loc 1 508 52 is_stmt 0 view .LVU1665
 4898 1ded C4416DEB 		vpor	ymm10, ymm2, YMMWORD PTR [r11]	# tmp455, quadmask.57_42, MEM[base: _282, offset: 0B]
 4898      13
 4899 1df2 4F8D2C27 		lea	r13, [r15+r12]	# ivtmp.293,
 4900 1df6 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm10	# MEM[base: _282, offset: 0B], tmp455
 4900      13
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4901              		.loc 1 509 13 is_stmt 1 view .LVU1666
 4902 1dfb 4C89F8   		mov	rax, r15	# ivtmp.293, ivtmp.293
 4903              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4904              		.loc 1 509 52 is_stmt 0 view .LVU1667
 4905 1dfe C4416DEB 		vpor	ymm11, ymm2, YMMWORD PTR [r11+rcx]	# tmp456, quadmask.57_42, MEM[base: _282, index: _285, off
 4905      1C0B
 4906 1e04 C4417D7F 		vmovdqa	YMMWORD PTR [r11+rcx], ymm11	# MEM[base: _282, index: _285, offset: 0B], tmp456
 4906      1C0B
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4907              		.loc 1 510 13 is_stmt 1 view .LVU1668
 4908              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4909              		.loc 1 510 52 is_stmt 0 view .LVU1669
 4910 1e0a C4016DEB 		vpor	ymm12, ymm2, YMMWORD PTR [r11+r10]	# tmp457, quadmask.57_42, MEM[base: _282, index: _289, off
 4910      2413
GAS LISTING /tmp/ccgH0yRS.s 			page 142


 4911 1e10 C4017D7F 		vmovdqa	YMMWORD PTR [r11+r10], ymm12	# MEM[base: _282, index: _289, offset: 0B], tmp457
 4911      2413
 511:sieve_extend.c ****         }
 4912              		.loc 1 511 13 is_stmt 1 view .LVU1670
 4913              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4914              		.loc 1 511 52 is_stmt 0 view .LVU1671
 4915 1e16 C4016DEB 		vpor	ymm13, ymm2, YMMWORD PTR [r11+r9]	# tmp458, quadmask.57_42, MEM[base: _282, index: _293, offs
 4915      2C0B
 4916 1e1c C4017D7F 		vmovdqa	YMMWORD PTR [r11+r9], ymm13	# MEM[base: _282, index: _293, offset: 0B], tmp458
 4916      2C0B
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4917              		.loc 1 507 58 is_stmt 1 view .LVU1672
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4918              		.loc 1 507 15 view .LVU1673
 4919 1e22 4D01F3   		add	r11, r14	# ivtmp.296, _278
 4920              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4921              		.loc 1 507 9 is_stmt 0 view .LVU1674
 4922 1e25 4D39E8   		cmp	r8, r13	# range_stop_vector, ivtmp.293
 4923 1e28 7646     		jbe	.L275	#,
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4924              		.loc 1 508 13 is_stmt 1 view .LVU1675
 4925              	# sieve_extend.c:508:             bitarray_vector[current_vector       ] |= quadmask;
 508:sieve_extend.c ****             bitarray_vector[current_vector+step  ] |= quadmask;
 4926              		.loc 1 508 52 is_stmt 0 view .LVU1676
 4927 1e2a C4416DEB 		vpor	ymm14, ymm2, YMMWORD PTR [r11]	# tmp461, quadmask.57_42, MEM[base: _282, offset: 0B]
 4927      33
 4928 1e2f 4B8D5C25 		lea	rbx, 0[r13+r12]	# ivtmp.293,
 4928      00
 4929 1e34 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm14	# MEM[base: _282, offset: 0B], tmp461
 4929      33
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4930              		.loc 1 509 13 is_stmt 1 view .LVU1677
 4931 1e39 4C89E8   		mov	rax, r13	# ivtmp.293, ivtmp.293
 4932              	# sieve_extend.c:509:             bitarray_vector[current_vector+step  ] |= quadmask;
 509:sieve_extend.c ****             bitarray_vector[current_vector+step_2] |= quadmask;
 4933              		.loc 1 509 52 is_stmt 0 view .LVU1678
 4934 1e3c C4416DEB 		vpor	ymm15, ymm2, YMMWORD PTR [r11+rcx]	# tmp462, quadmask.57_42, MEM[base: _282, index: _285, off
 4934      3C0B
 4935 1e42 C4417D7F 		vmovdqa	YMMWORD PTR [r11+rcx], ymm15	# MEM[base: _282, index: _285, offset: 0B], tmp462
 4935      3C0B
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4936              		.loc 1 510 13 is_stmt 1 view .LVU1679
 4937              	# sieve_extend.c:510:             bitarray_vector[current_vector+step_2] |= quadmask;
 510:sieve_extend.c ****             bitarray_vector[current_vector+step_3] |= quadmask;
 4938              		.loc 1 510 52 is_stmt 0 view .LVU1680
 4939 1e48 C4816DEB 		vpor	ymm0, ymm2, YMMWORD PTR [r11+r10]	# tmp463, quadmask.57_42, MEM[base: _282, index: _289, offs
 4939      0413
 4940 1e4e C4817D7F 		vmovdqa	YMMWORD PTR [r11+r10], ymm0	# MEM[base: _282, index: _289, offset: 0B], tmp463
 4940      0413
 511:sieve_extend.c ****         }
 4941              		.loc 1 511 13 is_stmt 1 view .LVU1681
 4942              	# sieve_extend.c:511:             bitarray_vector[current_vector+step_3] |= quadmask;
 511:sieve_extend.c ****         }
 4943              		.loc 1 511 52 is_stmt 0 view .LVU1682
 4944 1e54 C4816DEB 		vpor	ymm1, ymm2, YMMWORD PTR [r11+r9]	# tmp464, quadmask.57_42, MEM[base: _282, index: _293, offse
GAS LISTING /tmp/ccgH0yRS.s 			page 143


 4944      0C0B
 4945 1e5a C4817D7F 		vmovdqa	YMMWORD PTR [r11+r9], ymm1	# MEM[base: _282, index: _293, offset: 0B], tmp464
 4945      0C0B
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4946              		.loc 1 507 58 is_stmt 1 view .LVU1683
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4947              		.loc 1 507 15 view .LVU1684
 4948              	.LVL190:
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4949              		.loc 1 507 15 is_stmt 0 view .LVU1685
 4950 1e60 4D01F3   		add	r11, r14	# ivtmp.296, _278
 4951              	# sieve_extend.c:507:         for(; current_vector+step_4 < range_stop_vector; current_vector += st
 507:sieve_extend.c ****             bitarray_vector[current_vector       ] |= quadmask;
 4952              		.loc 1 507 9 view .LVU1686
 4953 1e63 4939D8   		cmp	r8, rbx	# range_stop_vector, ivtmp.293
 4954 1e66 0F87FFFE 		ja	.L276	#,
 4954      FFFF
 4955              	.LVL191:
 4956 1e6c 0F1F4000 		.p2align 4
 4957              		.p2align 3
 4958              	.L275:
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4959              		.loc 1 515 15 is_stmt 1 view .LVU1687
 4960              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4961              		.loc 1 515 9 is_stmt 0 view .LVU1688
 4962 1e70 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.293
 4963 1e73 0F86C700 		jbe	.L277	#,
 4963      0000
 4964              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4965              		.loc 1 516 45 view .LVU1689
 4966 1e79 C5FD6F54 		vmovdqa	ymm2, YMMWORD PTR 96[rsp]	# quadmask.61_63, quadmask
 4966      2460
 4967 1e7f 4989C3   		mov	r11, rax	# tmp252, ivtmp.293
 4968 1e82 49C1E305 		sal	r11, 5	# tmp252,
 4969 1e86 4901FB   		add	r11, rdi	# ivtmp.290, bitarray_word
 4970              	.L278:
 516:sieve_extend.c ****         }
 4971              		.loc 1 516 13 is_stmt 1 discriminator 2 view .LVU1690
 4972              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4973              		.loc 1 516 45 is_stmt 0 discriminator 2 view .LVU1691
 4974 1e89 C4C16DEB 		vpor	ymm3, ymm2, YMMWORD PTR [r11]	# tmp253, quadmask.61_63, MEM[base: _272, offset: 0B]
 4974      1B
 4975              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4976              		.loc 1 515 66 discriminator 2 view .LVU1692
 4977 1e8e 4801D0   		add	rax, rdx	# ivtmp.293, step
 4978              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4979              		.loc 1 516 45 discriminator 2 view .LVU1693
 4980 1e91 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm3	# MEM[base: _272, offset: 0B], tmp253
 4980      1B
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4981              		.loc 1 515 51 is_stmt 1 discriminator 2 view .LVU1694
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
GAS LISTING /tmp/ccgH0yRS.s 			page 144


 4982              		.loc 1 515 15 discriminator 2 view .LVU1695
 4983 1e96 4901CB   		add	r11, rcx	# ivtmp.290, _285
 4984              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4985              		.loc 1 515 9 is_stmt 0 discriminator 2 view .LVU1696
 4986 1e99 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.293
 4987 1e9c 0F869E00 		jbe	.L277	#,
 4987      0000
 516:sieve_extend.c ****         }
 4988              		.loc 1 516 13 is_stmt 1 view .LVU1697
 4989              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4990              		.loc 1 516 45 is_stmt 0 view .LVU1698
 4991 1ea2 C4C16DEB 		vpor	ymm4, ymm2, YMMWORD PTR [r11]	# tmp436, quadmask.61_63, MEM[base: _272, offset: 0B]
 4991      23
 4992              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4993              		.loc 1 515 66 view .LVU1699
 4994 1ea7 4801D0   		add	rax, rdx	# ivtmp.293, step
 4995              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 4996              		.loc 1 516 45 view .LVU1700
 4997 1eaa C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm4	# MEM[base: _272, offset: 0B], tmp436
 4997      23
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4998              		.loc 1 515 51 is_stmt 1 view .LVU1701
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 4999              		.loc 1 515 15 view .LVU1702
 5000 1eaf 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5001              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5002              		.loc 1 515 9 is_stmt 0 view .LVU1703
 5003 1eb2 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.293
 5004 1eb5 0F868500 		jbe	.L277	#,
 5004      0000
 516:sieve_extend.c ****         }
 5005              		.loc 1 516 13 is_stmt 1 view .LVU1704
 5006              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5007              		.loc 1 516 45 is_stmt 0 view .LVU1705
 5008 1ebb C4C16DEB 		vpor	ymm5, ymm2, YMMWORD PTR [r11]	# tmp438, quadmask.61_63, MEM[base: _272, offset: 0B]
 5008      2B
 5009              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5010              		.loc 1 515 66 view .LVU1706
 5011 1ec0 4801D0   		add	rax, rdx	# ivtmp.293, step
 5012              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5013              		.loc 1 516 45 view .LVU1707
 5014 1ec3 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm5	# MEM[base: _272, offset: 0B], tmp438
 5014      2B
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5015              		.loc 1 515 51 is_stmt 1 view .LVU1708
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5016              		.loc 1 515 15 view .LVU1709
 5017 1ec8 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5018              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
GAS LISTING /tmp/ccgH0yRS.s 			page 145


 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5019              		.loc 1 515 9 is_stmt 0 view .LVU1710
 5020 1ecb 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.293
 5021 1ece 7670     		jbe	.L277	#,
 516:sieve_extend.c ****         }
 5022              		.loc 1 516 13 is_stmt 1 view .LVU1711
 5023              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5024              		.loc 1 516 45 is_stmt 0 view .LVU1712
 5025 1ed0 C4C16DEB 		vpor	ymm6, ymm2, YMMWORD PTR [r11]	# tmp440, quadmask.61_63, MEM[base: _272, offset: 0B]
 5025      33
 5026              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5027              		.loc 1 515 66 view .LVU1713
 5028 1ed5 4801D0   		add	rax, rdx	# ivtmp.293, step
 5029              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5030              		.loc 1 516 45 view .LVU1714
 5031 1ed8 C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm6	# MEM[base: _272, offset: 0B], tmp440
 5031      33
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5032              		.loc 1 515 51 is_stmt 1 view .LVU1715
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5033              		.loc 1 515 15 view .LVU1716
 5034 1edd 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5035              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5036              		.loc 1 515 9 is_stmt 0 view .LVU1717
 5037 1ee0 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.293
 5038 1ee3 765B     		jbe	.L277	#,
 516:sieve_extend.c ****         }
 5039              		.loc 1 516 13 is_stmt 1 view .LVU1718
 5040              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5041              		.loc 1 516 45 is_stmt 0 view .LVU1719
 5042 1ee5 C4C16DEB 		vpor	ymm7, ymm2, YMMWORD PTR [r11]	# tmp442, quadmask.61_63, MEM[base: _272, offset: 0B]
 5042      3B
 5043              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5044              		.loc 1 515 66 view .LVU1720
 5045 1eea 4801D0   		add	rax, rdx	# ivtmp.293, step
 5046              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5047              		.loc 1 516 45 view .LVU1721
 5048 1eed C4C17D7F 		vmovdqa	YMMWORD PTR [r11], ymm7	# MEM[base: _272, offset: 0B], tmp442
 5048      3B
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5049              		.loc 1 515 51 is_stmt 1 view .LVU1722
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5050              		.loc 1 515 15 view .LVU1723
 5051 1ef2 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5052              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5053              		.loc 1 515 9 is_stmt 0 view .LVU1724
 5054 1ef5 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.293
 5055 1ef8 7646     		jbe	.L277	#,
 516:sieve_extend.c ****         }
GAS LISTING /tmp/ccgH0yRS.s 			page 146


 5056              		.loc 1 516 13 is_stmt 1 view .LVU1725
 5057              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5058              		.loc 1 516 45 is_stmt 0 view .LVU1726
 5059 1efa C4416DEB 		vpor	ymm8, ymm2, YMMWORD PTR [r11]	# tmp444, quadmask.61_63, MEM[base: _272, offset: 0B]
 5059      03
 5060              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5061              		.loc 1 515 66 view .LVU1727
 5062 1eff 4801D0   		add	rax, rdx	# ivtmp.293, step
 5063              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5064              		.loc 1 516 45 view .LVU1728
 5065 1f02 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm8	# MEM[base: _272, offset: 0B], tmp444
 5065      03
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5066              		.loc 1 515 51 is_stmt 1 view .LVU1729
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5067              		.loc 1 515 15 view .LVU1730
 5068 1f07 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5069              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5070              		.loc 1 515 9 is_stmt 0 view .LVU1731
 5071 1f0a 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.293
 5072 1f0d 7631     		jbe	.L277	#,
 516:sieve_extend.c ****         }
 5073              		.loc 1 516 13 is_stmt 1 view .LVU1732
 5074              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5075              		.loc 1 516 45 is_stmt 0 view .LVU1733
 5076 1f0f C4416DEB 		vpor	ymm9, ymm2, YMMWORD PTR [r11]	# tmp446, quadmask.61_63, MEM[base: _272, offset: 0B]
 5076      0B
 5077              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5078              		.loc 1 515 66 view .LVU1734
 5079 1f14 4801D0   		add	rax, rdx	# ivtmp.293, step
 5080              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5081              		.loc 1 516 45 view .LVU1735
 5082 1f17 C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm9	# MEM[base: _272, offset: 0B], tmp446
 5082      0B
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5083              		.loc 1 515 51 is_stmt 1 view .LVU1736
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5084              		.loc 1 515 15 view .LVU1737
 5085 1f1c 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5086              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5087              		.loc 1 515 9 is_stmt 0 view .LVU1738
 5088 1f1f 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.293
 5089 1f22 761C     		jbe	.L277	#,
 516:sieve_extend.c ****         }
 5090              		.loc 1 516 13 is_stmt 1 view .LVU1739
 5091              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5092              		.loc 1 516 45 is_stmt 0 view .LVU1740
 5093 1f24 C4416DEB 		vpor	ymm10, ymm2, YMMWORD PTR [r11]	# tmp448, quadmask.61_63, MEM[base: _272, offset: 0B]
GAS LISTING /tmp/ccgH0yRS.s 			page 147


 5093      13
 5094              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5095              		.loc 1 515 66 view .LVU1741
 5096 1f29 4801D0   		add	rax, rdx	# ivtmp.293, step
 5097              	# sieve_extend.c:516:             bitarray_vector[current_vector] |= quadmask;
 516:sieve_extend.c ****         }
 5098              		.loc 1 516 45 view .LVU1742
 5099 1f2c C4417D7F 		vmovdqa	YMMWORD PTR [r11], ymm10	# MEM[base: _272, offset: 0B], tmp448
 5099      13
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5100              		.loc 1 515 51 is_stmt 1 view .LVU1743
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5101              		.loc 1 515 15 view .LVU1744
 5102 1f31 4901CB   		add	r11, rcx	# ivtmp.290, _285
 5103              	# sieve_extend.c:515:         for(; current_vector < range_stop_vector; current_vector += step) {
 515:sieve_extend.c ****             bitarray_vector[current_vector] |= quadmask;
 5104              		.loc 1 515 9 is_stmt 0 view .LVU1745
 5105 1f34 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.293
 5106 1f37 0F874CFF 		ja	.L278	#,
 5106      FFFF
 5107 1f3d 0F1F00   		.p2align 4
 5108              		.p2align 3
 5109              	.L277:
 519:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 5110              		.loc 1 519 9 is_stmt 1 view .LVU1746
 5111              	# sieve_extend.c:519:         if unlikely(current_vector == range_stop_vector) {
 519:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 5112              		.loc 1 519 12 is_stmt 0 view .LVU1747
 5113 1f40 4939C0   		cmp	r8, rax	# range_stop_vector, ivtmp.293
 5114 1f43 7410     		je	.L466	#,
 5115              	.L280:
 519:sieve_extend.c ****             counter_t index_word = current_vector * VECTOR_ELEMENTS;
 5116              		.loc 1 519 12 view .LVU1748
 5117              	.LBE337:
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 5118              		.loc 1 478 41 is_stmt 1 view .LVU1749
 5119              	# sieve_extend.c:478:     for (counter_t index = range_start; index < range_stop_unique;) {
 478:sieve_extend.c ****         const counter_t current_vector_start_word =  vectorindex(index) << (SHIFT_VECTOR - SHIFT_WO
 5120              		.loc 1 478 5 is_stmt 0 view .LVU1750
 5121 1f45 48397424 		cmp	QWORD PTR 88[rsp], rsi	# %sfp, range_start
 5121      58
 5122 1f4a 0F87E0FC 		ja	.L284	#,
 5122      FFFF
 5123              		.p2align 4,,3
 5124 1f50 E91BFCFF 		jmp	.L459	#
 5124      FF
 5125              	.L466:
 5126              	.LBB338:
 5127              	.LBB334:
 520:sieve_extend.c ****             counter_t range_stop_word = wordindex(range_stop);
 5128              		.loc 1 520 13 is_stmt 1 view .LVU1751
 5129              	.LVL192:
 521:sieve_extend.c ****             if likely(index_word <= range_stop_word) {
 5130              		.loc 1 521 13 view .LVU1752
 522:sieve_extend.c ****                 #pragma ivdep
 5131              		.loc 1 522 13 view .LVU1753
GAS LISTING /tmp/ccgH0yRS.s 			page 148


 5132              	# sieve_extend.c:522:             if likely(index_word <= range_stop_word) {
 522:sieve_extend.c ****                 #pragma ivdep
 5133              		.loc 1 522 16 is_stmt 0 view .LVU1754
 5134 1f55 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# range_stop_word, %sfp
 5134      50
 5135 1f5a 4C397C24 		cmp	QWORD PTR 72[rsp], r15	# %sfp, range_stop_word
 5135      48
 5136 1f5f 77E4     		ja	.L280	#,
 5137              	.LVL193:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 5138              		.loc 1 524 31 is_stmt 1 view .LVU1755
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5139              		.loc 1 525 21 view .LVU1756
 526:sieve_extend.c ****                 }
 5140              		.loc 1 526 25 view .LVU1757
 5141              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 5142              		.loc 1 526 56 is_stmt 0 view .LVU1758
 5143 1f61 488B4424 		mov	rax, QWORD PTR 96[rsp]	# quadmask, quadmask
 5143      60
 5144 1f66 4D89C5   		mov	r13, r8	# tmp254, range_stop_vector
 5145              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5146              		.loc 1 525 24 view .LVU1759
 5147 1f69 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# _147, %sfp
 5147      40
 5148              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 5149              		.loc 1 526 56 view .LVU1760
 5150 1f6e 49C1E505 		sal	r13, 5	# tmp254,
 5151 1f72 4A09042F 		or	QWORD PTR [rdi+r13], rax	# *_138, quadmask
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 5152              		.loc 1 524 55 is_stmt 1 view .LVU1761
 5153              	.LVL194:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 5154              		.loc 1 524 31 view .LVU1762
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5155              		.loc 1 525 21 view .LVU1763
 5156              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5157              		.loc 1 525 24 is_stmt 0 view .LVU1764
 5158 1f76 4939DF   		cmp	r15, rbx	# range_stop_word, _147
 5159 1f79 0F833101 		jnb	.L467	#,
 5159      0000
 5160              	.L282:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 5161              		.loc 1 524 55 is_stmt 1 view .LVU1765
 5162              	.LVL195:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 5163              		.loc 1 524 31 view .LVU1766
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5164              		.loc 1 525 21 view .LVU1767
 5165              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5166              		.loc 1 525 24 is_stmt 0 view .LVU1768
 5167 1f7f 4C8B6C24 		mov	r13, QWORD PTR 56[rsp]	# _161, %sfp
 5167      38
GAS LISTING /tmp/ccgH0yRS.s 			page 149


 5168 1f84 4C396C24 		cmp	QWORD PTR 80[rsp], r13	# %sfp, _161
 5168      50
 5169 1f89 0F830F01 		jnb	.L468	#,
 5169      0000
 5170              	.L283:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 5171              		.loc 1 524 55 is_stmt 1 view .LVU1769
 5172              	.LVL196:
 524:sieve_extend.c ****                     if unlikely(index_word+word <= range_stop_word)
 5173              		.loc 1 524 31 view .LVU1770
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5174              		.loc 1 525 21 view .LVU1771
 5175              	# sieve_extend.c:525:                     if unlikely(index_word+word <= range_stop_word)
 525:sieve_extend.c ****                         bitarray_word[index_word+word] |= quadmask[word];
 5176              		.loc 1 525 24 is_stmt 0 view .LVU1772
 5177 1f8f 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# _175, %sfp
 5177      30
 5178 1f94 4C395C24 		cmp	QWORD PTR 80[rsp], r11	# %sfp, _175
 5178      50
 5179 1f99 72AA     		jb	.L280	#,
 526:sieve_extend.c ****                 }
 5180              		.loc 1 526 25 is_stmt 1 view .LVU1773
 5181              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 5182              		.loc 1 526 56 is_stmt 0 view .LVU1774
 5183 1f9b 4C8B7C24 		mov	r15, QWORD PTR 120[rsp]	# quadmask, quadmask
 5183      78
 5184 1fa0 4C8B6C24 		mov	r13, QWORD PTR 40[rsp]	# _180, %sfp
 5184      28
 5185 1fa5 4D097D00 		or	QWORD PTR 0[r13], r15	# *_180, quadmask
 5186 1fa9 EB9A     		jmp	.L280	#
 5187              	.LVL197:
 5188              	.L268:
 526:sieve_extend.c ****                 }
 5189              		.loc 1 526 56 view .LVU1775
 5190              	.LBE334:
 5191              	.LBE338:
 5192              	.LBE340:
 5193              	.LBB341:
 5194              	.LBB327:
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5195              		.loc 1 446 49 is_stmt 1 view .LVU1776
 5196              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5197              		.loc 1 446 13 is_stmt 0 view .LVU1777
 5198 1fab 4839CE   		cmp	rsi, rcx	# range_start, range_stop
 5199 1fae 0F87BFFB 		ja	.L266	#,
 5199      FFFF
 5200              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5201              		.loc 1 447 52 view .LVU1778
 5202 1fb4 BB010000 		mov	ebx, 1	# tmp229,
 5202      00
 5203              	.LVL198:
 5204              	.L271:
 447:sieve_extend.c ****             return;                 
 5205              		.loc 1 447 17 is_stmt 1 discriminator 3 view .LVU1779
GAS LISTING /tmp/ccgH0yRS.s 			page 150


 5206              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5207              		.loc 1 447 49 is_stmt 0 discriminator 3 view .LVU1780
 5208 1fb9 4989F0   		mov	r8, rsi	# tmp225, range_start
 5209              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5210              		.loc 1 447 52 discriminator 3 view .LVU1781
 5211 1fbc C462C9F7 		shlx	r10, rbx, rsi	# tmp228, tmp229, range_start
 5211      D3
 5212              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5213              		.loc 1 447 49 discriminator 3 view .LVU1782
 5214 1fc1 49C1E806 		shr	r8, 6	# tmp225,
 5215              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5216              		.loc 1 446 76 discriminator 3 view .LVU1783
 5217 1fc5 4801D6   		add	rsi, rdx	# range_start, step
 5218              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5219              		.loc 1 447 49 discriminator 3 view .LVU1784
 5220 1fc8 4E0914C7 		or	QWORD PTR [rdi+r8*8], r10	# *_14, tmp228
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5221              		.loc 1 446 70 is_stmt 1 discriminator 3 view .LVU1785
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5222              		.loc 1 446 49 discriminator 3 view .LVU1786
 5223              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5224              		.loc 1 446 13 is_stmt 0 discriminator 3 view .LVU1787
 5225 1fcc 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5226 1fcf 0F829EFB 		jb	.L266	#,
 5226      FFFF
 447:sieve_extend.c ****             return;                 
 5227              		.loc 1 447 17 is_stmt 1 view .LVU1788
 5228              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5229              		.loc 1 447 49 is_stmt 0 view .LVU1789
 5230 1fd5 4989F3   		mov	r11, rsi	# tmp361, range_start
 5231              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5232              		.loc 1 447 52 view .LVU1790
 5233 1fd8 C462C9F7 		shlx	r9, rbx, rsi	# tmp364, tmp229, range_start
 5233      CB
 5234              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5235              		.loc 1 447 49 view .LVU1791
 5236 1fdd 49C1EB06 		shr	r11, 6	# tmp361,
 5237              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5238              		.loc 1 446 76 view .LVU1792
 5239 1fe1 4801D6   		add	rsi, rdx	# range_start, step
 5240              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5241              		.loc 1 447 49 view .LVU1793
 5242 1fe4 4E090CDF 		or	QWORD PTR [rdi+r11*8], r9	# *_14, tmp364
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5243              		.loc 1 446 70 is_stmt 1 view .LVU1794
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccgH0yRS.s 			page 151


 5244              		.loc 1 446 49 view .LVU1795
 5245              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5246              		.loc 1 446 13 is_stmt 0 view .LVU1796
 5247 1fe8 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5248 1feb 0F8282FB 		jb	.L266	#,
 5248      FFFF
 447:sieve_extend.c ****             return;                 
 5249              		.loc 1 447 17 is_stmt 1 view .LVU1797
 5250              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5251              		.loc 1 447 49 is_stmt 0 view .LVU1798
 5252 1ff1 4989F6   		mov	r14, rsi	# tmp366, range_start
 5253              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5254              		.loc 1 447 52 view .LVU1799
 5255 1ff4 C462C9F7 		shlx	r15, rbx, rsi	# tmp369, tmp229, range_start
 5255      FB
 5256              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5257              		.loc 1 447 49 view .LVU1800
 5258 1ff9 49C1EE06 		shr	r14, 6	# tmp366,
 5259              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5260              		.loc 1 446 76 view .LVU1801
 5261 1ffd 4801D6   		add	rsi, rdx	# range_start, step
 5262              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5263              		.loc 1 447 49 view .LVU1802
 5264 2000 4E093CF7 		or	QWORD PTR [rdi+r14*8], r15	# *_14, tmp369
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5265              		.loc 1 446 70 is_stmt 1 view .LVU1803
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5266              		.loc 1 446 49 view .LVU1804
 5267              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5268              		.loc 1 446 13 is_stmt 0 view .LVU1805
 5269 2004 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5270 2007 0F8266FB 		jb	.L266	#,
 5270      FFFF
 447:sieve_extend.c ****             return;                 
 5271              		.loc 1 447 17 is_stmt 1 view .LVU1806
 5272              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5273              		.loc 1 447 49 is_stmt 0 view .LVU1807
 5274 200d 4989F5   		mov	r13, rsi	# tmp371, range_start
 5275              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5276              		.loc 1 447 52 view .LVU1808
 5277 2010 C462C9F7 		shlx	r12, rbx, rsi	# tmp374, tmp229, range_start
 5277      E3
 5278              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5279              		.loc 1 447 49 view .LVU1809
 5280 2015 49C1ED06 		shr	r13, 6	# tmp371,
 5281              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccgH0yRS.s 			page 152


 5282              		.loc 1 446 76 view .LVU1810
 5283 2019 4801D6   		add	rsi, rdx	# range_start, step
 5284              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5285              		.loc 1 447 49 view .LVU1811
 5286 201c 4E0924EF 		or	QWORD PTR [rdi+r13*8], r12	# *_14, tmp374
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5287              		.loc 1 446 70 is_stmt 1 view .LVU1812
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5288              		.loc 1 446 49 view .LVU1813
 5289              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5290              		.loc 1 446 13 is_stmt 0 view .LVU1814
 5291 2020 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5292 2023 0F824AFB 		jb	.L266	#,
 5292      FFFF
 447:sieve_extend.c ****             return;                 
 5293              		.loc 1 447 17 is_stmt 1 view .LVU1815
 5294              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5295              		.loc 1 447 49 is_stmt 0 view .LVU1816
 5296 2029 4889F0   		mov	rax, rsi	# tmp376, range_start
 5297              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5298              		.loc 1 447 52 view .LVU1817
 5299 202c C462C9F7 		shlx	r8, rbx, rsi	# tmp379, tmp229, range_start
 5299      C3
 5300              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5301              		.loc 1 447 49 view .LVU1818
 5302 2031 48C1E806 		shr	rax, 6	# tmp376,
 5303              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5304              		.loc 1 446 76 view .LVU1819
 5305 2035 4801D6   		add	rsi, rdx	# range_start, step
 5306              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5307              		.loc 1 447 49 view .LVU1820
 5308 2038 4C0904C7 		or	QWORD PTR [rdi+rax*8], r8	# *_14, tmp379
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5309              		.loc 1 446 70 is_stmt 1 view .LVU1821
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5310              		.loc 1 446 49 view .LVU1822
 5311              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5312              		.loc 1 446 13 is_stmt 0 view .LVU1823
 5313 203c 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5314 203f 0F822EFB 		jb	.L266	#,
 5314      FFFF
 447:sieve_extend.c ****             return;                 
 5315              		.loc 1 447 17 is_stmt 1 view .LVU1824
 5316              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5317              		.loc 1 447 49 is_stmt 0 view .LVU1825
 5318 2045 4989F2   		mov	r10, rsi	# tmp381, range_start
 5319              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
GAS LISTING /tmp/ccgH0yRS.s 			page 153


 5320              		.loc 1 447 52 view .LVU1826
 5321 2048 C462C9F7 		shlx	r11, rbx, rsi	# tmp384, tmp229, range_start
 5321      DB
 5322              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5323              		.loc 1 447 49 view .LVU1827
 5324 204d 49C1EA06 		shr	r10, 6	# tmp381,
 5325              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5326              		.loc 1 446 76 view .LVU1828
 5327 2051 4801D6   		add	rsi, rdx	# range_start, step
 5328              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5329              		.loc 1 447 49 view .LVU1829
 5330 2054 4E091CD7 		or	QWORD PTR [rdi+r10*8], r11	# *_14, tmp384
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5331              		.loc 1 446 70 is_stmt 1 view .LVU1830
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5332              		.loc 1 446 49 view .LVU1831
 5333              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5334              		.loc 1 446 13 is_stmt 0 view .LVU1832
 5335 2058 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5336 205b 0F8212FB 		jb	.L266	#,
 5336      FFFF
 447:sieve_extend.c ****             return;                 
 5337              		.loc 1 447 17 is_stmt 1 view .LVU1833
 5338              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5339              		.loc 1 447 49 is_stmt 0 view .LVU1834
 5340 2061 4989F6   		mov	r14, rsi	# tmp386, range_start
 5341              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5342              		.loc 1 447 52 view .LVU1835
 5343 2064 C462C9F7 		shlx	r9, rbx, rsi	# tmp389, tmp229, range_start
 5343      CB
 5344              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5345              		.loc 1 447 49 view .LVU1836
 5346 2069 49C1EE06 		shr	r14, 6	# tmp386,
 5347              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5348              		.loc 1 446 76 view .LVU1837
 5349 206d 4801D6   		add	rsi, rdx	# range_start, step
 5350              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5351              		.loc 1 447 49 view .LVU1838
 5352 2070 4E090CF7 		or	QWORD PTR [rdi+r14*8], r9	# *_14, tmp389
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5353              		.loc 1 446 70 is_stmt 1 view .LVU1839
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5354              		.loc 1 446 49 view .LVU1840
 5355              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5356              		.loc 1 446 13 is_stmt 0 view .LVU1841
 5357 2074 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5358 2077 0F82F6FA 		jb	.L266	#,
GAS LISTING /tmp/ccgH0yRS.s 			page 154


 5358      FFFF
 447:sieve_extend.c ****             return;                 
 5359              		.loc 1 447 17 is_stmt 1 view .LVU1842
 5360              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5361              		.loc 1 447 49 is_stmt 0 view .LVU1843
 5362 207d 4989F7   		mov	r15, rsi	# tmp391, range_start
 5363              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5364              		.loc 1 447 52 view .LVU1844
 5365 2080 C462C9F7 		shlx	r13, rbx, rsi	# tmp394, tmp229, range_start
 5365      EB
 5366              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5367              		.loc 1 447 49 view .LVU1845
 5368 2085 49C1EF06 		shr	r15, 6	# tmp391,
 5369              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5370              		.loc 1 446 76 view .LVU1846
 5371 2089 4801D6   		add	rsi, rdx	# range_start, step
 5372              	# sieve_extend.c:447:                 bitarray_word[wordindex(index)] |= markmask(index);
 447:sieve_extend.c ****             return;                 
 5373              		.loc 1 447 49 view .LVU1847
 5374 208c 4E092CFF 		or	QWORD PTR [rdi+r15*8], r13	# *_14, tmp394
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5375              		.loc 1 446 70 is_stmt 1 view .LVU1848
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5376              		.loc 1 446 49 view .LVU1849
 5377              	# sieve_extend.c:446:             for (counter_t index = range_start; index <= range_stop; index +=
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5378              		.loc 1 446 13 is_stmt 0 view .LVU1850
 5379 2090 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 5380 2093 0F8320FF 		jnb	.L271	#,
 5380      FFFF
 5381 2099 E9D5FAFF 		jmp	.L266	#
 5381      FF
 5382              	.LVL199:
 5383              	.L468:
 446:sieve_extend.c ****                 bitarray_word[wordindex(index)] |= markmask(index);
 5384              		.loc 1 446 13 view .LVU1851
 5385              	.LBE327:
 5386              	.LBE341:
 5387              	.LBB342:
 5388              	.LBB339:
 5389              	.LBB335:
 526:sieve_extend.c ****                 }
 5390              		.loc 1 526 25 is_stmt 1 view .LVU1852
 5391              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 5392              		.loc 1 526 56 is_stmt 0 view .LVU1853
 5393 209e 488B4424 		mov	rax, QWORD PTR 112[rsp]	# quadmask, quadmask
 5393      70
 5394 20a3 488B5C24 		mov	rbx, QWORD PTR 32[rsp]	# _166, %sfp
 5394      20
 5395 20a8 480903   		or	QWORD PTR [rbx], rax	# *_166, quadmask
 5396 20ab E9DFFEFF 		jmp	.L283	#
 5396      FF
GAS LISTING /tmp/ccgH0yRS.s 			page 155


 5397              	.LVL200:
 5398              	.L467:
 526:sieve_extend.c ****                 }
 5399              		.loc 1 526 25 is_stmt 1 view .LVU1854
 5400              	# sieve_extend.c:526:                         bitarray_word[index_word+word] |= quadmask[word];
 526:sieve_extend.c ****                 }
 5401              		.loc 1 526 56 is_stmt 0 view .LVU1855
 5402 20b0 4C8B5C24 		mov	r11, QWORD PTR 104[rsp]	# quadmask, quadmask
 5402      68
 5403 20b5 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# _152, %sfp
 5403      18
 5404 20ba 4D091F   		or	QWORD PTR [r15], r11	# *_152, quadmask
 5405 20bd E9BDFEFF 		jmp	.L282	#
 5405      FF
 5406              	.LVL201:
 5407              	.L465:
 526:sieve_extend.c ****                 }
 5408              		.loc 1 526 56 view .LVU1856
 5409              	.LBE335:
 5410              	.LBE339:
 5411              	.LBE342:
 5412              	# sieve_extend.c:532: }
 532:sieve_extend.c **** 
 5413              		.loc 1 532 1 view .LVU1857
 5414 20c2 E8000000 		call	__stack_chk_fail@PLT	#
 5414      00
 5415              	.LVL202:
 532:sieve_extend.c **** 
 5416              		.loc 1 532 1 view .LVU1858
 5417              		.cfi_endproc
 5418              	.LFE63:
 5420 20c7 660F1F84 		.p2align 4
 5420      00000000 
 5420      00
 5422              	extendSieve_aligned:
 5423              	.LVL203:
 5424              	.LFB65:
 568:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5425              		.loc 1 568 140 is_stmt 1 view -0
 5426              		.cfi_startproc
 569:sieve_extend.c **** 
 5427              		.loc 1 569 5 view .LVU1860
 571:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5428              		.loc 1 571 5 view .LVU1861
 5429              	# sieve_extend.c:568: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 568:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5430              		.loc 1 568 140 is_stmt 0 view .LVU1862
 5431 20d0 55       		push	rbp	#
 5432              		.cfi_def_cfa_offset 16
 5433              		.cfi_offset 6, -16
 5434 20d1 4889E5   		mov	rbp, rsp	#,
 5435              		.cfi_def_cfa_register 6
 5436 20d4 4157     		push	r15	#
 5437 20d6 4156     		push	r14	#
 5438 20d8 4155     		push	r13	#
 5439              		.cfi_offset 15, -24
 5440              		.cfi_offset 14, -32
GAS LISTING /tmp/ccgH0yRS.s 			page 156


 5441              		.cfi_offset 13, -40
 5442 20da 4989FD   		mov	r13, rdi	# bitarray, tmp295
 5443 20dd 4154     		push	r12	#
 5444              		.cfi_offset 12, -48
 5445 20df 4989D4   		mov	r12, rdx	# size, tmp297
 5446 20e2 53       		push	rbx	#
 5447              		.cfi_offset 3, -56
 5448              	# sieve_extend.c:571:     const counter_t destination_stop_word = wordindex(destination_stop);
 571:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5449              		.loc 1 571 21 view .LVU1863
 5450 20e3 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 5451              	# sieve_extend.c:572:     const counter_t copy_start = source_start + size;
 572:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5452              		.loc 1 572 21 view .LVU1864
 5453 20e6 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 5454              	.LVL204:
 5455              	# sieve_extend.c:568: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 568:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5456              		.loc 1 568 140 view .LVU1865
 5457 20ea 4883E4E0 		and	rsp, -32	#,
 5458              	# sieve_extend.c:574:     counter_t copy_word = wordindex(copy_start);
 574:sieve_extend.c ****     
 5459              		.loc 1 574 15 view .LVU1866
 5460 20ee 4889C8   		mov	rax, rcx	# ivtmp.351, copy_start
 5461              	# sieve_extend.c:573:     counter_t source_word = wordindex(source_start);
 573:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5462              		.loc 1 573 15 view .LVU1867
 5463 20f1 48C1EE06 		shr	rsi, 6	# source_start,
 5464              	.LVL205:
 5465              	# sieve_extend.c:568: static void extendSieve_aligned(bitword_t* bitarray, const counter_t source_s
 568:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 5466              		.loc 1 568 140 view .LVU1868
 5467 20f5 488D6424 		lea	rsp, -32[rsp]	#,
 5467      E0
 5468              	# sieve_extend.c:574:     counter_t copy_word = wordindex(copy_start);
 574:sieve_extend.c ****     
 5469              		.loc 1 574 15 view .LVU1869
 5470 20fa 48C1E806 		shr	rax, 6	# ivtmp.351,
 5471              	# sieve_extend.c:576:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 576:sieve_extend.c **** 
 5472              		.loc 1 576 35 view .LVU1870
 5473 20fe 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 5473      00000000 
 5474              	.LVL206:
 5475              	# sieve_extend.c:571:     const counter_t destination_stop_word = wordindex(destination_stop);
 571:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5476              		.loc 1 571 21 view .LVU1871
 5477 2106 48C1EB06 		shr	rbx, 6	# tmp298,
 5478              	.LVL207:
 572:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 5479              		.loc 1 572 5 is_stmt 1 view .LVU1872
 573:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5480              		.loc 1 573 5 view .LVU1873
 5481              	# sieve_extend.c:576:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 576:sieve_extend.c **** 
 5482              		.loc 1 576 35 is_stmt 0 view .LVU1874
 5483 210a 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
GAS LISTING /tmp/ccgH0yRS.s 			page 157


 5483      00
 5484              	# sieve_extend.c:573:     counter_t source_word = wordindex(source_start);
 573:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5485              		.loc 1 573 15 view .LVU1875
 5486 210f 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 5486      08
 5487              	.LVL208:
 574:sieve_extend.c ****     
 5488              		.loc 1 574 5 is_stmt 1 view .LVU1876
 576:sieve_extend.c **** 
 5489              		.loc 1 576 5 view .LVU1877
 5490              	# sieve_extend.c:576:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 576:sieve_extend.c **** 
 5491              		.loc 1 576 52 is_stmt 0 view .LVU1878
 5492 2114 89CE     		mov	esi, ecx	# tmp183, copy_start
 5493              	.LVL209:
 5494              	# sieve_extend.c:578:     while (copy_word + size <= destination_stop_word) {
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5495              		.loc 1 578 22 view .LVU1879
 5496 2116 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.351,
 5497              	.LVL210:
 5498              	# sieve_extend.c:576:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 576:sieve_extend.c **** 
 5499              		.loc 1 576 52 view .LVU1880
 5500 211a F7D6     		not	esi	# tmp183
 5501              	# sieve_extend.c:576:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 576:sieve_extend.c **** 
 5502              		.loc 1 576 35 view .LVU1881
 5503 211c 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 5504              	# sieve_extend.c:576:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 576:sieve_extend.c **** 
 5505              		.loc 1 576 52 view .LVU1882
 5506 2120 48C7C2FF 		mov	rdx, -1	# tmp186,
 5506      FFFFFF
 5507              	.LVL211:
 576:sieve_extend.c **** 
 5508              		.loc 1 576 52 view .LVU1883
 5509 2127 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 5509      C2
 5510              	# sieve_extend.c:576:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 576:sieve_extend.c **** 
 5511              		.loc 1 576 49 view .LVU1884
 5512 212c C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 5512      0E
 5513              	# sieve_extend.c:576:     bitarray[copy_word] = bitarray[source_word] & ~chopmask(copy_start);
 576:sieve_extend.c **** 
 5514              		.loc 1 576 25 view .LVU1885
 5515 2131 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 5515      00
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5516              		.loc 1 578 5 is_stmt 1 view .LVU1886
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5517              		.loc 1 578 11 view .LVU1887
 5518 2136 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.351
 5519 2139 0F827101 		jb	.L470	#,
 5519      0000
 5520 213f 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
GAS LISTING /tmp/ccgH0yRS.s 			page 158


 5520      00000000 
 5521 2147 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 5521      00000000 
 5522              	.LVL212:
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5523              		.loc 1 578 11 is_stmt 0 view .LVU1888
 5524 214f 4D01EA   		add	r10, r13	# tmp190, bitarray
 5525              	# sieve_extend.c:579:         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*
 579:sieve_extend.c ****         copy_word += size;
 5526              		.loc 1 579 9 view .LVU1889
 5527 2152 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 5527      00000000 
 5528 215a 4929C2   		sub	r10, rax	# tmp190, tmp191
 5529 215d 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 5529      18
 5530              	.LVL213:
 5531              	.L471:
 579:sieve_extend.c ****         copy_word += size;
 5532              		.loc 1 579 9 is_stmt 1 view .LVU1890
 5533              	.LBB343:
 5534              	.LBI343:
 5535              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 5536              		.loc 2 31 1 view .LVU1891
 5537              	.LBB344:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
GAS LISTING /tmp/ccgH0yRS.s 			page 159


  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 5538              		.loc 2 34 3 view .LVU1892
 5539              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5540              		.loc 2 34 10 is_stmt 0 view .LVU1893
 5541 2162 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5541      18
 5542 2167 4C89FA   		mov	rdx, r15	#, _15
 5543 216a 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.351
 5543      10
 5544 216f 4C89F6   		mov	rsi, r14	#, _5
 5545 2172 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 5546 2176 E8000000 		call	memcpy@PLT	#
 5546      00
 5547              	.LVL214:
 5548              		.loc 2 34 10 view .LVU1894
 5549              	.LBE344:
 5550              	.LBE343:
 580:sieve_extend.c ****     }
 5551              		.loc 1 580 9 is_stmt 1 view .LVU1895
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5552              		.loc 1 578 11 view .LVU1896
 5553 217b 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5553      10
 5554 2180 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.351,
 5555 2184 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.351
 5556 2187 0F822301 		jb	.L470	#,
 5556      0000
 579:sieve_extend.c ****         copy_word += size;
 5557              		.loc 1 579 9 view .LVU1897
 5558              	.LVL215:
 5559              	.LBB352:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5560              		.loc 2 31 1 view .LVU1898
 5561              	.LBB345:
 5562              		.loc 2 34 3 view .LVU1899
 5563              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5564              		.loc 2 34 10 is_stmt 0 view .LVU1900
 5565 218d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5565      18
 5566 2192 4C89F6   		mov	rsi, r14	#, _5
 5567 2195 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.351
 5567      10
 5568              	.LVL216:
 5569              		.loc 2 34 10 view .LVU1901
 5570 219a 4C89FA   		mov	rdx, r15	#, _15
 5571 219d 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 5572 21a1 E8000000 		call	memcpy@PLT	#
 5572      00
 5573              	.LVL217:
 5574              		.loc 2 34 10 view .LVU1902
 5575              	.LBE345:
 5576              	.LBE352:
 580:sieve_extend.c ****     }
 5577              		.loc 1 580 9 is_stmt 1 view .LVU1903
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5578              		.loc 1 578 11 view .LVU1904
 5579 21a6 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
GAS LISTING /tmp/ccgH0yRS.s 			page 160


 5579      10
 5580 21ab 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.351,
 5581 21af 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.351
 5582 21b2 0F82F800 		jb	.L470	#,
 5582      0000
 579:sieve_extend.c ****         copy_word += size;
 5583              		.loc 1 579 9 view .LVU1905
 5584              	.LVL218:
 5585              	.LBB353:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5586              		.loc 2 31 1 view .LVU1906
 5587              	.LBB346:
 5588              		.loc 2 34 3 view .LVU1907
 5589              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5590              		.loc 2 34 10 is_stmt 0 view .LVU1908
 5591 21b8 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5591      18
 5592 21bd 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.351
 5592      10
 5593 21c2 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 5594 21c6 4C89FA   		mov	rdx, r15	#, _15
 5595 21c9 4C89F6   		mov	rsi, r14	#, _5
 5596 21cc E8000000 		call	memcpy@PLT	#
 5596      00
 5597              	.LVL219:
 5598              		.loc 2 34 10 view .LVU1909
 5599              	.LBE346:
 5600              	.LBE353:
 580:sieve_extend.c ****     }
 5601              		.loc 1 580 9 is_stmt 1 view .LVU1910
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5602              		.loc 1 578 11 view .LVU1911
 5603 21d1 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5603      10
 5604 21d6 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.351,
 5605 21da 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.351
 5606 21dd 0F82CD00 		jb	.L470	#,
 5606      0000
 579:sieve_extend.c ****         copy_word += size;
 5607              		.loc 1 579 9 view .LVU1912
 5608              	.LVL220:
 5609              	.LBB354:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5610              		.loc 2 31 1 view .LVU1913
 5611              	.LBB347:
 5612              		.loc 2 34 3 view .LVU1914
 5613              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5614              		.loc 2 34 10 is_stmt 0 view .LVU1915
 5615 21e3 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5615      18
 5616 21e8 4C89FA   		mov	rdx, r15	#, _15
 5617 21eb 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.351
 5617      10
 5618 21f0 4C89F6   		mov	rsi, r14	#, _5
 5619 21f3 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 5620 21f7 E8000000 		call	memcpy@PLT	#
 5620      00
GAS LISTING /tmp/ccgH0yRS.s 			page 161


 5621              	.LVL221:
 5622              		.loc 2 34 10 view .LVU1916
 5623              	.LBE347:
 5624              	.LBE354:
 580:sieve_extend.c ****     }
 5625              		.loc 1 580 9 is_stmt 1 view .LVU1917
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5626              		.loc 1 578 11 view .LVU1918
 5627 21fc 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5627      10
 5628 2201 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.351,
 5629 2205 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.351
 5630 2208 0F82A200 		jb	.L470	#,
 5630      0000
 579:sieve_extend.c ****         copy_word += size;
 5631              		.loc 1 579 9 view .LVU1919
 5632              	.LVL222:
 5633              	.LBB355:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5634              		.loc 2 31 1 view .LVU1920
 5635              	.LBB348:
 5636              		.loc 2 34 3 view .LVU1921
 5637              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5638              		.loc 2 34 10 is_stmt 0 view .LVU1922
 5639 220e 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5639      18
 5640 2213 4C89FA   		mov	rdx, r15	#, _15
 5641 2216 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.351
 5641      10
 5642 221b 4C89F6   		mov	rsi, r14	#, _5
 5643 221e 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 5644 2222 E8000000 		call	memcpy@PLT	#
 5644      00
 5645              	.LVL223:
 5646              		.loc 2 34 10 view .LVU1923
 5647              	.LBE348:
 5648              	.LBE355:
 580:sieve_extend.c ****     }
 5649              		.loc 1 580 9 is_stmt 1 view .LVU1924
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5650              		.loc 1 578 11 view .LVU1925
 5651 2227 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5651      10
 5652 222c 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.351,
 5653 2230 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.351
 5654 2233 727B     		jb	.L470	#,
 579:sieve_extend.c ****         copy_word += size;
 5655              		.loc 1 579 9 view .LVU1926
 5656              	.LVL224:
 5657              	.LBB356:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5658              		.loc 2 31 1 view .LVU1927
 5659              	.LBB349:
 5660              		.loc 2 34 3 view .LVU1928
 5661              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5662              		.loc 2 34 10 is_stmt 0 view .LVU1929
 5663 2235 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
GAS LISTING /tmp/ccgH0yRS.s 			page 162


 5663      18
 5664 223a 4C89F6   		mov	rsi, r14	#, _5
 5665 223d 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.351
 5665      10
 5666 2242 4C89FA   		mov	rdx, r15	#, _15
 5667 2245 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 5668 2249 E8000000 		call	memcpy@PLT	#
 5668      00
 5669              	.LVL225:
 5670              		.loc 2 34 10 view .LVU1930
 5671              	.LBE349:
 5672              	.LBE356:
 580:sieve_extend.c ****     }
 5673              		.loc 1 580 9 is_stmt 1 view .LVU1931
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5674              		.loc 1 578 11 view .LVU1932
 5675 224e 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5675      10
 5676 2253 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.351,
 5677 2257 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.351
 5678 225a 7254     		jb	.L470	#,
 579:sieve_extend.c ****         copy_word += size;
 5679              		.loc 1 579 9 view .LVU1933
 5680              	.LVL226:
 5681              	.LBB357:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5682              		.loc 2 31 1 view .LVU1934
 5683              	.LBB350:
 5684              		.loc 2 34 3 view .LVU1935
 5685              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5686              		.loc 2 34 10 is_stmt 0 view .LVU1936
 5687 225c 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5687      18
 5688 2261 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.351
 5688      10
 5689 2266 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 5690 226a 4C89FA   		mov	rdx, r15	#, _15
 5691 226d 4C89F6   		mov	rsi, r14	#, _5
 5692 2270 E8000000 		call	memcpy@PLT	#
 5692      00
 5693              	.LVL227:
 5694              		.loc 2 34 10 view .LVU1937
 5695              	.LBE350:
 5696              	.LBE357:
 580:sieve_extend.c ****     }
 5697              		.loc 1 580 9 is_stmt 1 view .LVU1938
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5698              		.loc 1 578 11 view .LVU1939
 5699 2275 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5699      10
 5700 227a 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.351,
 5701 227e 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.351
 5702 2281 722D     		jb	.L470	#,
 579:sieve_extend.c ****         copy_word += size;
 5703              		.loc 1 579 9 view .LVU1940
 5704              	.LVL228:
 5705              	.LBB358:
GAS LISTING /tmp/ccgH0yRS.s 			page 163


  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5706              		.loc 2 31 1 view .LVU1941
 5707              	.LBB351:
 5708              		.loc 2 34 3 view .LVU1942
 5709              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5710              		.loc 2 34 10 is_stmt 0 view .LVU1943
 5711 2283 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5711      18
 5712 2288 4C89FA   		mov	rdx, r15	#, _15
 5713 228b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.351
 5713      10
 5714 2290 4C89F6   		mov	rsi, r14	#, _5
 5715 2293 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 5716 2297 E8000000 		call	memcpy@PLT	#
 5716      00
 5717              	.LVL229:
 5718              		.loc 2 34 10 view .LVU1944
 5719              	.LBE351:
 5720              	.LBE358:
 580:sieve_extend.c ****     }
 5721              		.loc 1 580 9 is_stmt 1 view .LVU1945
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5722              		.loc 1 578 11 view .LVU1946
 5723 229c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.351, %sfp
 5723      10
 5724              	.LVL230:
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5725              		.loc 1 578 11 is_stmt 0 view .LVU1947
 5726 22a1 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.351,
 5727              	.LVL231:
 578:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word], (uintmax_t)size*sizeof(bitword_t) );
 5728              		.loc 1 578 11 view .LVU1948
 5729 22a5 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.351
 5730 22a8 0F83B4FE 		jnb	.L471	#,
 5730      FFFF
 5731              	.LVL232:
 5732 22ae 6690     		.p2align 4
 5733              		.p2align 3
 5734              	.L470:
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5735              		.loc 1 583 10 is_stmt 1 view .LVU1949
 5736 22b0 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.351
 5737 22b3 0F864902 		jbe	.L581	#,
 5737      0000
 5738 22b9 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 5739 22bd 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 5739      00000000 
 5740              	.LVL233:
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5741              		.loc 1 583 10 is_stmt 0 view .LVU1950
 5742 22c5 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 5742      20
 5743 22ca 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 5744 22ce 4D39FA   		cmp	r10, r15	# _4, tmp199
 5745 22d1 410F9DC3 		setge	r11b	#, tmp201
 5746 22d5 4939FC   		cmp	r12, rdi	# _41, tmp202
 5747 22d8 400F9DC6 		setge	sil	#, tmp204
GAS LISTING /tmp/ccgH0yRS.s 			page 164


 5748 22dc 4108F3   		or	r11b, sil	# tmp201, tmp204
 5749 22df 0F844B02 		je	.L473	#,
 5749      0000
 5750 22e5 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 5751 22e9 4829C2   		sub	rdx, rax	# tmp207, ivtmp.351
 5752 22ec 4883FA05 		cmp	rdx, 5	# tmp207,
 5753 22f0 0F863A02 		jbe	.L473	#,
 5753      0000
 5754 22f6 4D89F7   		mov	r15, r14	# tmp210, _5
 5755 22f9 49C1EF03 		shr	r15, 3	# tmp210,
 5756 22fd 49F7DF   		neg	r15	# tmp211
 5757 2300 4183E703 		and	r15d, 3	# prolog_loop_niters.319,
 5758 2304 0F842E03 		je	.L480	#,
 5758      0000
 584:sieve_extend.c ****         source_word++;
 5759              		.loc 1 584 9 is_stmt 1 view .LVU1951
 5760              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5761              		.loc 1 584 39 is_stmt 0 view .LVU1952
 5762 230a 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 5763 230d 4983FF01 		cmp	r15, 1	# prolog_loop_niters.319,
 5764              	# sieve_extend.c:585:         source_word++;
 585:sieve_extend.c ****         copy_word++;
 5765              		.loc 1 585 20 view .LVU1953
 5766 2311 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 5766      08
 5767              	# sieve_extend.c:586:         copy_word++;
 586:sieve_extend.c ****     }
 5768              		.loc 1 586 18 view .LVU1954
 5769 2316 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 5770              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5771              		.loc 1 584 29 view .LVU1955
 5772 231a 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 5772      00
 585:sieve_extend.c ****         copy_word++;
 5773              		.loc 1 585 9 is_stmt 1 view .LVU1956
 5774              	# sieve_extend.c:585:         source_word++;
 585:sieve_extend.c ****         copy_word++;
 5775              		.loc 1 585 20 is_stmt 0 view .LVU1957
 5776 231f 4D8D6101 		lea	r12, 1[r9]	# source_word,
 5777              	.LVL234:
 586:sieve_extend.c ****     }
 5778              		.loc 1 586 9 is_stmt 1 view .LVU1958
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5779              		.loc 1 583 10 view .LVU1959
 5780 2323 742A     		je	.L474	#,
 584:sieve_extend.c ****         source_word++;
 5781              		.loc 1 584 9 view .LVU1960
 5782              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5783              		.loc 1 584 39 is_stmt 0 view .LVU1961
 5784 2325 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 5784      00
 5785 232a 4983FF03 		cmp	r15, 3	# prolog_loop_niters.319,
 5786              	# sieve_extend.c:585:         source_word++;
 585:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccgH0yRS.s 			page 165


 5787              		.loc 1 585 20 view .LVU1962
 5788 232e 4D8D6102 		lea	r12, 2[r9]	# source_word,
 5789              	.LVL235:
 5790              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5791              		.loc 1 584 29 view .LVU1963
 5792 2332 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 5792      00
 585:sieve_extend.c ****         copy_word++;
 5793              		.loc 1 585 9 is_stmt 1 view .LVU1964
 5794              	.LVL236:
 586:sieve_extend.c ****     }
 5795              		.loc 1 586 9 view .LVU1965
 5796              	# sieve_extend.c:586:         copy_word++;
 586:sieve_extend.c ****     }
 5797              		.loc 1 586 18 is_stmt 0 view .LVU1966
 5798 2337 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 5799              	.LVL237:
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5800              		.loc 1 583 10 is_stmt 1 view .LVU1967
 5801 233b 7512     		jne	.L474	#,
 584:sieve_extend.c ****         source_word++;
 5802              		.loc 1 584 9 view .LVU1968
 5803              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5804              		.loc 1 584 39 is_stmt 0 view .LVU1969
 5805 233d 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 5805      00
 5806              	# sieve_extend.c:585:         source_word++;
 585:sieve_extend.c ****         copy_word++;
 5807              		.loc 1 585 20 view .LVU1970
 5808 2342 4D8D6103 		lea	r12, 3[r9]	# source_word,
 5809              	.LVL238:
 5810              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5811              		.loc 1 584 29 view .LVU1971
 5812 2346 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 5812      00
 585:sieve_extend.c ****         copy_word++;
 5813              		.loc 1 585 9 is_stmt 1 view .LVU1972
 5814              	.LVL239:
 586:sieve_extend.c ****     }
 5815              		.loc 1 586 9 view .LVU1973
 5816              	# sieve_extend.c:586:         copy_word++;
 586:sieve_extend.c ****     }
 5817              		.loc 1 586 18 is_stmt 0 view .LVU1974
 5818 234b 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 5819              	.LVL240:
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5820              		.loc 1 583 10 is_stmt 1 view .LVU1975
 5821              	.L474:
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5822              		.loc 1 583 10 is_stmt 0 view .LVU1976
 5823 234f 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5823      08
 5824 2354 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 5825 2357 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.319
GAS LISTING /tmp/ccgH0yRS.s 			page 166


 5826 235a 4929C3   		sub	r11, rax	# niters.320, ivtmp.351
 5827 235d 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.319
 5828 2360 4D89D8   		mov	r8, r11	# bnd.321, niters.320
 5829 2363 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.319
 5830 2366 49C1E802 		shr	r8, 2	# bnd.321,
 5831 236a 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.329,
 5831      00
 5832 236f 49C1E005 		sal	r8, 5	# _182,
 5833              	# sieve_extend.c:573:     counter_t source_word = wordindex(source_start);
 573:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5834              		.loc 1 573 15 view .LVU1977
 5835 2373 31C0     		xor	eax, eax	# ivtmp.342
 5836 2375 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 5837 2379 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.326,
 5837      00
 5838 237e 48C1EA05 		shr	rdx, 5	# tmp226,
 5839 2382 4883C201 		add	rdx, 1	# tmp229,
 5840 2386 83E207   		and	edx, 7	# tmp230,
 5841 2389 0F849500 		je	.L476	#,
 5841      0000
 5842 238f 4883FA01 		cmp	rdx, 1	# tmp230,
 5843 2393 7477     		je	.L540	#,
 5844 2395 4883FA02 		cmp	rdx, 2	# tmp230,
 5845 2399 7462     		je	.L541	#,
 5846 239b 4883FA03 		cmp	rdx, 3	# tmp230,
 5847 239f 744D     		je	.L542	#,
 5848 23a1 4883FA04 		cmp	rdx, 4	# tmp230,
 5849 23a5 7438     		je	.L543	#,
 5850 23a7 4883FA05 		cmp	rdx, 5	# tmp230,
 5851 23ab 7423     		je	.L544	#,
 5852 23ad 4883FA06 		cmp	rdx, 6	# tmp230,
 5853 23b1 740E     		je	.L545	#,
 584:sieve_extend.c ****         source_word++;
 5854              		.loc 1 584 9 is_stmt 1 view .LVU1978
 5855              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5856              		.loc 1 584 29 is_stmt 0 view .LVU1979
 5857 23b3 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.326_119, index: ivtmp.342_180, offset: 0
 5858 23b7 B8200000 		mov	eax, 32	# ivtmp.342,
 5858      00
 5859 23bc C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], tmp3
 5859      0F
 585:sieve_extend.c ****         copy_word++;
 5860              		.loc 1 585 9 is_stmt 1 view .LVU1980
 586:sieve_extend.c ****     }
 5861              		.loc 1 586 9 view .LVU1981
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5862              		.loc 1 583 10 view .LVU1982
 5863              	.L545:
 584:sieve_extend.c ****         source_word++;
 5864              		.loc 1 584 9 view .LVU1983
 5865              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5866              		.loc 1 584 29 is_stmt 0 view .LVU1984
 5867 23c1 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5867      06
 5868 23c6 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
GAS LISTING /tmp/ccgH0yRS.s 			page 167


 5868      3C07
 585:sieve_extend.c ****         copy_word++;
 5869              		.loc 1 585 9 is_stmt 1 view .LVU1985
 586:sieve_extend.c ****     }
 5870              		.loc 1 586 9 view .LVU1986
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5871              		.loc 1 583 10 view .LVU1987
 5872 23cc 4883C020 		add	rax, 32	# ivtmp.342,
 5873              	.L544:
 584:sieve_extend.c ****         source_word++;
 5874              		.loc 1 584 9 view .LVU1988
 5875              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5876              		.loc 1 584 29 is_stmt 0 view .LVU1989
 5877 23d0 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5877      06
 5878 23d5 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5878      3407
 585:sieve_extend.c ****         copy_word++;
 5879              		.loc 1 585 9 is_stmt 1 view .LVU1990
 586:sieve_extend.c ****     }
 5880              		.loc 1 586 9 view .LVU1991
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5881              		.loc 1 583 10 view .LVU1992
 5882 23db 4883C020 		add	rax, 32	# ivtmp.342,
 5883              	.L543:
 584:sieve_extend.c ****         source_word++;
 5884              		.loc 1 584 9 view .LVU1993
 5885              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5886              		.loc 1 584 29 is_stmt 0 view .LVU1994
 5887 23df C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5887      06
 5888 23e4 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5888      2C07
 585:sieve_extend.c ****         copy_word++;
 5889              		.loc 1 585 9 is_stmt 1 view .LVU1995
 586:sieve_extend.c ****     }
 5890              		.loc 1 586 9 view .LVU1996
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5891              		.loc 1 583 10 view .LVU1997
 5892 23ea 4883C020 		add	rax, 32	# ivtmp.342,
 5893              	.L542:
 584:sieve_extend.c ****         source_word++;
 5894              		.loc 1 584 9 view .LVU1998
 5895              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5896              		.loc 1 584 29 is_stmt 0 view .LVU1999
 5897 23ee C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5897      06
 5898 23f3 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5898      2407
 585:sieve_extend.c ****         copy_word++;
 5899              		.loc 1 585 9 is_stmt 1 view .LVU2000
 586:sieve_extend.c ****     }
 5900              		.loc 1 586 9 view .LVU2001
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccgH0yRS.s 			page 168


 5901              		.loc 1 583 10 view .LVU2002
 5902 23f9 4883C020 		add	rax, 32	# ivtmp.342,
 5903              	.L541:
 584:sieve_extend.c ****         source_word++;
 5904              		.loc 1 584 9 view .LVU2003
 5905              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5906              		.loc 1 584 29 is_stmt 0 view .LVU2004
 5907 23fd C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5907      06
 5908 2402 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5908      0407
 585:sieve_extend.c ****         copy_word++;
 5909              		.loc 1 585 9 is_stmt 1 view .LVU2005
 586:sieve_extend.c ****     }
 5910              		.loc 1 586 9 view .LVU2006
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5911              		.loc 1 583 10 view .LVU2007
 5912 2408 4883C020 		add	rax, 32	# ivtmp.342,
 5913              	.L540:
 584:sieve_extend.c ****         source_word++;
 5914              		.loc 1 584 9 view .LVU2008
 5915              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5916              		.loc 1 584 29 is_stmt 0 view .LVU2009
 5917 240c C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5917      06
 5918 2411 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5918      1407
 585:sieve_extend.c ****         copy_word++;
 5919              		.loc 1 585 9 is_stmt 1 view .LVU2010
 586:sieve_extend.c ****     }
 5920              		.loc 1 586 9 view .LVU2011
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5921              		.loc 1 583 10 view .LVU2012
 5922 2417 4883C020 		add	rax, 32	# ivtmp.342,
 5923 241b 4C39C0   		cmp	rax, r8	# ivtmp.342, _182
 5924 241e 0F848D00 		je	.L577	#,
 5924      0000
 5925              	.L476:
 584:sieve_extend.c ****         source_word++;
 5926              		.loc 1 584 9 view .LVU2013
 5927              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5928              		.loc 1 584 29 is_stmt 0 view .LVU2014
 5929 2424 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.326_119, index: ivtmp.342_180, offse
 5929      06
 5930 2429 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B], 
 5930      1C07
 585:sieve_extend.c ****         copy_word++;
 5931              		.loc 1 585 9 is_stmt 1 view .LVU2015
 586:sieve_extend.c ****     }
 5932              		.loc 1 586 9 view .LVU2016
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5933              		.loc 1 583 10 view .LVU2017
 584:sieve_extend.c ****         source_word++;
 5934              		.loc 1 584 9 view .LVU2018
GAS LISTING /tmp/ccgH0yRS.s 			page 169


 5935              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5936              		.loc 1 584 29 is_stmt 0 view .LVU2019
 5937 242f C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.326_119, index: ivtmp.342_180, off
 5937      0620
 5938 2435 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B]
 5938      440720
 585:sieve_extend.c ****         copy_word++;
 5939              		.loc 1 585 9 is_stmt 1 view .LVU2020
 586:sieve_extend.c ****     }
 5940              		.loc 1 586 9 view .LVU2021
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5941              		.loc 1 583 10 view .LVU2022
 584:sieve_extend.c ****         source_word++;
 5942              		.loc 1 584 9 view .LVU2023
 5943              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5944              		.loc 1 584 29 is_stmt 0 view .LVU2024
 5945 243c C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.326_119, index: ivtmp.342_180, off
 5945      0640
 5946 2442 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B]
 5946      4C0740
 585:sieve_extend.c ****         copy_word++;
 5947              		.loc 1 585 9 is_stmt 1 view .LVU2025
 586:sieve_extend.c ****     }
 5948              		.loc 1 586 9 view .LVU2026
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5949              		.loc 1 583 10 view .LVU2027
 584:sieve_extend.c ****         source_word++;
 5950              		.loc 1 584 9 view .LVU2028
 5951              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5952              		.loc 1 584 29 is_stmt 0 view .LVU2029
 5953 2449 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.326_119, index: ivtmp.342_180, of
 5953      0660
 5954 244f C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0B
 5954      540760
 585:sieve_extend.c ****         copy_word++;
 5955              		.loc 1 585 9 is_stmt 1 view .LVU2030
 586:sieve_extend.c ****     }
 5956              		.loc 1 586 9 view .LVU2031
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5957              		.loc 1 583 10 view .LVU2032
 584:sieve_extend.c ****         source_word++;
 5958              		.loc 1 584 9 view .LVU2033
 5959              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5960              		.loc 1 584 29 is_stmt 0 view .LVU2034
 5961 2456 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.326_119, index: ivtmp.342_180, o
 5961      06800000 
 5961      00
 5962 245f C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0
 5962      9C078000 
 5962      0000
 585:sieve_extend.c ****         copy_word++;
 5963              		.loc 1 585 9 is_stmt 1 view .LVU2035
 586:sieve_extend.c ****     }
GAS LISTING /tmp/ccgH0yRS.s 			page 170


 5964              		.loc 1 586 9 view .LVU2036
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5965              		.loc 1 583 10 view .LVU2037
 584:sieve_extend.c ****         source_word++;
 5966              		.loc 1 584 9 view .LVU2038
 5967              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5968              		.loc 1 584 29 is_stmt 0 view .LVU2039
 5969 2469 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.326_119, index: ivtmp.342_180, o
 5969      06A00000 
 5969      00
 5970 2472 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0
 5970      A407A000 
 5970      0000
 585:sieve_extend.c ****         copy_word++;
 5971              		.loc 1 585 9 is_stmt 1 view .LVU2040
 586:sieve_extend.c ****     }
 5972              		.loc 1 586 9 view .LVU2041
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5973              		.loc 1 583 10 view .LVU2042
 584:sieve_extend.c ****         source_word++;
 5974              		.loc 1 584 9 view .LVU2043
 5975              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5976              		.loc 1 584 29 is_stmt 0 view .LVU2044
 5977 247c C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.326_119, index: ivtmp.342_180, o
 5977      06C00000 
 5977      00
 5978 2485 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0
 5978      AC07C000 
 5978      0000
 585:sieve_extend.c ****         copy_word++;
 5979              		.loc 1 585 9 is_stmt 1 view .LVU2045
 586:sieve_extend.c ****     }
 5980              		.loc 1 586 9 view .LVU2046
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5981              		.loc 1 583 10 view .LVU2047
 584:sieve_extend.c ****         source_word++;
 5982              		.loc 1 584 9 view .LVU2048
 5983              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 5984              		.loc 1 584 29 is_stmt 0 view .LVU2049
 5985 248f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.326_119, index: ivtmp.342_180, o
 5985      06E00000 
 5985      00
 5986 2498 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.329_125, index: ivtmp.342_180, offset: 0
 5986      B407E000 
 5986      0000
 585:sieve_extend.c ****         copy_word++;
 5987              		.loc 1 585 9 is_stmt 1 view .LVU2050
 586:sieve_extend.c ****     }
 5988              		.loc 1 586 9 view .LVU2051
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 5989              		.loc 1 583 10 view .LVU2052
 5990 24a2 48050001 		add	rax, 256	# ivtmp.342,
 5990      0000
 5991 24a8 4C39C0   		cmp	rax, r8	# ivtmp.342, _182
GAS LISTING /tmp/ccgH0yRS.s 			page 171


 5992 24ab 0F8573FF 		jne	.L476	#,
 5992      FFFF
 5993              	.L577:
 5994 24b1 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.322, niters.320
 5995 24b4 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.322,
 5996 24b8 4D01CC   		add	r12, r9	# tmp.323, niters_vector_mult_vf.322
 5997 24bb 4D01CE   		add	r14, r9	# tmp.324, niters_vector_mult_vf.322
 5998 24be 4D39CB   		cmp	r11, r9	# niters.320, niters_vector_mult_vf.322
 5999 24c1 7455     		je	.L580	#,
 6000              	.LVL241:
 584:sieve_extend.c ****         source_word++;
 6001              		.loc 1 584 9 view .LVU2053
 6002              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6003              		.loc 1 584 39 is_stmt 0 view .LVU2054
 6004 24c3 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 6004      00
 6005              	# sieve_extend.c:586:         copy_word++;
 586:sieve_extend.c ****     }
 6006              		.loc 1 586 18 view .LVU2055
 6007 24c8 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 6008              	# sieve_extend.c:585:         source_word++;
 585:sieve_extend.c ****         copy_word++;
 6009              		.loc 1 585 20 view .LVU2056
 6010 24cc 4983C401 		add	r12, 1	# source_word,
 6011              	.LVL242:
 6012              	# sieve_extend.c:583:    while (copy_word < destination_stop_word) {
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6013              		.loc 1 583 10 view .LVU2057
 6014 24d0 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 6015              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6016              		.loc 1 584 29 view .LVU2058
 6017 24d3 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 6017      00
 585:sieve_extend.c ****         copy_word++;
 6018              		.loc 1 585 9 is_stmt 1 view .LVU2059
 6019              	.LVL243:
 586:sieve_extend.c ****     }
 6020              		.loc 1 586 9 view .LVU2060
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6021              		.loc 1 583 10 view .LVU2061
 6022 24d8 763E     		jbe	.L580	#,
 584:sieve_extend.c ****         source_word++;
 6023              		.loc 1 584 9 view .LVU2062
 6024              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6025              		.loc 1 584 39 is_stmt 0 view .LVU2063
 6026 24da 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 6026      00000000 
 6027              	# sieve_extend.c:586:         copy_word++;
 586:sieve_extend.c ****     }
 6028              		.loc 1 586 18 view .LVU2064
 6029 24e2 4983C602 		add	r14, 2	# copy_word,
 6030              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6031              		.loc 1 584 39 view .LVU2065
GAS LISTING /tmp/ccgH0yRS.s 			page 172


 6032 24e6 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 6032      00
 6033              	# sieve_extend.c:583:    while (copy_word < destination_stop_word) {
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6034              		.loc 1 583 10 view .LVU2066
 6035 24eb 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 6036              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6037              		.loc 1 584 29 view .LVU2067
 6038 24ee 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 6038      00
 585:sieve_extend.c ****         copy_word++;
 6039              		.loc 1 585 9 is_stmt 1 view .LVU2068
 586:sieve_extend.c ****     }
 6040              		.loc 1 586 9 view .LVU2069
 6041              	.LVL244:
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6042              		.loc 1 583 10 view .LVU2070
 6043 24f3 7623     		jbe	.L580	#,
 584:sieve_extend.c ****         source_word++;
 6044              		.loc 1 584 9 view .LVU2071
 6045              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6046              		.loc 1 584 39 is_stmt 0 view .LVU2072
 6047 24f5 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 6047      08
 6048              	.LVL245:
 6049              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6050              		.loc 1 584 29 view .LVU2073
 6051 24fa 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 6051      00
 585:sieve_extend.c ****         copy_word++;
 6052              		.loc 1 585 9 is_stmt 1 view .LVU2074
 586:sieve_extend.c ****     }
 6053              		.loc 1 586 9 view .LVU2075
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6054              		.loc 1 583 10 view .LVU2076
 6055 24ff C5F877   		vzeroupper
 6056              	.LVL246:
 6057              	.L581:
 6058              	# sieve_extend.c:589: }
 589:sieve_extend.c **** 
 6059              		.loc 1 589 1 is_stmt 0 view .LVU2077
 6060 2502 488D65D8 		lea	rsp, -40[rbp]	#,
 6061 2506 5B       		pop	rbx	#
 6062 2507 415C     		pop	r12	#
 6063 2509 415D     		pop	r13	#
 6064 250b 415E     		pop	r14	#
 6065 250d 415F     		pop	r15	#
 6066 250f 5D       		pop	rbp	#
 6067              		.cfi_remember_state
 6068              		.cfi_def_cfa 7, 8
 6069 2510 C3       		ret	
 6070              	.LVL247:
 6071              		.p2align 4,,7
 6072 2511 0F1F8000 		.p2align 3
GAS LISTING /tmp/ccgH0yRS.s 			page 173


 6072      000000
 6073              	.L580:
 6074              		.cfi_restore_state
 589:sieve_extend.c **** 
 6075              		.loc 1 589 1 view .LVU2078
 6076 2518 C5F877   		vzeroupper
 6077 251b 488D65D8 		lea	rsp, -40[rbp]	#,
 6078 251f 5B       		pop	rbx	#
 6079              	.LVL248:
 589:sieve_extend.c **** 
 6080              		.loc 1 589 1 view .LVU2079
 6081 2520 415C     		pop	r12	#
 6082 2522 415D     		pop	r13	#
 6083              	.LVL249:
 589:sieve_extend.c **** 
 6084              		.loc 1 589 1 view .LVU2080
 6085 2524 415E     		pop	r14	#
 6086 2526 415F     		pop	r15	#
 6087 2528 5D       		pop	rbp	#
 6088              		.cfi_remember_state
 6089              		.cfi_def_cfa 7, 8
 6090 2529 C3       		ret	
 6091              	.LVL250:
 6092 252a 660F1F44 		.p2align 4,,7
 6092      0000
 6093              		.p2align 3
 6094              	.L473:
 6095              		.cfi_restore_state
 6096              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6097              		.loc 1 584 39 view .LVU2081
 6098 2530 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 6098      08
 6099 2535 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.337,
 6099      00
 6100 253a 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 6100      00
 6101              	.LVL251:
 584:sieve_extend.c ****         source_word++;
 6102              		.loc 1 584 39 view .LVU2082
 6103 253f 4C89EE   		mov	rsi, r13	# tmp221, _179
 6104 2542 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.337
 6105 2545 4829C7   		sub	rdi, rax	# source_word, ivtmp.351
 6106 2548 4883EE08 		sub	rsi, 8	# tmp222,
 6107 254c 48C1EE03 		shr	rsi, 3	# tmp220,
 6108 2550 4883C601 		add	rsi, 1	# tmp223,
 6109 2554 83E607   		and	esi, 7	# tmp224,
 6110 2557 0F848100 		je	.L478	#,
 6110      0000
 6111 255d 4883FE01 		cmp	rsi, 1	# tmp224,
 6112 2561 7466     		je	.L546	#,
 6113 2563 4883FE02 		cmp	rsi, 2	# tmp224,
 6114 2567 7454     		je	.L547	#,
 6115 2569 4883FE03 		cmp	rsi, 3	# tmp224,
 6116 256d 7442     		je	.L548	#,
 6117 256f 4883FE04 		cmp	rsi, 4	# tmp224,
 6118 2573 7430     		je	.L549	#,
GAS LISTING /tmp/ccgH0yRS.s 			page 174


 6119 2575 4883FE05 		cmp	rsi, 5	# tmp224,
 6120 2579 741E     		je	.L550	#,
 6121 257b 4883FE06 		cmp	rsi, 6	# tmp224,
 6122 257f 740C     		je	.L551	#,
 6123              	.LVL252:
 584:sieve_extend.c ****         source_word++;
 6124              		.loc 1 584 9 is_stmt 1 view .LVU2083
 6125              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6126              		.loc 1 584 39 is_stmt 0 view .LVU2084
 6127 2581 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6128 2585 4983C608 		add	r14, 8	# ivtmp.337,
 6129              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6130              		.loc 1 584 29 view .LVU2085
 6131 2589 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6132              		.loc 1 585 9 is_stmt 1 view .LVU2086
 586:sieve_extend.c ****     }
 6133              		.loc 1 586 9 view .LVU2087
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6134              		.loc 1 583 10 view .LVU2088
 6135              	.L551:
 584:sieve_extend.c ****         source_word++;
 6136              		.loc 1 584 9 view .LVU2089
 6137              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6138              		.loc 1 584 39 is_stmt 0 view .LVU2090
 6139 258d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6140 2591 4983C608 		add	r14, 8	# ivtmp.337,
 6141              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6142              		.loc 1 584 29 view .LVU2091
 6143 2595 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6144              		.loc 1 585 9 is_stmt 1 view .LVU2092
 586:sieve_extend.c ****     }
 6145              		.loc 1 586 9 view .LVU2093
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6146              		.loc 1 583 10 view .LVU2094
 6147              	.L550:
 584:sieve_extend.c ****         source_word++;
 6148              		.loc 1 584 9 view .LVU2095
 6149              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6150              		.loc 1 584 39 is_stmt 0 view .LVU2096
 6151 2599 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6152 259d 4983C608 		add	r14, 8	# ivtmp.337,
 6153              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6154              		.loc 1 584 29 view .LVU2097
 6155 25a1 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6156              		.loc 1 585 9 is_stmt 1 view .LVU2098
 586:sieve_extend.c ****     }
 6157              		.loc 1 586 9 view .LVU2099
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccgH0yRS.s 			page 175


 6158              		.loc 1 583 10 view .LVU2100
 6159              	.L549:
 584:sieve_extend.c ****         source_word++;
 6160              		.loc 1 584 9 view .LVU2101
 6161              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6162              		.loc 1 584 39 is_stmt 0 view .LVU2102
 6163 25a5 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6164 25a9 4983C608 		add	r14, 8	# ivtmp.337,
 6165              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6166              		.loc 1 584 29 view .LVU2103
 6167 25ad 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6168              		.loc 1 585 9 is_stmt 1 view .LVU2104
 586:sieve_extend.c ****     }
 6169              		.loc 1 586 9 view .LVU2105
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6170              		.loc 1 583 10 view .LVU2106
 6171              	.L548:
 584:sieve_extend.c ****         source_word++;
 6172              		.loc 1 584 9 view .LVU2107
 6173              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6174              		.loc 1 584 39 is_stmt 0 view .LVU2108
 6175 25b1 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6176 25b5 4983C608 		add	r14, 8	# ivtmp.337,
 6177              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6178              		.loc 1 584 29 view .LVU2109
 6179 25b9 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6180              		.loc 1 585 9 is_stmt 1 view .LVU2110
 586:sieve_extend.c ****     }
 6181              		.loc 1 586 9 view .LVU2111
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6182              		.loc 1 583 10 view .LVU2112
 6183              	.L547:
 584:sieve_extend.c ****         source_word++;
 6184              		.loc 1 584 9 view .LVU2113
 6185              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6186              		.loc 1 584 39 is_stmt 0 view .LVU2114
 6187 25bd 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6188 25c1 4983C608 		add	r14, 8	# ivtmp.337,
 6189              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6190              		.loc 1 584 29 view .LVU2115
 6191 25c5 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6192              		.loc 1 585 9 is_stmt 1 view .LVU2116
 586:sieve_extend.c ****     }
 6193              		.loc 1 586 9 view .LVU2117
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6194              		.loc 1 583 10 view .LVU2118
 6195              	.L546:
 584:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccgH0yRS.s 			page 176


 6196              		.loc 1 584 9 view .LVU2119
 6197              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6198              		.loc 1 584 39 is_stmt 0 view .LVU2120
 6199 25c9 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6200 25cd 4983C608 		add	r14, 8	# ivtmp.337,
 6201              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6202              		.loc 1 584 29 view .LVU2121
 6203 25d1 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6204              		.loc 1 585 9 is_stmt 1 view .LVU2122
 586:sieve_extend.c ****     }
 6205              		.loc 1 586 9 view .LVU2123
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6206              		.loc 1 583 10 view .LVU2124
 6207 25d5 4D39EE   		cmp	r14, r13	# ivtmp.337, _179
 6208 25d8 0F8424FF 		je	.L581	#,
 6208      FFFF
 6209              	.LVL253:
 6210              	.L478:
 584:sieve_extend.c ****         source_word++;
 6211              		.loc 1 584 9 view .LVU2125
 6212              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6213              		.loc 1 584 39 is_stmt 0 view .LVU2126
 6214 25de 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6215              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6216              		.loc 1 584 29 view .LVU2127
 6217 25e2 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6218              		.loc 1 585 9 is_stmt 1 view .LVU2128
 586:sieve_extend.c ****     }
 6219              		.loc 1 586 9 view .LVU2129
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6220              		.loc 1 583 10 view .LVU2130
 584:sieve_extend.c ****         source_word++;
 6221              		.loc 1 584 9 view .LVU2131
 6222              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6223              		.loc 1 584 39 is_stmt 0 view .LVU2132
 6224 25e5 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6224      08
 6225              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6226              		.loc 1 584 29 view .LVU2133
 6227 25ea 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6228              		.loc 1 585 9 is_stmt 1 view .LVU2134
 586:sieve_extend.c ****     }
 6229              		.loc 1 586 9 view .LVU2135
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6230              		.loc 1 583 10 view .LVU2136
 584:sieve_extend.c ****         source_word++;
 6231              		.loc 1 584 9 view .LVU2137
 6232              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccgH0yRS.s 			page 177


 584:sieve_extend.c ****         source_word++;
 6233              		.loc 1 584 39 is_stmt 0 view .LVU2138
 6234 25ee 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6234      10
 6235              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6236              		.loc 1 584 29 view .LVU2139
 6237 25f3 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6238              		.loc 1 585 9 is_stmt 1 view .LVU2140
 586:sieve_extend.c ****     }
 6239              		.loc 1 586 9 view .LVU2141
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6240              		.loc 1 583 10 view .LVU2142
 584:sieve_extend.c ****         source_word++;
 6241              		.loc 1 584 9 view .LVU2143
 6242              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6243              		.loc 1 584 39 is_stmt 0 view .LVU2144
 6244 25f7 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6244      18
 6245              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6246              		.loc 1 584 29 view .LVU2145
 6247 25fc 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6248              		.loc 1 585 9 is_stmt 1 view .LVU2146
 586:sieve_extend.c ****     }
 6249              		.loc 1 586 9 view .LVU2147
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6250              		.loc 1 583 10 view .LVU2148
 584:sieve_extend.c ****         source_word++;
 6251              		.loc 1 584 9 view .LVU2149
 6252              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6253              		.loc 1 584 39 is_stmt 0 view .LVU2150
 6254 2600 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6254      20
 6255              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6256              		.loc 1 584 29 view .LVU2151
 6257 2605 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6258              		.loc 1 585 9 is_stmt 1 view .LVU2152
 586:sieve_extend.c ****     }
 6259              		.loc 1 586 9 view .LVU2153
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6260              		.loc 1 583 10 view .LVU2154
 584:sieve_extend.c ****         source_word++;
 6261              		.loc 1 584 9 view .LVU2155
 6262              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6263              		.loc 1 584 39 is_stmt 0 view .LVU2156
 6264 2609 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6264      28
 6265              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
GAS LISTING /tmp/ccgH0yRS.s 			page 178


 6266              		.loc 1 584 29 view .LVU2157
 6267 260e 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6268              		.loc 1 585 9 is_stmt 1 view .LVU2158
 586:sieve_extend.c ****     }
 6269              		.loc 1 586 9 view .LVU2159
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6270              		.loc 1 583 10 view .LVU2160
 584:sieve_extend.c ****         source_word++;
 6271              		.loc 1 584 9 view .LVU2161
 6272              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6273              		.loc 1 584 39 is_stmt 0 view .LVU2162
 6274 2612 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6274      30
 6275              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6276              		.loc 1 584 29 view .LVU2163
 6277 2617 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6278              		.loc 1 585 9 is_stmt 1 view .LVU2164
 586:sieve_extend.c ****     }
 6279              		.loc 1 586 9 view .LVU2165
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6280              		.loc 1 583 10 view .LVU2166
 584:sieve_extend.c ****         source_word++;
 6281              		.loc 1 584 9 view .LVU2167
 6282              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6283              		.loc 1 584 39 is_stmt 0 view .LVU2168
 6284 261b 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 6284      38
 6285 2620 4983C640 		add	r14, 64	# ivtmp.337,
 6286              	# sieve_extend.c:584:         bitarray[copy_word] = bitarray[source_word];
 584:sieve_extend.c ****         source_word++;
 6287              		.loc 1 584 29 view .LVU2169
 6288 2624 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 585:sieve_extend.c ****         copy_word++;
 6289              		.loc 1 585 9 is_stmt 1 view .LVU2170
 586:sieve_extend.c ****     }
 6290              		.loc 1 586 9 view .LVU2171
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6291              		.loc 1 583 10 view .LVU2172
 6292 2628 4D39EE   		cmp	r14, r13	# ivtmp.337, _179
 6293 262b 75B1     		jne	.L478	#,
 6294 262d E9D0FEFF 		jmp	.L581	#
 6294      FF
 6295              	.LVL254:
 6296              		.p2align 4,,7
 6297 2632 660F1F44 		.p2align 3
 6297      0000
 6298              	.L480:
 6299              	# sieve_extend.c:573:     counter_t source_word = wordindex(source_start);
 573:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 6300              		.loc 1 573 15 is_stmt 0 view .LVU2173
 6301 2638 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 6301      08
GAS LISTING /tmp/ccgH0yRS.s 			page 179


 6302              	# sieve_extend.c:583:    while (copy_word < destination_stop_word) {
 583:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 6303              		.loc 1 583 10 view .LVU2174
 6304 263d 4989C6   		mov	r14, rax	# copy_word, ivtmp.351
 6305 2640 E90AFDFF 		jmp	.L474	#
 6305      FF
 6306              		.cfi_endproc
 6307              	.LFE65:
 6309 2645 66662E0F 		.p2align 4
 6309      1F840000 
 6309      000000
 6311              	extendSieve_shiftleft:
 6312              	.LVL255:
 6313              	.LFB71:
 829:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6314              		.loc 1 829 142 is_stmt 1 view -0
 6315              		.cfi_startproc
 830:sieve_extend.c **** 
 6316              		.loc 1 830 5 view .LVU2176
 832:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6317              		.loc 1 832 5 view .LVU2177
 6318              	# sieve_extend.c:829: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 829:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6319              		.loc 1 829 142 is_stmt 0 view .LVU2178
 6320 2650 55       		push	rbp	#
 6321              		.cfi_def_cfa_offset 16
 6322              		.cfi_offset 6, -16
 6323              	# sieve_extend.c:832:     const counter_t destination_stop_word = wordindex(destination_stop);
 832:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6324              		.loc 1 832 21 view .LVU2179
 6325 2651 48C1E906 		shr	rcx, 6	# tmp1219,
 6326              	.LVL256:
 6327              	# sieve_extend.c:829: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 829:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6328              		.loc 1 829 142 view .LVU2180
 6329 2655 4989D2   		mov	r10, rdx	# size, tmp1218
 6330 2658 4889E5   		mov	rbp, rsp	#,
 6331              		.cfi_def_cfa_register 6
 6332 265b 4157     		push	r15	#
 6333 265d 4156     		push	r14	#
 6334              		.cfi_offset 15, -24
 6335              		.cfi_offset 14, -32
 6336              	# sieve_extend.c:832:     const counter_t destination_stop_word = wordindex(destination_stop);
 832:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6337              		.loc 1 832 21 view .LVU2181
 6338 265f 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1219
 6339              	# sieve_extend.c:829: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 829:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6340              		.loc 1 829 142 view .LVU2182
 6341 2662 4155     		push	r13	#
 6342 2664 4154     		push	r12	#
 6343 2666 53       		push	rbx	#
 6344              		.cfi_offset 13, -40
 6345              		.cfi_offset 12, -48
 6346              		.cfi_offset 3, -56
 6347 2667 4889FB   		mov	rbx, rdi	# bitarray, tmp1216
 6348              	# sieve_extend.c:833:     const counter_t copy_start = source_start + size;
GAS LISTING /tmp/ccgH0yRS.s 			page 180


 833:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 6349              		.loc 1 833 21 view .LVU2183
 6350 266a 488D3C16 		lea	rdi, [rsi+rdx]	# copy_start,
 6351              	.LVL257:
 6352              	# sieve_extend.c:829: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 829:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6353              		.loc 1 829 142 view .LVU2184
 6354 266e 4883E4E0 		and	rsp, -32	#,
 6355              	# sieve_extend.c:834:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 834:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6356              		.loc 1 834 69 view .LVU2185
 6357 2672 4889F8   		mov	rax, rdi	# _5, copy_start
 6358              	# sieve_extend.c:829: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 829:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6359              		.loc 1 829 142 view .LVU2186
 6360 2675 488D6424 		lea	rsp, -96[rsp]	#,
 6360      A0
 6361              	# sieve_extend.c:837:     register counter_t copy_word = wordindex(copy_start);
 837:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6362              		.loc 1 837 24 view .LVU2187
 6363 267a 4989FB   		mov	r11, rdi	# copy_word, copy_start
 6364              	# sieve_extend.c:832:     const counter_t destination_stop_word = wordindex(destination_stop);
 832:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 6365              		.loc 1 832 21 view .LVU2188
 6366 267d 48894C24 		mov	QWORD PTR 80[rsp], rcx	# %sfp, destination_stop_word
 6366      50
 6367              	.LVL258:
 833:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 6368              		.loc 1 833 5 is_stmt 1 view .LVU2189
 834:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6369              		.loc 1 834 5 view .LVU2190
 6370              	# sieve_extend.c:834:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 834:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6371              		.loc 1 834 39 is_stmt 0 view .LVU2191
 6372 2682 4889F1   		mov	rcx, rsi	# _4, source_start
 6373              	.LVL259:
 6374              	# sieve_extend.c:836:     register counter_t source_word = wordindex(source_start);
 836:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6375              		.loc 1 836 24 view .LVU2192
 6376 2685 48C1EE06 		shr	rsi, 6	# source_start,
 6377              	.LVL260:
 6378              	# sieve_extend.c:834:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 834:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6379              		.loc 1 834 39 view .LVU2193
 6380 2689 83E13F   		and	ecx, 63	# _4,
 6381              	.LVL261:
 6382              	# sieve_extend.c:836:     register counter_t source_word = wordindex(source_start);
 836:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6383              		.loc 1 836 24 view .LVU2194
 6384 268c 4989F0   		mov	r8, rsi	# source_word, source_start
 6385              	# sieve_extend.c:834:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 834:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6386              		.loc 1 834 69 view .LVU2195
 6387 268f 83E03F   		and	eax, 63	# _5,
 6388              	.LVL262:
 835:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6389              		.loc 1 835 5 is_stmt 1 view .LVU2196
GAS LISTING /tmp/ccgH0yRS.s 			page 181


 836:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 6390              		.loc 1 836 5 view .LVU2197
 837:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6391              		.loc 1 837 5 view .LVU2198
 6392              	# sieve_extend.c:837:     register counter_t copy_word = wordindex(copy_start);
 837:sieve_extend.c ****     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 6393              		.loc 1 837 24 is_stmt 0 view .LVU2199
 6394 2692 49C1EB06 		shr	r11, 6	# copy_word,
 6395              	.LVL263:
 838:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6396              		.loc 1 838 5 is_stmt 1 view .LVU2200
 6397              	# sieve_extend.c:839:                              | (bitarray[source_word+1] << shift_flipped))
 839:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6398              		.loc 1 839 41 is_stmt 0 view .LVU2201
 6399 2696 4D8D4801 		lea	r9, 1[r8]	# _183,
 6400              	# sieve_extend.c:834:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 834:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6401              		.loc 1 834 31 view .LVU2202
 6402 269a 4989CD   		mov	r13, rcx	# shift, _4
 6403              	# sieve_extend.c:838:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 838:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6404              		.loc 1 838 25 view .LVU2203
 6405 269d 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 6405      00000000 
 6406              	# sieve_extend.c:839:                              | (bitarray[source_word+1] << shift_flipped))
 839:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6407              		.loc 1 839 41 view .LVU2204
 6408 26a5 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, _183
 6408      58
 6409              	# sieve_extend.c:834:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 834:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6410              		.loc 1 834 31 view .LVU2205
 6411 26aa 4929C5   		sub	r13, rax	# shift, _5
 6412              	.LVL264:
 6413              	# sieve_extend.c:845:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 845:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6414              		.loc 1 845 41 view .LVU2206
 6415 26ad 4D01D1   		add	r9, r10	# tmp555, size
 6416              	# sieve_extend.c:835:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 835:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6417              		.loc 1 835 31 view .LVU2207
 6418 26b0 4829C8   		sub	rax, rcx	# tmp542, _4
 6419              	.LVL265:
 6420              	# sieve_extend.c:829: static void extendSieve_shiftleft(bitword_t* bitarray, const counter_t source
 829:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 6421              		.loc 1 829 142 view .LVU2208
 6422 26b3 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 6422      18
 6423              	# sieve_extend.c:835:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 835:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 6424              		.loc 1 835 31 view .LVU2209
 6425 26b8 4C8D7840 		lea	r15, 64[rax]	# shift_flipped,
 6426              	.LVL266:
 6427              	# sieve_extend.c:838:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 838:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6428              		.loc 1 838 52 view .LVU2210
 6429 26bc 4A8B0CC3 		mov	rcx, QWORD PTR [rbx+r8*8]	# *_10, *_10
GAS LISTING /tmp/ccgH0yRS.s 			page 182


 6430              	# sieve_extend.c:838:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 838:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6431              		.loc 1 838 38 view .LVU2211
 6432 26c0 4A8D14C5 		lea	rdx, 0[0+r8*8]	# _9,
 6432      00000000 
 6433              	.LVL267:
 6434              	# sieve_extend.c:840:                              & ~chopmask(copy_start); // because this is the 
 840:sieve_extend.c **** 
 6435              		.loc 1 840 33 view .LVU2212
 6436 26c8 F7D7     		not	edi	# tmp549
 6437              	.LVL268:
 6438              	# sieve_extend.c:839:                              | (bitarray[source_word+1] << shift_flipped))
 839:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6439              		.loc 1 839 57 view .LVU2213
 6440 26ca C4E281F7 		shlx	rax, QWORD PTR 8[rbx+rdx], r15	# tmp544, *_16, shift_flipped
 6440      441308
 6441              	# sieve_extend.c:838:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 838:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6442              		.loc 1 838 52 view .LVU2214
 6443 26d1 C46293F7 		shrx	r8, rcx, r13	# tmp546, *_10, shift
 6443      C1
 6444              	# sieve_extend.c:839:                              | (bitarray[source_word+1] << shift_flipped))
 839:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6445              		.loc 1 839 30 view .LVU2215
 6446 26d6 4909C0   		or	r8, rax	# tmp548, tmp544
 6447              	# sieve_extend.c:840:                              & ~chopmask(copy_start); // because this is the 
 840:sieve_extend.c **** 
 6448              		.loc 1 840 33 view .LVU2216
 6449 26d9 48C7C0FF 		mov	rax, -1	# tmp552,
 6449      FFFFFF
 6450 26e0 C4E2C3F7 		shrx	rdi, rax, rdi	# tmp551, tmp552, tmp549
 6450      F8
 6451              	# sieve_extend.c:840:                              & ~chopmask(copy_start); // because this is the 
 840:sieve_extend.c **** 
 6452              		.loc 1 840 30 view .LVU2217
 6453 26e5 C4C2C0F2 		andn	rcx, rdi, r8	# tmp554, tmp551, tmp548
 6453      C8
 6454              	# sieve_extend.c:838:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 838:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6455              		.loc 1 838 25 view .LVU2218
 6456 26ea 48090C33 		or	QWORD PTR [rbx+rsi], rcx	# *_7, tmp554
 842:sieve_extend.c ****     source_word++;
 6457              		.loc 1 842 5 is_stmt 1 view .LVU2219
 6458              	# sieve_extend.c:845:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 845:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6459              		.loc 1 845 21 is_stmt 0 view .LVU2220
 6460 26ee 4D39F1   		cmp	r9, r14	# tmp555, destination_stop_word
 6461              	# sieve_extend.c:842:     copy_word++;
 842:sieve_extend.c ****     source_word++;
 6462              		.loc 1 842 14 view .LVU2221
 6463 26f1 498D4301 		lea	rax, 1[r11]	# ivtmp.435,
 6464              	.LVL269:
 843:sieve_extend.c **** 
 6465              		.loc 1 843 5 is_stmt 1 view .LVU2222
 845:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6466              		.loc 1 845 5 view .LVU2223
 6467              	# sieve_extend.c:839:                              | (bitarray[source_word+1] << shift_flipped))
GAS LISTING /tmp/ccgH0yRS.s 			page 183


 839:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 6468              		.loc 1 839 57 is_stmt 0 view .LVU2224
 6469 26f5 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift_flipped
 6469      48
 6470              	# sieve_extend.c:838:     bitarray[copy_word] |= ((bitarray[source_word] >> shift)
 838:sieve_extend.c ****                              | (bitarray[source_word+1] << shift_flipped))
 6471              		.loc 1 838 52 view .LVU2225
 6472 26fa 4589EC   		mov	r12d, r13d	# _12, shift
 6473              	# sieve_extend.c:845:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 845:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6474              		.loc 1 845 21 view .LVU2226
 6475 26fd 4D0F47CE 		cmova	r9, r14	# tmp555,, tmp555, destination_stop_word
 6476              	.LBB364:
 6477              	.LBB365:
 6478              	# sieve_extend.c:686:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 686:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6479              		.loc 1 686 91 view .LVU2227
 6480 2701 41BE0200 		mov	r14d, 2	# tmp556,
 6480      0000
 6481              	.LVL270:
 686:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6482              		.loc 1 686 91 view .LVU2228
 6483              	.LBE365:
 6484              	.LBE364:
 6485              	# sieve_extend.c:845:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 845:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitarray, aligned_copy_word, shift, 
 6486              		.loc 1 845 21 view .LVU2229
 6487 2707 4C894C24 		mov	QWORD PTR 64[rsp], r9	# %sfp, aligned_copy_word
 6487      40
 6488              	.LVL271:
 846:sieve_extend.c ****     source_word += distance;
 6489              		.loc 1 846 5 is_stmt 1 view .LVU2230
 6490              	.LBB390:
 6491              	.LBI364:
 685:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 6492              		.loc 1 685 25 view .LVU2231
 6493              	.LBB387:
 686:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6494              		.loc 1 686 5 view .LVU2232
 6495              	# sieve_extend.c:686:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 686:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6496              		.loc 1 686 91 is_stmt 0 view .LVU2233
 6497 270c 4983F902 		cmp	r9, 2	# aligned_copy_word,
 6498 2710 4D0F43F1 		cmovnb	r14, r9	# aligned_copy_word,, _86
 6499              	# sieve_extend.c:686:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 686:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 6500              		.loc 1 686 21 view .LVU2234
 6501 2714 4D8D46FE 		lea	r8, -2[r14]	# fast_loop_stop_word,
 6502 2718 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, fast_loop_stop_word
 6502      30
 6503              	.LVL272:
 687:sieve_extend.c ****     counter_t distance = 0;
 6504              		.loc 1 687 5 is_stmt 1 view .LVU2235
 688:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 6505              		.loc 1 688 5 view .LVU2236
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6506              		.loc 1 689 5 view .LVU2237
GAS LISTING /tmp/ccgH0yRS.s 			page 184


 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6507              		.loc 1 689 11 view .LVU2238
 6508 271d 4C39C0   		cmp	rax, r8	# ivtmp.435, fast_loop_stop_word
 6509 2720 0F83A404 		jnb	.L584	#,
 6509      0000
 6510 2726 4C8D5240 		lea	r10, 64[rdx]	# tmp559,
 6511              	.LVL273:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6512              		.loc 1 689 11 is_stmt 0 view .LVU2239
 6513 272a 4D29DE   		sub	r14, r11	# tmp557, copy_word
 6514 272d 4C8D4610 		lea	r8, 16[rsi]	# tmp560,
 6515              	.LVL274:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6516              		.loc 1 689 11 view .LVU2240
 6517 2731 498D7EFC 		lea	rdi, -4[r14]	# _332,
 6518 2735 488D4A08 		lea	rcx, 8[rdx]	# tmp796,
 6519 2739 4D39C2   		cmp	r10, r8	# tmp559, tmp560
 6520 273c 4C8D7648 		lea	r14, 72[rsi]	# tmp563,
 6521 2740 410F9EC1 		setle	r9b	#, tmp562
 6522              	.LVL275:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6523              		.loc 1 689 11 view .LVU2241
 6524 2744 48897C24 		mov	QWORD PTR 56[rsp], rdi	# %sfp, _332
 6524      38
 6525 2749 4939CE   		cmp	r14, rcx	# tmp563, tmp796
 6526 274c 400F9EC7 		setle	dil	#, tmp566
 6527 2750 4109F9   		or	r9d, edi	# tmp567, tmp566
 6528 2753 488D7A50 		lea	rdi, 80[rdx]	# tmp568,
 6529 2757 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp568
 6529      28
 6530 275c 4C39C7   		cmp	rdi, r8	# tmp568, tmp560
 6531 275f 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6531      27
 6532 2764 4883C210 		add	rdx, 16	# tmp573,
 6533 2768 4939D6   		cmp	r14, rdx	# tmp563, tmp573
 6534 276b 400F9EC7 		setle	dil	#, tmp575
 6535 276f 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp576, %sfp
 6535      27
 6536 2774 4421CF   		and	edi, r9d	# tmp577, tmp567
 6537 2777 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 6537      380B
 6538 277d 410F97C1 		seta	r9b	#, tmp579
 6539 2781 4421CF   		and	edi, r9d	# tmp580, tmp579
 6540 2784 4C8D4E08 		lea	r9, 8[rsi]	# tmp582,
 6541 2788 4D39CA   		cmp	r10, r9	# tmp559, tmp582
 6542 278b 410F9EC2 		setle	r10b	#, tmp584
 6543 278f 4883C640 		add	rsi, 64	# tmp585,
 6544 2793 4839CE   		cmp	rsi, rcx	# tmp585, tmp796
 6545 2796 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 6545      27
 6546 279b 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp589, %sfp
 6546      27
 6547 27a0 4421D7   		and	edi, r10d	# tmp590, tmp589
 6548 27a3 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp582
 6548      28
 6549 27a8 410F9EC2 		setle	r10b	#, tmp594
 6550 27ac 4839D6   		cmp	rsi, rdx	# tmp585, tmp573
GAS LISTING /tmp/ccgH0yRS.s 			page 185


 6551 27af 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 6551      28
 6552 27b4 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp599, %sfp
 6552      28
 6553 27b9 4484D7   		test	dil, r10b	# tmp590, tmp599
 6554 27bc 0F845E0D 		je	.L585	#,
 6554      0000
 6555 27c2 4D39CE   		cmp	r14, r9	# tmp563, tmp582
 6556 27c5 410F9EC6 		setle	r14b	#, tmp604
 6557 27c9 4C39C6   		cmp	rsi, r8	# tmp585, tmp560
 6558 27cc 400F9EC6 		setle	sil	#, tmp608
 6559 27d0 4108F6   		or	r14b, sil	# tmp604, tmp608
 6560 27d3 0F84470D 		je	.L585	#,
 6560      0000
 6561 27d9 4801D9   		add	rcx, rbx	# vectp.400, bitarray
 6562 27dc 4801DA   		add	rdx, rbx	# vectp.404, bitarray
 6563              	.LBB366:
 6564              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6565              		.loc 1 691 19 view .LVU2242
 6566 27df C5FE6F0A 		vmovdqu	ymm1, YMMWORD PTR [rdx]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B], MEM[
 6567 27e3 C4C1796E 		vmovd	xmm3, r13d	# _12, _12
 6567      DD
 6568 27e8 C5FE6F42 		vmovdqu	ymm0, YMMWORD PTR 32[rdx]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 32B], M
 6568      20
 6569 27ed C4C1796E 		vmovd	xmm4, r15d	# _18,
 6569      E7
 6570              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6571              		.loc 1 690 19 view .LVU2243
 6572 27f2 C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1315, MEM[base: vectp.400_490, index: ivtmp.475_748, offset: 
 6573              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6574              		.loc 1 691 19 view .LVU2244
 6575 27f6 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp616, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B],
 6576 27fa C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp634, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B]
 6577              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6578              		.loc 1 690 19 view .LVU2245
 6579 27fe C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp620, tmp1315, MEM[base: vectp.400_490, index: ivt
 6579      20
 6580 2803 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _332, %sfp
 6580      38
 6581              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6582              		.loc 1 691 19 view .LVU2246
 6583 2808 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_507, tmp616,
 6583      C5D8
 6584              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6585              		.loc 1 690 19 view .LVU2247
 6586 280e C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp619, tmp620,
 6586      F2D8
 6587              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6588              		.loc 1 691 19 view .LVU2248
 6589 2814 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp633, tmp634,
GAS LISTING /tmp/ccgH0yRS.s 			page 186


 6589      FED8
 6590              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6591              		.loc 1 692 63 view .LVU2249
 6592 281a C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.408, vect_perm_even_507, _18
 6593              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6594              		.loc 1 692 42 view .LVU2250
 6595 281e C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.407, tmp619, _12
 6596              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6597              		.loc 1 694 42 view .LVU2251
 6598 2822 C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.410, vect_perm_even_507, _12
 6599              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6600              		.loc 1 694 63 view .LVU2252
 6601 2826 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.411, tmp633, _18
 6602 282a 49C1EE03 		shr	r14, 3	# _332,
 6603              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6604              		.loc 1 692 52 view .LVU2253
 6605 282e C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.409, vect__98.407, vect__100.408
 6605      DA
 6606              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6607              		.loc 1 694 52 view .LVU2254
 6608 2833 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.412, vect__110.411, vect__109.410
 6609 2837 4D8D56FF 		lea	r10, -1[r14]	# tmp828,
 6610              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6611              		.loc 1 692 31 view .LVU2255
 6612 283b C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp630, vect__104.409
 6612      DD01
 6613 2841 4183E201 		and	r10d, 1	# tmp830,
 6614              	.LVL276:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6615              		.loc 1 690 9 is_stmt 1 view .LVU2256
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6616              		.loc 1 691 9 view .LVU2257
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6617              		.loc 1 692 9 view .LVU2258
 6618              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6619              		.loc 1 694 31 is_stmt 0 view .LVU2259
 6620 2845 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp644, vect__114.412
 6620      EF01
 6621 284b 4983FE01 		cmp	r14, 1	# bnd.393,
 6622              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6623              		.loc 1 692 31 view .LVU2260
 6624 284f C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _513, index: ivtmp.475_748, offset: 0B], tmp626
 6624      1C0B
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6625              		.loc 1 692 31 view .LVU2261
 6626 2855 4E8D1C0B 		lea	r11, [rbx+r9]	# _513,
 6627              	.LVL277:
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccgH0yRS.s 			page 187


 6628              		.loc 1 692 31 view .LVU2262
 6629 2859 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 16B], tmp62
 6629      5C0B1001 
 6630 2861 4A8D3C03 		lea	rdi, [rbx+r8]	# _533,
 6631 2865 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _513, index: ivtmp.475_748, offset: 32B], tmp630
 6631      6C0B20
 6632 286c C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 48B], tmp63
 6632      6C0B3001 
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6633              		.loc 1 693 9 is_stmt 1 view .LVU2263
 6634              	.LVL278:
 694:sieve_extend.c ****         copy_word += 2;
 6635              		.loc 1 694 9 view .LVU2264
 6636 2874 41B90100 		mov	r9d, 1	# ivtmp.473,
 6636      0000
 6637              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6638              		.loc 1 694 31 is_stmt 0 view .LVU2265
 6639 287a C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _533, index: ivtmp.475_748, offset: 0B], tmp640
 6639      2C03
 694:sieve_extend.c ****         copy_word += 2;
 6640              		.loc 1 694 31 view .LVU2266
 6641 2880 C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 16B], tmp640
 6641      6C031001 
 6642 2888 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _533, index: ivtmp.475_748, offset: 32B], tmp644
 6642      7C0320
 6643 288f C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 48B], tmp644
 6643      7C033001 
 695:sieve_extend.c ****         source_word += 2;
 6644              		.loc 1 695 9 is_stmt 1 view .LVU2267
 696:sieve_extend.c ****         distance += 2;
 6645              		.loc 1 696 9 view .LVU2268
 697:sieve_extend.c ****     }
 6646              		.loc 1 697 9 view .LVU2269
 697:sieve_extend.c ****     }
 6647              		.loc 1 697 9 is_stmt 0 view .LVU2270
 6648              	.LBE366:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6649              		.loc 1 689 11 is_stmt 1 view .LVU2271
 6650 2897 41B84000 		mov	r8d, 64	# ivtmp.475,
 6650      0000
 6651 289d 0F86E901 		jbe	.L815	#,
 6651      0000
 6652 28a3 4D85D2   		test	r10, r10	# tmp830
 6653 28a6 0F84A400 		je	.L586	#,
 6653      0000
 6654              	.LBB367:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6655              		.loc 1 690 9 view .LVU2272
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6656              		.loc 1 691 9 view .LVU2273
 6657              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6658              		.loc 1 691 19 is_stmt 0 view .LVU2274
 6659 28ac C57E6F4A 		vmovdqu	ymm9, YMMWORD PTR 64[rdx]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B], ME
 6659      40
 6660 28b1 4983FE02 		cmp	r14, 2	# bnd.393,
GAS LISTING /tmp/ccgH0yRS.s 			page 188


 6661 28b5 C57E6F52 		vmovdqu	ymm10, YMMWORD PTR 96[rdx]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 32B], 
 6661      60
 6662 28ba 41B90200 		mov	r9d, 2	# ivtmp.473,
 6662      0000
 6663              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6664              		.loc 1 690 19 view .LVU2275
 6665 28c0 C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1432, MEM[base: vectp.400_490, index: ivtmp.475_748, offset
 6665      40
 6666              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6667              		.loc 1 691 19 view .LVU2276
 6668 28c5 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1190, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B
 6668      D2
 6669 28ca C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1205, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B
 6669      C2
 6670              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6671              		.loc 1 690 19 view .LVU2277
 6672 28cf C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1194, tmp1432, MEM[base: vectp.400_490, index: i
 6672      60
 6673              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6674              		.loc 1 691 19 view .LVU2278
 6675 28d4 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_507, tmp1190,
 6675      DAD8
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6676              		.loc 1 692 9 is_stmt 1 view .LVU2279
 6677              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6678              		.loc 1 690 19 is_stmt 0 view .LVU2280
 6679 28da C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1195, tmp1194,
 6679      ECD8
 6680              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6681              		.loc 1 691 19 view .LVU2281
 6682 28e0 C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1206, tmp1205,
 6682      F8D8
 6683 28e6 41B88000 		mov	r8d, 128	# ivtmp.475,
 6683      0000
 6684              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6685              		.loc 1 692 42 view .LVU2282
 6686 28ec C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.407, tmp1195, _12
 6687              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6688              		.loc 1 692 63 view .LVU2283
 6689 28f0 C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.408, vect_perm_even_507, _18
 6690              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6691              		.loc 1 694 42 view .LVU2284
 6692 28f4 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.410, vect_perm_even_507, _12
 6693              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6694              		.loc 1 694 63 view .LVU2285
 6695 28f8 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.411, tmp1206, _18
 6696              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/ccgH0yRS.s 			page 189


 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6697              		.loc 1 692 52 view .LVU2286
 6698 28fc C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.409, vect__98.407, vect__100.408
 6698      CF
 6699              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6700              		.loc 1 694 52 view .LVU2287
 6701 2901 C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.412, vect__110.411, vect__109.410
 6701      D2
 6702              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6703              		.loc 1 692 31 view .LVU2288
 6704 2906 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1202, vect__104.409
 6704      CD01
 6705              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6706              		.loc 1 694 31 view .LVU2289
 6707 290c C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1213, vect__114.412
 6707      D601
 6708              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6709              		.loc 1 692 31 view .LVU2290
 6710 2912 C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _513, index: ivtmp.475_748, offset: 0B], tmp1199
 6710      4B40
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6711              		.loc 1 692 31 view .LVU2291
 6712 2918 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 16B], tmp1199
 6712      4B5001
 6713 291f C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _513, index: ivtmp.475_748, offset: 32B], tmp1202
 6713      6B60
 6714 2925 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 48B], tmp1202
 6714      6B7001
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6715              		.loc 1 693 9 is_stmt 1 view .LVU2292
 694:sieve_extend.c ****         copy_word += 2;
 6716              		.loc 1 694 9 view .LVU2293
 6717              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6718              		.loc 1 694 31 is_stmt 0 view .LVU2294
 6719 292c C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _533, index: ivtmp.475_748, offset: 0B], tmp1210
 6719      40
 694:sieve_extend.c ****         copy_word += 2;
 6720              		.loc 1 694 31 view .LVU2295
 6721 2931 C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 16B], tmp1210
 6721      575001
 6722 2938 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _533, index: ivtmp.475_748, offset: 32B], tmp1213
 6722      60
 6723 293d C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 48B], tmp1213
 6723      777001
 695:sieve_extend.c ****         source_word += 2;
 6724              		.loc 1 695 9 is_stmt 1 view .LVU2296
 696:sieve_extend.c ****         distance += 2;
 6725              		.loc 1 696 9 view .LVU2297
 697:sieve_extend.c ****     }
 6726              		.loc 1 697 9 view .LVU2298
 697:sieve_extend.c ****     }
 6727              		.loc 1 697 9 is_stmt 0 view .LVU2299
GAS LISTING /tmp/ccgH0yRS.s 			page 190


 6728              	.LBE367:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6729              		.loc 1 689 11 is_stmt 1 view .LVU2300
 6730 2944 0F864201 		jbe	.L815	#,
 6730      0000
 6731 294a 660F1F44 		.p2align 4
 6731      0000
 6732              		.p2align 3
 6733              	.L586:
 6734              	.LBB368:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6735              		.loc 1 690 9 view .LVU2301
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6736              		.loc 1 691 9 view .LVU2302
 6737              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6738              		.loc 1 691 19 is_stmt 0 view .LVU2303
 6739 2950 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rdx+r8]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B], 
 6739      2402
 6740 2956 4983C102 		add	r9, 2	# ivtmp.473,
 6741 295a C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rdx+r8]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 32B
 6741      6C0220
 6742              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6743              		.loc 1 690 19 view .LVU2304
 6744 2961 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1316, MEM[base: vectp.400_490, index: ivtmp.475_748, offse
 6744      0C01
 6745              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6746              		.loc 1 691 19 view .LVU2305
 6747 2967 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp837, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0
 6747      F5
 6748 296c C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp852, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0
 6748      DD
 6749              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6750              		.loc 1 690 19 view .LVU2306
 6751 2971 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp841, tmp1316, MEM[base: vectp.400_490, index: 
 6751      440120
 6752              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6753              		.loc 1 691 19 view .LVU2307
 6754 2978 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_507, tmp837,
 6754      FED8
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6755              		.loc 1 692 9 is_stmt 1 view .LVU2308
 6756              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6757              		.loc 1 690 19 is_stmt 0 view .LVU2309
 6758 297e C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp842, tmp841,
 6758      E8D8
 6759              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6760              		.loc 1 691 19 view .LVU2310
 6761 2984 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp853, tmp852,
 6761      F3D8
 6762              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/ccgH0yRS.s 			page 191


 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6763              		.loc 1 692 42 view .LVU2311
 6764 298a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.407, tmp842, _12
 6765              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6766              		.loc 1 692 63 view .LVU2312
 6767 298e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.408, vect_perm_even_507, _18
 6768              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6769              		.loc 1 694 42 view .LVU2313
 6770 2992 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.410, vect_perm_even_507, _12
 6771              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6772              		.loc 1 694 63 view .LVU2314
 6773 2996 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.411, tmp853, _18
 6774              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6775              		.loc 1 692 52 view .LVU2315
 6776 299a C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.409, vect__98.407, vect__100.408
 6777              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6778              		.loc 1 694 52 view .LVU2316
 6779 299e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.412, vect__110.411, vect__109.410
 6779      F5
 6780              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6781              		.loc 1 692 31 view .LVU2317
 6782 29a3 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp849, vect__104.409
 6782      CA01
 6783              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6784              		.loc 1 694 31 view .LVU2318
 6785 29a9 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp860, vect__114.412
 6785      F101
 6786              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6787              		.loc 1 692 31 view .LVU2319
 6788 29af C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _513, index: ivtmp.475_748, offset: 0B], tmp846
 6788      0C03
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6789              		.loc 1 692 31 view .LVU2320
 6790 29b5 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 16B], tmp846
 6790      4C031001 
 6791 29bd C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _513, index: ivtmp.475_748, offset: 32B], tmp849
 6791      540320
 6792 29c4 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 48B], tmp849
 6792      54033001 
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6793              		.loc 1 693 9 is_stmt 1 view .LVU2321
 694:sieve_extend.c ****         copy_word += 2;
 6794              		.loc 1 694 9 view .LVU2322
 6795              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6796              		.loc 1 694 31 is_stmt 0 view .LVU2323
 6797 29cc C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _533, index: ivtmp.475_748, offset: 0B], tmp857
 6797      3407
 694:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccgH0yRS.s 			page 192


 6798              		.loc 1 694 31 view .LVU2324
 6799 29d2 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 16B], tmp85
 6799      74071001 
 6800 29da C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _533, index: ivtmp.475_748, offset: 32B], tmp860
 6800      4C0720
 6801 29e1 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 48B], tmp860
 6801      4C073001 
 695:sieve_extend.c ****         source_word += 2;
 6802              		.loc 1 695 9 is_stmt 1 view .LVU2325
 696:sieve_extend.c ****         distance += 2;
 6803              		.loc 1 696 9 view .LVU2326
 697:sieve_extend.c ****     }
 6804              		.loc 1 697 9 view .LVU2327
 697:sieve_extend.c ****     }
 6805              		.loc 1 697 9 is_stmt 0 view .LVU2328
 6806              	.LBE368:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6807              		.loc 1 689 11 is_stmt 1 view .LVU2329
 6808              	.LBB369:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6809              		.loc 1 690 9 view .LVU2330
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6810              		.loc 1 691 9 view .LVU2331
 6811              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6812              		.loc 1 691 19 is_stmt 0 view .LVU2332
 6813 29e9 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rdx+r8]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B],
 6813      440240
 6814 29f0 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rdx+r8]	# MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 32B]
 6814      440260
 6815              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6816              		.loc 1 690 19 view .LVU2333
 6817 29f7 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1317, MEM[base: vectp.400_490, index: ivtmp.475_748, off
 6817      7C0140
 6818              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6819              		.loc 1 691 19 view .LVU2334
 6820 29fe C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp867, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B],
 6821 2a02 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp882, MEM[base: vectp.404_499, index: ivtmp.475_748, offset: 0B]
 6822              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6823              		.loc 1 690 19 view .LVU2335
 6824 2a06 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp871, tmp1317, MEM[base: vectp.400_490, index:
 6824      540160
 6825              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6826              		.loc 1 691 19 view .LVU2336
 6827 2a0d C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_507, tmp867,
 6827      CDD8
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6828              		.loc 1 692 9 is_stmt 1 view .LVU2337
 6829              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6830              		.loc 1 690 19 is_stmt 0 view .LVU2338
 6831 2a13 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp872, tmp871,
 6831      D2D8
GAS LISTING /tmp/ccgH0yRS.s 			page 193


 6832              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6833              		.loc 1 691 19 view .LVU2339
 6834 2a19 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp883, tmp882,
 6834      CFD8
 6835              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6836              		.loc 1 692 42 view .LVU2340
 6837 2a1f C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.407, tmp872, _12
 6838              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6839              		.loc 1 692 63 view .LVU2341
 6840 2a23 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.408, vect_perm_even_507, _18
 6841              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6842              		.loc 1 694 42 view .LVU2342
 6843 2a27 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.410, vect_perm_even_507, _12
 6844              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6845              		.loc 1 694 63 view .LVU2343
 6846 2a2b C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.411, tmp883, _18
 6847              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6848              		.loc 1 692 52 view .LVU2344
 6849 2a2f C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.409, vect__98.407, vect__100.408
 6850              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6851              		.loc 1 694 52 view .LVU2345
 6852 2a33 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.412, vect__110.411, vect__109.410
 6853              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6854              		.loc 1 692 31 view .LVU2346
 6855 2a37 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp879, vect__104.409
 6855      E601
 6856              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6857              		.loc 1 694 31 view .LVU2347
 6858 2a3d C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp890, vect__114.412
 6858      EF01
 6859              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6860              		.loc 1 692 31 view .LVU2348
 6861 2a43 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _513, index: ivtmp.475_748, offset: 0B], tmp876
 6861      640340
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6862              		.loc 1 692 31 view .LVU2349
 6863 2a4a C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 16B], tmp87
 6863      64035001 
 6864 2a52 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _513, index: ivtmp.475_748, offset: 32B], tmp879
 6864      740360
 6865 2a59 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _513, index: ivtmp.475_748, offset: 48B], tmp8
 6865      74037001 
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6866              		.loc 1 693 9 is_stmt 1 view .LVU2350
 694:sieve_extend.c ****         copy_word += 2;
 6867              		.loc 1 694 9 view .LVU2351
 6868              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccgH0yRS.s 			page 194


 694:sieve_extend.c ****         copy_word += 2;
 6869              		.loc 1 694 31 is_stmt 0 view .LVU2352
 6870 2a61 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _533, index: ivtmp.475_748, offset: 0B], tmp887
 6870      6C0740
 694:sieve_extend.c ****         copy_word += 2;
 6871              		.loc 1 694 31 view .LVU2353
 6872 2a68 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 16B], tmp887
 6872      6C075001 
 6873 2a70 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _533, index: ivtmp.475_748, offset: 32B], tmp890
 6873      7C0760
 6874 2a77 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _533, index: ivtmp.475_748, offset: 48B], tmp89
 6874      7C077001 
 695:sieve_extend.c ****         source_word += 2;
 6875              		.loc 1 695 9 is_stmt 1 view .LVU2354
 696:sieve_extend.c ****         distance += 2;
 6876              		.loc 1 696 9 view .LVU2355
 697:sieve_extend.c ****     }
 6877              		.loc 1 697 9 view .LVU2356
 697:sieve_extend.c ****     }
 6878              		.loc 1 697 9 is_stmt 0 view .LVU2357
 6879              	.LBE369:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6880              		.loc 1 689 11 is_stmt 1 view .LVU2358
 6881 2a7f 4983E880 		sub	r8, -128	# ivtmp.475,
 6882 2a83 4D39CE   		cmp	r14, r9	# bnd.393, ivtmp.473
 6883 2a86 0F87C4FE 		ja	.L586	#,
 6883      FFFF
 6884              	.L815:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6885              		.loc 1 689 11 is_stmt 0 view .LVU2359
 6886 2a8c 488B5424 		mov	rdx, QWORD PTR 88[rsp]	# _183, %sfp
 6886      58
 6887 2a91 49C1E603 		sal	r14, 3	# _483,
 6888 2a95 4A8D0C32 		lea	rcx, [rdx+r14]	# tmp.395,
 6889 2a99 4A8D1430 		lea	rdx, [rax+r14]	# tmp.396,
 6890              	.LVL279:
 6891              	.LBB370:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6892              		.loc 1 690 9 is_stmt 1 view .LVU2360
 6893              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6894              		.loc 1 690 37 is_stmt 0 view .LVU2361
 6895 2a9d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _605,
 6895      00000000 
 6896              	.LVL280:
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6897              		.loc 1 691 9 is_stmt 1 view .LVU2362
 6898              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6899              		.loc 1 692 42 is_stmt 0 view .LVU2363
 6900 2aa5 C4E293F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r13	# tmp648, *_606, shift
 6900      34CB
 6901              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6902              		.loc 1 691 19 view .LVU2364
 6903 2aab 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_610
 6903      08
GAS LISTING /tmp/ccgH0yRS.s 			page 195


 6904              	.LVL281:
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6905              		.loc 1 692 9 is_stmt 1 view .LVU2365
 6906              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6907              		.loc 1 692 63 is_stmt 0 view .LVU2366
 6908 2ab0 C46281F7 		shlx	r10, rdi, r15	# tmp650, source1, shift_flipped
 6908      D7
 6909              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6910              		.loc 1 692 52 view .LVU2367
 6911 2ab5 4C09D6   		or	rsi, r10	# tmp651, tmp650
 6912              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6913              		.loc 1 694 42 view .LVU2368
 6914 2ab8 C4E293F7 		shrx	rdi, rdi, r13	# tmp654, source1, shift
 6914      FF
 6915              	.LVL282:
 6916              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6917              		.loc 1 692 52 view .LVU2369
 6918 2abd 488934D3 		mov	QWORD PTR [rbx+rdx*8], rsi	# *_615, tmp651
 6919              	.LVL283:
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6920              		.loc 1 693 9 is_stmt 1 view .LVU2370
 6921              	# sieve_extend.c:693:         bitword_t source2 = bitarray[source_word+2];
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6922              		.loc 1 693 37 is_stmt 0 view .LVU2371
 6923 2ac1 4C8D4902 		lea	r9, 2[rcx]	# _618,
 6924              	.LVL284:
 694:sieve_extend.c ****         copy_word += 2;
 6925              		.loc 1 694 9 is_stmt 1 view .LVU2372
 6926              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6927              		.loc 1 694 63 is_stmt 0 view .LVU2373
 6928 2ac5 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_620, *_620
 6928      10
 6929 2aca C44281F7 		shlx	r11, r8, r15	# tmp652, *_620, shift_flipped
 6929      D8
 6930              	.LVL285:
 6931              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6932              		.loc 1 694 52 view .LVU2374
 6933 2acf 4C09DF   		or	rdi, r11	# tmp655, tmp652
 6934              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 6935              		.loc 1 695 19 view .LVU2375
 6936 2ad2 4C8D4202 		lea	r8, 2[rdx]	# copy_word,
 6937              	.LVL286:
 695:sieve_extend.c ****         source_word += 2;
 6938              		.loc 1 695 19 view .LVU2376
 6939              	.LBE370:
 6940              	# sieve_extend.c:689:     while (copy_word < fast_loop_stop_word) {
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6941              		.loc 1 689 11 view .LVU2377
 6942 2ad6 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6942      30
GAS LISTING /tmp/ccgH0yRS.s 			page 196


 6943              	.LBB371:
 6944              	# sieve_extend.c:697:         distance += 2;
 697:sieve_extend.c ****     }
 6945              		.loc 1 697 18 view .LVU2378
 6946 2adb 4D8D5602 		lea	r10, 2[r14]	# distance,
 6947              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6948              		.loc 1 694 52 view .LVU2379
 6949 2adf 48897CD3 		mov	QWORD PTR 8[rbx+rdx*8], rdi	# *_626, tmp655
 6949      08
 6950              	.LVL287:
 695:sieve_extend.c ****         source_word += 2;
 6951              		.loc 1 695 9 is_stmt 1 view .LVU2380
 696:sieve_extend.c ****         distance += 2;
 6952              		.loc 1 696 9 view .LVU2381
 697:sieve_extend.c ****     }
 6953              		.loc 1 697 9 view .LVU2382
 697:sieve_extend.c ****     }
 6954              		.loc 1 697 9 is_stmt 0 view .LVU2383
 6955              	.LBE371:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 6956              		.loc 1 689 11 is_stmt 1 view .LVU2384
 6957 2ae4 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6958 2ae7 0F86D500 		jbe	.L589	#,
 6958      0000
 6959              	.LBB372:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6960              		.loc 1 690 9 view .LVU2385
 6961              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6962              		.loc 1 692 42 is_stmt 0 view .LVU2386
 6963 2aed 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_636, *_636
 6964              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 6965              		.loc 1 690 37 view .LVU2387
 6966 2af1 4E8D14CD 		lea	r10, 0[0+r9*8]	# _635,
 6966      00000000 
 6967              	.LVL288:
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6968              		.loc 1 691 9 is_stmt 1 view .LVU2388
 6969              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6970              		.loc 1 691 19 is_stmt 0 view .LVU2389
 6971 2af9 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_640
 6971      08
 6972              	.LVL289:
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6973              		.loc 1 692 9 is_stmt 1 view .LVU2390
 6974              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6975              		.loc 1 692 42 is_stmt 0 view .LVU2391
 6976 2afe C4E293F7 		shrx	rsi, rsi, r13	# tmp656, *_636, shift
 6976      F6
 6977              	.LVL290:
 6978              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6979              		.loc 1 692 63 view .LVU2392
GAS LISTING /tmp/ccgH0yRS.s 			page 197


 6980 2b03 C46281F7 		shlx	r9, rdi, r15	# tmp658, source1, shift_flipped
 6980      CF
 6981              	.LVL291:
 6982              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 6983              		.loc 1 692 52 view .LVU2393
 6984 2b08 4C09CE   		or	rsi, r9	# tmp659, tmp658
 6985 2b0b 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_645, tmp659
 6986              	.LVL292:
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6987              		.loc 1 693 9 is_stmt 1 view .LVU2394
 6988              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6989              		.loc 1 694 42 is_stmt 0 view .LVU2395
 6990 2b0f C4E293F7 		shrx	rdi, rdi, r13	# tmp662, source1, shift
 6990      FF
 6991              	.LVL293:
 6992              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6993              		.loc 1 694 63 view .LVU2396
 6994 2b14 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_650, *_650
 6994      10
 6995 2b19 C4C281F7 		shlx	rsi, r10, r15	# tmp660, *_650, shift_flipped
 6995      F2
 6996              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 6997              		.loc 1 694 52 view .LVU2397
 6998 2b1e 4809F7   		or	rdi, rsi	# tmp663, tmp660
 6999              	# sieve_extend.c:693:         bitword_t source2 = bitarray[source_word+2];
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7000              		.loc 1 693 37 view .LVU2398
 7001 2b21 4C8D4904 		lea	r9, 4[rcx]	# _648,
 694:sieve_extend.c ****         copy_word += 2;
 7002              		.loc 1 694 9 is_stmt 1 view .LVU2399
 7003              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 7004              		.loc 1 694 52 is_stmt 0 view .LVU2400
 7005 2b25 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_656, tmp663
 7005      08
 695:sieve_extend.c ****         source_word += 2;
 7006              		.loc 1 695 9 is_stmt 1 view .LVU2401
 7007              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 7008              		.loc 1 695 19 is_stmt 0 view .LVU2402
 7009 2b2a 4C8D4204 		lea	r8, 4[rdx]	# copy_word,
 7010              	.LVL294:
 696:sieve_extend.c ****         distance += 2;
 7011              		.loc 1 696 9 is_stmt 1 view .LVU2403
 697:sieve_extend.c ****     }
 7012              		.loc 1 697 9 view .LVU2404
 697:sieve_extend.c ****     }
 7013              		.loc 1 697 9 is_stmt 0 view .LVU2405
 7014              	.LBE372:
 7015              	# sieve_extend.c:689:     while (copy_word < fast_loop_stop_word) {
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7016              		.loc 1 689 11 view .LVU2406
 7017 2b2e 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
GAS LISTING /tmp/ccgH0yRS.s 			page 198


 7018              	.LBB373:
 7019              	# sieve_extend.c:697:         distance += 2;
 697:sieve_extend.c ****     }
 7020              		.loc 1 697 18 view .LVU2407
 7021 2b31 4D8D5604 		lea	r10, 4[r14]	# distance,
 7022              	.LVL295:
 697:sieve_extend.c ****     }
 7023              		.loc 1 697 18 view .LVU2408
 7024              	.LBE373:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7025              		.loc 1 689 11 is_stmt 1 view .LVU2409
 7026 2b35 0F868700 		jbe	.L589	#,
 7026      0000
 7027              	.LBB374:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7028              		.loc 1 690 9 view .LVU2410
 7029              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7030              		.loc 1 690 37 is_stmt 0 view .LVU2411
 7031 2b3b 4E8D14CD 		lea	r10, 0[0+r9*8]	# _665,
 7031      00000000 
 7032              	.LVL296:
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7033              		.loc 1 691 9 is_stmt 1 view .LVU2412
 7034              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 7035              		.loc 1 695 19 is_stmt 0 view .LVU2413
 7036 2b43 4883C206 		add	rdx, 6	# copy_word,
 7037              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7038              		.loc 1 691 19 view .LVU2414
 7039 2b47 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_670
 7039      08
 7040              	.LVL297:
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7041              		.loc 1 692 9 is_stmt 1 view .LVU2415
 7042              	# sieve_extend.c:693:         bitword_t source2 = bitarray[source_word+2];
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7043              		.loc 1 693 37 is_stmt 0 view .LVU2416
 7044 2b4c 4883C106 		add	rcx, 6	# _678,
 7045              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7046              		.loc 1 692 42 view .LVU2417
 7047 2b50 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_666, *_666
 7048              	.LVL298:
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7049              		.loc 1 692 42 view .LVU2418
 7050 2b54 C4C293F7 		shrx	rsi, r9, r13	# tmp664, *_666, shift
 7050      F1
 7051              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7052              		.loc 1 692 63 view .LVU2419
 7053 2b59 C46281F7 		shlx	r9, rdi, r15	# tmp666, source1, shift_flipped
 7053      CF
 7054              	.LVL299:
 7055              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
GAS LISTING /tmp/ccgH0yRS.s 			page 199


 7056              		.loc 1 692 52 view .LVU2420
 7057 2b5e 4C09CE   		or	rsi, r9	# tmp667, tmp666
 7058 2b61 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_675, tmp667
 7059              	.LVL300:
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7060              		.loc 1 693 9 is_stmt 1 view .LVU2421
 694:sieve_extend.c ****         copy_word += 2;
 7061              		.loc 1 694 9 view .LVU2422
 7062              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 7063              		.loc 1 694 42 is_stmt 0 view .LVU2423
 7064 2b65 C4E293F7 		shrx	rdi, rdi, r13	# tmp670, source1, shift
 7064      FF
 7065              	.LVL301:
 7066              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 7067              		.loc 1 694 63 view .LVU2424
 7068 2b6a 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_680, *_680
 7068      10
 7069              	.LVL302:
 694:sieve_extend.c ****         copy_word += 2;
 7070              		.loc 1 694 63 view .LVU2425
 7071 2b6f C4C281F7 		shlx	rsi, r10, r15	# tmp668, *_680, shift_flipped
 7071      F2
 7072              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 7073              		.loc 1 694 52 view .LVU2426
 7074 2b74 4809F7   		or	rdi, rsi	# tmp671, tmp668
 7075              	.LBE374:
 7076              	# sieve_extend.c:689:     while (copy_word < fast_loop_stop_word) {
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7077              		.loc 1 689 11 view .LVU2427
 7078 2b77 4939D3   		cmp	r11, rdx	# fast_loop_stop_word, copy_word
 7079              	.LBB375:
 7080              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 7081              		.loc 1 694 52 view .LVU2428
 7082 2b7a 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_686, tmp671
 7082      08
 695:sieve_extend.c ****         source_word += 2;
 7083              		.loc 1 695 9 is_stmt 1 view .LVU2429
 7084              	.LVL303:
 696:sieve_extend.c ****         distance += 2;
 7085              		.loc 1 696 9 view .LVU2430
 697:sieve_extend.c ****     }
 7086              		.loc 1 697 9 view .LVU2431
 7087              	# sieve_extend.c:697:         distance += 2;
 697:sieve_extend.c ****     }
 7088              		.loc 1 697 18 is_stmt 0 view .LVU2432
 7089 2b7f 4D8D5606 		lea	r10, 6[r14]	# distance,
 7090              	.LVL304:
 697:sieve_extend.c ****     }
 7091              		.loc 1 697 18 view .LVU2433
 7092              	.LBE375:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7093              		.loc 1 689 11 is_stmt 1 view .LVU2434
 7094 2b83 763D     		jbe	.L589	#,
GAS LISTING /tmp/ccgH0yRS.s 			page 200


 7095              	.LBB376:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7096              		.loc 1 690 9 view .LVU2435
 7097              	# sieve_extend.c:690:         bitword_t source0 = bitarray[source_word  ];
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 7098              		.loc 1 690 37 is_stmt 0 view .LVU2436
 7099 2b85 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _452,
 7099      00000000 
 7100              	.LVL305:
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7101              		.loc 1 691 9 is_stmt 1 view .LVU2437
 7102              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7103              		.loc 1 691 19 is_stmt 0 view .LVU2438
 7104 2b8d 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_457
 7104      08
 7105              	.LVL306:
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7106              		.loc 1 692 9 is_stmt 1 view .LVU2439
 7107              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7108              		.loc 1 692 63 is_stmt 0 view .LVU2440
 7109 2b92 C44281F7 		shlx	r8, r9, r15	# tmp674, source1, shift_flipped
 7109      C1
 7110              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7111              		.loc 1 692 42 view .LVU2441
 7112 2b97 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_453, *_453
 7113              	.LVL307:
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7114              		.loc 1 692 42 view .LVU2442
 7115 2b9b C46293F7 		shrx	r10, rcx, r13	# tmp672, *_453, shift
 7115      D1
 7116              	.LVL308:
 7117              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 7118              		.loc 1 692 52 view .LVU2443
 7119 2ba0 4D09C2   		or	r10, r8	# tmp675, tmp674
 7120 2ba3 4C8914D3 		mov	QWORD PTR [rbx+rdx*8], r10	# *_462, tmp675
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 7121              		.loc 1 693 9 is_stmt 1 view .LVU2444
 7122              	.LVL309:
 694:sieve_extend.c ****         copy_word += 2;
 7123              		.loc 1 694 9 view .LVU2445
 7124              	# sieve_extend.c:697:         distance += 2;
 697:sieve_extend.c ****     }
 7125              		.loc 1 697 18 is_stmt 0 view .LVU2446
 7126 2ba7 4D8D5608 		lea	r10, 8[r14]	# distance,
 7127              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 7128              		.loc 1 694 63 view .LVU2447
 7129 2bab 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_467, *_467
 7129      10
 7130              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 7131              		.loc 1 694 42 view .LVU2448
 7132 2bb0 C44293F7 		shrx	r11, r9, r13	# tmp678, source1, shift
GAS LISTING /tmp/ccgH0yRS.s 			page 201


 7132      D9
 7133              	.LVL310:
 7134              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 7135              		.loc 1 694 63 view .LVU2449
 7136 2bb5 C4E281F7 		shlx	rdi, rsi, r15	# tmp676, *_467, shift_flipped
 7136      FE
 7137              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 7138              		.loc 1 694 52 view .LVU2450
 7139 2bba 4909FB   		or	r11, rdi	# tmp679, tmp676
 7140 2bbd 4C895CD3 		mov	QWORD PTR 8[rbx+rdx*8], r11	# *_473, tmp679
 7140      08
 695:sieve_extend.c ****         source_word += 2;
 7141              		.loc 1 695 9 is_stmt 1 view .LVU2451
 696:sieve_extend.c ****         distance += 2;
 7142              		.loc 1 696 9 view .LVU2452
 697:sieve_extend.c ****     }
 7143              		.loc 1 697 9 view .LVU2453
 7144              	.LVL311:
 697:sieve_extend.c ****     }
 7145              		.loc 1 697 9 is_stmt 0 view .LVU2454
 7146              	.LBE376:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7147              		.loc 1 689 11 is_stmt 1 view .LVU2455
 7148              	.L589:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 7149              		.loc 1 689 11 is_stmt 0 view .LVU2456
 7150 2bc2 4C015424 		add	QWORD PTR 88[rsp], r10	# %sfp, distance
 7150      58
 7151 2bc7 4C01D0   		add	rax, r10	# ivtmp.435, distance
 7152              	.L584:
 699:sieve_extend.c **** }
 7153              		.loc 1 699 5 is_stmt 1 view .LVU2457
 7154              	.LVL312:
 699:sieve_extend.c **** }
 7155              		.loc 1 699 5 is_stmt 0 view .LVU2458
 7156              	.LBE387:
 7157              	.LBE390:
 847:sieve_extend.c ****     copy_word += distance;
 7158              		.loc 1 847 5 is_stmt 1 view .LVU2459
 848:sieve_extend.c **** 
 7159              		.loc 1 848 5 view .LVU2460
 850:sieve_extend.c **** 
 7160              		.loc 1 850 6 view .LVU2461
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7161              		.loc 1 853 11 view .LVU2462
 7162              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7163              		.loc 1 853 5 is_stmt 0 view .LVU2463
 7164 2bca 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 7164      40
 7165 2bcf 4939C2   		cmp	r10, rax	# aligned_copy_word, ivtmp.435
 7166 2bd2 0F821004 		jb	.L590	#,
 7166      0000
 7167 2bd8 4C8B5C24 		mov	r11, QWORD PTR 88[rsp]	# _183, %sfp
 7167      58
GAS LISTING /tmp/ccgH0yRS.s 			page 202


 7168 2bdd 488D34C5 		lea	rsi, 0[0+rax*8]	# _220,
 7168      00000000 
 7169 2be5 488D7E20 		lea	rdi, 32[rsi]	# tmp691,
 7170 2be9 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _226,
 7170      00000000 
 7171 2bf1 4A8D0CDD 		lea	rcx, 40[0+r11*8]	# _218,
 7171      28000000 
 7172 2bf9 4839D7   		cmp	rdi, rdx	# tmp691, _226
 7173 2bfc 4D89DE   		mov	r14, r11	# _183, _183
 7174 2bff 410F9EC1 		setle	r9b	#, tmp693
 7175 2c03 4839F1   		cmp	rcx, rsi	# _218, _220
 7176 2c06 410F9EC0 		setle	r8b	#, tmp695
 7177 2c0a 4508C1   		or	r9b, r8b	# tmp693, tmp695
 7178 2c0d 0F84E50A 		je	.L591	#,
 7178      0000
 7179 2c13 4C89D1   		mov	rcx, r10	# tmp697, aligned_copy_word
 7180 2c16 4829C1   		sub	rcx, rax	# tmp697, ivtmp.435
 7181 2c19 4883F905 		cmp	rcx, 5	# tmp697,
 7182 2c1d 0F86D50A 		jbe	.L591	#,
 7182      0000
 7183 2c23 4801DA   		add	rdx, rbx	# vectp.373, bitarray
 7184 2c26 4983C201 		add	r10, 1	# ivtmp.435,
 7185 2c2a 48C1EA03 		shr	rdx, 3	# tmp702,
 7186 2c2e 4C89D7   		mov	rdi, r10	# niters.372, ivtmp.435
 7187 2c31 48F7DA   		neg	rdx	# tmp703
 7188 2c34 4829C7   		sub	rdi, rax	# niters.372, ivtmp.435
 7189 2c37 83E203   		and	edx, 3	# prolog_loop_niters.374,
 7190 2c3a 0F84A80A 		je	.L610	#,
 7190      0000
 7191              	.LVL313:
 854:sieve_extend.c ****     }
 7192              		.loc 1 854 9 is_stmt 1 view .LVU2464
 7193              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7194              		.loc 1 854 77 is_stmt 0 view .LVU2465
 7195 2c40 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 7196              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7197              		.loc 1 854 94 view .LVU2466
 7198 2c44 4E8B5CDB 		mov	r11, QWORD PTR 8[rbx+r11*8]	# *_573, *_573
 7198      08
 7199              	.LVL314:
 854:sieve_extend.c ****     }
 7200              		.loc 1 854 94 view .LVU2467
 7201 2c49 C44281F7 		shlx	r9, r11, r15	# tmp704,, shift_flipped
 7201      CB
 7202              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7203              		.loc 1 854 56 view .LVU2468
 7204 2c4e 4E8B1CF3 		mov	r11, QWORD PTR [rbx+r14*8]	# *_568, *_568
 7205              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7206              		.loc 1 854 77 view .LVU2469
 7207 2c52 4C89C1   		mov	rcx, r8	# source_word, tmp793
 7208              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7209              		.loc 1 854 56 view .LVU2470
GAS LISTING /tmp/ccgH0yRS.s 			page 203


 7210 2c55 4C895C24 		mov	QWORD PTR 56[rsp], r11	# %sfp, *_568
 7210      38
 7211 2c5a C44293F7 		shrx	r11, r11, r13	# tmp706,, shift
 7211      DB
 7212              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7213              		.loc 1 854 66 view .LVU2471
 7214 2c5f 4D09D9   		or	r9, r11	# tmp708, tmp706
 7215 2c62 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.374,
 7216 2c66 4C890C33 		mov	QWORD PTR [rbx+rsi], r9	# *_577, tmp708
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7217              		.loc 1 853 43 is_stmt 1 view .LVU2472
 7218              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7219              		.loc 1 853 52 is_stmt 0 view .LVU2473
 7220 2c6a 488D7001 		lea	rsi, 1[rax]	# copy_word,
 7221              	.LVL315:
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7222              		.loc 1 853 11 is_stmt 1 view .LVU2474
 7223 2c6e 7454     		je	.L592	#,
 854:sieve_extend.c ****     }
 7224              		.loc 1 854 9 view .LVU2475
 7225              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7226              		.loc 1 854 40 is_stmt 0 view .LVU2476
 7227 2c70 4E8D1CC5 		lea	r11, 0[0+r8*8]	# _586,
 7227      00000000 
 7228              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7229              		.loc 1 854 94 view .LVU2477
 7230 2c78 C42281F7 		shlx	r9, QWORD PTR 8[rbx+r11], r15	# tmp709, *_592, shift_flipped
 7230      4C1B08
 7231              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7232              		.loc 1 854 56 view .LVU2478
 7233 2c7f 4E8B1C1B 		mov	r11, QWORD PTR [rbx+r11]	# *_587, *_587
 7234 2c83 C44293F7 		shrx	r11, r11, r13	# tmp711, *_587, shift
 7234      DB
 7235              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7236              		.loc 1 854 66 view .LVU2479
 7237 2c88 4D09D9   		or	r9, r11	# tmp713, tmp711
 7238 2c8b 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.374,
 7239 2c8f 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_596, tmp713
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7240              		.loc 1 853 43 is_stmt 1 view .LVU2480
 7241              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7242              		.loc 1 854 77 is_stmt 0 view .LVU2481
 7243 2c93 498D4E02 		lea	rcx, 2[r14]	# source_word,
 7244              	.LVL316:
 7245              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7246              		.loc 1 853 52 view .LVU2482
 7247 2c97 488D7002 		lea	rsi, 2[rax]	# copy_word,
 7248              	.LVL317:
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccgH0yRS.s 			page 204


 7249              		.loc 1 853 11 is_stmt 1 view .LVU2483
 7250 2c9b 7527     		jne	.L592	#,
 854:sieve_extend.c ****     }
 7251              		.loc 1 854 9 view .LVU2484
 7252              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7253              		.loc 1 854 40 is_stmt 0 view .LVU2485
 7254 2c9d 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _261,
 7254      00000000 
 7255              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7256              		.loc 1 854 77 view .LVU2486
 7257 2ca5 498D4E03 		lea	rcx, 3[r14]	# source_word,
 7258              	.LVL318:
 7259              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7260              		.loc 1 854 56 view .LVU2487
 7261 2ca9 4E8B0C1B 		mov	r9, QWORD PTR [rbx+r11]	# *_262, *_262
 7262              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7263              		.loc 1 854 94 view .LVU2488
 7264 2cad C42281F7 		shlx	r14, QWORD PTR 8[rbx+r11], r15	# tmp714, *_267, shift_flipped
 7264      741B08
 7265              	.LVL319:
 7266              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7267              		.loc 1 854 56 view .LVU2489
 7268 2cb4 C44293F7 		shrx	r11, r9, r13	# tmp716, *_262, shift
 7268      D9
 7269              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7270              		.loc 1 854 66 view .LVU2490
 7271 2cb9 4D09DE   		or	r14, r11	# tmp718, tmp716
 7272 2cbc 4C8934F3 		mov	QWORD PTR [rbx+rsi*8], r14	# *_271, tmp718
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7273              		.loc 1 853 43 is_stmt 1 view .LVU2491
 7274              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7275              		.loc 1 853 52 is_stmt 0 view .LVU2492
 7276 2cc0 488D7003 		lea	rsi, 3[rax]	# copy_word,
 7277              	.LVL320:
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7278              		.loc 1 853 11 is_stmt 1 view .LVU2493
 7279              	.L592:
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7280              		.loc 1 853 11 is_stmt 0 view .LVU2494
 7281 2cc4 4829D7   		sub	rdi, rdx	# niters.375, prolog_loop_niters.374
 7282 2cc7 C441796E 		vmovd	xmm10, r12d	# _12, _12
 7282      D4
 7283 2ccc 4989FB   		mov	r11, rdi	# bnd.376, niters.375
 7284 2ccf 4801D0   		add	rax, rdx	# tmp724, prolog_loop_niters.374
 7285 2cd2 49C1EB02 		shr	r11, 2	# bnd.376,
 7286 2cd6 4901D0   		add	r8, rdx	# tmp722, prolog_loop_niters.374
 7287 2cd9 49C1E305 		sal	r11, 5	# _733,
 7288 2cdd 4E8D04C3 		lea	r8, [rbx+r8*8]	# vectp.385,
 7289 2ce1 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# _183, %sfp
 7289      58
GAS LISTING /tmp/ccgH0yRS.s 			page 205


 7290 2ce6 4D8D63E0 		lea	r12, -32[r11]	# tmp818,
 7291 2cea C5F96E54 		vmovd	xmm2, DWORD PTR 72[rsp]	# _18, %sfp
 7291      2448
 7292 2cf0 49C1EC05 		shr	r12, 5	# tmp816,
 7293 2cf4 4983C401 		add	r12, 1	# tmp819,
 7294 2cf8 4901D6   		add	r14, rdx	# _183, prolog_loop_niters.374
 7295 2cfb 488D14C3 		lea	rdx, [rbx+rax*8]	# vectp.390,
 7296              	# sieve_extend.c:847:     source_word += distance;
 847:sieve_extend.c ****     copy_word += distance;
 7297              		.loc 1 847 17 view .LVU2495
 7298 2cff 31C0     		xor	eax, eax	# ivtmp.451
 7299 2d01 4183E407 		and	r12d, 7	# tmp820,
 7300 2d05 4E8D0CF3 		lea	r9, [rbx+r14*8]	# vectp.381,
 7301 2d09 0F842801 		je	.L594	#,
 7301      0000
 7302 2d0f 4983FC01 		cmp	r12, 1	# tmp820,
 7303 2d13 0F84F200 		je	.L742	#,
 7303      0000
 7304 2d19 4983FC02 		cmp	r12, 2	# tmp820,
 7305 2d1d 0F84C600 		je	.L743	#,
 7305      0000
 7306 2d23 4983FC03 		cmp	r12, 3	# tmp820,
 7307 2d27 0F849900 		je	.L744	#,
 7307      0000
 7308 2d2d 4983FC04 		cmp	r12, 4	# tmp820,
 7309 2d31 7470     		je	.L745	#,
 7310 2d33 4983FC05 		cmp	r12, 5	# tmp820,
 7311 2d37 7448     		je	.L746	#,
 7312 2d39 4983FC06 		cmp	r12, 6	# tmp820,
 7313 2d3d 7420     		je	.L747	#,
 854:sieve_extend.c ****     }
 7314              		.loc 1 854 9 is_stmt 1 view .LVU2496
 7315              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7316              		.loc 1 854 56 is_stmt 0 view .LVU2497
 7317 2d3f C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r9]	# tmp1411, MEM[base: vectp.381_307, index: ivtmp.451_731, offset: 0
 7317      19
 7318 2d44 B8200000 		mov	eax, 32	# ivtmp.451,
 7318      00
 7319              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7320              		.loc 1 854 94 view .LVU2498
 7321 2d49 C4C17E6F 		vmovdqu	ymm4, YMMWORD PTR [r8]	# tmp1412, MEM[base: vectp.385_314, index: ivtmp.451_731, offset: 0
 7321      20
 7322              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7323              		.loc 1 854 56 view .LVU2499
 7324 2d4e C44165D3 		vpsrlq	ymm11, ymm3, xmm10	# vect__38.383, tmp1411, _12
 7324      DA
 7325              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7326              		.loc 1 854 94 view .LVU2500
 7327 2d53 C5DDF3F2 		vpsllq	ymm6, ymm4, xmm2	# vect__43.387, tmp1412, _18
 7328              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7329              		.loc 1 854 66 view .LVU2501
 7330 2d57 C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__46.388, vect__38.383, vect__43.387
GAS LISTING /tmp/ccgH0yRS.s 			page 206


 7331              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7332              		.loc 1 854 29 view .LVU2502
 7333 2d5b C57E7F22 		vmovdqu	YMMWORD PTR [rdx], ymm12	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B], vec
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7334              		.loc 1 853 43 is_stmt 1 view .LVU2503
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7335              		.loc 1 853 11 view .LVU2504
 7336              	.L747:
 854:sieve_extend.c ****     }
 7337              		.loc 1 854 9 view .LVU2505
 7338              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7339              		.loc 1 854 56 is_stmt 0 view .LVU2506
 7340 2d5f C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rax]	# tmp1413, MEM[base: vectp.381_307, index: ivtmp.451_731, offs
 7340      2C01
 7341              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7342              		.loc 1 854 94 view .LVU2507
 7343 2d65 C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r8+rax]	# tmp1414, MEM[base: vectp.385_314, index: ivtmp.451_731, offs
 7343      3C00
 7344              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7345              		.loc 1 854 56 view .LVU2508
 7346 2d6b C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.383, tmp1413, _12
 7346      F2
 7347              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7348              		.loc 1 854 94 view .LVU2509
 7349 2d70 C585F3CA 		vpsllq	ymm1, ymm15, xmm2	# vect__43.387, tmp1414, _18
 7350              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7351              		.loc 1 854 66 view .LVU2510
 7352 2d74 C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.388, vect__38.383, vect__43.387
 7353              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7354              		.loc 1 854 29 view .LVU2511
 7355 2d78 C57E7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm8	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B], 
 7355      02
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7356              		.loc 1 853 43 is_stmt 1 view .LVU2512
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7357              		.loc 1 853 11 view .LVU2513
 7358 2d7d 4883C020 		add	rax, 32	# ivtmp.451,
 7359              	.L746:
 854:sieve_extend.c ****     }
 7360              		.loc 1 854 9 view .LVU2514
 7361              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7362              		.loc 1 854 56 is_stmt 0 view .LVU2515
 7363 2d81 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r9+rax]	# tmp1415, MEM[base: vectp.381_307, index: ivtmp.451_731, offse
 7363      0401
 7364              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7365              		.loc 1 854 94 view .LVU2516
 7366 2d87 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r8+rax]	# tmp1416, MEM[base: vectp.385_314, index: ivtmp.451_731, offse
 7366      0C00
GAS LISTING /tmp/ccgH0yRS.s 			page 207


 7367              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7368              		.loc 1 854 56 view .LVU2517
 7369 2d8d C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.383, tmp1415, _12
 7369      EA
 7370              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7371              		.loc 1 854 94 view .LVU2518
 7372 2d92 C5B5F3FA 		vpsllq	ymm7, ymm9, xmm2	# vect__43.387, tmp1416, _18
 7373              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7374              		.loc 1 854 66 view .LVU2519
 7375 2d96 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.388, vect__38.383, vect__43.387
 7376              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7377              		.loc 1 854 29 view .LVU2520
 7378 2d9a C5FE7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm3	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B], 
 7378      02
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7379              		.loc 1 853 43 is_stmt 1 view .LVU2521
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7380              		.loc 1 853 11 view .LVU2522
 7381 2d9f 4883C020 		add	rax, 32	# ivtmp.451,
 7382              	.L745:
 854:sieve_extend.c ****     }
 7383              		.loc 1 854 9 view .LVU2523
 7384              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7385              		.loc 1 854 56 is_stmt 0 view .LVU2524
 7386 2da3 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r9+rax]	# tmp1417, MEM[base: vectp.381_307, index: ivtmp.451_731, offs
 7386      1C01
 7387              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7388              		.loc 1 854 94 view .LVU2525
 7389 2da9 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR [r8+rax]	# tmp1418, MEM[base: vectp.385_314, index: ivtmp.451_731, offse
 7389      3400
 7390              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7391              		.loc 1 854 56 view .LVU2526
 7392 2daf C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.383, tmp1417, _12
 7392      E2
 7393              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7394              		.loc 1 854 94 view .LVU2527
 7395 2db4 C54DF3E2 		vpsllq	ymm12, ymm6, xmm2	# vect__43.387, tmp1418, _18
 7396              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7397              		.loc 1 854 66 view .LVU2528
 7398 2db8 C4415DEB 		vpor	ymm13, ymm4, ymm12	# vect__46.388, vect__38.383, vect__43.387
 7398      EC
 7399              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7400              		.loc 1 854 29 view .LVU2529
 7401 2dbd C57E7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm13	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B],
 7401      02
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7402              		.loc 1 853 43 is_stmt 1 view .LVU2530
GAS LISTING /tmp/ccgH0yRS.s 			page 208


 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7403              		.loc 1 853 11 view .LVU2531
 7404 2dc2 4883C020 		add	rax, 32	# ivtmp.451,
 7405              	.L744:
 854:sieve_extend.c ****     }
 7406              		.loc 1 854 9 view .LVU2532
 7407              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7408              		.loc 1 854 56 is_stmt 0 view .LVU2533
 7409 2dc6 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rax]	# tmp1419, MEM[base: vectp.381_307, index: ivtmp.451_731, offs
 7409      3401
 7410              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7411              		.loc 1 854 94 view .LVU2534
 7412 2dcc C4C17E6F 		vmovdqu	ymm1, YMMWORD PTR [r8+rax]	# tmp1420, MEM[base: vectp.385_314, index: ivtmp.451_731, offse
 7412      0C00
 7413              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7414              		.loc 1 854 56 view .LVU2535
 7415 2dd2 C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.383, tmp1419, _12
 7415      FA
 7416              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7417              		.loc 1 854 94 view .LVU2536
 7418 2dd7 C575F3C2 		vpsllq	ymm8, ymm1, xmm2	# vect__43.387, tmp1420, _18
 7419              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7420              		.loc 1 854 66 view .LVU2537
 7421 2ddb C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.388, vect__38.383, vect__43.387
 7421      C0
 7422              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7423              		.loc 1 854 29 view .LVU2538
 7424 2de0 C5FE7F04 		vmovdqu	YMMWORD PTR [rdx+rax], ymm0	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B], 
 7424      02
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7425              		.loc 1 853 43 is_stmt 1 view .LVU2539
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7426              		.loc 1 853 11 view .LVU2540
 7427 2de5 4883C020 		add	rax, 32	# ivtmp.451,
 7428              	.L743:
 854:sieve_extend.c ****     }
 7429              		.loc 1 854 9 view .LVU2541
 7430              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7431              		.loc 1 854 56 is_stmt 0 view .LVU2542
 7432 2de9 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r9+rax]	# tmp1421, MEM[base: vectp.381_307, index: ivtmp.451_731, offse
 7432      2C01
 7433              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7434              		.loc 1 854 94 view .LVU2543
 7435 2def C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r8+rax]	# tmp1422, MEM[base: vectp.385_314, index: ivtmp.451_731, offse
 7435      3C00
 7436              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7437              		.loc 1 854 56 view .LVU2544
 7438 2df5 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.383, tmp1421, _12
GAS LISTING /tmp/ccgH0yRS.s 			page 209


 7438      CA
 7439              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7440              		.loc 1 854 94 view .LVU2545
 7441 2dfa C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.387, tmp1422, _18
 7442              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7443              		.loc 1 854 66 view .LVU2546
 7444 2dfe C535EBDB 		vpor	ymm11, ymm9, ymm3	# vect__46.388, vect__38.383, vect__43.387
 7445              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7446              		.loc 1 854 29 view .LVU2547
 7447 2e02 C57E7F1C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm11	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B],
 7447      02
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7448              		.loc 1 853 43 is_stmt 1 view .LVU2548
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7449              		.loc 1 853 11 view .LVU2549
 7450 2e07 4883C020 		add	rax, 32	# ivtmp.451,
 7451              	.L742:
 854:sieve_extend.c ****     }
 7452              		.loc 1 854 9 view .LVU2550
 7453              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7454              		.loc 1 854 56 is_stmt 0 view .LVU2551
 7455 2e0b C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r9+rax]	# tmp1423, MEM[base: vectp.381_307, index: ivtmp.451_731, offse
 7455      2401
 7456              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7457              		.loc 1 854 94 view .LVU2552
 7458 2e11 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR [r8+rax]	# tmp1424, MEM[base: vectp.385_314, index: ivtmp.451_731, offs
 7458      2400
 7459              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7460              		.loc 1 854 56 view .LVU2553
 7461 2e17 C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.383, tmp1423, _12
 7461      F2
 7462              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7463              		.loc 1 854 94 view .LVU2554
 7464 2e1c C51DF3EA 		vpsllq	ymm13, ymm12, xmm2	# vect__43.387, tmp1424, _18
 7465              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7466              		.loc 1 854 66 view .LVU2555
 7467 2e20 C4414DEB 		vpor	ymm14, ymm6, ymm13	# vect__46.388, vect__38.383, vect__43.387
 7467      F5
 7468              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7469              		.loc 1 854 29 view .LVU2556
 7470 2e25 C57E7F34 		vmovdqu	YMMWORD PTR [rdx+rax], ymm14	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B],
 7470      02
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7471              		.loc 1 853 43 is_stmt 1 view .LVU2557
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7472              		.loc 1 853 11 view .LVU2558
 7473 2e2a 4883C020 		add	rax, 32	# ivtmp.451,
 7474 2e2e 4C39D8   		cmp	rax, r11	# ivtmp.451, _733
GAS LISTING /tmp/ccgH0yRS.s 			page 210


 7475 2e31 0F843B01 		je	.L823	#,
 7475      0000
 7476              	.L594:
 854:sieve_extend.c ****     }
 7477              		.loc 1 854 9 discriminator 2 view .LVU2559
 7478              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7479              		.loc 1 854 56 is_stmt 0 discriminator 2 view .LVU2560
 7480 2e37 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r9+rax]	# tmp1348, MEM[base: vectp.381_307, index: ivtmp.451_731, offs
 7480      3C01
 7481              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7482              		.loc 1 854 94 discriminator 2 view .LVU2561
 7483 2e3d C4417E6F 		vmovdqu	ymm8, YMMWORD PTR [r8+rax]	# tmp1349, MEM[base: vectp.385_314, index: ivtmp.451_731, offse
 7483      0400
 7484              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7485              		.loc 1 854 56 discriminator 2 view .LVU2562
 7486 2e43 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.383, tmp1348, _12
 7486      CA
 7487              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7488              		.loc 1 854 94 discriminator 2 view .LVU2563
 7489 2e48 C5BDF3C2 		vpsllq	ymm0, ymm8, xmm2	# vect__43.387, tmp1349, _18
 7490              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7491              		.loc 1 854 66 discriminator 2 view .LVU2564
 7492 2e4c C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.388, vect__38.383, vect__43.387
 7493              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7494              		.loc 1 854 29 discriminator 2 view .LVU2565
 7495 2e50 C5FE7F2C 		vmovdqu	YMMWORD PTR [rdx+rax], ymm5	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B], 
 7495      02
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7496              		.loc 1 853 43 is_stmt 1 discriminator 2 view .LVU2566
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7497              		.loc 1 853 11 discriminator 2 view .LVU2567
 854:sieve_extend.c ****     }
 7498              		.loc 1 854 9 discriminator 2 view .LVU2568
 7499              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7500              		.loc 1 854 56 is_stmt 0 discriminator 2 view .LVU2569
 7501 2e55 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r9+rax]	# tmp1350, MEM[base: vectp.381_307, index: ivtmp.451_731, off
 7501      4C0120
 7502              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7503              		.loc 1 854 94 discriminator 2 view .LVU2570
 7504 2e5c C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 32[r8+rax]	# tmp1351, MEM[base: vectp.385_314, index: ivtmp.451_731, off
 7504      7C0020
 7505              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7506              		.loc 1 854 56 discriminator 2 view .LVU2571
 7507 2e63 C44135D3 		vpsrlq	ymm11, ymm9, xmm10	# vect__38.383, tmp1350, _12
 7507      DA
 7508              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7509              		.loc 1 854 94 discriminator 2 view .LVU2572
GAS LISTING /tmp/ccgH0yRS.s 			page 211


 7510 2e68 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.387, tmp1351, _18
 7511              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7512              		.loc 1 854 66 discriminator 2 view .LVU2573
 7513 2e6c C5A5EBE3 		vpor	ymm4, ymm11, ymm3	# vect__46.388, vect__38.383, vect__43.387
 7514              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7515              		.loc 1 854 29 discriminator 2 view .LVU2574
 7516 2e70 C5FE7F64 		vmovdqu	YMMWORD PTR 32[rdx+rax], ymm4	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B]
 7516      0220
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7517              		.loc 1 853 43 is_stmt 1 discriminator 2 view .LVU2575
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7518              		.loc 1 853 11 discriminator 2 view .LVU2576
 854:sieve_extend.c ****     }
 7519              		.loc 1 854 9 discriminator 2 view .LVU2577
 7520              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7521              		.loc 1 854 56 is_stmt 0 discriminator 2 view .LVU2578
 7522 2e76 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 64[r9+rax]	# tmp1352, MEM[base: vectp.381_307, index: ivtmp.451_731, off
 7522      740140
 7523              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7524              		.loc 1 854 94 discriminator 2 view .LVU2579
 7525 2e7d C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 64[r8+rax]	# tmp1353, MEM[base: vectp.385_314, index: ivtmp.451_731, of
 7525      6C0040
 7526              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7527              		.loc 1 854 56 discriminator 2 view .LVU2580
 7528 2e84 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.383, tmp1352, _12
 7528      E2
 7529              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7530              		.loc 1 854 94 discriminator 2 view .LVU2581
 7531 2e89 C515F3F2 		vpsllq	ymm14, ymm13, xmm2	# vect__43.387, tmp1353, _18
 7532              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7533              		.loc 1 854 66 discriminator 2 view .LVU2582
 7534 2e8d C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__46.388, vect__38.383, vect__43.387
 7534      FE
 7535              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7536              		.loc 1 854 29 discriminator 2 view .LVU2583
 7537 2e92 C57E7F7C 		vmovdqu	YMMWORD PTR 64[rdx+rax], ymm15	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B
 7537      0240
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7538              		.loc 1 853 43 is_stmt 1 discriminator 2 view .LVU2584
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7539              		.loc 1 853 11 discriminator 2 view .LVU2585
 854:sieve_extend.c ****     }
 7540              		.loc 1 854 9 discriminator 2 view .LVU2586
 7541              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7542              		.loc 1 854 56 is_stmt 0 discriminator 2 view .LVU2587
 7543 2e98 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r9+rax]	# tmp1354, MEM[base: vectp.381_307, index: ivtmp.451_731, off
 7543      4C0160
 7544              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
GAS LISTING /tmp/ccgH0yRS.s 			page 212


 854:sieve_extend.c ****     }
 7545              		.loc 1 854 94 discriminator 2 view .LVU2588
 7546 2e9f C4C17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[r8+rax]	# tmp1355, MEM[base: vectp.385_314, index: ivtmp.451_731, off
 7546      440060
 7547              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7548              		.loc 1 854 56 discriminator 2 view .LVU2589
 7549 2ea6 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.383, tmp1354, _12
 7549      C2
 7550              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7551              		.loc 1 854 94 discriminator 2 view .LVU2590
 7552 2eab C5FDF3EA 		vpsllq	ymm5, ymm0, xmm2	# vect__43.387, tmp1355, _18
 7553              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7554              		.loc 1 854 66 discriminator 2 view .LVU2591
 7555 2eaf C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.388, vect__38.383, vect__43.387
 7556              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7557              		.loc 1 854 29 discriminator 2 view .LVU2592
 7558 2eb3 C57E7F4C 		vmovdqu	YMMWORD PTR 96[rdx+rax], ymm9	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B]
 7558      0260
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7559              		.loc 1 853 43 is_stmt 1 discriminator 2 view .LVU2593
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7560              		.loc 1 853 11 discriminator 2 view .LVU2594
 854:sieve_extend.c ****     }
 7561              		.loc 1 854 9 discriminator 2 view .LVU2595
 7562              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7563              		.loc 1 854 56 is_stmt 0 discriminator 2 view .LVU2596
 7564 2eb9 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 128[r9+rax]	# tmp1356, MEM[base: vectp.381_307, index: ivtmp.451_731, o
 7564      9C018000 
 7564      0000
 7565              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7566              		.loc 1 854 94 discriminator 2 view .LVU2597
 7567 2ec3 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 128[r8+rax]	# tmp1357, MEM[base: vectp.385_314, index: ivtmp.451_731, of
 7567      BC008000 
 7567      0000
 7568              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7569              		.loc 1 854 56 discriminator 2 view .LVU2598
 7570 2ecd C4C125D3 		vpsrlq	ymm4, ymm11, xmm10	# vect__38.383, tmp1356, _12
 7570      E2
 7571              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7572              		.loc 1 854 94 discriminator 2 view .LVU2599
 7573 2ed2 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.387, tmp1357, _18
 7574              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7575              		.loc 1 854 66 discriminator 2 view .LVU2600
 7576 2ed6 C5DDEBF3 		vpor	ymm6, ymm4, ymm3	# vect__46.388, vect__38.383, vect__43.387
 7577              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7578              		.loc 1 854 29 discriminator 2 view .LVU2601
 7579 2eda C5FE7FB4 		vmovdqu	YMMWORD PTR 128[rdx+rax], ymm6	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B
GAS LISTING /tmp/ccgH0yRS.s 			page 213


 7579      02800000 
 7579      00
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7580              		.loc 1 853 43 is_stmt 1 discriminator 2 view .LVU2602
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7581              		.loc 1 853 11 discriminator 2 view .LVU2603
 854:sieve_extend.c ****     }
 7582              		.loc 1 854 9 discriminator 2 view .LVU2604
 7583              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7584              		.loc 1 854 56 is_stmt 0 discriminator 2 view .LVU2605
 7585 2ee3 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rax]	# tmp1358, MEM[base: vectp.381_307, index: ivtmp.451_731, o
 7585      A401A000 
 7585      0000
 7586              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7587              		.loc 1 854 94 discriminator 2 view .LVU2606
 7588 2eed C4417E6F 		vmovdqu	ymm14, YMMWORD PTR 160[r8+rax]	# tmp1359, MEM[base: vectp.385_314, index: ivtmp.451_731, o
 7588      B400A000 
 7588      0000
 7589              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7590              		.loc 1 854 56 discriminator 2 view .LVU2607
 7591 2ef7 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.383, tmp1358, _12
 7591      EA
 7592              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7593              		.loc 1 854 94 discriminator 2 view .LVU2608
 7594 2efc C50DF3FA 		vpsllq	ymm15, ymm14, xmm2	# vect__43.387, tmp1359, _18
 7595              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7596              		.loc 1 854 66 discriminator 2 view .LVU2609
 7597 2f00 C4C115EB 		vpor	ymm1, ymm13, ymm15	# vect__46.388, vect__38.383, vect__43.387
 7597      CF
 7598              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7599              		.loc 1 854 29 discriminator 2 view .LVU2610
 7600 2f05 C5FE7F8C 		vmovdqu	YMMWORD PTR 160[rdx+rax], ymm1	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0B
 7600      02A00000 
 7600      00
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7601              		.loc 1 853 43 is_stmt 1 discriminator 2 view .LVU2611
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7602              		.loc 1 853 11 discriminator 2 view .LVU2612
 854:sieve_extend.c ****     }
 7603              		.loc 1 854 9 discriminator 2 view .LVU2613
 7604              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7605              		.loc 1 854 56 is_stmt 0 discriminator 2 view .LVU2614
 7606 2f0e C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r9+rax]	# tmp1360, MEM[base: vectp.381_307, index: ivtmp.451_731, of
 7606      8401C000 
 7606      0000
 7607              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7608              		.loc 1 854 94 discriminator 2 view .LVU2615
 7609 2f18 C4C17E6F 		vmovdqu	ymm5, YMMWORD PTR 192[r8+rax]	# tmp1361, MEM[base: vectp.385_314, index: ivtmp.451_731, of
 7609      AC00C000 
GAS LISTING /tmp/ccgH0yRS.s 			page 214


 7609      0000
 7610              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7611              		.loc 1 854 56 discriminator 2 view .LVU2616
 7612 2f22 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.383, tmp1360, _12
 7612      C2
 7613              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7614              		.loc 1 854 94 discriminator 2 view .LVU2617
 7615 2f27 C555F3CA 		vpsllq	ymm9, ymm5, xmm2	# vect__43.387, tmp1361, _18
 7616              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7617              		.loc 1 854 66 discriminator 2 view .LVU2618
 7618 2f2b C4417DEB 		vpor	ymm11, ymm0, ymm9	# vect__46.388, vect__38.383, vect__43.387
 7618      D9
 7619              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7620              		.loc 1 854 29 discriminator 2 view .LVU2619
 7621 2f30 C57E7F9C 		vmovdqu	YMMWORD PTR 192[rdx+rax], ymm11	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0
 7621      02C00000 
 7621      00
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7622              		.loc 1 853 43 is_stmt 1 discriminator 2 view .LVU2620
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7623              		.loc 1 853 11 discriminator 2 view .LVU2621
 854:sieve_extend.c ****     }
 7624              		.loc 1 854 9 discriminator 2 view .LVU2622
 7625              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7626              		.loc 1 854 56 is_stmt 0 discriminator 2 view .LVU2623
 7627 2f39 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 224[r9+rax]	# tmp1362, MEM[base: vectp.381_307, index: ivtmp.451_731, of
 7627      A401E000 
 7627      0000
 7628              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7629              		.loc 1 854 94 discriminator 2 view .LVU2624
 7630 2f43 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r8+rax]	# tmp1363, MEM[base: vectp.385_314, index: ivtmp.451_731, of
 7630      BC00E000 
 7630      0000
 7631              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7632              		.loc 1 854 56 discriminator 2 view .LVU2625
 7633 2f4d C4C15DD3 		vpsrlq	ymm6, ymm4, xmm10	# vect__38.383, tmp1362, _12
 7633      F2
 7634              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7635              		.loc 1 854 94 discriminator 2 view .LVU2626
 7636 2f52 C5C5F3DA 		vpsllq	ymm3, ymm7, xmm2	# vect__43.387, tmp1363, _18
 7637              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7638              		.loc 1 854 66 discriminator 2 view .LVU2627
 7639 2f56 C54DEBE3 		vpor	ymm12, ymm6, ymm3	# vect__46.388, vect__38.383, vect__43.387
 7640              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7641              		.loc 1 854 29 discriminator 2 view .LVU2628
 7642 2f5a C57E7FA4 		vmovdqu	YMMWORD PTR 224[rdx+rax], ymm12	# MEM[base: vectp.390_323, index: ivtmp.451_731, offset: 0
 7642      02E00000 
GAS LISTING /tmp/ccgH0yRS.s 			page 215


 7642      00
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7643              		.loc 1 853 43 is_stmt 1 discriminator 2 view .LVU2629
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7644              		.loc 1 853 11 discriminator 2 view .LVU2630
 7645 2f63 48050001 		add	rax, 256	# ivtmp.451,
 7645      0000
 7646 2f69 4C39D8   		cmp	rax, r11	# ivtmp.451, _733
 7647 2f6c 0F85C5FE 		jne	.L594	#,
 7647      FFFF
 7648              	.L823:
 7649 2f72 4989FE   		mov	r14, rdi	# niters_vector_mult_vf.377, niters.375
 7650 2f75 4983E6FC 		and	r14, -4	# niters_vector_mult_vf.377,
 7651 2f79 4C01F1   		add	rcx, r14	# tmp.378, niters_vector_mult_vf.377
 7652 2f7c 4C01F6   		add	rsi, r14	# tmp.379, niters_vector_mult_vf.377
 7653 2f7f 4C39F7   		cmp	rdi, r14	# niters.375, niters_vector_mult_vf.377
 7654 2f82 7461     		je	.L597	#,
 7655              	.LVL321:
 854:sieve_extend.c ****     }
 7656              		.loc 1 854 9 view .LVU2631
 7657              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7658              		.loc 1 853 5 is_stmt 0 view .LVU2632
 7659 2f84 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 7659      40
 7660              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7661              		.loc 1 853 52 view .LVU2633
 7662 2f89 488D5601 		lea	rdx, 1[rsi]	# copy_word,
 7663              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7664              		.loc 1 854 94 view .LVU2634
 7665 2f8d C46281F7 		shlx	r9, QWORD PTR 8[rbx+rcx*8], r15	# tmp734, *_133, shift_flipped
 7665      4CCB08
 7666              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7667              		.loc 1 854 56 view .LVU2635
 7668 2f94 C46293F7 		shrx	r8, QWORD PTR [rbx+rcx*8], r13	# tmp736, *_82, shift
 7668      04CB
 7669              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7670              		.loc 1 854 66 view .LVU2636
 7671 2f9a 4D09C1   		or	r9, r8	# tmp738, tmp736
 7672              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7673              		.loc 1 854 77 view .LVU2637
 7674 2f9d 488D7901 		lea	rdi, 1[rcx]	# _301,
 7675              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7676              		.loc 1 854 66 view .LVU2638
 7677 2fa1 4C890CF3 		mov	QWORD PTR [rbx+rsi*8], r9	# *_55, tmp738
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7678              		.loc 1 853 43 is_stmt 1 view .LVU2639
 7679              	.LVL322:
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7680              		.loc 1 853 11 view .LVU2640
 7681              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
GAS LISTING /tmp/ccgH0yRS.s 			page 216


 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7682              		.loc 1 853 5 is_stmt 0 view .LVU2641
 7683 2fa5 4939D3   		cmp	r11, rdx	# aligned_copy_word, copy_word
 7684 2fa8 723B     		jb	.L597	#,
 854:sieve_extend.c ****     }
 7685              		.loc 1 854 9 is_stmt 1 view .LVU2642
 7686              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7687              		.loc 1 853 52 is_stmt 0 view .LVU2643
 7688 2faa 4883C602 		add	rsi, 2	# copy_word,
 7689              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7690              		.loc 1 854 94 view .LVU2644
 7691 2fae C46281F7 		shlx	r12, QWORD PTR 8[rbx+rdi*8], r15	# tmp739, *_555, shift_flipped
 7691      64FB08
 7692              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7693              		.loc 1 854 56 view .LVU2645
 7694 2fb5 488B04FB 		mov	rax, QWORD PTR [rbx+rdi*8]	# *_122, *_122
 7695              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7696              		.loc 1 854 77 view .LVU2646
 7697 2fb9 4883C102 		add	rcx, 2	# _78,
 7698              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7699              		.loc 1 854 56 view .LVU2647
 7700 2fbd C46293F7 		shrx	r14, rax, r13	# tmp741, *_122, shift
 7700      F0
 7701              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7702              		.loc 1 854 66 view .LVU2648
 7703 2fc2 4D09F4   		or	r12, r14	# tmp743, tmp741
 7704 2fc5 4C8924D3 		mov	QWORD PTR [rbx+rdx*8], r12	# *_559, tmp743
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7705              		.loc 1 853 43 is_stmt 1 view .LVU2649
 7706              	.LVL323:
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7707              		.loc 1 853 11 view .LVU2650
 7708              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7709              		.loc 1 853 5 is_stmt 0 view .LVU2651
 7710 2fc9 4939F3   		cmp	r11, rsi	# aligned_copy_word, copy_word
 7711 2fcc 7217     		jb	.L597	#,
 854:sieve_extend.c ****     }
 7712              		.loc 1 854 9 is_stmt 1 view .LVU2652
 7713              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7714              		.loc 1 854 94 is_stmt 0 view .LVU2653
 7715 2fce C46281F7 		shlx	r15, QWORD PTR 8[rbx+rcx*8], r15	# tmp744, *_293, shift_flipped
 7715      7CCB08
 7716              	.LVL324:
 7717              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7718              		.loc 1 854 56 view .LVU2654
 7719 2fd5 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_288, *_288
 7720              	.LVL325:
 854:sieve_extend.c ****     }
GAS LISTING /tmp/ccgH0yRS.s 			page 217


 7721              		.loc 1 854 56 view .LVU2655
 7722 2fd9 C46293F7 		shrx	r13, rcx, r13	# tmp746, *_288, shift
 7722      E9
 7723              	.LVL326:
 7724              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 7725              		.loc 1 854 66 view .LVU2656
 7726 2fde 4D09EF   		or	r15, r13	# tmp748, tmp746
 7727 2fe1 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_297, tmp748
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7728              		.loc 1 853 43 is_stmt 1 view .LVU2657
 7729              	.LVL327:
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7730              		.loc 1 853 11 view .LVU2658
 7731              	.L597:
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 7732              		.loc 1 853 11 is_stmt 0 view .LVU2659
 7733 2fe5 4C89D0   		mov	rax, r10	# ivtmp.435, ivtmp.435
 7734              	.L590:
 857:sieve_extend.c **** 
 7735              		.loc 1 857 5 is_stmt 1 view .LVU2660
 7736              	# sieve_extend.c:857:     if (copy_word >= destination_stop_word) return;
 857:sieve_extend.c **** 
 7737              		.loc 1 857 8 is_stmt 0 view .LVU2661
 7738 2fe8 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 7738      50
 7739 2fed 4939C0   		cmp	r8, rax	# destination_stop_word, ivtmp.435
 7740 2ff0 0F86B304 		jbe	.L845	#,
 7740      0000
 859:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7741              		.loc 1 859 5 is_stmt 1 view .LVU2662
 7742              	# sieve_extend.c:859:     source_word = copy_word - size; // recalibrate
 859:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7743              		.loc 1 859 17 is_stmt 0 view .LVU2663
 7744 2ff6 488B7424 		mov	rsi, QWORD PTR 24[rsp]	# size, %sfp
 7744      18
 7745 2ffb 4989C5   		mov	r13, rax	# source_word, ivtmp.435
 7746              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7747              		.loc 1 863 21 view .LVU2664
 7748 2ffe 488D0C06 		lea	rcx, [rsi+rax]	# ivtmp.435,
 7749              	# sieve_extend.c:859:     source_word = copy_word - size; // recalibrate
 859:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7750              		.loc 1 859 17 view .LVU2665
 7751 3002 4929F5   		sub	r13, rsi	# source_word, size
 7752              	.LVL328:
 860:sieve_extend.c **** 
 7753              		.loc 1 860 5 is_stmt 1 view .LVU2666
 7754              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7755              		.loc 1 863 5 is_stmt 0 view .LVU2667
 7756 3005 4939C8   		cmp	r8, rcx	# destination_stop_word, ivtmp.435
 7757              	# sieve_extend.c:860:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 860:sieve_extend.c **** 
 7758              		.loc 1 860 18 view .LVU2668
 7759 3008 4C8D34F5 		lea	r14, 0[0+rsi*8]	# memsize,
 7759      00000000 
GAS LISTING /tmp/ccgH0yRS.s 			page 218


 7760              	.LVL329:
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7761              		.loc 1 863 5 is_stmt 1 view .LVU2669
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7762              		.loc 1 863 11 view .LVU2670
 7763              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7764              		.loc 1 863 5 is_stmt 0 view .LVU2671
 7765 3010 0F825F01 		jb	.L599	#,
 7765      0000
 7766 3016 4C8D24C3 		lea	r12, [rbx+rax*8]	# tmp761,
 7767 301a 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp762,
 7767      00000000 
 7768              	# sieve_extend.c:864:         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 864:sieve_extend.c **** 
 7769              		.loc 1 864 38 view .LVU2672
 7770 3022 4E8D3CEB 		lea	r15, [rbx+r13*8]	# _48,
 7771 3026 4929C4   		sub	r12, rax	# _711, tmp762
 7772 3029 4C896C24 		mov	QWORD PTR 72[rsp], r13	# %sfp, source_word
 7772      48
 7773 302e 4989F5   		mov	r13, rsi	# size, size
 7774              	.LVL330:
 864:sieve_extend.c **** 
 7775              		.loc 1 864 38 view .LVU2673
 7776 3031 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitarray
 7776      40
 7777              	.LVL331:
 864:sieve_extend.c **** 
 7778              		.loc 1 864 38 view .LVU2674
 7779 3036 4C89C3   		mov	rbx, r8	# destination_stop_word, destination_stop_word
 7780              	.LVL332:
 864:sieve_extend.c **** 
 7781              		.loc 1 864 38 view .LVU2675
 7782 3039 C5F877   		vzeroupper
 7783              	.L600:
 864:sieve_extend.c **** 
 7784              		.loc 1 864 9 is_stmt 1 discriminator 2 view .LVU2676
 7785              	.LVL333:
 7786              	.LBB391:
 7787              	.LBI391:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7788              		.loc 2 31 1 discriminator 2 view .LVU2677
 7789              	.LBB392:
 7790              		.loc 2 34 3 discriminator 2 view .LVU2678
 7791              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7792              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2679
 7793 303c 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp764,
 7794 3040 4C89F2   		mov	rdx, r14	#, memsize
 7795 3043 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.435
 7795      58
 7796 3048 4C89FE   		mov	rsi, r15	#, _48
 7797 304b E8000000 		call	memcpy@PLT	#
 7797      00
 7798              	.LVL334:
 7799              		.loc 2 34 10 discriminator 2 view .LVU2680
 7800              	.LBE392:
 7801              	.LBE391:
GAS LISTING /tmp/ccgH0yRS.s 			page 219


 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7802              		.loc 1 863 54 is_stmt 1 discriminator 2 view .LVU2681
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7803              		.loc 1 863 11 discriminator 2 view .LVU2682
 7804 3050 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7804      58
 7805 3055 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.435,
 7806              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7807              		.loc 1 863 5 is_stmt 0 discriminator 2 view .LVU2683
 7808 3059 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.435
 7809 305c 0F82FE00 		jb	.L835	#,
 7809      0000
 864:sieve_extend.c **** 
 7810              		.loc 1 864 9 is_stmt 1 view .LVU2684
 7811              	.LVL335:
 7812              	.LBB400:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7813              		.loc 2 31 1 view .LVU2685
 7814              	.LBB393:
 7815              		.loc 2 34 3 view .LVU2686
 7816              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7817              		.loc 2 34 10 is_stmt 0 view .LVU2687
 7818 3062 498D3CCC 		lea	rdi, [r12+rcx*8]	# tmp1070,
 7819 3066 4C89F2   		mov	rdx, r14	#, memsize
 7820 3069 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, ivtmp.435
 7820      58
 7821              	.LVL336:
 7822              		.loc 2 34 10 view .LVU2688
 7823 306e 4C89FE   		mov	rsi, r15	#, _48
 7824 3071 E8000000 		call	memcpy@PLT	#
 7824      00
 7825              	.LVL337:
 7826              		.loc 2 34 10 view .LVU2689
 7827              	.LBE393:
 7828              	.LBE400:
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7829              		.loc 1 863 54 is_stmt 1 view .LVU2690
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7830              		.loc 1 863 11 view .LVU2691
 7831 3076 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7831      58
 7832 307b 4E8D0C28 		lea	r9, [rax+r13]	# ivtmp.435,
 7833              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7834              		.loc 1 863 5 is_stmt 0 view .LVU2692
 7835 307f 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.435
 7836 3082 0F82D800 		jb	.L835	#,
 7836      0000
 864:sieve_extend.c **** 
 7837              		.loc 1 864 9 is_stmt 1 view .LVU2693
 7838              	.LVL338:
 7839              	.LBB401:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7840              		.loc 2 31 1 view .LVU2694
 7841              	.LBB394:
 7842              		.loc 2 34 3 view .LVU2695
GAS LISTING /tmp/ccgH0yRS.s 			page 220


 7843              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7844              		.loc 2 34 10 is_stmt 0 view .LVU2696
 7845 3088 4B8D3CCC 		lea	rdi, [r12+r9*8]	# tmp1073,
 7846 308c 4C89F2   		mov	rdx, r14	#, memsize
 7847 308f 4C894C24 		mov	QWORD PTR 88[rsp], r9	# %sfp, ivtmp.435
 7847      58
 7848 3094 4C89FE   		mov	rsi, r15	#, _48
 7849 3097 E8000000 		call	memcpy@PLT	#
 7849      00
 7850              	.LVL339:
 7851              		.loc 2 34 10 view .LVU2697
 7852              	.LBE394:
 7853              	.LBE401:
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7854              		.loc 1 863 54 is_stmt 1 view .LVU2698
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7855              		.loc 1 863 11 view .LVU2699
 7856 309c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7856      58
 7857 30a1 4E8D1C28 		lea	r11, [rax+r13]	# ivtmp.435,
 7858              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7859              		.loc 1 863 5 is_stmt 0 view .LVU2700
 7860 30a5 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.435
 7861 30a8 0F82B200 		jb	.L835	#,
 7861      0000
 864:sieve_extend.c **** 
 7862              		.loc 1 864 9 is_stmt 1 view .LVU2701
 7863              	.LVL340:
 7864              	.LBB402:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7865              		.loc 2 31 1 view .LVU2702
 7866              	.LBB395:
 7867              		.loc 2 34 3 view .LVU2703
 7868              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7869              		.loc 2 34 10 is_stmt 0 view .LVU2704
 7870 30ae 4C89F2   		mov	rdx, r14	#, memsize
 7871 30b1 4B8D3CDC 		lea	rdi, [r12+r11*8]	# tmp1076,
 7872 30b5 4C895C24 		mov	QWORD PTR 88[rsp], r11	# %sfp, ivtmp.435
 7872      58
 7873 30ba 4C89FE   		mov	rsi, r15	#, _48
 7874 30bd E8000000 		call	memcpy@PLT	#
 7874      00
 7875              	.LVL341:
 7876              		.loc 2 34 10 view .LVU2705
 7877              	.LBE395:
 7878              	.LBE402:
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7879              		.loc 1 863 54 is_stmt 1 view .LVU2706
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7880              		.loc 1 863 11 view .LVU2707
 7881 30c2 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7881      58
 7882 30c7 4A8D1428 		lea	rdx, [rax+r13]	# ivtmp.435,
 7883              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7884              		.loc 1 863 5 is_stmt 0 view .LVU2708
GAS LISTING /tmp/ccgH0yRS.s 			page 221


 7885 30cb 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.435
 7886 30ce 0F828C00 		jb	.L835	#,
 7886      0000
 864:sieve_extend.c **** 
 7887              		.loc 1 864 9 is_stmt 1 view .LVU2709
 7888              	.LVL342:
 7889              	.LBB403:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7890              		.loc 2 31 1 view .LVU2710
 7891              	.LBB396:
 7892              		.loc 2 34 3 view .LVU2711
 7893              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7894              		.loc 2 34 10 is_stmt 0 view .LVU2712
 7895 30d4 498D3CD4 		lea	rdi, [r12+rdx*8]	# tmp1079,
 7896 30d8 4C89FE   		mov	rsi, r15	#, _48
 7897 30db 48895424 		mov	QWORD PTR 88[rsp], rdx	# %sfp, ivtmp.435
 7897      58
 7898 30e0 4C89F2   		mov	rdx, r14	#, memsize
 7899 30e3 E8000000 		call	memcpy@PLT	#
 7899      00
 7900              	.LVL343:
 7901              		.loc 2 34 10 view .LVU2713
 7902              	.LBE396:
 7903              	.LBE403:
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7904              		.loc 1 863 54 is_stmt 1 view .LVU2714
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7905              		.loc 1 863 11 view .LVU2715
 7906 30e8 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7906      58
 7907 30ed 4E8D1428 		lea	r10, [rax+r13]	# ivtmp.435,
 7908              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7909              		.loc 1 863 5 is_stmt 0 view .LVU2716
 7910 30f1 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.435
 7911 30f4 726A     		jb	.L835	#,
 864:sieve_extend.c **** 
 7912              		.loc 1 864 9 is_stmt 1 view .LVU2717
 7913              	.LVL344:
 7914              	.LBB404:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7915              		.loc 2 31 1 view .LVU2718
 7916              	.LBB397:
 7917              		.loc 2 34 3 view .LVU2719
 7918              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7919              		.loc 2 34 10 is_stmt 0 view .LVU2720
 7920 30f6 4B8D3CD4 		lea	rdi, [r12+r10*8]	# tmp1082,
 7921 30fa 4C89F2   		mov	rdx, r14	#, memsize
 7922 30fd 4C895424 		mov	QWORD PTR 88[rsp], r10	# %sfp, ivtmp.435
 7922      58
 7923 3102 4C89FE   		mov	rsi, r15	#, _48
 7924 3105 E8000000 		call	memcpy@PLT	#
 7924      00
 7925              	.LVL345:
 7926              		.loc 2 34 10 view .LVU2721
 7927              	.LBE397:
 7928              	.LBE404:
GAS LISTING /tmp/ccgH0yRS.s 			page 222


 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7929              		.loc 1 863 54 is_stmt 1 view .LVU2722
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7930              		.loc 1 863 11 view .LVU2723
 7931 310a 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7931      58
 7932 310f 4E8D0428 		lea	r8, [rax+r13]	# ivtmp.435,
 7933              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7934              		.loc 1 863 5 is_stmt 0 view .LVU2724
 7935 3113 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.435
 7936 3116 7248     		jb	.L835	#,
 864:sieve_extend.c **** 
 7937              		.loc 1 864 9 is_stmt 1 view .LVU2725
 7938              	.LVL346:
 7939              	.LBB405:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7940              		.loc 2 31 1 view .LVU2726
 7941              	.LBB398:
 7942              		.loc 2 34 3 view .LVU2727
 7943              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7944              		.loc 2 34 10 is_stmt 0 view .LVU2728
 7945 3118 4C89FE   		mov	rsi, r15	#, _48
 7946 311b 4B8D3CC4 		lea	rdi, [r12+r8*8]	# tmp1085,
 7947 311f 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, ivtmp.435
 7947      58
 7948 3124 4C89F2   		mov	rdx, r14	#, memsize
 7949 3127 E8000000 		call	memcpy@PLT	#
 7949      00
 7950              	.LVL347:
 7951              		.loc 2 34 10 view .LVU2729
 7952              	.LBE398:
 7953              	.LBE405:
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7954              		.loc 1 863 54 is_stmt 1 view .LVU2730
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7955              		.loc 1 863 11 view .LVU2731
 7956 312c 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7956      58
 7957 3131 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.435,
 7958              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7959              		.loc 1 863 5 is_stmt 0 view .LVU2732
 7960 3135 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.435
 7961 3138 7226     		jb	.L835	#,
 864:sieve_extend.c **** 
 7962              		.loc 1 864 9 is_stmt 1 view .LVU2733
 7963              	.LVL348:
 7964              	.LBB406:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7965              		.loc 2 31 1 view .LVU2734
 7966              	.LBB399:
 7967              		.loc 2 34 3 view .LVU2735
 7968              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7969              		.loc 2 34 10 is_stmt 0 view .LVU2736
 7970 313a 498D3CF4 		lea	rdi, [r12+rsi*8]	# tmp1088,
 7971 313e 4C89F2   		mov	rdx, r14	#, memsize
GAS LISTING /tmp/ccgH0yRS.s 			page 223


 7972 3141 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, ivtmp.435
 7972      58
 7973 3146 4C89FE   		mov	rsi, r15	#, _48
 7974 3149 E8000000 		call	memcpy@PLT	#
 7974      00
 7975              	.LVL349:
 7976              		.loc 2 34 10 view .LVU2737
 7977              	.LBE399:
 7978              	.LBE406:
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7979              		.loc 1 863 54 is_stmt 1 view .LVU2738
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7980              		.loc 1 863 11 view .LVU2739
 7981 314e 488B4424 		mov	rax, QWORD PTR 88[rsp]	# ivtmp.435, %sfp
 7981      58
 7982              	.LVL350:
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7983              		.loc 1 863 11 is_stmt 0 view .LVU2740
 7984 3153 4A8D0C28 		lea	rcx, [rax+r13]	# ivtmp.435,
 7985              	.LVL351:
 7986              	# sieve_extend.c:863:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7987              		.loc 1 863 5 view .LVU2741
 7988 3157 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.435
 7989 315a 0F83DCFE 		jnb	.L600	#,
 7989      FFFF
 7990              	.LVL352:
 7991              		.p2align 4
 7992              		.p2align 3
 7993              	.L835:
 863:sieve_extend.c ****         memcpy(&bitarray[copy_word], &bitarray[source_word],memsize );
 7994              		.loc 1 863 5 view .LVU2742
 7995 3160 4C8B6C24 		mov	r13, QWORD PTR 72[rsp]	# source_word, %sfp
 7995      48
 7996              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 7997              		.loc 1 867 5 view .LVU2743
 7998 3165 48394424 		cmp	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.435
 7998      50
 7999 316a 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitarray, %sfp
 7999      40
 8000              	.LVL353:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8001              		.loc 1 867 11 is_stmt 1 view .LVU2744
 8002              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8003              		.loc 1 867 5 is_stmt 0 view .LVU2745
 8004 316f 0F826E02 		jb	.L846	#,
 8004      0000
 8005              	.LVL354:
 8006              	.L599:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8007              		.loc 1 867 5 view .LVU2746
 8008 3175 4C8D3CC5 		lea	r15, 0[0+rax*8]	# _195,
 8008      00000000 
 8009 317d 4E8D24ED 		lea	r12, 0[0+r13*8]	# _187,
 8009      00000000 
GAS LISTING /tmp/ccgH0yRS.s 			page 224


 8010 3185 498D7F20 		lea	rdi, 32[r15]	# tmp771,
 8011 3189 4E8D34ED 		lea	r14, 32[0+r13*8]	# _197,
 8011      20000000 
 8012              	.LVL355:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8013              		.loc 1 867 5 view .LVU2747
 8014 3191 4939FC   		cmp	r12, rdi	# _187, tmp771
 8015 3194 410F9DC1 		setge	r9b	#, tmp773
 8016 3198 4D39F7   		cmp	r15, r14	# _195, _197
 8017 319b 410F9DC3 		setge	r11b	#, tmp775
 8018 319f 4508D9   		or	r9b, r11b	# tmp773, tmp775
 8019 31a2 0F845002 		je	.L602	#,
 8019      0000
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8020              		.loc 1 867 5 view .LVU2748
 8021 31a8 488B5424 		mov	rdx, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 8021      50
 8022 31ad 4989D2   		mov	r10, rdx	# tmp777, destination_stop_word
 8023 31b0 4929C2   		sub	r10, rax	# tmp777, ivtmp.435
 8024 31b3 4983FA05 		cmp	r10, 5	# tmp777,
 8025 31b7 0F863B02 		jbe	.L602	#,
 8025      0000
 8026 31bd 4901DC   		add	r12, rbx	# vectp.360, bitarray
 8027 31c0 4C8D4201 		lea	r8, 1[rdx]	# _75,
 8028 31c4 49C1EC03 		shr	r12, 3	# tmp781,
 8029 31c8 49F7DC   		neg	r12	# tmp782
 8030 31cb 4183E403 		and	r12d, 3	# prolog_loop_niters.361,
 8031 31cf 0F842B07 		je	.L611	#,
 8031      0000
 868:sieve_extend.c **** 
 8032              		.loc 1 868 9 is_stmt 1 view .LVU2749
 8033              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8034              		.loc 1 868 39 is_stmt 0 view .LVU2750
 8035 31d5 4A8B0CEB 		mov	rcx, QWORD PTR [rbx+r13*8]	# _114, *_111
 8036 31d9 4983FC01 		cmp	r12, 1	# prolog_loop_niters.361,
 8037              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8038              		.loc 1 867 57 view .LVU2751
 8039 31dd 488D7001 		lea	rsi, 1[rax]	# copy_word,
 8040              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8041              		.loc 1 867 71 view .LVU2752
 8042 31e1 4D8D7501 		lea	r14, 1[r13]	# source_word,
 8043              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8044              		.loc 1 868 29 view .LVU2753
 8045 31e5 4A890C3B 		mov	QWORD PTR [rbx+r15], rcx	# *_113, _114
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8046              		.loc 1 867 48 is_stmt 1 view .LVU2754
 8047              	.LVL356:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8048              		.loc 1 867 11 view .LVU2755
 8049 31e9 7426     		je	.L603	#,
 868:sieve_extend.c **** 
 8050              		.loc 1 868 9 view .LVU2756
 8051              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccgH0yRS.s 			page 225


 868:sieve_extend.c **** 
 8052              		.loc 1 868 39 is_stmt 0 view .LVU2757
 8053 31eb 4E8B3CF3 		mov	r15, QWORD PTR [rbx+r14*8]	# _38, *_35
 8054 31ef 4983FC03 		cmp	r12, 3	# prolog_loop_niters.361,
 8055              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8056              		.loc 1 867 71 view .LVU2758
 8057 31f3 4D8D7502 		lea	r14, 2[r13]	# source_word,
 8058              	.LVL357:
 8059              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8060              		.loc 1 868 29 view .LVU2759
 8061 31f7 4C893CF3 		mov	QWORD PTR [rbx+rsi*8], r15	# *_37, _38
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8062              		.loc 1 867 48 is_stmt 1 view .LVU2760
 8063              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8064              		.loc 1 867 57 is_stmt 0 view .LVU2761
 8065 31fb 488D7002 		lea	rsi, 2[rax]	# copy_word,
 8066              	.LVL358:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8067              		.loc 1 867 11 is_stmt 1 view .LVU2762
 8068 31ff 7510     		jne	.L603	#,
 868:sieve_extend.c **** 
 8069              		.loc 1 868 9 view .LVU2763
 8070              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8071              		.loc 1 868 39 is_stmt 0 view .LVU2764
 8072 3201 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# _150, *_153
 8073              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8074              		.loc 1 867 71 view .LVU2765
 8075 3205 4D8D7503 		lea	r14, 3[r13]	# source_word,
 8076              	.LVL359:
 8077              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8078              		.loc 1 868 29 view .LVU2766
 8079 3209 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_151, _150
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8080              		.loc 1 867 48 is_stmt 1 view .LVU2767
 8081              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8082              		.loc 1 867 57 is_stmt 0 view .LVU2768
 8083 320d 488D7003 		lea	rsi, 3[rax]	# copy_word,
 8084              	.LVL360:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8085              		.loc 1 867 11 is_stmt 1 view .LVU2769
 8086              	.L603:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8087              		.loc 1 867 11 is_stmt 0 view .LVU2770
 8088 3211 4D29E0   		sub	r8, r12	# tmp783, prolog_loop_niters.361
 8089 3214 4D01E5   		add	r13, r12	# tmp784, prolog_loop_niters.361
 8090 3217 4929C0   		sub	r8, rax	# niters.362, ivtmp.435
 8091 321a 4C01E0   		add	rax, r12	# tmp786, prolog_loop_niters.361
 8092 321d 4D89C1   		mov	r9, r8	# bnd.363, niters.362
 8093 3220 4C8D24C3 		lea	r12, [rbx+rax*8]	# vectp.371,
 8094 3224 49C1E902 		shr	r9, 2	# bnd.363,
GAS LISTING /tmp/ccgH0yRS.s 			page 226


 8095              	# sieve_extend.c:859:     source_word = copy_word - size; // recalibrate
 859:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 8096              		.loc 1 859 17 view .LVU2771
 8097 3228 31C0     		xor	eax, eax	# ivtmp.426
 8098 322a 49C1E105 		sal	r9, 5	# _704,
 8099 322e 4E8D2CEB 		lea	r13, [rbx+r13*8]	# vectp.368,
 8100 3232 4D8D59E0 		lea	r11, -32[r9]	# tmp806,
 8101 3236 49C1EB05 		shr	r11, 5	# tmp804,
 8102 323a 4983C301 		add	r11, 1	# tmp807,
 8103 323e 4183E307 		and	r11d, 7	# tmp808,
 8104 3242 0F84A800 		je	.L605	#,
 8104      0000
 8105 3248 4983FB01 		cmp	r11, 1	# tmp808,
 8106 324c 0F848400 		je	.L755	#,
 8106      0000
 8107 3252 4983FB02 		cmp	r11, 2	# tmp808,
 8108 3256 746D     		je	.L756	#,
 8109 3258 4983FB03 		cmp	r11, 3	# tmp808,
 8110 325c 7456     		je	.L757	#,
 8111 325e 4983FB04 		cmp	r11, 4	# tmp808,
 8112 3262 743F     		je	.L758	#,
 8113 3264 4983FB05 		cmp	r11, 5	# tmp808,
 8114 3268 7428     		je	.L759	#,
 8115 326a 4983FB06 		cmp	r11, 6	# tmp808,
 8116 326e 7411     		je	.L760	#,
 8117              	.LVL361:
 868:sieve_extend.c **** 
 8118              		.loc 1 868 9 is_stmt 1 view .LVU2772
 8119              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8120              		.loc 1 868 29 is_stmt 0 view .LVU2773
 8121 3270 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR 0[r13]	# tmp1397, MEM[base: vectp.368_189, index: ivtmp.426_702, offset
 8121      5500
 8122 3276 B8200000 		mov	eax, 32	# ivtmp.426,
 8122      00
 8123 327b C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm10	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B], tmp
 8123      1424
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8124              		.loc 1 867 48 is_stmt 1 view .LVU2774
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8125              		.loc 1 867 11 view .LVU2775
 8126              	.L760:
 868:sieve_extend.c **** 
 8127              		.loc 1 868 9 view .LVU2776
 8128              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8129              		.loc 1 868 29 is_stmt 0 view .LVU2777
 8130 3281 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 0[r13+rax]	# tmp1398, MEM[base: vectp.368_189, index: ivtmp.426_702, off
 8130      540500
 8131 3288 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm2	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B], 
 8131      1404
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8132              		.loc 1 867 48 is_stmt 1 view .LVU2778
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8133              		.loc 1 867 11 view .LVU2779
 8134 328e 4883C020 		add	rax, 32	# ivtmp.426,
 8135              	.L759:
GAS LISTING /tmp/ccgH0yRS.s 			page 227


 868:sieve_extend.c **** 
 8136              		.loc 1 868 9 view .LVU2780
 8137              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8138              		.loc 1 868 29 is_stmt 0 view .LVU2781
 8139 3292 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 0[r13+rax]	# tmp1399, MEM[base: vectp.368_189, index: ivtmp.426_702, of
 8139      6C0500
 8140 3299 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm13	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B],
 8140      2C04
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8141              		.loc 1 867 48 is_stmt 1 view .LVU2782
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8142              		.loc 1 867 11 view .LVU2783
 8143 329f 4883C020 		add	rax, 32	# ivtmp.426,
 8144              	.L758:
 868:sieve_extend.c **** 
 8145              		.loc 1 868 9 view .LVU2784
 8146              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8147              		.loc 1 868 29 is_stmt 0 view .LVU2785
 8148 32a3 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR 0[r13+rax]	# tmp1400, MEM[base: vectp.368_189, index: ivtmp.426_702, of
 8148      740500
 8149 32aa C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm14	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B],
 8149      3404
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8150              		.loc 1 867 48 is_stmt 1 view .LVU2786
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8151              		.loc 1 867 11 view .LVU2787
 8152 32b0 4883C020 		add	rax, 32	# ivtmp.426,
 8153              	.L757:
 868:sieve_extend.c **** 
 8154              		.loc 1 868 9 view .LVU2788
 8155              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8156              		.loc 1 868 29 is_stmt 0 view .LVU2789
 8157 32b4 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 0[r13+rax]	# tmp1401, MEM[base: vectp.368_189, index: ivtmp.426_702, of
 8157      7C0500
 8158 32bb C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm15	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B],
 8158      3C04
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8159              		.loc 1 867 48 is_stmt 1 view .LVU2790
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8160              		.loc 1 867 11 view .LVU2791
 8161 32c1 4883C020 		add	rax, 32	# ivtmp.426,
 8162              	.L756:
 868:sieve_extend.c **** 
 8163              		.loc 1 868 9 view .LVU2792
 8164              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8165              		.loc 1 868 29 is_stmt 0 view .LVU2793
 8166 32c5 C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 0[r13+rax]	# tmp1402, MEM[base: vectp.368_189, index: ivtmp.426_702, off
 8166      4C0500
 8167 32cc C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm1	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B], 
 8167      0C04
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8168              		.loc 1 867 48 is_stmt 1 view .LVU2794
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccgH0yRS.s 			page 228


 8169              		.loc 1 867 11 view .LVU2795
 8170 32d2 4883C020 		add	rax, 32	# ivtmp.426,
 8171              	.L755:
 868:sieve_extend.c **** 
 8172              		.loc 1 868 9 view .LVU2796
 8173              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8174              		.loc 1 868 29 is_stmt 0 view .LVU2797
 8175 32d6 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 0[r13+rax]	# tmp1403, MEM[base: vectp.368_189, index: ivtmp.426_702, off
 8175      440500
 8176 32dd C4417E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm8	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B], 
 8176      0404
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8177              		.loc 1 867 48 is_stmt 1 view .LVU2798
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8178              		.loc 1 867 11 view .LVU2799
 8179 32e3 4883C020 		add	rax, 32	# ivtmp.426,
 8180 32e7 4C39C8   		cmp	rax, r9	# ivtmp.426, _704
 8181 32ea 0F849600 		je	.L820	#,
 8181      0000
 8182              	.L605:
 868:sieve_extend.c **** 
 8183              		.loc 1 868 9 discriminator 2 view .LVU2800
 8184              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8185              		.loc 1 868 29 is_stmt 0 discriminator 2 view .LVU2801
 8186 32f0 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR 0[r13+rax]	# tmp1384, MEM[base: vectp.368_189, index: ivtmp.426_702, off
 8186      440500
 8187 32f7 C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rax], ymm0	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B], 
 8187      0404
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8188              		.loc 1 867 48 is_stmt 1 discriminator 2 view .LVU2802
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8189              		.loc 1 867 11 discriminator 2 view .LVU2803
 868:sieve_extend.c **** 
 8190              		.loc 1 868 9 discriminator 2 view .LVU2804
 8191              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8192              		.loc 1 868 29 is_stmt 0 discriminator 2 view .LVU2805
 8193 32fd C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r13+rax]	# tmp1385, MEM[base: vectp.368_189, index: ivtmp.426_702, of
 8193      6C0520
 8194 3304 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r12+rax], ymm5	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B]
 8194      6C0420
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8195              		.loc 1 867 48 is_stmt 1 discriminator 2 view .LVU2806
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8196              		.loc 1 867 11 discriminator 2 view .LVU2807
 868:sieve_extend.c **** 
 8197              		.loc 1 868 9 discriminator 2 view .LVU2808
 8198              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8199              		.loc 1 868 29 is_stmt 0 discriminator 2 view .LVU2809
 8200 330b C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r13+rax]	# tmp1386, MEM[base: vectp.368_189, index: ivtmp.426_702, of
 8200      4C0540
 8201 3312 C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rax], ymm9	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B]
 8201      4C0440
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccgH0yRS.s 			page 229


 8202              		.loc 1 867 48 is_stmt 1 discriminator 2 view .LVU2810
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8203              		.loc 1 867 11 discriminator 2 view .LVU2811
 868:sieve_extend.c **** 
 8204              		.loc 1 868 9 discriminator 2 view .LVU2812
 8205              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8206              		.loc 1 868 29 is_stmt 0 discriminator 2 view .LVU2813
 8207 3319 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 96[r13+rax]	# tmp1387, MEM[base: vectp.368_189, index: ivtmp.426_702, o
 8207      5C0560
 8208 3320 C4417E7F 		vmovdqu	YMMWORD PTR 96[r12+rax], ymm11	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B
 8208      5C0460
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8209              		.loc 1 867 48 is_stmt 1 discriminator 2 view .LVU2814
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8210              		.loc 1 867 11 discriminator 2 view .LVU2815
 868:sieve_extend.c **** 
 8211              		.loc 1 868 9 discriminator 2 view .LVU2816
 8212              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8213              		.loc 1 868 29 is_stmt 0 discriminator 2 view .LVU2817
 8214 3327 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 128[r13+rax]	# tmp1388, MEM[base: vectp.368_189, index: ivtmp.426_702, o
 8214      A4058000 
 8214      0000
 8215 3331 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r12+rax], ymm4	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B
 8215      A4048000 
 8215      0000
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8216              		.loc 1 867 48 is_stmt 1 discriminator 2 view .LVU2818
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8217              		.loc 1 867 11 discriminator 2 view .LVU2819
 868:sieve_extend.c **** 
 8218              		.loc 1 868 9 discriminator 2 view .LVU2820
 8219              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8220              		.loc 1 868 29 is_stmt 0 discriminator 2 view .LVU2821
 8221 333b C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r13+rax]	# tmp1389, MEM[base: vectp.368_189, index: ivtmp.426_702, o
 8221      B405A000 
 8221      0000
 8222 3345 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r12+rax], ymm6	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B
 8222      B404A000 
 8222      0000
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8223              		.loc 1 867 48 is_stmt 1 discriminator 2 view .LVU2822
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8224              		.loc 1 867 11 discriminator 2 view .LVU2823
 868:sieve_extend.c **** 
 8225              		.loc 1 868 9 discriminator 2 view .LVU2824
 8226              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8227              		.loc 1 868 29 is_stmt 0 discriminator 2 view .LVU2825
 8228 334f C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 192[r13+rax]	# tmp1390, MEM[base: vectp.368_189, index: ivtmp.426_702, o
 8228      BC05C000 
 8228      0000
 8229 3359 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rax], ymm7	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B
 8229      BC04C000 
 8229      0000
GAS LISTING /tmp/ccgH0yRS.s 			page 230


 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8230              		.loc 1 867 48 is_stmt 1 discriminator 2 view .LVU2826
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8231              		.loc 1 867 11 discriminator 2 view .LVU2827
 868:sieve_extend.c **** 
 8232              		.loc 1 868 9 discriminator 2 view .LVU2828
 8233              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8234              		.loc 1 868 29 is_stmt 0 discriminator 2 view .LVU2829
 8235 3363 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 224[r13+rax]	# tmp1391, MEM[base: vectp.368_189, index: ivtmp.426_702, o
 8235      9C05E000 
 8235      0000
 8236 336d C4C17E7F 		vmovdqu	YMMWORD PTR 224[r12+rax], ymm3	# MEM[base: vectp.371_207, index: ivtmp.426_702, offset: 0B
 8236      9C04E000 
 8236      0000
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8237              		.loc 1 867 48 is_stmt 1 discriminator 2 view .LVU2830
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8238              		.loc 1 867 11 discriminator 2 view .LVU2831
 8239 3377 48050001 		add	rax, 256	# ivtmp.426,
 8239      0000
 8240 337d 4C39C8   		cmp	rax, r9	# ivtmp.426, _704
 8241 3380 0F856AFF 		jne	.L605	#,
 8241      FFFF
 8242              	.L820:
 8243 3386 4C89C2   		mov	rdx, r8	# niters_vector_mult_vf.364, niters.362
 8244 3389 4883E2FC 		and	rdx, -4	# niters_vector_mult_vf.364,
 8245 338d 4901D6   		add	r14, rdx	# tmp.365, niters_vector_mult_vf.364
 8246 3390 4801D6   		add	rsi, rdx	# tmp.366, niters_vector_mult_vf.364
 8247 3393 4C39C2   		cmp	rdx, r8	# niters_vector_mult_vf.364, niters.362
 8248 3396 0F840D01 		je	.L845	#,
 8248      0000
 8249              	.LVL362:
 868:sieve_extend.c **** 
 8250              		.loc 1 868 9 view .LVU2832
 8251              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8252              		.loc 1 867 5 is_stmt 0 view .LVU2833
 8253 339c 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 8253      50
 8254              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8255              		.loc 1 867 57 view .LVU2834
 8256 33a1 4C8D4601 		lea	r8, 1[rsi]	# copy_word,
 8257              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8258              		.loc 1 868 39 view .LVU2835
 8259 33a5 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _90, *_141
 8260              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8261              		.loc 1 867 71 view .LVU2836
 8262 33a9 4983C601 		add	r14, 1	# source_word,
 8263              	.LVL363:
 8264              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8265              		.loc 1 867 5 view .LVU2837
 8266 33ad 4D39C7   		cmp	r15, r8	# destination_stop_word, copy_word
GAS LISTING /tmp/ccgH0yRS.s 			page 231


 8267              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8268              		.loc 1 868 29 view .LVU2838
 8269 33b0 4C8914F3 		mov	QWORD PTR [rbx+rsi*8], r10	# *_489, _90
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8270              		.loc 1 867 48 is_stmt 1 view .LVU2839
 8271              	.LVL364:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8272              		.loc 1 867 11 view .LVU2840
 8273              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8274              		.loc 1 867 5 is_stmt 0 view .LVU2841
 8275 33b4 0F82EF00 		jb	.L845	#,
 8275      0000
 868:sieve_extend.c **** 
 8276              		.loc 1 868 9 is_stmt 1 view .LVU2842
 8277              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8278              		.loc 1 868 39 is_stmt 0 view .LVU2843
 8279 33ba 4A8D0CF5 		lea	rcx, 0[0+r14*8]	# _96,
 8279      00000000 
 8280              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8281              		.loc 1 867 57 view .LVU2844
 8282 33c2 4883C602 		add	rsi, 2	# copy_word,
 8283              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8284              		.loc 1 868 39 view .LVU2845
 8285 33c6 4E8B34F3 		mov	r14, QWORD PTR [rbx+r14*8]	# _103, *_98
 8286              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8287              		.loc 1 867 5 view .LVU2846
 8288 33ca 4939F7   		cmp	r15, rsi	# destination_stop_word, copy_word
 8289              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8290              		.loc 1 868 29 view .LVU2847
 8291 33cd 4E8934C3 		mov	QWORD PTR [rbx+r8*8], r14	# *_102, _103
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8292              		.loc 1 867 48 is_stmt 1 view .LVU2848
 8293              	.LVL365:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8294              		.loc 1 867 11 view .LVU2849
 8295              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8296              		.loc 1 867 5 is_stmt 0 view .LVU2850
 8297 33d1 0F82D200 		jb	.L845	#,
 8297      0000
 868:sieve_extend.c **** 
 8298              		.loc 1 868 9 is_stmt 1 view .LVU2851
 8299              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8300              		.loc 1 868 39 is_stmt 0 view .LVU2852
 8301 33d7 488B7C0B 		mov	rdi, QWORD PTR 8[rbx+rcx]	# _34, *_83
 8301      08
 8302              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8303              		.loc 1 868 29 view .LVU2853
GAS LISTING /tmp/ccgH0yRS.s 			page 232


 8304 33dc 48893CF3 		mov	QWORD PTR [rbx+rsi*8], rdi	# *_72, _34
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8305              		.loc 1 867 48 is_stmt 1 view .LVU2854
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8306              		.loc 1 867 11 view .LVU2855
 8307 33e0 C5F877   		vzeroupper
 8308              	.L846:
 8309              	# sieve_extend.c:871:  }
 871:sieve_extend.c **** 
 8310              		.loc 1 871 2 is_stmt 0 view .LVU2856
 8311 33e3 488D65D8 		lea	rsp, -40[rbp]	#,
 8312              	.LVL366:
 871:sieve_extend.c **** 
 8313              		.loc 1 871 2 view .LVU2857
 8314 33e7 5B       		pop	rbx	#
 8315 33e8 415C     		pop	r12	#
 8316 33ea 415D     		pop	r13	#
 8317 33ec 415E     		pop	r14	#
 8318 33ee 415F     		pop	r15	#
 8319 33f0 5D       		pop	rbp	#
 8320              		.cfi_remember_state
 8321              		.cfi_def_cfa 7, 8
 8322              	.LVL367:
 871:sieve_extend.c **** 
 8323              		.loc 1 871 2 view .LVU2858
 8324 33f1 C3       		ret	
 8325              	.LVL368:
 8326              		.p2align 4,,7
 8327 33f2 660F1F44 		.p2align 3
 8327      0000
 8328              	.L602:
 8329              		.cfi_restore_state
 871:sieve_extend.c **** 
 8330              		.loc 1 871 2 view .LVU2859
 8331 33f8 488B7424 		mov	rsi, QWORD PTR 80[rsp]	# destination_stop_word, %sfp
 8331      50
 8332 33fd 4E8D243B 		lea	r12, [rbx+r15]	# ivtmp.421,
 8333              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8334              		.loc 1 868 39 view .LVU2860
 8335 3401 4929C5   		sub	r13, rax	# tmp791, ivtmp.435
 8336              	.LVL369:
 868:sieve_extend.c **** 
 8337              		.loc 1 868 39 view .LVU2861
 8338 3404 488D5CF3 		lea	rbx, 8[rbx+rsi*8]	# _701,
 8338      08
 8339 3409 4989D9   		mov	r9, rbx	# tmp799, _701
 8340 340c 4D29E1   		sub	r9, r12	# tmp799, ivtmp.421
 8341 340f 4983E908 		sub	r9, 8	# tmp800,
 8342 3413 49C1E903 		shr	r9, 3	# tmp798,
 8343 3417 4983C101 		add	r9, 1	# tmp801,
 8344 341b 4183E107 		and	r9d, 7	# tmp802,
 8345 341f 0F849B00 		je	.L608	#,
 8345      0000
 8346 3425 4983F901 		cmp	r9, 1	# tmp802,
 8347 3429 746C     		je	.L761	#,
 8348 342b 4983F902 		cmp	r9, 2	# tmp802,
GAS LISTING /tmp/ccgH0yRS.s 			page 233


 8349 342f 7459     		je	.L762	#,
 8350 3431 4983F903 		cmp	r9, 3	# tmp802,
 8351 3435 7446     		je	.L763	#,
 8352 3437 4983F904 		cmp	r9, 4	# tmp802,
 8353 343b 7433     		je	.L764	#,
 8354 343d 4983F905 		cmp	r9, 5	# tmp802,
 8355 3441 7420     		je	.L765	#,
 8356 3443 4983F906 		cmp	r9, 6	# tmp802,
 8357 3447 740D     		je	.L766	#,
 868:sieve_extend.c **** 
 8358              		.loc 1 868 9 is_stmt 1 view .LVU2862
 8359              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8360              		.loc 1 868 39 is_stmt 0 view .LVU2863
 8361 3449 4F8B1CEC 		mov	r11, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8362 344d 4983C408 		add	r12, 8	# ivtmp.421,
 8363              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8364              		.loc 1 868 29 view .LVU2864
 8365 3451 4D895C24 		mov	QWORD PTR -8[r12], r11	# MEM[base: _604, offset: 0B], _170
 8365      F8
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8366              		.loc 1 867 48 is_stmt 1 view .LVU2865
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8367              		.loc 1 867 11 view .LVU2866
 8368              	.L766:
 868:sieve_extend.c **** 
 8369              		.loc 1 868 9 view .LVU2867
 8370              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8371              		.loc 1 868 39 is_stmt 0 view .LVU2868
 8372 3456 4B8B04EC 		mov	rax, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8373 345a 4983C408 		add	r12, 8	# ivtmp.421,
 8374              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8375              		.loc 1 868 29 view .LVU2869
 8376 345e 49894424 		mov	QWORD PTR -8[r12], rax	# MEM[base: _604, offset: 0B], _170
 8376      F8
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8377              		.loc 1 867 48 is_stmt 1 view .LVU2870
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8378              		.loc 1 867 11 view .LVU2871
 8379              	.L765:
 868:sieve_extend.c **** 
 8380              		.loc 1 868 9 view .LVU2872
 8381              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8382              		.loc 1 868 39 is_stmt 0 view .LVU2873
 8383 3463 4B8B14EC 		mov	rdx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8384 3467 4983C408 		add	r12, 8	# ivtmp.421,
 8385              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8386              		.loc 1 868 29 view .LVU2874
 8387 346b 49895424 		mov	QWORD PTR -8[r12], rdx	# MEM[base: _604, offset: 0B], _170
 8387      F8
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8388              		.loc 1 867 48 is_stmt 1 view .LVU2875
GAS LISTING /tmp/ccgH0yRS.s 			page 234


 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8389              		.loc 1 867 11 view .LVU2876
 8390              	.L764:
 868:sieve_extend.c **** 
 8391              		.loc 1 868 9 view .LVU2877
 8392              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8393              		.loc 1 868 39 is_stmt 0 view .LVU2878
 8394 3470 4F8B14EC 		mov	r10, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8395 3474 4983C408 		add	r12, 8	# ivtmp.421,
 8396              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8397              		.loc 1 868 29 view .LVU2879
 8398 3478 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 8398      F8
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8399              		.loc 1 867 48 is_stmt 1 view .LVU2880
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8400              		.loc 1 867 11 view .LVU2881
 8401              	.L763:
 868:sieve_extend.c **** 
 8402              		.loc 1 868 9 view .LVU2882
 8403              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8404              		.loc 1 868 39 is_stmt 0 view .LVU2883
 8405 347d 4F8B04EC 		mov	r8, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8406 3481 4983C408 		add	r12, 8	# ivtmp.421,
 8407              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8408              		.loc 1 868 29 view .LVU2884
 8409 3485 4D894424 		mov	QWORD PTR -8[r12], r8	# MEM[base: _604, offset: 0B], _170
 8409      F8
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8410              		.loc 1 867 48 is_stmt 1 view .LVU2885
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8411              		.loc 1 867 11 view .LVU2886
 8412              	.L762:
 868:sieve_extend.c **** 
 8413              		.loc 1 868 9 view .LVU2887
 8414              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8415              		.loc 1 868 39 is_stmt 0 view .LVU2888
 8416 348a 4F8B3CEC 		mov	r15, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8417 348e 4983C408 		add	r12, 8	# ivtmp.421,
 8418              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8419              		.loc 1 868 29 view .LVU2889
 8420 3492 4D897C24 		mov	QWORD PTR -8[r12], r15	# MEM[base: _604, offset: 0B], _170
 8420      F8
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8421              		.loc 1 867 48 is_stmt 1 view .LVU2890
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8422              		.loc 1 867 11 view .LVU2891
 8423              	.L761:
 868:sieve_extend.c **** 
 8424              		.loc 1 868 9 view .LVU2892
 8425              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
GAS LISTING /tmp/ccgH0yRS.s 			page 235


 868:sieve_extend.c **** 
 8426              		.loc 1 868 39 is_stmt 0 view .LVU2893
 8427 3497 4B8B0CEC 		mov	rcx, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8428 349b 4983C408 		add	r12, 8	# ivtmp.421,
 8429              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8430              		.loc 1 868 29 view .LVU2894
 8431 349f 49894C24 		mov	QWORD PTR -8[r12], rcx	# MEM[base: _604, offset: 0B], _170
 8431      F8
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8432              		.loc 1 867 48 is_stmt 1 view .LVU2895
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8433              		.loc 1 867 11 view .LVU2896
 8434              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8435              		.loc 1 867 5 is_stmt 0 view .LVU2897
 8436 34a4 4939DC   		cmp	r12, rbx	# ivtmp.421, _701
 8437 34a7 7517     		jne	.L608	#,
 8438              	.LVL370:
 8439              	.L845:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8440              		.loc 1 867 5 view .LVU2898
 8441 34a9 C5F877   		vzeroupper
 8442              	# sieve_extend.c:871:  }
 871:sieve_extend.c **** 
 8443              		.loc 1 871 2 view .LVU2899
 8444 34ac 488D65D8 		lea	rsp, -40[rbp]	#,
 8445              	.LVL371:
 871:sieve_extend.c **** 
 8446              		.loc 1 871 2 view .LVU2900
 8447 34b0 5B       		pop	rbx	#
 8448 34b1 415C     		pop	r12	#
 8449 34b3 415D     		pop	r13	#
 8450 34b5 415E     		pop	r14	#
 8451 34b7 415F     		pop	r15	#
 8452 34b9 5D       		pop	rbp	#
 8453              		.cfi_remember_state
 8454              		.cfi_def_cfa 7, 8
 8455              	.LVL372:
 871:sieve_extend.c **** 
 8456              		.loc 1 871 2 view .LVU2901
 8457 34ba C3       		ret	
 8458              	.LVL373:
 8459 34bb 0F1F4400 		.p2align 4,,7
 8459      00
 8460              		.p2align 3
 8461              	.L608:
 8462              		.cfi_restore_state
 868:sieve_extend.c **** 
 8463              		.loc 1 868 9 is_stmt 1 view .LVU2902
 8464              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8465              		.loc 1 868 39 is_stmt 0 view .LVU2903
 8466 34c0 4F8B34EC 		mov	r14, QWORD PTR [r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8467              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8468              		.loc 1 868 29 view .LVU2904
GAS LISTING /tmp/ccgH0yRS.s 			page 236


 8469 34c4 4D893424 		mov	QWORD PTR [r12], r14	# MEM[base: _604, offset: 0B], _170
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8470              		.loc 1 867 48 is_stmt 1 view .LVU2905
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8471              		.loc 1 867 11 view .LVU2906
 868:sieve_extend.c **** 
 8472              		.loc 1 868 9 view .LVU2907
 8473              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8474              		.loc 1 868 39 is_stmt 0 view .LVU2908
 8475 34c8 4B8B7CEC 		mov	rdi, QWORD PTR 8[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8475      08
 8476              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8477              		.loc 1 868 29 view .LVU2909
 8478 34cd 49897C24 		mov	QWORD PTR 8[r12], rdi	# MEM[base: _604, offset: 0B], _170
 8478      08
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8479              		.loc 1 867 48 is_stmt 1 view .LVU2910
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8480              		.loc 1 867 11 view .LVU2911
 868:sieve_extend.c **** 
 8481              		.loc 1 868 9 view .LVU2912
 8482              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8483              		.loc 1 868 39 is_stmt 0 view .LVU2913
 8484 34d2 4B8B74EC 		mov	rsi, QWORD PTR 16[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8484      10
 8485              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8486              		.loc 1 868 29 view .LVU2914
 8487 34d7 49897424 		mov	QWORD PTR 16[r12], rsi	# MEM[base: _604, offset: 0B], _170
 8487      10
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8488              		.loc 1 867 48 is_stmt 1 view .LVU2915
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8489              		.loc 1 867 11 view .LVU2916
 868:sieve_extend.c **** 
 8490              		.loc 1 868 9 view .LVU2917
 8491              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8492              		.loc 1 868 39 is_stmt 0 view .LVU2918
 8493 34dc 4F8B4CEC 		mov	r9, QWORD PTR 24[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8493      18
 8494              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8495              		.loc 1 868 29 view .LVU2919
 8496 34e1 4D894C24 		mov	QWORD PTR 24[r12], r9	# MEM[base: _604, offset: 0B], _170
 8496      18
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8497              		.loc 1 867 48 is_stmt 1 view .LVU2920
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8498              		.loc 1 867 11 view .LVU2921
 868:sieve_extend.c **** 
 8499              		.loc 1 868 9 view .LVU2922
 8500              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
GAS LISTING /tmp/ccgH0yRS.s 			page 237


 8501              		.loc 1 868 39 is_stmt 0 view .LVU2923
 8502 34e6 4F8B5CEC 		mov	r11, QWORD PTR 32[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8502      20
 8503              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8504              		.loc 1 868 29 view .LVU2924
 8505 34eb 4D895C24 		mov	QWORD PTR 32[r12], r11	# MEM[base: _604, offset: 0B], _170
 8505      20
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8506              		.loc 1 867 48 is_stmt 1 view .LVU2925
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8507              		.loc 1 867 11 view .LVU2926
 868:sieve_extend.c **** 
 8508              		.loc 1 868 9 view .LVU2927
 8509              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8510              		.loc 1 868 39 is_stmt 0 view .LVU2928
 8511 34f0 4B8B44EC 		mov	rax, QWORD PTR 40[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8511      28
 8512              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8513              		.loc 1 868 29 view .LVU2929
 8514 34f5 49894424 		mov	QWORD PTR 40[r12], rax	# MEM[base: _604, offset: 0B], _170
 8514      28
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8515              		.loc 1 867 48 is_stmt 1 view .LVU2930
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8516              		.loc 1 867 11 view .LVU2931
 868:sieve_extend.c **** 
 8517              		.loc 1 868 9 view .LVU2932
 8518              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8519              		.loc 1 868 39 is_stmt 0 view .LVU2933
 8520 34fa 4B8B54EC 		mov	rdx, QWORD PTR 48[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8520      30
 8521              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8522              		.loc 1 868 29 view .LVU2934
 8523 34ff 49895424 		mov	QWORD PTR 48[r12], rdx	# MEM[base: _604, offset: 0B], _170
 8523      30
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8524              		.loc 1 867 48 is_stmt 1 view .LVU2935
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8525              		.loc 1 867 11 view .LVU2936
 868:sieve_extend.c **** 
 8526              		.loc 1 868 9 view .LVU2937
 8527              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8528              		.loc 1 868 39 is_stmt 0 view .LVU2938
 8529 3504 4F8B54EC 		mov	r10, QWORD PTR 56[r12+r13*8]	# _170, MEM[base: _604, index: _696, step: 8, offset: 0B]
 8529      38
 8530 3509 4983C440 		add	r12, 64	# ivtmp.421,
 8531              	# sieve_extend.c:868:         bitarray[copy_word] = bitarray[source_word];
 868:sieve_extend.c **** 
 8532              		.loc 1 868 29 view .LVU2939
 8533 350d 4D895424 		mov	QWORD PTR -8[r12], r10	# MEM[base: _604, offset: 0B], _170
 8533      F8
GAS LISTING /tmp/ccgH0yRS.s 			page 238


 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8534              		.loc 1 867 48 is_stmt 1 view .LVU2940
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8535              		.loc 1 867 11 view .LVU2941
 8536              	# sieve_extend.c:867:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8537              		.loc 1 867 5 is_stmt 0 view .LVU2942
 8538 3512 4939DC   		cmp	r12, rbx	# ivtmp.421, _701
 8539 3515 75A9     		jne	.L608	#,
 8540 3517 EB90     		jmp	.L845	#
 8541              	.LVL374:
 8542 3519 0F1F8000 		.p2align 4,,7
 8542      000000
 8543              		.p2align 3
 8544              	.L585:
 867:sieve_extend.c ****         bitarray[copy_word] = bitarray[source_word];
 8545              		.loc 1 867 5 view .LVU2943
 8546 3520 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 8546      30
 8547 3525 4989C1   		mov	r9, rax	# tmp823, ivtmp.435
 8548 3528 49F7D1   		not	r9	# tmp823
 8549 352b 4801D9   		add	rcx, rbx	# ivtmp.466, bitarray
 8550              	.LBB407:
 8551              	.LBB388:
 8552              	.LBB377:
 8553              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8554              		.loc 1 692 63 view .LVU2944
 8555 352e 4489FE   		mov	esi, r15d	# tmp1324, _18
 8556              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8557              		.loc 1 692 42 view .LVU2945
 8558 3531 C4E29BF7 		shrx	rdx, QWORD PTR [rcx], r12	# tmp681, MEM[base: _743, offset: 0B], _12
 8558      11
 8559 3536 4D01F1   		add	r9, r14	# tmp824, fast_loop_stop_word
 8560              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8561              		.loc 1 692 63 view .LVU2946
 8562 3539 4589FA   		mov	r10d, r15d	# _18, shift_flipped
 8563              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8564              		.loc 1 691 19 view .LVU2947
 8565 353c 4C8B4108 		mov	r8, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 8566              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8567              		.loc 1 692 63 view .LVU2948
 8568 3540 C4C2C9F7 		shlx	rdi, r8, rsi	# tmp683, source1, tmp1324
 8568      F8
 8569 3545 49D1E9   		shr	r9	# tmp822
 8570              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8571              		.loc 1 692 52 view .LVU2949
 8572 3548 4809FA   		or	rdx, rdi	# tmp684, tmp683
 8573              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 8574              		.loc 1 695 19 view .LVU2950
 8575 354b 488D7802 		lea	rdi, 2[rax]	# copy_word,
GAS LISTING /tmp/ccgH0yRS.s 			page 239


 8576 354f 49F7D3   		not	r11	# tmp794
 8577              	.LVL375:
 8578              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8579              		.loc 1 692 52 view .LVU2951
 8580 3552 488914C3 		mov	QWORD PTR [rbx+rax*8], rdx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8581 3556 4183E103 		and	r9d, 3	# tmp825,
 8582              	.LVL376:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8583              		.loc 1 690 9 is_stmt 1 view .LVU2952
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8584              		.loc 1 691 9 view .LVU2953
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8585              		.loc 1 692 9 view .LVU2954
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8586              		.loc 1 693 9 view .LVU2955
 694:sieve_extend.c ****         copy_word += 2;
 8587              		.loc 1 694 9 view .LVU2956
 8588              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8589              		.loc 1 694 42 is_stmt 0 view .LVU2957
 8590 355a C4429BF7 		shrx	r8, r8, r12	# tmp687, source1, _12
 8590      C0
 8591              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8592              		.loc 1 694 63 view .LVU2958
 8593 355f C4E2A9F7 		shlx	rdx, QWORD PTR 16[rcx], r10	# tmp685, MEM[base: _743, offset: 16B], tmp1325
 8593      5110
 8594              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8595              		.loc 1 694 52 view .LVU2959
 8596 3565 4909D0   		or	r8, rdx	# tmp688, tmp685
 8597              	.LBE377:
 8598              	# sieve_extend.c:689:     while (copy_word < fast_loop_stop_word) {
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8599              		.loc 1 689 11 view .LVU2960
 8600 3568 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 8601 356b 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8602 356f 488D5110 		lea	rdx, 16[rcx]	# ivtmp.466,
 8603              	.LBB378:
 8604              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8605              		.loc 1 694 52 view .LVU2961
 8606 3573 4C8944C3 		mov	QWORD PTR 8[rbx+rax*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8606      08
 8607              	.LVL377:
 695:sieve_extend.c ****         source_word += 2;
 8608              		.loc 1 695 9 is_stmt 1 view .LVU2962
 696:sieve_extend.c ****         distance += 2;
 8609              		.loc 1 696 9 view .LVU2963
 697:sieve_extend.c ****     }
 8610              		.loc 1 697 9 view .LVU2964
 697:sieve_extend.c ****     }
 8611              		.loc 1 697 9 is_stmt 0 view .LVU2965
 8612              	.LBE378:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8613              		.loc 1 689 11 is_stmt 1 view .LVU2966
GAS LISTING /tmp/ccgH0yRS.s 			page 240


 8614 3578 0F8644F6 		jbe	.L589	#,
 8614      FFFF
 8615 357e 4D85C9   		test	r9, r9	# tmp825
 8616 3581 0F848B00 		je	.L839	#,
 8616      0000
 8617 3587 4983F901 		cmp	r9, 1	# tmp825,
 8618 358b 7440     		je	.L773	#,
 8619 358d 4983F902 		cmp	r9, 2	# tmp825,
 8620 3591 0F857403 		jne	.L848	#,
 8620      0000
 8621              	.LVL378:
 8622              	.L774:
 8623              	.LBB379:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8624              		.loc 1 690 9 view .LVU2967
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8625              		.loc 1 691 9 view .LVU2968
 8626              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8627              		.loc 1 691 19 is_stmt 0 view .LVU2969
 8628 3597 488B7208 		mov	rsi, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8629              		.loc 1 692 9 is_stmt 1 view .LVU2970
 8630              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8631              		.loc 1 692 42 is_stmt 0 view .LVU2971
 8632 359b C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1171, MEM[base: _743, offset: 0B], _12
 8632      0A
 8633              	.LVL379:
 8634              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8635              		.loc 1 692 63 view .LVU2972
 8636 35a0 4589F8   		mov	r8d, r15d	# tmp1427, _18
 8637 35a3 C462B9F7 		shlx	r10, rsi, r8	# tmp1172, source1, tmp1427
 8637      D6
 8638              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8639              		.loc 1 692 52 view .LVU2973
 8640 35a8 4C09D1   		or	rcx, r10	# tmp1173, tmp1172
 8641              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8642              		.loc 1 692 63 view .LVU2974
 8643 35ab 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8644              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8645              		.loc 1 694 42 view .LVU2975
 8646 35ae C4E29BF7 		shrx	rsi, rsi, r12	# tmp1176, source1, _12
 8646      F6
 8647              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8648              		.loc 1 692 52 view .LVU2976
 8649 35b3 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8650              	.LVL380:
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8651              		.loc 1 693 9 is_stmt 1 view .LVU2977
 694:sieve_extend.c ****         copy_word += 2;
 8652              		.loc 1 694 9 view .LVU2978
GAS LISTING /tmp/ccgH0yRS.s 			page 241


 8653              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8654              		.loc 1 694 63 is_stmt 0 view .LVU2979
 8655 35b7 C46289F7 		shlx	r9, QWORD PTR 16[rdx], r14	# tmp1175, MEM[base: _743, offset: 16B], tmp1428
 8655      4A10
 8656              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8657              		.loc 1 694 52 view .LVU2980
 8658 35bd 4C09CE   		or	rsi, r9	# tmp1177, tmp1175
 8659 35c0 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8659      08
 8660              	.LVL381:
 695:sieve_extend.c ****         source_word += 2;
 8661              		.loc 1 695 9 is_stmt 1 view .LVU2981
 8662 35c5 4883C210 		add	rdx, 16	# ivtmp.466,
 8663              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 8664              		.loc 1 695 19 is_stmt 0 view .LVU2982
 8665 35c9 4883C702 		add	rdi, 2	# copy_word,
 696:sieve_extend.c ****         distance += 2;
 8666              		.loc 1 696 9 is_stmt 1 view .LVU2983
 697:sieve_extend.c ****     }
 8667              		.loc 1 697 9 view .LVU2984
 697:sieve_extend.c ****     }
 8668              		.loc 1 697 9 is_stmt 0 view .LVU2985
 8669              	.LBE379:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8670              		.loc 1 689 11 is_stmt 1 view .LVU2986
 8671              	.LVL382:
 8672              	.L773:
 8673              	.LBB380:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8674              		.loc 1 690 9 view .LVU2987
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8675              		.loc 1 691 9 view .LVU2988
 8676              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8677              		.loc 1 691 19 is_stmt 0 view .LVU2989
 8678 35cd 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8679              		.loc 1 692 9 is_stmt 1 view .LVU2990
 8680              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8681              		.loc 1 692 42 is_stmt 0 view .LVU2991
 8682 35d1 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp1181, MEM[base: _743, offset: 0B], _12
 8682      0A
 8683              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8684              		.loc 1 692 63 view .LVU2992
 8685 35d6 4589F8   		mov	r8d, r15d	# tmp1429, _18
 8686 35d9 C442B9F7 		shlx	r10, r9, r8	# tmp1182, source1, tmp1429
 8686      D1
 8687              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8688              		.loc 1 692 52 view .LVU2993
 8689 35de 4C09D1   		or	rcx, r10	# tmp1183, tmp1182
 8690              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
GAS LISTING /tmp/ccgH0yRS.s 			page 242


 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8691              		.loc 1 692 63 view .LVU2994
 8692 35e1 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 8693              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8694              		.loc 1 694 42 view .LVU2995
 8695 35e4 C4C29BF7 		shrx	rsi, r9, r12	# tmp1186, source1, _12
 8695      F1
 8696              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8697              		.loc 1 692 52 view .LVU2996
 8698 35e9 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8699              	.LVL383:
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8700              		.loc 1 693 9 is_stmt 1 view .LVU2997
 694:sieve_extend.c ****         copy_word += 2;
 8701              		.loc 1 694 9 view .LVU2998
 8702              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8703              		.loc 1 694 63 is_stmt 0 view .LVU2999
 8704 35ed C4E289F7 		shlx	rcx, QWORD PTR 16[rdx], r14	# tmp1185, MEM[base: _743, offset: 16B], tmp1430
 8704      4A10
 8705              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8706              		.loc 1 694 52 view .LVU3000
 8707 35f3 4809CE   		or	rsi, rcx	# tmp1187, tmp1185
 8708 35f6 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8708      08
 8709              	.LVL384:
 695:sieve_extend.c ****         source_word += 2;
 8710              		.loc 1 695 9 is_stmt 1 view .LVU3001
 8711              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 8712              		.loc 1 695 19 is_stmt 0 view .LVU3002
 8713 35fb 4883C702 		add	rdi, 2	# copy_word,
 696:sieve_extend.c ****         distance += 2;
 8714              		.loc 1 696 9 is_stmt 1 view .LVU3003
 697:sieve_extend.c ****     }
 8715              		.loc 1 697 9 view .LVU3004
 8716 35ff 4883C210 		add	rdx, 16	# ivtmp.466,
 8717              	.LBE380:
 8718              	# sieve_extend.c:689:     while (copy_word < fast_loop_stop_word) {
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8719              		.loc 1 689 11 is_stmt 0 view .LVU3005
 8720 3603 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8720      30
 8721 3608 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8722              		.loc 1 689 11 is_stmt 1 view .LVU3006
 8723 360c 0F86B0F5 		jbe	.L589	#,
 8723      FFFF
 8724              	.LVL385:
 8725              	.L839:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8726              		.loc 1 689 11 is_stmt 0 view .LVU3007
 8727 3612 4489F9   		mov	ecx, r15d	# _18, shift_flipped
 8728              	.L588:
GAS LISTING /tmp/ccgH0yRS.s 			page 243


 8729              	.LVL386:
 8730              	.LBB381:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8731              		.loc 1 690 9 is_stmt 1 view .LVU3008
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8732              		.loc 1 691 9 view .LVU3009
 8733              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8734              		.loc 1 691 19 is_stmt 0 view .LVU3010
 8735 3615 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8736              		.loc 1 692 9 is_stmt 1 view .LVU3011
 8737              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8738              		.loc 1 692 42 is_stmt 0 view .LVU3012
 8739 3619 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp897, MEM[base: _743, offset: 0B], _12
 8739      02
 8740              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8741              		.loc 1 692 63 view .LVU3013
 8742 361e C442F1F7 		shlx	r14, r9, rcx	# tmp898, source1, _18
 8742      F1
 8743              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8744              		.loc 1 692 52 view .LVU3014
 8745 3623 4D09F0   		or	r8, r14	# tmp899, tmp898
 8746              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8747              		.loc 1 694 42 view .LVU3015
 8748 3626 C4429BF7 		shrx	r10, r9, r12	# tmp902, source1, _12
 8748      D1
 8749              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8750              		.loc 1 692 52 view .LVU3016
 8751 362b 4C8904FB 		mov	QWORD PTR [rbx+rdi*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8752              	.LVL387:
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8753              		.loc 1 693 9 is_stmt 1 view .LVU3017
 694:sieve_extend.c ****         copy_word += 2;
 8754              		.loc 1 694 9 view .LVU3018
 8755              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8756              		.loc 1 694 63 is_stmt 0 view .LVU3019
 8757 362f C4E2F1F7 		shlx	rsi, QWORD PTR 16[rdx], rcx	# tmp901, MEM[base: _743, offset: 16B], _18
 8757      7210
 8758              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8759              		.loc 1 694 52 view .LVU3020
 8760 3635 4C09D6   		or	rsi, r10	# tmp903, tmp902
 8761 3638 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 8761      08
 8762              	.LVL388:
 695:sieve_extend.c ****         source_word += 2;
 8763              		.loc 1 695 9 is_stmt 1 view .LVU3021
 8764              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 8765              		.loc 1 695 19 is_stmt 0 view .LVU3022
GAS LISTING /tmp/ccgH0yRS.s 			page 244


 8766 363d 4C8D4F02 		lea	r9, 2[rdi]	# tmp826,
 696:sieve_extend.c ****         distance += 2;
 8767              		.loc 1 696 9 is_stmt 1 view .LVU3023
 697:sieve_extend.c ****     }
 8768              		.loc 1 697 9 view .LVU3024
 697:sieve_extend.c ****     }
 8769              		.loc 1 697 9 is_stmt 0 view .LVU3025
 8770              	.LBE381:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8771              		.loc 1 689 11 is_stmt 1 view .LVU3026
 8772              	.LBB382:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8773              		.loc 1 690 9 view .LVU3027
 8774              	.LVL389:
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8775              		.loc 1 691 9 view .LVU3028
 8776              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8777              		.loc 1 691 19 is_stmt 0 view .LVU3029
 8778 3641 4C8B4218 		mov	r8, QWORD PTR 24[rdx]	# source1, MEM[base: _743, offset: 8B]
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8779              		.loc 1 692 9 is_stmt 1 view .LVU3030
 8780              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8781              		.loc 1 692 42 is_stmt 0 view .LVU3031
 8782 3645 C4E29BF7 		shrx	rsi, QWORD PTR 16[rdx], r12	# tmp909, MEM[base: _743, offset: 0B], _12
 8782      7210
 8783              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8784              		.loc 1 692 63 view .LVU3032
 8785 364b C442F1F7 		shlx	r14, r8, rcx	# tmp910, source1, _18
 8785      F0
 8786              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8787              		.loc 1 692 52 view .LVU3033
 8788 3650 4C09F6   		or	rsi, r14	# tmp911, tmp910
 8789 3653 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8790              	.LVL390:
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8791              		.loc 1 693 9 is_stmt 1 view .LVU3034
 694:sieve_extend.c ****         copy_word += 2;
 8792              		.loc 1 694 9 view .LVU3035
 8793              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8794              		.loc 1 694 42 is_stmt 0 view .LVU3036
 8795 3657 C4429BF7 		shrx	r8, r8, r12	# tmp914, source1, _12
 8795      C0
 8796              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8797              		.loc 1 694 63 view .LVU3037
 8798 365c 4C8B5220 		mov	r10, QWORD PTR 32[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8799 3660 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp913, MEM[base: _743, offset: 16B], _18
 8799      F2
 8800              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8801              		.loc 1 694 52 view .LVU3038
 8802 3665 4909F0   		or	r8, rsi	# tmp915, tmp913
GAS LISTING /tmp/ccgH0yRS.s 			page 245


 8803 3668 4883C240 		add	rdx, 64	# ivtmp.466,
 8804 366c 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 8804      08
 8805              	.LVL391:
 695:sieve_extend.c ****         source_word += 2;
 8806              		.loc 1 695 9 is_stmt 1 view .LVU3039
 8807              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 8808              		.loc 1 695 19 is_stmt 0 view .LVU3040
 8809 3671 4C8D4F04 		lea	r9, 4[rdi]	# copy_word,
 696:sieve_extend.c ****         distance += 2;
 8810              		.loc 1 696 9 is_stmt 1 view .LVU3041
 697:sieve_extend.c ****     }
 8811              		.loc 1 697 9 view .LVU3042
 697:sieve_extend.c ****     }
 8812              		.loc 1 697 9 is_stmt 0 view .LVU3043
 8813              	.LBE382:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8814              		.loc 1 689 11 is_stmt 1 view .LVU3044
 8815              	.LBB383:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8816              		.loc 1 690 9 view .LVU3045
 8817              	.LVL392:
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8818              		.loc 1 691 9 view .LVU3046
 8819              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8820              		.loc 1 691 19 is_stmt 0 view .LVU3047
 8821 3675 4C8B52E8 		mov	r10, QWORD PTR -24[rdx]	# source1, MEM[base: _743, offset: 8B]
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8822              		.loc 1 692 9 is_stmt 1 view .LVU3048
 8823              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8824              		.loc 1 692 42 is_stmt 0 view .LVU3049
 8825 3679 C4E29BF7 		shrx	rsi, QWORD PTR -32[rdx], r12	# tmp921, MEM[base: _743, offset: 0B], _12
 8825      72E0
 8826              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8827              		.loc 1 692 63 view .LVU3050
 8828 367f C442F1F7 		shlx	r14, r10, rcx	# tmp922, source1, _18
 8828      F2
 8829              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8830              		.loc 1 692 52 view .LVU3051
 8831 3684 4C09F6   		or	rsi, r14	# tmp923, tmp922
 8832 3687 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8833              	.LVL393:
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8834              		.loc 1 693 9 is_stmt 1 view .LVU3052
 694:sieve_extend.c ****         copy_word += 2;
 8835              		.loc 1 694 9 view .LVU3053
 8836              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8837              		.loc 1 694 42 is_stmt 0 view .LVU3054
 8838 368b C4429BF7 		shrx	r10, r10, r12	# tmp926, source1, _12
 8838      D2
 8839              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
GAS LISTING /tmp/ccgH0yRS.s 			page 246


 694:sieve_extend.c ****         copy_word += 2;
 8840              		.loc 1 694 63 view .LVU3055
 8841 3690 4C8B42F0 		mov	r8, QWORD PTR -16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8842 3694 C4C2F1F7 		shlx	rsi, r8, rcx	# tmp925, MEM[base: _743, offset: 16B], _18
 8842      F0
 8843              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8844              		.loc 1 694 52 view .LVU3056
 8845 3699 4909F2   		or	r10, rsi	# tmp927, tmp925
 8846 369c 4E8954CB 		mov	QWORD PTR 8[rbx+r9*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 8846      08
 8847              	.LVL394:
 695:sieve_extend.c ****         source_word += 2;
 8848              		.loc 1 695 9 is_stmt 1 view .LVU3057
 8849              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 8850              		.loc 1 695 19 is_stmt 0 view .LVU3058
 8851 36a1 4C8D4F06 		lea	r9, 6[rdi]	# copy_word,
 696:sieve_extend.c ****         distance += 2;
 8852              		.loc 1 696 9 is_stmt 1 view .LVU3059
 697:sieve_extend.c ****     }
 8853              		.loc 1 697 9 view .LVU3060
 697:sieve_extend.c ****     }
 8854              		.loc 1 697 9 is_stmt 0 view .LVU3061
 8855              	.LBE383:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8856              		.loc 1 689 11 is_stmt 1 view .LVU3062
 8857              	.LBB384:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 8858              		.loc 1 690 9 view .LVU3063
 8859              	.LVL395:
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8860              		.loc 1 691 9 view .LVU3064
 8861              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8862              		.loc 1 691 19 is_stmt 0 view .LVU3065
 8863 36a5 4C8B42F8 		mov	r8, QWORD PTR -8[rdx]	# source1, MEM[base: _743, offset: 8B]
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8864              		.loc 1 692 9 is_stmt 1 view .LVU3066
 8865              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8866              		.loc 1 692 42 is_stmt 0 view .LVU3067
 8867 36a9 C4E29BF7 		shrx	rsi, QWORD PTR -16[rdx], r12	# tmp933, MEM[base: _743, offset: 0B], _12
 8867      72F0
 8868              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8869              		.loc 1 692 63 view .LVU3068
 8870 36af C442F1F7 		shlx	r14, r8, rcx	# tmp934, source1, _18
 8870      F0
 8871              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 8872              		.loc 1 692 52 view .LVU3069
 8873 36b4 4C09F6   		or	rsi, r14	# tmp935, tmp934
 8874 36b7 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 0
 8875              	.LVL396:
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8876              		.loc 1 693 9 is_stmt 1 view .LVU3070
GAS LISTING /tmp/ccgH0yRS.s 			page 247


 694:sieve_extend.c ****         copy_word += 2;
 8877              		.loc 1 694 9 view .LVU3071
 8878              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 8879              		.loc 1 695 19 is_stmt 0 view .LVU3072
 8880 36bb 4883C708 		add	rdi, 8	# copy_word,
 8881              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8882              		.loc 1 694 42 view .LVU3073
 8883 36bf C4429BF7 		shrx	r8, r8, r12	# tmp938, source1, _12
 8883      C0
 8884              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8885              		.loc 1 694 63 view .LVU3074
 8886 36c4 4C8B12   		mov	r10, QWORD PTR [rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8887 36c7 C4C2F1F7 		shlx	rsi, r10, rcx	# tmp937, MEM[base: _743, offset: 16B], _18
 8887      F2
 8888              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8889              		.loc 1 694 52 view .LVU3075
 8890 36cc 4909F0   		or	r8, rsi	# tmp939, tmp937
 8891              	.LBE384:
 8892              	# sieve_extend.c:689:     while (copy_word < fast_loop_stop_word) {
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8893              		.loc 1 689 11 view .LVU3076
 8894 36cf 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8894      30
 8895 36d4 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8896              	.LBB385:
 8897              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 8898              		.loc 1 694 52 view .LVU3077
 8899 36d8 4E8944CB 		mov	QWORD PTR 8[rbx+r9*8], r8	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 8
 8899      08
 8900              	.LVL397:
 695:sieve_extend.c ****         source_word += 2;
 8901              		.loc 1 695 9 is_stmt 1 view .LVU3078
 696:sieve_extend.c ****         distance += 2;
 8902              		.loc 1 696 9 view .LVU3079
 697:sieve_extend.c ****     }
 8903              		.loc 1 697 9 view .LVU3080
 697:sieve_extend.c ****     }
 8904              		.loc 1 697 9 is_stmt 0 view .LVU3081
 8905              	.LBE385:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8906              		.loc 1 689 11 is_stmt 1 view .LVU3082
 8907 36dd 0F8732FF 		ja	.L588	#,
 8907      FFFF
 8908 36e3 E9DAF4FF 		jmp	.L589	#
 8908      FF
 8909              	.LVL398:
 8910              		.p2align 4,,7
 8911              		.p2align 3
 8912              	.L610:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 8913              		.loc 1 689 11 is_stmt 0 view .LVU3083
 8914              	.LBE388:
GAS LISTING /tmp/ccgH0yRS.s 			page 248


 8915              	.LBE407:
 8916              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8917              		.loc 1 853 5 view .LVU3084
 8918 36e8 4889C6   		mov	rsi, rax	# copy_word, ivtmp.435
 8919              	# sieve_extend.c:847:     source_word += distance;
 847:sieve_extend.c ****     copy_word += distance;
 8920              		.loc 1 847 17 view .LVU3085
 8921 36eb 4C89D9   		mov	rcx, r11	# source_word, _183
 8922 36ee 4D8D4301 		lea	r8, 1[r11]	# tmp793,
 8923 36f2 E9CDF5FF 		jmp	.L592	#
 8923      FF
 8924              		.p2align 4,,7
 8925 36f7 90       		.p2align 3
 8926              	.L591:
 847:sieve_extend.c ****     copy_word += distance;
 8927              		.loc 1 847 17 view .LVU3086
 8928 36f8 488B7C24 		mov	rdi, QWORD PTR 88[rsp]	# _183, %sfp
 8928      58
 8929 36fd 4801DA   		add	rdx, rbx	# ivtmp.443, bitarray
 8930 3700 4C8B5424 		mov	r10, QWORD PTR 64[rsp]	# tmp749, %sfp
 8930      40
 8931              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 8932              		.loc 1 854 29 view .LVU3087
 8933 3705 4829F8   		sub	rax, rdi	# tmp753, _183
 8934 3708 4901FA   		add	r10, rdi	# tmp749, _183
 8935 370b 4E8D4CD3 		lea	r9, 8[rbx+r10*8]	# tmp752,
 8935      08
 8936 3710 4929F1   		sub	r9, rsi	# tmp752, _220
 8937 3713 4C89CE   		mov	rsi, r9	# _729, tmp752
 8938 3716 4929D1   		sub	r9, rdx	# tmp811, ivtmp.443
 8939 3719 4983E908 		sub	r9, 8	# tmp812,
 8940 371d 49C1E903 		shr	r9, 3	# tmp810,
 8941 3721 4983C101 		add	r9, 1	# tmp813,
 8942 3725 4183E107 		and	r9d, 7	# tmp814,
 8943 3729 0F84F900 		je	.L836	#,
 8943      0000
 8944 372f 4983F901 		cmp	r9, 1	# tmp814,
 8945 3733 0F84CA00 		je	.L748	#,
 8945      0000
 8946 3739 4983F902 		cmp	r9, 2	# tmp814,
 8947 373d 0F84A500 		je	.L749	#,
 8947      0000
 8948 3743 4983F903 		cmp	r9, 3	# tmp814,
 8949 3747 0F848000 		je	.L750	#,
 8949      0000
 8950 374d 4983F904 		cmp	r9, 4	# tmp814,
 8951 3751 745E     		je	.L751	#,
 8952 3753 4983F905 		cmp	r9, 5	# tmp814,
 8953 3757 743D     		je	.L752	#,
 8954 3759 4983F906 		cmp	r9, 6	# tmp814,
 8955 375d 741C     		je	.L753	#,
 854:sieve_extend.c ****     }
 8956              		.loc 1 854 9 is_stmt 1 view .LVU3088
 8957              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
GAS LISTING /tmp/ccgH0yRS.s 			page 249


 8958              		.loc 1 854 56 is_stmt 0 view .LVU3089
 8959 375f C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1090, MEM[base: _720, offset: 0B], _12
 8959      02
 8960              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 8961              		.loc 1 854 94 view .LVU3090
 8962 3764 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1404, %sfp
 8962      2448
 8963 376a C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1092, MEM[base: _720, offset: 8B], tmp1404
 8963      7208
 8964              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 8965              		.loc 1 854 66 view .LVU3091
 8966 3770 4D09F0   		or	r8, r14	# tmp1093, tmp1092
 8967 3773 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1093
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8968              		.loc 1 853 43 is_stmt 1 view .LVU3092
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8969              		.loc 1 853 11 view .LVU3093
 8970 3777 4883C208 		add	rdx, 8	# ivtmp.443,
 8971              	.L753:
 854:sieve_extend.c ****     }
 8972              		.loc 1 854 9 view .LVU3094
 8973              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 8974              		.loc 1 854 56 is_stmt 0 view .LVU3095
 8975 377b C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1095, MEM[base: _720, offset: 0B], _12
 8975      3A
 8976              	.LVL399:
 8977              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 8978              		.loc 1 854 94 view .LVU3096
 8979 3780 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1405, %sfp
 8979      48
 8980 3785 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1097, MEM[base: _720, offset: 8B], tmp1405
 8980      6A08
 8981              	.LVL400:
 8982              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 8983              		.loc 1 854 66 view .LVU3097
 8984 378b 4D09EF   		or	r15, r13	# tmp1098, tmp1097
 8985 378e 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1098
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8986              		.loc 1 853 43 is_stmt 1 view .LVU3098
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 8987              		.loc 1 853 11 view .LVU3099
 8988 3792 4883C208 		add	rdx, 8	# ivtmp.443,
 8989              	.L752:
 854:sieve_extend.c ****     }
 8990              		.loc 1 854 9 view .LVU3100
 8991              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 8992              		.loc 1 854 56 is_stmt 0 view .LVU3101
 8993 3796 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1100, MEM[base: _720, offset: 0B], _12
 8993      12
 8994              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
GAS LISTING /tmp/ccgH0yRS.s 			page 250


 8995              		.loc 1 854 94 view .LVU3102
 8996 379b 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1406, %sfp
 8996      48
 8997 37a0 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1102, MEM[base: _720, offset: 8B], tmp1406
 8997      4A08
 8998              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 8999              		.loc 1 854 66 view .LVU3103
 9000 37a6 4D09CA   		or	r10, r9	# tmp1103, tmp1102
 9001 37a9 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1103
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9002              		.loc 1 853 43 is_stmt 1 view .LVU3104
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9003              		.loc 1 853 11 view .LVU3105
 9004 37ad 4883C208 		add	rdx, 8	# ivtmp.443,
 9005              	.L751:
 854:sieve_extend.c ****     }
 9006              		.loc 1 854 9 view .LVU3106
 9007              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9008              		.loc 1 854 56 is_stmt 0 view .LVU3107
 9009 37b1 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1105, MEM[base: _720, offset: 0B], _12
 9009      02
 9010              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9011              		.loc 1 854 94 view .LVU3108
 9012 37b6 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1407, %sfp
 9012      2448
 9013 37bc C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1107, MEM[base: _720, offset: 8B], tmp1407
 9013      7208
 9014              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9015              		.loc 1 854 66 view .LVU3109
 9016 37c2 4D09F0   		or	r8, r14	# tmp1108, tmp1107
 9017 37c5 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1108
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9018              		.loc 1 853 43 is_stmt 1 view .LVU3110
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9019              		.loc 1 853 11 view .LVU3111
 9020 37c9 4883C208 		add	rdx, 8	# ivtmp.443,
 9021              	.L750:
 854:sieve_extend.c ****     }
 9022              		.loc 1 854 9 view .LVU3112
 9023              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9024              		.loc 1 854 56 is_stmt 0 view .LVU3113
 9025 37cd C4629BF7 		shrx	r15, QWORD PTR [rdx], r12	# tmp1110, MEM[base: _720, offset: 0B], _12
 9025      3A
 9026              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9027              		.loc 1 854 94 view .LVU3114
 9028 37d2 0FB64C24 		movzx	ecx, BYTE PTR 72[rsp]	# tmp1408, %sfp
 9028      48
 9029 37d7 C462F1F7 		shlx	r13, QWORD PTR 8[rdx], rcx	# tmp1112, MEM[base: _720, offset: 8B], tmp1408
 9029      6A08
 9030              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
GAS LISTING /tmp/ccgH0yRS.s 			page 251


 9031              		.loc 1 854 66 view .LVU3115
 9032 37dd 4D09EF   		or	r15, r13	# tmp1113, tmp1112
 9033 37e0 4C893CC2 		mov	QWORD PTR [rdx+rax*8], r15	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1113
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9034              		.loc 1 853 43 is_stmt 1 view .LVU3116
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9035              		.loc 1 853 11 view .LVU3117
 9036 37e4 4883C208 		add	rdx, 8	# ivtmp.443,
 9037              	.L749:
 854:sieve_extend.c ****     }
 9038              		.loc 1 854 9 view .LVU3118
 9039              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9040              		.loc 1 854 56 is_stmt 0 view .LVU3119
 9041 37e8 C4629BF7 		shrx	r10, QWORD PTR [rdx], r12	# tmp1115, MEM[base: _720, offset: 0B], _12
 9041      12
 9042              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9043              		.loc 1 854 94 view .LVU3120
 9044 37ed 0FB67C24 		movzx	edi, BYTE PTR 72[rsp]	# tmp1409, %sfp
 9044      48
 9045 37f2 C462C1F7 		shlx	r9, QWORD PTR 8[rdx], rdi	# tmp1117, MEM[base: _720, offset: 8B], tmp1409
 9045      4A08
 9046              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9047              		.loc 1 854 66 view .LVU3121
 9048 37f8 4D09CA   		or	r10, r9	# tmp1118, tmp1117
 9049 37fb 4C8914C2 		mov	QWORD PTR [rdx+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1118
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9050              		.loc 1 853 43 is_stmt 1 view .LVU3122
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9051              		.loc 1 853 11 view .LVU3123
 9052 37ff 4883C208 		add	rdx, 8	# ivtmp.443,
 9053              	.L748:
 854:sieve_extend.c ****     }
 9054              		.loc 1 854 9 view .LVU3124
 9055              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9056              		.loc 1 854 56 is_stmt 0 view .LVU3125
 9057 3803 C4629BF7 		shrx	r8, QWORD PTR [rdx], r12	# tmp1120, MEM[base: _720, offset: 0B], _12
 9057      02
 9058              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9059              		.loc 1 854 94 view .LVU3126
 9060 3808 440FB65C 		movzx	r11d, BYTE PTR 72[rsp]	# tmp1410, %sfp
 9060      2448
 9061 380e C462A1F7 		shlx	r14, QWORD PTR 8[rdx], r11	# tmp1122, MEM[base: _720, offset: 8B], tmp1410
 9061      7208
 9062              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9063              		.loc 1 854 66 view .LVU3127
 9064 3814 4D09F0   		or	r8, r14	# tmp1123, tmp1122
 9065 3817 4C8904C2 		mov	QWORD PTR [rdx+rax*8], r8	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1123
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9066              		.loc 1 853 43 is_stmt 1 view .LVU3128
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9067              		.loc 1 853 11 view .LVU3129
GAS LISTING /tmp/ccgH0yRS.s 			page 252


 9068 381b 4883C208 		add	rdx, 8	# ivtmp.443,
 9069              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9070              		.loc 1 853 5 is_stmt 0 view .LVU3130
 9071 381f 4839F2   		cmp	rdx, rsi	# ivtmp.443, _729
 9072 3822 0F84C600 		je	.L822	#,
 9072      0000
 9073              	.L836:
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9074              		.loc 1 853 5 view .LVU3131
 9075 3828 448B7C24 		mov	r15d, DWORD PTR 72[rsp]	# _18, %sfp
 9075      48
 9076              	.L596:
 854:sieve_extend.c ****     }
 9077              		.loc 1 854 9 is_stmt 1 view .LVU3132
 9078              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9079              		.loc 1 854 94 is_stmt 0 view .LVU3133
 9080 382d C46281F7 		shlx	r13, QWORD PTR 8[rdx], r15	# tmp756, MEM[base: _720, offset: 8B], _18
 9080      6A08
 9081              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9082              		.loc 1 854 56 view .LVU3134
 9083 3833 C4E29BF7 		shrx	rcx, QWORD PTR [rdx], r12	# tmp754, MEM[base: _720, offset: 0B], _12
 9083      0A
 9084              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9085              		.loc 1 854 66 view .LVU3135
 9086 3838 4C09E9   		or	rcx, r13	# tmp758, tmp756
 9087 383b 4C8D5208 		lea	r10, 8[rdx]	# tmp815,
 9088 383f 48890CC2 		mov	QWORD PTR [rdx+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp758
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9089              		.loc 1 853 43 is_stmt 1 view .LVU3136
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9090              		.loc 1 853 11 view .LVU3137
 854:sieve_extend.c ****     }
 9091              		.loc 1 854 9 view .LVU3138
 9092              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9093              		.loc 1 854 94 is_stmt 0 view .LVU3139
 9094 3843 C44281F7 		shlx	r9, QWORD PTR 8[r10], r15	# tmp988, MEM[base: _720, offset: 8B], _18
 9094      4A08
 9095              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9096              		.loc 1 854 56 view .LVU3140
 9097 3849 C4E29BF7 		shrx	rdi, QWORD PTR 8[rdx], r12	# tmp986, MEM[base: _720, offset: 0B], _12
 9097      7A08
 9098              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9099              		.loc 1 854 66 view .LVU3141
 9100 384f 4C09CF   		or	rdi, r9	# tmp989, tmp988
 9101 3852 4C8D5A10 		lea	r11, 16[rdx]	# ivtmp.443,
 9102 3856 488D4A18 		lea	rcx, 24[rdx]	# ivtmp.443,
 9103 385a 49893CC2 		mov	QWORD PTR [r10+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp989
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9104              		.loc 1 853 43 is_stmt 1 view .LVU3142
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
GAS LISTING /tmp/ccgH0yRS.s 			page 253


 9105              		.loc 1 853 11 view .LVU3143
 854:sieve_extend.c ****     }
 9106              		.loc 1 854 9 view .LVU3144
 9107              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9108              		.loc 1 854 56 is_stmt 0 view .LVU3145
 9109 385e C4629BF7 		shrx	r14, QWORD PTR 16[rdx], r12	# tmp992, MEM[base: _720, offset: 0B], _12
 9109      7210
 9110              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9111              		.loc 1 854 94 view .LVU3146
 9112 3864 C44281F7 		shlx	r8, QWORD PTR 8[r11], r15	# tmp994, MEM[base: _720, offset: 8B], _18
 9112      4308
 9113              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9114              		.loc 1 854 66 view .LVU3147
 9115 386a 4D09C6   		or	r14, r8	# tmp995, tmp994
 9116 386d 4D8934C3 		mov	QWORD PTR [r11+rax*8], r14	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp995
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9117              		.loc 1 853 43 is_stmt 1 view .LVU3148
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9118              		.loc 1 853 11 view .LVU3149
 854:sieve_extend.c ****     }
 9119              		.loc 1 854 9 view .LVU3150
 9120              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9121              		.loc 1 854 56 is_stmt 0 view .LVU3151
 9122 3871 C4629BF7 		shrx	r13, QWORD PTR 24[rdx], r12	# tmp998, MEM[base: _720, offset: 0B], _12
 9122      6A18
 9123              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9124              		.loc 1 854 94 view .LVU3152
 9125 3877 C46281F7 		shlx	r10, QWORD PTR 8[rcx], r15	# tmp1000, MEM[base: _720, offset: 8B], _18
 9125      5108
 9126              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9127              		.loc 1 854 66 view .LVU3153
 9128 387d 4D09D5   		or	r13, r10	# tmp1001, tmp1000
 9129 3880 4C8D4A20 		lea	r9, 32[rdx]	# ivtmp.443,
 9130 3884 4C8D7228 		lea	r14, 40[rdx]	# ivtmp.443,
 9131 3888 4C892CC1 		mov	QWORD PTR [rcx+rax*8], r13	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1001
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9132              		.loc 1 853 43 is_stmt 1 view .LVU3154
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9133              		.loc 1 853 11 view .LVU3155
 854:sieve_extend.c ****     }
 9134              		.loc 1 854 9 view .LVU3156
 9135              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9136              		.loc 1 854 94 is_stmt 0 view .LVU3157
 9137 388c C44281F7 		shlx	r11, QWORD PTR 8[r9], r15	# tmp1006, MEM[base: _720, offset: 8B], _18
 9137      5908
 9138              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9139              		.loc 1 854 56 view .LVU3158
 9140 3892 C4E29BF7 		shrx	rdi, QWORD PTR 32[rdx], r12	# tmp1004, MEM[base: _720, offset: 0B], _12
 9140      7A20
GAS LISTING /tmp/ccgH0yRS.s 			page 254


 9141              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9142              		.loc 1 854 66 view .LVU3159
 9143 3898 4C09DF   		or	rdi, r11	# tmp1007, tmp1006
 9144 389b 49893CC1 		mov	QWORD PTR [r9+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1007
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9145              		.loc 1 853 43 is_stmt 1 view .LVU3160
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9146              		.loc 1 853 11 view .LVU3161
 854:sieve_extend.c ****     }
 9147              		.loc 1 854 9 view .LVU3162
 9148              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9149              		.loc 1 854 56 is_stmt 0 view .LVU3163
 9150 389f C4E29BF7 		shrx	rcx, QWORD PTR 40[rdx], r12	# tmp1010, MEM[base: _720, offset: 0B], _12
 9150      4A28
 9151              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9152              		.loc 1 854 94 view .LVU3164
 9153 38a5 C44281F7 		shlx	r8, QWORD PTR 8[r14], r15	# tmp1012, MEM[base: _720, offset: 8B], _18
 9153      4608
 9154              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9155              		.loc 1 854 66 view .LVU3165
 9156 38ab 4C09C1   		or	rcx, r8	# tmp1013, tmp1012
 9157 38ae 4C8D6A30 		lea	r13, 48[rdx]	# ivtmp.443,
 9158 38b2 4C8D5A38 		lea	r11, 56[rdx]	# ivtmp.443,
 9159 38b6 49890CC6 		mov	QWORD PTR [r14+rax*8], rcx	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1013
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9160              		.loc 1 853 43 is_stmt 1 view .LVU3166
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9161              		.loc 1 853 11 view .LVU3167
 854:sieve_extend.c ****     }
 9162              		.loc 1 854 9 view .LVU3168
 9163              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9164              		.loc 1 854 56 is_stmt 0 view .LVU3169
 9165 38ba C4629BF7 		shrx	r10, QWORD PTR 48[rdx], r12	# tmp1016, MEM[base: _720, offset: 0B], _12
 9165      5230
 9166              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9167              		.loc 1 854 94 view .LVU3170
 9168 38c0 C44281F7 		shlx	r9, QWORD PTR 8[r13], r15	# tmp1018, MEM[base: _720, offset: 8B], _18
 9168      4D08
 9169              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9170              		.loc 1 854 66 view .LVU3171
 9171 38c6 4D09CA   		or	r10, r9	# tmp1019, tmp1018
 9172 38c9 4D8954C5 		mov	QWORD PTR 0[r13+rax*8], r10	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1019
 9172      00
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9173              		.loc 1 853 43 is_stmt 1 view .LVU3172
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9174              		.loc 1 853 11 view .LVU3173
 854:sieve_extend.c ****     }
 9175              		.loc 1 854 9 view .LVU3174
 9176 38ce 4883C240 		add	rdx, 64	# ivtmp.443,
GAS LISTING /tmp/ccgH0yRS.s 			page 255


 9177              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9178              		.loc 1 854 56 is_stmt 0 view .LVU3175
 9179 38d2 C4E29BF7 		shrx	rdi, QWORD PTR -8[rdx], r12	# tmp1022, MEM[base: _720, offset: 0B], _12
 9179      7AF8
 9180              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9181              		.loc 1 854 94 view .LVU3176
 9182 38d8 C44281F7 		shlx	r14, QWORD PTR 8[r11], r15	# tmp1024, MEM[base: _720, offset: 8B], _18
 9182      7308
 9183              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9184              		.loc 1 854 66 view .LVU3177
 9185 38de 4C09F7   		or	rdi, r14	# tmp1025, tmp1024
 9186              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9187              		.loc 1 853 5 view .LVU3178
 9188 38e1 4839F2   		cmp	rdx, rsi	# ivtmp.443, _729
 9189              	# sieve_extend.c:854:         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[
 854:sieve_extend.c ****     }
 9190              		.loc 1 854 66 view .LVU3179
 9191 38e4 49893CC3 		mov	QWORD PTR [r11+rax*8], rdi	# MEM[base: _720, index: _722, step: 8, offset: 0B], tmp1025
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9192              		.loc 1 853 43 is_stmt 1 view .LVU3180
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9193              		.loc 1 853 11 view .LVU3181
 9194              	# sieve_extend.c:853:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9195              		.loc 1 853 5 is_stmt 0 view .LVU3182
 9196 38e8 0F853FFF 		jne	.L596	#,
 9196      FFFF
 9197              	.L822:
 853:sieve_extend.c ****         bitarray[copy_word] = (bitarray[source_word  ] >> shift) | (bitarray[source_word+1 ] << shi
 9198              		.loc 1 853 5 view .LVU3183
 9199 38ee 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# aligned_copy_word, %sfp
 9199      40
 9200 38f3 4C8D5201 		lea	r10, 1[rdx]	# ivtmp.435,
 9201 38f7 E9E9F6FF 		jmp	.L597	#
 9201      FF
 9202              	.LVL401:
 9203 38fc 0F1F4000 		.p2align 4,,7
 9204              		.p2align 3
 9205              	.L611:
 9206              	# sieve_extend.c:847:     source_word += distance;
 847:sieve_extend.c ****     copy_word += distance;
 9207              		.loc 1 847 17 view .LVU3184
 9208 3900 4889C6   		mov	rsi, rax	# copy_word, ivtmp.435
 9209              	# sieve_extend.c:859:     source_word = copy_word - size; // recalibrate
 859:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 9210              		.loc 1 859 17 view .LVU3185
 9211 3903 4D89EE   		mov	r14, r13	# source_word, source_word
 9212 3906 E906F9FF 		jmp	.L603	#
 9212      FF
 9213              	.LVL402:
 9214              	.L848:
 9215              	.LBB408:
 9216              	.LBB389:
GAS LISTING /tmp/ccgH0yRS.s 			page 256


 9217              	.LBB386:
 690:sieve_extend.c ****         bitword_t source1 = bitarray[source_word+1];
 9218              		.loc 1 690 9 is_stmt 1 view .LVU3186
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 9219              		.loc 1 691 9 view .LVU3187
 9220              	# sieve_extend.c:691:         bitword_t source1 = bitarray[source_word+1];
 691:sieve_extend.c ****         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 9221              		.loc 1 691 19 is_stmt 0 view .LVU3188
 9222 390b 4C8B4A08 		mov	r9, QWORD PTR 8[rdx]	# source1, MEM[base: _743, offset: 8B]
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9223              		.loc 1 692 9 is_stmt 1 view .LVU3189
 9224              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9225              		.loc 1 692 42 is_stmt 0 view .LVU3190
 9226 390f C4E29BF7 		shrx	rsi, QWORD PTR [rdx], r12	# tmp1161, MEM[base: _743, offset: 0B], _12
 9226      32
 9227              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9228              		.loc 1 692 63 view .LVU3191
 9229 3914 4589FA   		mov	r10d, r15d	# tmp1425, _18
 9230 3917 C442A9F7 		shlx	r8, r9, r10	# tmp1162, source1, tmp1425
 9230      C1
 9231              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9232              		.loc 1 692 52 view .LVU3192
 9233 391c 4C09C6   		or	rsi, r8	# tmp1163, tmp1162
 9234              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9235              		.loc 1 692 63 view .LVU3193
 9236 391f 4589FE   		mov	r14d, r15d	# _18, shift_flipped
 9237              	# sieve_extend.c:692:         bitarray[copy_word  ] = (source0 >> shift) | (source1 << shift_flippe
 692:sieve_extend.c ****         bitword_t source2 = bitarray[source_word+2];
 9238              		.loc 1 692 52 view .LVU3194
 9239 3922 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset: 
 9240              	.LVL403:
 693:sieve_extend.c ****         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 9241              		.loc 1 693 9 is_stmt 1 view .LVU3195
 694:sieve_extend.c ****         copy_word += 2;
 9242              		.loc 1 694 9 view .LVU3196
 9243              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 9244              		.loc 1 694 42 is_stmt 0 view .LVU3197
 9245 3926 C4429BF7 		shrx	r9, r9, r12	# tmp1166, source1, _12
 9245      C9
 9246              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 9247              		.loc 1 694 63 view .LVU3198
 9248 392b 488B5210 		mov	rdx, QWORD PTR 16[rdx]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 9249 392f C46289F7 		shlx	r10, rdx, r14	# tmp1165, MEM[base: _743, offset: 16B], tmp1426
 9249      D2
 9250              	# sieve_extend.c:694:         bitarray[copy_word+1] = (source1 >> shift) | (source2 << shift_flippe
 694:sieve_extend.c ****         copy_word += 2;
 9251              		.loc 1 694 52 view .LVU3199
 9252 3934 4D09CA   		or	r10, r9	# tmp1167, tmp1166
 9253 3937 488D5120 		lea	rdx, 32[rcx]	# ivtmp.466,
 9254 393b 4C8954FB 		mov	QWORD PTR 8[rbx+rdi*8], r10	# MEM[base: bitarray_67(D), index: copy_word_412, step: 8, offset:
 9254      08
GAS LISTING /tmp/ccgH0yRS.s 			page 257


 9255              	.LVL404:
 695:sieve_extend.c ****         source_word += 2;
 9256              		.loc 1 695 9 is_stmt 1 view .LVU3200
 9257              	# sieve_extend.c:695:         copy_word += 2;
 695:sieve_extend.c ****         source_word += 2;
 9258              		.loc 1 695 19 is_stmt 0 view .LVU3201
 9259 3940 488D7804 		lea	rdi, 4[rax]	# copy_word,
 696:sieve_extend.c ****         distance += 2;
 9260              		.loc 1 696 9 is_stmt 1 view .LVU3202
 697:sieve_extend.c ****     }
 9261              		.loc 1 697 9 view .LVU3203
 697:sieve_extend.c ****     }
 9262              		.loc 1 697 9 is_stmt 0 view .LVU3204
 9263              	.LBE386:
 689:sieve_extend.c ****         bitword_t source0 = bitarray[source_word  ];
 9264              		.loc 1 689 11 is_stmt 1 view .LVU3205
 9265 3944 E94EFCFF 		jmp	.L774	#
 9265      FF
 9266              	.LBE389:
 9267              	.LBE408:
 9268              		.cfi_endproc
 9269              	.LFE71:
 9271              		.section	.rodata.str1.1,"aMS",@progbits,1
 9272              	.LC4:
 9273 0000 25336A75 		.string	"%3ju "
 9273      2000
 9274              	.LC5:
 9275 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 9275      6E642025 
 9275      6A752070 
 9275      72696D65 
 9275      7320756E 
 9276              		.text
 9277 3949 0F1F8000 		.p2align 4
 9277      000000
 9279              	show_primes.isra.0:
 9280              	.LVL405:
 9281              	.LFB86:
1030:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 9282              		.loc 1 1030 13 view -0
 9283              		.cfi_startproc
 9284              	.LBB409:
1032:sieve_extend.c ****         primeCount++;
 9285              		.loc 1 1032 30 view .LVU3207
 9286              	.LBE409:
 9287              	# sieve_extend.c:1030: static void show_primes(struct sieve_state *sieve, counter_t maxFactor) {
1030:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 9288              		.loc 1 1030 13 is_stmt 0 view .LVU3208
 9289 3950 4157     		push	r15	#
 9290              		.cfi_def_cfa_offset 16
 9291              		.cfi_offset 15, -16
 9292 3952 4156     		push	r14	#
 9293              		.cfi_def_cfa_offset 24
 9294              		.cfi_offset 14, -24
 9295 3954 4155     		push	r13	#
 9296              		.cfi_def_cfa_offset 32
 9297              		.cfi_offset 13, -32
GAS LISTING /tmp/ccgH0yRS.s 			page 258


 9298 3956 4154     		push	r12	#
 9299              		.cfi_def_cfa_offset 40
 9300              		.cfi_offset 12, -40
 9301 3958 4989F4   		mov	r12, rsi	# ISRA.79, tmp168
 9302 395b 55       		push	rbp	#
 9303              		.cfi_def_cfa_offset 48
 9304              		.cfi_offset 6, -48
 9305 395c 53       		push	rbx	#
 9306              		.cfi_def_cfa_offset 56
 9307              		.cfi_offset 3, -56
 9308 395d 488D6424 		lea	rsp, -8[rsp]	#,
 9308      F8
 9309              		.cfi_def_cfa_offset 64
 9310              	.LBB426:
 9311              	# sieve_extend.c:1032:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1032:sieve_extend.c ****         primeCount++;
 9312              		.loc 1 1032 44 view .LVU3209
 9313 3962 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.79_32(D)
 9314              	# sieve_extend.c:1032:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1032:sieve_extend.c ****         primeCount++;
 9315              		.loc 1 1032 5 view .LVU3210
 9316 3965 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 9317 3969 0F867501 		jbe	.L856	#,
 9317      0000
 9318              	# sieve_extend.c:1034:         if (factor < maxFactor/2) {
1034:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9319              		.loc 1 1034 31 view .LVU3211
 9320 396f 48D1EA   		shr	rdx	# maxFactor
 9321              	.LVL406:
1034:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9322              		.loc 1 1034 31 view .LVU3212
 9323 3972 4989FD   		mov	r13, rdi	# ISRA.78, tmp167
 9324              	# sieve_extend.c:1032:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1032:sieve_extend.c ****         primeCount++;
 9325              		.loc 1 1032 20 view .LVU3213
 9326 3975 BB010000 		mov	ebx, 1	# factor,
 9326      00
 9327              	# sieve_extend.c:1034:         if (factor < maxFactor/2) {
1034:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9328              		.loc 1 1034 31 view .LVU3214
 9329 397a 4889D5   		mov	rbp, rdx	# _4, maxFactor
 9330              	.LBE426:
 9331              	# sieve_extend.c:1031:     counter_t primeCount = 1;    // We already have 2
1031:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 9332              		.loc 1 1031 15 view .LVU3215
 9333 397d 41BF0100 		mov	r15d, 1	# primeCount,
 9333      0000
 9334              	.LBB427:
 9335              	.LBB410:
 9336              	.LBB411:
 9337              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9338              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
GAS LISTING /tmp/ccgH0yRS.s 			page 259


   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
GAS LISTING /tmp/ccgH0yRS.s 			page 260


  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 9339              		.loc 3 107 10 view .LVU3216
 9340 3983 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 9340      CCCCCCCC 
 9340      CCCC
 9341              	.LVL407:
 9342 398d 0F1F00   		.p2align 4
 9343              		.p2align 3
 9344              	.L855:
 9345              		.loc 3 107 10 view .LVU3217
 9346              	.LBE411:
 9347              	.LBE410:
1033:sieve_extend.c ****         if (factor < maxFactor/2) {
GAS LISTING /tmp/ccgH0yRS.s 			page 261


 9348              		.loc 1 1033 9 is_stmt 1 view .LVU3218
 9349              	# sieve_extend.c:1033:         primeCount++;
1033:sieve_extend.c ****         if (factor < maxFactor/2) {
 9350              		.loc 1 1033 19 is_stmt 0 view .LVU3219
 9351 3990 4983C701 		add	r15, 1	# primeCount,
 9352              	.LVL408:
1034:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9353              		.loc 1 1034 9 is_stmt 1 view .LVU3220
 9354              	# sieve_extend.c:1034:         if (factor < maxFactor/2) {
1034:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 9355              		.loc 1 1034 12 is_stmt 0 view .LVU3221
 9356 3994 4839DD   		cmp	rbp, rbx	# _4, factor
 9357 3997 0F87FB00 		ja	.L879	#,
 9357      0000
 9358              	.L851:
1032:sieve_extend.c ****         primeCount++;
 9359              		.loc 1 1032 52 is_stmt 1 view .LVU3222
 9360              	.LVL409:
 9361              	# sieve_extend.c:1032:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1032:sieve_extend.c ****         primeCount++;
 9362              		.loc 1 1032 61 is_stmt 0 view .LVU3223
 9363 399d 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.78_33(D)
 9364 39a1 4883C301 		add	rbx, 1	# factor,
 9365              	.LVL410:
 9366              	.L878:
 9367              	.LBB416:
 9368              	.LBI416:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9369              		.loc 1 122 25 is_stmt 1 view .LVU3224
 9370              	.LBB417:
 123:sieve_extend.c ****     return index;
 9371              		.loc 1 123 5 view .LVU3225
 123:sieve_extend.c ****     return index;
 9372              		.loc 1 123 11 view .LVU3226
 9373              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9374              		.loc 1 123 21 is_stmt 0 view .LVU3227
 9375 39a5 4889D9   		mov	rcx, rbx	# tmp124, factor
 9376 39a8 48C1E906 		shr	rcx, 6	# tmp124,
 9377              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9378              		.loc 1 123 12 view .LVU3228
 9379 39ac 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 9380              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9381              		.loc 1 123 11 view .LVU3229
 9382 39b0 490FA3D9 		bt	r9, rbx	# *_39, factor
 9383 39b4 0F83A600 		jnc	.L853	#,
 9383      0000
 123:sieve_extend.c ****     return index;
 9384              		.loc 1 123 58 is_stmt 1 view .LVU3230
 9385              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9386              		.loc 1 123 63 is_stmt 0 view .LVU3231
 9387 39ba 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 9388              	.LVL411:
 9389              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccgH0yRS.s 			page 262


 123:sieve_extend.c ****     return index;
 9390              		.loc 1 123 21 view .LVU3232
 9391 39be 4D89D3   		mov	r11, r10	# tmp129, factor
 9392              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9393              		.loc 1 123 63 view .LVU3233
 9394 39c1 4C89D3   		mov	rbx, r10	# factor, tmp138
 123:sieve_extend.c ****     return index;
 9395              		.loc 1 123 11 is_stmt 1 view .LVU3234
 9396              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9397              		.loc 1 123 21 is_stmt 0 view .LVU3235
 9398 39c4 49C1EB06 		shr	r11, 6	# tmp129,
 9399              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9400              		.loc 1 123 12 view .LVU3236
 9401 39c8 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9402              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9403              		.loc 1 123 11 view .LVU3237
 9404 39cc 4C0FA3D0 		bt	rax, r10	# *_16, factor
 9405 39d0 0F838A00 		jnc	.L853	#,
 9405      0000
 123:sieve_extend.c ****     return index;
 9406              		.loc 1 123 58 is_stmt 1 view .LVU3238
 9407              	.LVL412:
 9408              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9409              		.loc 1 123 63 is_stmt 0 view .LVU3239
 9410 39d6 4883C301 		add	rbx, 1	# factor,
 9411              	.LVL413:
 123:sieve_extend.c ****     return index;
 9412              		.loc 1 123 11 is_stmt 1 view .LVU3240
 9413              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9414              		.loc 1 123 21 is_stmt 0 view .LVU3241
 9415 39da 4889DA   		mov	rdx, rbx	# tmp139, factor
 9416 39dd 48C1EA06 		shr	rdx, 6	# tmp139,
 9417              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9418              		.loc 1 123 12 view .LVU3242
 9419 39e1 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 9420              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9421              		.loc 1 123 11 view .LVU3243
 9422 39e5 480FA3DF 		bt	rdi, rbx	# *_16, factor
 9423 39e9 7375     		jnc	.L853	#,
 123:sieve_extend.c ****     return index;
 9424              		.loc 1 123 58 is_stmt 1 view .LVU3244
 9425              	.LVL414:
 9426              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9427              		.loc 1 123 63 is_stmt 0 view .LVU3245
 9428 39eb 498D5A02 		lea	rbx, 2[r10]	# factor,
 9429              	.LVL415:
 123:sieve_extend.c ****     return index;
 9430              		.loc 1 123 11 is_stmt 1 view .LVU3246
GAS LISTING /tmp/ccgH0yRS.s 			page 263


 9431              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9432              		.loc 1 123 21 is_stmt 0 view .LVU3247
 9433 39ef 4889D9   		mov	rcx, rbx	# tmp143, factor
 9434 39f2 48C1E906 		shr	rcx, 6	# tmp143,
 9435              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9436              		.loc 1 123 12 view .LVU3248
 9437 39f6 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 9438              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9439              		.loc 1 123 11 view .LVU3249
 9440 39fa 490FA3D9 		bt	r9, rbx	# *_16, factor
 9441 39fe 7360     		jnc	.L853	#,
 123:sieve_extend.c ****     return index;
 9442              		.loc 1 123 58 is_stmt 1 view .LVU3250
 9443              	.LVL416:
 9444              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9445              		.loc 1 123 63 is_stmt 0 view .LVU3251
 9446 3a00 498D5A03 		lea	rbx, 3[r10]	# factor,
 9447              	.LVL417:
 123:sieve_extend.c ****     return index;
 9448              		.loc 1 123 11 is_stmt 1 view .LVU3252
 9449              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9450              		.loc 1 123 21 is_stmt 0 view .LVU3253
 9451 3a04 4989DB   		mov	r11, rbx	# tmp147, factor
 9452 3a07 49C1EB06 		shr	r11, 6	# tmp147,
 9453              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9454              		.loc 1 123 12 view .LVU3254
 9455 3a0b 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9456              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9457              		.loc 1 123 11 view .LVU3255
 9458 3a0f 480FA3D8 		bt	rax, rbx	# *_16, factor
 9459 3a13 734B     		jnc	.L853	#,
 123:sieve_extend.c ****     return index;
 9460              		.loc 1 123 58 is_stmt 1 view .LVU3256
 9461              	.LVL418:
 9462              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9463              		.loc 1 123 63 is_stmt 0 view .LVU3257
 9464 3a15 498D5A04 		lea	rbx, 4[r10]	# factor,
 9465              	.LVL419:
 123:sieve_extend.c ****     return index;
 9466              		.loc 1 123 11 is_stmt 1 view .LVU3258
 9467              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9468              		.loc 1 123 21 is_stmt 0 view .LVU3259
 9469 3a19 4889DA   		mov	rdx, rbx	# tmp151, factor
 9470 3a1c 48C1EA06 		shr	rdx, 6	# tmp151,
 9471              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9472              		.loc 1 123 12 view .LVU3260
 9473 3a20 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
GAS LISTING /tmp/ccgH0yRS.s 			page 264


 9474              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9475              		.loc 1 123 11 view .LVU3261
 9476 3a24 480FA3DF 		bt	rdi, rbx	# *_16, factor
 9477 3a28 7336     		jnc	.L853	#,
 123:sieve_extend.c ****     return index;
 9478              		.loc 1 123 58 is_stmt 1 view .LVU3262
 9479              	.LVL420:
 9480              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9481              		.loc 1 123 63 is_stmt 0 view .LVU3263
 9482 3a2a 498D5A05 		lea	rbx, 5[r10]	# factor,
 9483              	.LVL421:
 123:sieve_extend.c ****     return index;
 9484              		.loc 1 123 11 is_stmt 1 view .LVU3264
 9485              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9486              		.loc 1 123 21 is_stmt 0 view .LVU3265
 9487 3a2e 4889D9   		mov	rcx, rbx	# tmp155, factor
 9488 3a31 48C1E906 		shr	rcx, 6	# tmp155,
 9489              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9490              		.loc 1 123 12 view .LVU3266
 9491 3a35 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 9492              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9493              		.loc 1 123 11 view .LVU3267
 9494 3a39 490FA3D9 		bt	r9, rbx	# *_16, factor
 9495 3a3d 7321     		jnc	.L853	#,
 123:sieve_extend.c ****     return index;
 9496              		.loc 1 123 58 is_stmt 1 view .LVU3268
 9497              	.LVL422:
 9498              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9499              		.loc 1 123 63 is_stmt 0 view .LVU3269
 9500 3a3f 498D5A06 		lea	rbx, 6[r10]	# factor,
 9501              	.LVL423:
 123:sieve_extend.c ****     return index;
 9502              		.loc 1 123 11 is_stmt 1 view .LVU3270
 9503              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9504              		.loc 1 123 21 is_stmt 0 view .LVU3271
 9505 3a43 4989DB   		mov	r11, rbx	# tmp159, factor
 9506 3a46 49C1EB06 		shr	r11, 6	# tmp159,
 9507              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9508              		.loc 1 123 12 view .LVU3272
 9509 3a4a 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 9510              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9511              		.loc 1 123 11 view .LVU3273
 9512 3a4e 480FA3D8 		bt	rax, rbx	# *_16, factor
 9513 3a52 730C     		jnc	.L853	#,
 123:sieve_extend.c ****     return index;
 9514              		.loc 1 123 58 is_stmt 1 view .LVU3274
 9515              	.LVL424:
 9516              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccgH0yRS.s 			page 265


 123:sieve_extend.c ****     return index;
 9517              		.loc 1 123 63 is_stmt 0 view .LVU3275
 9518 3a54 498D5A07 		lea	rbx, 7[r10]	# factor,
 9519              	.LVL425:
 123:sieve_extend.c ****     return index;
 9520              		.loc 1 123 11 is_stmt 1 view .LVU3276
 9521 3a58 E948FFFF 		jmp	.L878	#
 9521      FF
 9522 3a5d 0F1F00   		.p2align 4,,7
 9523              		.p2align 3
 9524              	.L853:
 9525              	.LVL426:
 123:sieve_extend.c ****     return index;
 9526              		.loc 1 123 11 is_stmt 0 view .LVU3277
 9527              	.LBE417:
 9528              	.LBE416:
1032:sieve_extend.c ****         primeCount++;
 9529              		.loc 1 1032 30 is_stmt 1 view .LVU3278
 9530              	# sieve_extend.c:1032:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1032:sieve_extend.c ****         primeCount++;
 9531              		.loc 1 1032 5 is_stmt 0 view .LVU3279
 9532 3a60 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 9533 3a63 0F8227FF 		jb	.L855	#,
 9533      FFFF
 9534              	.LVL427:
 9535              	.L850:
1032:sieve_extend.c ****         primeCount++;
 9536              		.loc 1 1032 5 view .LVU3280
 9537              	.LBE427:
1039:sieve_extend.c **** }
 9538              		.loc 1 1039 5 is_stmt 1 view .LVU3281
 9539              	.LBB428:
 9540              	.LBI428:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9541              		.loc 3 105 1 view .LVU3282
 9542              	.LBB429:
 9543              		.loc 3 107 3 view .LVU3283
 9544              	.LBE429:
 9545              	.LBE428:
 9546              	# sieve_extend.c:1040: }
1040:sieve_extend.c **** 
 9547              		.loc 1 1040 1 is_stmt 0 view .LVU3284
 9548 3a69 488D6424 		lea	rsp, 8[rsp]	#,
 9548      08
 9549              		.cfi_remember_state
 9550              		.cfi_def_cfa_offset 56
 9551              	.LBB433:
 9552              	.LBB430:
 9553              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9554              		.loc 3 107 10 view .LVU3285
 9555 3a6e 4C89FA   		mov	rdx, r15	#, primeCount
 9556              	.LBE430:
 9557              	.LBE433:
 9558              	# sieve_extend.c:1040: }
1040:sieve_extend.c **** 
 9559              		.loc 1 1040 1 view .LVU3286
 9560 3a71 5B       		pop	rbx	#
GAS LISTING /tmp/ccgH0yRS.s 			page 266


 9561              		.cfi_def_cfa_offset 48
 9562              	# sieve_extend.c:1039:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_
1039:sieve_extend.c **** }
 9563              		.loc 1 1039 5 view .LVU3287
 9564 3a72 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 9564      01
 9565              	.LBB434:
 9566              	.LBB431:
 9567              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9568              		.loc 3 107 10 view .LVU3288
 9569 3a77 BF010000 		mov	edi, 1	#,
 9569      00
 9570 3a7c 31C0     		xor	eax, eax	#
 9571 3a7e 488D3500 		lea	rsi, .LC5[rip]	#,
 9571      000000
 9572              	.LBE431:
 9573              	.LBE434:
 9574              	# sieve_extend.c:1040: }
1040:sieve_extend.c **** 
 9575              		.loc 1 1040 1 view .LVU3289
 9576 3a85 5D       		pop	rbp	#
 9577              		.cfi_def_cfa_offset 40
 9578 3a86 415C     		pop	r12	#
 9579              		.cfi_def_cfa_offset 32
 9580 3a88 415D     		pop	r13	#
 9581              		.cfi_def_cfa_offset 24
 9582 3a8a 415E     		pop	r14	#
 9583              		.cfi_def_cfa_offset 16
 9584 3a8c 415F     		pop	r15	#
 9585              		.cfi_def_cfa_offset 8
 9586              	.LBB435:
 9587              	.LBB432:
 9588              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9589              		.loc 3 107 10 view .LVU3290
 9590 3a8e E9000000 		jmp	__printf_chk@PLT	#
 9590      00
 9591              	.LVL428:
 9592              		.p2align 4,,7
 9593 3a93 0F1F4400 		.p2align 3
 9593      00
 9594              	.L879:
 9595              		.cfi_restore_state
 9596              		.loc 3 107 10 view .LVU3291
 9597              	.LBE432:
 9598              	.LBE435:
 9599              	.LBB436:
1035:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 9600              		.loc 1 1035 13 is_stmt 1 view .LVU3292
 9601              	.LBB418:
 9602              	.LBI410:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9603              		.loc 3 105 1 view .LVU3293
 9604              	.LBB412:
 9605              		.loc 3 107 3 view .LVU3294
 9606              	.LBE412:
 9607              	.LBE418:
 9608              	# sieve_extend.c:1035:             printf("%3ju ",(uintmax_t)factor*2+1);
GAS LISTING /tmp/ccgH0yRS.s 			page 267


1035:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 9609              		.loc 1 1035 13 is_stmt 0 view .LVU3295
 9610 3a98 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 9610      01
 9611              	.LBB419:
 9612              	.LBB413:
 9613              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9614              		.loc 3 107 10 view .LVU3296
 9615 3a9d BF010000 		mov	edi, 1	#,
 9615      00
 9616 3aa2 31C0     		xor	eax, eax	#
 9617 3aa4 488D3500 		lea	rsi, .LC4[rip]	#,
 9617      000000
 9618 3aab E8000000 		call	__printf_chk@PLT	#
 9618      00
 9619              	.LVL429:
 9620              		.loc 3 107 10 view .LVU3297
 9621              	.LBE413:
 9622              	.LBE419:
1036:sieve_extend.c ****         }
 9623              		.loc 1 1036 13 is_stmt 1 view .LVU3298
 9624              	.LBB420:
 9625              	.LBB414:
 9626              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9627              		.loc 3 107 10 is_stmt 0 view .LVU3299
 9628 3ab0 4C89F8   		mov	rax, r15	# tmp120, primeCount
 9629              	.LBE414:
 9630              	.LBE420:
 9631              	# sieve_extend.c:1036:             if (primeCount % 10 == 0) printf("\n");
1036:sieve_extend.c ****         }
 9632              		.loc 1 1036 16 view .LVU3300
 9633 3ab3 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 9633      99999999 
 9633      9919
 9634              	.LBB421:
 9635              	.LBB415:
 9636              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9637              		.loc 3 107 10 view .LVU3301
 9638 3abd 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 9639 3ac1 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 9639      D001
 9640              	.LBE415:
 9641              	.LBE421:
 9642              	# sieve_extend.c:1036:             if (primeCount % 10 == 0) printf("\n");
1036:sieve_extend.c ****         }
 9643              		.loc 1 1036 16 view .LVU3302
 9644 3ac7 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 9645 3aca 760C     		jbe	.L852	#,
 9646              	.L877:
 9647 3acc 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.79_32(D)
 9648              	.LBB422:
 9649              	.LBB423:
 9650              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9651              		.loc 3 107 10 view .LVU3303
 9652 3ad0 E9C8FEFF 		jmp	.L851	#
 9652      FF
 9653              		.p2align 4,,7
GAS LISTING /tmp/ccgH0yRS.s 			page 268


 9654 3ad5 0F1F00   		.p2align 3
 9655              	.L852:
 9656              	.LBE423:
 9657              	.LBE422:
1036:sieve_extend.c ****         }
 9658              		.loc 1 1036 39 is_stmt 1 view .LVU3304
 9659              	.LVL430:
 9660              	.LBB425:
 9661              	.LBI422:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 9662              		.loc 3 105 1 view .LVU3305
 9663              	.LBB424:
 9664              		.loc 3 107 3 view .LVU3306
 9665              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 9666              		.loc 3 107 10 is_stmt 0 view .LVU3307
 9667 3ad8 BF0A0000 		mov	edi, 10	#,
 9667      00
 9668 3add E8000000 		call	putchar@PLT	#
 9668      00
 9669              	.LVL431:
 9670 3ae2 EBE8     		jmp	.L877	#
 9671              	.LVL432:
 9672              	.L856:
 9673              		.loc 3 107 10 view .LVU3308
 9674              	.LBE424:
 9675              	.LBE425:
 9676              	.LBE436:
 9677              	# sieve_extend.c:1031:     counter_t primeCount = 1;    // We already have 2
1031:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 9678              		.loc 1 1031 15 view .LVU3309
 9679 3ae4 41BF0100 		mov	r15d, 1	# primeCount,
 9679      0000
 9680 3aea E97AFFFF 		jmp	.L850	#
 9680      FF
 9681              		.cfi_endproc
 9682              	.LFE86:
 9684 3aef 90       		.p2align 4
 9686              	sieve:
 9687              	.LVL433:
 9688              	.LFB75:
1008:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9689              		.loc 1 1008 86 is_stmt 1 view -0
 9690              		.cfi_startproc
1009:sieve_extend.c ****     counter_t prime     = 0;
 9691              		.loc 1 1009 5 view .LVU3311
 9692              	# sieve_extend.c:1008: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1008:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9693              		.loc 1 1008 86 is_stmt 0 view .LVU3312
 9694 3af0 4157     		push	r15	#
 9695              		.cfi_def_cfa_offset 16
 9696              		.cfi_offset 15, -16
 9697 3af2 4156     		push	r14	#
 9698              		.cfi_def_cfa_offset 24
 9699              		.cfi_offset 14, -24
 9700 3af4 4155     		push	r13	#
 9701              		.cfi_def_cfa_offset 32
 9702              		.cfi_offset 13, -32
GAS LISTING /tmp/ccgH0yRS.s 			page 269


 9703 3af6 4154     		push	r12	#
 9704              		.cfi_def_cfa_offset 40
 9705              		.cfi_offset 12, -40
 9706 3af8 55       		push	rbp	#
 9707              		.cfi_def_cfa_offset 48
 9708              		.cfi_offset 6, -48
 9709 3af9 53       		push	rbx	#
 9710              		.cfi_def_cfa_offset 56
 9711              		.cfi_offset 3, -56
 9712 3afa 4889FB   		mov	rbx, rdi	# maxints, tmp1244
 9713              	.LVL434:
 9714              	.LBB511:
 9715              	.LBI511:
 103:sieve_extend.c ****     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 9716              		.loc 1 103 28 is_stmt 1 view .LVU3313
 9717              	.LBB512:
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9718              		.loc 1 104 5 view .LVU3314
 9719              	# sieve_extend.c:104:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9720              		.loc 1 104 33 is_stmt 0 view .LVU3315
 9721 3afd BF080000 		mov	edi, 8	#,
 9721      00
 9722              	.LVL435:
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9723              		.loc 1 104 33 view .LVU3316
 9724              	.LBE512:
 9725              	.LBE511:
 9726              	# sieve_extend.c:1008: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1008:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9727              		.loc 1 1008 86 view .LVU3317
 9728 3b02 488D6424 		lea	rsp, -104[rsp]	#,
 9728      98
 9729              		.cfi_def_cfa_offset 160
 9730              	.LBB516:
 9731              	.LBB513:
 9732              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9733              		.loc 1 105 22 view .LVU3318
 9734 3b07 4989DE   		mov	r14, rbx	# prephitmp_1432, maxints
 9735 3b0a 49D1EE   		shr	r14	# prephitmp_1432
 9736              	.LBE513:
 9737              	.LBE516:
 9738              	# sieve_extend.c:1008: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1008:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 9739              		.loc 1 1008 86 view .LVU3319
 9740 3b0d 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, tmp1245
 9740      40
 9741              	.LBB517:
 9742              	.LBB514:
 9743              	# sieve_extend.c:104:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9744              		.loc 1 104 33 view .LVU3320
 9745 3b12 BE180000 		mov	esi, 24	#,
 9745      00
 9746              	.LVL436:
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
GAS LISTING /tmp/ccgH0yRS.s 			page 270


 9747              		.loc 1 104 33 view .LVU3321
 9748 3b17 E8000000 		call	aligned_alloc@PLT	#
 9748      00
 9749              	.LVL437:
 9750              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9751              		.loc 1 105 22 view .LVU3322
 9752 3b1c 498DB600 		lea	rsi, 1024[r14]	# tmp549,
 9752      040000
 9753              	# sieve_extend.c:107:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9754              		.loc 1 107 23 view .LVU3323
 9755 3b23 BF800000 		mov	edi, 128	#,
 9755      00
 9756              	# sieve_extend.c:104:     struct sieve_state *sieve = aligned_alloc(8, sizeof(struct sieve_state));
 104:sieve_extend.c ****     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesize*8) * anticiped_cache
 9757              		.loc 1 104 33 view .LVU3324
 9758 3b28 48894424 		mov	QWORD PTR 48[rsp], rax	# %sfp, <retval>
 9758      30
 9759 3b2d 4989C7   		mov	r15, rax	# <retval>, tmp1246
 9760              	.LVL438:
 105:sieve_extend.c **** 
 9761              		.loc 1 105 5 is_stmt 1 view .LVU3325
 9762              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9763              		.loc 1 105 22 is_stmt 0 view .LVU3326
 9764 3b30 48C1EE0A 		shr	rsi, 10	# tmp550,
 9765              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9766              		.loc 1 105 12 view .LVU3327
 9767 3b34 48C1E607 		sal	rsi, 7	# memSize,
 9768              	# sieve_extend.c:105:     size_t memSize = ceiling(1+((size_t)size/2), anticiped_cache_line_bytesiz
 105:sieve_extend.c **** 
 9769              		.loc 1 105 22 view .LVU3328
 9770 3b38 4C897424 		mov	QWORD PTR 8[rsp], r14	# %sfp, prephitmp_1432
 9770      08
 9771              	.LVL439:
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9772              		.loc 1 107 5 is_stmt 1 view .LVU3329
 9773              	# sieve_extend.c:107:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9774              		.loc 1 107 23 is_stmt 0 view .LVU3330
 9775 3b3d E8000000 		call	aligned_alloc@PLT	#
 9775      00
 9776              	.LVL440:
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9777              		.loc 1 107 23 view .LVU3331
 9778 3b42 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, _97
 9778      38
 9779              	.LBE514:
 9780              	.LBE517:
 9781              	.LBB518:
 9782              	.LBB519:
 9783              	# sieve_extend.c:979:     for (;range_stop < block_stop;) {
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9784              		.loc 1 979 5 view .LVU3332
 9785 3b47 4D85F6   		test	r14, r14	# prephitmp_1432
GAS LISTING /tmp/ccgH0yRS.s 			page 271


 9786              	.LBE519:
 9787              	.LBE518:
 9788              	.LBB595:
 9789              	.LBB515:
 9790              	# sieve_extend.c:107:     sieve->bitarray = aligned_alloc((size_t)anticiped_cache_line_bytesize, (s
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 9791              		.loc 1 107 21 view .LVU3333
 9792 3b4a 498907   		mov	QWORD PTR [r15], rax	# sieve_92->bitarray, _97
 108:sieve_extend.c ****     sieve->size     = size;
 9793              		.loc 1 108 5 is_stmt 1 view .LVU3334
 9794              	# sieve_extend.c:108:     sieve->bits     = size >> 1;
 108:sieve_extend.c ****     sieve->size     = size;
 9795              		.loc 1 108 21 is_stmt 0 view .LVU3335
 9796 3b4d 4D897708 		mov	QWORD PTR 8[r15], r14	# sieve_92->bits, prephitmp_1432
 109:sieve_extend.c **** 
 9797              		.loc 1 109 5 is_stmt 1 view .LVU3336
 9798              	# sieve_extend.c:109:     sieve->size     = size;
 109:sieve_extend.c **** 
 9799              		.loc 1 109 21 is_stmt 0 view .LVU3337
 9800 3b51 49895F10 		mov	QWORD PTR 16[r15], rbx	# sieve_92->size, maxints
 113:sieve_extend.c **** }
 9801              		.loc 1 113 5 is_stmt 1 view .LVU3338
 9802              	.LVL441:
 113:sieve_extend.c **** }
 9803              		.loc 1 113 5 is_stmt 0 view .LVU3339
 9804              	.LBE515:
 9805              	.LBE595:
1010:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 9806              		.loc 1 1010 5 is_stmt 1 view .LVU3340
1011:sieve_extend.c **** 
 9807              		.loc 1 1011 5 view .LVU3341
1013:sieve_extend.c **** 
 9808              		.loc 1 1013 5 view .LVU3342
1016:sieve_extend.c ****     extendSieve(bitarray, block.pattern_start, block.pattern_size, sieve->bits);
 9809              		.loc 1 1016 5 view .LVU3343
 9810              	.LBB596:
 9811              	.LBI518:
 969:sieve_extend.c ****     register counter_t prime   = 0;
 9812              		.loc 1 969 21 view .LVU3344
 9813              	.LBB588:
 970:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9814              		.loc 1 970 5 view .LVU3345
 971:sieve_extend.c ****     counter_t pattern_start    = 0;
 9815              		.loc 1 971 5 view .LVU3346
 972:sieve_extend.c ****     counter_t range_stop       = block_start;
 9816              		.loc 1 972 5 view .LVU3347
 973:sieve_extend.c ****     bitword_t* bitarray        = sieve->bitarray;
 9817              		.loc 1 973 5 view .LVU3348
 974:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 9818              		.loc 1 974 5 view .LVU3349
 975:sieve_extend.c **** 
 9819              		.loc 1 975 5 view .LVU3350
 977:sieve_extend.c ****     
 9820              		.loc 1 977 5 view .LVU3351
 9821              	# sieve_extend.c:977:     sieve->bitarray[0] = SAFE_ZERO; // only the first word has to be cleared;
 977:sieve_extend.c ****     
 9822              		.loc 1 977 24 is_stmt 0 view .LVU3352
GAS LISTING /tmp/ccgH0yRS.s 			page 272


 9823 3b55 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_97],
 9823      000000
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9824              		.loc 1 979 5 is_stmt 1 view .LVU3353
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9825              		.loc 1 979 11 view .LVU3354
 9826              	# sieve_extend.c:979:     for (;range_stop < block_stop;) {
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9827              		.loc 1 979 5 is_stmt 0 view .LVU3355
 9828 3b5c 0F843C1C 		je	.L1490	#,
 9828      0000
 9829 3b62 4989C7   		mov	r15, rax	# _97, _97
 9830              	# sieve_extend.c:970:     register counter_t prime   = 0;
 970:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9831              		.loc 1 970 24 view .LVU3356
 9832 3b65 31C9     		xor	ecx, ecx	# prime
 9833              	# sieve_extend.c:972:     counter_t pattern_start    = 0;
 972:sieve_extend.c ****     counter_t range_stop       = block_start;
 9834              		.loc 1 972 15 view .LVU3357
 9835 3b67 48C74424 		mov	QWORD PTR 16[rsp], 0	# %sfp,
 9835      10000000 
 9835      00
 9836              	# sieve_extend.c:975:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 975:sieve_extend.c **** 
 9837              		.loc 1 975 18 view .LVU3358
 9838 3b70 31D2     		xor	edx, edx	# block$pattern_size
 9839 3b72 31F6     		xor	esi, esi	# block$pattern_start
 9840              	# sieve_extend.c:971:     counter_t patternsize_bits = 1;
 971:sieve_extend.c ****     counter_t pattern_start    = 0;
 9841              		.loc 1 971 15 view .LVU3359
 9842 3b74 41BE0100 		mov	r14d, 1	# patternsize_bits,
 9842      0000
 9843              	.LVL442:
 9844              	.LBB520:
 9845              	# sieve_extend.c:980:         prime = searchBitFalse(bitarray, prime+1);
 980:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9846              		.loc 1 980 17 view .LVU3360
 9847 3b7a 41BD0100 		mov	r13d, 1	# index,
 9847      0000
 9848              	.LVL443:
 9849              		.p2align 4
 9850              		.p2align 3
 9851              	.L881:
 9852              	.LBB521:
 9853              	.LBB522:
 124:sieve_extend.c **** }
 9854              		.loc 1 124 5 is_stmt 1 view .LVU3361
 124:sieve_extend.c **** }
 9855              		.loc 1 124 5 is_stmt 0 view .LVU3362
 9856              	.LBE522:
 9857              	.LBE521:
 981:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9858              		.loc 1 981 9 is_stmt 1 view .LVU3363
 9859              	# sieve_extend.c:981:         counter_t start = prime * prime * 2 + prime * 2;
 981:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9860              		.loc 1 981 45 is_stmt 0 view .LVU3364
 9861 3b80 498D5D01 		lea	rbx, 1[r13]	# index,
GAS LISTING /tmp/ccgH0yRS.s 			page 273


 9862 3b84 4F8D642D 		lea	r12, [r13+r13]	# _687,
 9862      00
 9863              	# sieve_extend.c:981:         counter_t start = prime * prime * 2 + prime * 2;
 981:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9864              		.loc 1 981 19 view .LVU3365
 9865 3b89 4889DD   		mov	rbp, rbx	# index, index
 9866 3b8c 490FAFEC 		imul	rbp, r12	# index, _687
 9867              	.LVL444:
 982:sieve_extend.c **** 
 9868              		.loc 1 982 9 is_stmt 1 view .LVU3366
 9869              	# sieve_extend.c:982:         if unlikely(start > block_stop) break;
 982:sieve_extend.c **** 
 9870              		.loc 1 982 12 is_stmt 0 view .LVU3367
 9871 3b90 483B6C24 		cmp	rbp, QWORD PTR 8[rsp]	# index, %sfp
 9871      08
 9872 3b95 0F87E609 		ja	.L1491	#,
 9872      0000
 984:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9873              		.loc 1 984 9 is_stmt 1 view .LVU3368
 9874              	# sieve_extend.c:984:         const counter_t step  = prime * 2 + 1;
 984:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9875              		.loc 1 984 25 is_stmt 0 view .LVU3369
 9876 3b9b 4983C401 		add	r12, 1	# step,
 9877              	.LVL445:
 985:sieve_extend.c **** 
 9878              		.loc 1 985 9 is_stmt 1 view .LVU3370
 9879              	# sieve_extend.c:985:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 985:sieve_extend.c **** 
 9880              		.loc 1 985 12 is_stmt 0 view .LVU3371
 9881 3b9f 4885DB   		test	rbx, rbx	# index
 9882 3ba2 7516     		jne	.L887	#,
 985:sieve_extend.c **** 
 9883              		.loc 1 985 41 is_stmt 1 view .LVU3372
 9884              	# sieve_extend.c:985:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 985:sieve_extend.c **** 
 9885              		.loc 1 985 102 is_stmt 0 view .LVU3373
 9886 3ba4 48C7C0FF 		mov	rax, -1	# tmp566,
 9886      FFFFFF
 9887 3bab 31D2     		xor	edx, edx	# tmp565
 9888 3bad 49F7F4   		div	r12	# step
 9889              	# sieve_extend.c:985:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 985:sieve_extend.c **** 
 9890              		.loc 1 985 47 view .LVU3374
 9891 3bb0 48C7C5FE 		mov	rbp, -2	# tmp567,
 9891      FFFFFF
 9892              	.LVL446:
 985:sieve_extend.c **** 
 9893              		.loc 1 985 47 view .LVU3375
 9894 3bb7 4829D5   		sub	rbp, rdx	# index, tmp565
 9895              	.LVL447:
 9896              	.L887:
 987:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9897              		.loc 1 987 9 is_stmt 1 view .LVU3376
 9898              	# sieve_extend.c:987:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 987:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9899              		.loc 1 987 53 is_stmt 0 view .LVU3377
 9900 3bba 4C89E6   		mov	rsi, r12	# _68, step
GAS LISTING /tmp/ccgH0yRS.s 			page 274


 9901 3bbd 490FAFF6 		imul	rsi, r14	# _68, patternsize_bits
 9902 3bc1 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, _68
 9902      20
 9903              	# sieve_extend.c:987:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 987:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9904              		.loc 1 987 60 view .LVU3378
 9905 3bc6 4C8D0436 		lea	r8, [rsi+rsi]	# _69,
 9906              	.LVL448:
 988:sieve_extend.c ****         block.pattern_start = pattern_start;
 9907              		.loc 1 988 9 is_stmt 1 view .LVU3379
 989:sieve_extend.c ****         if (range_stop > block_stop) return block; //range_stop = block_stop;
 9908              		.loc 1 989 9 view .LVU3380
 990:sieve_extend.c **** 
 9909              		.loc 1 990 9 view .LVU3381
 9910              	# sieve_extend.c:990:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 990:sieve_extend.c **** 
 9911              		.loc 1 990 12 is_stmt 0 view .LVU3382
 9912 3bca 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 9912      08
 9913 3bcf 0F879F1B 		ja	.L1492	#,
 9913      0000
 992:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9914              		.loc 1 992 9 is_stmt 1 view .LVU3383
 9915 3bd5 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# pattern_start, %sfp
 9915      10
 9916              	# sieve_extend.c:992:         if (patternsize_bits>1) {
 992:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9917              		.loc 1 992 12 is_stmt 0 view .LVU3384
 9918 3bda 4983FE01 		cmp	r14, 1	# patternsize_bits,
 9919 3bde 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, pattern_start
 9919      18
 9920 3be3 0F872F01 		ja	.L1493	#,
 9920      0000
 9921              	.LVL449:
 9922              	.L890:
 996:sieve_extend.c **** 
 9923              		.loc 1 996 9 is_stmt 1 view .LVU3385
 998:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9924              		.loc 1 998 9 view .LVU3386
 9925              	# sieve_extend.c:998:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 998:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 9926              		.loc 1 998 17 is_stmt 0 view .LVU3387
 9927 3be9 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 9927      000000
 9928 3bf0 0F827A01 		jb	.L1494	#,
 9928      0000
 9929              	.L894:
 999:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9930              		.loc 1 999 14 is_stmt 1 view .LVU3388
 9931              	# sieve_extend.c:999:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarra
 999:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 9932              		.loc 1 999 17 is_stmt 0 view .LVU3389
 9933 3bf6 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 9933      000000
 9934 3bfd 0F828D06 		jb	.L1495	#,
 9934      0000
1000:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
GAS LISTING /tmp/ccgH0yRS.s 			page 275


 9935              		.loc 1 1000 14 is_stmt 1 view .LVU3390
 9936              	# sieve_extend.c:1000:         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector
1000:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9937              		.loc 1 1000 17 is_stmt 0 view .LVU3391
 9938 3c03 4981FCFF 		cmp	r12, 255	# step,
 9938      000000
 9939 3c0a 0F876004 		ja	.L917	#,
 9939      0000
1000:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9940              		.loc 1 1000 48 is_stmt 1 view .LVU3392
 9941 3c10 4C89C1   		mov	rcx, r8	#, _69
 9942 3c13 4C89E2   		mov	rdx, r12	#, step
 9943 3c16 4889EE   		mov	rsi, rbp	#, index
 9944 3c19 4C89FF   		mov	rdi, r15	#, _97
 9945 3c1c 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 9945      28
 9946 3c21 E8EAD8FF 		call	setBitsTrue_largeRange_vector	#
 9946      FF
 9947              	.LVL450:
 9948 3c26 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 9948      28
 9949              	.LVL451:
 9950              	.L898:
1000:sieve_extend.c ****         else                                   setBitsTrue_largeRange(bitarray, start, step, range_
 9951              		.loc 1 1000 48 is_stmt 0 view .LVU3393
 9952              	.LBE520:
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9953              		.loc 1 979 11 is_stmt 1 view .LVU3394
 9954              	# sieve_extend.c:979:     for (;range_stop < block_stop;) {
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 9955              		.loc 1 979 5 is_stmt 0 view .LVU3395
 9956 3c2b 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 9956      08
 9957 3c30 0F83FC03 		jnb	.L1496	#,
 9957      0000
 9958              	.LVL452:
 9959              	.L924:
 9960              	.LBB582:
 980:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9961              		.loc 1 980 9 is_stmt 1 view .LVU3396
 9962              	.LBB524:
 9963              	.LBI521:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 9964              		.loc 1 122 25 view .LVU3397
 9965              	.LBB523:
 123:sieve_extend.c ****     return index;
 9966              		.loc 1 123 5 view .LVU3398
 123:sieve_extend.c ****     return index;
 9967              		.loc 1 123 11 view .LVU3399
 9968              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9969              		.loc 1 123 21 is_stmt 0 view .LVU3400
 9970 3c36 4889D9   		mov	rcx, rbx	# tmp553, index
 9971 3c39 48C1E906 		shr	rcx, 6	# tmp553,
 9972              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9973              		.loc 1 123 12 view .LVU3401
GAS LISTING /tmp/ccgH0yRS.s 			page 276


 9974 3c3d 4D8B14CF 		mov	r10, QWORD PTR [r15+rcx*8]	# *_933,* _97
 9975              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9976              		.loc 1 123 11 view .LVU3402
 9977 3c41 490FA3DA 		bt	r10, rbx	# *_933, index
 9978 3c45 0F83A500 		jnc	.L883	#,
 9978      0000
 123:sieve_extend.c ****     return index;
 9979              		.loc 1 123 58 is_stmt 1 view .LVU3403
 9980              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9981              		.loc 1 123 63 is_stmt 0 view .LVU3404
 9982 3c4b 4C8D4B01 		lea	r9, 1[rbx]	# tmp849,
 9983              	.LVL453:
 9984              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9985              		.loc 1 123 21 view .LVU3405
 9986 3c4f 4C89CD   		mov	rbp, r9	# tmp558, index
 9987              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9988              		.loc 1 123 63 view .LVU3406
 9989 3c52 4C89CB   		mov	rbx, r9	# index, tmp849
 123:sieve_extend.c ****     return index;
 9990              		.loc 1 123 11 is_stmt 1 view .LVU3407
 9991              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9992              		.loc 1 123 21 is_stmt 0 view .LVU3408
 9993 3c55 48C1ED06 		shr	rbp, 6	# tmp558,
 9994              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9995              		.loc 1 123 12 view .LVU3409
 9996 3c59 498B34EF 		mov	rsi, QWORD PTR [r15+rbp*8]	# *_49, *_49
 9997              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 9998              		.loc 1 123 11 view .LVU3410
 9999 3c5d 4C0FA3CE 		bt	rsi, r9	# *_49, index
 10000 3c61 0F838900 		jnc	.L883	#,
 10000      0000
 123:sieve_extend.c ****     return index;
 10001              		.loc 1 123 58 is_stmt 1 view .LVU3411
 10002              	.LVL454:
 10003              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10004              		.loc 1 123 63 is_stmt 0 view .LVU3412
 10005 3c67 4883C301 		add	rbx, 1	# index,
 10006              	.LVL455:
 123:sieve_extend.c ****     return index;
 10007              		.loc 1 123 11 is_stmt 1 view .LVU3413
 10008              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10009              		.loc 1 123 21 is_stmt 0 view .LVU3414
 10010 3c6b 4889DF   		mov	rdi, rbx	# tmp1142, index
 10011 3c6e 48C1EF06 		shr	rdi, 6	# tmp1142,
 10012              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10013              		.loc 1 123 12 view .LVU3415
 10014 3c72 4D8B1CFF 		mov	r11, QWORD PTR [r15+rdi*8]	# *_49, *_49
GAS LISTING /tmp/ccgH0yRS.s 			page 277


 10015              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10016              		.loc 1 123 11 view .LVU3416
 10017 3c76 490FA3DB 		bt	r11, rbx	# *_49, index
 10018 3c7a 7374     		jnc	.L883	#,
 123:sieve_extend.c ****     return index;
 10019              		.loc 1 123 58 is_stmt 1 view .LVU3417
 10020              	.LVL456:
 10021              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10022              		.loc 1 123 63 is_stmt 0 view .LVU3418
 10023 3c7c 498D5902 		lea	rbx, 2[r9]	# index,
 10024              	.LVL457:
 123:sieve_extend.c ****     return index;
 10025              		.loc 1 123 11 is_stmt 1 view .LVU3419
 10026              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10027              		.loc 1 123 21 is_stmt 0 view .LVU3420
 10028 3c80 4889D8   		mov	rax, rbx	# tmp1146, index
 10029 3c83 48C1E806 		shr	rax, 6	# tmp1146,
 10030              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10031              		.loc 1 123 12 view .LVU3421
 10032 3c87 4D8B04C7 		mov	r8, QWORD PTR [r15+rax*8]	# *_49, *_49
 10033              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10034              		.loc 1 123 11 view .LVU3422
 10035 3c8b 490FA3D8 		bt	r8, rbx	# *_49, index
 10036 3c8f 735F     		jnc	.L883	#,
 123:sieve_extend.c ****     return index;
 10037              		.loc 1 123 58 is_stmt 1 view .LVU3423
 10038              	.LVL458:
 10039              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10040              		.loc 1 123 63 is_stmt 0 view .LVU3424
 10041 3c91 498D5903 		lea	rbx, 3[r9]	# index,
 10042              	.LVL459:
 123:sieve_extend.c ****     return index;
 10043              		.loc 1 123 11 is_stmt 1 view .LVU3425
 10044              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10045              		.loc 1 123 21 is_stmt 0 view .LVU3426
 10046 3c95 4889DA   		mov	rdx, rbx	# tmp1150, index
 10047 3c98 48C1EA06 		shr	rdx, 6	# tmp1150,
 10048              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10049              		.loc 1 123 12 view .LVU3427
 10050 3c9c 4D8B24D7 		mov	r12, QWORD PTR [r15+rdx*8]	# *_49, *_49
 10051              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10052              		.loc 1 123 11 view .LVU3428
 10053 3ca0 490FA3DC 		bt	r12, rbx	# *_49, index
 10054 3ca4 734A     		jnc	.L883	#,
 123:sieve_extend.c ****     return index;
 10055              		.loc 1 123 58 is_stmt 1 view .LVU3429
 10056              	.LVL460:
 10057              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccgH0yRS.s 			page 278


 123:sieve_extend.c ****     return index;
 10058              		.loc 1 123 63 is_stmt 0 view .LVU3430
 10059 3ca6 498D5904 		lea	rbx, 4[r9]	# index,
 10060              	.LVL461:
 123:sieve_extend.c ****     return index;
 10061              		.loc 1 123 11 is_stmt 1 view .LVU3431
 10062              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10063              		.loc 1 123 21 is_stmt 0 view .LVU3432
 10064 3caa 4889D9   		mov	rcx, rbx	# tmp1154, index
 10065 3cad 48C1E906 		shr	rcx, 6	# tmp1154,
 10066              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10067              		.loc 1 123 12 view .LVU3433
 10068 3cb1 4D8B14CF 		mov	r10, QWORD PTR [r15+rcx*8]	# *_49, *_49
 10069              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10070              		.loc 1 123 11 view .LVU3434
 10071 3cb5 490FA3DA 		bt	r10, rbx	# *_49, index
 10072 3cb9 7335     		jnc	.L883	#,
 123:sieve_extend.c ****     return index;
 10073              		.loc 1 123 58 is_stmt 1 view .LVU3435
 10074              	.LVL462:
 10075              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10076              		.loc 1 123 63 is_stmt 0 view .LVU3436
 10077 3cbb 498D5905 		lea	rbx, 5[r9]	# index,
 10078              	.LVL463:
 123:sieve_extend.c ****     return index;
 10079              		.loc 1 123 11 is_stmt 1 view .LVU3437
 10080              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10081              		.loc 1 123 21 is_stmt 0 view .LVU3438
 10082 3cbf 4889DD   		mov	rbp, rbx	# tmp1158, index
 10083 3cc2 48C1ED06 		shr	rbp, 6	# tmp1158,
 10084              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10085              		.loc 1 123 12 view .LVU3439
 10086 3cc6 498B34EF 		mov	rsi, QWORD PTR [r15+rbp*8]	# *_49, *_49
 10087              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10088              		.loc 1 123 11 view .LVU3440
 10089 3cca 480FA3DE 		bt	rsi, rbx	# *_49, index
 10090 3cce 7320     		jnc	.L883	#,
 123:sieve_extend.c ****     return index;
 10091              		.loc 1 123 58 is_stmt 1 view .LVU3441
 10092              	.LVL464:
 10093              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10094              		.loc 1 123 63 is_stmt 0 view .LVU3442
 10095 3cd0 498D5906 		lea	rbx, 6[r9]	# index,
 10096              	.LVL465:
 123:sieve_extend.c ****     return index;
 10097              		.loc 1 123 11 is_stmt 1 view .LVU3443
 10098              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10099              		.loc 1 123 21 is_stmt 0 view .LVU3444
GAS LISTING /tmp/ccgH0yRS.s 			page 279


 10100 3cd4 4889DF   		mov	rdi, rbx	# tmp1162, index
 10101 3cd7 48C1EF06 		shr	rdi, 6	# tmp1162,
 10102              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10103              		.loc 1 123 12 view .LVU3445
 10104 3cdb 4D8B1CFF 		mov	r11, QWORD PTR [r15+rdi*8]	# *_49, *_49
 10105              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10106              		.loc 1 123 11 view .LVU3446
 10107 3cdf 490FA3DB 		bt	r11, rbx	# *_49, index
 10108 3ce3 730B     		jnc	.L883	#,
 123:sieve_extend.c ****     return index;
 10109              		.loc 1 123 58 is_stmt 1 view .LVU3447
 10110              	.LVL466:
 10111              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 10112              		.loc 1 123 63 is_stmt 0 view .LVU3448
 10113 3ce5 498D5907 		lea	rbx, 7[r9]	# index,
 10114              	.LVL467:
 123:sieve_extend.c ****     return index;
 10115              		.loc 1 123 11 is_stmt 1 view .LVU3449
 10116 3ce9 E948FFFF 		jmp	.L924	#
 10116      FF
 10117              	.LVL468:
 10118 3cee 6690     		.p2align 4,,7
 10119              		.p2align 3
 10120              	.L883:
 123:sieve_extend.c ****     return index;
 10121              		.loc 1 123 11 is_stmt 0 view .LVU3450
 10122              	.LBE523:
 10123              	.LBE524:
 10124              	.LBE582:
 10125              	.LBE588:
 10126              	.LBE596:
 10127              	# sieve_extend.c:1008: static struct sieve_state *sieve(const counter_t maxints, const counter_t bl
1008:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 10128              		.loc 1 1008 86 view .LVU3451
 10129 3cf0 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 10130 3cf3 4C89E9   		mov	rcx, r13	# prime, index
 10131 3cf6 4C8B7424 		mov	r14, QWORD PTR 24[rsp]	# pattern_start, %sfp
 10131      18
 10132 3cfb 4989DD   		mov	r13, rbx	# index, index
 10133              	.LVL469:
1008:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 10134              		.loc 1 1008 86 view .LVU3452
 10135 3cfe 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 10135      10
 10136              	.LVL470:
1008:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 10137              		.loc 1 1008 86 view .LVU3453
 10138 3d03 4C897424 		mov	QWORD PTR 16[rsp], r14	# %sfp, pattern_start
 10138      10
 10139              	.LVL471:
1008:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 10140              		.loc 1 1008 86 view .LVU3454
 10141 3d08 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# patternsize_bits, %sfp
 10141      20
GAS LISTING /tmp/ccgH0yRS.s 			page 280


 10142              	.LVL472:
1008:sieve_extend.c ****     struct sieve_state *sieve = create_sieve(maxints);
 10143              		.loc 1 1008 86 view .LVU3455
 10144 3d0d E96EFEFF 		jmp	.L881	#
 10144      FF
 10145              	.LVL473:
 10146              		.p2align 4,,7
 10147 3d12 660F1F44 		.p2align 3
 10147      0000
 10148              	.L1493:
 10149              	.LBB597:
 10150              	.LBB589:
 10151              	.LBB583:
 993:sieve_extend.c ****             extendSieve(bitarray, pattern_start, patternsize_bits, range_stop);
 10152              		.loc 1 993 13 is_stmt 1 view .LVU3456
 994:sieve_extend.c ****         }
 10153              		.loc 1 994 13 view .LVU3457
 10154              	.LBB525:
 10155              	.LBI525:
 873:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10156              		.loc 1 873 20 view .LVU3458
 10157              	.LBB526:
 874:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10158              		.loc 1 874 5 view .LVU3459
 10159              	# sieve_extend.c:874:     if (size < WORD_SIZE_counter)   {
 874:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10160              		.loc 1 874 8 is_stmt 0 view .LVU3460
 10161 3d18 4983FE3F 		cmp	r14, 63	# patternsize_bits,
 10162 3d1c 0F86231A 		jbe	.L1497	#,
 10162      0000
 879:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10163              		.loc 1 879 5 is_stmt 1 view .LVU3461
 10164              	.LVL474:
 880:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10165              		.loc 1 880 5 view .LVU3462
 10166              	# sieve_extend.c:879:     const counter_t copy_start  = source_start + size;
 879:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 10167              		.loc 1 879 21 is_stmt 0 view .LVU3463
 10168 3d22 4F8D0C36 		lea	r9, [r14+r14]	# copy_start,
 10169              	# sieve_extend.c:881:     const bitshift_t source_bit = bitindex_calc(source_start);
 881:sieve_extend.c **** 
 10170              		.loc 1 881 22 view .LVU3464
 10171 3d26 4D89F2   		mov	r10, r14	# source_bit, patternsize_bits
 10172              	# sieve_extend.c:880:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 880:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 10173              		.loc 1 880 22 view .LVU3465
 10174 3d29 4183E13F 		and	r9d, 63	# copy_bit,
 10175              	.LVL475:
 881:sieve_extend.c **** 
 10176              		.loc 1 881 5 is_stmt 1 view .LVU3466
 10177              	# sieve_extend.c:881:     const bitshift_t source_bit = bitindex_calc(source_start);
 881:sieve_extend.c **** 
 10178              		.loc 1 881 22 is_stmt 0 view .LVU3467
 10179 3d2d 4183E23F 		and	r10d, 63	# source_bit,
 10180              	.LVL476:
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10181              		.loc 1 883 5 is_stmt 1 view .LVU3468
GAS LISTING /tmp/ccgH0yRS.s 			page 281


 10182              	# sieve_extend.c:883:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10183              		.loc 1 883 13 is_stmt 0 view .LVU3469
 10184 3d31 4D39D1   		cmp	r9, r10	# copy_bit, source_bit
 10185              	# sieve_extend.c:883:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10186              		.loc 1 883 37 view .LVU3470
 10187 3d34 4C89C1   		mov	rcx, r8	#, _69
 10188 3d37 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 10188      28
 10189 3d3c 4C89F2   		mov	rdx, r14	#, patternsize_bits
 10190 3d3f 4C89F6   		mov	rsi, r14	#, patternsize_bits
 10191 3d42 4C89FF   		mov	rdi, r15	#, _97
 10192              	# sieve_extend.c:883:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 10193              		.loc 1 883 13 view .LVU3471
 10194 3d45 0F82EB0A 		jb	.L1498	#,
 10194      0000
 10195              	.LVL477:
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10196              		.loc 1 884 10 is_stmt 1 view .LVU3472
 10197              	# sieve_extend.c:884:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10198              		.loc 1 884 13 is_stmt 0 view .LVU3473
 10199 3d4b 0F86D10A 		jbe	.L893	#,
 10199      0000
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10200              		.loc 1 884 37 is_stmt 1 view .LVU3474
 10201 3d51 E86AC9FF 		call	extendSieve_shiftright_ivdep	#
 10201      FF
 10202              	.LVL478:
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 10203              		.loc 1 884 37 is_stmt 0 view .LVU3475
 10204 3d56 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 10204      18
 10205              	.LBE526:
 10206              	.LBE525:
 10207              	# sieve_extend.c:998:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 998:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10208              		.loc 1 998 17 view .LVU3476
 10209 3d5b 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 10209      000000
 10210              	.LBB530:
 10211              	.LBB527:
 10212 3d62 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 10212      28
 10213              	.LVL479:
 998:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10214              		.loc 1 998 17 view .LVU3477
 10215              	.LBE527:
 10216              	.LBE530:
 996:sieve_extend.c **** 
 10217              		.loc 1 996 9 is_stmt 1 view .LVU3478
 998:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
 10218              		.loc 1 998 9 view .LVU3479
 10219              	# sieve_extend.c:998:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitarra
 998:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitarray, start, step, range_
GAS LISTING /tmp/ccgH0yRS.s 			page 282


 10220              		.loc 1 998 17 is_stmt 0 view .LVU3480
 10221 3d67 0F8389FE 		jnb	.L894	#,
 10221      FFFF
 10222              	.LVL480:
 10223 3d6d 0F1F00   		.p2align 4
 10224              		.p2align 3
 10225              	.L1494:
 10226              	.LBB531:
 10227              	.LBB532:
 10228              	.LBB533:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10229              		.loc 1 239 41 is_stmt 1 view .LVU3481
 10230              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10231              		.loc 1 239 5 is_stmt 0 view .LVU3482
 10232 3d70 4983FC40 		cmp	r12, 64	# step,
 10233 3d74 0F871A1A 		ja	.L995	#,
 10233      0000
 10234 3d7a 4C89E7   		mov	rdi, r12	# patternsize, step
 10235              	.LBE533:
 10236              	# sieve_extend.c:238: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 10237              		.loc 1 238 21 view .LVU3483
 10238 3d7d B9010000 		mov	ecx, 1	# pattern,
 10238      00
 10239              	.LVL481:
 10240              	.L896:
 10241              	.LBB534:
 240:sieve_extend.c **** 
 10242              		.loc 1 240 9 is_stmt 1 view .LVU3484
 10243              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10244              		.loc 1 239 88 is_stmt 0 view .LVU3485
 10245 3d82 4C8D1C3F 		lea	r11, [rdi+rdi]	# patternsize,
 10246              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10247              		.loc 1 240 29 view .LVU3486
 10248 3d86 C462C1F7 		shlx	r9, rcx, rdi	# _105, pattern, patternsize
 10248      C9
 10249              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10250              		.loc 1 240 17 view .LVU3487
 10251 3d8b 4C09C9   		or	rcx, r9	# pattern, _105
 10252              	.LVL482:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10253              		.loc 1 239 76 is_stmt 1 view .LVU3488
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10254              		.loc 1 239 41 view .LVU3489
 10255              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10256              		.loc 1 239 5 is_stmt 0 view .LVU3490
 10257 3d8e 4983FB40 		cmp	r11, 64	# patternsize,
 10258 3d92 0F87A800 		ja	.L895	#,
 10258      0000
 240:sieve_extend.c **** 
 10259              		.loc 1 240 9 is_stmt 1 view .LVU3491
 10260              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
GAS LISTING /tmp/ccgH0yRS.s 			page 283


 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10261              		.loc 1 239 88 is_stmt 0 view .LVU3492
 10262 3d98 488D04BD 		lea	rax, 0[0+rdi*4]	# patternsize,
 10262      00000000 
 10263              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10264              		.loc 1 240 29 view .LVU3493
 10265 3da0 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10265      D1
 10266              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10267              		.loc 1 240 17 view .LVU3494
 10268 3da5 4809D1   		or	rcx, rdx	# pattern, _105
 10269              	.LVL483:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10270              		.loc 1 239 76 is_stmt 1 view .LVU3495
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10271              		.loc 1 239 41 view .LVU3496
 10272              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10273              		.loc 1 239 5 is_stmt 0 view .LVU3497
 10274 3da8 4883F840 		cmp	rax, 64	# patternsize,
 10275 3dac 0F878E00 		ja	.L895	#,
 10275      0000
 240:sieve_extend.c **** 
 10276              		.loc 1 240 9 is_stmt 1 view .LVU3498
 10277              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10278              		.loc 1 239 88 is_stmt 0 view .LVU3499
 10279 3db2 4C8D14FD 		lea	r10, 0[0+rdi*8]	# patternsize,
 10279      00000000 
 10280              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10281              		.loc 1 240 29 view .LVU3500
 10282 3dba C4E2F9F7 		shlx	rsi, rcx, rax	# _105, pattern, patternsize
 10282      F1
 10283              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10284              		.loc 1 240 17 view .LVU3501
 10285 3dbf 4809F1   		or	rcx, rsi	# pattern, _105
 10286              	.LVL484:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10287              		.loc 1 239 76 is_stmt 1 view .LVU3502
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10288              		.loc 1 239 41 view .LVU3503
 10289              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10290              		.loc 1 239 5 is_stmt 0 view .LVU3504
 10291 3dc2 4983FA40 		cmp	r10, 64	# patternsize,
 10292 3dc6 7778     		ja	.L895	#,
 240:sieve_extend.c **** 
 10293              		.loc 1 240 9 is_stmt 1 view .LVU3505
 10294              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10295              		.loc 1 239 88 is_stmt 0 view .LVU3506
 10296 3dc8 4989FB   		mov	r11, rdi	# patternsize, patternsize
 10297              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
GAS LISTING /tmp/ccgH0yRS.s 			page 284


 240:sieve_extend.c **** 
 10298              		.loc 1 240 29 view .LVU3507
 10299 3dcb C462A9F7 		shlx	r9, rcx, r10	# _105, pattern, patternsize
 10299      C9
 10300              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10301              		.loc 1 239 88 view .LVU3508
 10302 3dd0 49C1E304 		sal	r11, 4	# patternsize,
 10303              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10304              		.loc 1 240 17 view .LVU3509
 10305 3dd4 4C09C9   		or	rcx, r9	# pattern, _105
 10306              	.LVL485:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10307              		.loc 1 239 76 is_stmt 1 view .LVU3510
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10308              		.loc 1 239 41 view .LVU3511
 10309              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10310              		.loc 1 239 5 is_stmt 0 view .LVU3512
 10311 3dd7 4983FB40 		cmp	r11, 64	# patternsize,
 10312 3ddb 7763     		ja	.L895	#,
 240:sieve_extend.c **** 
 10313              		.loc 1 240 9 is_stmt 1 view .LVU3513
 10314              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10315              		.loc 1 239 88 is_stmt 0 view .LVU3514
 10316 3ddd 4889F8   		mov	rax, rdi	# patternsize, patternsize
 10317              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10318              		.loc 1 240 29 view .LVU3515
 10319 3de0 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10319      D1
 10320              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10321              		.loc 1 239 88 view .LVU3516
 10322 3de5 48C1E005 		sal	rax, 5	# patternsize,
 10323              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10324              		.loc 1 240 17 view .LVU3517
 10325 3de9 4809D1   		or	rcx, rdx	# pattern, _105
 10326              	.LVL486:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10327              		.loc 1 239 76 is_stmt 1 view .LVU3518
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10328              		.loc 1 239 41 view .LVU3519
 10329              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10330              		.loc 1 239 5 is_stmt 0 view .LVU3520
 10331 3dec 4883F840 		cmp	rax, 64	# patternsize,
 10332 3df0 774E     		ja	.L895	#,
 240:sieve_extend.c **** 
 10333              		.loc 1 240 9 is_stmt 1 view .LVU3521
 10334              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10335              		.loc 1 239 88 is_stmt 0 view .LVU3522
 10336 3df2 4989FA   		mov	r10, rdi	# patternsize, patternsize
GAS LISTING /tmp/ccgH0yRS.s 			page 285


 10337              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10338              		.loc 1 240 29 view .LVU3523
 10339 3df5 C4E2F9F7 		shlx	rsi, rcx, rax	# _105, pattern, patternsize
 10339      F1
 10340              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10341              		.loc 1 239 88 view .LVU3524
 10342 3dfa 49C1E206 		sal	r10, 6	# patternsize,
 10343              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10344              		.loc 1 240 17 view .LVU3525
 10345 3dfe 4809F1   		or	rcx, rsi	# pattern, _105
 10346              	.LVL487:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10347              		.loc 1 239 76 is_stmt 1 view .LVU3526
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10348              		.loc 1 239 41 view .LVU3527
 10349              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10350              		.loc 1 239 5 is_stmt 0 view .LVU3528
 10351 3e01 4983FA40 		cmp	r10, 64	# patternsize,
 10352 3e05 7739     		ja	.L895	#,
 240:sieve_extend.c **** 
 10353              		.loc 1 240 9 is_stmt 1 view .LVU3529
 10354              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10355              		.loc 1 239 88 is_stmt 0 view .LVU3530
 10356 3e07 4989FB   		mov	r11, rdi	# patternsize, patternsize
 10357              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10358              		.loc 1 240 29 view .LVU3531
 10359 3e0a C462A9F7 		shlx	r9, rcx, r10	# _105, pattern, patternsize
 10359      C9
 10360              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10361              		.loc 1 239 88 view .LVU3532
 10362 3e0f 49C1E307 		sal	r11, 7	# patternsize,
 10363              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10364              		.loc 1 240 17 view .LVU3533
 10365 3e13 4C09C9   		or	rcx, r9	# pattern, _105
 10366              	.LVL488:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10367              		.loc 1 239 76 is_stmt 1 view .LVU3534
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10368              		.loc 1 239 41 view .LVU3535
 10369              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10370              		.loc 1 239 5 is_stmt 0 view .LVU3536
 10371 3e16 4983FB40 		cmp	r11, 64	# patternsize,
 10372 3e1a 7724     		ja	.L895	#,
 240:sieve_extend.c **** 
 10373              		.loc 1 240 9 is_stmt 1 view .LVU3537
 10374              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10375              		.loc 1 239 88 is_stmt 0 view .LVU3538
GAS LISTING /tmp/ccgH0yRS.s 			page 286


 10376 3e1c 48C1E708 		sal	rdi, 8	# patternsize,
 10377              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10378              		.loc 1 240 29 view .LVU3539
 10379 3e20 C4E2A1F7 		shlx	rdx, rcx, r11	# _105, pattern, patternsize
 10379      D1
 10380              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 10381              		.loc 1 240 17 view .LVU3540
 10382 3e25 4809D1   		or	rcx, rdx	# pattern, _105
 10383              	.LVL489:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10384              		.loc 1 239 76 is_stmt 1 view .LVU3541
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10385              		.loc 1 239 41 view .LVU3542
 10386              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10387              		.loc 1 239 5 is_stmt 0 view .LVU3543
 10388 3e28 4883FF40 		cmp	rdi, 64	# patternsize,
 10389 3e2c 0F8650FF 		jbe	.L896	#,
 10389      FFFF
 10390              	.LVL490:
 10391 3e32 66662E0F 		.p2align 4
 10391      1F840000 
 10391      0000000F 
 10391      1F00
 10392              		.p2align 3
 10393              	.L895:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10394              		.loc 1 239 5 view .LVU3544
 10395              	.LBE534:
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10396              		.loc 1 245 5 is_stmt 1 view .LVU3545
 10397              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10398              		.loc 1 245 21 is_stmt 0 view .LVU3546
 10399 3e40 4D89C2   		mov	r10, r8	# range_stop_word, _69
 10400              	# sieve_extend.c:246:     register counter_t range_start_word = wordindex(range_start);
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10401              		.loc 1 246 24 view .LVU3547
 10402 3e43 4889EE   		mov	rsi, rbp	# range_start_word, index
 10403 3e46 48C1EE06 		shr	rsi, 6	# range_start_word,
 10404 3e4a 4489C0   		mov	eax, r8d	# tmp571, _69
 10405              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10406              		.loc 1 245 21 view .LVU3548
 10407 3e4d 49C1EA06 		shr	r10, 6	# range_stop_word,
 10408              	.LVL491:
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10409              		.loc 1 246 5 is_stmt 1 view .LVU3549
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10410              		.loc 1 247 6 view .LVU3550
 10411 3e51 4D8D1CF7 		lea	r11, [r15+rsi*8]	# _1228,
 10412              	# sieve_extend.c:247:      if (range_start_word >= range_stop_word) { // shortcut
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10413              		.loc 1 247 9 is_stmt 0 view .LVU3551
 10414 3e55 4939F2   		cmp	r10, rsi	# range_stop_word, range_start_word
GAS LISTING /tmp/ccgH0yRS.s 			page 287


 10415 3e58 F7D0     		not	eax	# tmp571
 10416 3e5a 4D8B0B   		mov	r9, QWORD PTR [r11]	# pretmp_1229, MEM[(uint64_t *)_1228]
 10417 3e5d 48C7C7FF 		mov	rdi, -1	# tmp1614,
 10417      FFFFFF
 10418 3e64 C4E2FBF7 		shrx	rdx, rdi, rax	# _1235, tmp1614, tmp571
 10418      D7
 10419              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 10420              		.loc 1 248 47 view .LVU3552
 10421 3e69 C4E2D1F7 		shlx	rax, rcx, rbp	# tmp574, pattern, index
 10421      C1
 10422 3e6e 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _1235
 10422      28
 10423              	# sieve_extend.c:247:      if (range_start_word >= range_stop_word) { // shortcut
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10424              		.loc 1 247 9 view .LVU3553
 10425 3e73 0F869A08 		jbe	.L1499	#,
 10425      0000
 253:sieve_extend.c **** 
 10426              		.loc 1 253 5 is_stmt 1 view .LVU3554
 10427              	# sieve_extend.c:253:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 10428              		.loc 1 253 32 is_stmt 0 view .LVU3555
 10429 3e79 4C09C8   		or	rax, r9	# tmp578, pretmp_1229
 10430              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10431              		.loc 1 257 80 view .LVU3556
 10432 3e7c BF400000 		mov	edi, 64	# tmp579,
 10432      00
 10433 3e81 31D2     		xor	edx, edx	# tmp580
 10434              	# sieve_extend.c:258:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10435              		.loc 1 258 24 view .LVU3557
 10436 3e83 4D89E1   		mov	r9, r12	# pattern_shift, step
 10437              	# sieve_extend.c:253:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 10438              		.loc 1 253 32 view .LVU3558
 10439 3e86 498903   		mov	QWORD PTR [r11], rax	# MEM[(uint64_t *)_1228], tmp578
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10440              		.loc 1 257 4 is_stmt 1 view .LVU3559
 10441              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10442              		.loc 1 257 80 is_stmt 0 view .LVU3560
 10443 3e89 4889F8   		mov	rax, rdi	# tmp581, tmp579
 10444 3e8c 49F7F4   		div	r12	# step
 10445              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10446              		.loc 1 259 33 view .LVU3561
 10447 3e8f 4889E8   		mov	rax, rbp	# index, index
 10448 3e92 83E03F   		and	eax, 63	# index,
 10449              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10450              		.loc 1 257 24 view .LVU3562
 10451 3e95 4829D7   		sub	rdi, rdx	# pattern_size, tmp580
 10452              	.LVL492:
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10453              		.loc 1 258 4 is_stmt 1 view .LVU3563
GAS LISTING /tmp/ccgH0yRS.s 			page 288


 10454              	# sieve_extend.c:258:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10455              		.loc 1 258 24 is_stmt 0 view .LVU3564
 10456 3e98 4929D1   		sub	r9, rdx	# pattern_shift, tmp580
 10457              	.LVL493:
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10458              		.loc 1 259 4 is_stmt 1 view .LVU3565
 10459              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10460              		.loc 1 259 24 is_stmt 0 view .LVU3566
 10461 3e9b 31D2     		xor	edx, edx	# tmp584
 10462 3e9d 49F7F4   		div	r12	# step
 10463              	.LVL494:
 260:sieve_extend.c ****    #pragma unroll
 10464              		.loc 1 260 4 is_stmt 1 view .LVU3567
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10465              		.loc 1 263 4 view .LVU3568
 10466              	.LBB535:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10467              		.loc 1 263 9 view .LVU3569
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10468              		.loc 1 263 24 view .LVU3570
 10469              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10470              		.loc 1 263 4 is_stmt 0 view .LVU3571
 10471 3ea0 4939F2   		cmp	r10, rsi	# range_stop_word, range_start_word
 10472 3ea3 0F847501 		je	.L901	#,
 10472      0000
 10473 3ea9 4B8D04D7 		lea	rax, [r15+r10*8]	# _1346,
 10474 3ead 89FD     		mov	ebp, edi	# _1237, pattern_size
 10475              	.LVL495:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10476              		.loc 1 263 4 view .LVU3572
 10477 3eaf 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, _1346
 10477      48
 10478 3eb4 4C29D8   		sub	rax, r11	# tmp851, ivtmp.638
 10479 3eb7 4883E808 		sub	rax, 8	# tmp852,
 10480 3ebb 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.636,
 10481              	.LVL496:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10482              		.loc 1 263 4 view .LVU3573
 10483 3ebf 48C1E803 		shr	rax, 3	# tmp850,
 10484 3ec3 4C89DF   		mov	rdi, r11	# ivtmp.638, _1228
 10485              	.LVL497:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10486              		.loc 1 263 4 view .LVU3574
 10487 3ec6 4883C001 		add	rax, 1	# tmp853,
 10488 3eca 83E003   		and	eax, 3	# tmp854,
 10489 3ecd 0F849900 		je	.L1442	#,
 10489      0000
 10490 3ed3 4883F801 		cmp	rax, 1	# tmp854,
 10491 3ed7 7460     		je	.L1203	#,
 10492 3ed9 4883F802 		cmp	rax, 2	# tmp854,
 10493 3edd 7432     		je	.L1204	#,
 10494              	.LVL498:
 10495              	.LBB536:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
GAS LISTING /tmp/ccgH0yRS.s 			page 289


 10496              		.loc 1 264 9 is_stmt 1 view .LVU3575
 265:sieve_extend.c **** 
 10497              		.loc 1 265 8 view .LVU3576
 10498              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10499              		.loc 1 264 20 is_stmt 0 view .LVU3577
 10500 3edf 4889F0   		mov	rax, rsi	# tmp1171, ivtmp.636
 10501 3ee2 31D2     		xor	edx, edx	# totalshift
 10502              	.LVL499:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10503              		.loc 1 264 20 view .LVU3578
 10504 3ee4 49F7F4   		div	r12	# step
 10505 3ee7 4883C708 		add	rdi, 8	# ivtmp.638,
 10506 3eeb 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10507              	.LVL500:
 10508              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10509              		.loc 1 265 91 view .LVU3579
 10510 3eee C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1172, pattern, totalshift
 10510      C1
 10511              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10512              		.loc 1 265 37 view .LVU3580
 10513 3ef3 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp1172, MEM[base: _1351, offset: 8B]
 10514 3ef7 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, tmp1172
 10514      50
 10515              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10516              		.loc 1 265 66 view .LVU3581
 10517 3efc 89E8     		mov	eax, ebp	# tmp1174, _1237
 10518 3efe 29D0     		sub	eax, edx	# tmp1174, totalshift
 10519              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10520              		.loc 1 265 50 view .LVU3582
 10521 3f00 C4E2FBF7 		shrx	rdx, rcx, rax	# tmp1175, pattern, tmp1174
 10521      D1
 10522              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10523              		.loc 1 265 37 view .LVU3583
 10524 3f05 488B4424 		mov	rax, QWORD PTR 80[rsp]	# tmp1173, %sfp
 10524      50
 10525 3f0a 4809D0   		or	rax, rdx	# tmp1173, tmp1175
 10526 3f0d 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _1351, offset: 8B], tmp1176
 10527              	.LBE536:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10528              		.loc 1 263 41 is_stmt 1 view .LVU3584
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10529              		.loc 1 263 24 view .LVU3585
 10530              	.L1204:
 10531              	.LBB537:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10532              		.loc 1 264 9 view .LVU3586
 265:sieve_extend.c **** 
 10533              		.loc 1 265 8 view .LVU3587
 10534              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10535              		.loc 1 264 20 is_stmt 0 view .LVU3588
GAS LISTING /tmp/ccgH0yRS.s 			page 290


 10536 3f11 4889F0   		mov	rax, rsi	# tmp1178, ivtmp.636
 10537 3f14 31D2     		xor	edx, edx	# totalshift
 10538 3f16 49F7F4   		div	r12	# step
 10539              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10540              		.loc 1 265 66 view .LVU3589
 10541 3f19 4189EB   		mov	r11d, ebp	# tmp1181, _1237
 10542 3f1c 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10543 3f1f 4883C708 		add	rdi, 8	# ivtmp.638,
 10544              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10545              		.loc 1 265 91 view .LVU3590
 10546 3f23 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1179, pattern, totalshift
 10546      C1
 10547              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10548              		.loc 1 265 37 view .LVU3591
 10549 3f28 480B07   		or	rax, QWORD PTR [rdi]	# tmp1180, MEM[base: _1351, offset: 8B]
 10550              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10551              		.loc 1 265 66 view .LVU3592
 10552 3f2b 4129D3   		sub	r11d, edx	# tmp1181, totalshift
 10553              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10554              		.loc 1 265 50 view .LVU3593
 10555 3f2e C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1182, pattern, tmp1181
 10555      D1
 10556              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10557              		.loc 1 265 37 view .LVU3594
 10558 3f33 4809D0   		or	rax, rdx	# tmp1183, tmp1182
 10559 3f36 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp1183
 10560              	.LBE537:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10561              		.loc 1 263 41 is_stmt 1 view .LVU3595
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10562              		.loc 1 263 24 view .LVU3596
 10563              	.L1203:
 10564              	.LBB538:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10565              		.loc 1 264 9 view .LVU3597
 265:sieve_extend.c **** 
 10566              		.loc 1 265 8 view .LVU3598
 10567              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10568              		.loc 1 264 20 is_stmt 0 view .LVU3599
 10569 3f39 4889F0   		mov	rax, rsi	# tmp1185, ivtmp.636
 10570 3f3c 31D2     		xor	edx, edx	# totalshift
 10571 3f3e 49F7F4   		div	r12	# step
 10572              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10573              		.loc 1 265 66 view .LVU3600
 10574 3f41 4189EB   		mov	r11d, ebp	# tmp1188, _1237
 10575 3f44 4883C708 		add	rdi, 8	# ivtmp.638,
 10576 3f48 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10577              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
GAS LISTING /tmp/ccgH0yRS.s 			page 291


 10578              		.loc 1 265 91 view .LVU3601
 10579 3f4b C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1186, pattern, totalshift
 10579      C1
 10580              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10581              		.loc 1 265 37 view .LVU3602
 10582 3f50 480B07   		or	rax, QWORD PTR [rdi]	# tmp1187, MEM[base: _1351, offset: 8B]
 10583              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10584              		.loc 1 265 66 view .LVU3603
 10585 3f53 4129D3   		sub	r11d, edx	# tmp1188, totalshift
 10586              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10587              		.loc 1 265 50 view .LVU3604
 10588 3f56 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1189, pattern, tmp1188
 10588      D1
 10589              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10590              		.loc 1 265 37 view .LVU3605
 10591 3f5b 4809D0   		or	rax, rdx	# tmp1190, tmp1189
 10592 3f5e 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp1190
 10593              	.LBE538:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10594              		.loc 1 263 41 is_stmt 1 view .LVU3606
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10595              		.loc 1 263 24 view .LVU3607
 10596              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10597              		.loc 1 263 4 is_stmt 0 view .LVU3608
 10598 3f61 48397C24 		cmp	QWORD PTR 72[rsp], rdi	# %sfp, ivtmp.638
 10598      48
 10599 3f66 0F84B200 		je	.L901	#,
 10599      0000
 10600              	.L1442:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10601              		.loc 1 263 4 view .LVU3609
 10602 3f6c 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, _69
 10602      50
 10603 3f71 4C8B5C24 		mov	r11, QWORD PTR 72[rsp]	# _1346, %sfp
 10603      48
 10604              	.L900:
 10605              	.LBB539:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10606              		.loc 1 264 9 is_stmt 1 view .LVU3610
 265:sieve_extend.c **** 
 10607              		.loc 1 265 8 view .LVU3611
 10608              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10609              		.loc 1 264 20 is_stmt 0 view .LVU3612
 10610 3f76 4889F0   		mov	rax, rsi	# tmp591, ivtmp.636
 10611 3f79 31D2     		xor	edx, edx	# totalshift
 10612 3f7b 49F7F4   		div	r12	# step
 10613              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10614              		.loc 1 265 66 view .LVU3613
 10615 3f7e 4189E8   		mov	r8d, ebp	# tmp594, _1237
 10616 3f81 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
GAS LISTING /tmp/ccgH0yRS.s 			page 292


 10617 3f84 4883C720 		add	rdi, 32	# ivtmp.638,
 10618              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10619              		.loc 1 265 91 view .LVU3614
 10620 3f88 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp592, pattern, totalshift
 10620      C1
 10621              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10622              		.loc 1 265 37 view .LVU3615
 10623 3f8d 480B47E8 		or	rax, QWORD PTR -24[rdi]	# tmp593, MEM[base: _1351, offset: 8B]
 10624              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10625              		.loc 1 265 66 view .LVU3616
 10626 3f91 4129D0   		sub	r8d, edx	# tmp594, totalshift
 10627              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10628              		.loc 1 265 50 view .LVU3617
 10629 3f94 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp595, pattern, tmp594
 10629      D1
 10630              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10631              		.loc 1 265 66 view .LVU3618
 10632 3f99 4189E8   		mov	r8d, ebp	# tmp863, _1237
 10633              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10634              		.loc 1 265 37 view .LVU3619
 10635 3f9c 4809D0   		or	rax, rdx	# tmp596, tmp595
 10636              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10637              		.loc 1 264 20 view .LVU3620
 10638 3f9f 31D2     		xor	edx, edx	# totalshift
 10639              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10640              		.loc 1 265 37 view .LVU3621
 10641 3fa1 488947E8 		mov	QWORD PTR -24[rdi], rax	# MEM[base: _1351, offset: 8B], tmp596
 10642              	.LBE539:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10643              		.loc 1 263 41 is_stmt 1 view .LVU3622
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10644              		.loc 1 263 24 view .LVU3623
 10645              	.LBB540:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10646              		.loc 1 264 9 view .LVU3624
 265:sieve_extend.c **** 
 10647              		.loc 1 265 8 view .LVU3625
 10648              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10649              		.loc 1 264 20 is_stmt 0 view .LVU3626
 10650 3fa5 4889F0   		mov	rax, rsi	# tmp860, ivtmp.636
 10651 3fa8 49F7F4   		div	r12	# step
 10652 3fab 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10653              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10654              		.loc 1 265 91 view .LVU3627
 10655 3fae C4E2E9F7 		shlx	rax, rcx, rdx	# tmp861, pattern, totalshift
 10655      C1
 10656              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
GAS LISTING /tmp/ccgH0yRS.s 			page 293


 265:sieve_extend.c **** 
 10657              		.loc 1 265 37 view .LVU3628
 10658 3fb3 480B47F0 		or	rax, QWORD PTR -16[rdi]	# tmp862, MEM[base: _1351, offset: 8B]
 10659              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10660              		.loc 1 265 66 view .LVU3629
 10661 3fb7 4129D0   		sub	r8d, edx	# tmp863, totalshift
 10662              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10663              		.loc 1 265 50 view .LVU3630
 10664 3fba C4E2BBF7 		shrx	rdx, rcx, r8	# tmp864, pattern, tmp863
 10664      D1
 10665              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10666              		.loc 1 265 66 view .LVU3631
 10667 3fbf 4189E8   		mov	r8d, ebp	# tmp872, _1237
 10668              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10669              		.loc 1 265 37 view .LVU3632
 10670 3fc2 4809D0   		or	rax, rdx	# tmp865, tmp864
 10671              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10672              		.loc 1 264 20 view .LVU3633
 10673 3fc5 31D2     		xor	edx, edx	# totalshift
 10674              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10675              		.loc 1 265 37 view .LVU3634
 10676 3fc7 488947F0 		mov	QWORD PTR -16[rdi], rax	# MEM[base: _1351, offset: 8B], tmp865
 10677              	.LBE540:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10678              		.loc 1 263 41 is_stmt 1 view .LVU3635
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10679              		.loc 1 263 24 view .LVU3636
 10680              	.LBB541:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10681              		.loc 1 264 9 view .LVU3637
 265:sieve_extend.c **** 
 10682              		.loc 1 265 8 view .LVU3638
 10683              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10684              		.loc 1 264 20 is_stmt 0 view .LVU3639
 10685 3fcb 4889F0   		mov	rax, rsi	# tmp869, ivtmp.636
 10686 3fce 49F7F4   		div	r12	# step
 10687 3fd1 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10688              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10689              		.loc 1 265 91 view .LVU3640
 10690 3fd4 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp870, pattern, totalshift
 10690      C1
 10691              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10692              		.loc 1 265 37 view .LVU3641
 10693 3fd9 480B47F8 		or	rax, QWORD PTR -8[rdi]	# tmp871, MEM[base: _1351, offset: 8B]
 10694              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10695              		.loc 1 265 66 view .LVU3642
 10696 3fdd 4129D0   		sub	r8d, edx	# tmp872, totalshift
GAS LISTING /tmp/ccgH0yRS.s 			page 294


 10697              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10698              		.loc 1 265 50 view .LVU3643
 10699 3fe0 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp873, pattern, tmp872
 10699      D1
 10700              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10701              		.loc 1 265 66 view .LVU3644
 10702 3fe5 4189E8   		mov	r8d, ebp	# tmp881, _1237
 10703              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10704              		.loc 1 265 37 view .LVU3645
 10705 3fe8 4809D0   		or	rax, rdx	# tmp874, tmp873
 10706              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10707              		.loc 1 264 20 view .LVU3646
 10708 3feb 31D2     		xor	edx, edx	# totalshift
 10709              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10710              		.loc 1 265 37 view .LVU3647
 10711 3fed 488947F8 		mov	QWORD PTR -8[rdi], rax	# MEM[base: _1351, offset: 8B], tmp874
 10712              	.LBE541:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10713              		.loc 1 263 41 is_stmt 1 view .LVU3648
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10714              		.loc 1 263 24 view .LVU3649
 10715              	.LBB542:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10716              		.loc 1 264 9 view .LVU3650
 265:sieve_extend.c **** 
 10717              		.loc 1 265 8 view .LVU3651
 10718              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 10719              		.loc 1 264 20 is_stmt 0 view .LVU3652
 10720 3ff1 4889F0   		mov	rax, rsi	# tmp878, ivtmp.636
 10721 3ff4 49F7F4   		div	r12	# step
 10722 3ff7 4C01CE   		add	rsi, r9	# ivtmp.636, pattern_shift
 10723              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10724              		.loc 1 265 91 view .LVU3653
 10725 3ffa C4E2E9F7 		shlx	rax, rcx, rdx	# tmp879, pattern, totalshift
 10725      C1
 10726              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10727              		.loc 1 265 37 view .LVU3654
 10728 3fff 480B07   		or	rax, QWORD PTR [rdi]	# tmp880, MEM[base: _1351, offset: 8B]
 10729              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10730              		.loc 1 265 66 view .LVU3655
 10731 4002 4129D0   		sub	r8d, edx	# tmp881, totalshift
 10732              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 10733              		.loc 1 265 50 view .LVU3656
 10734 4005 C4E2BBF7 		shrx	rdx, rcx, r8	# tmp882, pattern, tmp881
 10734      D1
 10735              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
GAS LISTING /tmp/ccgH0yRS.s 			page 295


 10736              		.loc 1 265 37 view .LVU3657
 10737 400a 4809D0   		or	rax, rdx	# tmp883, tmp882
 10738 400d 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _1351, offset: 8B], tmp883
 10739              	.LBE542:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10740              		.loc 1 263 41 is_stmt 1 view .LVU3658
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10741              		.loc 1 263 24 view .LVU3659
 10742              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10743              		.loc 1 263 4 is_stmt 0 view .LVU3660
 10744 4010 4939FB   		cmp	r11, rdi	# _1346, ivtmp.638
 10745 4013 0F855DFF 		jne	.L900	#,
 10745      FFFF
 10746 4019 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	# _69, %sfp
 10746      50
 10747              	.L901:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10748              		.loc 1 263 4 view .LVU3661
 10749              	.LBE535:
 269:sieve_extend.c **** 
 10750              		.loc 1 269 4 is_stmt 1 view .LVU3662
 10751              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 10752              		.loc 1 269 30 is_stmt 0 view .LVU3663
 10753 401e 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# _1235, %sfp
 10753      28
 10754              	.LVL501:
 269:sieve_extend.c **** 
 10755              		.loc 1 269 30 view .LVU3664
 10756 4023 4F2124D7 		and	QWORD PTR [r15+r10*8], r12	# *_151, _1235
 10757              	.LVL502:
 269:sieve_extend.c **** 
 10758              		.loc 1 269 30 view .LVU3665
 10759              	.LBE532:
 10760              	.LBE531:
 10761              	.LBE583:
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10762              		.loc 1 979 11 is_stmt 1 view .LVU3666
 10763              	# sieve_extend.c:979:     for (;range_stop < block_stop;) {
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10764              		.loc 1 979 5 is_stmt 0 view .LVU3667
 10765 4027 4C3B4424 		cmp	r8, QWORD PTR 8[rsp]	# _69, %sfp
 10765      08
 10766 402c 0F8204FC 		jb	.L924	#,
 10766      FFFF
 10767              	.L1496:
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10768              		.loc 1 979 5 view .LVU3668
 10769 4032 4C8B7C24 		mov	r15, QWORD PTR 48[rsp]	# <retval>, %sfp
 10769      30
 10770              	.LVL503:
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10771              		.loc 1 979 5 view .LVU3669
 10772 4037 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 10773 403a 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 10773      10
GAS LISTING /tmp/ccgH0yRS.s 			page 296


 10774              	.LBE589:
 10775              	.LBE597:
 10776              	.LBB598:
 10777              	.LBB599:
 10778              	# sieve_extend.c:874:     if (size < WORD_SIZE_counter)   {
 874:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10779              		.loc 1 874 8 view .LVU3670
 10780 403f 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 10781              	.LBE599:
 10782              	.LBE598:
 10783              	.LBB604:
 10784              	.LBB590:
 10785              	# sieve_extend.c:979:     for (;range_stop < block_stop;) {
 979:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1);
 10786              		.loc 1 979 5 view .LVU3671
 10787 4043 4C896C24 		mov	QWORD PTR 40[rsp], r13	# %sfp, index
 10787      28
1005:sieve_extend.c **** }
 10788              		.loc 1 1005 5 is_stmt 1 view .LVU3672
 10789              	.LVL504:
1005:sieve_extend.c **** }
 10790              		.loc 1 1005 5 is_stmt 0 view .LVU3673
 10791              	.LBE590:
 10792              	.LBE604:
1017:sieve_extend.c ****     prime = block.prime;
 10793              		.loc 1 1017 5 is_stmt 1 view .LVU3674
 10794              	.LBB605:
 10795              	.LBI598:
 873:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 10796              		.loc 1 873 20 view .LVU3675
 10797              	.LBB600:
 874:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10798              		.loc 1 874 5 view .LVU3676
 10799 4048 498B5F08 		mov	rbx, QWORD PTR 8[r15]	# prephitmp_1432, sieve_92->bits
 10800 404c 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, prephitmp_1432
 10800      08
 10801              	# sieve_extend.c:874:     if (size < WORD_SIZE_counter)   {
 874:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 10802              		.loc 1 874 8 is_stmt 0 view .LVU3677
 10803 4051 0F874705 		ja	.L925	#,
 10803      0000
 10804              	.LVL505:
 10805              	.L882:
 875:sieve_extend.c ****         return; // rapid exit for small sizes
 10806              		.loc 1 875 9 is_stmt 1 view .LVU3678
 10807 4057 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 10807      08
 10808 405c 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 10808      38
 10809 4061 E89ABFFF 		call	extendSieve_smallSize	#
 10809      FF
 10810              	.LVL506:
 876:sieve_extend.c ****     }
 10811              		.loc 1 876 9 view .LVU3679
 10812 4066 E9600500 		jmp	.L926	#
 10812      00
 10813              	.LVL507:
GAS LISTING /tmp/ccgH0yRS.s 			page 297


 10814 406b 0F1F4400 		.p2align 4,,7
 10814      00
 10815              		.p2align 3
 10816              	.L917:
 876:sieve_extend.c ****     }
 10817              		.loc 1 876 9 is_stmt 0 view .LVU3680
 10818              	.LBE600:
 10819              	.LBE605:
 10820              	.LBB606:
 10821              	.LBB591:
 10822              	.LBB584:
1001:sieve_extend.c ****         block.prime = prime;
 10823              		.loc 1 1001 48 is_stmt 1 view .LVU3681
 10824              	.LBB545:
 10825              	.LBI545:
 412:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 10826              		.loc 1 412 20 view .LVU3682
 10827              	.LBB546:
 413:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10828              		.loc 1 413 5 view .LVU3683
 414:sieve_extend.c **** 
 10829              		.loc 1 414 5 view .LVU3684
 10830              	# sieve_extend.c:414:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 414:sieve_extend.c **** 
 10831              		.loc 1 414 74 is_stmt 0 view .LVU3685
 10832 4070 4D89E3   		mov	r11, r12	# tmp625, step
 10833 4073 49C1E306 		sal	r11, 6	# tmp625,
 10834              	# sieve_extend.c:414:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 414:sieve_extend.c **** 
 10835              		.loc 1 414 21 view .LVU3686
 10836 4077 498D3C2B 		lea	rdi, [r11+rbp]	# range_stop_unique,
 10837              	.LVL508:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10838              		.loc 1 418 5 is_stmt 1 view .LVU3687
 10839              	.LBB547:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10840              		.loc 1 418 10 view .LVU3688
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10841              		.loc 1 418 50 view .LVU3689
 10842              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 10843              		.loc 1 418 5 is_stmt 0 view .LVU3690
 10844 407b 4839FD   		cmp	rbp, rdi	# index, range_stop_unique
 10845 407e 0F83A7FB 		jnb	.L898	#,
 10845      FFFF
 10846              	.LBB548:
 10847              	.LBB549:
 10848              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10849              		.loc 1 175 20 view .LVU3691
 10850 4084 4C89C2   		mov	rdx, r8	# range_stop_word, _69
 10851              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 10852              		.loc 1 201 29 view .LVU3692
 10853 4087 4489C6   		mov	esi, r8d	# tmp630, _69
 10854              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
GAS LISTING /tmp/ccgH0yRS.s 			page 298


 10855              		.loc 1 175 20 view .LVU3693
 10856 408a 48C1EA06 		shr	rdx, 6	# range_stop_word,
 10857              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10858              		.loc 1 177 110 view .LVU3694
 10859 408e 4B8D04A4 		lea	rax, [r12+r12*4]	# tmp628,
 10860              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 10861              		.loc 1 201 29 view .LVU3695
 10862 4092 49C7C2FF 		mov	r10, -1	# tmp1650,
 10862      FFFFFF
 10863 4099 F7D6     		not	esi	# tmp630
 10864 409b C442CBF7 		shrx	r11, r10, rsi	# _288, tmp1650, tmp630
 10864      DA
 10865              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10866              		.loc 1 177 133 view .LVU3696
 10867 40a0 4889D6   		mov	rsi, rdx	# tmp634, range_stop_word
 10868 40a3 4829C6   		sub	rsi, rax	# tmp634, tmp628
 10869              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10870              		.loc 1 177 53 view .LVU3697
 10871 40a6 4839C2   		cmp	rdx, rax	# range_stop_word, tmp628
 10872              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 10873              		.loc 1 201 29 view .LVU3698
 10874 40a9 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, _288
 10874      28
 10875              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 10876              		.loc 1 177 53 view .LVU3699
 10877 40ae 4D8D14F7 		lea	r10, [r15+rsi*8]	# tmp636,
 10878 40b2 4D89E3   		mov	r11, r12	# _1320, step
 10879 40b5 4D0F46D7 		cmovbe	r10, r15	# _97,, fast_loop_ptr
 10880              	.LBE549:
 10881              	.LBE548:
 10882              	# sieve_extend.c:419:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 419:sieve_extend.c ****     }
 10883              		.loc 1 419 9 view .LVU3700
 10884 40b9 4C894424 		mov	QWORD PTR 72[rsp], r8	# %sfp, _69
 10884      48
 10885              	.LBB553:
 10886              	.LBB550:
 10887              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 10888              		.loc 1 183 17 view .LVU3701
 10889 40be 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _256,
 10889      00000000 
 10890              	# sieve_extend.c:194:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10891              		.loc 1 194 41 view .LVU3702
 10892 40c6 4D8D0CD7 		lea	r9, [r15+rdx*8]	# range_stop_ptr,
 10893              	.LBE550:
 10894              	.LBE553:
 10895              	# sieve_extend.c:419:         applyMask(bitarray, step, range_stop, markmask(index), wordindex(inde
 419:sieve_extend.c ****     }
 10896              		.loc 1 419 9 view .LVU3703
GAS LISTING /tmp/ccgH0yRS.s 			page 299


 10897 40ca 4989F8   		mov	r8, rdi	# range_stop_unique, range_stop_unique
 10898              	.LVL509:
 419:sieve_extend.c ****     }
 10899              		.loc 1 419 9 view .LVU3704
 10900 40cd 48C1E003 		sal	rax, 3	# tmp640,
 10901 40d1 49C1E304 		sal	r11, 4	# _1320,
 10902              	.LVL510:
 10903 40d5 66662E0F 		.p2align 4
 10903      1F840000 
 10903      000000
 10904              		.p2align 3
 10905              	.L923:
 419:sieve_extend.c ****     }
 10906              		.loc 1 419 9 is_stmt 1 view .LVU3705
 10907 40e0 4889EA   		mov	rdx, rbp	# tmp643, index
 10908 40e3 BF010000 		mov	edi, 1	# tmp1653,
 10908      00
 10909 40e8 48C1EA06 		shr	rdx, 6	# tmp643,
 10910 40ec C4E2D1F7 		shlx	rsi, rdi, rbp	# _241, tmp1653, index
 10910      F7
 10911              	.LVL511:
 10912              	.LBB554:
 10913              	.LBI548:
 147:sieve_extend.c **** //#if __APPLE__
 10914              		.loc 1 147 20 view .LVU3706
 10915              	.LBB551:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 10916              		.loc 1 175 4 view .LVU3707
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10917              		.loc 1 176 4 view .LVU3708
 10918              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 10919              		.loc 1 176 78 is_stmt 0 view .LVU3709
 10920 40f1 498D14D7 		lea	rdx, [r15+rdx*8]	# index_ptr,
 10921              	.LVL512:
 177:sieve_extend.c **** 
 10922              		.loc 1 177 4 is_stmt 1 view .LVU3710
 181:sieve_extend.c ****        *index_ptr |= mask;
 10923              		.loc 1 181 4 view .LVU3711
 181:sieve_extend.c ****        *index_ptr |= mask;
 10924              		.loc 1 181 10 view .LVU3712
 10925 40f5 4C39D2   		cmp	rdx, r10	# index_ptr, fast_loop_ptr
 10926 40f8 0F830201 		jnb	.L918	#,
 10926      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 10927              		.loc 1 181 10 is_stmt 0 view .LVU3713
 10928 40fe 4A8D3C1A 		lea	rdi, [rdx+r11]	# ivtmp.679,
 10929              	.L919:
 182:sieve_extend.c ****        index_ptr+=step;
 10930              		.loc 1 182 8 is_stmt 1 view .LVU3714
 10931              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10932              		.loc 1 182 19 is_stmt 0 view .LVU3715
 10933 4102 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 10934              		.loc 1 183 8 is_stmt 1 view .LVU3716
 10935              	.LVL513:
GAS LISTING /tmp/ccgH0yRS.s 			page 300


 184:sieve_extend.c ****        index_ptr+=step;
 10936              		.loc 1 184 8 view .LVU3717
 10937              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10938              		.loc 1 184 19 is_stmt 0 view .LVU3718
 10939 4105 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 10940              		.loc 1 185 8 is_stmt 1 view .LVU3719
 10941              	.LVL514:
 186:sieve_extend.c ****        index_ptr+=step;
 10942              		.loc 1 186 8 view .LVU3720
 10943              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10944              		.loc 1 186 19 is_stmt 0 view .LVU3721
 10945 4109 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 10946              		.loc 1 187 8 is_stmt 1 view .LVU3722
 10947              	.LVL515:
 188:sieve_extend.c ****        index_ptr+=step;
 10948              		.loc 1 188 8 view .LVU3723
 10949              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10950              		.loc 1 188 19 is_stmt 0 view .LVU3724
 10951 410c 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 10952              		.loc 1 189 8 is_stmt 1 view .LVU3725
 10953              	.LVL516:
 190:sieve_extend.c ****        index_ptr+=step;
 10954              		.loc 1 190 8 view .LVU3726
 10955 4110 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 10956              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10957              		.loc 1 190 19 is_stmt 0 view .LVU3727
 10958 4113 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 10959              		.loc 1 191 8 is_stmt 1 view .LVU3728
 10960 4117 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10961              	.LVL517:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10962              		.loc 1 181 10 view .LVU3729
 10963 411a 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10964 411d 0F86DD00 		jbe	.L918	#,
 10964      0000
 182:sieve_extend.c ****        index_ptr+=step;
 10965              		.loc 1 182 8 view .LVU3730
 10966              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 10967              		.loc 1 182 19 is_stmt 0 view .LVU3731
 10968 4123 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 10969              		.loc 1 183 8 is_stmt 1 view .LVU3732
 10970              	.LVL518:
 184:sieve_extend.c ****        index_ptr+=step;
 10971              		.loc 1 184 8 view .LVU3733
 10972              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 10973              		.loc 1 184 19 is_stmt 0 view .LVU3734
GAS LISTING /tmp/ccgH0yRS.s 			page 301


 10974 4126 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 10975              		.loc 1 185 8 is_stmt 1 view .LVU3735
 10976              	.LVL519:
 186:sieve_extend.c ****        index_ptr+=step;
 10977              		.loc 1 186 8 view .LVU3736
 10978              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 10979              		.loc 1 186 19 is_stmt 0 view .LVU3737
 10980 412a 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 10981              		.loc 1 187 8 is_stmt 1 view .LVU3738
 10982              	.LVL520:
 188:sieve_extend.c ****        index_ptr+=step;
 10983              		.loc 1 188 8 view .LVU3739
 10984              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 10985              		.loc 1 188 19 is_stmt 0 view .LVU3740
 10986 412d 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 10987              		.loc 1 189 8 is_stmt 1 view .LVU3741
 10988              	.LVL521:
 190:sieve_extend.c ****        index_ptr+=step;
 10989              		.loc 1 190 8 view .LVU3742
 10990 4131 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 10991              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 10992              		.loc 1 190 19 is_stmt 0 view .LVU3743
 10993 4134 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 10994              		.loc 1 191 8 is_stmt 1 view .LVU3744
 10995 4138 4801C2   		add	rdx, rax	# index_ptr, tmp640
 10996              	.LVL522:
 181:sieve_extend.c ****        *index_ptr |= mask;
 10997              		.loc 1 181 10 view .LVU3745
 10998 413b 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 10999 413e 0F86BC00 		jbe	.L918	#,
 10999      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11000              		.loc 1 182 8 view .LVU3746
 11001              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11002              		.loc 1 182 19 is_stmt 0 view .LVU3747
 11003 4144 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 11004              		.loc 1 183 8 is_stmt 1 view .LVU3748
 11005              	.LVL523:
 184:sieve_extend.c ****        index_ptr+=step;
 11006              		.loc 1 184 8 view .LVU3749
 11007              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11008              		.loc 1 184 19 is_stmt 0 view .LVU3750
 11009 4147 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 11010              		.loc 1 185 8 is_stmt 1 view .LVU3751
 11011              	.LVL524:
 186:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccgH0yRS.s 			page 302


 11012              		.loc 1 186 8 view .LVU3752
 11013              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11014              		.loc 1 186 19 is_stmt 0 view .LVU3753
 11015 414b 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 11016              		.loc 1 187 8 is_stmt 1 view .LVU3754
 11017              	.LVL525:
 188:sieve_extend.c ****        index_ptr+=step;
 11018              		.loc 1 188 8 view .LVU3755
 11019              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11020              		.loc 1 188 19 is_stmt 0 view .LVU3756
 11021 414e 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 11022              		.loc 1 189 8 is_stmt 1 view .LVU3757
 11023              	.LVL526:
 190:sieve_extend.c ****        index_ptr+=step;
 11024              		.loc 1 190 8 view .LVU3758
 11025 4152 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11026              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11027              		.loc 1 190 19 is_stmt 0 view .LVU3759
 11028 4155 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 11029              		.loc 1 191 8 is_stmt 1 view .LVU3760
 11030 4159 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11031              	.LVL527:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11032              		.loc 1 181 10 view .LVU3761
 11033 415c 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11034 415f 0F869B00 		jbe	.L918	#,
 11034      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11035              		.loc 1 182 8 view .LVU3762
 11036              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11037              		.loc 1 182 19 is_stmt 0 view .LVU3763
 11038 4165 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 11039              		.loc 1 183 8 is_stmt 1 view .LVU3764
 11040              	.LVL528:
 184:sieve_extend.c ****        index_ptr+=step;
 11041              		.loc 1 184 8 view .LVU3765
 11042              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11043              		.loc 1 184 19 is_stmt 0 view .LVU3766
 11044 4168 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 11045              		.loc 1 185 8 is_stmt 1 view .LVU3767
 11046              	.LVL529:
 186:sieve_extend.c ****        index_ptr+=step;
 11047              		.loc 1 186 8 view .LVU3768
 11048              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11049              		.loc 1 186 19 is_stmt 0 view .LVU3769
 11050 416c 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
GAS LISTING /tmp/ccgH0yRS.s 			page 303


 187:sieve_extend.c ****        *index_ptr |= mask;
 11051              		.loc 1 187 8 is_stmt 1 view .LVU3770
 11052              	.LVL530:
 188:sieve_extend.c ****        index_ptr+=step;
 11053              		.loc 1 188 8 view .LVU3771
 11054              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11055              		.loc 1 188 19 is_stmt 0 view .LVU3772
 11056 416f 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 11057              		.loc 1 189 8 is_stmt 1 view .LVU3773
 11058              	.LVL531:
 190:sieve_extend.c ****        index_ptr+=step;
 11059              		.loc 1 190 8 view .LVU3774
 11060 4173 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11061              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11062              		.loc 1 190 19 is_stmt 0 view .LVU3775
 11063 4176 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 11064              		.loc 1 191 8 is_stmt 1 view .LVU3776
 11065 417a 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11066              	.LVL532:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11067              		.loc 1 181 10 view .LVU3777
 11068 417d 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11069 4180 767E     		jbe	.L918	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11070              		.loc 1 182 8 view .LVU3778
 11071              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11072              		.loc 1 182 19 is_stmt 0 view .LVU3779
 11073 4182 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 11074              		.loc 1 183 8 is_stmt 1 view .LVU3780
 11075              	.LVL533:
 184:sieve_extend.c ****        index_ptr+=step;
 11076              		.loc 1 184 8 view .LVU3781
 11077              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11078              		.loc 1 184 19 is_stmt 0 view .LVU3782
 11079 4185 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 11080              		.loc 1 185 8 is_stmt 1 view .LVU3783
 11081              	.LVL534:
 186:sieve_extend.c ****        index_ptr+=step;
 11082              		.loc 1 186 8 view .LVU3784
 11083              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11084              		.loc 1 186 19 is_stmt 0 view .LVU3785
 11085 4189 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 11086              		.loc 1 187 8 is_stmt 1 view .LVU3786
 11087              	.LVL535:
 188:sieve_extend.c ****        index_ptr+=step;
 11088              		.loc 1 188 8 view .LVU3787
 11089              	# sieve_extend.c:188:        *index_ptr |= mask;
GAS LISTING /tmp/ccgH0yRS.s 			page 304


 188:sieve_extend.c ****        index_ptr+=step;
 11090              		.loc 1 188 19 is_stmt 0 view .LVU3788
 11091 418c 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 11092              		.loc 1 189 8 is_stmt 1 view .LVU3789
 11093              	.LVL536:
 190:sieve_extend.c ****        index_ptr+=step;
 11094              		.loc 1 190 8 view .LVU3790
 11095 4190 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11096              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11097              		.loc 1 190 19 is_stmt 0 view .LVU3791
 11098 4193 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 11099              		.loc 1 191 8 is_stmt 1 view .LVU3792
 11100 4197 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11101              	.LVL537:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11102              		.loc 1 181 10 view .LVU3793
 11103 419a 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11104 419d 7661     		jbe	.L918	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11105              		.loc 1 182 8 view .LVU3794
 11106              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11107              		.loc 1 182 19 is_stmt 0 view .LVU3795
 11108 419f 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 11109              		.loc 1 183 8 is_stmt 1 view .LVU3796
 11110              	.LVL538:
 184:sieve_extend.c ****        index_ptr+=step;
 11111              		.loc 1 184 8 view .LVU3797
 11112              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11113              		.loc 1 184 19 is_stmt 0 view .LVU3798
 11114 41a2 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 11115              		.loc 1 185 8 is_stmt 1 view .LVU3799
 11116              	.LVL539:
 186:sieve_extend.c ****        index_ptr+=step;
 11117              		.loc 1 186 8 view .LVU3800
 11118              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11119              		.loc 1 186 19 is_stmt 0 view .LVU3801
 11120 41a6 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 11121              		.loc 1 187 8 is_stmt 1 view .LVU3802
 11122              	.LVL540:
 188:sieve_extend.c ****        index_ptr+=step;
 11123              		.loc 1 188 8 view .LVU3803
 11124              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11125              		.loc 1 188 19 is_stmt 0 view .LVU3804
 11126 41a9 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 11127              		.loc 1 189 8 is_stmt 1 view .LVU3805
 11128              	.LVL541:
GAS LISTING /tmp/ccgH0yRS.s 			page 305


 190:sieve_extend.c ****        index_ptr+=step;
 11129              		.loc 1 190 8 view .LVU3806
 11130 41ad 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11131              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11132              		.loc 1 190 19 is_stmt 0 view .LVU3807
 11133 41b0 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 11134              		.loc 1 191 8 is_stmt 1 view .LVU3808
 11135 41b4 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11136              	.LVL542:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11137              		.loc 1 181 10 view .LVU3809
 11138 41b7 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11139 41ba 7644     		jbe	.L918	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11140              		.loc 1 182 8 view .LVU3810
 11141              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11142              		.loc 1 182 19 is_stmt 0 view .LVU3811
 11143 41bc 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 11144              		.loc 1 183 8 is_stmt 1 view .LVU3812
 11145              	.LVL543:
 184:sieve_extend.c ****        index_ptr+=step;
 11146              		.loc 1 184 8 view .LVU3813
 11147              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11148              		.loc 1 184 19 is_stmt 0 view .LVU3814
 11149 41bf 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 11150              		.loc 1 185 8 is_stmt 1 view .LVU3815
 11151              	.LVL544:
 186:sieve_extend.c ****        index_ptr+=step;
 11152              		.loc 1 186 8 view .LVU3816
 11153              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11154              		.loc 1 186 19 is_stmt 0 view .LVU3817
 11155 41c3 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 11156              		.loc 1 187 8 is_stmt 1 view .LVU3818
 11157              	.LVL545:
 188:sieve_extend.c ****        index_ptr+=step;
 11158              		.loc 1 188 8 view .LVU3819
 11159              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11160              		.loc 1 188 19 is_stmt 0 view .LVU3820
 11161 41c6 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 11162              		.loc 1 189 8 is_stmt 1 view .LVU3821
 11163              	.LVL546:
 190:sieve_extend.c ****        index_ptr+=step;
 11164              		.loc 1 190 8 view .LVU3822
 11165 41ca 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11166              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11167              		.loc 1 190 19 is_stmt 0 view .LVU3823
GAS LISTING /tmp/ccgH0yRS.s 			page 306


 11168 41cd 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 11169              		.loc 1 191 8 is_stmt 1 view .LVU3824
 11170 41d1 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11171              	.LVL547:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11172              		.loc 1 181 10 view .LVU3825
 11173 41d4 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11174 41d7 7627     		jbe	.L918	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11175              		.loc 1 182 8 view .LVU3826
 11176              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11177              		.loc 1 182 19 is_stmt 0 view .LVU3827
 11178 41d9 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_921, offset: 0B], _241
 183:sieve_extend.c ****        *index_ptr |= mask;
 11179              		.loc 1 183 8 is_stmt 1 view .LVU3828
 11180              	.LVL548:
 184:sieve_extend.c ****        index_ptr+=step;
 11181              		.loc 1 184 8 view .LVU3829
 11182              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11183              		.loc 1 184 19 is_stmt 0 view .LVU3830
 11184 41dc 4809340A 		or	QWORD PTR [rdx+rcx], rsi	# MEM[base: index_ptr_921, index: _256, offset: 0B], _241
 185:sieve_extend.c ****        *index_ptr |= mask;
 11185              		.loc 1 185 8 is_stmt 1 view .LVU3831
 11186              	.LVL549:
 186:sieve_extend.c ****        index_ptr+=step;
 11187              		.loc 1 186 8 view .LVU3832
 11188              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11189              		.loc 1 186 19 is_stmt 0 view .LVU3833
 11190 41e0 480937   		or	QWORD PTR [rdi], rsi	# MEM[base: _1314, offset: 0B], _241
 187:sieve_extend.c ****        *index_ptr |= mask;
 11191              		.loc 1 187 8 is_stmt 1 view .LVU3834
 11192              	.LVL550:
 188:sieve_extend.c ****        index_ptr+=step;
 11193              		.loc 1 188 8 view .LVU3835
 11194              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11195              		.loc 1 188 19 is_stmt 0 view .LVU3836
 11196 41e3 4809340F 		or	QWORD PTR [rdi+rcx], rsi	# MEM[base: _1314, index: _256, offset: 0B], _241
 189:sieve_extend.c ****        *index_ptr |= mask;
 11197              		.loc 1 189 8 is_stmt 1 view .LVU3837
 11198              	.LVL551:
 190:sieve_extend.c ****        index_ptr+=step;
 11199              		.loc 1 190 8 view .LVU3838
 11200 41e7 4801C7   		add	rdi, rax	# ivtmp.679, tmp640
 11201              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11202              		.loc 1 190 19 is_stmt 0 view .LVU3839
 11203 41ea 4809348A 		or	QWORD PTR [rdx+rcx*4], rsi	# MEM[base: index_ptr_921, index: _256, step: 4, offset: 0B], _241
 191:sieve_extend.c ****    }
 11204              		.loc 1 191 8 is_stmt 1 view .LVU3840
 11205 41ee 4801C2   		add	rdx, rax	# index_ptr, tmp640
 11206              	.LVL552:
 181:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccgH0yRS.s 			page 307


 11207              		.loc 1 181 10 view .LVU3841
 11208 41f1 4939D2   		cmp	r10, rdx	# fast_loop_ptr, index_ptr
 11209 41f4 0F8708FF 		ja	.L919	#,
 11209      FFFF
 11210 41fa 660F1F44 		.p2align 4
 11210      0000
 11211              		.p2align 3
 11212              	.L918:
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11213              		.loc 1 194 4 view .LVU3842
 195:sieve_extend.c ****        *index_ptr |= mask;
 11214              		.loc 1 195 4 view .LVU3843
 195:sieve_extend.c ****        *index_ptr |= mask;
 11215              		.loc 1 195 10 view .LVU3844
 11216 4200 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11217 4203 765B     		jbe	.L920	#,
 11218              	.L921:
 196:sieve_extend.c ****        index_ptr+=step;
 11219              		.loc 1 196 8 view .LVU3845
 11220              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11221              		.loc 1 196 19 is_stmt 0 view .LVU3846
 11222 4205 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11223              		.loc 1 197 8 is_stmt 1 view .LVU3847
 11224              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11225              		.loc 1 197 17 is_stmt 0 view .LVU3848
 11226 4208 4801CA   		add	rdx, rcx	# index_ptr, _256
 11227              	.LVL553:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11228              		.loc 1 195 10 is_stmt 1 view .LVU3849
 11229 420b 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11230 420e 7650     		jbe	.L920	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11231              		.loc 1 196 8 view .LVU3850
 11232              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11233              		.loc 1 196 19 is_stmt 0 view .LVU3851
 11234 4210 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11235              		.loc 1 197 8 is_stmt 1 view .LVU3852
 11236              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11237              		.loc 1 197 17 is_stmt 0 view .LVU3853
 11238 4213 4801CA   		add	rdx, rcx	# index_ptr, _256
 11239              	.LVL554:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11240              		.loc 1 195 10 is_stmt 1 view .LVU3854
 11241 4216 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11242 4219 7645     		jbe	.L920	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11243              		.loc 1 196 8 view .LVU3855
 11244              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11245              		.loc 1 196 19 is_stmt 0 view .LVU3856
 11246 421b 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
GAS LISTING /tmp/ccgH0yRS.s 			page 308


 197:sieve_extend.c ****    }
 11247              		.loc 1 197 8 is_stmt 1 view .LVU3857
 11248              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11249              		.loc 1 197 17 is_stmt 0 view .LVU3858
 11250 421e 4801CA   		add	rdx, rcx	# index_ptr, _256
 11251              	.LVL555:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11252              		.loc 1 195 10 is_stmt 1 view .LVU3859
 11253 4221 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11254 4224 763A     		jbe	.L920	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11255              		.loc 1 196 8 view .LVU3860
 11256              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11257              		.loc 1 196 19 is_stmt 0 view .LVU3861
 11258 4226 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11259              		.loc 1 197 8 is_stmt 1 view .LVU3862
 11260              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11261              		.loc 1 197 17 is_stmt 0 view .LVU3863
 11262 4229 4801CA   		add	rdx, rcx	# index_ptr, _256
 11263              	.LVL556:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11264              		.loc 1 195 10 is_stmt 1 view .LVU3864
 11265 422c 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11266 422f 762F     		jbe	.L920	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11267              		.loc 1 196 8 view .LVU3865
 11268              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11269              		.loc 1 196 19 is_stmt 0 view .LVU3866
 11270 4231 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11271              		.loc 1 197 8 is_stmt 1 view .LVU3867
 11272              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11273              		.loc 1 197 17 is_stmt 0 view .LVU3868
 11274 4234 4801CA   		add	rdx, rcx	# index_ptr, _256
 11275              	.LVL557:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11276              		.loc 1 195 10 is_stmt 1 view .LVU3869
 11277 4237 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11278 423a 7624     		jbe	.L920	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11279              		.loc 1 196 8 view .LVU3870
 11280              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11281              		.loc 1 196 19 is_stmt 0 view .LVU3871
 11282 423c 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11283              		.loc 1 197 8 is_stmt 1 view .LVU3872
 11284              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11285              		.loc 1 197 17 is_stmt 0 view .LVU3873
 11286 423f 4801CA   		add	rdx, rcx	# index_ptr, _256
GAS LISTING /tmp/ccgH0yRS.s 			page 309


 11287              	.LVL558:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11288              		.loc 1 195 10 is_stmt 1 view .LVU3874
 11289 4242 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11290 4245 7619     		jbe	.L920	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11291              		.loc 1 196 8 view .LVU3875
 11292              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11293              		.loc 1 196 19 is_stmt 0 view .LVU3876
 11294 4247 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11295              		.loc 1 197 8 is_stmt 1 view .LVU3877
 11296              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11297              		.loc 1 197 17 is_stmt 0 view .LVU3878
 11298 424a 4801CA   		add	rdx, rcx	# index_ptr, _256
 11299              	.LVL559:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11300              		.loc 1 195 10 is_stmt 1 view .LVU3879
 11301 424d 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11302 4250 760E     		jbe	.L920	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11303              		.loc 1 196 8 view .LVU3880
 11304              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11305              		.loc 1 196 19 is_stmt 0 view .LVU3881
 11306 4252 480932   		or	QWORD PTR [rdx], rsi	# MEM[base: index_ptr_919, offset: 0B], _241
 197:sieve_extend.c ****    }
 11307              		.loc 1 197 8 is_stmt 1 view .LVU3882
 11308              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11309              		.loc 1 197 17 is_stmt 0 view .LVU3883
 11310 4255 4801CA   		add	rdx, rcx	# index_ptr, _256
 11311              	.LVL560:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11312              		.loc 1 195 10 is_stmt 1 view .LVU3884
 11313 4258 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11314 425b 77A8     		ja	.L921	#,
 11315 425d 0F1F00   		.p2align 4
 11316              		.p2align 3
 11317              	.L920:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11318              		.loc 1 200 4 view .LVU3885
 11319              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11320              		.loc 1 200 7 is_stmt 0 view .LVU3886
 11321 4260 4939D1   		cmp	r9, rdx	# range_stop_ptr, index_ptr
 11322 4263 741B     		je	.L1500	#,
 11323              	.LVL561:
 11324              	.L922:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11325              		.loc 1 200 7 view .LVU3887
 11326              	.LBE551:
 11327              	.LBE554:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11328              		.loc 1 418 77 is_stmt 1 view .LVU3888
GAS LISTING /tmp/ccgH0yRS.s 			page 310


 11329              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11330              		.loc 1 418 83 is_stmt 0 view .LVU3889
 11331 4265 4C01E5   		add	rbp, r12	# index, step
 11332              	.LVL562:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11333              		.loc 1 418 50 is_stmt 1 view .LVU3890
 11334              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11335              		.loc 1 418 5 is_stmt 0 view .LVU3891
 11336 4268 4939E8   		cmp	r8, rbp	# range_stop_unique, index
 11337 426b 0F876FFE 		ja	.L923	#,
 11337      FFFF
 11338 4271 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# _69, %sfp
 11338      48
 11339              	.LVL563:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 11340              		.loc 1 418 5 view .LVU3892
 11341 4276 E9B0F9FF 		jmp	.L898	#
 11341      FF
 11342              	.LVL564:
 11343 427b 0F1F4400 		.p2align 4,,7
 11343      00
 11344              		.p2align 3
 11345              	.L1500:
 11346              	.LBB555:
 11347              	.LBB552:
 201:sieve_extend.c ****    }
 11348              		.loc 1 201 7 is_stmt 1 view .LVU3893
 11349              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11350              		.loc 1 201 27 is_stmt 0 view .LVU3894
 11351 4280 48237424 		and	rsi, QWORD PTR 40[rsp]	# tmp645, %sfp
 11351      28
 11352              	.LVL565:
 11353              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11354              		.loc 1 201 18 view .LVU3895
 11355 4285 490931   		or	QWORD PTR [r9], rsi	# *index_ptr_918, tmp645
 11356 4288 EBDB     		jmp	.L922	#
 11357              	.LVL566:
 11358 428a 660F1F44 		.p2align 4,,7
 11358      0000
 11359              		.p2align 3
 11360              	.L1495:
 201:sieve_extend.c ****    }
 11361              		.loc 1 201 18 view .LVU3896
 11362              	.LBE552:
 11363              	.LBE555:
 11364              	.LBE547:
 11365              	.LBE546:
 11366              	.LBE545:
 999:sieve_extend.c ****         else if (step < WORD_SIZE_counter * 4) setBitsTrue_largeRange_vector(bitarray, start, step,
 11367              		.loc 1 999 48 is_stmt 1 view .LVU3897
 11368              	.LBB556:
 11369              	.LBI556:
 297:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
GAS LISTING /tmp/ccgH0yRS.s 			page 311


 11370              		.loc 1 297 14 view .LVU3898
 11371              	.LBB557:
 298:sieve_extend.c **** 
 11372              		.loc 1 298 5 view .LVU3899
 11373              	# sieve_extend.c:298:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 298:sieve_extend.c **** 
 11374              		.loc 1 298 74 is_stmt 0 view .LVU3900
 11375 4290 4C89E7   		mov	rdi, r12	# tmp597, step
 11376 4293 48C1E706 		sal	rdi, 6	# tmp597,
 11377 4297 4801EF   		add	rdi, rbp	# tmp597, index
 11378 429a 48897C24 		mov	QWORD PTR 72[rsp], rdi	# %sfp, tmp598
 11378      48
 11379 429f 0F92C0   		setc	al	#, _592
 11380              	# sieve_extend.c:300:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11381              		.loc 1 300 8 view .LVU3901
 11382 42a2 4939F8   		cmp	r8, rdi	# _69, tmp598
 11383 42a5 440FB6C8 		movzx	r9d, al	# _592, _592
 11384              	.LVL567:
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11385              		.loc 1 300 5 is_stmt 1 view .LVU3902
 11386              	# sieve_extend.c:300:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 11387              		.loc 1 300 8 is_stmt 0 view .LVU3903
 11388 42a9 0F827404 		jb	.L905	#,
 11388      0000
 11389              	.LVL568:
 11390              	.LBB558:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11391              		.loc 1 321 54 is_stmt 1 view .LVU3904
 11392              	# sieve_extend.c:321:         for (register counter_t index = range_start; index <= range_stop_uniq
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11393              		.loc 1 321 9 is_stmt 0 view .LVU3905
 11394 42af 4D85C9   		test	r9, r9	# _592
 11395 42b2 0F8573F9 		jne	.L898	#,
 11395      FFFF
 11396              	.LBB559:
 11397              	.LBB560:
 11398              	.LBB561:
 11399              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11400              		.loc 1 175 20 view .LVU3906
 11401 42b8 4D89C3   		mov	r11, r8	# range_stop_word, _69
 11402              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 11403              		.loc 1 177 110 view .LVU3907
 11404 42bb 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp606,
 11405              	.LVL569:
 11406              	# sieve_extend.c:175:    const counter_t range_stop_word = wordindex(range_stop);
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11407              		.loc 1 175 20 view .LVU3908
 11408 42bf 49C1EB06 		shr	r11, 6	# range_stop_word,
 11409              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11410              		.loc 1 201 29 view .LVU3909
 11411 42c3 4589C2   		mov	r10d, r8d	# tmp608, _69
 11412              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
GAS LISTING /tmp/ccgH0yRS.s 			page 312


 177:sieve_extend.c **** 
 11413              		.loc 1 177 133 view .LVU3910
 11414 42c6 4C89D8   		mov	rax, r11	# tmp612, range_stop_word
 11415              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11416              		.loc 1 201 29 view .LVU3911
 11417 42c9 41F7D2   		not	r10d	# tmp608
 11418              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 11419              		.loc 1 177 133 view .LVU3912
 11420 42cc 4829F8   		sub	rax, rdi	# tmp612, tmp606
 11421 42cf 4939FB   		cmp	r11, rdi	# range_stop_word, tmp606
 11422              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11423              		.loc 1 201 29 view .LVU3913
 11424 42d2 48C7C6FF 		mov	rsi, -1	# tmp1638,
 11424      FFFFFF
 11425 42d9 C4E2ABF7 		shrx	rdx, rsi, r10	# _232, tmp1638, tmp608
 11425      D6
 11426 42de 4D8D14C7 		lea	r10, [r15+rax*8]	# tmp614,
 11427 42e2 4C89E6   		mov	rsi, r12	# _1339, step
 11428 42e5 4D0F46D7 		cmovbe	r10, r15	# _97,, fast_loop_ptr
 11429              	# sieve_extend.c:194:    const register bitword_t* __restrict range_stop_ptr = &bitarray[(range_sto
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11430              		.loc 1 194 41 view .LVU3914
 11431 42e9 4F8D0CDF 		lea	r9, [r15+r11*8]	# range_stop_ptr,
 11432 42ed 48C1E604 		sal	rsi, 4	# _1339,
 11433              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 11434              		.loc 1 183 17 view .LVU3915
 11435 42f1 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _200,
 11435      00000000 
 11436              	.LBE561:
 11437              	.LBE560:
 11438              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11439              		.loc 1 326 25 view .LVU3916
 11440 42f9 48895C24 		mov	QWORD PTR 80[rsp], rbx	# %sfp, index
 11440      50
 11441 42fe 41BB0100 		mov	r11d, 1	# tmp621,
 11441      0000
 11442 4304 4C894424 		mov	QWORD PTR 88[rsp], r8	# %sfp, _69
 11442      58
 11443 4309 4889F3   		mov	rbx, rsi	# _1339, _1339
 11444              	.LBB565:
 11445              	.LBB562:
 11446              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 11447              		.loc 1 201 29 view .LVU3917
 11448 430c 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, _232
 11448      28
 11449 4311 48C1E703 		sal	rdi, 3	# tmp618,
 11450              	.LBE562:
 11451              	.LBE565:
 11452              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11453              		.loc 1 326 25 view .LVU3918
GAS LISTING /tmp/ccgH0yRS.s 			page 313


 11454 4315 4C8B4424 		mov	r8, QWORD PTR 72[rsp]	# tmp598, %sfp
 11454      48
 11455              	.LVL570:
 11456 431a 660F1F44 		.p2align 4
 11456      0000
 11457              		.p2align 3
 11458              	.L916:
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11459              		.loc 1 322 13 is_stmt 1 view .LVU3919
 11460              	# sieve_extend.c:322:             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11461              		.loc 1 322 32 is_stmt 0 view .LVU3920
 11462 4320 4889E8   		mov	rax, rbp	# index_word, index
 11463              	# sieve_extend.c:323:             register bitword_t mask = SAFE_ZERO;
 323:sieve_extend.c ****             #pragma ivdep
 11464              		.loc 1 323 32 view .LVU3921
 11465 4323 31D2     		xor	edx, edx	# mask
 11466              	# sieve_extend.c:322:             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 11467              		.loc 1 322 32 view .LVU3922
 11468 4325 48C1E806 		shr	rax, 6	# index_word,
 11469              	.LVL571:
 323:sieve_extend.c ****             #pragma ivdep
 11470              		.loc 1 323 13 is_stmt 1 view .LVU3923
 11471              	.L910:
 325:sieve_extend.c ****                 mask |= markmask(index);
 11472              		.loc 1 325 13 view .LVU3924
 326:sieve_extend.c ****                 index += step;
 11473              		.loc 1 326 17 view .LVU3925
 11474              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11475              		.loc 1 326 25 is_stmt 0 view .LVU3926
 11476 4329 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp620, tmp621, index
 11476      F3
 11477              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11478              		.loc 1 327 23 view .LVU3927
 11479 432e 4C01E5   		add	rbp, r12	# index, step
 11480              	.LVL572:
 11481              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11482              		.loc 1 326 22 view .LVU3928
 11483 4331 4809F2   		or	rdx, rsi	# mask, tmp620
 11484              	.LVL573:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11485              		.loc 1 327 17 is_stmt 1 view .LVU3929
 328:sieve_extend.c ****             // #pragma ivdep
 11486              		.loc 1 328 21 view .LVU3930
 11487              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11488              		.loc 1 328 36 is_stmt 0 view .LVU3931
 11489 4334 4889EE   		mov	rsi, rbp	# tmp622, index
 11490 4337 48C1EE06 		shr	rsi, 6	# tmp622,
 11491              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11492              		.loc 1 328 13 view .LVU3932
 11493 433b 4839F0   		cmp	rax, rsi	# index_word, tmp622
GAS LISTING /tmp/ccgH0yRS.s 			page 314


 11494 433e 0F85AC00 		jne	.L1356	#,
 11494      0000
 325:sieve_extend.c ****                 mask |= markmask(index);
 11495              		.loc 1 325 13 is_stmt 1 view .LVU3933
 326:sieve_extend.c ****                 index += step;
 11496              		.loc 1 326 17 view .LVU3934
 11497              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11498              		.loc 1 326 25 is_stmt 0 view .LVU3935
 11499 4344 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1224, tmp621, index
 11499      F3
 11500              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11501              		.loc 1 327 23 view .LVU3936
 11502 4349 4C01E5   		add	rbp, r12	# index, step
 11503              	.LVL574:
 11504              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11505              		.loc 1 326 22 view .LVU3937
 11506 434c 4809F2   		or	rdx, rsi	# mask, tmp1224
 11507              	.LVL575:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11508              		.loc 1 327 17 is_stmt 1 view .LVU3938
 328:sieve_extend.c ****             // #pragma ivdep
 11509              		.loc 1 328 21 view .LVU3939
 11510              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11511              		.loc 1 328 36 is_stmt 0 view .LVU3940
 11512 434f 4889EE   		mov	rsi, rbp	# tmp1225, index
 11513 4352 48C1EE06 		shr	rsi, 6	# tmp1225,
 11514              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11515              		.loc 1 328 13 view .LVU3941
 11516 4356 4839F0   		cmp	rax, rsi	# index_word, tmp1225
 11517 4359 0F859100 		jne	.L1356	#,
 11517      0000
 325:sieve_extend.c ****                 mask |= markmask(index);
 11518              		.loc 1 325 13 is_stmt 1 view .LVU3942
 326:sieve_extend.c ****                 index += step;
 11519              		.loc 1 326 17 view .LVU3943
 11520              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11521              		.loc 1 326 25 is_stmt 0 view .LVU3944
 11522 435f C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1226, tmp621, index
 11522      F3
 11523              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11524              		.loc 1 327 23 view .LVU3945
 11525 4364 4C01E5   		add	rbp, r12	# index, step
 11526              	.LVL576:
 11527              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11528              		.loc 1 326 22 view .LVU3946
 11529 4367 4809F2   		or	rdx, rsi	# mask, tmp1226
 11530              	.LVL577:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11531              		.loc 1 327 17 is_stmt 1 view .LVU3947
GAS LISTING /tmp/ccgH0yRS.s 			page 315


 328:sieve_extend.c ****             // #pragma ivdep
 11532              		.loc 1 328 21 view .LVU3948
 11533              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11534              		.loc 1 328 36 is_stmt 0 view .LVU3949
 11535 436a 4889EE   		mov	rsi, rbp	# tmp1227, index
 11536 436d 48C1EE06 		shr	rsi, 6	# tmp1227,
 11537              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11538              		.loc 1 328 13 view .LVU3950
 11539 4371 4839F0   		cmp	rax, rsi	# index_word, tmp1227
 11540 4374 757A     		jne	.L1356	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11541              		.loc 1 325 13 is_stmt 1 view .LVU3951
 326:sieve_extend.c ****                 index += step;
 11542              		.loc 1 326 17 view .LVU3952
 11543              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11544              		.loc 1 326 25 is_stmt 0 view .LVU3953
 11545 4376 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1228, tmp621, index
 11545      F3
 11546              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11547              		.loc 1 327 23 view .LVU3954
 11548 437b 4C01E5   		add	rbp, r12	# index, step
 11549              	.LVL578:
 11550              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11551              		.loc 1 326 22 view .LVU3955
 11552 437e 4809F2   		or	rdx, rsi	# mask, tmp1228
 11553              	.LVL579:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11554              		.loc 1 327 17 is_stmt 1 view .LVU3956
 328:sieve_extend.c ****             // #pragma ivdep
 11555              		.loc 1 328 21 view .LVU3957
 11556              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11557              		.loc 1 328 36 is_stmt 0 view .LVU3958
 11558 4381 4889EE   		mov	rsi, rbp	# tmp1229, index
 11559 4384 48C1EE06 		shr	rsi, 6	# tmp1229,
 11560              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11561              		.loc 1 328 13 view .LVU3959
 11562 4388 4839F0   		cmp	rax, rsi	# index_word, tmp1229
 11563 438b 7563     		jne	.L1356	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11564              		.loc 1 325 13 is_stmt 1 view .LVU3960
 326:sieve_extend.c ****                 index += step;
 11565              		.loc 1 326 17 view .LVU3961
 11566              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11567              		.loc 1 326 25 is_stmt 0 view .LVU3962
 11568 438d C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1230, tmp621, index
 11568      F3
 11569              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11570              		.loc 1 327 23 view .LVU3963
GAS LISTING /tmp/ccgH0yRS.s 			page 316


 11571 4392 4C01E5   		add	rbp, r12	# index, step
 11572              	.LVL580:
 11573              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11574              		.loc 1 326 22 view .LVU3964
 11575 4395 4809F2   		or	rdx, rsi	# mask, tmp1230
 11576              	.LVL581:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11577              		.loc 1 327 17 is_stmt 1 view .LVU3965
 328:sieve_extend.c ****             // #pragma ivdep
 11578              		.loc 1 328 21 view .LVU3966
 11579              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11580              		.loc 1 328 36 is_stmt 0 view .LVU3967
 11581 4398 4889EE   		mov	rsi, rbp	# tmp1231, index
 11582 439b 48C1EE06 		shr	rsi, 6	# tmp1231,
 11583              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11584              		.loc 1 328 13 view .LVU3968
 11585 439f 4839F0   		cmp	rax, rsi	# index_word, tmp1231
 11586 43a2 754C     		jne	.L1356	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11587              		.loc 1 325 13 is_stmt 1 view .LVU3969
 326:sieve_extend.c ****                 index += step;
 11588              		.loc 1 326 17 view .LVU3970
 11589              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11590              		.loc 1 326 25 is_stmt 0 view .LVU3971
 11591 43a4 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1232, tmp621, index
 11591      F3
 11592              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11593              		.loc 1 327 23 view .LVU3972
 11594 43a9 4C01E5   		add	rbp, r12	# index, step
 11595              	.LVL582:
 11596              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11597              		.loc 1 326 22 view .LVU3973
 11598 43ac 4809F2   		or	rdx, rsi	# mask, tmp1232
 11599              	.LVL583:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11600              		.loc 1 327 17 is_stmt 1 view .LVU3974
 328:sieve_extend.c ****             // #pragma ivdep
 11601              		.loc 1 328 21 view .LVU3975
 11602              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11603              		.loc 1 328 36 is_stmt 0 view .LVU3976
 11604 43af 4889EE   		mov	rsi, rbp	# tmp1233, index
 11605 43b2 48C1EE06 		shr	rsi, 6	# tmp1233,
 11606              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11607              		.loc 1 328 13 view .LVU3977
 11608 43b6 4839F0   		cmp	rax, rsi	# index_word, tmp1233
 11609 43b9 7535     		jne	.L1356	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11610              		.loc 1 325 13 is_stmt 1 view .LVU3978
 326:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccgH0yRS.s 			page 317


 11611              		.loc 1 326 17 view .LVU3979
 11612              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11613              		.loc 1 326 25 is_stmt 0 view .LVU3980
 11614 43bb C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1234, tmp621, index
 11614      F3
 11615              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11616              		.loc 1 327 23 view .LVU3981
 11617 43c0 4C01E5   		add	rbp, r12	# index, step
 11618              	.LVL584:
 11619              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11620              		.loc 1 326 22 view .LVU3982
 11621 43c3 4809F2   		or	rdx, rsi	# mask, tmp1234
 11622              	.LVL585:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11623              		.loc 1 327 17 is_stmt 1 view .LVU3983
 328:sieve_extend.c ****             // #pragma ivdep
 11624              		.loc 1 328 21 view .LVU3984
 11625              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11626              		.loc 1 328 36 is_stmt 0 view .LVU3985
 11627 43c6 4889EE   		mov	rsi, rbp	# tmp1235, index
 11628 43c9 48C1EE06 		shr	rsi, 6	# tmp1235,
 11629              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11630              		.loc 1 328 13 view .LVU3986
 11631 43cd 4839F0   		cmp	rax, rsi	# index_word, tmp1235
 11632 43d0 751E     		jne	.L1356	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 11633              		.loc 1 325 13 is_stmt 1 view .LVU3987
 326:sieve_extend.c ****                 index += step;
 11634              		.loc 1 326 17 view .LVU3988
 11635              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11636              		.loc 1 326 25 is_stmt 0 view .LVU3989
 11637 43d2 C4C2D1F7 		shlx	rsi, r11, rbp	# tmp1236, tmp621, index
 11637      F3
 11638              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11639              		.loc 1 327 23 view .LVU3990
 11640 43d7 4C01E5   		add	rbp, r12	# index, step
 11641              	.LVL586:
 11642              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 11643              		.loc 1 326 22 view .LVU3991
 11644 43da 4809F2   		or	rdx, rsi	# mask, tmp1236
 11645              	.LVL587:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 11646              		.loc 1 327 17 is_stmt 1 view .LVU3992
 328:sieve_extend.c ****             // #pragma ivdep
 11647              		.loc 1 328 21 view .LVU3993
 11648              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11649              		.loc 1 328 36 is_stmt 0 view .LVU3994
 11650 43dd 4889EE   		mov	rsi, rbp	# tmp1237, index
GAS LISTING /tmp/ccgH0yRS.s 			page 318


 11651 43e0 48C1EE06 		shr	rsi, 6	# tmp1237,
 11652              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 11653              		.loc 1 328 13 view .LVU3995
 11654 43e4 4839F0   		cmp	rax, rsi	# index_word, tmp1237
 11655 43e7 0F843CFF 		je	.L910	#,
 11655      FFFF
 11656 43ed 0F1F00   		.p2align 4
 11657              		.p2align 3
 11658              	.L1356:
 332:sieve_extend.c ****         }
 11659              		.loc 1 332 13 is_stmt 1 view .LVU3996
 11660              	.LVL588:
 11661              	.LBB566:
 11662              	.LBI560:
 147:sieve_extend.c **** //#if __APPLE__
 11663              		.loc 1 147 20 view .LVU3997
 11664              	.LBB563:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 11665              		.loc 1 175 4 view .LVU3998
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 11666              		.loc 1 176 4 view .LVU3999
 11667              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 11668              		.loc 1 176 78 is_stmt 0 view .LVU4000
 11669 43f0 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 11670              	.LVL589:
 177:sieve_extend.c **** 
 11671              		.loc 1 177 4 is_stmt 1 view .LVU4001
 181:sieve_extend.c ****        *index_ptr |= mask;
 11672              		.loc 1 181 4 view .LVU4002
 181:sieve_extend.c ****        *index_ptr |= mask;
 11673              		.loc 1 181 10 view .LVU4003
 11674 43f4 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 11675 43f7 0F830301 		jnb	.L911	#,
 11675      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 11676              		.loc 1 181 10 is_stmt 0 view .LVU4004
 11677 43fd 488D3418 		lea	rsi, [rax+rbx]	# ivtmp.657,
 11678              	.L912:
 182:sieve_extend.c ****        index_ptr+=step;
 11679              		.loc 1 182 8 is_stmt 1 view .LVU4005
 11680              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11681              		.loc 1 182 19 is_stmt 0 view .LVU4006
 11682 4401 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11683              		.loc 1 183 8 is_stmt 1 view .LVU4007
 11684              	.LVL590:
 184:sieve_extend.c ****        index_ptr+=step;
 11685              		.loc 1 184 8 view .LVU4008
 11686              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11687              		.loc 1 184 19 is_stmt 0 view .LVU4009
 11688 4404 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11689              		.loc 1 185 8 is_stmt 1 view .LVU4010
GAS LISTING /tmp/ccgH0yRS.s 			page 319


 11690              	.LVL591:
 186:sieve_extend.c ****        index_ptr+=step;
 11691              		.loc 1 186 8 view .LVU4011
 11692              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11693              		.loc 1 186 19 is_stmt 0 view .LVU4012
 11694 4408 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11695              		.loc 1 187 8 is_stmt 1 view .LVU4013
 11696              	.LVL592:
 188:sieve_extend.c ****        index_ptr+=step;
 11697              		.loc 1 188 8 view .LVU4014
 11698              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11699              		.loc 1 188 19 is_stmt 0 view .LVU4015
 11700 440b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11701              		.loc 1 189 8 is_stmt 1 view .LVU4016
 11702              	.LVL593:
 190:sieve_extend.c ****        index_ptr+=step;
 11703              		.loc 1 190 8 view .LVU4017
 11704 440f 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11705              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11706              		.loc 1 190 19 is_stmt 0 view .LVU4018
 11707 4412 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11708              		.loc 1 191 8 is_stmt 1 view .LVU4019
 11709 4416 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11710              	.LVL594:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11711              		.loc 1 181 10 view .LVU4020
 11712 4419 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11713 441c 0F86DE00 		jbe	.L911	#,
 11713      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11714              		.loc 1 182 8 view .LVU4021
 11715              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11716              		.loc 1 182 19 is_stmt 0 view .LVU4022
 11717 4422 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11718              		.loc 1 183 8 is_stmt 1 view .LVU4023
 11719              	.LVL595:
 184:sieve_extend.c ****        index_ptr+=step;
 11720              		.loc 1 184 8 view .LVU4024
 11721              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11722              		.loc 1 184 19 is_stmt 0 view .LVU4025
 11723 4425 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11724              		.loc 1 185 8 is_stmt 1 view .LVU4026
 11725              	.LVL596:
 186:sieve_extend.c ****        index_ptr+=step;
 11726              		.loc 1 186 8 view .LVU4027
 11727              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccgH0yRS.s 			page 320


 11728              		.loc 1 186 19 is_stmt 0 view .LVU4028
 11729 4429 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11730              		.loc 1 187 8 is_stmt 1 view .LVU4029
 11731              	.LVL597:
 188:sieve_extend.c ****        index_ptr+=step;
 11732              		.loc 1 188 8 view .LVU4030
 11733              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11734              		.loc 1 188 19 is_stmt 0 view .LVU4031
 11735 442c 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11736              		.loc 1 189 8 is_stmt 1 view .LVU4032
 11737              	.LVL598:
 190:sieve_extend.c ****        index_ptr+=step;
 11738              		.loc 1 190 8 view .LVU4033
 11739 4430 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11740              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11741              		.loc 1 190 19 is_stmt 0 view .LVU4034
 11742 4433 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11743              		.loc 1 191 8 is_stmt 1 view .LVU4035
 11744 4437 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11745              	.LVL599:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11746              		.loc 1 181 10 view .LVU4036
 11747 443a 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11748 443d 0F86BD00 		jbe	.L911	#,
 11748      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11749              		.loc 1 182 8 view .LVU4037
 11750              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11751              		.loc 1 182 19 is_stmt 0 view .LVU4038
 11752 4443 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11753              		.loc 1 183 8 is_stmt 1 view .LVU4039
 11754              	.LVL600:
 184:sieve_extend.c ****        index_ptr+=step;
 11755              		.loc 1 184 8 view .LVU4040
 11756              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11757              		.loc 1 184 19 is_stmt 0 view .LVU4041
 11758 4446 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11759              		.loc 1 185 8 is_stmt 1 view .LVU4042
 11760              	.LVL601:
 186:sieve_extend.c ****        index_ptr+=step;
 11761              		.loc 1 186 8 view .LVU4043
 11762              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11763              		.loc 1 186 19 is_stmt 0 view .LVU4044
 11764 444a 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11765              		.loc 1 187 8 is_stmt 1 view .LVU4045
 11766              	.LVL602:
GAS LISTING /tmp/ccgH0yRS.s 			page 321


 188:sieve_extend.c ****        index_ptr+=step;
 11767              		.loc 1 188 8 view .LVU4046
 11768              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11769              		.loc 1 188 19 is_stmt 0 view .LVU4047
 11770 444d 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11771              		.loc 1 189 8 is_stmt 1 view .LVU4048
 11772              	.LVL603:
 190:sieve_extend.c ****        index_ptr+=step;
 11773              		.loc 1 190 8 view .LVU4049
 11774 4451 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11775              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11776              		.loc 1 190 19 is_stmt 0 view .LVU4050
 11777 4454 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11778              		.loc 1 191 8 is_stmt 1 view .LVU4051
 11779 4458 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11780              	.LVL604:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11781              		.loc 1 181 10 view .LVU4052
 11782 445b 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11783 445e 0F869C00 		jbe	.L911	#,
 11783      0000
 182:sieve_extend.c ****        index_ptr+=step;
 11784              		.loc 1 182 8 view .LVU4053
 11785              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11786              		.loc 1 182 19 is_stmt 0 view .LVU4054
 11787 4464 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11788              		.loc 1 183 8 is_stmt 1 view .LVU4055
 11789              	.LVL605:
 184:sieve_extend.c ****        index_ptr+=step;
 11790              		.loc 1 184 8 view .LVU4056
 11791              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11792              		.loc 1 184 19 is_stmt 0 view .LVU4057
 11793 4467 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11794              		.loc 1 185 8 is_stmt 1 view .LVU4058
 11795              	.LVL606:
 186:sieve_extend.c ****        index_ptr+=step;
 11796              		.loc 1 186 8 view .LVU4059
 11797              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11798              		.loc 1 186 19 is_stmt 0 view .LVU4060
 11799 446b 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11800              		.loc 1 187 8 is_stmt 1 view .LVU4061
 11801              	.LVL607:
 188:sieve_extend.c ****        index_ptr+=step;
 11802              		.loc 1 188 8 view .LVU4062
 11803              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11804              		.loc 1 188 19 is_stmt 0 view .LVU4063
GAS LISTING /tmp/ccgH0yRS.s 			page 322


 11805 446e 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11806              		.loc 1 189 8 is_stmt 1 view .LVU4064
 11807              	.LVL608:
 190:sieve_extend.c ****        index_ptr+=step;
 11808              		.loc 1 190 8 view .LVU4065
 11809 4472 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11810              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11811              		.loc 1 190 19 is_stmt 0 view .LVU4066
 11812 4475 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11813              		.loc 1 191 8 is_stmt 1 view .LVU4067
 11814 4479 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11815              	.LVL609:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11816              		.loc 1 181 10 view .LVU4068
 11817 447c 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11818 447f 767F     		jbe	.L911	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11819              		.loc 1 182 8 view .LVU4069
 11820              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11821              		.loc 1 182 19 is_stmt 0 view .LVU4070
 11822 4481 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11823              		.loc 1 183 8 is_stmt 1 view .LVU4071
 11824              	.LVL610:
 184:sieve_extend.c ****        index_ptr+=step;
 11825              		.loc 1 184 8 view .LVU4072
 11826              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11827              		.loc 1 184 19 is_stmt 0 view .LVU4073
 11828 4484 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11829              		.loc 1 185 8 is_stmt 1 view .LVU4074
 11830              	.LVL611:
 186:sieve_extend.c ****        index_ptr+=step;
 11831              		.loc 1 186 8 view .LVU4075
 11832              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11833              		.loc 1 186 19 is_stmt 0 view .LVU4076
 11834 4488 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11835              		.loc 1 187 8 is_stmt 1 view .LVU4077
 11836              	.LVL612:
 188:sieve_extend.c ****        index_ptr+=step;
 11837              		.loc 1 188 8 view .LVU4078
 11838              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11839              		.loc 1 188 19 is_stmt 0 view .LVU4079
 11840 448b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11841              		.loc 1 189 8 is_stmt 1 view .LVU4080
 11842              	.LVL613:
 190:sieve_extend.c ****        index_ptr+=step;
 11843              		.loc 1 190 8 view .LVU4081
GAS LISTING /tmp/ccgH0yRS.s 			page 323


 11844 448f 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11845              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11846              		.loc 1 190 19 is_stmt 0 view .LVU4082
 11847 4492 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11848              		.loc 1 191 8 is_stmt 1 view .LVU4083
 11849 4496 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11850              	.LVL614:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11851              		.loc 1 181 10 view .LVU4084
 11852 4499 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11853 449c 7662     		jbe	.L911	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11854              		.loc 1 182 8 view .LVU4085
 11855              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11856              		.loc 1 182 19 is_stmt 0 view .LVU4086
 11857 449e 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11858              		.loc 1 183 8 is_stmt 1 view .LVU4087
 11859              	.LVL615:
 184:sieve_extend.c ****        index_ptr+=step;
 11860              		.loc 1 184 8 view .LVU4088
 11861              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11862              		.loc 1 184 19 is_stmt 0 view .LVU4089
 11863 44a1 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11864              		.loc 1 185 8 is_stmt 1 view .LVU4090
 11865              	.LVL616:
 186:sieve_extend.c ****        index_ptr+=step;
 11866              		.loc 1 186 8 view .LVU4091
 11867              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11868              		.loc 1 186 19 is_stmt 0 view .LVU4092
 11869 44a5 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11870              		.loc 1 187 8 is_stmt 1 view .LVU4093
 11871              	.LVL617:
 188:sieve_extend.c ****        index_ptr+=step;
 11872              		.loc 1 188 8 view .LVU4094
 11873              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11874              		.loc 1 188 19 is_stmt 0 view .LVU4095
 11875 44a8 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11876              		.loc 1 189 8 is_stmt 1 view .LVU4096
 11877              	.LVL618:
 190:sieve_extend.c ****        index_ptr+=step;
 11878              		.loc 1 190 8 view .LVU4097
 11879 44ac 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11880              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11881              		.loc 1 190 19 is_stmt 0 view .LVU4098
 11882 44af 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
GAS LISTING /tmp/ccgH0yRS.s 			page 324


 11883              		.loc 1 191 8 is_stmt 1 view .LVU4099
 11884 44b3 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11885              	.LVL619:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11886              		.loc 1 181 10 view .LVU4100
 11887 44b6 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11888 44b9 7645     		jbe	.L911	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11889              		.loc 1 182 8 view .LVU4101
 11890              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11891              		.loc 1 182 19 is_stmt 0 view .LVU4102
 11892 44bb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11893              		.loc 1 183 8 is_stmt 1 view .LVU4103
 11894              	.LVL620:
 184:sieve_extend.c ****        index_ptr+=step;
 11895              		.loc 1 184 8 view .LVU4104
 11896              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11897              		.loc 1 184 19 is_stmt 0 view .LVU4105
 11898 44be 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11899              		.loc 1 185 8 is_stmt 1 view .LVU4106
 11900              	.LVL621:
 186:sieve_extend.c ****        index_ptr+=step;
 11901              		.loc 1 186 8 view .LVU4107
 11902              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11903              		.loc 1 186 19 is_stmt 0 view .LVU4108
 11904 44c2 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11905              		.loc 1 187 8 is_stmt 1 view .LVU4109
 11906              	.LVL622:
 188:sieve_extend.c ****        index_ptr+=step;
 11907              		.loc 1 188 8 view .LVU4110
 11908              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11909              		.loc 1 188 19 is_stmt 0 view .LVU4111
 11910 44c5 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11911              		.loc 1 189 8 is_stmt 1 view .LVU4112
 11912              	.LVL623:
 190:sieve_extend.c ****        index_ptr+=step;
 11913              		.loc 1 190 8 view .LVU4113
 11914 44c9 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11915              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11916              		.loc 1 190 19 is_stmt 0 view .LVU4114
 11917 44cc 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11918              		.loc 1 191 8 is_stmt 1 view .LVU4115
 11919 44d0 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11920              	.LVL624:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11921              		.loc 1 181 10 view .LVU4116
 11922 44d3 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
GAS LISTING /tmp/ccgH0yRS.s 			page 325


 11923 44d6 7628     		jbe	.L911	#,
 182:sieve_extend.c ****        index_ptr+=step;
 11924              		.loc 1 182 8 view .LVU4117
 11925              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 11926              		.loc 1 182 19 is_stmt 0 view .LVU4118
 11927 44d8 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_908, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 11928              		.loc 1 183 8 is_stmt 1 view .LVU4119
 11929              	.LVL625:
 184:sieve_extend.c ****        index_ptr+=step;
 11930              		.loc 1 184 8 view .LVU4120
 11931              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 11932              		.loc 1 184 19 is_stmt 0 view .LVU4121
 11933 44db 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_908, index: _200, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 11934              		.loc 1 185 8 is_stmt 1 view .LVU4122
 11935              	.LVL626:
 186:sieve_extend.c ****        index_ptr+=step;
 11936              		.loc 1 186 8 view .LVU4123
 11937              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 11938              		.loc 1 186 19 is_stmt 0 view .LVU4124
 11939 44df 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _1331, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 11940              		.loc 1 187 8 is_stmt 1 view .LVU4125
 11941              	.LVL627:
 188:sieve_extend.c ****        index_ptr+=step;
 11942              		.loc 1 188 8 view .LVU4126
 11943              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 11944              		.loc 1 188 19 is_stmt 0 view .LVU4127
 11945 44e2 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _1331, index: _200, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 11946              		.loc 1 189 8 is_stmt 1 view .LVU4128
 11947              	.LVL628:
 190:sieve_extend.c ****        index_ptr+=step;
 11948              		.loc 1 190 8 view .LVU4129
 11949 44e6 4801FE   		add	rsi, rdi	# ivtmp.657, tmp618
 11950              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 11951              		.loc 1 190 19 is_stmt 0 view .LVU4130
 11952 44e9 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_908, index: _200, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 11953              		.loc 1 191 8 is_stmt 1 view .LVU4131
 11954 44ed 4801F8   		add	rax, rdi	# index_ptr, tmp618
 11955              	.LVL629:
 181:sieve_extend.c ****        *index_ptr |= mask;
 11956              		.loc 1 181 10 view .LVU4132
 11957 44f0 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11958 44f3 0F8708FF 		ja	.L912	#,
 11958      FFFF
 11959 44f9 0F1F8000 		.p2align 4
 11959      000000
 11960              		.p2align 3
 11961              	.L911:
GAS LISTING /tmp/ccgH0yRS.s 			page 326


 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11962              		.loc 1 194 4 view .LVU4133
 195:sieve_extend.c ****        *index_ptr |= mask;
 11963              		.loc 1 195 4 view .LVU4134
 195:sieve_extend.c ****        *index_ptr |= mask;
 11964              		.loc 1 195 10 view .LVU4135
 11965 4500 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11966 4503 765B     		jbe	.L913	#,
 11967              	.L914:
 196:sieve_extend.c ****        index_ptr+=step;
 11968              		.loc 1 196 8 view .LVU4136
 11969              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11970              		.loc 1 196 19 is_stmt 0 view .LVU4137
 11971 4505 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11972              		.loc 1 197 8 is_stmt 1 view .LVU4138
 11973              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11974              		.loc 1 197 17 is_stmt 0 view .LVU4139
 11975 4508 4801C8   		add	rax, rcx	# index_ptr, _200
 11976              	.LVL630:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11977              		.loc 1 195 10 is_stmt 1 view .LVU4140
 11978 450b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11979 450e 7650     		jbe	.L913	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11980              		.loc 1 196 8 view .LVU4141
 11981              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11982              		.loc 1 196 19 is_stmt 0 view .LVU4142
 11983 4510 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11984              		.loc 1 197 8 is_stmt 1 view .LVU4143
 11985              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11986              		.loc 1 197 17 is_stmt 0 view .LVU4144
 11987 4513 4801C8   		add	rax, rcx	# index_ptr, _200
 11988              	.LVL631:
 195:sieve_extend.c ****        *index_ptr |= mask;
 11989              		.loc 1 195 10 is_stmt 1 view .LVU4145
 11990 4516 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11991 4519 7645     		jbe	.L913	#,
 196:sieve_extend.c ****        index_ptr+=step;
 11992              		.loc 1 196 8 view .LVU4146
 11993              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 11994              		.loc 1 196 19 is_stmt 0 view .LVU4147
 11995 451b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 11996              		.loc 1 197 8 is_stmt 1 view .LVU4148
 11997              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 11998              		.loc 1 197 17 is_stmt 0 view .LVU4149
 11999 451e 4801C8   		add	rax, rcx	# index_ptr, _200
 12000              	.LVL632:
 195:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccgH0yRS.s 			page 327


 12001              		.loc 1 195 10 is_stmt 1 view .LVU4150
 12002 4521 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12003 4524 763A     		jbe	.L913	#,
 196:sieve_extend.c ****        index_ptr+=step;
 12004              		.loc 1 196 8 view .LVU4151
 12005              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 12006              		.loc 1 196 19 is_stmt 0 view .LVU4152
 12007 4526 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 12008              		.loc 1 197 8 is_stmt 1 view .LVU4153
 12009              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 12010              		.loc 1 197 17 is_stmt 0 view .LVU4154
 12011 4529 4801C8   		add	rax, rcx	# index_ptr, _200
 12012              	.LVL633:
 195:sieve_extend.c ****        *index_ptr |= mask;
 12013              		.loc 1 195 10 is_stmt 1 view .LVU4155
 12014 452c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12015 452f 762F     		jbe	.L913	#,
 196:sieve_extend.c ****        index_ptr+=step;
 12016              		.loc 1 196 8 view .LVU4156
 12017              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 12018              		.loc 1 196 19 is_stmt 0 view .LVU4157
 12019 4531 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 12020              		.loc 1 197 8 is_stmt 1 view .LVU4158
 12021              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 12022              		.loc 1 197 17 is_stmt 0 view .LVU4159
 12023 4534 4801C8   		add	rax, rcx	# index_ptr, _200
 12024              	.LVL634:
 195:sieve_extend.c ****        *index_ptr |= mask;
 12025              		.loc 1 195 10 is_stmt 1 view .LVU4160
 12026 4537 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12027 453a 7624     		jbe	.L913	#,
 196:sieve_extend.c ****        index_ptr+=step;
 12028              		.loc 1 196 8 view .LVU4161
 12029              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 12030              		.loc 1 196 19 is_stmt 0 view .LVU4162
 12031 453c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 12032              		.loc 1 197 8 is_stmt 1 view .LVU4163
 12033              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 12034              		.loc 1 197 17 is_stmt 0 view .LVU4164
 12035 453f 4801C8   		add	rax, rcx	# index_ptr, _200
 12036              	.LVL635:
 195:sieve_extend.c ****        *index_ptr |= mask;
 12037              		.loc 1 195 10 is_stmt 1 view .LVU4165
 12038 4542 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12039 4545 7619     		jbe	.L913	#,
 196:sieve_extend.c ****        index_ptr+=step;
 12040              		.loc 1 196 8 view .LVU4166
 12041              	# sieve_extend.c:196:        *index_ptr |= mask;
GAS LISTING /tmp/ccgH0yRS.s 			page 328


 196:sieve_extend.c ****        index_ptr+=step;
 12042              		.loc 1 196 19 is_stmt 0 view .LVU4167
 12043 4547 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 12044              		.loc 1 197 8 is_stmt 1 view .LVU4168
 12045              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 12046              		.loc 1 197 17 is_stmt 0 view .LVU4169
 12047 454a 4801C8   		add	rax, rcx	# index_ptr, _200
 12048              	.LVL636:
 195:sieve_extend.c ****        *index_ptr |= mask;
 12049              		.loc 1 195 10 is_stmt 1 view .LVU4170
 12050 454d 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12051 4550 760E     		jbe	.L913	#,
 196:sieve_extend.c ****        index_ptr+=step;
 12052              		.loc 1 196 8 view .LVU4171
 12053              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 12054              		.loc 1 196 19 is_stmt 0 view .LVU4172
 12055 4552 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_922, offset: 0B], mask
 197:sieve_extend.c ****    }
 12056              		.loc 1 197 8 is_stmt 1 view .LVU4173
 12057              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 12058              		.loc 1 197 17 is_stmt 0 view .LVU4174
 12059 4555 4801C8   		add	rax, rcx	# index_ptr, _200
 12060              	.LVL637:
 195:sieve_extend.c ****        *index_ptr |= mask;
 12061              		.loc 1 195 10 is_stmt 1 view .LVU4175
 12062 4558 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12063 455b 77A8     		ja	.L914	#,
 12064 455d 0F1F00   		.p2align 4
 12065              		.p2align 3
 12066              	.L913:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12067              		.loc 1 200 4 view .LVU4176
 12068              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12069              		.loc 1 200 7 is_stmt 0 view .LVU4177
 12070 4560 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 12071 4563 0F84CF11 		je	.L1501	#,
 12071      0000
 12072              	.LVL638:
 12073              	.L915:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12074              		.loc 1 200 7 view .LVU4178
 12075              	.LBE563:
 12076              	.LBE566:
 12077              	.LBE559:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12078              		.loc 1 321 54 is_stmt 1 view .LVU4179
 12079              	# sieve_extend.c:321:         for (register counter_t index = range_start; index <= range_stop_uniq
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12080              		.loc 1 321 9 is_stmt 0 view .LVU4180
 12081 4569 4939E8   		cmp	r8, rbp	# tmp598, index
 12082 456c 0F83AEFD 		jnb	.L916	#,
 12082      FFFF
GAS LISTING /tmp/ccgH0yRS.s 			page 329


 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12083              		.loc 1 321 9 view .LVU4181
 12084 4572 488B5C24 		mov	rbx, QWORD PTR 80[rsp]	# index, %sfp
 12084      50
 12085 4577 4C8B4424 		mov	r8, QWORD PTR 88[rsp]	# _69, %sfp
 12085      58
 12086 457c E9AAF6FF 		jmp	.L898	#
 12086      FF
 12087              	.LVL639:
 12088              	.L1491:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12089              		.loc 1 321 9 view .LVU4182
 12090 4581 4C8B4C24 		mov	r9, QWORD PTR 48[rsp]	# <retval>, %sfp
 12090      30
 12091 4586 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 12091      28
 12092 458b 498B4108 		mov	rax, QWORD PTR 8[r9]	# prephitmp_1432, sieve_92->bits
 12093 458f 48894424 		mov	QWORD PTR 8[rsp], rax	# %sfp, prephitmp_1432
 12093      08
 12094              	.LVL640:
 12095              	.L889:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12096              		.loc 1 321 9 view .LVU4183
 12097              	.LBE558:
 12098              	.LBE557:
 12099              	.LBE556:
 12100              	.LBE584:
 12101              	.LBE591:
 12102              	.LBE606:
1017:sieve_extend.c ****     prime = block.prime;
 12103              		.loc 1 1017 5 is_stmt 1 view .LVU4184
 12104              	.LBB607:
 873:sieve_extend.c ****     if (size < WORD_SIZE_counter)   {
 12105              		.loc 1 873 20 view .LVU4185
 12106              	.LBB601:
 874:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 12107              		.loc 1 874 5 view .LVU4186
 12108              	# sieve_extend.c:874:     if (size < WORD_SIZE_counter)   {
 874:sieve_extend.c ****         extendSieve_smallSize (bitarray, source_start, size, destination_stop);
 12109              		.loc 1 874 8 is_stmt 0 view .LVU4187
 12110 4594 4883FA3F 		cmp	rdx, 63	# block$pattern_size,
 12111 4598 0F86B9FA 		jbe	.L882	#,
 12111      FFFF
 12112              	.LVL641:
 12113              	.L925:
 879:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 12114              		.loc 1 879 5 is_stmt 1 view .LVU4188
 880:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 12115              		.loc 1 880 5 view .LVU4189
 12116              	# sieve_extend.c:879:     const counter_t copy_start  = source_start + size;
 879:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 12117              		.loc 1 879 21 is_stmt 0 view .LVU4190
 12118 459e 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 12119              	.LVL642:
 12120              	# sieve_extend.c:881:     const bitshift_t source_bit = bitindex_calc(source_start);
 881:sieve_extend.c **** 
 12121              		.loc 1 881 22 view .LVU4191
GAS LISTING /tmp/ccgH0yRS.s 			page 330


 12122 45a2 4989F4   		mov	r12, rsi	# source_bit, block$pattern_start
 12123              	# sieve_extend.c:880:     const bitshift_t copy_bit   = bitindex_calc(copy_start);
 880:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 12124              		.loc 1 880 22 view .LVU4192
 12125 45a5 4183E03F 		and	r8d, 63	# copy_bit,
 12126              	.LVL643:
 881:sieve_extend.c **** 
 12127              		.loc 1 881 5 is_stmt 1 view .LVU4193
 12128              	# sieve_extend.c:881:     const bitshift_t source_bit = bitindex_calc(source_start);
 881:sieve_extend.c **** 
 12129              		.loc 1 881 22 is_stmt 0 view .LVU4194
 12130 45a9 4183E43F 		and	r12d, 63	# source_bit,
 12131              	.LVL644:
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12132              		.loc 1 883 5 is_stmt 1 view .LVU4195
 12133              	# sieve_extend.c:883:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12134              		.loc 1 883 37 is_stmt 0 view .LVU4196
 12135 45ad 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	#, %sfp
 12135      08
 12136              	# sieve_extend.c:883:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12137              		.loc 1 883 13 view .LVU4197
 12138 45b2 4D39E0   		cmp	r8, r12	# copy_bit, source_bit
 12139              	# sieve_extend.c:883:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12140              		.loc 1 883 37 view .LVU4198
 12141 45b5 488B7C24 		mov	rdi, QWORD PTR 56[rsp]	#, %sfp
 12141      38
 12142              	# sieve_extend.c:883:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitarray, source_s
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12143              		.loc 1 883 13 view .LVU4199
 12144 45ba 0F82AA11 		jb	.L1502	#,
 12144      0000
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12145              		.loc 1 884 10 is_stmt 1 view .LVU4200
 12146              	# sieve_extend.c:884:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, so
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12147              		.loc 1 884 13 is_stmt 0 view .LVU4201
 12148 45c0 0F878402 		ja	.L1503	#,
 12148      0000
 885:sieve_extend.c **** }
 12149              		.loc 1 885 37 is_stmt 1 view .LVU4202
 12150 45c6 E805DBFF 		call	extendSieve_aligned	#
 12150      FF
 12151              	.LVL645:
 12152              	.L926:
 885:sieve_extend.c **** }
 12153              		.loc 1 885 37 is_stmt 0 view .LVU4203
 12154              	.LBE601:
 12155              	.LBE607:
1018:sieve_extend.c **** 
 12156              		.loc 1 1018 5 is_stmt 1 view .LVU4204
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12157              		.loc 1 1021 5 view .LVU4205
 12158              	.LBB608:
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
GAS LISTING /tmp/ccgH0yRS.s 			page 331


 12159              		.loc 1 1021 10 view .LVU4206
 12160              	# sieve_extend.c:1021:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12161              		.loc 1 1021 38 is_stmt 0 view .LVU4207
 12162 45cb 488B5424 		mov	rdx, QWORD PTR 64[rsp]	# blocksize, %sfp
 12162      40
 12163              	# sieve_extend.c:1021:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12164              		.loc 1 1021 20 view .LVU4208
 12165 45d0 4531FF   		xor	r15d, r15d	# block_start
 12166 45d3 488B6C24 		mov	rbp, QWORD PTR 40[rsp]	# prime, %sfp
 12166      28
 12167              	# sieve_extend.c:1021:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12168              		.loc 1 1021 83 view .LVU4209
 12169 45d8 4C8B5424 		mov	r10, QWORD PTR 48[rsp]	# <retval>, %sfp
 12169      30
 12170              	# sieve_extend.c:1021:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12171              		.loc 1 1021 38 view .LVU4210
 12172 45dd 488D4AFF 		lea	rcx, -1[rdx]	# block_stop,
 12173              	.LVL646:
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12174              		.loc 1 1021 63 is_stmt 1 view .LVU4211
 12175 45e1 488D7501 		lea	rsi, 1[rbp]	# tmp824,
 12176              	.LBB609:
 12177              	.LBB610:
 12178              	.LBB611:
 12179              	.LBB612:
 12180              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12181              		.loc 1 257 80 is_stmt 0 view .LVU4212
 12182 45e5 4989CC   		mov	r12, rcx	# block_stop, block_stop
 12183              	.LBE612:
 12184              	.LBE611:
 12185              	.LBE610:
 12186              	.LBE609:
 12187              	# sieve_extend.c:1021:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12188              		.loc 1 1021 83 view .LVU4213
 12189 45e8 498B5208 		mov	rdx, QWORD PTR 8[r10]	# _8, sieve_92->bits
 12190              	.LBB700:
 12191              	.LBB695:
 12192              	.LBB628:
 12193              	.LBB623:
 12194              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12195              		.loc 1 257 80 view .LVU4214
 12196 45ec 48897424 		mov	QWORD PTR 32[rsp], rsi	# %sfp, tmp824
 12196      20
 12197              	.LVL647:
 12198 45f1 66662E0F 		.p2align 4
 12198      1F840000 
 12198      0000000F 
 12198      1F4000
 12199              		.p2align 3
 12200              	.L932:
GAS LISTING /tmp/ccgH0yRS.s 			page 332


 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 12201              		.loc 1 257 80 view .LVU4215
 12202              	.LBE623:
 12203              	.LBE628:
 12204              	.LBE695:
 12205              	.LBE700:
1022:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime);
 12206              		.loc 1 1022 9 is_stmt 1 view .LVU4216
 12207              	.LBB701:
 12208              	.LBB702:
 12209              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12210              		.loc 1 123 21 is_stmt 0 view .LVU4217
 12211 4600 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# prime, %sfp
 12211      28
 12212 4605 4939D4   		cmp	r12, rdx	# block_stop, _8
 12213              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12214              		.loc 1 123 12 view .LVU4218
 12215 4608 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _97, %sfp
 12215      38
 12216 460d 4C0F47E2 		cmova	r12, rdx	# block_stop,, block_stop, _8
 12217              	.LVL648:
 123:sieve_extend.c ****     return index;
 12218              		.loc 1 123 12 view .LVU4219
 12219              	.LBE702:
 12220              	.LBE701:
1023:sieve_extend.c ****         sieve_block_stripe(sieve, block_start, block_stop, prime);
 12221              		.loc 1 1023 9 is_stmt 1 view .LVU4220
 12222              	.LBB705:
 12223              	.LBI701:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 12224              		.loc 1 122 25 view .LVU4221
 12225              	.LBB703:
 123:sieve_extend.c ****     return index;
 12226              		.loc 1 123 5 view .LVU4222
 123:sieve_extend.c ****     return index;
 12227              		.loc 1 123 11 view .LVU4223
 12228              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12229              		.loc 1 123 21 is_stmt 0 view .LVU4224
 12230 4611 4989FB   		mov	r11, rdi	# tmp647, prime
 12231 4614 49C1EB06 		shr	r11, 6	# tmp647,
 12232              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12233              		.loc 1 123 12 view .LVU4225
 12234 4618 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_365, *_365
 12235              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12236              		.loc 1 123 11 view .LVU4226
 12237 461c 480FA3FB 		bt	rbx, rdi	# *_365, tmp1665
 12238 4620 0F834502 		jnc	.L929	#,
 12238      0000
 12239 4626 488B4424 		mov	rax, QWORD PTR 32[rsp]	# tmp824, %sfp
 12239      20
 12240              	.L930:
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccgH0yRS.s 			page 333


 12241              		.loc 1 123 58 is_stmt 1 view .LVU4227
 12242              	.LVL649:
 12243              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12244              		.loc 1 123 21 is_stmt 0 view .LVU4228
 12245 462b 4989C5   		mov	r13, rax	# tmp652, tmp824
 12246              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12247              		.loc 1 123 63 view .LVU4229
 12248 462e 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12249              		.loc 1 123 11 is_stmt 1 view .LVU4230
 12250              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12251              		.loc 1 123 21 is_stmt 0 view .LVU4231
 12252 4631 49C1ED06 		shr	r13, 6	# tmp652,
 12253              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12254              		.loc 1 123 12 view .LVU4232
 12255 4635 4F8B0CEE 		mov	r9, QWORD PTR [r14+r13*8]	# *_34, *_34
 12256              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12257              		.loc 1 123 11 view .LVU4233
 12258 4639 490FA3C1 		bt	r9, rax	# *_34, tmp824
 12259 463d 0F831502 		jnc	.L1435	#,
 12259      0000
 12260 4643 488D4801 		lea	rcx, 1[rax]	# tmp848,
 12261              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12262              		.loc 1 123 21 view .LVU4234
 12263 4647 4989C8   		mov	r8, rcx	# tmp887, tmp824
 12264 464a 4889C8   		mov	rax, rcx	# tmp824, tmp848
 12265              	.LVL650:
 123:sieve_extend.c ****     return index;
 12266              		.loc 1 123 58 is_stmt 1 view .LVU4235
 12267              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12268              		.loc 1 123 21 is_stmt 0 view .LVU4236
 12269 464d 49C1E806 		shr	r8, 6	# tmp887,
 12270              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12271              		.loc 1 123 63 view .LVU4237
 12272 4651 4889CE   		mov	rsi, rcx	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12273              		.loc 1 123 11 is_stmt 1 view .LVU4238
 12274              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12275              		.loc 1 123 12 is_stmt 0 view .LVU4239
 12276 4654 4F8B14C6 		mov	r10, QWORD PTR [r14+r8*8]	# *_34, *_34
 12277              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12278              		.loc 1 123 11 view .LVU4240
 12279 4658 490FA3CA 		bt	r10, rcx	# *_34, tmp824
 12280 465c 0F83F601 		jnc	.L1435	#,
 12280      0000
 12281 4662 488D4101 		lea	rax, 1[rcx]	# tmp824,
 12282              	.LVL651:
GAS LISTING /tmp/ccgH0yRS.s 			page 334


 123:sieve_extend.c ****     return index;
 12283              		.loc 1 123 58 is_stmt 1 view .LVU4241
 12284              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12285              		.loc 1 123 21 is_stmt 0 view .LVU4242
 12286 4666 4889C5   		mov	rbp, rax	# tmp1118, tmp824
 12287              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12288              		.loc 1 123 63 view .LVU4243
 12289 4669 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12290              		.loc 1 123 11 is_stmt 1 view .LVU4244
 12291              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12292              		.loc 1 123 21 is_stmt 0 view .LVU4245
 12293 466c 48C1ED06 		shr	rbp, 6	# tmp1118,
 12294              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12295              		.loc 1 123 12 view .LVU4246
 12296 4670 498B3CEE 		mov	rdi, QWORD PTR [r14+rbp*8]	# *_34, *_34
 12297              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12298              		.loc 1 123 11 view .LVU4247
 12299 4674 480FA3C7 		bt	rdi, rax	# *_34, tmp824
 12300 4678 0F83DA01 		jnc	.L1435	#,
 12300      0000
 12301 467e 488D4102 		lea	rax, 2[rcx]	# tmp824,
 12302              	.LVL652:
 123:sieve_extend.c ****     return index;
 12303              		.loc 1 123 58 is_stmt 1 view .LVU4248
 12304              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12305              		.loc 1 123 21 is_stmt 0 view .LVU4249
 12306 4682 4989C3   		mov	r11, rax	# tmp1122, tmp824
 12307              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12308              		.loc 1 123 63 view .LVU4250
 12309 4685 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12310              		.loc 1 123 11 is_stmt 1 view .LVU4251
 12311              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12312              		.loc 1 123 21 is_stmt 0 view .LVU4252
 12313 4688 49C1EB06 		shr	r11, 6	# tmp1122,
 12314              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12315              		.loc 1 123 12 view .LVU4253
 12316 468c 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_34, *_34
 12317              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12318              		.loc 1 123 11 view .LVU4254
 12319 4690 480FA3C3 		bt	rbx, rax	# *_34, tmp824
 12320 4694 0F83BE01 		jnc	.L1435	#,
 12320      0000
 12321 469a 488D4103 		lea	rax, 3[rcx]	# tmp824,
 12322              	.LVL653:
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccgH0yRS.s 			page 335


 12323              		.loc 1 123 58 is_stmt 1 view .LVU4255
 12324              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12325              		.loc 1 123 21 is_stmt 0 view .LVU4256
 12326 469e 4989C5   		mov	r13, rax	# tmp1126, tmp824
 12327              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12328              		.loc 1 123 63 view .LVU4257
 12329 46a1 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12330              		.loc 1 123 11 is_stmt 1 view .LVU4258
 12331              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12332              		.loc 1 123 21 is_stmt 0 view .LVU4259
 12333 46a4 49C1ED06 		shr	r13, 6	# tmp1126,
 12334              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12335              		.loc 1 123 12 view .LVU4260
 12336 46a8 4F8B0CEE 		mov	r9, QWORD PTR [r14+r13*8]	# *_34, *_34
 12337              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12338              		.loc 1 123 11 view .LVU4261
 12339 46ac 490FA3C1 		bt	r9, rax	# *_34, tmp824
 12340 46b0 0F83A201 		jnc	.L1435	#,
 12340      0000
 12341 46b6 488D4104 		lea	rax, 4[rcx]	# tmp824,
 12342              	.LVL654:
 123:sieve_extend.c ****     return index;
 12343              		.loc 1 123 58 is_stmt 1 view .LVU4262
 12344              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12345              		.loc 1 123 21 is_stmt 0 view .LVU4263
 12346 46ba 4989C0   		mov	r8, rax	# tmp1130, tmp824
 12347              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12348              		.loc 1 123 63 view .LVU4264
 12349 46bd 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12350              		.loc 1 123 11 is_stmt 1 view .LVU4265
 12351              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12352              		.loc 1 123 21 is_stmt 0 view .LVU4266
 12353 46c0 49C1E806 		shr	r8, 6	# tmp1130,
 12354              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12355              		.loc 1 123 12 view .LVU4267
 12356 46c4 4F8B14C6 		mov	r10, QWORD PTR [r14+r8*8]	# *_34, *_34
 12357              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12358              		.loc 1 123 11 view .LVU4268
 12359 46c8 490FA3C2 		bt	r10, rax	# *_34, tmp824
 12360 46cc 0F838601 		jnc	.L1435	#,
 12360      0000
 12361 46d2 488D4105 		lea	rax, 5[rcx]	# tmp824,
 12362              	.LVL655:
 123:sieve_extend.c ****     return index;
 12363              		.loc 1 123 58 is_stmt 1 view .LVU4269
GAS LISTING /tmp/ccgH0yRS.s 			page 336


 12364              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12365              		.loc 1 123 21 is_stmt 0 view .LVU4270
 12366 46d6 4889C5   		mov	rbp, rax	# tmp1134, tmp824
 12367              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12368              		.loc 1 123 63 view .LVU4271
 12369 46d9 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12370              		.loc 1 123 11 is_stmt 1 view .LVU4272
 12371              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12372              		.loc 1 123 21 is_stmt 0 view .LVU4273
 12373 46dc 48C1ED06 		shr	rbp, 6	# tmp1134,
 12374              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12375              		.loc 1 123 12 view .LVU4274
 12376 46e0 498B3CEE 		mov	rdi, QWORD PTR [r14+rbp*8]	# *_34, *_34
 12377              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12378              		.loc 1 123 11 view .LVU4275
 12379 46e4 480FA3C7 		bt	rdi, rax	# *_34, tmp824
 12380 46e8 0F836A01 		jnc	.L1435	#,
 12380      0000
 12381 46ee 488D4106 		lea	rax, 6[rcx]	# tmp824,
 12382              	.LVL656:
 123:sieve_extend.c ****     return index;
 12383              		.loc 1 123 58 is_stmt 1 view .LVU4276
 12384              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12385              		.loc 1 123 21 is_stmt 0 view .LVU4277
 12386 46f2 4989C3   		mov	r11, rax	# tmp1138, tmp824
 12387              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12388              		.loc 1 123 63 view .LVU4278
 12389 46f5 4889C6   		mov	rsi, rax	# prime, tmp824
 123:sieve_extend.c ****     return index;
 12390              		.loc 1 123 11 is_stmt 1 view .LVU4279
 12391              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12392              		.loc 1 123 21 is_stmt 0 view .LVU4280
 12393 46f8 49C1EB06 		shr	r11, 6	# tmp1138,
 12394              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12395              		.loc 1 123 12 view .LVU4281
 12396 46fc 4B8B1CDE 		mov	rbx, QWORD PTR [r14+r11*8]	# *_34, *_34
 12397              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 12398              		.loc 1 123 11 view .LVU4282
 12399 4700 480FA3C3 		bt	rbx, rax	# *_34, tmp824
 12400 4704 0F834E01 		jnc	.L1435	#,
 12400      0000
 12401 470a 488D4107 		lea	rax, 7[rcx]	# tmp824,
 12402              	.LVL657:
 123:sieve_extend.c ****     return index;
 12403              		.loc 1 123 11 view .LVU4283
 12404 470e E918FFFF 		jmp	.L930	#
GAS LISTING /tmp/ccgH0yRS.s 			page 337


 12404      FF
 12405              	.LVL658:
 12406              	.L1499:
 123:sieve_extend.c ****     return index;
 12407              		.loc 1 123 11 view .LVU4284
 12408              	.LBE703:
 12409              	.LBE705:
 12410              	.LBE608:
 12411              	.LBB711:
 12412              	.LBB592:
 12413              	.LBB585:
 12414              	.LBB576:
 12415              	.LBB543:
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12416              		.loc 1 248 8 is_stmt 1 view .LVU4285
 12417              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12418              		.loc 1 248 73 is_stmt 0 view .LVU4286
 12419 4713 48234424 		and	rax, QWORD PTR 40[rsp]	# tmp575, %sfp
 12419      28
 12420              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 12421              		.loc 1 248 35 view .LVU4287
 12422 4718 4C09C8   		or	rax, r9	# tmp576, pretmp_1229
 12423 471b 498903   		mov	QWORD PTR [r11], rax	# MEM[(uint64_t *)_1228], tmp576
 250:sieve_extend.c ****     }
 12424              		.loc 1 250 8 is_stmt 1 view .LVU4288
 12425 471e E908F5FF 		jmp	.L898	#
 12425      FF
 12426              	.LVL659:
 12427              	.L905:
 250:sieve_extend.c ****     }
 12428              		.loc 1 250 8 is_stmt 0 view .LVU4289
 12429              	.LBE543:
 12430              	.LBE576:
 12431              	.LBB577:
 12432              	.LBB574:
 12433              	.LBB569:
 12434              	.LBB570:
 12435              	.LBB571:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12436              		.loc 1 304 54 is_stmt 1 view .LVU4290
 12437              	# sieve_extend.c:304:         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12438              		.loc 1 304 9 is_stmt 0 view .LVU4291
 12439 4723 4939E8   		cmp	r8, rbp	# _69, index
 12440 4726 0F82FFF4 		jb	.L898	#,
 12440      FFFF
 12441              	.LBB572:
 12442              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12443              		.loc 1 309 25 view .LVU4292
 12444 472c BF010000 		mov	edi, 1	# tmp601,
 12444      00
 12445              	.LVL660:
 12446 4731 66662E0F 		.p2align 4
 12446      1F840000 
GAS LISTING /tmp/ccgH0yRS.s 			page 338


 12446      0000000F 
 12446      1F4000
 12447              		.p2align 3
 12448              	.L909:
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12449              		.loc 1 305 13 is_stmt 1 view .LVU4293
 12450              	# sieve_extend.c:305:             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12451              		.loc 1 305 32 is_stmt 0 view .LVU4294
 12452 4740 4889E9   		mov	rcx, rbp	# index_word, index
 12453              	# sieve_extend.c:306:             register bitword_t mask = SAFE_ZERO;
 306:sieve_extend.c ****             #pragma ivdep
 12454              		.loc 1 306 32 view .LVU4295
 12455 4743 4531C9   		xor	r9d, r9d	# mask
 12456              	# sieve_extend.c:305:             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 12457              		.loc 1 305 32 view .LVU4296
 12458 4746 48C1E906 		shr	rcx, 6	# index_word,
 12459              	.LVL661:
 306:sieve_extend.c ****             #pragma ivdep
 12460              		.loc 1 306 13 is_stmt 1 view .LVU4297
 12461              	.L908:
 308:sieve_extend.c ****                 mask |= markmask(index);
 12462              		.loc 1 308 13 view .LVU4298
 309:sieve_extend.c ****                 index += step;
 12463              		.loc 1 309 17 view .LVU4299
 12464              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12465              		.loc 1 309 25 is_stmt 0 view .LVU4300
 12466 474a C462D1F7 		shlx	r10, rdi, rbp	# tmp600, tmp601, index
 12466      D7
 12467              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12468              		.loc 1 310 23 view .LVU4301
 12469 474f 4C01E5   		add	rbp, r12	# index, step
 12470              	.LVL662:
 12471              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12472              		.loc 1 311 36 view .LVU4302
 12473 4752 4989EB   		mov	r11, rbp	# tmp602, index
 12474              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12475              		.loc 1 309 22 view .LVU4303
 12476 4755 4D09D1   		or	r9, r10	# mask, tmp600
 12477              	.LVL663:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12478              		.loc 1 310 17 is_stmt 1 view .LVU4304
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12479              		.loc 1 311 21 view .LVU4305
 12480              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12481              		.loc 1 311 36 is_stmt 0 view .LVU4306
 12482 4758 49C1EB06 		shr	r11, 6	# tmp602,
 12483              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12484              		.loc 1 311 13 view .LVU4307
 12485 475c 4C39D9   		cmp	rcx, r11	# index_word, tmp602
GAS LISTING /tmp/ccgH0yRS.s 			page 339


 12486 475f 0F85AB00 		jne	.L1355	#,
 12486      0000
 308:sieve_extend.c ****                 mask |= markmask(index);
 12487              		.loc 1 308 13 is_stmt 1 view .LVU4308
 309:sieve_extend.c ****                 index += step;
 12488              		.loc 1 309 17 view .LVU4309
 12489              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12490              		.loc 1 309 25 is_stmt 0 view .LVU4310
 12491 4765 C4E2D1F7 		shlx	rdx, rdi, rbp	# tmp1204, tmp601, index
 12491      D7
 12492              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12493              		.loc 1 310 23 view .LVU4311
 12494 476a 4C01E5   		add	rbp, r12	# index, step
 12495              	.LVL664:
 12496              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12497              		.loc 1 311 36 view .LVU4312
 12498 476d 4889E8   		mov	rax, rbp	# tmp1205, index
 12499              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12500              		.loc 1 309 22 view .LVU4313
 12501 4770 4909D1   		or	r9, rdx	# mask, tmp1204
 12502              	.LVL665:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12503              		.loc 1 310 17 is_stmt 1 view .LVU4314
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12504              		.loc 1 311 21 view .LVU4315
 12505              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12506              		.loc 1 311 36 is_stmt 0 view .LVU4316
 12507 4773 48C1E806 		shr	rax, 6	# tmp1205,
 12508              	.LVL666:
 12509              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12510              		.loc 1 311 13 view .LVU4317
 12511 4777 4839C1   		cmp	rcx, rax	# index_word, tmp1205
 12512 477a 0F859000 		jne	.L1355	#,
 12512      0000
 308:sieve_extend.c ****                 mask |= markmask(index);
 12513              		.loc 1 308 13 is_stmt 1 view .LVU4318
 309:sieve_extend.c ****                 index += step;
 12514              		.loc 1 309 17 view .LVU4319
 12515              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12516              		.loc 1 309 25 is_stmt 0 view .LVU4320
 12517 4780 C4E2D1F7 		shlx	rsi, rdi, rbp	# tmp1206, tmp601, index
 12517      F7
 12518              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12519              		.loc 1 310 23 view .LVU4321
 12520 4785 4C01E5   		add	rbp, r12	# index, step
 12521              	.LVL667:
 12522              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12523              		.loc 1 311 36 view .LVU4322
GAS LISTING /tmp/ccgH0yRS.s 			page 340


 12524 4788 4989EA   		mov	r10, rbp	# tmp1207, index
 12525              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12526              		.loc 1 309 22 view .LVU4323
 12527 478b 4909F1   		or	r9, rsi	# mask, tmp1206
 12528              	.LVL668:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12529              		.loc 1 310 17 is_stmt 1 view .LVU4324
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12530              		.loc 1 311 21 view .LVU4325
 12531              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12532              		.loc 1 311 36 is_stmt 0 view .LVU4326
 12533 478e 49C1EA06 		shr	r10, 6	# tmp1207,
 12534              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12535              		.loc 1 311 13 view .LVU4327
 12536 4792 4C39D1   		cmp	rcx, r10	# index_word, tmp1207
 12537 4795 7579     		jne	.L1355	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12538              		.loc 1 308 13 is_stmt 1 view .LVU4328
 309:sieve_extend.c ****                 index += step;
 12539              		.loc 1 309 17 view .LVU4329
 12540              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12541              		.loc 1 309 25 is_stmt 0 view .LVU4330
 12542 4797 C462D1F7 		shlx	r11, rdi, rbp	# tmp1208, tmp601, index
 12542      DF
 12543              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12544              		.loc 1 310 23 view .LVU4331
 12545 479c 4C01E5   		add	rbp, r12	# index, step
 12546              	.LVL669:
 12547              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12548              		.loc 1 311 36 view .LVU4332
 12549 479f 4889EA   		mov	rdx, rbp	# tmp1209, index
 12550              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12551              		.loc 1 309 22 view .LVU4333
 12552 47a2 4D09D9   		or	r9, r11	# mask, tmp1208
 12553              	.LVL670:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12554              		.loc 1 310 17 is_stmt 1 view .LVU4334
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12555              		.loc 1 311 21 view .LVU4335
 12556              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12557              		.loc 1 311 36 is_stmt 0 view .LVU4336
 12558 47a5 48C1EA06 		shr	rdx, 6	# tmp1209,
 12559              	.LVL671:
 12560              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12561              		.loc 1 311 13 view .LVU4337
 12562 47a9 4839D1   		cmp	rcx, rdx	# index_word, tmp1209
 12563 47ac 7562     		jne	.L1355	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
GAS LISTING /tmp/ccgH0yRS.s 			page 341


 12564              		.loc 1 308 13 is_stmt 1 view .LVU4338
 309:sieve_extend.c ****                 index += step;
 12565              		.loc 1 309 17 view .LVU4339
 12566              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12567              		.loc 1 309 25 is_stmt 0 view .LVU4340
 12568 47ae C4E2D1F7 		shlx	rax, rdi, rbp	# tmp1210, tmp601, index
 12568      C7
 12569              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12570              		.loc 1 310 23 view .LVU4341
 12571 47b3 4C01E5   		add	rbp, r12	# index, step
 12572              	.LVL672:
 12573              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12574              		.loc 1 311 36 view .LVU4342
 12575 47b6 4889EE   		mov	rsi, rbp	# tmp1211, index
 12576              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12577              		.loc 1 309 22 view .LVU4343
 12578 47b9 4909C1   		or	r9, rax	# mask, tmp1210
 12579              	.LVL673:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12580              		.loc 1 310 17 is_stmt 1 view .LVU4344
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12581              		.loc 1 311 21 view .LVU4345
 12582              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12583              		.loc 1 311 36 is_stmt 0 view .LVU4346
 12584 47bc 48C1EE06 		shr	rsi, 6	# tmp1211,
 12585              	.LVL674:
 12586              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12587              		.loc 1 311 13 view .LVU4347
 12588 47c0 4839F1   		cmp	rcx, rsi	# index_word, tmp1211
 12589 47c3 754B     		jne	.L1355	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12590              		.loc 1 308 13 is_stmt 1 view .LVU4348
 309:sieve_extend.c ****                 index += step;
 12591              		.loc 1 309 17 view .LVU4349
 12592              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12593              		.loc 1 309 25 is_stmt 0 view .LVU4350
 12594 47c5 C462D1F7 		shlx	r10, rdi, rbp	# tmp1212, tmp601, index
 12594      D7
 12595              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12596              		.loc 1 310 23 view .LVU4351
 12597 47ca 4C01E5   		add	rbp, r12	# index, step
 12598              	.LVL675:
 12599              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12600              		.loc 1 311 36 view .LVU4352
 12601 47cd 4989EB   		mov	r11, rbp	# tmp1213, index
 12602              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12603              		.loc 1 309 22 view .LVU4353
GAS LISTING /tmp/ccgH0yRS.s 			page 342


 12604 47d0 4D09D1   		or	r9, r10	# mask, tmp1212
 12605              	.LVL676:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12606              		.loc 1 310 17 is_stmt 1 view .LVU4354
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12607              		.loc 1 311 21 view .LVU4355
 12608              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12609              		.loc 1 311 36 is_stmt 0 view .LVU4356
 12610 47d3 49C1EB06 		shr	r11, 6	# tmp1213,
 12611              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12612              		.loc 1 311 13 view .LVU4357
 12613 47d7 4C39D9   		cmp	rcx, r11	# index_word, tmp1213
 12614 47da 7534     		jne	.L1355	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12615              		.loc 1 308 13 is_stmt 1 view .LVU4358
 309:sieve_extend.c ****                 index += step;
 12616              		.loc 1 309 17 view .LVU4359
 12617              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12618              		.loc 1 309 25 is_stmt 0 view .LVU4360
 12619 47dc C4E2D1F7 		shlx	rdx, rdi, rbp	# tmp1214, tmp601, index
 12619      D7
 12620              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12621              		.loc 1 310 23 view .LVU4361
 12622 47e1 4C01E5   		add	rbp, r12	# index, step
 12623              	.LVL677:
 12624              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12625              		.loc 1 311 36 view .LVU4362
 12626 47e4 4889E8   		mov	rax, rbp	# tmp1215, index
 12627              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12628              		.loc 1 309 22 view .LVU4363
 12629 47e7 4909D1   		or	r9, rdx	# mask, tmp1214
 12630              	.LVL678:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12631              		.loc 1 310 17 is_stmt 1 view .LVU4364
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12632              		.loc 1 311 21 view .LVU4365
 12633              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12634              		.loc 1 311 36 is_stmt 0 view .LVU4366
 12635 47ea 48C1E806 		shr	rax, 6	# tmp1215,
 12636              	.LVL679:
 12637              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12638              		.loc 1 311 13 view .LVU4367
 12639 47ee 4839C1   		cmp	rcx, rax	# index_word, tmp1215
 12640 47f1 751D     		jne	.L1355	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 12641              		.loc 1 308 13 is_stmt 1 view .LVU4368
 309:sieve_extend.c ****                 index += step;
 12642              		.loc 1 309 17 view .LVU4369
 12643              	# sieve_extend.c:309:                 mask |= markmask(index);
GAS LISTING /tmp/ccgH0yRS.s 			page 343


 309:sieve_extend.c ****                 index += step;
 12644              		.loc 1 309 25 is_stmt 0 view .LVU4370
 12645 47f3 C4E2D1F7 		shlx	rsi, rdi, rbp	# tmp1216, tmp601, index
 12645      F7
 12646              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12647              		.loc 1 310 23 view .LVU4371
 12648 47f8 4C01E5   		add	rbp, r12	# index, step
 12649              	.LVL680:
 12650              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12651              		.loc 1 311 36 view .LVU4372
 12652 47fb 4989EA   		mov	r10, rbp	# tmp1217, index
 12653              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 12654              		.loc 1 309 22 view .LVU4373
 12655 47fe 4909F1   		or	r9, rsi	# mask, tmp1216
 12656              	.LVL681:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 12657              		.loc 1 310 17 is_stmt 1 view .LVU4374
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12658              		.loc 1 311 21 view .LVU4375
 12659              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12660              		.loc 1 311 36 is_stmt 0 view .LVU4376
 12661 4801 49C1EA06 		shr	r10, 6	# tmp1217,
 12662              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 12663              		.loc 1 311 13 view .LVU4377
 12664 4805 4C39D1   		cmp	rcx, r10	# index_word, tmp1217
 12665 4808 0F843CFF 		je	.L908	#,
 12665      FFFF
 12666 480e 6690     		.p2align 4
 12667              		.p2align 3
 12668              	.L1355:
 314:sieve_extend.c ****         }
 12669              		.loc 1 314 13 is_stmt 1 view .LVU4378
 12670              	# sieve_extend.c:314:             bitarray[index_word] |= mask;
 314:sieve_extend.c ****         }
 12671              		.loc 1 314 34 is_stmt 0 view .LVU4379
 12672 4810 4D090CCF 		or	QWORD PTR [r15+rcx*8], r9	# *_182, mask
 314:sieve_extend.c ****         }
 12673              		.loc 1 314 34 view .LVU4380
 12674              	.LBE572:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12675              		.loc 1 304 54 is_stmt 1 view .LVU4381
 12676              	# sieve_extend.c:304:         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12677              		.loc 1 304 9 is_stmt 0 view .LVU4382
 12678 4814 4939E8   		cmp	r8, rbp	# _69, index
 12679 4817 0F8323FF 		jnb	.L909	#,
 12679      FFFF
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12680              		.loc 1 304 9 view .LVU4383
 12681 481d E909F4FF 		jmp	.L898	#
 12681      FF
 12682              	.LVL682:
GAS LISTING /tmp/ccgH0yRS.s 			page 344


 12683              	.L893:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 12684              		.loc 1 304 9 view .LVU4384
 12685              	.LBE571:
 12686              	.LBE570:
 12687              	.LBE569:
 12688              	.LBE574:
 12689              	.LBE577:
 12690              	.LBB578:
 12691              	.LBB528:
 885:sieve_extend.c **** }
 12692              		.loc 1 885 37 is_stmt 1 view .LVU4385
 12693 4822 E8A9D8FF 		call	extendSieve_aligned	#
 12693      FF
 12694              	.LVL683:
 885:sieve_extend.c **** }
 12695              		.loc 1 885 37 is_stmt 0 view .LVU4386
 12696 4827 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 12696      28
 12697 482c 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 12697      18
 12698 4831 E9B3F3FF 		jmp	.L890	#
 12698      FF
 12699              	.LVL684:
 12700              	.L1498:
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12701              		.loc 1 883 37 is_stmt 1 view .LVU4387
 12702 4836 E815DEFF 		call	extendSieve_shiftleft	#
 12702      FF
 12703              	.LVL685:
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12704              		.loc 1 883 37 is_stmt 0 view .LVU4388
 12705 483b 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 12705      28
 12706 4840 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 12706      18
 12707 4845 E99FF3FF 		jmp	.L890	#
 12707      FF
 12708              	.LVL686:
 12709              	.L1503:
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 12710              		.loc 1 883 37 view .LVU4389
 12711              	.LBE528:
 12712              	.LBE578:
 12713              	.LBE585:
 12714              	.LBE592:
 12715              	.LBE711:
 12716              	.LBB712:
 12717              	.LBB602:
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12718              		.loc 1 884 37 is_stmt 1 view .LVU4390
 12719 484a E871BEFF 		call	extendSieve_shiftright_ivdep	#
 12719      FF
 12720              	.LVL687:
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12721              		.loc 1 884 37 is_stmt 0 view .LVU4391
 12722 484f E977FDFF 		jmp	.L926	#
GAS LISTING /tmp/ccgH0yRS.s 			page 345


 12722      FF
 12723              	.LVL688:
 12724              		.p2align 4,,7
 12725 4854 0F1F4000 		.p2align 3
 12726              	.L1435:
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12727              		.loc 1 884 37 view .LVU4392
 12728 4858 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp824
 12728      20
 12729 485d 488D4001 		lea	rax, 1[rax]	# tmp824,
 12730              	.LVL689:
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12731              		.loc 1 884 37 view .LVU4393
 12732 4861 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, prime
 12732      28
 12733 4866 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, tmp824
 12733      20
 12734              	.LVL690:
 12735              	.L929:
 884:sieve_extend.c ****     else                            extendSieve_aligned   (bitarray, source_start, size, destinatio
 12736              		.loc 1 884 37 view .LVU4394
 12737              	.LBE602:
 12738              	.LBE712:
 12739              	.LBB713:
 12740              	.LBB706:
 12741              	.LBB704:
 124:sieve_extend.c **** }
 12742              		.loc 1 124 5 is_stmt 1 view .LVU4395
 124:sieve_extend.c **** }
 12743              		.loc 1 124 5 is_stmt 0 view .LVU4396
 12744              	.LBE704:
 12745              	.LBE706:
1024:sieve_extend.c ****     } 
 12746              		.loc 1 1024 9 is_stmt 1 view .LVU4397
 12747              	.LBB707:
 12748              	.LBB696:
 12749              	# sieve_extend.c:890:     counter_t start = prime * prime * 2 + prime * 2;
 890:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12750              		.loc 1 890 15 is_stmt 0 view .LVU4398
 12751 486b 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# tmp658, %sfp
 12751      20
 12752              	.LBE696:
 12753              	.LBE707:
 12754              	# sieve_extend.c:1024:         sieve_block_stripe(sieve, block_start, block_stop, prime);
1024:sieve_extend.c ****     } 
 12755              		.loc 1 1024 9 view .LVU4399
 12756 4870 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# <retval>, %sfp
 12756      30
 12757              	.LBB708:
 12758              	.LBB697:
 12759              	# sieve_extend.c:890:     counter_t start = prime * prime * 2 + prime * 2;
 890:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12760              		.loc 1 890 15 view .LVU4400
 12761 4875 480FAF74 		imul	rsi, QWORD PTR 40[rsp]	# tmp658, %sfp
 12761      2428
 12762              	.LBE697:
 12763              	.LBE708:
GAS LISTING /tmp/ccgH0yRS.s 			page 346


 12764              	# sieve_extend.c:1024:         sieve_block_stripe(sieve, block_start, block_stop, prime);
1024:sieve_extend.c ****     } 
 12765              		.loc 1 1024 9 view .LVU4401
 12766 487b 498B1E   		mov	rbx, QWORD PTR [r14]	# _30, MEM[(uint64_t * *)sieve_92]
 12767              	.LVL691:
 12768              	.LBB709:
 12769              	.LBI609:
 888:sieve_extend.c ****     counter_t prime = prime_start;
 12770              		.loc 1 888 13 is_stmt 1 view .LVU4402
 12771              	.LBB698:
 889:sieve_extend.c ****     counter_t start = prime * prime * 2 + prime * 2;
 12772              		.loc 1 889 5 view .LVU4403
 890:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12773              		.loc 1 890 5 view .LVU4404
 12774              	# sieve_extend.c:890:     counter_t start = prime * prime * 2 + prime * 2;
 890:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 12775              		.loc 1 890 15 is_stmt 0 view .LVU4405
 12776 487e 4801F6   		add	rsi, rsi	# index
 12777              	.LVL692:
 891:sieve_extend.c ****     bitword_t* bitarray = sieve->bitarray;
 12778              		.loc 1 891 5 is_stmt 1 view .LVU4406
 892:sieve_extend.c **** 
 12779              		.loc 1 892 5 view .LVU4407
 894:sieve_extend.c ****     
 12780              		.loc 1 894 5 view .LVU4408
 896:sieve_extend.c ****         step  = prime * 2 + 1;
 12781              		.loc 1 896 5 view .LVU4409
 896:sieve_extend.c ****         step  = prime * 2 + 1;
 12782              		.loc 1 896 11 view .LVU4410
 12783 4881 4939F4   		cmp	r12, rsi	# block_stop, index
 12784 4884 0F82D303 		jb	.L936	#,
 12784      0000
 12785              	.LBB629:
 12786              	.LBB624:
 12787              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12788              		.loc 1 245 21 is_stmt 0 view .LVU4411
 12789 488a 4C89E2   		mov	rdx, r12	# range_stop_word, block_stop
 12790              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 12791              		.loc 1 269 33 view .LVU4412
 12792 488d 4489E1   		mov	ecx, r12d	# tmp660, block_stop
 12793              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12794              		.loc 1 245 21 view .LVU4413
 12795 4890 48C1EA06 		shr	rdx, 6	# range_stop_word,
 12796              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 12797              		.loc 1 269 33 view .LVU4414
 12798 4894 F7D1     		not	ecx	# tmp660
 12799              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 12800              		.loc 1 269 30 view .LVU4415
 12801 4896 488D2CD3 		lea	rbp, [rbx+rdx*8]	# _494,
 12802              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 12803              		.loc 1 269 33 view .LVU4416
GAS LISTING /tmp/ccgH0yRS.s 			page 347


 12804 489a 49C7C5FF 		mov	r13, -1	# tmp1679,
 12804      FFFFFF
 12805              	# sieve_extend.c:245:     const counter_t range_stop_word = wordindex(range_stop);
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 12806              		.loc 1 245 21 view .LVU4417
 12807 48a1 48895424 		mov	QWORD PTR 16[rsp], rdx	# %sfp, range_stop_word
 12807      10
 12808              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 12809              		.loc 1 269 33 view .LVU4418
 12810 48a6 C442F3F7 		shrx	r9, r13, rcx	# _499, tmp1679, tmp660
 12810      CD
 12811 48ab 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# index, %sfp
 12811      28
 12812 48b0 4989EE   		mov	r14, rbp	# _1365, _494
 12813              	.LVL693:
 269:sieve_extend.c **** 
 12814              		.loc 1 269 33 view .LVU4419
 12815 48b3 4C894C24 		mov	QWORD PTR 8[rsp], r9	# %sfp, _499
 12815      08
 12816 48b8 0F1F8400 		.p2align 4
 12816      00000000 
 12817              		.p2align 3
 12818              	.L947:
 269:sieve_extend.c **** 
 12819              		.loc 1 269 33 view .LVU4420
 12820              	.LBE624:
 12821              	.LBE629:
 897:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 12822              		.loc 1 897 9 is_stmt 1 view .LVU4421
 12823              	# sieve_extend.c:897:         step  = prime * 2 + 1;
 897:sieve_extend.c ****         if unlikely(step > SMALLSTEP_FASTER) break;
 12824              		.loc 1 897 15 is_stmt 0 view .LVU4422
 12825 48c0 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 12825      01
 12826              	.LVL694:
 898:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12827              		.loc 1 898 9 is_stmt 1 view .LVU4423
 12828              	# sieve_extend.c:898:         if unlikely(step > SMALLSTEP_FASTER) break;
 898:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 12829              		.loc 1 898 12 is_stmt 0 view .LVU4424
 12830 48c5 483B3D00 		cmp	rdi, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 12830      000000
 12831 48cc 0F87C603 		ja	.L1504	#,
 12831      0000
 899:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12832              		.loc 1 899 9 is_stmt 1 view .LVU4425
 12833              	# sieve_extend.c:899:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 899:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12834              		.loc 1 899 12 is_stmt 0 view .LVU4426
 12835 48d2 4C8D5101 		lea	r10, 1[rcx]	# _303,
 12836 48d6 4D39FA   		cmp	r10, r15	# _303, block_start
 12837 48d9 7710     		ja	.L937	#,
 899:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12838              		.loc 1 899 47 is_stmt 1 view .LVU4427
 12839              	# sieve_extend.c:899:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 899:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
GAS LISTING /tmp/ccgH0yRS.s 			page 348


 12840              		.loc 1 899 67 is_stmt 0 view .LVU4428
 12841 48db 4A8D0439 		lea	rax, [rcx+r15]	# _307,
 12842              	# sieve_extend.c:899:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 899:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12843              		.loc 1 899 108 view .LVU4429
 12844 48df 31D2     		xor	edx, edx	# tmp666
 12845              	# sieve_extend.c:899:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 899:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12846              		.loc 1 899 75 view .LVU4430
 12847 48e1 488D3408 		lea	rsi, [rax+rcx]	# tmp664,
 12848              	.LVL695:
 12849              	# sieve_extend.c:899:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 899:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12850              		.loc 1 899 108 view .LVU4431
 12851 48e5 48F7F7   		div	rdi	# step
 12852              	.LVL696:
 12853              	# sieve_extend.c:899:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 899:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 12854              		.loc 1 899 53 view .LVU4432
 12855 48e8 4829D6   		sub	rsi, rdx	# index, tmp666
 12856              	.LVL697:
 12857              	.L937:
 900:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 12858              		.loc 1 900 9 is_stmt 1 view .LVU4433
 12859              	.LBB630:
 12860              	.LBI611:
 234:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 12861              		.loc 1 234 20 view .LVU4434
 12862              	.LBB625:
 235:sieve_extend.c **** 
 12863              		.loc 1 235 5 view .LVU4435
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 12864              		.loc 1 238 2 view .LVU4436
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12865              		.loc 1 239 5 view .LVU4437
 12866              	.LBB613:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12867              		.loc 1 239 10 view .LVU4438
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12868              		.loc 1 239 41 view .LVU4439
 12869              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12870              		.loc 1 239 5 is_stmt 0 view .LVU4440
 12871 48eb 4883FF40 		cmp	rdi, 64	# step,
 12872 48ef 0F87330E 		ja	.L996	#,
 12872      0000
 12873 48f5 4989F8   		mov	r8, rdi	# patternsize, step
 12874              	.LBE613:
 12875              	# sieve_extend.c:238: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 12876              		.loc 1 238 21 view .LVU4441
 12877 48f8 B9010000 		mov	ecx, 1	# pattern,
 12877      00
 12878              	.LVL698:
 12879              	.L939:
 12880              	.LBB614:
 240:sieve_extend.c **** 
GAS LISTING /tmp/ccgH0yRS.s 			page 349


 12881              		.loc 1 240 9 is_stmt 1 view .LVU4442
 12882              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12883              		.loc 1 239 88 is_stmt 0 view .LVU4443
 12884 48fd 4F8D2C00 		lea	r13, [r8+r8]	# patternsize,
 12885              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12886              		.loc 1 240 29 view .LVU4444
 12887 4901 C462B9F7 		shlx	r11, rcx, r8	# _448, pattern, patternsize
 12887      D9
 12888              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12889              		.loc 1 240 17 view .LVU4445
 12890 4906 4C09D9   		or	rcx, r11	# pattern, _448
 12891              	.LVL699:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12892              		.loc 1 239 76 is_stmt 1 view .LVU4446
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12893              		.loc 1 239 41 view .LVU4447
 12894              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12895              		.loc 1 239 5 is_stmt 0 view .LVU4448
 12896 4909 4983FD40 		cmp	r13, 64	# patternsize,
 12897 490d 0F879D00 		ja	.L938	#,
 12897      0000
 240:sieve_extend.c **** 
 12898              		.loc 1 240 9 is_stmt 1 view .LVU4449
 12899              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12900              		.loc 1 239 88 is_stmt 0 view .LVU4450
 12901 4913 4A8D0485 		lea	rax, 0[0+r8*4]	# patternsize,
 12901      00000000 
 12902              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12903              		.loc 1 240 29 view .LVU4451
 12904 491b C46291F7 		shlx	r9, rcx, r13	# _448, pattern, patternsize
 12904      C9
 12905              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12906              		.loc 1 240 17 view .LVU4452
 12907 4920 4C09C9   		or	rcx, r9	# pattern, _448
 12908              	.LVL700:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12909              		.loc 1 239 76 is_stmt 1 view .LVU4453
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12910              		.loc 1 239 41 view .LVU4454
 12911              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12912              		.loc 1 239 5 is_stmt 0 view .LVU4455
 12913 4923 4883F840 		cmp	rax, 64	# patternsize,
 12914 4927 0F878300 		ja	.L938	#,
 12914      0000
 240:sieve_extend.c **** 
 12915              		.loc 1 240 9 is_stmt 1 view .LVU4456
 12916              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12917              		.loc 1 239 88 is_stmt 0 view .LVU4457
GAS LISTING /tmp/ccgH0yRS.s 			page 350


 12918 492d 4E8D1CC5 		lea	r11, 0[0+r8*8]	# patternsize,
 12918      00000000 
 12919              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12920              		.loc 1 240 29 view .LVU4458
 12921 4935 C4E2F9F7 		shlx	rdx, rcx, rax	# _448, pattern, patternsize
 12921      D1
 12922              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12923              		.loc 1 240 17 view .LVU4459
 12924 493a 4809D1   		or	rcx, rdx	# pattern, _448
 12925              	.LVL701:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12926              		.loc 1 239 76 is_stmt 1 view .LVU4460
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12927              		.loc 1 239 41 view .LVU4461
 12928              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12929              		.loc 1 239 5 is_stmt 0 view .LVU4462
 12930 493d 4983FB40 		cmp	r11, 64	# patternsize,
 12931 4941 776D     		ja	.L938	#,
 240:sieve_extend.c **** 
 12932              		.loc 1 240 9 is_stmt 1 view .LVU4463
 12933              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12934              		.loc 1 239 88 is_stmt 0 view .LVU4464
 12935 4943 4D89C1   		mov	r9, r8	# patternsize, patternsize
 12936              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12937              		.loc 1 240 29 view .LVU4465
 12938 4946 C462A1F7 		shlx	r13, rcx, r11	# _448, pattern, patternsize
 12938      E9
 12939              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12940              		.loc 1 239 88 view .LVU4466
 12941 494b 49C1E104 		sal	r9, 4	# patternsize,
 12942              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12943              		.loc 1 240 17 view .LVU4467
 12944 494f 4C09E9   		or	rcx, r13	# pattern, _448
 12945              	.LVL702:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12946              		.loc 1 239 76 is_stmt 1 view .LVU4468
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12947              		.loc 1 239 41 view .LVU4469
 12948              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12949              		.loc 1 239 5 is_stmt 0 view .LVU4470
 12950 4952 4983F940 		cmp	r9, 64	# patternsize,
 12951 4956 7758     		ja	.L938	#,
 240:sieve_extend.c **** 
 12952              		.loc 1 240 9 is_stmt 1 view .LVU4471
 12953              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12954              		.loc 1 239 88 is_stmt 0 view .LVU4472
 12955 4958 4C89C2   		mov	rdx, r8	# patternsize, patternsize
 12956              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
GAS LISTING /tmp/ccgH0yRS.s 			page 351


 240:sieve_extend.c **** 
 12957              		.loc 1 240 29 view .LVU4473
 12958 495b C4E2B1F7 		shlx	rax, rcx, r9	# _448, pattern, patternsize
 12958      C1
 12959              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12960              		.loc 1 239 88 view .LVU4474
 12961 4960 48C1E205 		sal	rdx, 5	# patternsize,
 12962              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12963              		.loc 1 240 17 view .LVU4475
 12964 4964 4809C1   		or	rcx, rax	# pattern, _448
 12965              	.LVL703:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12966              		.loc 1 239 76 is_stmt 1 view .LVU4476
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12967              		.loc 1 239 41 view .LVU4477
 12968              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12969              		.loc 1 239 5 is_stmt 0 view .LVU4478
 12970 4967 4883FA40 		cmp	rdx, 64	# patternsize,
 12971 496b 7743     		ja	.L938	#,
 240:sieve_extend.c **** 
 12972              		.loc 1 240 9 is_stmt 1 view .LVU4479
 12973              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12974              		.loc 1 239 88 is_stmt 0 view .LVU4480
 12975 496d 4D89C5   		mov	r13, r8	# patternsize, patternsize
 12976              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12977              		.loc 1 240 29 view .LVU4481
 12978 4970 C462E9F7 		shlx	r11, rcx, rdx	# _448, pattern, patternsize
 12978      D9
 12979              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12980              		.loc 1 239 88 view .LVU4482
 12981 4975 49C1E506 		sal	r13, 6	# patternsize,
 12982              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12983              		.loc 1 240 17 view .LVU4483
 12984 4979 4C09D9   		or	rcx, r11	# pattern, _448
 12985              	.LVL704:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12986              		.loc 1 239 76 is_stmt 1 view .LVU4484
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12987              		.loc 1 239 41 view .LVU4485
 12988              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12989              		.loc 1 239 5 is_stmt 0 view .LVU4486
 12990 497c 4983FD40 		cmp	r13, 64	# patternsize,
 12991 4980 772E     		ja	.L938	#,
 240:sieve_extend.c **** 
 12992              		.loc 1 240 9 is_stmt 1 view .LVU4487
 12993              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 12994              		.loc 1 239 88 is_stmt 0 view .LVU4488
 12995 4982 4C89C0   		mov	rax, r8	# patternsize, patternsize
GAS LISTING /tmp/ccgH0yRS.s 			page 352


 12996              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 12997              		.loc 1 240 29 view .LVU4489
 12998 4985 C46291F7 		shlx	r9, rcx, r13	# _448, pattern, patternsize
 12998      C9
 12999              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13000              		.loc 1 239 88 view .LVU4490
 13001 498a 48C1E007 		sal	rax, 7	# patternsize,
 13002              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 13003              		.loc 1 240 17 view .LVU4491
 13004 498e 4C09C9   		or	rcx, r9	# pattern, _448
 13005              	.LVL705:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13006              		.loc 1 239 76 is_stmt 1 view .LVU4492
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13007              		.loc 1 239 41 view .LVU4493
 13008              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13009              		.loc 1 239 5 is_stmt 0 view .LVU4494
 13010 4991 4883F840 		cmp	rax, 64	# patternsize,
 13011 4995 7719     		ja	.L938	#,
 240:sieve_extend.c **** 
 13012              		.loc 1 240 9 is_stmt 1 view .LVU4495
 13013              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13014              		.loc 1 239 88 is_stmt 0 view .LVU4496
 13015 4997 49C1E008 		sal	r8, 8	# patternsize,
 13016              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 13017              		.loc 1 240 29 view .LVU4497
 13018 499b C4E2F9F7 		shlx	rdx, rcx, rax	# _448, pattern, patternsize
 13018      D1
 13019              	# sieve_extend.c:240:         pattern |= (pattern << patternsize);
 240:sieve_extend.c **** 
 13020              		.loc 1 240 17 view .LVU4498
 13021 49a0 4809D1   		or	rcx, rdx	# pattern, _448
 13022              	.LVL706:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13023              		.loc 1 239 76 is_stmt 1 view .LVU4499
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13024              		.loc 1 239 41 view .LVU4500
 13025              	# sieve_extend.c:239:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13026              		.loc 1 239 5 is_stmt 0 view .LVU4501
 13027 49a3 4983F840 		cmp	r8, 64	# patternsize,
 13028 49a7 0F8650FF 		jbe	.L939	#,
 13028      FFFF
 13029              	.LVL707:
 13030 49ad 0F1F00   		.p2align 4
 13031              		.p2align 3
 13032              	.L938:
 239:sieve_extend.c ****         pattern |= (pattern << patternsize);
 13033              		.loc 1 239 5 view .LVU4502
 13034              	.LBE614:
 245:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
GAS LISTING /tmp/ccgH0yRS.s 			page 353


 13035              		.loc 1 245 5 is_stmt 1 view .LVU4503
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 13036              		.loc 1 246 5 view .LVU4504
 13037              	# sieve_extend.c:246:     register counter_t range_start_word = wordindex(range_start);
 246:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 13038              		.loc 1 246 24 is_stmt 0 view .LVU4505
 13039 49b0 4989F0   		mov	r8, rsi	# range_start_word, index
 13040 49b3 C462C9F7 		shlx	r9, rcx, rsi	# _1284, pattern, index
 13040      C9
 13041 49b8 49C1E806 		shr	r8, 6	# range_start_word,
 13042              	.LVL708:
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 13043              		.loc 1 247 6 is_stmt 1 view .LVU4506
 13044              	# sieve_extend.c:247:      if (range_start_word >= range_stop_word) { // shortcut
 247:sieve_extend.c ****        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 13045              		.loc 1 247 9 is_stmt 0 view .LVU4507
 13046 49bc 4C394424 		cmp	QWORD PTR 16[rsp], r8	# %sfp, range_start_word
 13046      10
 13047 49c1 4E8D1CC3 		lea	r11, [rbx+r8*8]	# _1281,
 13048 49c5 4D8B2B   		mov	r13, QWORD PTR [r11]	# pretmp_1282, *_1281
 13049 49c8 0F86BA02 		jbe	.L1505	#,
 13049      0000
 253:sieve_extend.c **** 
 13050              		.loc 1 253 5 is_stmt 1 view .LVU4508
 13051              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 13052              		.loc 1 257 80 is_stmt 0 view .LVU4509
 13053 49ce 31D2     		xor	edx, edx	# tmp675
 13054 49d0 B8400000 		mov	eax, 64	# tmp676,
 13054      00
 13055 49d5 48F7F7   		div	rdi	# step
 13056              	# sieve_extend.c:253:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 13057              		.loc 1 253 32 view .LVU4510
 13058 49d8 4D09E9   		or	r9, r13	# tmp673, pretmp_1282
 13059              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 13060              		.loc 1 259 33 view .LVU4511
 13061 49db 4889F0   		mov	rax, rsi	# index, index
 13062              	# sieve_extend.c:253:     bitarray[range_start_word] |= (pattern << bitindex(range_start));
 253:sieve_extend.c **** 
 13063              		.loc 1 253 32 view .LVU4512
 13064 49de 4D890B   		mov	QWORD PTR [r11], r9	# *_1281, tmp673
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 13065              		.loc 1 257 4 is_stmt 1 view .LVU4513
 13066              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 13067              		.loc 1 257 24 is_stmt 0 view .LVU4514
 13068 49e1 41BD4000 		mov	r13d, 64	# pattern_size,
 13068      0000
 13069              	# sieve_extend.c:258:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 13070              		.loc 1 258 24 view .LVU4515
 13071 49e7 4989F9   		mov	r9, rdi	# pattern_shift, step
 13072              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 13073              		.loc 1 259 33 view .LVU4516
GAS LISTING /tmp/ccgH0yRS.s 			page 354


 13074 49ea 83E03F   		and	eax, 63	# index,
 13075              	# sieve_extend.c:257:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 257:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 13076              		.loc 1 257 24 view .LVU4517
 13077 49ed 4929D5   		sub	r13, rdx	# pattern_size, tmp675
 13078              	.LVL709:
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 13079              		.loc 1 258 4 is_stmt 1 view .LVU4518
 13080              	# sieve_extend.c:258:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 258:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 13081              		.loc 1 258 24 is_stmt 0 view .LVU4519
 13082 49f0 4929D1   		sub	r9, rdx	# pattern_shift, tmp675
 13083              	.LVL710:
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 13084              		.loc 1 259 4 is_stmt 1 view .LVU4520
 13085              	# sieve_extend.c:259:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 259:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 13086              		.loc 1 259 24 is_stmt 0 view .LVU4521
 13087 49f3 31D2     		xor	edx, edx	# tmp679
 13088 49f5 48F7F7   		div	rdi	# step
 13089              	.LVL711:
 260:sieve_extend.c ****    #pragma unroll
 13090              		.loc 1 260 4 is_stmt 1 view .LVU4522
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13091              		.loc 1 263 4 view .LVU4523
 13092              	.LBB615:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13093              		.loc 1 263 9 view .LVU4524
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13094              		.loc 1 263 24 view .LVU4525
 13095              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13096              		.loc 1 263 4 is_stmt 0 view .LVU4526
 13097 49f8 4C394424 		cmp	QWORD PTR 16[rsp], r8	# %sfp, range_start_word
 13097      10
 13098 49fd 0F845D01 		je	.L944	#,
 13098      0000
 13099 4a03 4C89F0   		mov	rax, r14	# tmp843, _1365
 13100 4a06 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.614,
 13101              	.LVL712:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13102              		.loc 1 263 4 view .LVU4527
 13103 4a0a 4C29D8   		sub	rax, r11	# tmp843, ivtmp.616
 13104 4a0d 4D89D8   		mov	r8, r11	# ivtmp.616, _1281
 13105              	.LVL713:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13106              		.loc 1 263 4 view .LVU4528
 13107 4a10 4883E808 		sub	rax, 8	# tmp844,
 13108 4a14 48C1E803 		shr	rax, 3	# tmp842,
 13109 4a18 4883C001 		add	rax, 1	# tmp845,
 13110 4a1c 83E003   		and	eax, 3	# tmp846,
 13111 4a1f 0F849800 		je	.L943	#,
 13111      0000
 13112 4a25 4883F801 		cmp	rax, 1	# tmp846,
 13113 4a29 7461     		je	.L1212	#,
 13114 4a2b 4883F802 		cmp	rax, 2	# tmp846,
 13115 4a2f 7433     		je	.L1213	#,
GAS LISTING /tmp/ccgH0yRS.s 			page 355


 13116              	.LVL714:
 13117              	.LBB616:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13118              		.loc 1 264 9 is_stmt 1 view .LVU4529
 265:sieve_extend.c **** 
 13119              		.loc 1 265 8 view .LVU4530
 13120              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13121              		.loc 1 264 20 is_stmt 0 view .LVU4531
 13122 4a31 4889F0   		mov	rax, rsi	# tmp1085, ivtmp.614
 13123 4a34 31D2     		xor	edx, edx	# totalshift
 13124              	.LVL715:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13125              		.loc 1 264 20 view .LVU4532
 13126 4a36 48F7F7   		div	rdi	# step
 13127 4a39 4983C008 		add	r8, 8	# ivtmp.616,
 13128 4a3d 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13129              	.LVL716:
 13130              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13131              		.loc 1 265 91 view .LVU4533
 13132 4a40 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1086, pattern, totalshift
 13132      C1
 13133              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13134              		.loc 1 265 37 view .LVU4534
 13135 4a45 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp1086, MEM[base: _1370, offset: 8B]
 13136 4a49 48894424 		mov	QWORD PTR 24[rsp], rax	# %sfp, tmp1086
 13136      18
 13137              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13138              		.loc 1 265 66 view .LVU4535
 13139 4a4e 4489E8   		mov	eax, r13d	# tmp1088, _1295
 13140 4a51 29D0     		sub	eax, edx	# tmp1088, totalshift
 13141              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13142              		.loc 1 265 50 view .LVU4536
 13143 4a53 C4E2FBF7 		shrx	rdx, rcx, rax	# tmp1089, pattern, tmp1088
 13143      D1
 13144              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13145              		.loc 1 265 37 view .LVU4537
 13146 4a58 488B4424 		mov	rax, QWORD PTR 24[rsp]	# tmp1087, %sfp
 13146      18
 13147 4a5d 4809D0   		or	rax, rdx	# tmp1087, tmp1089
 13148 4a60 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _1370, offset: 8B], tmp1090
 13149              	.LBE616:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13150              		.loc 1 263 41 is_stmt 1 view .LVU4538
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13151              		.loc 1 263 24 view .LVU4539
 13152              	.L1213:
 13153              	.LBB617:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13154              		.loc 1 264 9 view .LVU4540
 265:sieve_extend.c **** 
 13155              		.loc 1 265 8 view .LVU4541
GAS LISTING /tmp/ccgH0yRS.s 			page 356


 13156              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13157              		.loc 1 264 20 is_stmt 0 view .LVU4542
 13158 4a64 4889F0   		mov	rax, rsi	# tmp1092, ivtmp.614
 13159 4a67 31D2     		xor	edx, edx	# totalshift
 13160 4a69 48F7F7   		div	rdi	# step
 13161              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13162              		.loc 1 265 66 view .LVU4543
 13163 4a6c 4589EB   		mov	r11d, r13d	# tmp1095, _1295
 13164 4a6f 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13165 4a72 4983C008 		add	r8, 8	# ivtmp.616,
 13166              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13167              		.loc 1 265 91 view .LVU4544
 13168 4a76 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1093, pattern, totalshift
 13168      C1
 13169              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13170              		.loc 1 265 37 view .LVU4545
 13171 4a7b 490B00   		or	rax, QWORD PTR [r8]	# tmp1094, MEM[base: _1370, offset: 8B]
 13172              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13173              		.loc 1 265 66 view .LVU4546
 13174 4a7e 4129D3   		sub	r11d, edx	# tmp1095, totalshift
 13175              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13176              		.loc 1 265 50 view .LVU4547
 13177 4a81 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1096, pattern, tmp1095
 13177      D1
 13178              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13179              		.loc 1 265 37 view .LVU4548
 13180 4a86 4809D0   		or	rax, rdx	# tmp1097, tmp1096
 13181 4a89 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp1097
 13182              	.LBE617:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13183              		.loc 1 263 41 is_stmt 1 view .LVU4549
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13184              		.loc 1 263 24 view .LVU4550
 13185              	.L1212:
 13186              	.LBB618:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13187              		.loc 1 264 9 view .LVU4551
 265:sieve_extend.c **** 
 13188              		.loc 1 265 8 view .LVU4552
 13189              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13190              		.loc 1 264 20 is_stmt 0 view .LVU4553
 13191 4a8c 4889F0   		mov	rax, rsi	# tmp1099, ivtmp.614
 13192 4a8f 31D2     		xor	edx, edx	# totalshift
 13193 4a91 48F7F7   		div	rdi	# step
 13194              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13195              		.loc 1 265 66 view .LVU4554
 13196 4a94 4589EB   		mov	r11d, r13d	# tmp1102, _1295
 13197 4a97 4983C008 		add	r8, 8	# ivtmp.616,
GAS LISTING /tmp/ccgH0yRS.s 			page 357


 13198 4a9b 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13199              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13200              		.loc 1 265 91 view .LVU4555
 13201 4a9e C4E2E9F7 		shlx	rax, rcx, rdx	# tmp1100, pattern, totalshift
 13201      C1
 13202              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13203              		.loc 1 265 37 view .LVU4556
 13204 4aa3 490B00   		or	rax, QWORD PTR [r8]	# tmp1101, MEM[base: _1370, offset: 8B]
 13205              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13206              		.loc 1 265 66 view .LVU4557
 13207 4aa6 4129D3   		sub	r11d, edx	# tmp1102, totalshift
 13208              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13209              		.loc 1 265 50 view .LVU4558
 13210 4aa9 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp1103, pattern, tmp1102
 13210      D1
 13211              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13212              		.loc 1 265 37 view .LVU4559
 13213 4aae 4809D0   		or	rax, rdx	# tmp1104, tmp1103
 13214 4ab1 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp1104
 13215              	.LBE618:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13216              		.loc 1 263 41 is_stmt 1 view .LVU4560
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13217              		.loc 1 263 24 view .LVU4561
 13218              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13219              		.loc 1 263 4 is_stmt 0 view .LVU4562
 13220 4ab4 4D39C6   		cmp	r14, r8	# _1365, ivtmp.616
 13221 4ab7 0F84A300 		je	.L944	#,
 13221      0000
 13222              	.L943:
 13223              	.LBB619:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13224              		.loc 1 264 9 is_stmt 1 view .LVU4563
 265:sieve_extend.c **** 
 13225              		.loc 1 265 8 view .LVU4564
 13226              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13227              		.loc 1 264 20 is_stmt 0 view .LVU4565
 13228 4abd 4889F0   		mov	rax, rsi	# tmp685, ivtmp.614
 13229 4ac0 31D2     		xor	edx, edx	# totalshift
 13230 4ac2 48F7F7   		div	rdi	# step
 13231              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13232              		.loc 1 265 66 view .LVU4566
 13233 4ac5 4589EB   		mov	r11d, r13d	# tmp688, _1295
 13234 4ac8 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13235 4acb 4983C020 		add	r8, 32	# ivtmp.616,
 13236              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13237              		.loc 1 265 91 view .LVU4567
 13238 4acf C4E2E9F7 		shlx	rax, rcx, rdx	# tmp686, pattern, totalshift
GAS LISTING /tmp/ccgH0yRS.s 			page 358


 13238      C1
 13239              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13240              		.loc 1 265 37 view .LVU4568
 13241 4ad4 490B40E8 		or	rax, QWORD PTR -24[r8]	# tmp687, MEM[base: _1370, offset: 8B]
 13242              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13243              		.loc 1 265 66 view .LVU4569
 13244 4ad8 4129D3   		sub	r11d, edx	# tmp688, totalshift
 13245              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13246              		.loc 1 265 50 view .LVU4570
 13247 4adb C4E2A3F7 		shrx	rdx, rcx, r11	# tmp689, pattern, tmp688
 13247      D1
 13248              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13249              		.loc 1 265 66 view .LVU4571
 13250 4ae0 4589EB   		mov	r11d, r13d	# tmp898, _1295
 13251              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13252              		.loc 1 265 37 view .LVU4572
 13253 4ae3 4809D0   		or	rax, rdx	# tmp690, tmp689
 13254              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13255              		.loc 1 264 20 view .LVU4573
 13256 4ae6 31D2     		xor	edx, edx	# totalshift
 13257              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13258              		.loc 1 265 37 view .LVU4574
 13259 4ae8 498940E8 		mov	QWORD PTR -24[r8], rax	# MEM[base: _1370, offset: 8B], tmp690
 13260              	.LBE619:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13261              		.loc 1 263 41 is_stmt 1 view .LVU4575
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13262              		.loc 1 263 24 view .LVU4576
 13263              	.LBB620:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13264              		.loc 1 264 9 view .LVU4577
 265:sieve_extend.c **** 
 13265              		.loc 1 265 8 view .LVU4578
 13266              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13267              		.loc 1 264 20 is_stmt 0 view .LVU4579
 13268 4aec 4889F0   		mov	rax, rsi	# tmp895, ivtmp.614
 13269 4aef 48F7F7   		div	rdi	# step
 13270 4af2 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13271              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13272              		.loc 1 265 91 view .LVU4580
 13273 4af5 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp896, pattern, totalshift
 13273      C1
 13274              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13275              		.loc 1 265 37 view .LVU4581
 13276 4afa 490B40F0 		or	rax, QWORD PTR -16[r8]	# tmp897, MEM[base: _1370, offset: 8B]
 13277              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
GAS LISTING /tmp/ccgH0yRS.s 			page 359


 13278              		.loc 1 265 66 view .LVU4582
 13279 4afe 4129D3   		sub	r11d, edx	# tmp898, totalshift
 13280              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13281              		.loc 1 265 50 view .LVU4583
 13282 4b01 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp899, pattern, tmp898
 13282      D1
 13283              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13284              		.loc 1 265 66 view .LVU4584
 13285 4b06 4589EB   		mov	r11d, r13d	# tmp907, _1295
 13286              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13287              		.loc 1 265 37 view .LVU4585
 13288 4b09 4809D0   		or	rax, rdx	# tmp900, tmp899
 13289              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13290              		.loc 1 264 20 view .LVU4586
 13291 4b0c 31D2     		xor	edx, edx	# totalshift
 13292              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13293              		.loc 1 265 37 view .LVU4587
 13294 4b0e 498940F0 		mov	QWORD PTR -16[r8], rax	# MEM[base: _1370, offset: 8B], tmp900
 13295              	.LBE620:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13296              		.loc 1 263 41 is_stmt 1 view .LVU4588
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13297              		.loc 1 263 24 view .LVU4589
 13298              	.LBB621:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13299              		.loc 1 264 9 view .LVU4590
 265:sieve_extend.c **** 
 13300              		.loc 1 265 8 view .LVU4591
 13301              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13302              		.loc 1 264 20 is_stmt 0 view .LVU4592
 13303 4b12 4889F0   		mov	rax, rsi	# tmp904, ivtmp.614
 13304 4b15 48F7F7   		div	rdi	# step
 13305 4b18 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13306              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13307              		.loc 1 265 91 view .LVU4593
 13308 4b1b C4E2E9F7 		shlx	rax, rcx, rdx	# tmp905, pattern, totalshift
 13308      C1
 13309              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13310              		.loc 1 265 37 view .LVU4594
 13311 4b20 490B40F8 		or	rax, QWORD PTR -8[r8]	# tmp906, MEM[base: _1370, offset: 8B]
 13312              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13313              		.loc 1 265 66 view .LVU4595
 13314 4b24 4129D3   		sub	r11d, edx	# tmp907, totalshift
 13315              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13316              		.loc 1 265 50 view .LVU4596
 13317 4b27 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp908, pattern, tmp907
 13317      D1
GAS LISTING /tmp/ccgH0yRS.s 			page 360


 13318              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13319              		.loc 1 265 66 view .LVU4597
 13320 4b2c 4589EB   		mov	r11d, r13d	# tmp916, _1295
 13321              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13322              		.loc 1 265 37 view .LVU4598
 13323 4b2f 4809D0   		or	rax, rdx	# tmp909, tmp908
 13324              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13325              		.loc 1 264 20 view .LVU4599
 13326 4b32 31D2     		xor	edx, edx	# totalshift
 13327              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13328              		.loc 1 265 37 view .LVU4600
 13329 4b34 498940F8 		mov	QWORD PTR -8[r8], rax	# MEM[base: _1370, offset: 8B], tmp909
 13330              	.LBE621:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13331              		.loc 1 263 41 is_stmt 1 view .LVU4601
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13332              		.loc 1 263 24 view .LVU4602
 13333              	.LBB622:
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13334              		.loc 1 264 9 view .LVU4603
 265:sieve_extend.c **** 
 13335              		.loc 1 265 8 view .LVU4604
 13336              	# sieve_extend.c:264:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 264:sieve_extend.c ****        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (total
 13337              		.loc 1 264 20 is_stmt 0 view .LVU4605
 13338 4b38 4889F0   		mov	rax, rsi	# tmp913, ivtmp.614
 13339 4b3b 48F7F7   		div	rdi	# step
 13340 4b3e 4C01CE   		add	rsi, r9	# ivtmp.614, pattern_shift
 13341              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13342              		.loc 1 265 91 view .LVU4606
 13343 4b41 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp914, pattern, totalshift
 13343      C1
 13344              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13345              		.loc 1 265 37 view .LVU4607
 13346 4b46 490B00   		or	rax, QWORD PTR [r8]	# tmp915, MEM[base: _1370, offset: 8B]
 13347              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13348              		.loc 1 265 66 view .LVU4608
 13349 4b49 4129D3   		sub	r11d, edx	# tmp916, totalshift
 13350              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13351              		.loc 1 265 50 view .LVU4609
 13352 4b4c C4E2A3F7 		shrx	rdx, rcx, r11	# tmp917, pattern, tmp916
 13352      D1
 13353              	# sieve_extend.c:265:        bitarray[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)
 265:sieve_extend.c **** 
 13354              		.loc 1 265 37 view .LVU4610
 13355 4b51 4809D0   		or	rax, rdx	# tmp918, tmp917
 13356 4b54 498900   		mov	QWORD PTR [r8], rax	# MEM[base: _1370, offset: 8B], tmp918
 13357              	.LBE622:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
GAS LISTING /tmp/ccgH0yRS.s 			page 361


 13358              		.loc 1 263 41 is_stmt 1 view .LVU4611
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13359              		.loc 1 263 24 view .LVU4612
 13360              	# sieve_extend.c:263:    for (counter_t i=1; i <= loop_range; i++) {
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13361              		.loc 1 263 4 is_stmt 0 view .LVU4613
 13362 4b57 4D39C6   		cmp	r14, r8	# _1365, ivtmp.616
 13363 4b5a 0F855DFF 		jne	.L943	#,
 13363      FFFF
 13364              	.L944:
 263:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 13365              		.loc 1 263 4 view .LVU4614
 13366              	.LBE615:
 269:sieve_extend.c **** 
 13367              		.loc 1 269 4 is_stmt 1 view .LVU4615
 13368              	# sieve_extend.c:269:    bitarray[range_stop_word] &= chopmask(range_stop);
 269:sieve_extend.c **** 
 13369              		.loc 1 269 30 is_stmt 0 view .LVU4616
 13370 4b60 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# _499, %sfp
 13370      08
 13371              	.LVL717:
 269:sieve_extend.c **** 
 13372              		.loc 1 269 30 view .LVU4617
 13373 4b65 48217D00 		and	QWORD PTR 0[rbp], rdi	# *_494, _499
 13374              	.LVL718:
 13375              	.L941:
 269:sieve_extend.c **** 
 13376              		.loc 1 269 30 view .LVU4618
 13377              	.LBE625:
 13378              	.LBE630:
 901:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 13379              		.loc 1 901 9 is_stmt 1 view .LVU4619
 13380              	.LBB631:
 13381              	.LBI631:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 13382              		.loc 1 122 25 view .LVU4620
 13383              	.LBB632:
 123:sieve_extend.c ****     return index;
 13384              		.loc 1 123 5 view .LVU4621
 123:sieve_extend.c ****     return index;
 13385              		.loc 1 123 11 view .LVU4622
 13386              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13387              		.loc 1 123 21 is_stmt 0 view .LVU4623
 13388 4b69 4C89D1   		mov	rcx, r10	# tmp691, _303
 13389 4b6c 48C1E906 		shr	rcx, 6	# tmp691,
 13390              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13391              		.loc 1 123 12 view .LVU4624
 13392 4b70 4C8B2CCB 		mov	r13, QWORD PTR [rbx+rcx*8]	# *_331, *_331
 13393              	.LBE632:
 13394              	.LBE631:
 13395              	# sieve_extend.c:899:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 899:sieve_extend.c ****         setBitsTrue_smallStep(bitarray, start, (bitshift_t)step, block_stop);
 13396              		.loc 1 899 12 view .LVU4625
 13397 4b74 4C89D1   		mov	rcx, r10	# index, _303
 13398              	.LBB634:
GAS LISTING /tmp/ccgH0yRS.s 			page 362


 13399              	.LBB633:
 13400              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13401              		.loc 1 123 11 view .LVU4626
 13402 4b77 4D0FA3D5 		bt	r13, r10	# *_331, _303
 13403 4b7b 0F83BF00 		jnc	.L945	#,
 13403      0000
 13404              	.LVL719:
 13405              	.L946:
 123:sieve_extend.c ****     return index;
 13406              		.loc 1 123 58 is_stmt 1 view .LVU4627
 13407              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13408              		.loc 1 123 63 is_stmt 0 view .LVU4628
 13409 4b81 4C8D5101 		lea	r10, 1[rcx]	# tmp841,
 13410              	.LVL720:
 13411              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13412              		.loc 1 123 21 view .LVU4629
 13413 4b85 4D89D1   		mov	r9, r10	# tmp696, index
 13414              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13415              		.loc 1 123 63 view .LVU4630
 13416 4b88 4C89D1   		mov	rcx, r10	# index, tmp841
 123:sieve_extend.c ****     return index;
 13417              		.loc 1 123 11 is_stmt 1 view .LVU4631
 13418              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13419              		.loc 1 123 21 is_stmt 0 view .LVU4632
 13420 4b8b 49C1E906 		shr	r9, 6	# tmp696,
 13421              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13422              		.loc 1 123 12 view .LVU4633
 13423 4b8f 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_316, *_316
 13424              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13425              		.loc 1 123 11 view .LVU4634
 13426 4b93 4C0FA3D6 		bt	rsi, r10	# *_316, index
 13427 4b97 0F83A300 		jnc	.L945	#,
 13427      0000
 123:sieve_extend.c ****     return index;
 13428              		.loc 1 123 58 is_stmt 1 view .LVU4635
 13429              	.LVL721:
 13430              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13431              		.loc 1 123 63 is_stmt 0 view .LVU4636
 13432 4b9d 4883C101 		add	rcx, 1	# index,
 13433              	.LVL722:
 123:sieve_extend.c ****     return index;
 13434              		.loc 1 123 11 is_stmt 1 view .LVU4637
 13435              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13436              		.loc 1 123 21 is_stmt 0 view .LVU4638
 13437 4ba1 4989C8   		mov	r8, rcx	# tmp1056, index
 13438 4ba4 49C1E806 		shr	r8, 6	# tmp1056,
 13439              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccgH0yRS.s 			page 363


 13440              		.loc 1 123 12 view .LVU4639
 13441 4ba8 4A8B04C3 		mov	rax, QWORD PTR [rbx+r8*8]	# *_316, *_316
 13442              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13443              		.loc 1 123 11 view .LVU4640
 13444 4bac 480FA3C8 		bt	rax, rcx	# *_316, index
 13445 4bb0 0F838A00 		jnc	.L945	#,
 13445      0000
 123:sieve_extend.c ****     return index;
 13446              		.loc 1 123 58 is_stmt 1 view .LVU4641
 13447              	.LVL723:
 13448              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13449              		.loc 1 123 63 is_stmt 0 view .LVU4642
 13450 4bb6 498D4A02 		lea	rcx, 2[r10]	# index,
 13451              	.LVL724:
 123:sieve_extend.c ****     return index;
 13452              		.loc 1 123 11 is_stmt 1 view .LVU4643
 13453              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13454              		.loc 1 123 21 is_stmt 0 view .LVU4644
 13455 4bba 4989CB   		mov	r11, rcx	# tmp1060, index
 13456 4bbd 49C1EB06 		shr	r11, 6	# tmp1060,
 13457              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13458              		.loc 1 123 12 view .LVU4645
 13459 4bc1 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# *_316, *_316
 13460              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13461              		.loc 1 123 11 view .LVU4646
 13462 4bc5 480FA3CA 		bt	rdx, rcx	# *_316, index
 13463 4bc9 7375     		jnc	.L945	#,
 123:sieve_extend.c ****     return index;
 13464              		.loc 1 123 58 is_stmt 1 view .LVU4647
 13465              	.LVL725:
 13466              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13467              		.loc 1 123 63 is_stmt 0 view .LVU4648
 13468 4bcb 498D4A03 		lea	rcx, 3[r10]	# index,
 13469              	.LVL726:
 123:sieve_extend.c ****     return index;
 13470              		.loc 1 123 11 is_stmt 1 view .LVU4649
 13471              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13472              		.loc 1 123 21 is_stmt 0 view .LVU4650
 13473 4bcf 4889CF   		mov	rdi, rcx	# tmp1064, index
 13474 4bd2 48C1EF06 		shr	rdi, 6	# tmp1064,
 13475              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13476              		.loc 1 123 12 view .LVU4651
 13477 4bd6 4C8B2CFB 		mov	r13, QWORD PTR [rbx+rdi*8]	# *_316, *_316
 13478              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13479              		.loc 1 123 11 view .LVU4652
 13480 4bda 490FA3CD 		bt	r13, rcx	# *_316, index
 13481 4bde 7360     		jnc	.L945	#,
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccgH0yRS.s 			page 364


 13482              		.loc 1 123 58 is_stmt 1 view .LVU4653
 13483              	.LVL727:
 13484              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13485              		.loc 1 123 63 is_stmt 0 view .LVU4654
 13486 4be0 498D4A04 		lea	rcx, 4[r10]	# index,
 13487              	.LVL728:
 123:sieve_extend.c ****     return index;
 13488              		.loc 1 123 11 is_stmt 1 view .LVU4655
 13489              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13490              		.loc 1 123 21 is_stmt 0 view .LVU4656
 13491 4be4 4989C9   		mov	r9, rcx	# tmp1068, index
 13492 4be7 49C1E906 		shr	r9, 6	# tmp1068,
 13493              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13494              		.loc 1 123 12 view .LVU4657
 13495 4beb 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_316, *_316
 13496              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13497              		.loc 1 123 11 view .LVU4658
 13498 4bef 480FA3CE 		bt	rsi, rcx	# *_316, index
 13499 4bf3 734B     		jnc	.L945	#,
 123:sieve_extend.c ****     return index;
 13500              		.loc 1 123 58 is_stmt 1 view .LVU4659
 13501              	.LVL729:
 13502              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13503              		.loc 1 123 63 is_stmt 0 view .LVU4660
 13504 4bf5 498D4A05 		lea	rcx, 5[r10]	# index,
 13505              	.LVL730:
 123:sieve_extend.c ****     return index;
 13506              		.loc 1 123 11 is_stmt 1 view .LVU4661
 13507              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13508              		.loc 1 123 21 is_stmt 0 view .LVU4662
 13509 4bf9 4989C8   		mov	r8, rcx	# tmp1072, index
 13510 4bfc 49C1E806 		shr	r8, 6	# tmp1072,
 13511              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13512              		.loc 1 123 12 view .LVU4663
 13513 4c00 4A8B04C3 		mov	rax, QWORD PTR [rbx+r8*8]	# *_316, *_316
 13514              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13515              		.loc 1 123 11 view .LVU4664
 13516 4c04 480FA3C8 		bt	rax, rcx	# *_316, index
 13517 4c08 7336     		jnc	.L945	#,
 123:sieve_extend.c ****     return index;
 13518              		.loc 1 123 58 is_stmt 1 view .LVU4665
 13519              	.LVL731:
 13520              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13521              		.loc 1 123 63 is_stmt 0 view .LVU4666
 13522 4c0a 498D4A06 		lea	rcx, 6[r10]	# index,
 13523              	.LVL732:
 123:sieve_extend.c ****     return index;
 13524              		.loc 1 123 11 is_stmt 1 view .LVU4667
GAS LISTING /tmp/ccgH0yRS.s 			page 365


 13525              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13526              		.loc 1 123 21 is_stmt 0 view .LVU4668
 13527 4c0e 4989CB   		mov	r11, rcx	# tmp1076, index
 13528 4c11 49C1EB06 		shr	r11, 6	# tmp1076,
 13529              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13530              		.loc 1 123 12 view .LVU4669
 13531 4c15 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# *_316, *_316
 13532              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13533              		.loc 1 123 11 view .LVU4670
 13534 4c19 480FA3CA 		bt	rdx, rcx	# *_316, index
 13535 4c1d 7321     		jnc	.L945	#,
 123:sieve_extend.c ****     return index;
 13536              		.loc 1 123 58 is_stmt 1 view .LVU4671
 13537              	.LVL733:
 13538              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13539              		.loc 1 123 63 is_stmt 0 view .LVU4672
 13540 4c1f 498D4A07 		lea	rcx, 7[r10]	# index,
 13541              	.LVL734:
 123:sieve_extend.c ****     return index;
 13542              		.loc 1 123 11 is_stmt 1 view .LVU4673
 13543              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13544              		.loc 1 123 21 is_stmt 0 view .LVU4674
 13545 4c23 4989CA   		mov	r10, rcx	# tmp1080, index
 13546 4c26 49C1EA06 		shr	r10, 6	# tmp1080,
 13547              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13548              		.loc 1 123 12 view .LVU4675
 13549 4c2a 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_316, *_316
 13550              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 13551              		.loc 1 123 11 view .LVU4676
 13552 4c2e 480FA3CF 		bt	rdi, rcx	# *_316, index
 13553 4c32 0F8249FF 		jc	.L946	#,
 13553      FFFF
 13554              	.LVL735:
 13555 4c38 0F1F8400 		.p2align 4
 13555      00000000 
 13556              		.p2align 3
 13557              	.L945:
 124:sieve_extend.c **** }
 13558              		.loc 1 124 5 is_stmt 1 view .LVU4677
 124:sieve_extend.c **** }
 13559              		.loc 1 124 5 is_stmt 0 view .LVU4678
 13560              	.LBE633:
 13561              	.LBE634:
 902:sieve_extend.c ****     }
 13562              		.loc 1 902 9 is_stmt 1 view .LVU4679
 13563              	# sieve_extend.c:902:         start = prime * prime * 2 + prime * 2;
 902:sieve_extend.c ****     }
 13564              		.loc 1 902 35 is_stmt 0 view .LVU4680
 13565 4c40 488D7101 		lea	rsi, 1[rcx]	# _411,
 13566              	# sieve_extend.c:902:         start = prime * prime * 2 + prime * 2;
GAS LISTING /tmp/ccgH0yRS.s 			page 366


 902:sieve_extend.c ****     }
 13567              		.loc 1 902 15 view .LVU4681
 13568 4c44 480FAFF1 		imul	rsi, rcx	# tmp702, index
 13569              	.LVL736:
 902:sieve_extend.c ****     }
 13570              		.loc 1 902 15 view .LVU4682
 13571 4c48 4801F6   		add	rsi, rsi	# index
 13572              	.LVL737:
 896:sieve_extend.c ****         step  = prime * 2 + 1;
 13573              		.loc 1 896 11 is_stmt 1 view .LVU4683
 13574 4c4b 4939F4   		cmp	r12, rsi	# block_stop, index
 13575 4c4e 0F836CFC 		jnb	.L947	#,
 13575      FFFF
 13576              	.LVL738:
 13577              	.L1487:
 896:sieve_extend.c ****         step  = prime * 2 + 1;
 13578              		.loc 1 896 11 is_stmt 0 view .LVU4684
 13579 4c54 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 13579      30
 13580              	.LVL739:
 896:sieve_extend.c ****         step  = prime * 2 + 1;
 13581              		.loc 1 896 11 view .LVU4685
 13582 4c59 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_92->bits
 13583              	.L936:
 13584              	.LVL740:
 896:sieve_extend.c ****         step  = prime * 2 + 1;
 13585              		.loc 1 896 11 view .LVU4686
 13586              	.LBE698:
 13587              	.LBE709:
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13588              		.loc 1 1021 91 is_stmt 1 view .LVU4687
 13589              	# sieve_extend.c:1021:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13590              		.loc 1 1021 103 is_stmt 0 view .LVU4688
 13591 4c5d 488B6C24 		mov	rbp, QWORD PTR 64[rsp]	# blocksize, %sfp
 13591      40
 13592 4c62 4901EF   		add	r15, rbp	# block_start, blocksize
 13593              	.LVL741:
 13594              	# sieve_extend.c:1021:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13595              		.loc 1 1021 128 view .LVU4689
 13596 4c65 4901EC   		add	r12, rbp	# block_stop, blocksize
 13597              	.LVL742:
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13598              		.loc 1 1021 63 is_stmt 1 view .LVU4690
 13599              	# sieve_extend.c:1021:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <=
1021:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 13600              		.loc 1 1021 5 is_stmt 0 view .LVU4691
 13601 4c68 4C39FA   		cmp	rdx, r15	# _8, block_start
 13602 4c6b 0F838FF9 		jnb	.L932	#,
 13602      FFFF
 13603              	.LBE713:
 13604              	# sieve_extend.c:1028: }
1028:sieve_extend.c **** 
 13605              		.loc 1 1028 1 view .LVU4692
 13606 4c71 488B4424 		mov	rax, QWORD PTR 48[rsp]	#, %sfp
 13606      30
GAS LISTING /tmp/ccgH0yRS.s 			page 367


 13607 4c76 488D6424 		lea	rsp, 104[rsp]	#,
 13607      68
 13608              		.cfi_remember_state
 13609              		.cfi_def_cfa_offset 56
 13610 4c7b 5B       		pop	rbx	#
 13611              		.cfi_def_cfa_offset 48
 13612 4c7c 5D       		pop	rbp	#
 13613              		.cfi_def_cfa_offset 40
 13614 4c7d 415C     		pop	r12	#
 13615              		.cfi_def_cfa_offset 32
 13616              	.LVL743:
1028:sieve_extend.c **** 
 13617              		.loc 1 1028 1 view .LVU4693
 13618 4c7f 415D     		pop	r13	#
 13619              		.cfi_def_cfa_offset 24
 13620 4c81 415E     		pop	r14	#
 13621              		.cfi_def_cfa_offset 16
 13622 4c83 415F     		pop	r15	#
 13623              		.cfi_def_cfa_offset 8
 13624              	.LVL744:
1028:sieve_extend.c **** 
 13625              		.loc 1 1028 1 view .LVU4694
 13626 4c85 C3       		ret	
 13627              	.LVL745:
 13628              		.p2align 4,,7
 13629 4c86 6690     		.p2align 3
 13630              	.L1505:
 13631              		.cfi_restore_state
 13632              	.LBB714:
 13633              	.LBB710:
 13634              	.LBB699:
 13635              	.LBB635:
 13636              	.LBB626:
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13637              		.loc 1 248 8 is_stmt 1 view .LVU4695
 13638              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13639              		.loc 1 248 73 is_stmt 0 view .LVU4696
 13640 4c88 4C234C24 		and	r9, QWORD PTR 8[rsp]	# tmp671, %sfp
 13640      08
 13641              	# sieve_extend.c:248:        bitarray[range_start_word] |= (pattern << bitindex(range_start)) & cho
 248:sieve_extend.c ****         //  debug if (step==13) { printf("After\n"); dump_bitarray(bitarray,10); }
 13642              		.loc 1 248 35 view .LVU4697
 13643 4c8d 4D09E9   		or	r9, r13	# tmp672, pretmp_1282
 13644 4c90 4D890B   		mov	QWORD PTR [r11], r9	# *_1281, tmp672
 250:sieve_extend.c ****     }
 13645              		.loc 1 250 8 is_stmt 1 view .LVU4698
 13646 4c93 E9D1FEFF 		jmp	.L941	#
 13646      FF
 13647              	.LVL746:
 13648              		.p2align 4,,7
 13649              		.p2align 3
 13650              	.L1504:
 250:sieve_extend.c ****     }
 13651              		.loc 1 250 8 is_stmt 0 view .LVU4699
 13652              	.LBE626:
 13653              	.LBE635:
GAS LISTING /tmp/ccgH0yRS.s 			page 368


 905:sieve_extend.c ****         step  = prime * 2 + 1;
 13654              		.loc 1 905 11 is_stmt 1 view .LVU4700
 13655 4c98 4939F4   		cmp	r12, rsi	# block_stop, index
 13656 4c9b 72B7     		jb	.L1487	#,
 905:sieve_extend.c ****         step  = prime * 2 + 1;
 13657              		.loc 1 905 11 is_stmt 0 view .LVU4701
 13658 4c9d 4C897C24 		mov	QWORD PTR 24[rsp], r15	# %sfp, block_start
 13658      18
 13659              	.LBB636:
 13660              	.LBB637:
 13661              	.LBB638:
 13662              	.LBB639:
 13663              	.LBB640:
 13664              	.LBB641:
 13665              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 13666              		.loc 1 309 25 view .LVU4702
 13667 4ca2 41BA0100 		mov	r10d, 1	# tmp830,
 13667      0000
 13668              	.LVL747:
 13669 4ca8 0F1F8400 		.p2align 4
 13669      00000000 
 13670              		.p2align 3
 13671              	.L935:
 309:sieve_extend.c ****                 index += step;
 13672              		.loc 1 309 25 view .LVU4703
 13673              	.LBE641:
 13674              	.LBE640:
 13675              	.LBE639:
 13676              	.LBE638:
 13677              	.LBE637:
 13678              	.LBE636:
 906:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 13679              		.loc 1 906 9 is_stmt 1 view .LVU4704
 13680              	# sieve_extend.c:906:         step  = prime * 2 + 1;
 906:sieve_extend.c ****         if unlikely(step > MEDIUMSTEP_FASTER) break;
 13681              		.loc 1 906 15 is_stmt 0 view .LVU4705
 13682 4cb0 4C8D4409 		lea	r8, 1[rcx+rcx]	# step,
 13682      01
 13683              	.LVL748:
 907:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13684              		.loc 1 907 9 is_stmt 1 view .LVU4706
 13685              	# sieve_extend.c:907:         if unlikely(step > MEDIUMSTEP_FASTER) break;
 907:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 13686              		.loc 1 907 12 is_stmt 0 view .LVU4707
 13687 4cb5 4C3B0500 		cmp	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 13687      000000
 13688 4cbc 0F87D604 		ja	.L1506	#,
 13688      0000
 908:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13689              		.loc 1 908 9 is_stmt 1 view .LVU4708
 13690              	# sieve_extend.c:908:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 908:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13691              		.loc 1 908 12 is_stmt 0 view .LVU4709
 13692 4cc2 488B4424 		mov	rax, QWORD PTR 24[rsp]	# block_start, %sfp
 13692      18
 13693 4cc7 4C8D6901 		lea	r13, 1[rcx]	# _333,
GAS LISTING /tmp/ccgH0yRS.s 			page 369


 13694 4ccb 4939C5   		cmp	r13, rax	# _333, block_start
 13695 4cce 770F     		ja	.L950	#,
 908:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13696              		.loc 1 908 47 is_stmt 1 view .LVU4710
 13697              	# sieve_extend.c:908:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 908:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13698              		.loc 1 908 67 is_stmt 0 view .LVU4711
 13699 4cd0 4801C8   		add	rax, rcx	# _337, index
 13700              	# sieve_extend.c:908:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 908:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13701              		.loc 1 908 108 view .LVU4712
 13702 4cd3 31D2     		xor	edx, edx	# tmp706
 13703              	# sieve_extend.c:908:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 908:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13704              		.loc 1 908 75 view .LVU4713
 13705 4cd5 488D3408 		lea	rsi, [rax+rcx]	# tmp704,
 13706              	.LVL749:
 13707              	# sieve_extend.c:908:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 908:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13708              		.loc 1 908 108 view .LVU4714
 13709 4cd9 49F7F0   		div	r8	# step
 13710              	.LVL750:
 13711              	# sieve_extend.c:908:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 908:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 13712              		.loc 1 908 53 view .LVU4715
 13713 4cdc 4829D6   		sub	rsi, rdx	# index, tmp706
 13714              	.LVL751:
 13715              	.L950:
 909:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 13716              		.loc 1 909 9 is_stmt 1 view .LVU4716
 13717              	.LBB658:
 13718              	.LBI636:
 297:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 13719              		.loc 1 297 14 view .LVU4717
 13720              	.LBB656:
 298:sieve_extend.c **** 
 13721              		.loc 1 298 5 view .LVU4718
 13722              	# sieve_extend.c:298:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 298:sieve_extend.c **** 
 13723              		.loc 1 298 74 is_stmt 0 view .LVU4719
 13724 4cdf 4D89C6   		mov	r14, r8	# tmp708, step
 13725 4ce2 4531FF   		xor	r15d, r15d	# _675
 13726 4ce5 49C1E606 		sal	r14, 6	# tmp708,
 13727 4ce9 4901F6   		add	r14, rsi	# tmp709, index
 13728 4cec 410F92C7 		setc	r15b	#, _675
 13729              	.LVL752:
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 13730              		.loc 1 300 5 is_stmt 1 view .LVU4720
 13731              	# sieve_extend.c:300:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 300:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 13732              		.loc 1 300 8 is_stmt 0 view .LVU4721
 13733 4cf0 4D39F4   		cmp	r12, r14	# block_stop, tmp709
 13734 4cf3 0F829F03 		jb	.L953	#,
 13734      0000
 13735              	.LVL753:
 13736              	.LBB645:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
GAS LISTING /tmp/ccgH0yRS.s 			page 370


 13737              		.loc 1 321 54 is_stmt 1 view .LVU4722
 13738              	# sieve_extend.c:321:         for (register counter_t index = range_start; index <= range_stop_uniq
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 13739              		.loc 1 321 9 is_stmt 0 view .LVU4723
 13740 4cf9 4D85FF   		test	r15, r15	# _675
 13741 4cfc 0F858002 		jne	.L957	#,
 13741      0000
 13742              	.LBB646:
 13743              	.LBB647:
 13744              	.LBB648:
 13745              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 13746              		.loc 1 177 133 view .LVU4724
 13747 4d02 488B7C24 		mov	rdi, QWORD PTR 16[rsp]	# range_stop_word, %sfp
 13747      10
 13748              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 13749              		.loc 1 177 110 view .LVU4725
 13750 4d07 4F8D0C80 		lea	r9, [r8+r8*4]	# tmp722,
 13751 4d0b 4D89C7   		mov	r15, r8	# _1391, step
 13752              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 13753              		.loc 1 183 17 view .LVU4726
 13754 4d0e 4A8D0CC5 		lea	rcx, 0[0+r8*8]	# _543,
 13754      00000000 
 13755              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 13756              		.loc 1 177 133 view .LVU4727
 13757 4d16 4989FB   		mov	r11, rdi	# tmp724, range_stop_word
 13758 4d19 4D29CB   		sub	r11, r9	# tmp724, tmp722
 13759 4d1c 4C39CF   		cmp	rdi, r9	# range_stop_word, tmp722
 13760 4d1f 4E8D1CDB 		lea	r11, [rbx+r11*8]	# tmp726,
 13761 4d23 4C0F46DB 		cmovbe	r11, rbx	# _30,, fast_loop_ptr
 13762 4d27 49C1E103 		sal	r9, 3	# tmp730,
 13763 4d2b 49C1E704 		sal	r15, 4	# _1391,
 13764              	.LVL754:
 13765 4d2f 90       		.p2align 4
 13766              		.p2align 3
 13767              	.L966:
 177:sieve_extend.c **** 
 13768              		.loc 1 177 133 view .LVU4728
 13769              	.LBE648:
 13770              	.LBE647:
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13771              		.loc 1 322 13 is_stmt 1 view .LVU4729
 13772              	# sieve_extend.c:322:             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13773              		.loc 1 322 32 is_stmt 0 view .LVU4730
 13774 4d30 4889F0   		mov	rax, rsi	# index_word, index
 13775              	# sieve_extend.c:323:             register bitword_t mask = SAFE_ZERO;
 323:sieve_extend.c ****             #pragma ivdep
 13776              		.loc 1 323 32 view .LVU4731
 13777 4d33 31D2     		xor	edx, edx	# mask
 13778              	# sieve_extend.c:322:             register counter_t index_word = wordindex(index);
 322:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 13779              		.loc 1 322 32 view .LVU4732
 13780 4d35 48C1E806 		shr	rax, 6	# index_word,
GAS LISTING /tmp/ccgH0yRS.s 			page 371


 13781              	.LVL755:
 323:sieve_extend.c ****             #pragma ivdep
 13782              		.loc 1 323 13 is_stmt 1 view .LVU4733
 13783              	.L960:
 325:sieve_extend.c ****                 mask |= markmask(index);
 13784              		.loc 1 325 13 view .LVU4734
 326:sieve_extend.c ****                 index += step;
 13785              		.loc 1 326 17 view .LVU4735
 13786              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13787              		.loc 1 326 25 is_stmt 0 view .LVU4736
 13788 4d39 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp732, tmp830, index
 13788      FA
 13789              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13790              		.loc 1 327 23 view .LVU4737
 13791 4d3e 4C01C6   		add	rsi, r8	# index, step
 13792              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13793              		.loc 1 326 22 view .LVU4738
 13794 4d41 4809FA   		or	rdx, rdi	# mask, tmp732
 13795              	.LVL756:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13796              		.loc 1 327 17 is_stmt 1 view .LVU4739
 328:sieve_extend.c ****             // #pragma ivdep
 13797              		.loc 1 328 21 view .LVU4740
 13798              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13799              		.loc 1 328 36 is_stmt 0 view .LVU4741
 13800 4d44 4889F7   		mov	rdi, rsi	# tmp734, index
 13801 4d47 48C1EF06 		shr	rdi, 6	# tmp734,
 13802              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13803              		.loc 1 328 13 view .LVU4742
 13804 4d4b 4839F8   		cmp	rax, rdi	# index_word, tmp734
 13805 4d4e 0F85AC00 		jne	.L1354	#,
 13805      0000
 325:sieve_extend.c ****                 mask |= markmask(index);
 13806              		.loc 1 325 13 is_stmt 1 view .LVU4743
 326:sieve_extend.c ****                 index += step;
 13807              		.loc 1 326 17 view .LVU4744
 13808              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13809              		.loc 1 326 25 is_stmt 0 view .LVU4745
 13810 4d54 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1042, tmp830, index
 13810      FA
 13811              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13812              		.loc 1 327 23 view .LVU4746
 13813 4d59 4C01C6   		add	rsi, r8	# index, step
 13814              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13815              		.loc 1 326 22 view .LVU4747
 13816 4d5c 4809FA   		or	rdx, rdi	# mask, tmp1042
 13817              	.LVL757:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13818              		.loc 1 327 17 is_stmt 1 view .LVU4748
GAS LISTING /tmp/ccgH0yRS.s 			page 372


 328:sieve_extend.c ****             // #pragma ivdep
 13819              		.loc 1 328 21 view .LVU4749
 13820              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13821              		.loc 1 328 36 is_stmt 0 view .LVU4750
 13822 4d5f 4889F7   		mov	rdi, rsi	# tmp1043, index
 13823 4d62 48C1EF06 		shr	rdi, 6	# tmp1043,
 13824              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13825              		.loc 1 328 13 view .LVU4751
 13826 4d66 4839F8   		cmp	rax, rdi	# index_word, tmp1043
 13827 4d69 0F859100 		jne	.L1354	#,
 13827      0000
 325:sieve_extend.c ****                 mask |= markmask(index);
 13828              		.loc 1 325 13 is_stmt 1 view .LVU4752
 326:sieve_extend.c ****                 index += step;
 13829              		.loc 1 326 17 view .LVU4753
 13830              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13831              		.loc 1 326 25 is_stmt 0 view .LVU4754
 13832 4d6f C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1044, tmp830, index
 13832      FA
 13833              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13834              		.loc 1 327 23 view .LVU4755
 13835 4d74 4C01C6   		add	rsi, r8	# index, step
 13836              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13837              		.loc 1 326 22 view .LVU4756
 13838 4d77 4809FA   		or	rdx, rdi	# mask, tmp1044
 13839              	.LVL758:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13840              		.loc 1 327 17 is_stmt 1 view .LVU4757
 328:sieve_extend.c ****             // #pragma ivdep
 13841              		.loc 1 328 21 view .LVU4758
 13842              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13843              		.loc 1 328 36 is_stmt 0 view .LVU4759
 13844 4d7a 4889F7   		mov	rdi, rsi	# tmp1045, index
 13845 4d7d 48C1EF06 		shr	rdi, 6	# tmp1045,
 13846              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13847              		.loc 1 328 13 view .LVU4760
 13848 4d81 4839F8   		cmp	rax, rdi	# index_word, tmp1045
 13849 4d84 757A     		jne	.L1354	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 13850              		.loc 1 325 13 is_stmt 1 view .LVU4761
 326:sieve_extend.c ****                 index += step;
 13851              		.loc 1 326 17 view .LVU4762
 13852              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13853              		.loc 1 326 25 is_stmt 0 view .LVU4763
 13854 4d86 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1046, tmp830, index
 13854      FA
 13855              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13856              		.loc 1 327 23 view .LVU4764
GAS LISTING /tmp/ccgH0yRS.s 			page 373


 13857 4d8b 4C01C6   		add	rsi, r8	# index, step
 13858              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13859              		.loc 1 326 22 view .LVU4765
 13860 4d8e 4809FA   		or	rdx, rdi	# mask, tmp1046
 13861              	.LVL759:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13862              		.loc 1 327 17 is_stmt 1 view .LVU4766
 328:sieve_extend.c ****             // #pragma ivdep
 13863              		.loc 1 328 21 view .LVU4767
 13864              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13865              		.loc 1 328 36 is_stmt 0 view .LVU4768
 13866 4d91 4889F7   		mov	rdi, rsi	# tmp1047, index
 13867 4d94 48C1EF06 		shr	rdi, 6	# tmp1047,
 13868              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13869              		.loc 1 328 13 view .LVU4769
 13870 4d98 4839F8   		cmp	rax, rdi	# index_word, tmp1047
 13871 4d9b 7563     		jne	.L1354	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 13872              		.loc 1 325 13 is_stmt 1 view .LVU4770
 326:sieve_extend.c ****                 index += step;
 13873              		.loc 1 326 17 view .LVU4771
 13874              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13875              		.loc 1 326 25 is_stmt 0 view .LVU4772
 13876 4d9d C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1048, tmp830, index
 13876      FA
 13877              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13878              		.loc 1 327 23 view .LVU4773
 13879 4da2 4C01C6   		add	rsi, r8	# index, step
 13880              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13881              		.loc 1 326 22 view .LVU4774
 13882 4da5 4809FA   		or	rdx, rdi	# mask, tmp1048
 13883              	.LVL760:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13884              		.loc 1 327 17 is_stmt 1 view .LVU4775
 328:sieve_extend.c ****             // #pragma ivdep
 13885              		.loc 1 328 21 view .LVU4776
 13886              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13887              		.loc 1 328 36 is_stmt 0 view .LVU4777
 13888 4da8 4889F7   		mov	rdi, rsi	# tmp1049, index
 13889 4dab 48C1EF06 		shr	rdi, 6	# tmp1049,
 13890              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13891              		.loc 1 328 13 view .LVU4778
 13892 4daf 4839F8   		cmp	rax, rdi	# index_word, tmp1049
 13893 4db2 754C     		jne	.L1354	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 13894              		.loc 1 325 13 is_stmt 1 view .LVU4779
 326:sieve_extend.c ****                 index += step;
 13895              		.loc 1 326 17 view .LVU4780
 13896              	# sieve_extend.c:326:                 mask |= markmask(index);
GAS LISTING /tmp/ccgH0yRS.s 			page 374


 326:sieve_extend.c ****                 index += step;
 13897              		.loc 1 326 25 is_stmt 0 view .LVU4781
 13898 4db4 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1050, tmp830, index
 13898      FA
 13899              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13900              		.loc 1 327 23 view .LVU4782
 13901 4db9 4C01C6   		add	rsi, r8	# index, step
 13902              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13903              		.loc 1 326 22 view .LVU4783
 13904 4dbc 4809FA   		or	rdx, rdi	# mask, tmp1050
 13905              	.LVL761:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13906              		.loc 1 327 17 is_stmt 1 view .LVU4784
 328:sieve_extend.c ****             // #pragma ivdep
 13907              		.loc 1 328 21 view .LVU4785
 13908              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13909              		.loc 1 328 36 is_stmt 0 view .LVU4786
 13910 4dbf 4889F7   		mov	rdi, rsi	# tmp1051, index
 13911 4dc2 48C1EF06 		shr	rdi, 6	# tmp1051,
 13912              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13913              		.loc 1 328 13 view .LVU4787
 13914 4dc6 4839F8   		cmp	rax, rdi	# index_word, tmp1051
 13915 4dc9 7535     		jne	.L1354	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 13916              		.loc 1 325 13 is_stmt 1 view .LVU4788
 326:sieve_extend.c ****                 index += step;
 13917              		.loc 1 326 17 view .LVU4789
 13918              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13919              		.loc 1 326 25 is_stmt 0 view .LVU4790
 13920 4dcb C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1052, tmp830, index
 13920      FA
 13921              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13922              		.loc 1 327 23 view .LVU4791
 13923 4dd0 4C01C6   		add	rsi, r8	# index, step
 13924              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13925              		.loc 1 326 22 view .LVU4792
 13926 4dd3 4809FA   		or	rdx, rdi	# mask, tmp1052
 13927              	.LVL762:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13928              		.loc 1 327 17 is_stmt 1 view .LVU4793
 328:sieve_extend.c ****             // #pragma ivdep
 13929              		.loc 1 328 21 view .LVU4794
 13930              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13931              		.loc 1 328 36 is_stmt 0 view .LVU4795
 13932 4dd6 4889F7   		mov	rdi, rsi	# tmp1053, index
 13933 4dd9 48C1EF06 		shr	rdi, 6	# tmp1053,
 13934              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13935              		.loc 1 328 13 view .LVU4796
GAS LISTING /tmp/ccgH0yRS.s 			page 375


 13936 4ddd 4839F8   		cmp	rax, rdi	# index_word, tmp1053
 13937 4de0 751E     		jne	.L1354	#,
 325:sieve_extend.c ****                 mask |= markmask(index);
 13938              		.loc 1 325 13 is_stmt 1 view .LVU4797
 326:sieve_extend.c ****                 index += step;
 13939              		.loc 1 326 17 view .LVU4798
 13940              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13941              		.loc 1 326 25 is_stmt 0 view .LVU4799
 13942 4de2 C4C2C9F7 		shlx	rdi, r10, rsi	# tmp1054, tmp830, index
 13942      FA
 13943              	# sieve_extend.c:327:                 index += step;
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13944              		.loc 1 327 23 view .LVU4800
 13945 4de7 4C01C6   		add	rsi, r8	# index, step
 13946              	# sieve_extend.c:326:                 mask |= markmask(index);
 326:sieve_extend.c ****                 index += step;
 13947              		.loc 1 326 22 view .LVU4801
 13948 4dea 4809FA   		or	rdx, rdi	# mask, tmp1054
 13949              	.LVL763:
 327:sieve_extend.c ****             } while (index_word == wordindex(index));
 13950              		.loc 1 327 17 is_stmt 1 view .LVU4802
 328:sieve_extend.c ****             // #pragma ivdep
 13951              		.loc 1 328 21 view .LVU4803
 13952              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13953              		.loc 1 328 36 is_stmt 0 view .LVU4804
 13954 4ded 4889F7   		mov	rdi, rsi	# tmp1055, index
 13955 4df0 48C1EF06 		shr	rdi, 6	# tmp1055,
 13956              	# sieve_extend.c:328:             } while (index_word == wordindex(index));
 328:sieve_extend.c ****             // #pragma ivdep
 13957              		.loc 1 328 13 view .LVU4805
 13958 4df4 4839F8   		cmp	rax, rdi	# index_word, tmp1055
 13959 4df7 0F843CFF 		je	.L960	#,
 13959      FFFF
 13960 4dfd 0F1F00   		.p2align 4
 13961              		.p2align 3
 13962              	.L1354:
 332:sieve_extend.c ****         }
 13963              		.loc 1 332 13 is_stmt 1 view .LVU4806
 13964              	.LVL764:
 13965              	.LBB651:
 13966              	.LBI647:
 147:sieve_extend.c **** //#if __APPLE__
 13967              		.loc 1 147 20 view .LVU4807
 13968              	.LBB649:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 13969              		.loc 1 175 4 view .LVU4808
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13970              		.loc 1 176 4 view .LVU4809
 13971              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 13972              		.loc 1 176 78 is_stmt 0 view .LVU4810
 13973 4e00 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 13974              	.LVL765:
 177:sieve_extend.c **** 
 13975              		.loc 1 177 4 is_stmt 1 view .LVU4811
GAS LISTING /tmp/ccgH0yRS.s 			page 376


 181:sieve_extend.c ****        *index_ptr |= mask;
 13976              		.loc 1 181 4 view .LVU4812
 181:sieve_extend.c ****        *index_ptr |= mask;
 13977              		.loc 1 181 10 view .LVU4813
 13978 4e04 4C39D8   		cmp	rax, r11	# index_ptr, fast_loop_ptr
 13979 4e07 0F830301 		jnb	.L961	#,
 13979      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 13980              		.loc 1 181 10 is_stmt 0 view .LVU4814
 13981 4e0d 4A8D3C38 		lea	rdi, [rax+r15]	# ivtmp.594,
 13982              	.L962:
 182:sieve_extend.c ****        index_ptr+=step;
 13983              		.loc 1 182 8 is_stmt 1 view .LVU4815
 13984              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 13985              		.loc 1 182 19 is_stmt 0 view .LVU4816
 13986 4e11 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 13987              		.loc 1 183 8 is_stmt 1 view .LVU4817
 13988              	.LVL766:
 184:sieve_extend.c ****        index_ptr+=step;
 13989              		.loc 1 184 8 view .LVU4818
 13990              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 13991              		.loc 1 184 19 is_stmt 0 view .LVU4819
 13992 4e14 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 13993              		.loc 1 185 8 is_stmt 1 view .LVU4820
 13994              	.LVL767:
 186:sieve_extend.c ****        index_ptr+=step;
 13995              		.loc 1 186 8 view .LVU4821
 13996              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 13997              		.loc 1 186 19 is_stmt 0 view .LVU4822
 13998 4e18 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 13999              		.loc 1 187 8 is_stmt 1 view .LVU4823
 14000              	.LVL768:
 188:sieve_extend.c ****        index_ptr+=step;
 14001              		.loc 1 188 8 view .LVU4824
 14002              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 14003              		.loc 1 188 19 is_stmt 0 view .LVU4825
 14004 4e1b 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 14005              		.loc 1 189 8 is_stmt 1 view .LVU4826
 14006              	.LVL769:
 190:sieve_extend.c ****        index_ptr+=step;
 14007              		.loc 1 190 8 view .LVU4827
 14008 4e1f 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14009              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 14010              		.loc 1 190 19 is_stmt 0 view .LVU4828
 14011 4e22 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 14012              		.loc 1 191 8 is_stmt 1 view .LVU4829
 14013 4e26 4C01C8   		add	rax, r9	# index_ptr, tmp730
GAS LISTING /tmp/ccgH0yRS.s 			page 377


 14014              	.LVL770:
 181:sieve_extend.c ****        *index_ptr |= mask;
 14015              		.loc 1 181 10 view .LVU4830
 14016 4e29 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14017 4e2c 0F86DE00 		jbe	.L961	#,
 14017      0000
 182:sieve_extend.c ****        index_ptr+=step;
 14018              		.loc 1 182 8 view .LVU4831
 14019              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 14020              		.loc 1 182 19 is_stmt 0 view .LVU4832
 14021 4e32 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 14022              		.loc 1 183 8 is_stmt 1 view .LVU4833
 14023              	.LVL771:
 184:sieve_extend.c ****        index_ptr+=step;
 14024              		.loc 1 184 8 view .LVU4834
 14025              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14026              		.loc 1 184 19 is_stmt 0 view .LVU4835
 14027 4e35 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 14028              		.loc 1 185 8 is_stmt 1 view .LVU4836
 14029              	.LVL772:
 186:sieve_extend.c ****        index_ptr+=step;
 14030              		.loc 1 186 8 view .LVU4837
 14031              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 14032              		.loc 1 186 19 is_stmt 0 view .LVU4838
 14033 4e39 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 14034              		.loc 1 187 8 is_stmt 1 view .LVU4839
 14035              	.LVL773:
 188:sieve_extend.c ****        index_ptr+=step;
 14036              		.loc 1 188 8 view .LVU4840
 14037              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 14038              		.loc 1 188 19 is_stmt 0 view .LVU4841
 14039 4e3c 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 14040              		.loc 1 189 8 is_stmt 1 view .LVU4842
 14041              	.LVL774:
 190:sieve_extend.c ****        index_ptr+=step;
 14042              		.loc 1 190 8 view .LVU4843
 14043 4e40 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14044              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 14045              		.loc 1 190 19 is_stmt 0 view .LVU4844
 14046 4e43 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 14047              		.loc 1 191 8 is_stmt 1 view .LVU4845
 14048 4e47 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14049              	.LVL775:
 181:sieve_extend.c ****        *index_ptr |= mask;
 14050              		.loc 1 181 10 view .LVU4846
 14051 4e4a 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14052 4e4d 0F86BD00 		jbe	.L961	#,
GAS LISTING /tmp/ccgH0yRS.s 			page 378


 14052      0000
 182:sieve_extend.c ****        index_ptr+=step;
 14053              		.loc 1 182 8 view .LVU4847
 14054              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 14055              		.loc 1 182 19 is_stmt 0 view .LVU4848
 14056 4e53 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 14057              		.loc 1 183 8 is_stmt 1 view .LVU4849
 14058              	.LVL776:
 184:sieve_extend.c ****        index_ptr+=step;
 14059              		.loc 1 184 8 view .LVU4850
 14060              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14061              		.loc 1 184 19 is_stmt 0 view .LVU4851
 14062 4e56 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 14063              		.loc 1 185 8 is_stmt 1 view .LVU4852
 14064              	.LVL777:
 186:sieve_extend.c ****        index_ptr+=step;
 14065              		.loc 1 186 8 view .LVU4853
 14066              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 14067              		.loc 1 186 19 is_stmt 0 view .LVU4854
 14068 4e5a 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 14069              		.loc 1 187 8 is_stmt 1 view .LVU4855
 14070              	.LVL778:
 188:sieve_extend.c ****        index_ptr+=step;
 14071              		.loc 1 188 8 view .LVU4856
 14072              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 14073              		.loc 1 188 19 is_stmt 0 view .LVU4857
 14074 4e5d 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 14075              		.loc 1 189 8 is_stmt 1 view .LVU4858
 14076              	.LVL779:
 190:sieve_extend.c ****        index_ptr+=step;
 14077              		.loc 1 190 8 view .LVU4859
 14078 4e61 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14079              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 14080              		.loc 1 190 19 is_stmt 0 view .LVU4860
 14081 4e64 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 14082              		.loc 1 191 8 is_stmt 1 view .LVU4861
 14083 4e68 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14084              	.LVL780:
 181:sieve_extend.c ****        *index_ptr |= mask;
 14085              		.loc 1 181 10 view .LVU4862
 14086 4e6b 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14087 4e6e 0F869C00 		jbe	.L961	#,
 14087      0000
 182:sieve_extend.c ****        index_ptr+=step;
 14088              		.loc 1 182 8 view .LVU4863
 14089              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccgH0yRS.s 			page 379


 14090              		.loc 1 182 19 is_stmt 0 view .LVU4864
 14091 4e74 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 14092              		.loc 1 183 8 is_stmt 1 view .LVU4865
 14093              	.LVL781:
 184:sieve_extend.c ****        index_ptr+=step;
 14094              		.loc 1 184 8 view .LVU4866
 14095              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14096              		.loc 1 184 19 is_stmt 0 view .LVU4867
 14097 4e77 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 14098              		.loc 1 185 8 is_stmt 1 view .LVU4868
 14099              	.LVL782:
 186:sieve_extend.c ****        index_ptr+=step;
 14100              		.loc 1 186 8 view .LVU4869
 14101              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 14102              		.loc 1 186 19 is_stmt 0 view .LVU4870
 14103 4e7b 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 14104              		.loc 1 187 8 is_stmt 1 view .LVU4871
 14105              	.LVL783:
 188:sieve_extend.c ****        index_ptr+=step;
 14106              		.loc 1 188 8 view .LVU4872
 14107              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 14108              		.loc 1 188 19 is_stmt 0 view .LVU4873
 14109 4e7e 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 14110              		.loc 1 189 8 is_stmt 1 view .LVU4874
 14111              	.LVL784:
 190:sieve_extend.c ****        index_ptr+=step;
 14112              		.loc 1 190 8 view .LVU4875
 14113 4e82 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14114              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 14115              		.loc 1 190 19 is_stmt 0 view .LVU4876
 14116 4e85 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 14117              		.loc 1 191 8 is_stmt 1 view .LVU4877
 14118 4e89 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14119              	.LVL785:
 181:sieve_extend.c ****        *index_ptr |= mask;
 14120              		.loc 1 181 10 view .LVU4878
 14121 4e8c 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14122 4e8f 767F     		jbe	.L961	#,
 182:sieve_extend.c ****        index_ptr+=step;
 14123              		.loc 1 182 8 view .LVU4879
 14124              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 14125              		.loc 1 182 19 is_stmt 0 view .LVU4880
 14126 4e91 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 14127              		.loc 1 183 8 is_stmt 1 view .LVU4881
 14128              	.LVL786:
 184:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccgH0yRS.s 			page 380


 14129              		.loc 1 184 8 view .LVU4882
 14130              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14131              		.loc 1 184 19 is_stmt 0 view .LVU4883
 14132 4e94 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 14133              		.loc 1 185 8 is_stmt 1 view .LVU4884
 14134              	.LVL787:
 186:sieve_extend.c ****        index_ptr+=step;
 14135              		.loc 1 186 8 view .LVU4885
 14136              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 14137              		.loc 1 186 19 is_stmt 0 view .LVU4886
 14138 4e98 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 14139              		.loc 1 187 8 is_stmt 1 view .LVU4887
 14140              	.LVL788:
 188:sieve_extend.c ****        index_ptr+=step;
 14141              		.loc 1 188 8 view .LVU4888
 14142              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 14143              		.loc 1 188 19 is_stmt 0 view .LVU4889
 14144 4e9b 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 14145              		.loc 1 189 8 is_stmt 1 view .LVU4890
 14146              	.LVL789:
 190:sieve_extend.c ****        index_ptr+=step;
 14147              		.loc 1 190 8 view .LVU4891
 14148 4e9f 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14149              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 14150              		.loc 1 190 19 is_stmt 0 view .LVU4892
 14151 4ea2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 14152              		.loc 1 191 8 is_stmt 1 view .LVU4893
 14153 4ea6 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14154              	.LVL790:
 181:sieve_extend.c ****        *index_ptr |= mask;
 14155              		.loc 1 181 10 view .LVU4894
 14156 4ea9 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14157 4eac 7662     		jbe	.L961	#,
 182:sieve_extend.c ****        index_ptr+=step;
 14158              		.loc 1 182 8 view .LVU4895
 14159              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 14160              		.loc 1 182 19 is_stmt 0 view .LVU4896
 14161 4eae 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 14162              		.loc 1 183 8 is_stmt 1 view .LVU4897
 14163              	.LVL791:
 184:sieve_extend.c ****        index_ptr+=step;
 14164              		.loc 1 184 8 view .LVU4898
 14165              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14166              		.loc 1 184 19 is_stmt 0 view .LVU4899
 14167 4eb1 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
GAS LISTING /tmp/ccgH0yRS.s 			page 381


 14168              		.loc 1 185 8 is_stmt 1 view .LVU4900
 14169              	.LVL792:
 186:sieve_extend.c ****        index_ptr+=step;
 14170              		.loc 1 186 8 view .LVU4901
 14171              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 14172              		.loc 1 186 19 is_stmt 0 view .LVU4902
 14173 4eb5 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 14174              		.loc 1 187 8 is_stmt 1 view .LVU4903
 14175              	.LVL793:
 188:sieve_extend.c ****        index_ptr+=step;
 14176              		.loc 1 188 8 view .LVU4904
 14177              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 14178              		.loc 1 188 19 is_stmt 0 view .LVU4905
 14179 4eb8 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 14180              		.loc 1 189 8 is_stmt 1 view .LVU4906
 14181              	.LVL794:
 190:sieve_extend.c ****        index_ptr+=step;
 14182              		.loc 1 190 8 view .LVU4907
 14183 4ebc 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14184              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 14185              		.loc 1 190 19 is_stmt 0 view .LVU4908
 14186 4ebf 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 14187              		.loc 1 191 8 is_stmt 1 view .LVU4909
 14188 4ec3 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14189              	.LVL795:
 181:sieve_extend.c ****        *index_ptr |= mask;
 14190              		.loc 1 181 10 view .LVU4910
 14191 4ec6 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14192 4ec9 7645     		jbe	.L961	#,
 182:sieve_extend.c ****        index_ptr+=step;
 14193              		.loc 1 182 8 view .LVU4911
 14194              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 14195              		.loc 1 182 19 is_stmt 0 view .LVU4912
 14196 4ecb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 14197              		.loc 1 183 8 is_stmt 1 view .LVU4913
 14198              	.LVL796:
 184:sieve_extend.c ****        index_ptr+=step;
 14199              		.loc 1 184 8 view .LVU4914
 14200              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14201              		.loc 1 184 19 is_stmt 0 view .LVU4915
 14202 4ece 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 14203              		.loc 1 185 8 is_stmt 1 view .LVU4916
 14204              	.LVL797:
 186:sieve_extend.c ****        index_ptr+=step;
 14205              		.loc 1 186 8 view .LVU4917
 14206              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccgH0yRS.s 			page 382


 14207              		.loc 1 186 19 is_stmt 0 view .LVU4918
 14208 4ed2 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 14209              		.loc 1 187 8 is_stmt 1 view .LVU4919
 14210              	.LVL798:
 188:sieve_extend.c ****        index_ptr+=step;
 14211              		.loc 1 188 8 view .LVU4920
 14212              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 14213              		.loc 1 188 19 is_stmt 0 view .LVU4921
 14214 4ed5 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 14215              		.loc 1 189 8 is_stmt 1 view .LVU4922
 14216              	.LVL799:
 190:sieve_extend.c ****        index_ptr+=step;
 14217              		.loc 1 190 8 view .LVU4923
 14218 4ed9 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14219              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 14220              		.loc 1 190 19 is_stmt 0 view .LVU4924
 14221 4edc 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 14222              		.loc 1 191 8 is_stmt 1 view .LVU4925
 14223 4ee0 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14224              	.LVL800:
 181:sieve_extend.c ****        *index_ptr |= mask;
 14225              		.loc 1 181 10 view .LVU4926
 14226 4ee3 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14227 4ee6 7628     		jbe	.L961	#,
 182:sieve_extend.c ****        index_ptr+=step;
 14228              		.loc 1 182 8 view .LVU4927
 14229              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 14230              		.loc 1 182 19 is_stmt 0 view .LVU4928
 14231 4ee8 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_865, offset: 0B], mask
 183:sieve_extend.c ****        *index_ptr |= mask;
 14232              		.loc 1 183 8 is_stmt 1 view .LVU4929
 14233              	.LVL801:
 184:sieve_extend.c ****        index_ptr+=step;
 14234              		.loc 1 184 8 view .LVU4930
 14235              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 14236              		.loc 1 184 19 is_stmt 0 view .LVU4931
 14237 4eeb 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_865, index: _543, offset: 0B], mask
 185:sieve_extend.c ****        *index_ptr |= mask;
 14238              		.loc 1 185 8 is_stmt 1 view .LVU4932
 14239              	.LVL802:
 186:sieve_extend.c ****        index_ptr+=step;
 14240              		.loc 1 186 8 view .LVU4933
 14241              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 14242              		.loc 1 186 19 is_stmt 0 view .LVU4934
 14243 4eef 480917   		or	QWORD PTR [rdi], rdx	# MEM[base: _1385, offset: 0B], mask
 187:sieve_extend.c ****        *index_ptr |= mask;
 14244              		.loc 1 187 8 is_stmt 1 view .LVU4935
 14245              	.LVL803:
 188:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccgH0yRS.s 			page 383


 14246              		.loc 1 188 8 view .LVU4936
 14247              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 14248              		.loc 1 188 19 is_stmt 0 view .LVU4937
 14249 4ef2 4809140F 		or	QWORD PTR [rdi+rcx], rdx	# MEM[base: _1385, index: _543, offset: 0B], mask
 189:sieve_extend.c ****        *index_ptr |= mask;
 14250              		.loc 1 189 8 is_stmt 1 view .LVU4938
 14251              	.LVL804:
 190:sieve_extend.c ****        index_ptr+=step;
 14252              		.loc 1 190 8 view .LVU4939
 14253 4ef6 4C01CF   		add	rdi, r9	# ivtmp.594, tmp730
 14254              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 14255              		.loc 1 190 19 is_stmt 0 view .LVU4940
 14256 4ef9 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_865, index: _543, step: 4, offset: 0B], mask
 191:sieve_extend.c ****    }
 14257              		.loc 1 191 8 is_stmt 1 view .LVU4941
 14258 4efd 4C01C8   		add	rax, r9	# index_ptr, tmp730
 14259              	.LVL805:
 181:sieve_extend.c ****        *index_ptr |= mask;
 14260              		.loc 1 181 10 view .LVU4942
 14261 4f00 4939C3   		cmp	r11, rax	# fast_loop_ptr, index_ptr
 14262 4f03 0F8708FF 		ja	.L962	#,
 14262      FFFF
 14263 4f09 0F1F8000 		.p2align 4
 14263      000000
 14264              		.p2align 3
 14265              	.L961:
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 14266              		.loc 1 194 4 view .LVU4943
 195:sieve_extend.c ****        *index_ptr |= mask;
 14267              		.loc 1 195 4 view .LVU4944
 195:sieve_extend.c ****        *index_ptr |= mask;
 14268              		.loc 1 195 10 view .LVU4945
 14269 4f10 4839E8   		cmp	rax, rbp	# index_ptr, _494
 14270 4f13 735B     		jnb	.L963	#,
 14271              	.L964:
 196:sieve_extend.c ****        index_ptr+=step;
 14272              		.loc 1 196 8 view .LVU4946
 14273              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14274              		.loc 1 196 19 is_stmt 0 view .LVU4947
 14275 4f15 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14276              		.loc 1 197 8 is_stmt 1 view .LVU4948
 14277              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14278              		.loc 1 197 17 is_stmt 0 view .LVU4949
 14279 4f18 4801C8   		add	rax, rcx	# index_ptr, _543
 14280              	.LVL806:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14281              		.loc 1 195 10 is_stmt 1 view .LVU4950
 14282 4f1b 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14283 4f1e 7650     		jbe	.L963	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14284              		.loc 1 196 8 view .LVU4951
 14285              	# sieve_extend.c:196:        *index_ptr |= mask;
GAS LISTING /tmp/ccgH0yRS.s 			page 384


 196:sieve_extend.c ****        index_ptr+=step;
 14286              		.loc 1 196 19 is_stmt 0 view .LVU4952
 14287 4f20 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14288              		.loc 1 197 8 is_stmt 1 view .LVU4953
 14289              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14290              		.loc 1 197 17 is_stmt 0 view .LVU4954
 14291 4f23 4801C8   		add	rax, rcx	# index_ptr, _543
 14292              	.LVL807:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14293              		.loc 1 195 10 is_stmt 1 view .LVU4955
 14294 4f26 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14295 4f29 7645     		jbe	.L963	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14296              		.loc 1 196 8 view .LVU4956
 14297              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14298              		.loc 1 196 19 is_stmt 0 view .LVU4957
 14299 4f2b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14300              		.loc 1 197 8 is_stmt 1 view .LVU4958
 14301              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14302              		.loc 1 197 17 is_stmt 0 view .LVU4959
 14303 4f2e 4801C8   		add	rax, rcx	# index_ptr, _543
 14304              	.LVL808:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14305              		.loc 1 195 10 is_stmt 1 view .LVU4960
 14306 4f31 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14307 4f34 763A     		jbe	.L963	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14308              		.loc 1 196 8 view .LVU4961
 14309              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14310              		.loc 1 196 19 is_stmt 0 view .LVU4962
 14311 4f36 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14312              		.loc 1 197 8 is_stmt 1 view .LVU4963
 14313              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14314              		.loc 1 197 17 is_stmt 0 view .LVU4964
 14315 4f39 4801C8   		add	rax, rcx	# index_ptr, _543
 14316              	.LVL809:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14317              		.loc 1 195 10 is_stmt 1 view .LVU4965
 14318 4f3c 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14319 4f3f 762F     		jbe	.L963	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14320              		.loc 1 196 8 view .LVU4966
 14321              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14322              		.loc 1 196 19 is_stmt 0 view .LVU4967
 14323 4f41 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14324              		.loc 1 197 8 is_stmt 1 view .LVU4968
 14325              	# sieve_extend.c:197:        index_ptr+=step;
GAS LISTING /tmp/ccgH0yRS.s 			page 385


 197:sieve_extend.c ****    }
 14326              		.loc 1 197 17 is_stmt 0 view .LVU4969
 14327 4f44 4801C8   		add	rax, rcx	# index_ptr, _543
 14328              	.LVL810:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14329              		.loc 1 195 10 is_stmt 1 view .LVU4970
 14330 4f47 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14331 4f4a 7624     		jbe	.L963	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14332              		.loc 1 196 8 view .LVU4971
 14333              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14334              		.loc 1 196 19 is_stmt 0 view .LVU4972
 14335 4f4c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14336              		.loc 1 197 8 is_stmt 1 view .LVU4973
 14337              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14338              		.loc 1 197 17 is_stmt 0 view .LVU4974
 14339 4f4f 4801C8   		add	rax, rcx	# index_ptr, _543
 14340              	.LVL811:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14341              		.loc 1 195 10 is_stmt 1 view .LVU4975
 14342 4f52 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14343 4f55 7619     		jbe	.L963	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14344              		.loc 1 196 8 view .LVU4976
 14345              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14346              		.loc 1 196 19 is_stmt 0 view .LVU4977
 14347 4f57 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14348              		.loc 1 197 8 is_stmt 1 view .LVU4978
 14349              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14350              		.loc 1 197 17 is_stmt 0 view .LVU4979
 14351 4f5a 4801C8   		add	rax, rcx	# index_ptr, _543
 14352              	.LVL812:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14353              		.loc 1 195 10 is_stmt 1 view .LVU4980
 14354 4f5d 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14355 4f60 760E     		jbe	.L963	#,
 196:sieve_extend.c ****        index_ptr+=step;
 14356              		.loc 1 196 8 view .LVU4981
 14357              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 14358              		.loc 1 196 19 is_stmt 0 view .LVU4982
 14359 4f62 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_861, offset: 0B], mask
 197:sieve_extend.c ****    }
 14360              		.loc 1 197 8 is_stmt 1 view .LVU4983
 14361              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 14362              		.loc 1 197 17 is_stmt 0 view .LVU4984
 14363 4f65 4801C8   		add	rax, rcx	# index_ptr, _543
 14364              	.LVL813:
 195:sieve_extend.c ****        *index_ptr |= mask;
 14365              		.loc 1 195 10 is_stmt 1 view .LVU4985
GAS LISTING /tmp/ccgH0yRS.s 			page 386


 14366 4f68 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14367 4f6b 77A8     		ja	.L964	#,
 14368 4f6d 0F1F00   		.p2align 4
 14369              		.p2align 3
 14370              	.L963:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14371              		.loc 1 200 4 view .LVU4986
 14372              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14373              		.loc 1 200 7 is_stmt 0 view .LVU4987
 14374 4f70 4839C5   		cmp	rbp, rax	# _494, index_ptr
 14375 4f73 0F840F01 		je	.L1507	#,
 14375      0000
 14376              	.LVL814:
 14377              	.L965:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 14378              		.loc 1 200 7 view .LVU4988
 14379              	.LBE649:
 14380              	.LBE651:
 14381              	.LBE646:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14382              		.loc 1 321 54 is_stmt 1 view .LVU4989
 14383              	# sieve_extend.c:321:         for (register counter_t index = range_start; index <= range_stop_uniq
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14384              		.loc 1 321 9 is_stmt 0 view .LVU4990
 14385 4f79 4939F6   		cmp	r14, rsi	# tmp709, index
 14386 4f7c 0F83AEFD 		jnb	.L966	#,
 14386      FFFF
 14387              	.LVL815:
 14388              	.L957:
 321:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14389              		.loc 1 321 9 view .LVU4991
 14390              	.LBE645:
 14391              	.LBE656:
 14392              	.LBE658:
 910:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14393              		.loc 1 910 9 is_stmt 1 view .LVU4992
 14394              	.LBB659:
 14395              	.LBI659:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 14396              		.loc 1 122 25 view .LVU4993
 14397              	.LBB660:
 123:sieve_extend.c ****     return index;
 14398              		.loc 1 123 5 view .LVU4994
 123:sieve_extend.c ****     return index;
 14399              		.loc 1 123 11 view .LVU4995
 14400              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14401              		.loc 1 123 21 is_stmt 0 view .LVU4996
 14402 4f82 4C89EE   		mov	rsi, r13	# tmp710, _333
 14403              	.LBE660:
 14404              	.LBE659:
 14405              	# sieve_extend.c:908:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 908:sieve_extend.c ****         setBitsTrue_mediumStep(bitarray, start, step, block_stop);
 14406              		.loc 1 908 12 view .LVU4997
 14407 4f85 4C89E9   		mov	rcx, r13	# index, _333
 14408              	.LBB662:
GAS LISTING /tmp/ccgH0yRS.s 			page 387


 14409              	.LBB661:
 14410              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14411              		.loc 1 123 21 view .LVU4998
 14412 4f88 48C1EE06 		shr	rsi, 6	# tmp710,
 14413              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14414              		.loc 1 123 12 view .LVU4999
 14415 4f8c 4C8B04F3 		mov	r8, QWORD PTR [rbx+rsi*8]	# *_58, *_58
 14416              	.LVL816:
 14417              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14418              		.loc 1 123 11 view .LVU5000
 14419 4f90 4D0FA3E8 		bt	r8, r13	# *_58, _333
 14420 4f94 0F83C600 		jnc	.L956	#,
 14420      0000
 14421              	.LVL817:
 14422              	.L955:
 123:sieve_extend.c ****     return index;
 14423              		.loc 1 123 58 is_stmt 1 view .LVU5001
 14424              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14425              		.loc 1 123 63 is_stmt 0 view .LVU5002
 14426 4f9a 4C8D6901 		lea	r13, 1[rcx]	# tmp840,
 14427              	.LVL818:
 14428              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14429              		.loc 1 123 21 view .LVU5003
 14430 4f9e 4D89EE   		mov	r14, r13	# tmp737, index
 14431              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14432              		.loc 1 123 63 view .LVU5004
 14433 4fa1 4C89E9   		mov	rcx, r13	# index, tmp840
 123:sieve_extend.c ****     return index;
 14434              		.loc 1 123 11 is_stmt 1 view .LVU5005
 14435              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14436              		.loc 1 123 21 is_stmt 0 view .LVU5006
 14437 4fa4 49C1EE06 		shr	r14, 6	# tmp737,
 14438              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14439              		.loc 1 123 12 view .LVU5007
 14440 4fa8 4E8B0CF3 		mov	r9, QWORD PTR [rbx+r14*8]	# *_346, *_346
 14441              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14442              		.loc 1 123 11 view .LVU5008
 14443 4fac 4D0FA3E9 		bt	r9, r13	# *_346, index
 14444 4fb0 0F83AA00 		jnc	.L956	#,
 14444      0000
 123:sieve_extend.c ****     return index;
 14445              		.loc 1 123 58 is_stmt 1 view .LVU5009
 14446              	.LVL819:
 14447              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14448              		.loc 1 123 63 is_stmt 0 view .LVU5010
 14449 4fb6 4883C101 		add	rcx, 1	# index,
 14450              	.LVL820:
GAS LISTING /tmp/ccgH0yRS.s 			page 388


 123:sieve_extend.c ****     return index;
 14451              		.loc 1 123 11 is_stmt 1 view .LVU5011
 14452              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14453              		.loc 1 123 21 is_stmt 0 view .LVU5012
 14454 4fba 4889C8   		mov	rax, rcx	# tmp994, index
 14455 4fbd 48C1E806 		shr	rax, 6	# tmp994,
 14456              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14457              		.loc 1 123 12 view .LVU5013
 14458 4fc1 488B3CC3 		mov	rdi, QWORD PTR [rbx+rax*8]	# *_346, *_346
 14459              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14460              		.loc 1 123 11 view .LVU5014
 14461 4fc5 480FA3CF 		bt	rdi, rcx	# *_346, index
 14462 4fc9 0F839100 		jnc	.L956	#,
 14462      0000
 123:sieve_extend.c ****     return index;
 14463              		.loc 1 123 58 is_stmt 1 view .LVU5015
 14464              	.LVL821:
 14465              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14466              		.loc 1 123 63 is_stmt 0 view .LVU5016
 14467 4fcf 498D4D02 		lea	rcx, 2[r13]	# index,
 14468              	.LVL822:
 123:sieve_extend.c ****     return index;
 14469              		.loc 1 123 11 is_stmt 1 view .LVU5017
 14470              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14471              		.loc 1 123 21 is_stmt 0 view .LVU5018
 14472 4fd3 4989CB   		mov	r11, rcx	# tmp998, index
 14473 4fd6 49C1EB06 		shr	r11, 6	# tmp998,
 14474              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14475              		.loc 1 123 12 view .LVU5019
 14476 4fda 4E8B3CDB 		mov	r15, QWORD PTR [rbx+r11*8]	# *_346, *_346
 14477              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14478              		.loc 1 123 11 view .LVU5020
 14479 4fde 490FA3CF 		bt	r15, rcx	# *_346, index
 14480 4fe2 737C     		jnc	.L956	#,
 123:sieve_extend.c ****     return index;
 14481              		.loc 1 123 58 is_stmt 1 view .LVU5021
 14482              	.LVL823:
 14483              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14484              		.loc 1 123 63 is_stmt 0 view .LVU5022
 14485 4fe4 498D4D03 		lea	rcx, 3[r13]	# index,
 14486              	.LVL824:
 123:sieve_extend.c ****     return index;
 14487              		.loc 1 123 11 is_stmt 1 view .LVU5023
 14488              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14489              		.loc 1 123 21 is_stmt 0 view .LVU5024
 14490 4fe8 4889CA   		mov	rdx, rcx	# tmp1002, index
 14491 4feb 48C1EA06 		shr	rdx, 6	# tmp1002,
 14492              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccgH0yRS.s 			page 389


 123:sieve_extend.c ****     return index;
 14493              		.loc 1 123 12 view .LVU5025
 14494 4fef 488B34D3 		mov	rsi, QWORD PTR [rbx+rdx*8]	# *_346, *_346
 14495              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14496              		.loc 1 123 11 view .LVU5026
 14497 4ff3 480FA3CE 		bt	rsi, rcx	# *_346, index
 14498 4ff7 7367     		jnc	.L956	#,
 123:sieve_extend.c ****     return index;
 14499              		.loc 1 123 58 is_stmt 1 view .LVU5027
 14500              	.LVL825:
 14501              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14502              		.loc 1 123 63 is_stmt 0 view .LVU5028
 14503 4ff9 498D4D04 		lea	rcx, 4[r13]	# index,
 14504              	.LVL826:
 123:sieve_extend.c ****     return index;
 14505              		.loc 1 123 11 is_stmt 1 view .LVU5029
 14506              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14507              		.loc 1 123 21 is_stmt 0 view .LVU5030
 14508 4ffd 4989C8   		mov	r8, rcx	# tmp1006, index
 14509 5000 49C1E806 		shr	r8, 6	# tmp1006,
 14510              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14511              		.loc 1 123 12 view .LVU5031
 14512 5004 4E8B34C3 		mov	r14, QWORD PTR [rbx+r8*8]	# *_346, *_346
 14513              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14514              		.loc 1 123 11 view .LVU5032
 14515 5008 490FA3CE 		bt	r14, rcx	# *_346, index
 14516 500c 7352     		jnc	.L956	#,
 123:sieve_extend.c ****     return index;
 14517              		.loc 1 123 58 is_stmt 1 view .LVU5033
 14518              	.LVL827:
 14519              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14520              		.loc 1 123 63 is_stmt 0 view .LVU5034
 14521 500e 498D4D05 		lea	rcx, 5[r13]	# index,
 14522              	.LVL828:
 123:sieve_extend.c ****     return index;
 14523              		.loc 1 123 11 is_stmt 1 view .LVU5035
 14524              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14525              		.loc 1 123 21 is_stmt 0 view .LVU5036
 14526 5012 4989C9   		mov	r9, rcx	# tmp1010, index
 14527 5015 49C1E906 		shr	r9, 6	# tmp1010,
 14528              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14529              		.loc 1 123 12 view .LVU5037
 14530 5019 4A8B04CB 		mov	rax, QWORD PTR [rbx+r9*8]	# *_346, *_346
 14531              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14532              		.loc 1 123 11 view .LVU5038
 14533 501d 480FA3C8 		bt	rax, rcx	# *_346, index
 14534 5021 733D     		jnc	.L956	#,
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccgH0yRS.s 			page 390


 14535              		.loc 1 123 58 is_stmt 1 view .LVU5039
 14536              	.LVL829:
 14537              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14538              		.loc 1 123 63 is_stmt 0 view .LVU5040
 14539 5023 498D4D06 		lea	rcx, 6[r13]	# index,
 14540              	.LVL830:
 123:sieve_extend.c ****     return index;
 14541              		.loc 1 123 11 is_stmt 1 view .LVU5041
 14542              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14543              		.loc 1 123 21 is_stmt 0 view .LVU5042
 14544 5027 4889CF   		mov	rdi, rcx	# tmp1014, index
 14545 502a 48C1EF06 		shr	rdi, 6	# tmp1014,
 14546              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14547              		.loc 1 123 12 view .LVU5043
 14548 502e 4C8B1CFB 		mov	r11, QWORD PTR [rbx+rdi*8]	# *_346, *_346
 14549              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14550              		.loc 1 123 11 view .LVU5044
 14551 5032 490FA3CB 		bt	r11, rcx	# *_346, index
 14552 5036 7328     		jnc	.L956	#,
 123:sieve_extend.c ****     return index;
 14553              		.loc 1 123 58 is_stmt 1 view .LVU5045
 14554              	.LVL831:
 14555              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14556              		.loc 1 123 63 is_stmt 0 view .LVU5046
 14557 5038 498D4D07 		lea	rcx, 7[r13]	# index,
 14558              	.LVL832:
 123:sieve_extend.c ****     return index;
 14559              		.loc 1 123 11 is_stmt 1 view .LVU5047
 14560              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14561              		.loc 1 123 21 is_stmt 0 view .LVU5048
 14562 503c 4989CD   		mov	r13, rcx	# tmp1018, index
 14563 503f 49C1ED06 		shr	r13, 6	# tmp1018,
 14564              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14565              		.loc 1 123 12 view .LVU5049
 14566 5043 4E8B3CEB 		mov	r15, QWORD PTR [rbx+r13*8]	# *_346, *_346
 14567              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14568              		.loc 1 123 11 view .LVU5050
 14569 5047 490FA3CF 		bt	r15, rcx	# *_346, index
 14570 504b 0F8249FF 		jc	.L955	#,
 14570      FFFF
 14571              	.LVL833:
 14572 5051 66662E0F 		.p2align 4
 14572      1F840000 
 14572      0000000F 
 14572      1F4000
 14573              		.p2align 3
 14574              	.L956:
 124:sieve_extend.c **** }
 14575              		.loc 1 124 5 is_stmt 1 view .LVU5051
GAS LISTING /tmp/ccgH0yRS.s 			page 391


 124:sieve_extend.c **** }
 14576              		.loc 1 124 5 is_stmt 0 view .LVU5052
 14577              	.LBE661:
 14578              	.LBE662:
 911:sieve_extend.c ****     }
 14579              		.loc 1 911 9 is_stmt 1 view .LVU5053
 14580              	# sieve_extend.c:911:         start = prime * prime * 2 + prime * 2;
 911:sieve_extend.c ****     }
 14581              		.loc 1 911 35 is_stmt 0 view .LVU5054
 14582 5060 488D7101 		lea	rsi, 1[rcx]	# _411,
 14583              	# sieve_extend.c:911:         start = prime * prime * 2 + prime * 2;
 911:sieve_extend.c ****     }
 14584              		.loc 1 911 15 view .LVU5055
 14585 5064 480FAFF1 		imul	rsi, rcx	# tmp743, index
 14586              	.LVL834:
 911:sieve_extend.c ****     }
 14587              		.loc 1 911 15 view .LVU5056
 14588 5068 4801F6   		add	rsi, rsi	# index
 14589              	.LVL835:
 905:sieve_extend.c ****         step  = prime * 2 + 1;
 14590              		.loc 1 905 11 is_stmt 1 view .LVU5057
 14591 506b 4939F4   		cmp	r12, rsi	# block_stop, index
 14592 506e 0F833CFC 		jnb	.L935	#,
 14592      FFFF
 905:sieve_extend.c ****         step  = prime * 2 + 1;
 14593              		.loc 1 905 11 is_stmt 0 view .LVU5058
 14594 5074 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# <retval>, %sfp
 14594      30
 14595              	.LVL836:
 905:sieve_extend.c ****         step  = prime * 2 + 1;
 14596              		.loc 1 905 11 view .LVU5059
 14597 5079 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# block_start, %sfp
 14597      18
 14598 507e 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_92->bits
 14599 5082 E9D6FBFF 		jmp	.L936	#
 14599      FF
 14600              	.LVL837:
 14601              		.p2align 4,,7
 14602 5087 90       		.p2align 3
 14603              	.L1507:
 14604              	.LBB663:
 14605              	.LBB657:
 14606              	.LBB654:
 14607              	.LBB653:
 14608              	.LBB652:
 14609              	.LBB650:
 201:sieve_extend.c ****    }
 14610              		.loc 1 201 7 is_stmt 1 view .LVU5060
 14611              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 14612              		.loc 1 201 27 is_stmt 0 view .LVU5061
 14613 5088 48235424 		and	rdx, QWORD PTR 8[rsp]	# tmp736, %sfp
 14613      08
 14614              	.LVL838:
 14615              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 14616              		.loc 1 201 18 view .LVU5062
GAS LISTING /tmp/ccgH0yRS.s 			page 392


 14617 508d 48095500 		or	QWORD PTR 0[rbp], rdx	# *index_ptr_642, tmp736
 14618 5091 E9E3FEFF 		jmp	.L965	#
 14618      FF
 14619              	.LVL839:
 14620              		.p2align 4,,7
 14621 5096 6690     		.p2align 3
 14622              	.L953:
 201:sieve_extend.c ****    }
 14623              		.loc 1 201 18 view .LVU5063
 14624              	.LBE650:
 14625              	.LBE652:
 14626              	.LBE653:
 14627              	.LBE654:
 14628              	.LBB655:
 14629              	.LBB644:
 14630              	.LBB643:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14631              		.loc 1 304 54 is_stmt 1 view .LVU5064
 14632              	# sieve_extend.c:304:         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14633              		.loc 1 304 9 is_stmt 0 view .LVU5065
 14634 5098 4939F4   		cmp	r12, rsi	# block_stop, index
 14635 509b 0F82E1FE 		jb	.L957	#,
 14635      FFFF
 14636              	.LVL840:
 14637 50a1 66662E0F 		.p2align 4
 14637      1F840000 
 14637      0000000F 
 14637      1F4000
 14638              		.p2align 3
 14639              	.L959:
 14640              	.LBB642:
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14641              		.loc 1 305 13 is_stmt 1 view .LVU5066
 14642              	# sieve_extend.c:305:             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14643              		.loc 1 305 32 is_stmt 0 view .LVU5067
 14644 50b0 4989F6   		mov	r14, rsi	# index_word, index
 14645              	# sieve_extend.c:306:             register bitword_t mask = SAFE_ZERO;
 306:sieve_extend.c ****             #pragma ivdep
 14646              		.loc 1 306 32 view .LVU5068
 14647 50b3 4531C9   		xor	r9d, r9d	# mask
 14648              	# sieve_extend.c:305:             register counter_t index_word = wordindex(index);
 305:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 14649              		.loc 1 305 32 view .LVU5069
 14650 50b6 49C1EE06 		shr	r14, 6	# index_word,
 14651              	.LVL841:
 306:sieve_extend.c ****             #pragma ivdep
 14652              		.loc 1 306 13 is_stmt 1 view .LVU5070
 14653              	.L958:
 308:sieve_extend.c ****                 mask |= markmask(index);
 14654              		.loc 1 308 13 view .LVU5071
 309:sieve_extend.c ****                 index += step;
 14655              		.loc 1 309 17 view .LVU5072
 14656              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14657              		.loc 1 309 25 is_stmt 0 view .LVU5073
GAS LISTING /tmp/ccgH0yRS.s 			page 393


 14658 50ba C4C2C9F7 		shlx	rcx, r10, rsi	# tmp716, tmp830, index
 14658      CA
 14659              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14660              		.loc 1 310 23 view .LVU5074
 14661 50bf 4C01C6   		add	rsi, r8	# index, step
 14662              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14663              		.loc 1 311 36 view .LVU5075
 14664 50c2 4989F3   		mov	r11, rsi	# tmp718, index
 14665              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14666              		.loc 1 309 22 view .LVU5076
 14667 50c5 4909C9   		or	r9, rcx	# mask, tmp716
 14668              	.LVL842:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14669              		.loc 1 310 17 is_stmt 1 view .LVU5077
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14670              		.loc 1 311 21 view .LVU5078
 14671              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14672              		.loc 1 311 36 is_stmt 0 view .LVU5079
 14673 50c8 49C1EB06 		shr	r11, 6	# tmp718,
 14674              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14675              		.loc 1 311 13 view .LVU5080
 14676 50cc 4D39DE   		cmp	r14, r11	# index_word, tmp718
 14677 50cf 0F85AB00 		jne	.L1353	#,
 14677      0000
 308:sieve_extend.c ****                 mask |= markmask(index);
 14678              		.loc 1 308 13 is_stmt 1 view .LVU5081
 309:sieve_extend.c ****                 index += step;
 14679              		.loc 1 309 17 view .LVU5082
 14680              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14681              		.loc 1 309 25 is_stmt 0 view .LVU5083
 14682 50d5 C442C9F7 		shlx	r15, r10, rsi	# tmp1022, tmp830, index
 14682      FA
 14683              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14684              		.loc 1 310 23 view .LVU5084
 14685 50da 4C01C6   		add	rsi, r8	# index, step
 14686              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14687              		.loc 1 311 36 view .LVU5085
 14688 50dd 4889F2   		mov	rdx, rsi	# tmp1023, index
 14689              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14690              		.loc 1 309 22 view .LVU5086
 14691 50e0 4D09F9   		or	r9, r15	# mask, tmp1022
 14692              	.LVL843:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14693              		.loc 1 310 17 is_stmt 1 view .LVU5087
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14694              		.loc 1 311 21 view .LVU5088
 14695              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
GAS LISTING /tmp/ccgH0yRS.s 			page 394


 14696              		.loc 1 311 36 is_stmt 0 view .LVU5089
 14697 50e3 48C1EA06 		shr	rdx, 6	# tmp1023,
 14698              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14699              		.loc 1 311 13 view .LVU5090
 14700 50e7 4939D6   		cmp	r14, rdx	# index_word, tmp1023
 14701 50ea 0F859000 		jne	.L1353	#,
 14701      0000
 308:sieve_extend.c ****                 mask |= markmask(index);
 14702              		.loc 1 308 13 is_stmt 1 view .LVU5091
 309:sieve_extend.c ****                 index += step;
 14703              		.loc 1 309 17 view .LVU5092
 14704              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14705              		.loc 1 309 25 is_stmt 0 view .LVU5093
 14706 50f0 C4C2C9F7 		shlx	rax, r10, rsi	# tmp1024, tmp830, index
 14706      C2
 14707              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14708              		.loc 1 310 23 view .LVU5094
 14709 50f5 4C01C6   		add	rsi, r8	# index, step
 14710              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14711              		.loc 1 311 36 view .LVU5095
 14712 50f8 4889F7   		mov	rdi, rsi	# tmp1025, index
 14713              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14714              		.loc 1 309 22 view .LVU5096
 14715 50fb 4909C1   		or	r9, rax	# mask, tmp1024
 14716              	.LVL844:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14717              		.loc 1 310 17 is_stmt 1 view .LVU5097
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14718              		.loc 1 311 21 view .LVU5098
 14719              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14720              		.loc 1 311 36 is_stmt 0 view .LVU5099
 14721 50fe 48C1EF06 		shr	rdi, 6	# tmp1025,
 14722              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14723              		.loc 1 311 13 view .LVU5100
 14724 5102 4939FE   		cmp	r14, rdi	# index_word, tmp1025
 14725 5105 7579     		jne	.L1353	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 14726              		.loc 1 308 13 is_stmt 1 view .LVU5101
 309:sieve_extend.c ****                 index += step;
 14727              		.loc 1 309 17 view .LVU5102
 14728              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14729              		.loc 1 309 25 is_stmt 0 view .LVU5103
 14730 5107 C4C2C9F7 		shlx	rcx, r10, rsi	# tmp1026, tmp830, index
 14730      CA
 14731              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14732              		.loc 1 310 23 view .LVU5104
 14733 510c 4C01C6   		add	rsi, r8	# index, step
 14734              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccgH0yRS.s 			page 395


 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14735              		.loc 1 311 36 view .LVU5105
 14736 510f 4989F3   		mov	r11, rsi	# tmp1027, index
 14737              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14738              		.loc 1 309 22 view .LVU5106
 14739 5112 4909C9   		or	r9, rcx	# mask, tmp1026
 14740              	.LVL845:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14741              		.loc 1 310 17 is_stmt 1 view .LVU5107
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14742              		.loc 1 311 21 view .LVU5108
 14743              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14744              		.loc 1 311 36 is_stmt 0 view .LVU5109
 14745 5115 49C1EB06 		shr	r11, 6	# tmp1027,
 14746              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14747              		.loc 1 311 13 view .LVU5110
 14748 5119 4D39DE   		cmp	r14, r11	# index_word, tmp1027
 14749 511c 7562     		jne	.L1353	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 14750              		.loc 1 308 13 is_stmt 1 view .LVU5111
 309:sieve_extend.c ****                 index += step;
 14751              		.loc 1 309 17 view .LVU5112
 14752              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14753              		.loc 1 309 25 is_stmt 0 view .LVU5113
 14754 511e C442C9F7 		shlx	r15, r10, rsi	# tmp1028, tmp830, index
 14754      FA
 14755              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14756              		.loc 1 310 23 view .LVU5114
 14757 5123 4C01C6   		add	rsi, r8	# index, step
 14758              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14759              		.loc 1 311 36 view .LVU5115
 14760 5126 4889F2   		mov	rdx, rsi	# tmp1029, index
 14761              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14762              		.loc 1 309 22 view .LVU5116
 14763 5129 4D09F9   		or	r9, r15	# mask, tmp1028
 14764              	.LVL846:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14765              		.loc 1 310 17 is_stmt 1 view .LVU5117
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14766              		.loc 1 311 21 view .LVU5118
 14767              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14768              		.loc 1 311 36 is_stmt 0 view .LVU5119
 14769 512c 48C1EA06 		shr	rdx, 6	# tmp1029,
 14770              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14771              		.loc 1 311 13 view .LVU5120
 14772 5130 4939D6   		cmp	r14, rdx	# index_word, tmp1029
 14773 5133 754B     		jne	.L1353	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
GAS LISTING /tmp/ccgH0yRS.s 			page 396


 14774              		.loc 1 308 13 is_stmt 1 view .LVU5121
 309:sieve_extend.c ****                 index += step;
 14775              		.loc 1 309 17 view .LVU5122
 14776              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14777              		.loc 1 309 25 is_stmt 0 view .LVU5123
 14778 5135 C4C2C9F7 		shlx	rax, r10, rsi	# tmp1030, tmp830, index
 14778      C2
 14779              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14780              		.loc 1 310 23 view .LVU5124
 14781 513a 4C01C6   		add	rsi, r8	# index, step
 14782              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14783              		.loc 1 311 36 view .LVU5125
 14784 513d 4889F7   		mov	rdi, rsi	# tmp1031, index
 14785              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14786              		.loc 1 309 22 view .LVU5126
 14787 5140 4909C1   		or	r9, rax	# mask, tmp1030
 14788              	.LVL847:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14789              		.loc 1 310 17 is_stmt 1 view .LVU5127
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14790              		.loc 1 311 21 view .LVU5128
 14791              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14792              		.loc 1 311 36 is_stmt 0 view .LVU5129
 14793 5143 48C1EF06 		shr	rdi, 6	# tmp1031,
 14794              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14795              		.loc 1 311 13 view .LVU5130
 14796 5147 4939FE   		cmp	r14, rdi	# index_word, tmp1031
 14797 514a 7534     		jne	.L1353	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 14798              		.loc 1 308 13 is_stmt 1 view .LVU5131
 309:sieve_extend.c ****                 index += step;
 14799              		.loc 1 309 17 view .LVU5132
 14800              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14801              		.loc 1 309 25 is_stmt 0 view .LVU5133
 14802 514c C4C2C9F7 		shlx	rcx, r10, rsi	# tmp1032, tmp830, index
 14802      CA
 14803              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14804              		.loc 1 310 23 view .LVU5134
 14805 5151 4C01C6   		add	rsi, r8	# index, step
 14806              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14807              		.loc 1 311 36 view .LVU5135
 14808 5154 4989F3   		mov	r11, rsi	# tmp1033, index
 14809              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14810              		.loc 1 309 22 view .LVU5136
 14811 5157 4909C9   		or	r9, rcx	# mask, tmp1032
 14812              	.LVL848:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccgH0yRS.s 			page 397


 14813              		.loc 1 310 17 is_stmt 1 view .LVU5137
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14814              		.loc 1 311 21 view .LVU5138
 14815              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14816              		.loc 1 311 36 is_stmt 0 view .LVU5139
 14817 515a 49C1EB06 		shr	r11, 6	# tmp1033,
 14818              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14819              		.loc 1 311 13 view .LVU5140
 14820 515e 4D39DE   		cmp	r14, r11	# index_word, tmp1033
 14821 5161 751D     		jne	.L1353	#,
 308:sieve_extend.c ****                 mask |= markmask(index);
 14822              		.loc 1 308 13 is_stmt 1 view .LVU5141
 309:sieve_extend.c ****                 index += step;
 14823              		.loc 1 309 17 view .LVU5142
 14824              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14825              		.loc 1 309 25 is_stmt 0 view .LVU5143
 14826 5163 C442C9F7 		shlx	r15, r10, rsi	# tmp1034, tmp830, index
 14826      FA
 14827              	# sieve_extend.c:310:                 index += step;
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14828              		.loc 1 310 23 view .LVU5144
 14829 5168 4C01C6   		add	rsi, r8	# index, step
 14830              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14831              		.loc 1 311 36 view .LVU5145
 14832 516b 4889F2   		mov	rdx, rsi	# tmp1035, index
 14833              	# sieve_extend.c:309:                 mask |= markmask(index);
 309:sieve_extend.c ****                 index += step;
 14834              		.loc 1 309 22 view .LVU5146
 14835 516e 4D09F9   		or	r9, r15	# mask, tmp1034
 14836              	.LVL849:
 310:sieve_extend.c ****             } while (index_word == wordindex(index));
 14837              		.loc 1 310 17 is_stmt 1 view .LVU5147
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14838              		.loc 1 311 21 view .LVU5148
 14839              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14840              		.loc 1 311 36 is_stmt 0 view .LVU5149
 14841 5171 48C1EA06 		shr	rdx, 6	# tmp1035,
 14842              	# sieve_extend.c:311:             } while (index_word == wordindex(index));
 311:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 14843              		.loc 1 311 13 view .LVU5150
 14844 5175 4939D6   		cmp	r14, rdx	# index_word, tmp1035
 14845 5178 0F843CFF 		je	.L958	#,
 14845      FFFF
 14846 517e 6690     		.p2align 4
 14847              		.p2align 3
 14848              	.L1353:
 314:sieve_extend.c ****         }
 14849              		.loc 1 314 13 is_stmt 1 view .LVU5151
 14850              	# sieve_extend.c:314:             bitarray[index_word] |= mask;
 314:sieve_extend.c ****         }
 14851              		.loc 1 314 34 is_stmt 0 view .LVU5152
 14852 5180 4E090CF3 		or	QWORD PTR [rbx+r14*8], r9	# *_525, mask
GAS LISTING /tmp/ccgH0yRS.s 			page 398


 314:sieve_extend.c ****         }
 14853              		.loc 1 314 34 view .LVU5153
 14854              	.LBE642:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14855              		.loc 1 304 54 is_stmt 1 view .LVU5154
 14856              	# sieve_extend.c:304:         for (register counter_t index = range_start; index <= range_stop;) {
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14857              		.loc 1 304 9 is_stmt 0 view .LVU5155
 14858 5184 4939F4   		cmp	r12, rsi	# block_stop, index
 14859 5187 0F8323FF 		jnb	.L959	#,
 14859      FFFF
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14860              		.loc 1 304 9 view .LVU5156
 14861 518d E9F0FDFF 		jmp	.L957	#
 14861      FF
 14862              	.LVL850:
 14863              		.p2align 4,,7
 14864 5192 660F1F44 		.p2align 3
 14864      0000
 14865              	.L1506:
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14866              		.loc 1 304 9 view .LVU5157
 14867 5198 4C8B7C24 		mov	r15, QWORD PTR 24[rsp]	# block_start, %sfp
 14867      18
 304:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 14868              		.loc 1 304 9 view .LVU5158
 14869              	.LBE643:
 14870              	.LBE644:
 14871              	.LBE655:
 14872              	.LBE657:
 14873              	.LBE663:
 932:sieve_extend.c ****         step  = prime * 2 + 1;
 14874              		.loc 1 932 11 is_stmt 1 view .LVU5159
 14875 519d 4939F4   		cmp	r12, rsi	# block_stop, index
 14876 51a0 0F82AEFA 		jb	.L1487	#,
 14876      FFFF
 933:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14877              		.loc 1 933 9 view .LVU5160
 14878              	# sieve_extend.c:933:         step  = prime * 2 + 1;
 933:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 14879              		.loc 1 933 15 is_stmt 0 view .LVU5161
 14880 51a6 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 14880      01
 14881              	.LVL851:
 934:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14882              		.loc 1 934 9 is_stmt 1 view .LVU5162
 14883              	# sieve_extend.c:934:         if unlikely(step > VECTORSTEP_FASTER) break;
 934:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 14884              		.loc 1 934 12 is_stmt 0 view .LVU5163
 14885 51ab 4C3B1500 		cmp	r10, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 14885      000000
 14886 51b2 0F872E01 		ja	.L1508	#,
 14886      0000
 14887 51b8 0F1F8400 		.p2align 4
 14887      00000000 
 14888              		.p2align 3
 14889              	.L967:
GAS LISTING /tmp/ccgH0yRS.s 			page 399


 935:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14890              		.loc 1 935 9 is_stmt 1 view .LVU5164
 14891              	# sieve_extend.c:935:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 935:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14892              		.loc 1 935 12 is_stmt 0 view .LVU5165
 14893 51c0 4C8D7101 		lea	r14, 1[rcx]	# _363,
 14894 51c4 4D39FE   		cmp	r14, r15	# _363, block_start
 14895 51c7 7710     		ja	.L969	#,
 935:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14896              		.loc 1 935 47 is_stmt 1 view .LVU5166
 14897              	# sieve_extend.c:935:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 935:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14898              		.loc 1 935 67 is_stmt 0 view .LVU5167
 14899 51c9 4A8D0439 		lea	rax, [rcx+r15]	# _367,
 14900              	# sieve_extend.c:935:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 935:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14901              		.loc 1 935 108 view .LVU5168
 14902 51cd 31D2     		xor	edx, edx	# tmp747
 14903              	# sieve_extend.c:935:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 935:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14904              		.loc 1 935 75 view .LVU5169
 14905 51cf 488D3408 		lea	rsi, [rax+rcx]	# tmp745,
 14906              	.LVL852:
 14907              	# sieve_extend.c:935:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 935:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14908              		.loc 1 935 108 view .LVU5170
 14909 51d3 49F7F2   		div	r10	# step
 14910              	.LVL853:
 14911              	# sieve_extend.c:935:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 935:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14912              		.loc 1 935 53 view .LVU5171
 14913 51d6 4829D6   		sub	rsi, rdx	# index, tmp747
 14914              	.LVL854:
 14915              	.L969:
 936:sieve_extend.c ****         prime = searchBitFalse(bitarray, prime+1 );
 14916              		.loc 1 936 9 is_stmt 1 view .LVU5172
 14917 51d9 4C89E1   		mov	rcx, r12	#, block_stop
 14918 51dc 4C89D2   		mov	rdx, r10	#, step
 14919 51df 4889DF   		mov	rdi, rbx	#, _30
 14920 51e2 E829C3FF 		call	setBitsTrue_largeRange_vector	#
 14920      FF
 14921              	.LVL855:
 937:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 14922              		.loc 1 937 9 view .LVU5173
 14923              	.LBB664:
 14924              	.LBI664:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 14925              		.loc 1 122 25 view .LVU5174
 14926              	.LBB665:
 123:sieve_extend.c ****     return index;
 14927              		.loc 1 123 5 view .LVU5175
 123:sieve_extend.c ****     return index;
 14928              		.loc 1 123 11 view .LVU5176
 14929              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14930              		.loc 1 123 21 is_stmt 0 view .LVU5177
 14931 51e7 4C89F1   		mov	rcx, r14	# tmp749, _363
GAS LISTING /tmp/ccgH0yRS.s 			page 400


 14932 51ea 48C1E906 		shr	rcx, 6	# tmp749,
 14933              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14934              		.loc 1 123 12 view .LVU5178
 14935 51ee 488B34CB 		mov	rsi, QWORD PTR [rbx+rcx*8]	# *_272, *_272
 14936              	.LBE665:
 14937              	.LBE664:
 14938              	# sieve_extend.c:935:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 935:sieve_extend.c ****         setBitsTrue_largeRange_vector(bitarray, start, step, block_stop);
 14939              		.loc 1 935 12 view .LVU5179
 14940 51f2 4C89F1   		mov	rcx, r14	# index, _363
 14941              	.LBB667:
 14942              	.LBB666:
 14943              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14944              		.loc 1 123 11 view .LVU5180
 14945 51f5 4C0FA3F6 		bt	rsi, r14	# *_272, _363
 14946 51f9 0F83C100 		jnc	.L970	#,
 14946      0000
 14947              	.LVL856:
 14948              	.L971:
 123:sieve_extend.c ****     return index;
 14949              		.loc 1 123 58 is_stmt 1 view .LVU5181
 14950              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14951              		.loc 1 123 63 is_stmt 0 view .LVU5182
 14952 51ff 4C8D4101 		lea	r8, 1[rcx]	# tmp839,
 14953              	.LVL857:
 14954              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14955              		.loc 1 123 21 view .LVU5183
 14956 5203 4D89C1   		mov	r9, r8	# tmp754, index
 14957              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14958              		.loc 1 123 63 view .LVU5184
 14959 5206 4C89C1   		mov	rcx, r8	# index, tmp839
 123:sieve_extend.c ****     return index;
 14960              		.loc 1 123 11 is_stmt 1 view .LVU5185
 14961              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14962              		.loc 1 123 21 is_stmt 0 view .LVU5186
 14963 5209 49C1E906 		shr	r9, 6	# tmp754,
 14964              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14965              		.loc 1 123 12 view .LVU5187
 14966 520d 4A8B3CCB 		mov	rdi, QWORD PTR [rbx+r9*8]	# *_376, *_376
 14967              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14968              		.loc 1 123 11 view .LVU5188
 14969 5211 4C0FA3C7 		bt	rdi, r8	# *_376, index
 14970 5215 0F83A500 		jnc	.L970	#,
 14970      0000
 123:sieve_extend.c ****     return index;
 14971              		.loc 1 123 58 is_stmt 1 view .LVU5189
 14972              	.LVL858:
 14973              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccgH0yRS.s 			page 401


 14974              		.loc 1 123 63 is_stmt 0 view .LVU5190
 14975 521b 4883C101 		add	rcx, 1	# index,
 14976              	.LVL859:
 123:sieve_extend.c ****     return index;
 14977              		.loc 1 123 11 is_stmt 1 view .LVU5191
 14978              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14979              		.loc 1 123 21 is_stmt 0 view .LVU5192
 14980 521f 4989CB   		mov	r11, rcx	# tmp966, index
 14981 5222 49C1EB06 		shr	r11, 6	# tmp966,
 14982              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14983              		.loc 1 123 12 view .LVU5193
 14984 5226 4E8B2CDB 		mov	r13, QWORD PTR [rbx+r11*8]	# *_376, *_376
 14985              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14986              		.loc 1 123 11 view .LVU5194
 14987 522a 490FA3CD 		bt	r13, rcx	# *_376, index
 14988 522e 0F838C00 		jnc	.L970	#,
 14988      0000
 123:sieve_extend.c ****     return index;
 14989              		.loc 1 123 58 is_stmt 1 view .LVU5195
 14990              	.LVL860:
 14991              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14992              		.loc 1 123 63 is_stmt 0 view .LVU5196
 14993 5234 498D4802 		lea	rcx, 2[r8]	# index,
 14994              	.LVL861:
 123:sieve_extend.c ****     return index;
 14995              		.loc 1 123 11 is_stmt 1 view .LVU5197
 14996              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 14997              		.loc 1 123 21 is_stmt 0 view .LVU5198
 14998 5238 4989CA   		mov	r10, rcx	# tmp970, index
 14999 523b 49C1EA06 		shr	r10, 6	# tmp970,
 15000              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15001              		.loc 1 123 12 view .LVU5199
 15002 523f 4E8B34D3 		mov	r14, QWORD PTR [rbx+r10*8]	# *_376, *_376
 15003              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15004              		.loc 1 123 11 view .LVU5200
 15005 5243 490FA3CE 		bt	r14, rcx	# *_376, index
 15006 5247 7377     		jnc	.L970	#,
 123:sieve_extend.c ****     return index;
 15007              		.loc 1 123 58 is_stmt 1 view .LVU5201
 15008              	.LVL862:
 15009              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15010              		.loc 1 123 63 is_stmt 0 view .LVU5202
 15011 5249 498D4803 		lea	rcx, 3[r8]	# index,
 15012              	.LVL863:
 123:sieve_extend.c ****     return index;
 15013              		.loc 1 123 11 is_stmt 1 view .LVU5203
 15014              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15015              		.loc 1 123 21 is_stmt 0 view .LVU5204
GAS LISTING /tmp/ccgH0yRS.s 			page 402


 15016 524d 4889C8   		mov	rax, rcx	# tmp974, index
 15017 5250 48C1E806 		shr	rax, 6	# tmp974,
 15018              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15019              		.loc 1 123 12 view .LVU5205
 15020 5254 488B14C3 		mov	rdx, QWORD PTR [rbx+rax*8]	# *_376, *_376
 15021              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15022              		.loc 1 123 11 view .LVU5206
 15023 5258 480FA3CA 		bt	rdx, rcx	# *_376, index
 15024 525c 7362     		jnc	.L970	#,
 123:sieve_extend.c ****     return index;
 15025              		.loc 1 123 58 is_stmt 1 view .LVU5207
 15026              	.LVL864:
 15027              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15028              		.loc 1 123 63 is_stmt 0 view .LVU5208
 15029 525e 498D4804 		lea	rcx, 4[r8]	# index,
 15030              	.LVL865:
 123:sieve_extend.c ****     return index;
 15031              		.loc 1 123 11 is_stmt 1 view .LVU5209
 15032              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15033              		.loc 1 123 21 is_stmt 0 view .LVU5210
 15034 5262 4889CE   		mov	rsi, rcx	# tmp978, index
 15035 5265 48C1EE06 		shr	rsi, 6	# tmp978,
 15036              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15037              		.loc 1 123 12 view .LVU5211
 15038 5269 4C8B0CF3 		mov	r9, QWORD PTR [rbx+rsi*8]	# *_376, *_376
 15039              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15040              		.loc 1 123 11 view .LVU5212
 15041 526d 490FA3C9 		bt	r9, rcx	# *_376, index
 15042 5271 734D     		jnc	.L970	#,
 123:sieve_extend.c ****     return index;
 15043              		.loc 1 123 58 is_stmt 1 view .LVU5213
 15044              	.LVL866:
 15045              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15046              		.loc 1 123 63 is_stmt 0 view .LVU5214
 15047 5273 498D4805 		lea	rcx, 5[r8]	# index,
 15048              	.LVL867:
 123:sieve_extend.c ****     return index;
 15049              		.loc 1 123 11 is_stmt 1 view .LVU5215
 15050              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15051              		.loc 1 123 21 is_stmt 0 view .LVU5216
 15052 5277 4889CF   		mov	rdi, rcx	# tmp982, index
 15053 527a 48C1EF06 		shr	rdi, 6	# tmp982,
 15054              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15055              		.loc 1 123 12 view .LVU5217
 15056 527e 4C8B1CFB 		mov	r11, QWORD PTR [rbx+rdi*8]	# *_376, *_376
 15057              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15058              		.loc 1 123 11 view .LVU5218
GAS LISTING /tmp/ccgH0yRS.s 			page 403


 15059 5282 490FA3CB 		bt	r11, rcx	# *_376, index
 15060 5286 7338     		jnc	.L970	#,
 123:sieve_extend.c ****     return index;
 15061              		.loc 1 123 58 is_stmt 1 view .LVU5219
 15062              	.LVL868:
 15063              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15064              		.loc 1 123 63 is_stmt 0 view .LVU5220
 15065 5288 498D4806 		lea	rcx, 6[r8]	# index,
 15066              	.LVL869:
 123:sieve_extend.c ****     return index;
 15067              		.loc 1 123 11 is_stmt 1 view .LVU5221
 15068              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15069              		.loc 1 123 21 is_stmt 0 view .LVU5222
 15070 528c 4989CD   		mov	r13, rcx	# tmp986, index
 15071 528f 49C1ED06 		shr	r13, 6	# tmp986,
 15072              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15073              		.loc 1 123 12 view .LVU5223
 15074 5293 4E8B14EB 		mov	r10, QWORD PTR [rbx+r13*8]	# *_376, *_376
 15075              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15076              		.loc 1 123 11 view .LVU5224
 15077 5297 490FA3CA 		bt	r10, rcx	# *_376, index
 15078 529b 7323     		jnc	.L970	#,
 123:sieve_extend.c ****     return index;
 15079              		.loc 1 123 58 is_stmt 1 view .LVU5225
 15080              	.LVL870:
 15081              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15082              		.loc 1 123 63 is_stmt 0 view .LVU5226
 15083 529d 498D4807 		lea	rcx, 7[r8]	# index,
 15084              	.LVL871:
 123:sieve_extend.c ****     return index;
 15085              		.loc 1 123 11 is_stmt 1 view .LVU5227
 15086              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15087              		.loc 1 123 21 is_stmt 0 view .LVU5228
 15088 52a1 4989C8   		mov	r8, rcx	# tmp990, index
 15089 52a4 49C1E806 		shr	r8, 6	# tmp990,
 15090              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15091              		.loc 1 123 12 view .LVU5229
 15092 52a8 4E8B34C3 		mov	r14, QWORD PTR [rbx+r8*8]	# *_376, *_376
 15093              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 15094              		.loc 1 123 11 view .LVU5230
 15095 52ac 490FA3CE 		bt	r14, rcx	# *_376, index
 15096 52b0 0F8249FF 		jc	.L971	#,
 15096      FFFF
 15097              	.LVL872:
 15098 52b6 662E0F1F 		.p2align 4
 15098      84000000 
 15098      0000
 15099              		.p2align 3
 15100              	.L970:
GAS LISTING /tmp/ccgH0yRS.s 			page 404


 124:sieve_extend.c **** }
 15101              		.loc 1 124 5 is_stmt 1 view .LVU5231
 124:sieve_extend.c **** }
 15102              		.loc 1 124 5 is_stmt 0 view .LVU5232
 15103              	.LBE666:
 15104              	.LBE667:
 938:sieve_extend.c ****     }
 15105              		.loc 1 938 9 is_stmt 1 view .LVU5233
 15106              	# sieve_extend.c:938:         start = prime * prime * 2 + prime * 2;
 938:sieve_extend.c ****     }
 15107              		.loc 1 938 35 is_stmt 0 view .LVU5234
 15108 52c0 488D7101 		lea	rsi, 1[rcx]	# _411,
 15109              	# sieve_extend.c:938:         start = prime * prime * 2 + prime * 2;
 938:sieve_extend.c ****     }
 15110              		.loc 1 938 15 view .LVU5235
 15111 52c4 480FAFF1 		imul	rsi, rcx	# tmp760, index
 15112              	.LVL873:
 938:sieve_extend.c ****     }
 15113              		.loc 1 938 15 view .LVU5236
 15114 52c8 4801F6   		add	rsi, rsi	# index
 15115              	.LVL874:
 932:sieve_extend.c ****         step  = prime * 2 + 1;
 15116              		.loc 1 932 11 is_stmt 1 view .LVU5237
 15117 52cb 4939F4   		cmp	r12, rsi	# block_stop, index
 15118 52ce 0F8280F9 		jb	.L1487	#,
 15118      FFFF
 933:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 15119              		.loc 1 933 9 view .LVU5238
 15120              	# sieve_extend.c:933:         step  = prime * 2 + 1;
 933:sieve_extend.c ****         if unlikely(step > VECTORSTEP_FASTER) break;
 15121              		.loc 1 933 15 is_stmt 0 view .LVU5239
 15122 52d4 4C8D5409 		lea	r10, 1[rcx+rcx]	# step,
 15122      01
 15123              	.LVL875:
 934:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15124              		.loc 1 934 9 is_stmt 1 view .LVU5240
 15125              	# sieve_extend.c:934:         if unlikely(step > VECTORSTEP_FASTER) break;
 934:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15126              		.loc 1 934 12 is_stmt 0 view .LVU5241
 15127 52d9 4C3B1500 		cmp	r10, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 15127      000000
 15128 52e0 0F86DAFE 		jbe	.L967	#,
 15128      FFFF
 15129              	.L1508:
 941:sieve_extend.c ****         step  = prime * 2 + 1;
 15130              		.loc 1 941 11 is_stmt 1 view .LVU5242
 15131 52e6 4939F4   		cmp	r12, rsi	# block_stop, index
 15132 52e9 0F8265F9 		jb	.L1487	#,
 15132      FFFF
 941:sieve_extend.c ****         step  = prime * 2 + 1;
 15133              		.loc 1 941 11 is_stmt 0 view .LVU5243
 15134 52ef 4C8D5101 		lea	r10, 1[rcx]	# _411,
 15135              	.LVL876:
 15136 52f3 66662E0F 		.p2align 4
 15136      1F840000 
 15136      00000066 
 15136      90
GAS LISTING /tmp/ccgH0yRS.s 			page 405


 15137              		.p2align 3
 15138              	.L968:
 942:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15139              		.loc 1 942 9 is_stmt 1 view .LVU5244
 15140              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15141              		.loc 1 943 12 is_stmt 0 view .LVU5245
 15142 5300 4D39FA   		cmp	r10, r15	# _411, block_start
 15143              	# sieve_extend.c:942:         step  = prime * 2 + 1;
 942:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15144              		.loc 1 942 15 view .LVU5246
 15145 5303 4C8D5C09 		lea	r11, 1[rcx+rcx]	# step,
 15145      01
 15146              	.LVL877:
 943:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15147              		.loc 1 943 9 is_stmt 1 view .LVU5247
 15148              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15149              		.loc 1 943 12 is_stmt 0 view .LVU5248
 15150 5308 7710     		ja	.L972	#,
 943:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15151              		.loc 1 943 47 is_stmt 1 view .LVU5249
 15152              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15153              		.loc 1 943 67 is_stmt 0 view .LVU5250
 15154 530a 4A8D0439 		lea	rax, [rcx+r15]	# _393,
 15155              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15156              		.loc 1 943 108 view .LVU5251
 15157 530e 31D2     		xor	edx, edx	# tmp764
 15158              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15159              		.loc 1 943 75 view .LVU5252
 15160 5310 488D3408 		lea	rsi, [rax+rcx]	# tmp762,
 15161              	.LVL878:
 15162              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15163              		.loc 1 943 108 view .LVU5253
 15164 5314 49F7F3   		div	r11	# step
 15165              	.LVL879:
 15166              	# sieve_extend.c:943:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 943:sieve_extend.c ****         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 15167              		.loc 1 943 53 view .LVU5254
 15168 5317 4829D6   		sub	rsi, rdx	# index, tmp764
 15169              	.LVL880:
 15170              	.L972:
 944:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 15171              		.loc 1 944 9 is_stmt 1 view .LVU5255
 15172              	# sieve_extend.c:944:         if unlikely(start + step * WORD_SIZE_counter > block_stop) break;
 944:sieve_extend.c ****         setBitsTrue_largeRange(bitarray, start, step, block_stop);
 15173              		.loc 1 944 12 is_stmt 0 view .LVU5256
 15174 531a 4D89DD   		mov	r13, r11	# tmp766, step
 15175 531d 49C1E506 		sal	r13, 6	# tmp766,
 15176 5321 4901F5   		add	r13, rsi	# _399, index
 15177 5324 4D39EC   		cmp	r12, r13	# block_stop, _399
 15178 5327 0F825302 		jb	.L973	#,
 15178      0000
GAS LISTING /tmp/ccgH0yRS.s 			page 406


 15179              	.LVL881:
 15180              	.LBB668:
 15181              	.LBB669:
 15182              	.LBB670:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15183              		.loc 1 418 50 is_stmt 1 view .LVU5257
 15184              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15185              		.loc 1 418 5 is_stmt 0 view .LVU5258
 15186 532d 4C39EE   		cmp	rsi, r13	# index, _399
 15187 5330 0F83CB01 		jnb	.L984	#,
 15187      0000
 15188              	.LBB671:
 15189              	.LBB672:
 15190              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 15191              		.loc 1 177 133 view .LVU5259
 15192 5336 488B4C24 		mov	rcx, QWORD PTR 16[rsp]	# range_stop_word, %sfp
 15192      10
 15193              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 15194              		.loc 1 177 110 view .LVU5260
 15195 533b 4F8D049B 		lea	r8, [r11+r11*4]	# tmp776,
 15196 533f 4D89DE   		mov	r14, r11	# _1406, step
 15197              	# sieve_extend.c:183:        index_ptr+=step;
 183:sieve_extend.c ****        *index_ptr |= mask;
 15198              		.loc 1 183 17 view .LVU5261
 15199 5342 4A8D14DD 		lea	rdx, 0[0+r11*8]	# _626,
 15199      00000000 
 15200              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 15201              		.loc 1 177 133 view .LVU5262
 15202 534a 4989C9   		mov	r9, rcx	# tmp778, range_stop_word
 15203 534d 4D29C1   		sub	r9, r8	# tmp778, tmp776
 15204              	# sieve_extend.c:177:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 177:sieve_extend.c **** 
 15205              		.loc 1 177 53 view .LVU5263
 15206 5350 4C39C1   		cmp	rcx, r8	# range_stop_word, tmp776
 15207 5353 4E8D0CCB 		lea	r9, [rbx+r9*8]	# tmp780,
 15208 5357 4C0F46CB 		cmovbe	r9, rbx	# _30,, fast_loop_ptr
 15209 535b 49C1E003 		sal	r8, 3	# tmp784,
 15210 535f 49C1E604 		sal	r14, 4	# _1406,
 15211 5363 66662E0F 		.p2align 4
 15211      1F840000 
 15211      00000066 
 15211      90
 15212              		.p2align 3
 15213              	.L983:
 177:sieve_extend.c **** 
 15214              		.loc 1 177 53 view .LVU5264
 15215              	.LBE672:
 15216              	.LBE671:
 419:sieve_extend.c ****     }
 15217              		.loc 1 419 9 is_stmt 1 view .LVU5265
 15218 5370 4889F0   		mov	rax, rsi	# tmp787, index
 15219 5373 BF010000 		mov	edi, 1	# tmp1728,
 15219      00
GAS LISTING /tmp/ccgH0yRS.s 			page 407


 15220 5378 48C1E806 		shr	rax, 6	# tmp787,
 15221 537c C4E2C9F7 		shlx	rcx, rdi, rsi	# _611, tmp1728, index
 15221      CF
 15222              	.LVL882:
 15223              	.LBB675:
 15224              	.LBI671:
 147:sieve_extend.c **** //#if __APPLE__
 15225              		.loc 1 147 20 view .LVU5266
 15226              	.LBB673:
 175:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitarray[index_word],
 15227              		.loc 1 175 4 view .LVU5267
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 15228              		.loc 1 176 4 view .LVU5268
 15229              	# sieve_extend.c:176:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 176:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitarray[((range_stop
 15230              		.loc 1 176 78 is_stmt 0 view .LVU5269
 15231 5381 488D04C3 		lea	rax, [rbx+rax*8]	# index_ptr,
 15232              	.LVL883:
 177:sieve_extend.c **** 
 15233              		.loc 1 177 4 is_stmt 1 view .LVU5270
 181:sieve_extend.c ****        *index_ptr |= mask;
 15234              		.loc 1 181 4 view .LVU5271
 181:sieve_extend.c ****        *index_ptr |= mask;
 15235              		.loc 1 181 10 view .LVU5272
 15236 5385 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 15237 5388 0F830201 		jnb	.L978	#,
 15237      0000
 181:sieve_extend.c ****        *index_ptr |= mask;
 15238              		.loc 1 181 10 is_stmt 0 view .LVU5273
 15239 538e 4A8D3C30 		lea	rdi, [rax+r14]	# ivtmp.554,
 15240              	.L979:
 182:sieve_extend.c ****        index_ptr+=step;
 15241              		.loc 1 182 8 is_stmt 1 view .LVU5274
 15242              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15243              		.loc 1 182 19 is_stmt 0 view .LVU5275
 15244 5392 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15245              		.loc 1 183 8 is_stmt 1 view .LVU5276
 15246              	.LVL884:
 184:sieve_extend.c ****        index_ptr+=step;
 15247              		.loc 1 184 8 view .LVU5277
 15248              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15249              		.loc 1 184 19 is_stmt 0 view .LVU5278
 15250 5395 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15251              		.loc 1 185 8 is_stmt 1 view .LVU5279
 15252              	.LVL885:
 186:sieve_extend.c ****        index_ptr+=step;
 15253              		.loc 1 186 8 view .LVU5280
 15254              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15255              		.loc 1 186 19 is_stmt 0 view .LVU5281
 15256 5399 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15257              		.loc 1 187 8 is_stmt 1 view .LVU5282
GAS LISTING /tmp/ccgH0yRS.s 			page 408


 15258              	.LVL886:
 188:sieve_extend.c ****        index_ptr+=step;
 15259              		.loc 1 188 8 view .LVU5283
 15260              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15261              		.loc 1 188 19 is_stmt 0 view .LVU5284
 15262 539c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15263              		.loc 1 189 8 is_stmt 1 view .LVU5285
 15264              	.LVL887:
 190:sieve_extend.c ****        index_ptr+=step;
 15265              		.loc 1 190 8 view .LVU5286
 15266 53a0 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15267              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15268              		.loc 1 190 19 is_stmt 0 view .LVU5287
 15269 53a3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15270              		.loc 1 191 8 is_stmt 1 view .LVU5288
 15271 53a7 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15272              	.LVL888:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15273              		.loc 1 181 10 view .LVU5289
 15274 53aa 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15275 53ad 0F86DD00 		jbe	.L978	#,
 15275      0000
 182:sieve_extend.c ****        index_ptr+=step;
 15276              		.loc 1 182 8 view .LVU5290
 15277              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15278              		.loc 1 182 19 is_stmt 0 view .LVU5291
 15279 53b3 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15280              		.loc 1 183 8 is_stmt 1 view .LVU5292
 15281              	.LVL889:
 184:sieve_extend.c ****        index_ptr+=step;
 15282              		.loc 1 184 8 view .LVU5293
 15283              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15284              		.loc 1 184 19 is_stmt 0 view .LVU5294
 15285 53b6 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15286              		.loc 1 185 8 is_stmt 1 view .LVU5295
 15287              	.LVL890:
 186:sieve_extend.c ****        index_ptr+=step;
 15288              		.loc 1 186 8 view .LVU5296
 15289              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15290              		.loc 1 186 19 is_stmt 0 view .LVU5297
 15291 53ba 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15292              		.loc 1 187 8 is_stmt 1 view .LVU5298
 15293              	.LVL891:
 188:sieve_extend.c ****        index_ptr+=step;
 15294              		.loc 1 188 8 view .LVU5299
 15295              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccgH0yRS.s 			page 409


 15296              		.loc 1 188 19 is_stmt 0 view .LVU5300
 15297 53bd 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15298              		.loc 1 189 8 is_stmt 1 view .LVU5301
 15299              	.LVL892:
 190:sieve_extend.c ****        index_ptr+=step;
 15300              		.loc 1 190 8 view .LVU5302
 15301 53c1 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15302              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15303              		.loc 1 190 19 is_stmt 0 view .LVU5303
 15304 53c4 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15305              		.loc 1 191 8 is_stmt 1 view .LVU5304
 15306 53c8 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15307              	.LVL893:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15308              		.loc 1 181 10 view .LVU5305
 15309 53cb 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15310 53ce 0F86BC00 		jbe	.L978	#,
 15310      0000
 182:sieve_extend.c ****        index_ptr+=step;
 15311              		.loc 1 182 8 view .LVU5306
 15312              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15313              		.loc 1 182 19 is_stmt 0 view .LVU5307
 15314 53d4 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15315              		.loc 1 183 8 is_stmt 1 view .LVU5308
 15316              	.LVL894:
 184:sieve_extend.c ****        index_ptr+=step;
 15317              		.loc 1 184 8 view .LVU5309
 15318              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15319              		.loc 1 184 19 is_stmt 0 view .LVU5310
 15320 53d7 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15321              		.loc 1 185 8 is_stmt 1 view .LVU5311
 15322              	.LVL895:
 186:sieve_extend.c ****        index_ptr+=step;
 15323              		.loc 1 186 8 view .LVU5312
 15324              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15325              		.loc 1 186 19 is_stmt 0 view .LVU5313
 15326 53db 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15327              		.loc 1 187 8 is_stmt 1 view .LVU5314
 15328              	.LVL896:
 188:sieve_extend.c ****        index_ptr+=step;
 15329              		.loc 1 188 8 view .LVU5315
 15330              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15331              		.loc 1 188 19 is_stmt 0 view .LVU5316
 15332 53de 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15333              		.loc 1 189 8 is_stmt 1 view .LVU5317
 15334              	.LVL897:
GAS LISTING /tmp/ccgH0yRS.s 			page 410


 190:sieve_extend.c ****        index_ptr+=step;
 15335              		.loc 1 190 8 view .LVU5318
 15336 53e2 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15337              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15338              		.loc 1 190 19 is_stmt 0 view .LVU5319
 15339 53e5 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15340              		.loc 1 191 8 is_stmt 1 view .LVU5320
 15341 53e9 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15342              	.LVL898:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15343              		.loc 1 181 10 view .LVU5321
 15344 53ec 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15345 53ef 0F869B00 		jbe	.L978	#,
 15345      0000
 182:sieve_extend.c ****        index_ptr+=step;
 15346              		.loc 1 182 8 view .LVU5322
 15347              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15348              		.loc 1 182 19 is_stmt 0 view .LVU5323
 15349 53f5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15350              		.loc 1 183 8 is_stmt 1 view .LVU5324
 15351              	.LVL899:
 184:sieve_extend.c ****        index_ptr+=step;
 15352              		.loc 1 184 8 view .LVU5325
 15353              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15354              		.loc 1 184 19 is_stmt 0 view .LVU5326
 15355 53f8 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15356              		.loc 1 185 8 is_stmt 1 view .LVU5327
 15357              	.LVL900:
 186:sieve_extend.c ****        index_ptr+=step;
 15358              		.loc 1 186 8 view .LVU5328
 15359              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15360              		.loc 1 186 19 is_stmt 0 view .LVU5329
 15361 53fc 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15362              		.loc 1 187 8 is_stmt 1 view .LVU5330
 15363              	.LVL901:
 188:sieve_extend.c ****        index_ptr+=step;
 15364              		.loc 1 188 8 view .LVU5331
 15365              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15366              		.loc 1 188 19 is_stmt 0 view .LVU5332
 15367 53ff 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15368              		.loc 1 189 8 is_stmt 1 view .LVU5333
 15369              	.LVL902:
 190:sieve_extend.c ****        index_ptr+=step;
 15370              		.loc 1 190 8 view .LVU5334
 15371 5403 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15372              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
GAS LISTING /tmp/ccgH0yRS.s 			page 411


 15373              		.loc 1 190 19 is_stmt 0 view .LVU5335
 15374 5406 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15375              		.loc 1 191 8 is_stmt 1 view .LVU5336
 15376 540a 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15377              	.LVL903:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15378              		.loc 1 181 10 view .LVU5337
 15379 540d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15380 5410 767E     		jbe	.L978	#,
 182:sieve_extend.c ****        index_ptr+=step;
 15381              		.loc 1 182 8 view .LVU5338
 15382              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15383              		.loc 1 182 19 is_stmt 0 view .LVU5339
 15384 5412 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15385              		.loc 1 183 8 is_stmt 1 view .LVU5340
 15386              	.LVL904:
 184:sieve_extend.c ****        index_ptr+=step;
 15387              		.loc 1 184 8 view .LVU5341
 15388              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15389              		.loc 1 184 19 is_stmt 0 view .LVU5342
 15390 5415 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15391              		.loc 1 185 8 is_stmt 1 view .LVU5343
 15392              	.LVL905:
 186:sieve_extend.c ****        index_ptr+=step;
 15393              		.loc 1 186 8 view .LVU5344
 15394              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15395              		.loc 1 186 19 is_stmt 0 view .LVU5345
 15396 5419 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15397              		.loc 1 187 8 is_stmt 1 view .LVU5346
 15398              	.LVL906:
 188:sieve_extend.c ****        index_ptr+=step;
 15399              		.loc 1 188 8 view .LVU5347
 15400              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15401              		.loc 1 188 19 is_stmt 0 view .LVU5348
 15402 541c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15403              		.loc 1 189 8 is_stmt 1 view .LVU5349
 15404              	.LVL907:
 190:sieve_extend.c ****        index_ptr+=step;
 15405              		.loc 1 190 8 view .LVU5350
 15406 5420 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15407              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15408              		.loc 1 190 19 is_stmt 0 view .LVU5351
 15409 5423 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15410              		.loc 1 191 8 is_stmt 1 view .LVU5352
 15411 5427 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15412              	.LVL908:
GAS LISTING /tmp/ccgH0yRS.s 			page 412


 181:sieve_extend.c ****        *index_ptr |= mask;
 15413              		.loc 1 181 10 view .LVU5353
 15414 542a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15415 542d 7661     		jbe	.L978	#,
 182:sieve_extend.c ****        index_ptr+=step;
 15416              		.loc 1 182 8 view .LVU5354
 15417              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15418              		.loc 1 182 19 is_stmt 0 view .LVU5355
 15419 542f 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15420              		.loc 1 183 8 is_stmt 1 view .LVU5356
 15421              	.LVL909:
 184:sieve_extend.c ****        index_ptr+=step;
 15422              		.loc 1 184 8 view .LVU5357
 15423              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15424              		.loc 1 184 19 is_stmt 0 view .LVU5358
 15425 5432 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15426              		.loc 1 185 8 is_stmt 1 view .LVU5359
 15427              	.LVL910:
 186:sieve_extend.c ****        index_ptr+=step;
 15428              		.loc 1 186 8 view .LVU5360
 15429              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15430              		.loc 1 186 19 is_stmt 0 view .LVU5361
 15431 5436 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15432              		.loc 1 187 8 is_stmt 1 view .LVU5362
 15433              	.LVL911:
 188:sieve_extend.c ****        index_ptr+=step;
 15434              		.loc 1 188 8 view .LVU5363
 15435              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15436              		.loc 1 188 19 is_stmt 0 view .LVU5364
 15437 5439 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15438              		.loc 1 189 8 is_stmt 1 view .LVU5365
 15439              	.LVL912:
 190:sieve_extend.c ****        index_ptr+=step;
 15440              		.loc 1 190 8 view .LVU5366
 15441 543d 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15442              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15443              		.loc 1 190 19 is_stmt 0 view .LVU5367
 15444 5440 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15445              		.loc 1 191 8 is_stmt 1 view .LVU5368
 15446 5444 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15447              	.LVL913:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15448              		.loc 1 181 10 view .LVU5369
 15449 5447 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15450 544a 7644     		jbe	.L978	#,
 182:sieve_extend.c ****        index_ptr+=step;
 15451              		.loc 1 182 8 view .LVU5370
GAS LISTING /tmp/ccgH0yRS.s 			page 413


 15452              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15453              		.loc 1 182 19 is_stmt 0 view .LVU5371
 15454 544c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15455              		.loc 1 183 8 is_stmt 1 view .LVU5372
 15456              	.LVL914:
 184:sieve_extend.c ****        index_ptr+=step;
 15457              		.loc 1 184 8 view .LVU5373
 15458              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15459              		.loc 1 184 19 is_stmt 0 view .LVU5374
 15460 544f 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15461              		.loc 1 185 8 is_stmt 1 view .LVU5375
 15462              	.LVL915:
 186:sieve_extend.c ****        index_ptr+=step;
 15463              		.loc 1 186 8 view .LVU5376
 15464              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15465              		.loc 1 186 19 is_stmt 0 view .LVU5377
 15466 5453 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15467              		.loc 1 187 8 is_stmt 1 view .LVU5378
 15468              	.LVL916:
 188:sieve_extend.c ****        index_ptr+=step;
 15469              		.loc 1 188 8 view .LVU5379
 15470              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15471              		.loc 1 188 19 is_stmt 0 view .LVU5380
 15472 5456 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15473              		.loc 1 189 8 is_stmt 1 view .LVU5381
 15474              	.LVL917:
 190:sieve_extend.c ****        index_ptr+=step;
 15475              		.loc 1 190 8 view .LVU5382
 15476 545a 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15477              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15478              		.loc 1 190 19 is_stmt 0 view .LVU5383
 15479 545d 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15480              		.loc 1 191 8 is_stmt 1 view .LVU5384
 15481 5461 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15482              	.LVL918:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15483              		.loc 1 181 10 view .LVU5385
 15484 5464 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15485 5467 7627     		jbe	.L978	#,
 182:sieve_extend.c ****        index_ptr+=step;
 15486              		.loc 1 182 8 view .LVU5386
 15487              	# sieve_extend.c:182:        *index_ptr |= mask;
 182:sieve_extend.c ****        index_ptr+=step;
 15488              		.loc 1 182 19 is_stmt 0 view .LVU5387
 15489 5469 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_906, offset: 0B], _611
 183:sieve_extend.c ****        *index_ptr |= mask;
 15490              		.loc 1 183 8 is_stmt 1 view .LVU5388
GAS LISTING /tmp/ccgH0yRS.s 			page 414


 15491              	.LVL919:
 184:sieve_extend.c ****        index_ptr+=step;
 15492              		.loc 1 184 8 view .LVU5389
 15493              	# sieve_extend.c:184:        *index_ptr |= mask;
 184:sieve_extend.c ****        index_ptr+=step;
 15494              		.loc 1 184 19 is_stmt 0 view .LVU5390
 15495 546c 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_906, index: _626, offset: 0B], _611
 185:sieve_extend.c ****        *index_ptr |= mask;
 15496              		.loc 1 185 8 is_stmt 1 view .LVU5391
 15497              	.LVL920:
 186:sieve_extend.c ****        index_ptr+=step;
 15498              		.loc 1 186 8 view .LVU5392
 15499              	# sieve_extend.c:186:        *index_ptr |= mask;
 186:sieve_extend.c ****        index_ptr+=step;
 15500              		.loc 1 186 19 is_stmt 0 view .LVU5393
 15501 5470 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _1412, offset: 0B], _611
 187:sieve_extend.c ****        *index_ptr |= mask;
 15502              		.loc 1 187 8 is_stmt 1 view .LVU5394
 15503              	.LVL921:
 188:sieve_extend.c ****        index_ptr+=step;
 15504              		.loc 1 188 8 view .LVU5395
 15505              	# sieve_extend.c:188:        *index_ptr |= mask;
 188:sieve_extend.c ****        index_ptr+=step;
 15506              		.loc 1 188 19 is_stmt 0 view .LVU5396
 15507 5473 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _1412, index: _626, offset: 0B], _611
 189:sieve_extend.c ****        *index_ptr |= mask;
 15508              		.loc 1 189 8 is_stmt 1 view .LVU5397
 15509              	.LVL922:
 190:sieve_extend.c ****        index_ptr+=step;
 15510              		.loc 1 190 8 view .LVU5398
 15511 5477 4C01C7   		add	rdi, r8	# ivtmp.554, tmp784
 15512              	# sieve_extend.c:190:        *index_ptr |= mask;
 190:sieve_extend.c ****        index_ptr+=step;
 15513              		.loc 1 190 19 is_stmt 0 view .LVU5399
 15514 547a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_906, index: _626, step: 4, offset: 0B], _611
 191:sieve_extend.c ****    }
 15515              		.loc 1 191 8 is_stmt 1 view .LVU5400
 15516 547e 4C01C0   		add	rax, r8	# index_ptr, tmp784
 15517              	.LVL923:
 181:sieve_extend.c ****        *index_ptr |= mask;
 15518              		.loc 1 181 10 view .LVU5401
 15519 5481 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 15520 5484 0F8708FF 		ja	.L979	#,
 15520      FFFF
 15521 548a 660F1F44 		.p2align 4
 15521      0000
 15522              		.p2align 3
 15523              	.L978:
 194:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 15524              		.loc 1 194 4 view .LVU5402
 195:sieve_extend.c ****        *index_ptr |= mask;
 15525              		.loc 1 195 4 view .LVU5403
 195:sieve_extend.c ****        *index_ptr |= mask;
 15526              		.loc 1 195 10 view .LVU5404
 15527 5490 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15528 5493 765B     		jbe	.L980	#,
 15529              	.L981:
GAS LISTING /tmp/ccgH0yRS.s 			page 415


 196:sieve_extend.c ****        index_ptr+=step;
 15530              		.loc 1 196 8 view .LVU5405
 15531              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15532              		.loc 1 196 19 is_stmt 0 view .LVU5406
 15533 5495 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15534              		.loc 1 197 8 is_stmt 1 view .LVU5407
 15535              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15536              		.loc 1 197 17 is_stmt 0 view .LVU5408
 15537 5498 4801D0   		add	rax, rdx	# index_ptr, _626
 15538              	.LVL924:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15539              		.loc 1 195 10 is_stmt 1 view .LVU5409
 15540 549b 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15541 549e 7650     		jbe	.L980	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15542              		.loc 1 196 8 view .LVU5410
 15543              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15544              		.loc 1 196 19 is_stmt 0 view .LVU5411
 15545 54a0 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15546              		.loc 1 197 8 is_stmt 1 view .LVU5412
 15547              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15548              		.loc 1 197 17 is_stmt 0 view .LVU5413
 15549 54a3 4801D0   		add	rax, rdx	# index_ptr, _626
 15550              	.LVL925:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15551              		.loc 1 195 10 is_stmt 1 view .LVU5414
 15552 54a6 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15553 54a9 7645     		jbe	.L980	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15554              		.loc 1 196 8 view .LVU5415
 15555              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15556              		.loc 1 196 19 is_stmt 0 view .LVU5416
 15557 54ab 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15558              		.loc 1 197 8 is_stmt 1 view .LVU5417
 15559              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15560              		.loc 1 197 17 is_stmt 0 view .LVU5418
 15561 54ae 4801D0   		add	rax, rdx	# index_ptr, _626
 15562              	.LVL926:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15563              		.loc 1 195 10 is_stmt 1 view .LVU5419
 15564 54b1 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15565 54b4 763A     		jbe	.L980	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15566              		.loc 1 196 8 view .LVU5420
 15567              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15568              		.loc 1 196 19 is_stmt 0 view .LVU5421
 15569 54b6 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
GAS LISTING /tmp/ccgH0yRS.s 			page 416


 197:sieve_extend.c ****    }
 15570              		.loc 1 197 8 is_stmt 1 view .LVU5422
 15571              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15572              		.loc 1 197 17 is_stmt 0 view .LVU5423
 15573 54b9 4801D0   		add	rax, rdx	# index_ptr, _626
 15574              	.LVL927:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15575              		.loc 1 195 10 is_stmt 1 view .LVU5424
 15576 54bc 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15577 54bf 762F     		jbe	.L980	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15578              		.loc 1 196 8 view .LVU5425
 15579              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15580              		.loc 1 196 19 is_stmt 0 view .LVU5426
 15581 54c1 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15582              		.loc 1 197 8 is_stmt 1 view .LVU5427
 15583              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15584              		.loc 1 197 17 is_stmt 0 view .LVU5428
 15585 54c4 4801D0   		add	rax, rdx	# index_ptr, _626
 15586              	.LVL928:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15587              		.loc 1 195 10 is_stmt 1 view .LVU5429
 15588 54c7 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15589 54ca 7624     		jbe	.L980	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15590              		.loc 1 196 8 view .LVU5430
 15591              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15592              		.loc 1 196 19 is_stmt 0 view .LVU5431
 15593 54cc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15594              		.loc 1 197 8 is_stmt 1 view .LVU5432
 15595              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15596              		.loc 1 197 17 is_stmt 0 view .LVU5433
 15597 54cf 4801D0   		add	rax, rdx	# index_ptr, _626
 15598              	.LVL929:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15599              		.loc 1 195 10 is_stmt 1 view .LVU5434
 15600 54d2 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15601 54d5 7619     		jbe	.L980	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15602              		.loc 1 196 8 view .LVU5435
 15603              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15604              		.loc 1 196 19 is_stmt 0 view .LVU5436
 15605 54d7 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15606              		.loc 1 197 8 is_stmt 1 view .LVU5437
 15607              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15608              		.loc 1 197 17 is_stmt 0 view .LVU5438
 15609 54da 4801D0   		add	rax, rdx	# index_ptr, _626
GAS LISTING /tmp/ccgH0yRS.s 			page 417


 15610              	.LVL930:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15611              		.loc 1 195 10 is_stmt 1 view .LVU5439
 15612 54dd 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15613 54e0 760E     		jbe	.L980	#,
 196:sieve_extend.c ****        index_ptr+=step;
 15614              		.loc 1 196 8 view .LVU5440
 15615              	# sieve_extend.c:196:        *index_ptr |= mask;
 196:sieve_extend.c ****        index_ptr+=step;
 15616              		.loc 1 196 19 is_stmt 0 view .LVU5441
 15617 54e2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_897, offset: 0B], _611
 197:sieve_extend.c ****    }
 15618              		.loc 1 197 8 is_stmt 1 view .LVU5442
 15619              	# sieve_extend.c:197:        index_ptr+=step;
 197:sieve_extend.c ****    }
 15620              		.loc 1 197 17 is_stmt 0 view .LVU5443
 15621 54e5 4801D0   		add	rax, rdx	# index_ptr, _626
 15622              	.LVL931:
 195:sieve_extend.c ****        *index_ptr |= mask;
 15623              		.loc 1 195 10 is_stmt 1 view .LVU5444
 15624 54e8 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15625 54eb 77A8     		ja	.L981	#,
 15626 54ed 0F1F00   		.p2align 4
 15627              		.p2align 3
 15628              	.L980:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15629              		.loc 1 200 4 view .LVU5445
 15630              	# sieve_extend.c:200:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15631              		.loc 1 200 7 is_stmt 0 view .LVU5446
 15632 54f0 4839C5   		cmp	rbp, rax	# _494, index_ptr
 15633 54f3 7463     		je	.L1509	#,
 15634              	.LVL932:
 15635              	.L982:
 200:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 15636              		.loc 1 200 7 view .LVU5447
 15637              	.LBE673:
 15638              	.LBE675:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15639              		.loc 1 418 77 is_stmt 1 view .LVU5448
 15640              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15641              		.loc 1 418 83 is_stmt 0 view .LVU5449
 15642 54f5 4C01DE   		add	rsi, r11	# index, step
 15643              	.LVL933:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15644              		.loc 1 418 50 is_stmt 1 view .LVU5450
 15645              	# sieve_extend.c:418:     for (register counter_t index = range_start; index < range_stop_unique; i
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15646              		.loc 1 418 5 is_stmt 0 view .LVU5451
 15647 54f8 4939F5   		cmp	r13, rsi	# _399, index
 15648 54fb 0F876FFE 		ja	.L983	#,
 15648      FFFF
 15649              	.L984:
 15650              	.LVL934:
 418:sieve_extend.c ****         applyMask(bitarray, step, range_stop, markmask(index), wordindex(index));
 15651              		.loc 1 418 5 view .LVU5452
GAS LISTING /tmp/ccgH0yRS.s 			page 418


 15652              	.LBE670:
 15653              	.LBE669:
 15654              	.LBE668:
 946:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 15655              		.loc 1 946 9 is_stmt 1 view .LVU5453
 15656              	.LBB679:
 15657              	.LBI679:
 128:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 15658              		.loc 1 128 25 view .LVU5454
 15659              	.LBB680:
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15660              		.loc 1 131 4 view .LVU5455
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15661              		.loc 1 132 4 view .LVU5456
 15662              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15663              		.loc 1 131 23 is_stmt 0 view .LVU5457
 15664 5501 4D89D5   		mov	r13, r10	# index_word, _411
 15665              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15666              		.loc 1 132 15 view .LVU5458
 15667 5504 4D89D3   		mov	r11, r10	# index_bit, _411
 15668              	.LVL935:
 15669              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 15670              		.loc 1 131 23 view .LVU5459
 15671 5507 49C1ED06 		shr	r13, 6	# index_word,
 15672              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 15673              		.loc 1 132 15 view .LVU5460
 15674 550b 4183E33F 		and	r11d, 63	# index_bit,
 15675              	.LVL936:
 133:sieve_extend.c ****    index += distance;
 15676              		.loc 1 133 4 is_stmt 1 view .LVU5461
 15677              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15678              		.loc 1 133 89 is_stmt 0 view .LVU5462
 15679 550f 4E8B04EB 		mov	r8, QWORD PTR [rbx+r13*8]	# *_582, *_582
 15680 5513 C4C2A3F7 		shrx	rdx, r8, r11	# tmp769, *_582, index_bit
 15680      D0
 15681              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15682              		.loc 1 133 66 view .LVU5463
 15683 5518 48F7D2   		not	rdx	# tmp771
 15684              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15685              		.loc 1 133 76 view .LVU5464
 15686 551b 4A8D34ED 		lea	rsi, 0[0+r13*8]	# _581,
 15686      00000000 
 15687              	.LVL937:
 15688              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 15689              		.loc 1 133 25 view .LVU5465
 15690 5523 F34C0FBC 		tzcnt	r9, rdx	# distance, tmp771
 15690      CA
 15691              	.LVL938:
 134:sieve_extend.c ****    distance += index_bit;
GAS LISTING /tmp/ccgH0yRS.s 			page 419


 15692              		.loc 1 134 4 is_stmt 1 view .LVU5466
 15693              	# sieve_extend.c:134:    index += distance;
 134:sieve_extend.c ****    distance += index_bit;
 15694              		.loc 1 134 10 is_stmt 0 view .LVU5467
 15695 5528 4B8D0C0A 		lea	rcx, [r10+r9]	# index,
 15696              	.LVL939:
 135:sieve_extend.c **** 
 15697              		.loc 1 135 4 is_stmt 1 view .LVU5468
 137:sieve_extend.c ****        index_word++;
 15698              		.loc 1 137 4 view .LVU5469
 137:sieve_extend.c ****        index_word++;
 15699              		.loc 1 137 10 view .LVU5470
 15700              	# sieve_extend.c:135:    distance += index_bit;
 135:sieve_extend.c **** 
 15701              		.loc 1 135 13 is_stmt 0 view .LVU5471
 15702 552c 4D01D9   		add	r9, r11	# distance, index_bit
 15703              	.LVL940:
 15704              	# sieve_extend.c:137:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 137:sieve_extend.c ****        index_word++;
 15705              		.loc 1 137 10 view .LVU5472
 15706 552f 4983F940 		cmp	r9, 64	# distance,
 15707 5533 7433     		je	.L1510	#,
 15708              	.LVL941:
 15709              	.L1351:
 143:sieve_extend.c **** }
 15710              		.loc 1 143 4 is_stmt 1 view .LVU5473
 143:sieve_extend.c **** }
 15711              		.loc 1 143 4 is_stmt 0 view .LVU5474
 15712              	.LBE680:
 15713              	.LBE679:
 947:sieve_extend.c ****     }
 15714              		.loc 1 947 9 is_stmt 1 view .LVU5475
 15715              	# sieve_extend.c:947:         start = prime * prime * 2 + prime * 2;
 947:sieve_extend.c ****     }
 15716              		.loc 1 947 35 is_stmt 0 view .LVU5476
 15717 5535 4C8D5101 		lea	r10, 1[rcx]	# _411,
 15718              	# sieve_extend.c:947:         start = prime * prime * 2 + prime * 2;
 947:sieve_extend.c ****     }
 15719              		.loc 1 947 15 view .LVU5477
 15720 5539 4C89D6   		mov	rsi, r10	# tmp797, _411
 15721 553c 480FAFF1 		imul	rsi, rcx	# tmp797, index
 15722              	.LVL942:
 947:sieve_extend.c ****     }
 15723              		.loc 1 947 15 view .LVU5478
 15724 5540 4801F6   		add	rsi, rsi	# index
 15725              	.LVL943:
 941:sieve_extend.c ****         step  = prime * 2 + 1;
 15726              		.loc 1 941 11 is_stmt 1 view .LVU5479
 15727 5543 4939F4   		cmp	r12, rsi	# block_stop, index
 15728 5546 0F83B4FD 		jnb	.L968	#,
 15728      FFFF
 941:sieve_extend.c ****         step  = prime * 2 + 1;
 15729              		.loc 1 941 11 is_stmt 0 view .LVU5480
 15730 554c E903F7FF 		jmp	.L1487	#
 15730      FF
 15731              	.LVL944:
 15732              		.p2align 4,,7
GAS LISTING /tmp/ccgH0yRS.s 			page 420


 15733 5551 0F1F8000 		.p2align 3
 15733      000000
 15734              	.L1509:
 15735              	.LBB682:
 15736              	.LBB678:
 15737              	.LBB677:
 15738              	.LBB676:
 15739              	.LBB674:
 201:sieve_extend.c ****    }
 15740              		.loc 1 201 7 is_stmt 1 view .LVU5481
 15741              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 15742              		.loc 1 201 27 is_stmt 0 view .LVU5482
 15743 5558 48234C24 		and	rcx, QWORD PTR 8[rsp]	# tmp789, %sfp
 15743      08
 15744              	.LVL945:
 15745              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 15746              		.loc 1 201 18 view .LVU5483
 15747 555d 48094D00 		or	QWORD PTR 0[rbp], rcx	# *index_ptr_902, tmp789
 15748 5561 EB92     		jmp	.L982	#
 15749              	.LVL946:
 15750              		.p2align 4,,7
 15751 5563 0F1F4400 		.p2align 3
 15751      00
 15752              	.L1510:
 201:sieve_extend.c ****    }
 15753              		.loc 1 201 18 view .LVU5484
 15754              	.LBE674:
 15755              	.LBE676:
 15756              	.LBE677:
 15757              	.LBE678:
 15758              	.LBE682:
 15759              	.LBB683:
 15760              	.LBB681:
 138:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 15761              		.loc 1 138 8 is_stmt 1 view .LVU5485
 139:sieve_extend.c ****        index += distance;
 15762              		.loc 1 139 8 view .LVU5486
 15763              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 15764              		.loc 1 139 48 is_stmt 0 view .LVU5487
 15765 5568 4C8B5433 		mov	r10, QWORD PTR 8[rbx+rsi]	# *_594, *_594
 15765      08
 15766 556d 49F7D2   		not	r10	# tmp790
 15767              	.LVL947:
 140:sieve_extend.c ****    }
 15768              		.loc 1 140 8 is_stmt 1 view .LVU5488
 15769              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 15770              		.loc 1 139 17 is_stmt 0 view .LVU5489
 15771 5570 F34D0FBC 		tzcnt	r14, r10	# distance, tmp790
 15771      F2
 15772              	.LVL948:
 15773              	# sieve_extend.c:140:        index += distance;
 140:sieve_extend.c ****    }
 15774              		.loc 1 140 14 view .LVU5490
GAS LISTING /tmp/ccgH0yRS.s 			page 421


 15775 5575 4C01F1   		add	rcx, r14	# index, distance
 15776              	.LVL949:
 137:sieve_extend.c ****        index_word++;
 15777              		.loc 1 137 10 is_stmt 1 view .LVU5491
 143:sieve_extend.c **** }
 15778              		.loc 1 143 4 view .LVU5492
 143:sieve_extend.c **** }
 15779              		.loc 1 143 4 is_stmt 0 view .LVU5493
 15780              	.LBE681:
 15781              	.LBE683:
 947:sieve_extend.c ****     }
 15782              		.loc 1 947 9 is_stmt 1 view .LVU5494
 15783 5578 EBBB     		jmp	.L1351	#
 15784              	.LVL950:
 15785 557a 660F1F44 		.p2align 4,,7
 15785      0000
 15786              		.p2align 3
 15787              	.L973:
 950:sieve_extend.c ****         step  = prime * 2 + 1;
 15788              		.loc 1 950 11 view .LVU5495
 15789 5580 4939F4   		cmp	r12, rsi	# block_stop, index
 15790              	.LBB684:
 15791              	.LBB685:
 15792              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15793              		.loc 1 344 39 is_stmt 0 view .LVU5496
 15794 5583 BD010000 		mov	ebp, 1	# tmp827,
 15794      00
 15795              	.LBE685:
 15796              	.LBE684:
 15797              	# sieve_extend.c:950:     while (start <= block_stop) {
 950:sieve_extend.c ****         step  = prime * 2 + 1;
 15798              		.loc 1 950 11 view .LVU5497
 15799 5588 0F82C6F6 		jb	.L1487	#,
 15799      FFFF
 15800              	.LVL951:
 15801              	.L977:
 951:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15802              		.loc 1 951 9 is_stmt 1 view .LVU5498
 15803              	# sieve_extend.c:952:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 952:sieve_extend.c ****         if likely(start <= block_stop)
 15804              		.loc 1 952 12 is_stmt 0 view .LVU5499
 15805 558e 4D39FA   		cmp	r10, r15	# _411, block_start
 15806              	# sieve_extend.c:951:         step  = prime * 2 + 1;
 951:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 15807              		.loc 1 951 15 view .LVU5500
 15808 5591 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 15808      01
 15809              	.LVL952:
 952:sieve_extend.c ****         if likely(start <= block_stop)
 15810              		.loc 1 952 9 is_stmt 1 view .LVU5501
 15811              	# sieve_extend.c:952:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 952:sieve_extend.c ****         if likely(start <= block_stop)
 15812              		.loc 1 952 12 is_stmt 0 view .LVU5502
 15813 5596 0F874C01 		ja	.L986	#,
 15813      0000
 15814 559c 0F1F4000 		.p2align 4
GAS LISTING /tmp/ccgH0yRS.s 			page 422


 15815              		.p2align 3
 15816              	.L1512:
 952:sieve_extend.c ****         if likely(start <= block_stop)
 15817              		.loc 1 952 47 is_stmt 1 view .LVU5503
 15818              	# sieve_extend.c:952:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 952:sieve_extend.c ****         if likely(start <= block_stop)
 15819              		.loc 1 952 67 is_stmt 0 view .LVU5504
 15820 55a0 4A8D0439 		lea	rax, [rcx+r15]	# _415,
 15821              	# sieve_extend.c:952:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 952:sieve_extend.c ****         if likely(start <= block_stop)
 15822              		.loc 1 952 108 view .LVU5505
 15823 55a4 31D2     		xor	edx, edx	# tmp801
 15824              	# sieve_extend.c:952:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 952:sieve_extend.c ****         if likely(start <= block_stop)
 15825              		.loc 1 952 75 view .LVU5506
 15826 55a6 488D3408 		lea	rsi, [rax+rcx]	# tmp799,
 15827              	# sieve_extend.c:952:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 952:sieve_extend.c ****         if likely(start <= block_stop)
 15828              		.loc 1 952 108 view .LVU5507
 15829 55aa 48F7F7   		div	rdi	# step
 15830              	.LVL953:
 15831              	# sieve_extend.c:952:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 952:sieve_extend.c ****         if likely(start <= block_stop)
 15832              		.loc 1 952 53 view .LVU5508
 15833 55ad 4829D6   		sub	rsi, rdx	# index, tmp801
 15834              	.LVL954:
 953:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 15835              		.loc 1 953 9 is_stmt 1 view .LVU5509
 15836              	# sieve_extend.c:953:         if likely(start <= block_stop)
 953:sieve_extend.c ****             setBitsTrue_largeSteps(bitarray, start, step, block_stop);
 15837              		.loc 1 953 12 is_stmt 0 view .LVU5510
 15838 55b0 4939F4   		cmp	r12, rsi	# block_stop, index
 15839 55b3 0F82D700 		jb	.L991	#,
 15839      0000
 15840              	.LVL955:
 15841              	.L990:
 15842              	.LBB688:
 15843              	.LBB686:
 344:sieve_extend.c ****     }
 15844              		.loc 1 344 9 is_stmt 1 view .LVU5511
 15845              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15846              		.loc 1 344 36 is_stmt 0 view .LVU5512
 15847 55b9 4889F1   		mov	rcx, rsi	# tmp810, index
 15848              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15849              		.loc 1 344 39 view .LVU5513
 15850 55bc C462C9F7 		shlx	r11, rbp, rsi	# tmp813, tmp827, index
 15850      DD
 15851              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15852              		.loc 1 344 36 view .LVU5514
 15853 55c1 48C1E906 		shr	rcx, 6	# tmp810,
 15854              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15855              		.loc 1 343 68 view .LVU5515
 15856 55c5 4801FE   		add	rsi, rdi	# index, step
GAS LISTING /tmp/ccgH0yRS.s 			page 423


 15857              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15858              		.loc 1 344 36 view .LVU5516
 15859 55c8 4C091CCB 		or	QWORD PTR [rbx+rcx*8], r11	# *_426, tmp813
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15860              		.loc 1 343 62 is_stmt 1 view .LVU5517
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15861              		.loc 1 343 41 view .LVU5518
 15862              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15863              		.loc 1 343 5 is_stmt 0 view .LVU5519
 15864 55cc 4939F4   		cmp	r12, rsi	# block_stop, index
 15865 55cf 0F82BB00 		jb	.L991	#,
 15865      0000
 344:sieve_extend.c ****     }
 15866              		.loc 1 344 9 is_stmt 1 view .LVU5520
 15867              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15868              		.loc 1 344 36 is_stmt 0 view .LVU5521
 15869 55d5 4989F5   		mov	r13, rsi	# tmp926, index
 15870              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15871              		.loc 1 344 39 view .LVU5522
 15872 55d8 C462C9F7 		shlx	r8, rbp, rsi	# tmp929, tmp827, index
 15872      C5
 15873              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15874              		.loc 1 344 36 view .LVU5523
 15875 55dd 49C1ED06 		shr	r13, 6	# tmp926,
 15876              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15877              		.loc 1 343 68 view .LVU5524
 15878 55e1 4801FE   		add	rsi, rdi	# index, step
 15879              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15880              		.loc 1 344 36 view .LVU5525
 15881 55e4 4E0904EB 		or	QWORD PTR [rbx+r13*8], r8	# *_426, tmp929
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15882              		.loc 1 343 62 is_stmt 1 view .LVU5526
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15883              		.loc 1 343 41 view .LVU5527
 15884              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15885              		.loc 1 343 5 is_stmt 0 view .LVU5528
 15886 55e8 4939F4   		cmp	r12, rsi	# block_stop, index
 15887 55eb 0F829F00 		jb	.L991	#,
 15887      0000
 344:sieve_extend.c ****     }
 15888              		.loc 1 344 9 is_stmt 1 view .LVU5529
 15889              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15890              		.loc 1 344 36 is_stmt 0 view .LVU5530
 15891 55f1 4989F1   		mov	r9, rsi	# tmp931, index
 15892              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15893              		.loc 1 344 39 view .LVU5531
 15894 55f4 C462C9F7 		shlx	r14, rbp, rsi	# tmp934, tmp827, index
GAS LISTING /tmp/ccgH0yRS.s 			page 424


 15894      F5
 15895              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15896              		.loc 1 344 36 view .LVU5532
 15897 55f9 49C1E906 		shr	r9, 6	# tmp931,
 15898              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15899              		.loc 1 343 68 view .LVU5533
 15900 55fd 4801FE   		add	rsi, rdi	# index, step
 15901              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15902              		.loc 1 344 36 view .LVU5534
 15903 5600 4E0934CB 		or	QWORD PTR [rbx+r9*8], r14	# *_426, tmp934
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15904              		.loc 1 343 62 is_stmt 1 view .LVU5535
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15905              		.loc 1 343 41 view .LVU5536
 15906              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15907              		.loc 1 343 5 is_stmt 0 view .LVU5537
 15908 5604 4939F4   		cmp	r12, rsi	# block_stop, index
 15909 5607 0F828300 		jb	.L991	#,
 15909      0000
 344:sieve_extend.c ****     }
 15910              		.loc 1 344 9 is_stmt 1 view .LVU5538
 15911              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15912              		.loc 1 344 36 is_stmt 0 view .LVU5539
 15913 560d 4889F0   		mov	rax, rsi	# tmp936, index
 15914              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15915              		.loc 1 344 39 view .LVU5540
 15916 5610 C4E2C9F7 		shlx	rdx, rbp, rsi	# tmp939, tmp827, index
 15916      D5
 15917              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15918              		.loc 1 344 36 view .LVU5541
 15919 5615 48C1E806 		shr	rax, 6	# tmp936,
 15920              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15921              		.loc 1 343 68 view .LVU5542
 15922 5619 4801FE   		add	rsi, rdi	# index, step
 15923              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15924              		.loc 1 344 36 view .LVU5543
 15925 561c 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_426, tmp939
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15926              		.loc 1 343 62 is_stmt 1 view .LVU5544
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15927              		.loc 1 343 41 view .LVU5545
 15928              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15929              		.loc 1 343 5 is_stmt 0 view .LVU5546
 15930 5620 4939F4   		cmp	r12, rsi	# block_stop, index
 15931 5623 726B     		jb	.L991	#,
 344:sieve_extend.c ****     }
 15932              		.loc 1 344 9 is_stmt 1 view .LVU5547
GAS LISTING /tmp/ccgH0yRS.s 			page 425


 15933              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15934              		.loc 1 344 36 is_stmt 0 view .LVU5548
 15935 5625 4889F1   		mov	rcx, rsi	# tmp941, index
 15936              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15937              		.loc 1 344 39 view .LVU5549
 15938 5628 C462C9F7 		shlx	r11, rbp, rsi	# tmp944, tmp827, index
 15938      DD
 15939              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15940              		.loc 1 344 36 view .LVU5550
 15941 562d 48C1E906 		shr	rcx, 6	# tmp941,
 15942              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15943              		.loc 1 343 68 view .LVU5551
 15944 5631 4801FE   		add	rsi, rdi	# index, step
 15945              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15946              		.loc 1 344 36 view .LVU5552
 15947 5634 4C091CCB 		or	QWORD PTR [rbx+rcx*8], r11	# *_426, tmp944
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15948              		.loc 1 343 62 is_stmt 1 view .LVU5553
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15949              		.loc 1 343 41 view .LVU5554
 15950              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15951              		.loc 1 343 5 is_stmt 0 view .LVU5555
 15952 5638 4939F4   		cmp	r12, rsi	# block_stop, index
 15953 563b 7253     		jb	.L991	#,
 344:sieve_extend.c ****     }
 15954              		.loc 1 344 9 is_stmt 1 view .LVU5556
 15955              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15956              		.loc 1 344 36 is_stmt 0 view .LVU5557
 15957 563d 4989F5   		mov	r13, rsi	# tmp946, index
 15958              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15959              		.loc 1 344 39 view .LVU5558
 15960 5640 C462C9F7 		shlx	r8, rbp, rsi	# tmp949, tmp827, index
 15960      C5
 15961              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15962              		.loc 1 344 36 view .LVU5559
 15963 5645 49C1ED06 		shr	r13, 6	# tmp946,
 15964              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15965              		.loc 1 343 68 view .LVU5560
 15966 5649 4801FE   		add	rsi, rdi	# index, step
 15967              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15968              		.loc 1 344 36 view .LVU5561
 15969 564c 4E0904EB 		or	QWORD PTR [rbx+r13*8], r8	# *_426, tmp949
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15970              		.loc 1 343 62 is_stmt 1 view .LVU5562
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15971              		.loc 1 343 41 view .LVU5563
GAS LISTING /tmp/ccgH0yRS.s 			page 426


 15972              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15973              		.loc 1 343 5 is_stmt 0 view .LVU5564
 15974 5650 4939F4   		cmp	r12, rsi	# block_stop, index
 15975 5653 723B     		jb	.L991	#,
 344:sieve_extend.c ****     }
 15976              		.loc 1 344 9 is_stmt 1 view .LVU5565
 15977              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15978              		.loc 1 344 36 is_stmt 0 view .LVU5566
 15979 5655 4989F1   		mov	r9, rsi	# tmp951, index
 15980              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15981              		.loc 1 344 39 view .LVU5567
 15982 5658 C462C9F7 		shlx	r14, rbp, rsi	# tmp954, tmp827, index
 15982      F5
 15983              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15984              		.loc 1 344 36 view .LVU5568
 15985 565d 49C1E906 		shr	r9, 6	# tmp951,
 15986              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15987              		.loc 1 343 68 view .LVU5569
 15988 5661 4801FE   		add	rsi, rdi	# index, step
 15989              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 15990              		.loc 1 344 36 view .LVU5570
 15991 5664 4E0934CB 		or	QWORD PTR [rbx+r9*8], r14	# *_426, tmp954
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15992              		.loc 1 343 62 is_stmt 1 view .LVU5571
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15993              		.loc 1 343 41 view .LVU5572
 15994              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 15995              		.loc 1 343 5 is_stmt 0 view .LVU5573
 15996 5668 4939F4   		cmp	r12, rsi	# block_stop, index
 15997 566b 7223     		jb	.L991	#,
 344:sieve_extend.c ****     }
 15998              		.loc 1 344 9 is_stmt 1 view .LVU5574
 15999              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 16000              		.loc 1 344 36 is_stmt 0 view .LVU5575
 16001 566d 4889F0   		mov	rax, rsi	# tmp956, index
 16002              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 16003              		.loc 1 344 39 view .LVU5576
 16004 5670 C4E2C9F7 		shlx	rdx, rbp, rsi	# tmp959, tmp827, index
 16004      D5
 16005              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
 344:sieve_extend.c ****     }
 16006              		.loc 1 344 36 view .LVU5577
 16007 5675 48C1E806 		shr	rax, 6	# tmp956,
 16008              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 16009              		.loc 1 343 68 view .LVU5578
 16010 5679 4801FE   		add	rsi, rdi	# index, step
 16011              	# sieve_extend.c:344:         bitarray[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccgH0yRS.s 			page 427


 344:sieve_extend.c ****     }
 16012              		.loc 1 344 36 view .LVU5579
 16013 567c 480914C3 		or	QWORD PTR [rbx+rax*8], rdx	# *_426, tmp959
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 16014              		.loc 1 343 62 is_stmt 1 view .LVU5580
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 16015              		.loc 1 343 41 view .LVU5581
 16016              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 16017              		.loc 1 343 5 is_stmt 0 view .LVU5582
 16018 5680 4939F4   		cmp	r12, rsi	# block_stop, index
 16019 5683 0F8330FF 		jnb	.L990	#,
 16019      FFFF
 16020 5689 0F1F8000 		.p2align 4
 16020      000000
 16021              		.p2align 3
 16022              	.L991:
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 16023              		.loc 1 343 5 view .LVU5583
 16024              	.LBE686:
 16025              	.LBE688:
 955:sieve_extend.c ****         start = prime * prime * 2 + prime * 2;
 16026              		.loc 1 955 9 is_stmt 1 view .LVU5584
 16027              	.LVL956:
 16028              	.LBB689:
 16029              	.LBI689:
 128:sieve_extend.c ****     // return searchBitFalse(bitarray, index);
 16030              		.loc 1 128 25 view .LVU5585
 16031              	.LBB690:
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 16032              		.loc 1 131 4 view .LVU5586
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 16033              		.loc 1 132 4 view .LVU5587
 16034              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 16035              		.loc 1 131 23 is_stmt 0 view .LVU5588
 16036 5690 4C89D1   		mov	rcx, r10	# index_word, _411
 16037              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 16038              		.loc 1 132 15 view .LVU5589
 16039 5693 4C89D7   		mov	rdi, r10	# index_bit, _411
 16040              	.LVL957:
 16041              	# sieve_extend.c:131:    register counter_t index_word = wordindex(index);
 131:sieve_extend.c ****    bitshift_t index_bit  = bitindex_calc(index);
 16042              		.loc 1 131 23 view .LVU5590
 16043 5696 48C1E906 		shr	rcx, 6	# index_word,
 16044              	# sieve_extend.c:132:    bitshift_t index_bit  = bitindex_calc(index);
 132:sieve_extend.c ****    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[index_word] >> index_bi
 16045              		.loc 1 132 15 view .LVU5591
 16046 569a 83E73F   		and	edi, 63	# index_bit,
 16047              	.LVL958:
 133:sieve_extend.c ****    index += distance;
 16048              		.loc 1 133 4 is_stmt 1 view .LVU5592
 16049              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 16050              		.loc 1 133 89 is_stmt 0 view .LVU5593
 16051 569d 4C8B1CCB 		mov	r11, QWORD PTR [rbx+rcx*8]	# *_665, *_665
GAS LISTING /tmp/ccgH0yRS.s 			page 428


 16052 56a1 C442C3F7 		shrx	r13, r11, rdi	# tmp805, *_665, index_bit
 16052      EB
 16053              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 16054              		.loc 1 133 66 view .LVU5594
 16055 56a6 49F7D5   		not	r13	# tmp807
 16056              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 16057              		.loc 1 133 76 view .LVU5595
 16058 56a9 488D34CD 		lea	rsi, 0[0+rcx*8]	# _664,
 16058      00000000 
 16059              	# sieve_extend.c:133:    register  bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitarray[i
 133:sieve_extend.c ****    index += distance;
 16060              		.loc 1 133 25 view .LVU5596
 16061 56b1 F34D0FBC 		tzcnt	r8, r13	# distance, tmp807
 16061      C5
 16062              	.LVL959:
 134:sieve_extend.c ****    distance += index_bit;
 16063              		.loc 1 134 4 is_stmt 1 view .LVU5597
 16064              	# sieve_extend.c:134:    index += distance;
 134:sieve_extend.c ****    distance += index_bit;
 16065              		.loc 1 134 10 is_stmt 0 view .LVU5598
 16066 56b6 4B8D0C02 		lea	rcx, [r10+r8]	# index,
 16067              	.LVL960:
 135:sieve_extend.c **** 
 16068              		.loc 1 135 4 is_stmt 1 view .LVU5599
 137:sieve_extend.c ****        index_word++;
 16069              		.loc 1 137 4 view .LVU5600
 137:sieve_extend.c ****        index_word++;
 16070              		.loc 1 137 10 view .LVU5601
 16071              	# sieve_extend.c:135:    distance += index_bit;
 135:sieve_extend.c **** 
 16072              		.loc 1 135 13 is_stmt 0 view .LVU5602
 16073 56ba 4901F8   		add	r8, rdi	# distance, index_bit
 16074              	.LVL961:
 16075              	# sieve_extend.c:137:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 137:sieve_extend.c ****        index_word++;
 16076              		.loc 1 137 10 view .LVU5603
 16077 56bd 4983F840 		cmp	r8, 64	# distance,
 16078 56c1 7435     		je	.L1511	#,
 143:sieve_extend.c **** }
 16079              		.loc 1 143 4 is_stmt 1 view .LVU5604
 16080              	.LVL962:
 143:sieve_extend.c **** }
 16081              		.loc 1 143 4 is_stmt 0 view .LVU5605
 16082              	.LBE690:
 16083              	.LBE689:
 956:sieve_extend.c ****     }
 16084              		.loc 1 956 9 is_stmt 1 view .LVU5606
 16085              	# sieve_extend.c:956:         start = prime * prime * 2 + prime * 2;
 956:sieve_extend.c ****     }
 16086              		.loc 1 956 35 is_stmt 0 view .LVU5607
 16087 56c3 4C8D5101 		lea	r10, 1[rcx]	# _411,
 16088              	# sieve_extend.c:956:         start = prime * prime * 2 + prime * 2;
 956:sieve_extend.c ****     }
 16089              		.loc 1 956 15 view .LVU5608
 16090 56c7 4C89D6   		mov	rsi, r10	# tmp822, _411
GAS LISTING /tmp/ccgH0yRS.s 			page 429


 16091 56ca 480FAFF1 		imul	rsi, rcx	# tmp822, index
 16092 56ce 4801F6   		add	rsi, rsi	# index
 16093              	.LVL963:
 950:sieve_extend.c ****         step  = prime * 2 + 1;
 16094              		.loc 1 950 11 is_stmt 1 view .LVU5609
 16095 56d1 4939F4   		cmp	r12, rsi	# block_stop, index
 16096 56d4 0F827AF5 		jb	.L1487	#,
 16096      FFFF
 951:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 16097              		.loc 1 951 9 view .LVU5610
 16098              	# sieve_extend.c:952:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 952:sieve_extend.c ****         if likely(start <= block_stop)
 16099              		.loc 1 952 12 is_stmt 0 view .LVU5611
 16100 56da 4D39FA   		cmp	r10, r15	# _411, block_start
 16101              	# sieve_extend.c:951:         step  = prime * 2 + 1;
 951:sieve_extend.c ****         if likely(block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start +
 16102              		.loc 1 951 15 view .LVU5612
 16103 56dd 488D7C09 		lea	rdi, 1[rcx+rcx]	# step,
 16103      01
 16104              	.LVL964:
 952:sieve_extend.c ****         if likely(start <= block_stop)
 16105              		.loc 1 952 9 is_stmt 1 view .LVU5613
 16106              	# sieve_extend.c:952:         if likely(block_start >= (prime + 1)) start = block_start + prime + p
 952:sieve_extend.c ****         if likely(start <= block_stop)
 16107              		.loc 1 952 12 is_stmt 0 view .LVU5614
 16108 56e2 0F86B8FE 		jbe	.L1512	#,
 16108      FFFF
 16109              	.LVL965:
 16110              	.L986:
 16111              	.LBB692:
 16112              	.LBB687:
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 16113              		.loc 1 343 41 is_stmt 1 view .LVU5615
 16114              	# sieve_extend.c:343:     for (counter_t index = range_start; index <= range_stop; index += step) {
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 16115              		.loc 1 343 5 is_stmt 0 view .LVU5616
 16116 56e8 4939F4   		cmp	r12, rsi	# block_stop, index
 16117 56eb 72A3     		jb	.L991	#,
 16118 56ed E9C7FEFF 		jmp	.L990	#
 16118      FF
 16119              	.LVL966:
 16120              		.p2align 4,,7
 16121 56f2 660F1F44 		.p2align 3
 16121      0000
 16122              	.L1511:
 343:sieve_extend.c ****         bitarray[wordindex(index)] |= markmask(index);
 16123              		.loc 1 343 5 view .LVU5617
 16124              	.LBE687:
 16125              	.LBE692:
 16126              	.LBB693:
 16127              	.LBB691:
 138:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 16128              		.loc 1 138 8 is_stmt 1 view .LVU5618
 139:sieve_extend.c ****        index += distance;
 16129              		.loc 1 139 8 view .LVU5619
 16130              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
GAS LISTING /tmp/ccgH0yRS.s 			page 430


 16131              		.loc 1 139 48 is_stmt 0 view .LVU5620
 16132 56f8 4C8B4C33 		mov	r9, QWORD PTR 8[rbx+rsi]	# *_677, *_677
 16132      08
 16133 56fd 49F7D1   		not	r9	# tmp815
 16134              	.LVL967:
 140:sieve_extend.c ****    }
 16135              		.loc 1 140 8 is_stmt 1 view .LVU5621
 16136              	# sieve_extend.c:139:        distance = (bitshift_t) __builtin_ctzll(~(bitarray[index_word]));
 139:sieve_extend.c ****        index += distance;
 16137              		.loc 1 139 17 is_stmt 0 view .LVU5622
 16138 5700 F34D0FBC 		tzcnt	r14, r9	# distance, tmp815
 16138      F1
 16139              	.LVL968:
 16140              	# sieve_extend.c:140:        index += distance;
 140:sieve_extend.c ****    }
 16141              		.loc 1 140 14 view .LVU5623
 16142 5705 4C01F1   		add	rcx, r14	# index, distance
 16143              	.LVL969:
 137:sieve_extend.c ****        index_word++;
 16144              		.loc 1 137 10 is_stmt 1 view .LVU5624
 143:sieve_extend.c **** }
 16145              		.loc 1 143 4 view .LVU5625
 143:sieve_extend.c **** }
 16146              		.loc 1 143 4 is_stmt 0 view .LVU5626
 16147              	.LBE691:
 16148              	.LBE693:
 956:sieve_extend.c ****     }
 16149              		.loc 1 956 9 is_stmt 1 view .LVU5627
 16150              	# sieve_extend.c:956:         start = prime * prime * 2 + prime * 2;
 956:sieve_extend.c ****     }
 16151              		.loc 1 956 35 is_stmt 0 view .LVU5628
 16152 5708 4C8D5101 		lea	r10, 1[rcx]	# _411,
 16153              	# sieve_extend.c:956:         start = prime * prime * 2 + prime * 2;
 956:sieve_extend.c ****     }
 16154              		.loc 1 956 15 view .LVU5629
 16155 570c 4C89D0   		mov	rax, r10	# tmp820, _411
 16156 570f 480FAFC1 		imul	rax, rcx	# tmp820, index
 16157 5713 488D3400 		lea	rsi, [rax+rax]	# index,
 16158              	.LVL970:
 950:sieve_extend.c ****         step  = prime * 2 + 1;
 16159              		.loc 1 950 11 is_stmt 1 view .LVU5630
 16160 5717 4939F4   		cmp	r12, rsi	# block_stop, index
 16161 571a 0F836EFE 		jnb	.L977	#,
 16161      FFFF
 16162 5720 E92FF5FF 		jmp	.L1487	#
 16162      FF
 16163              	.LVL971:
 16164              		.p2align 4,,7
 16165 5725 0F1F00   		.p2align 3
 16166              	.L996:
 16167              	.LBB694:
 16168              	.LBB627:
 16169              	# sieve_extend.c:238: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 16170              		.loc 1 238 21 is_stmt 0 view .LVU5631
 16171 5728 B9010000 		mov	ecx, 1	# pattern,
 16171      00
GAS LISTING /tmp/ccgH0yRS.s 			page 431


 16172 572d E97EF2FF 		jmp	.L938	#
 16172      FF
 16173              	.LVL972:
 16174              		.p2align 4,,7
 16175 5732 660F1F44 		.p2align 3
 16175      0000
 16176              	.L1501:
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 16177              		.loc 1 238 21 view .LVU5632
 16178              	.LBE627:
 16179              	.LBE694:
 16180              	.LBE699:
 16181              	.LBE710:
 16182              	.LBE714:
 16183              	.LBB715:
 16184              	.LBB593:
 16185              	.LBB586:
 16186              	.LBB579:
 16187              	.LBB575:
 16188              	.LBB573:
 16189              	.LBB568:
 16190              	.LBB567:
 16191              	.LBB564:
 201:sieve_extend.c ****    }
 16192              		.loc 1 201 7 is_stmt 1 view .LVU5633
 16193              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 16194              		.loc 1 201 27 is_stmt 0 view .LVU5634
 16195 5738 48235424 		and	rdx, QWORD PTR 40[rsp]	# tmp624, %sfp
 16195      28
 16196              	.LVL973:
 16197              	# sieve_extend.c:201:       *index_ptr |= (mask & chopmask(range_stop));
 201:sieve_extend.c ****    }
 16198              		.loc 1 201 18 view .LVU5635
 16199 573d 490911   		or	QWORD PTR [r9], rdx	# *index_ptr_920, tmp624
 16200 5740 E924EEFF 		jmp	.L915	#
 16200      FF
 16201              	.LVL974:
 16202              	.L1497:
 201:sieve_extend.c ****    }
 16203              		.loc 1 201 18 view .LVU5636
 16204              	.LBE564:
 16205              	.LBE567:
 16206              	.LBE568:
 16207              	.LBE573:
 16208              	.LBE575:
 16209              	.LBE579:
 16210              	.LBB580:
 16211              	.LBB529:
 875:sieve_extend.c ****         return; // rapid exit for small sizes
 16212              		.loc 1 875 9 is_stmt 1 view .LVU5637
 16213 5745 4C89C1   		mov	rcx, r8	#, _69
 16214 5748 4C89F2   		mov	rdx, r14	#, patternsize_bits
 16215 574b 4C89F6   		mov	rsi, r14	#, patternsize_bits
 16216 574e 4C89FF   		mov	rdi, r15	#, _97
 16217 5751 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, _69
 16217      28
GAS LISTING /tmp/ccgH0yRS.s 			page 432


 16218 5756 E8A5A8FF 		call	extendSieve_smallSize	#
 16218      FF
 16219              	.LVL975:
 876:sieve_extend.c ****     }
 16220              		.loc 1 876 9 view .LVU5638
 16221 575b 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# _69, %sfp
 16221      28
 16222 5760 4C897424 		mov	QWORD PTR 24[rsp], r14	# %sfp, patternsize_bits
 16222      18
 16223 5765 E97FE4FF 		jmp	.L890	#
 16223      FF
 16224              	.LVL976:
 16225              	.L1502:
 876:sieve_extend.c ****     }
 16226              		.loc 1 876 9 is_stmt 0 view .LVU5639
 16227              	.LBE529:
 16228              	.LBE580:
 16229              	.LBE586:
 16230              	.LBE593:
 16231              	.LBE715:
 16232              	.LBB716:
 16233              	.LBB603:
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 16234              		.loc 1 883 37 is_stmt 1 view .LVU5640
 16235 576a E8E1CEFF 		call	extendSieve_shiftleft	#
 16235      FF
 16236              	.LVL977:
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 16237              		.loc 1 883 37 is_stmt 0 view .LVU5641
 16238 576f E957EEFF 		jmp	.L926	#
 16238      FF
 16239              	.LVL978:
 16240              	.L1492:
 883:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitarray, source_start, size, dest
 16241              		.loc 1 883 37 view .LVU5642
 16242 5774 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# <retval>, %sfp
 16242      30
 16243              	.LBE603:
 16244              	.LBE716:
 16245              	.LBB717:
 16246              	.LBB594:
 16247              	.LBB587:
 16248              	# sieve_extend.c:990:         if (range_stop > block_stop) return block; //range_stop = block_stop;
 990:sieve_extend.c **** 
 16249              		.loc 1 990 12 view .LVU5643
 16250 5779 4C89F2   		mov	rdx, r14	# block$pattern_size, patternsize_bits
 16251 577c 488B7424 		mov	rsi, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 16251      10
 16252 5781 48894C24 		mov	QWORD PTR 40[rsp], rcx	# %sfp, prime
 16252      28
 16253 5786 4D8B7D08 		mov	r15, QWORD PTR 8[r13]	# prephitmp_1432, sieve_92->bits
 16254              	.LVL979:
 990:sieve_extend.c **** 
 16255              		.loc 1 990 12 view .LVU5644
 16256 578a 4C897C24 		mov	QWORD PTR 8[rsp], r15	# %sfp, prephitmp_1432
 16256      08
 16257              	.LVL980:
GAS LISTING /tmp/ccgH0yRS.s 			page 433


 990:sieve_extend.c **** 
 16258              		.loc 1 990 12 view .LVU5645
 16259 578f E900EEFF 		jmp	.L889	#
 16259      FF
 16260              	.LVL981:
 16261              	.L995:
 16262              	.LBB581:
 16263              	.LBB544:
 16264              	# sieve_extend.c:238: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 16265              		.loc 1 238 21 view .LVU5646
 16266 5794 B9010000 		mov	ecx, 1	# pattern,
 16266      00
 16267 5799 E9A2E6FF 		jmp	.L895	#
 16267      FF
 16268              	.LVL982:
 16269              	.L1490:
 238:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 16270              		.loc 1 238 21 view .LVU5647
 16271              	.LBE544:
 16272              	.LBE581:
 16273              	.LBE587:
 16274              	# sieve_extend.c:975:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 975:sieve_extend.c **** 
 16275              		.loc 1 975 18 view .LVU5648
 16276 579e 31D2     		xor	edx, edx	# block$pattern_size
 16277 57a0 31F6     		xor	esi, esi	# block$pattern_start
 16278              	# sieve_extend.c:970:     register counter_t prime   = 0;
 970:sieve_extend.c ****     counter_t patternsize_bits = 1;
 16279              		.loc 1 970 24 view .LVU5649
 16280 57a2 48C74424 		mov	QWORD PTR 40[rsp], 0	# %sfp,
 16280      28000000 
 16280      00
 16281 57ab E9A7E8FF 		jmp	.L882	#
 16281      FF
 16282              	.LBE594:
 16283              	.LBE717:
 16284              		.cfi_endproc
 16285              	.LFE75:
 16287              		.p2align 4
 16289              	tune_benchmark:
 16290              	.LVL983:
 16291              	.LFB82:
1134:sieve_extend.c **** 
1135:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 16292              		.loc 1 1135 94 is_stmt 1 view -0
 16293              		.cfi_startproc
 16294              		.loc 1 1135 94 is_stmt 0 view .LVU5651
 16295 57b0 4154     		push	r12	#
 16296              		.cfi_def_cfa_offset 16
 16297              		.cfi_offset 12, -16
 16298 57b2 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 16299              	# sieve_extend.c:1141:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1136:sieve_extend.c ****     counter_t passes = 0;
1137:sieve_extend.c ****     double elapsed_time = 0;
1138:sieve_extend.c ****     struct timespec start_time,end_time;
1139:sieve_extend.c ****     struct sieve_state *sieve_instance;
GAS LISTING /tmp/ccgH0yRS.s 			page 434


1140:sieve_extend.c **** 
1141:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 16300              		.loc 1 1141 44 view .LVU5652
 16301 57b5 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 16302              	.LVL984:
 16303              	# sieve_extend.c:1135: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1135:sieve_extend.c ****     counter_t passes = 0;
 16304              		.loc 1 1135 94 view .LVU5653
 16305 57b9 55       		push	rbp	#
 16306              		.cfi_def_cfa_offset 24
 16307              		.cfi_offset 6, -24
 16308              	# sieve_extend.c:1141:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 16309              		.loc 1 1141 44 view .LVU5654
 16310 57ba 48C1E705 		sal	rdi, 5	# tmp115,
 16311              	# sieve_extend.c:1136:     counter_t passes = 0;
1136:sieve_extend.c ****     counter_t passes = 0;
 16312              		.loc 1 1136 15 view .LVU5655
 16313 57be 4531E4   		xor	r12d, r12d	# passes
 16314              	# sieve_extend.c:1135: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1135:sieve_extend.c ****     counter_t passes = 0;
 16315              		.loc 1 1135 94 view .LVU5656
 16316 57c1 53       		push	rbx	#
 16317              		.cfi_def_cfa_offset 32
 16318              		.cfi_offset 3, -32
 16319              	# sieve_extend.c:1141:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
 16320              		.loc 1 1141 44 view .LVU5657
 16321 57c2 498D1C38 		lea	rbx, [r8+rdi]	# _2,
 16322              	# sieve_extend.c:1145:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1142:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
1143:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
1144:sieve_extend.c **** 
1145:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 16323              		.loc 1 1145 5 view .LVU5658
 16324 57c6 BF010000 		mov	edi, 1	#,
 16324      00
 16325              	# sieve_extend.c:1135: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1135:sieve_extend.c ****     counter_t passes = 0;
 16326              		.loc 1 1135 94 view .LVU5659
 16327 57cb 488D6424 		lea	rsp, -48[rsp]	#,
 16327      D0
 16328              		.cfi_def_cfa_offset 80
 16329              	# sieve_extend.c:1142:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1142:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16330              		.loc 1 1142 30 view .LVU5660
 16331 57d0 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 16332              	# sieve_extend.c:1145:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 16333              		.loc 1 1145 5 view .LVU5661
 16334 57d4 4889E6   		mov	rsi, rsp	# tmp119,
 16335              	.LVL985:
 16336              	# sieve_extend.c:1143:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1143:sieve_extend.c **** 
 16337              		.loc 1 1143 30 view .LVU5662
 16338 57d7 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 16339              	# sieve_extend.c:1135: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuni
1135:sieve_extend.c ****     counter_t passes = 0;
 16340              		.loc 1 1135 94 view .LVU5663
 16341 57db 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
GAS LISTING /tmp/ccgH0yRS.s 			page 435


 16341      25280000 
 16341      00
 16342 57e4 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7270, tmp160
 16342      28
 16343 57e9 31C0     		xor	eax, eax	# tmp160
1136:sieve_extend.c ****     double elapsed_time = 0;
 16344              		.loc 1 1136 5 is_stmt 1 view .LVU5664
 16345              	.LVL986:
1137:sieve_extend.c ****     struct timespec start_time,end_time;
 16346              		.loc 1 1137 5 view .LVU5665
1138:sieve_extend.c ****     struct sieve_state *sieve_instance;
 16347              		.loc 1 1138 5 view .LVU5666
1139:sieve_extend.c **** 
 16348              		.loc 1 1139 5 view .LVU5667
1141:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16349              		.loc 1 1141 5 view .LVU5668
 16350              	# sieve_extend.c:1141:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1141:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16351              		.loc 1 1141 29 is_stmt 0 view .LVU5669
 16352 57eb 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 16353              	# sieve_extend.c:1142:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep
1142:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 16354              		.loc 1 1142 30 view .LVU5670
 16355 57ef 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 16355      000000
 16356              	# sieve_extend.c:1143:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep
1143:sieve_extend.c **** 
 16357              		.loc 1 1143 30 view .LVU5671
 16358 57f6 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 16358      000000
 16359              	# sieve_extend.c:1141:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_f
1141:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 16360              		.loc 1 1141 29 view .LVU5672
 16361 57fd 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 16361      000000
1142:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 16362              		.loc 1 1142 5 is_stmt 1 view .LVU5673
1143:sieve_extend.c **** 
 16363              		.loc 1 1143 5 view .LVU5674
 16364              		.loc 1 1145 5 view .LVU5675
 16365 5804 E8000000 		call	clock_gettime@PLT	#
 16365      00
 16366              	.LVL987:
1146:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 16367              		.loc 1 1146 5 view .LVU5676
 16368              		.loc 1 1146 11 view .LVU5677
 16369 5809 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 16370 580d C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 16370      40
 16371 5812 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 16371      00000000 
 16372 581a 7676     		jbe	.L1514	#,
 16373 581c E99E0000 		jmp	.L1515	#
 16373      00
 16374              	.LVL988:
 16375              		.p2align 4,,7
 16376 5821 0F1F8000 		.p2align 3
GAS LISTING /tmp/ccgH0yRS.s 			page 436


 16376      000000
 16377              	.L1518:
1147:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16378              		.loc 1 1147 9 view .LVU5678
 16379              	# sieve_extend.c:1147:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
 16380              		.loc 1 1147 26 is_stmt 0 view .LVU5679
 16381 5828 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 16382              	# sieve_extend.c:1149:         passes++;
1148:sieve_extend.c ****         delete_sieve(sieve_instance);
1149:sieve_extend.c ****         passes++;
 16383              		.loc 1 1149 15 view .LVU5680
 16384 582c 4983C401 		add	r12, 1	# passes,
 16385              	.LVL989:
 16386              	# sieve_extend.c:1147:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1147:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16387              		.loc 1 1147 26 view .LVU5681
 16388 5830 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 16389 5833 E8B8E2FF 		call	sieve	#
 16389      FF
 16390              	.LVL990:
 16391              	.LBB718:
 16392              	.LBB719:
 16393              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 16394              		.loc 1 117 5 view .LVU5682
 16395 5838 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_37->bitarray
 16396              	.LBE719:
 16397              	.LBE718:
 16398              	# sieve_extend.c:1147:         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, t
1147:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16399              		.loc 1 1147 26 view .LVU5683
 16400 583b 4889C5   		mov	rbp, rax	# sieve_instance, tmp151
 16401              	.LVL991:
1148:sieve_extend.c ****         delete_sieve(sieve_instance);
 16402              		.loc 1 1148 9 is_stmt 1 view .LVU5684
 16403              	.LBB721:
 16404              	.LBI718:
 116:sieve_extend.c ****     free(sieve->bitarray);
 16405              		.loc 1 116 13 view .LVU5685
 16406              	.LBB720:
 117:sieve_extend.c ****     free(sieve);
 16407              		.loc 1 117 5 view .LVU5686
 16408 583e E8000000 		call	free@PLT	#
 16408      00
 16409              	.LVL992:
 118:sieve_extend.c **** }
 16410              		.loc 1 118 5 view .LVU5687
 16411 5843 4889EF   		mov	rdi, rbp	#, sieve_instance
 16412 5846 E8000000 		call	free@PLT	#
 16412      00
 16413              	.LVL993:
 118:sieve_extend.c **** }
 16414              		.loc 1 118 5 is_stmt 0 view .LVU5688
 16415              	.LBE720:
 16416              	.LBE721:
 16417              		.loc 1 1149 9 is_stmt 1 view .LVU5689
1150:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
GAS LISTING /tmp/ccgH0yRS.s 			page 437


 16418              		.loc 1 1150 9 view .LVU5690
 16419 584b 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 16419      10
 16420 5850 BF010000 		mov	edi, 1	#,
 16420      00
 16421 5855 E8000000 		call	clock_gettime@PLT	#
 16421      00
 16422              	.LVL994:
1151:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 16423              		.loc 1 1151 9 view .LVU5691
 16424              	# sieve_extend.c:1151:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16425              		.loc 1 1151 58 is_stmt 0 view .LVU5692
 16426 585a C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 16426      442418
 16427              	# sieve_extend.c:1151:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16428              		.loc 1 1151 64 view .LVU5693
 16429 5861 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 16429      0C24
 16430              	# sieve_extend.c:1151:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16431              		.loc 1 1151 104 view .LVU5694
 16432 5867 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 16432      5C2408
 16433              	# sieve_extend.c:1151:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16434              		.loc 1 1151 40 view .LVU5695
 16435 586e C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 16435      542410
 16436 5875 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
 16436      05000000 
 16436      00
 16437 587e C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 16437      1D000000 
 16437      00
 16438              	# sieve_extend.c:1151:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 16439              		.loc 1 1151 22 view .LVU5696
 16440 5887 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
 16441              	.LVL995:
1146:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16442              		.loc 1 1146 11 is_stmt 1 view .LVU5697
 16443 588b C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 16443      40
 16444 5890 7706     		ja	.L1529	#,
 16445              	.LVL996:
 16446              	.L1514:
 16447              	# sieve_extend.c:1146:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duratio
1146:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16448              		.loc 1 1146 79 is_stmt 0 discriminator 1 view .LVU5698
 16449 5892 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 16450 5896 7790     		ja	.L1518	#,
 16451              	.L1529:
1146:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16452              		.loc 1 1146 79 discriminator 1 view .LVU5699
 16453 5898 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 16453      F4
 16454 589d 4D85E4   		test	r12, r12	# passes
 16455 58a0 7919     		jns	.L1520	#,
1146:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16456              		.loc 1 1146 79 discriminator 1 view .LVU5700
GAS LISTING /tmp/ccgH0yRS.s 			page 438


 16457 58a2 4C89E6   		mov	rsi, r12	# tmp135, passes
 16458 58a5 4D89E1   		mov	r9, r12	# tmp136, passes
 16459 58a8 48D1EE   		shr	rsi	# tmp135
 16460 58ab 4183E101 		and	r9d, 1	# tmp136,
 16461 58af 4C09CE   		or	rsi, r9	# tmp148, tmp136
 16462 58b2 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 16462      EE
 16463 58b7 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
 16464              	.L1520:
1146:sieve_extend.c ****         sieve_instance = sieve(tuning_result[tuning_result_index].maxints, tuning_result[tuning_res
 16465              		.loc 1 1146 79 discriminator 1 view .LVU5701
 16466 58bb C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 16467              	.LVL997:
 16468              	.L1515:
1152:sieve_extend.c ****     }
1153:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 16469              		.loc 1 1153 5 is_stmt 1 view .LVU5702
 16470              	# sieve_extend.c:1153:     tuning_result[tuning_result_index].passes = passes;
 16471              		.loc 1 1153 47 is_stmt 0 view .LVU5703
 16472 58bf 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
1154:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 16473              		.loc 1 1154 5 is_stmt 1 view .LVU5704
 16474              	# sieve_extend.c:1154:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 16475              		.loc 1 1154 53 is_stmt 0 view .LVU5705
 16476 58c3 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 16476      50
1155:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 16477              		.loc 1 1155 5 is_stmt 1 view .LVU5706
 16478              	# sieve_extend.c:1155:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 16479              		.loc 1 1155 44 is_stmt 0 view .LVU5707
 16480 58c8 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 16480      58
 16481              	# sieve_extend.c:1156: }
1156:sieve_extend.c **** }
 16482              		.loc 1 1156 1 view .LVU5708
 16483 58cd 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.7270
 16483      28
 16484 58d2 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 16484      25280000 
 16484      00
 16485 58db 750A     		jne	.L1530	#,
 16486 58dd 488D6424 		lea	rsp, 48[rsp]	#,
 16486      30
 16487              		.cfi_remember_state
 16488              		.cfi_def_cfa_offset 32
 16489 58e2 5B       		pop	rbx	#
 16490              		.cfi_def_cfa_offset 24
 16491 58e3 5D       		pop	rbp	#
 16492              		.cfi_def_cfa_offset 16
 16493 58e4 415C     		pop	r12	#
 16494              		.cfi_def_cfa_offset 8
 16495 58e6 C3       		ret	
 16496              	.L1530:
 16497              		.cfi_restore_state
 16498 58e7 E8000000 		call	__stack_chk_fail@PLT	#
 16498      00
 16499              	.LVL998:
GAS LISTING /tmp/ccgH0yRS.s 			page 439


 16500              		.cfi_endproc
 16501              	.LFE82:
 16503 58ec 0F1F4000 		.p2align 4
 16504              		.globl	shiftvec
 16506              	shiftvec:
 16507              	.LVL999:
 16508              	.LFB66:
 595:sieve_extend.c ****     int i = 0;
 16509              		.loc 1 595 1 is_stmt 1 view -0
 16510              		.cfi_startproc
 595:sieve_extend.c ****     int i = 0;
 16511              		.loc 1 595 1 is_stmt 0 view .LVU5710
 16512 58f0 F30F1EFA 		endbr64	
 596:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 16513              		.loc 1 596 5 is_stmt 1 view .LVU5711
 16514              	.LVL1000:
 598:sieve_extend.c ****     {
 16515              		.loc 1 598 5 view .LVU5712
 598:sieve_extend.c ****     {
 16516              		.loc 1 598 12 view .LVU5713
 16517              	# sieve_extend.c:598:     for (; i+4 < size; i+=4,dst+=4,src+=4)
 598:sieve_extend.c ****     {
 16518              		.loc 1 598 5 is_stmt 0 view .LVU5714
 16519 58f4 83FA04   		cmp	edx, 4	# size,
 16520 58f7 0F8E9D03 		jle	.L1576	#,
 16520      0000
 16521 58fd 41BB4000 		mov	r11d, 64	# tmp130,
 16521      0000
 16522 5903 448D42FB 		lea	r8d, -5[rdx]	# tmp131,
 16523 5907 4489D8   		mov	eax, r11d	# _4, tmp130
 16524 590a C5F96EC9 		vmovd	xmm1, ecx	# shift, shift
 16525 590e 29C8     		sub	eax, ecx	# _4, shift
 16526              	.LBB722:
 16527              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16528              		.loc 1 601 25 view .LVU5715
 16529 5910 C4E3FD00 		vpermq	ymm2, YMMWORD PTR [rsi], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114, off
 16529      1655
 16530              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16531              		.loc 1 601 34 view .LVU5716
 16532 5916 C5FE6F26 		vmovdqu	ymm4, YMMWORD PTR [rsi]	# tmp269, MEM[base: src_35(D), index: ivtmp.718_114, offset: 0B]
 16533 591a C4E1F96E 		vmovq	xmm0, rax	# _4, _4
 16533      C0
 16534 591f 41C1E802 		shr	r8d, 2	# _25,
 16535 5923 41B90100 		mov	r9d, 1	# ivtmp.715,
 16535      0000
 16536              	.LBE722:
 16537              	.LBB723:
 16538              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16539              		.loc 1 603 34 view .LVU5717
 16540 5929 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.705, vect__102.704, _4
 16541              	.LBE723:
 16542              	.LBB724:
 16543              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccgH0yRS.s 			page 440


 16544              		.loc 1 601 34 view .LVU5718
 16545 592d C5DDF3D9 		vpsllq	ymm3, ymm4, xmm1	# vect__104.709, tmp269, shift
 16546 5931 458D5001 		lea	r10d, 1[r8]	# tmp164,
 16547 5935 4589C3   		mov	r11d, r8d	# tmp169, _25
 16548              	.LBE724:
 16549              	.LBB725:
 16550              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16551              		.loc 1 603 22 view .LVU5719
 16552 5938 C5D5EBF3 		vpor	ymm6, ymm5, ymm3	# vect__58.710, vect__57.705, vect__104.709
 16553 593c 4183E307 		and	r11d, 7	# tmp169,
 16554              	.LVL1001:
 603:sieve_extend.c ****     }
 16555              		.loc 1 603 22 view .LVU5720
 16556              	.LBE725:
 16557              	.LBB726:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16558              		.loc 1 600 25 is_stmt 1 view .LVU5721
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16559              		.loc 1 601 13 view .LVU5722
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16560              		.loc 1 600 32 view .LVU5723
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16561              		.loc 1 600 25 view .LVU5724
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16562              		.loc 1 601 13 view .LVU5725
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16563              		.loc 1 600 32 view .LVU5726
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16564              		.loc 1 600 25 view .LVU5727
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16565              		.loc 1 601 13 view .LVU5728
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16566              		.loc 1 600 32 view .LVU5729
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16567              		.loc 1 600 25 view .LVU5730
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16568              		.loc 1 601 13 view .LVU5731
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16569              		.loc 1 600 32 view .LVU5732
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16570              		.loc 1 600 25 view .LVU5733
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16571              		.loc 1 600 25 is_stmt 0 view .LVU5734
 16572              	.LBE726:
 16573              	.LBB727:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16574              		.loc 1 602 25 is_stmt 1 view .LVU5735
 603:sieve_extend.c ****     }
 16575              		.loc 1 603 13 view .LVU5736
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16576              		.loc 1 602 32 view .LVU5737
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16577              		.loc 1 602 25 view .LVU5738
 603:sieve_extend.c ****     }
 16578              		.loc 1 603 13 view .LVU5739
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccgH0yRS.s 			page 441


 16579              		.loc 1 602 32 view .LVU5740
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16580              		.loc 1 602 25 view .LVU5741
 603:sieve_extend.c ****     }
 16581              		.loc 1 603 13 view .LVU5742
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16582              		.loc 1 602 32 view .LVU5743
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16583              		.loc 1 602 25 view .LVU5744
 603:sieve_extend.c ****     }
 16584              		.loc 1 603 13 view .LVU5745
 16585 5940 4183FA01 		cmp	r10d, 1	# tmp164,
 16586 5944 B8200000 		mov	eax, 32	# ivtmp.718,
 16586      00
 16587              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16588              		.loc 1 603 22 is_stmt 0 view .LVU5746
 16589 5949 C5FE7F37 		vmovdqu	YMMWORD PTR [rdi], ymm6	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect__58
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16590              		.loc 1 602 32 is_stmt 1 view .LVU5747
 16591              	.LVL1002:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16592              		.loc 1 602 25 view .LVU5748
 16593              	.LBE727:
 598:sieve_extend.c ****     {
 16594              		.loc 1 598 24 view .LVU5749
 598:sieve_extend.c ****     {
 16595              		.loc 1 598 12 view .LVU5750
 16596 594d 0F866002 		jbe	.L1574	#,
 16596      0000
 16597 5953 4585DB   		test	r11d, r11d	# tmp169
 16598 5956 0F841E01 		je	.L1534	#,
 16598      0000
 16599 595c 4183FB01 		cmp	r11d, 1	# tmp169,
 16600 5960 0F84E500 		je	.L1561	#,
 16600      0000
 16601 5966 4183FB02 		cmp	r11d, 2	# tmp169,
 16602 596a 0F84B600 		je	.L1562	#,
 16602      0000
 16603 5970 4183FB03 		cmp	r11d, 3	# tmp169,
 16604 5974 0F848700 		je	.L1563	#,
 16604      0000
 16605 597a 4183FB04 		cmp	r11d, 4	# tmp169,
 16606 597e 745B     		je	.L1564	#,
 16607 5980 4183FB05 		cmp	r11d, 5	# tmp169,
 16608 5984 7430     		je	.L1565	#,
 16609 5986 4183FB06 		cmp	r11d, 6	# tmp169,
 16610 598a 0F85DC02 		jne	.L1577	#,
 16610      0000
 16611              	.L1566:
 16612              	.LVL1003:
 16613              	.LBB728:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16614              		.loc 1 600 25 view .LVU5751
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16615              		.loc 1 601 13 view .LVU5752
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccgH0yRS.s 			page 442


 16616              		.loc 1 600 32 view .LVU5753
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16617              		.loc 1 600 25 view .LVU5754
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16618              		.loc 1 601 13 view .LVU5755
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16619              		.loc 1 600 32 view .LVU5756
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16620              		.loc 1 600 25 view .LVU5757
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16621              		.loc 1 601 13 view .LVU5758
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16622              		.loc 1 600 32 view .LVU5759
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16623              		.loc 1 600 25 view .LVU5760
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16624              		.loc 1 601 13 view .LVU5761
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16625              		.loc 1 600 32 view .LVU5762
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16626              		.loc 1 600 25 view .LVU5763
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16627              		.loc 1 600 25 is_stmt 0 view .LVU5764
 16628              	.LBE728:
 16629              	.LBB729:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16630              		.loc 1 602 25 is_stmt 1 view .LVU5765
 603:sieve_extend.c ****     }
 16631              		.loc 1 603 13 view .LVU5766
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16632              		.loc 1 602 32 view .LVU5767
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16633              		.loc 1 602 25 view .LVU5768
 603:sieve_extend.c ****     }
 16634              		.loc 1 603 13 view .LVU5769
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16635              		.loc 1 602 32 view .LVU5770
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16636              		.loc 1 602 25 view .LVU5771
 603:sieve_extend.c ****     }
 16637              		.loc 1 603 13 view .LVU5772
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16638              		.loc 1 602 32 view .LVU5773
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16639              		.loc 1 602 25 view .LVU5774
 603:sieve_extend.c ****     }
 16640              		.loc 1 603 13 view .LVU5775
 16641              	.LBE729:
 16642              	.LBB730:
 16643              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16644              		.loc 1 601 25 is_stmt 0 view .LVU5776
 16645 5990 C463FD00 		vpermq	ymm12, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114
 16645      240655
 16646 5997 4183C101 		add	r9d, 1	# ivtmp.715,
 16647              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccgH0yRS.s 			page 443


 16648              		.loc 1 601 34 view .LVU5777
 16649 599b C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rsi+rax]	# tmp279, MEM[base: src_35(D), index: ivtmp.718_114, offset: 
 16649      06
 16650              	.LBE730:
 16651              	.LBB731:
 16652              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16653              		.loc 1 603 34 view .LVU5778
 16654 59a0 C51DD3E8 		vpsrlq	ymm13, ymm12, xmm0	# vect__57.705, vect__102.704, _4
 16655              	.LBE731:
 16656              	.LBB732:
 16657              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16658              		.loc 1 601 34 view .LVU5779
 16659 59a4 C50DF3F9 		vpsllq	ymm15, ymm14, xmm1	# vect__104.709, tmp279, shift
 16660              	.LBE732:
 16661              	.LBB733:
 16662              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16663              		.loc 1 603 22 view .LVU5780
 16664 59a8 C4C115EB 		vpor	ymm2, ymm13, ymm15	# vect__58.710, vect__57.705, vect__104.709
 16664      D7
 16665 59ad C5FE7F14 		vmovdqu	YMMWORD PTR [rdi+rax], ymm2	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect
 16665      07
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16666              		.loc 1 602 32 is_stmt 1 view .LVU5781
 16667              	.LVL1004:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16668              		.loc 1 602 25 view .LVU5782
 16669              	.LBE733:
 598:sieve_extend.c ****     {
 16670              		.loc 1 598 24 view .LVU5783
 598:sieve_extend.c ****     {
 16671              		.loc 1 598 12 view .LVU5784
 16672 59b2 4883C020 		add	rax, 32	# ivtmp.718,
 16673              	.L1565:
 16674              	.LVL1005:
 16675              	.LBB734:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16676              		.loc 1 600 25 view .LVU5785
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16677              		.loc 1 601 13 view .LVU5786
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16678              		.loc 1 600 32 view .LVU5787
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16679              		.loc 1 600 25 view .LVU5788
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16680              		.loc 1 601 13 view .LVU5789
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16681              		.loc 1 600 32 view .LVU5790
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16682              		.loc 1 600 25 view .LVU5791
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16683              		.loc 1 601 13 view .LVU5792
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16684              		.loc 1 600 32 view .LVU5793
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccgH0yRS.s 			page 444


 16685              		.loc 1 600 25 view .LVU5794
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16686              		.loc 1 601 13 view .LVU5795
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16687              		.loc 1 600 32 view .LVU5796
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16688              		.loc 1 600 25 view .LVU5797
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16689              		.loc 1 600 25 is_stmt 0 view .LVU5798
 16690              	.LBE734:
 16691              	.LBB735:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16692              		.loc 1 602 25 is_stmt 1 view .LVU5799
 603:sieve_extend.c ****     }
 16693              		.loc 1 603 13 view .LVU5800
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16694              		.loc 1 602 32 view .LVU5801
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16695              		.loc 1 602 25 view .LVU5802
 603:sieve_extend.c ****     }
 16696              		.loc 1 603 13 view .LVU5803
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16697              		.loc 1 602 32 view .LVU5804
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16698              		.loc 1 602 25 view .LVU5805
 603:sieve_extend.c ****     }
 16699              		.loc 1 603 13 view .LVU5806
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16700              		.loc 1 602 32 view .LVU5807
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16701              		.loc 1 602 25 view .LVU5808
 603:sieve_extend.c ****     }
 16702              		.loc 1 603 13 view .LVU5809
 16703              	.LBE735:
 16704              	.LBB736:
 16705              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16706              		.loc 1 601 25 is_stmt 0 view .LVU5810
 16707 59b6 C4E3FD00 		vpermq	ymm5, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114,
 16707      2C0655
 16708 59bd 4183C101 		add	r9d, 1	# ivtmp.715,
 16709              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16710              		.loc 1 601 34 view .LVU5811
 16711 59c1 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp280, MEM[base: src_35(D), index: ivtmp.718_114, offset: 0
 16711      06
 16712              	.LBE736:
 16713              	.LBB737:
 16714              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16715              		.loc 1 603 34 view .LVU5812
 16716 59c6 C5D5D3E0 		vpsrlq	ymm4, ymm5, xmm0	# vect__57.705, vect__102.704, _4
 16717              	.LBE737:
 16718              	.LBB738:
 16719              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16720              		.loc 1 601 34 view .LVU5813
GAS LISTING /tmp/ccgH0yRS.s 			page 445


 16721 59ca C5E5F3F1 		vpsllq	ymm6, ymm3, xmm1	# vect__104.709, tmp280, shift
 16722              	.LBE738:
 16723              	.LBB739:
 16724              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16725              		.loc 1 603 22 view .LVU5814
 16726 59ce C5DDEBFE 		vpor	ymm7, ymm4, ymm6	# vect__58.710, vect__57.705, vect__104.709
 16727 59d2 C5FE7F3C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect
 16727      07
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16728              		.loc 1 602 32 is_stmt 1 view .LVU5815
 16729              	.LVL1006:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16730              		.loc 1 602 25 view .LVU5816
 16731              	.LBE739:
 598:sieve_extend.c ****     {
 16732              		.loc 1 598 24 view .LVU5817
 598:sieve_extend.c ****     {
 16733              		.loc 1 598 12 view .LVU5818
 16734 59d7 4883C020 		add	rax, 32	# ivtmp.718,
 16735              	.L1564:
 16736              	.LVL1007:
 16737              	.LBB740:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16738              		.loc 1 600 25 view .LVU5819
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16739              		.loc 1 601 13 view .LVU5820
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16740              		.loc 1 600 32 view .LVU5821
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16741              		.loc 1 600 25 view .LVU5822
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16742              		.loc 1 601 13 view .LVU5823
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16743              		.loc 1 600 32 view .LVU5824
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16744              		.loc 1 600 25 view .LVU5825
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16745              		.loc 1 601 13 view .LVU5826
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16746              		.loc 1 600 32 view .LVU5827
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16747              		.loc 1 600 25 view .LVU5828
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16748              		.loc 1 601 13 view .LVU5829
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16749              		.loc 1 600 32 view .LVU5830
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16750              		.loc 1 600 25 view .LVU5831
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16751              		.loc 1 600 25 is_stmt 0 view .LVU5832
 16752              	.LBE740:
 16753              	.LBB741:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16754              		.loc 1 602 25 is_stmt 1 view .LVU5833
 603:sieve_extend.c ****     }
 16755              		.loc 1 603 13 view .LVU5834
GAS LISTING /tmp/ccgH0yRS.s 			page 446


 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16756              		.loc 1 602 32 view .LVU5835
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16757              		.loc 1 602 25 view .LVU5836
 603:sieve_extend.c ****     }
 16758              		.loc 1 603 13 view .LVU5837
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16759              		.loc 1 602 32 view .LVU5838
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16760              		.loc 1 602 25 view .LVU5839
 603:sieve_extend.c ****     }
 16761              		.loc 1 603 13 view .LVU5840
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16762              		.loc 1 602 32 view .LVU5841
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16763              		.loc 1 602 25 view .LVU5842
 603:sieve_extend.c ****     }
 16764              		.loc 1 603 13 view .LVU5843
 16765              	.LBE741:
 16766              	.LBB742:
 16767              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16768              		.loc 1 601 25 is_stmt 0 view .LVU5844
 16769 59db C463FD00 		vpermq	ymm8, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114,
 16769      040655
 16770 59e2 4183C101 		add	r9d, 1	# ivtmp.715,
 16771              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16772              		.loc 1 601 34 view .LVU5845
 16773 59e6 C57E6F14 		vmovdqu	ymm10, YMMWORD PTR [rsi+rax]	# tmp281, MEM[base: src_35(D), index: ivtmp.718_114, offset: 
 16773      06
 16774              	.LBE742:
 16775              	.LBB743:
 16776              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16777              		.loc 1 603 34 view .LVU5846
 16778 59eb C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.705, vect__102.704, _4
 16779              	.LBE743:
 16780              	.LBB744:
 16781              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16782              		.loc 1 601 34 view .LVU5847
 16783 59ef C52DF3D9 		vpsllq	ymm11, ymm10, xmm1	# vect__104.709, tmp281, shift
 16784              	.LBE744:
 16785              	.LBB745:
 16786              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16787              		.loc 1 603 22 view .LVU5848
 16788 59f3 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__58.710, vect__57.705, vect__104.709
 16788      E3
 16789 59f8 C57E7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm12	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vec
 16789      07
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16790              		.loc 1 602 32 is_stmt 1 view .LVU5849
 16791              	.LVL1008:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16792              		.loc 1 602 25 view .LVU5850
GAS LISTING /tmp/ccgH0yRS.s 			page 447


 16793              	.LBE745:
 598:sieve_extend.c ****     {
 16794              		.loc 1 598 24 view .LVU5851
 598:sieve_extend.c ****     {
 16795              		.loc 1 598 12 view .LVU5852
 16796 59fd 4883C020 		add	rax, 32	# ivtmp.718,
 16797              	.L1563:
 16798              	.LVL1009:
 16799              	.LBB746:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16800              		.loc 1 600 25 view .LVU5853
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16801              		.loc 1 601 13 view .LVU5854
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16802              		.loc 1 600 32 view .LVU5855
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16803              		.loc 1 600 25 view .LVU5856
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16804              		.loc 1 601 13 view .LVU5857
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16805              		.loc 1 600 32 view .LVU5858
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16806              		.loc 1 600 25 view .LVU5859
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16807              		.loc 1 601 13 view .LVU5860
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16808              		.loc 1 600 32 view .LVU5861
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16809              		.loc 1 600 25 view .LVU5862
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16810              		.loc 1 601 13 view .LVU5863
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16811              		.loc 1 600 32 view .LVU5864
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16812              		.loc 1 600 25 view .LVU5865
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16813              		.loc 1 600 25 is_stmt 0 view .LVU5866
 16814              	.LBE746:
 16815              	.LBB747:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16816              		.loc 1 602 25 is_stmt 1 view .LVU5867
 603:sieve_extend.c ****     }
 16817              		.loc 1 603 13 view .LVU5868
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16818              		.loc 1 602 32 view .LVU5869
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16819              		.loc 1 602 25 view .LVU5870
 603:sieve_extend.c ****     }
 16820              		.loc 1 603 13 view .LVU5871
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16821              		.loc 1 602 32 view .LVU5872
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16822              		.loc 1 602 25 view .LVU5873
 603:sieve_extend.c ****     }
 16823              		.loc 1 603 13 view .LVU5874
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16824              		.loc 1 602 32 view .LVU5875
GAS LISTING /tmp/ccgH0yRS.s 			page 448


 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16825              		.loc 1 602 25 view .LVU5876
 603:sieve_extend.c ****     }
 16826              		.loc 1 603 13 view .LVU5877
 16827              	.LBE747:
 16828              	.LBB748:
 16829              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16830              		.loc 1 601 25 is_stmt 0 view .LVU5878
 16831 5a01 C463FD00 		vpermq	ymm13, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114
 16831      2C0655
 16832 5a08 4183C101 		add	r9d, 1	# ivtmp.715,
 16833              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16834              		.loc 1 601 34 view .LVU5879
 16835 5a0c C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rsi+rax]	# tmp282, MEM[base: src_35(D), index: ivtmp.718_114, offset: 
 16835      06
 16836              	.LBE748:
 16837              	.LBB749:
 16838              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16839              		.loc 1 603 34 view .LVU5880
 16840 5a11 C515D3F0 		vpsrlq	ymm14, ymm13, xmm0	# vect__57.705, vect__102.704, _4
 16841              	.LBE749:
 16842              	.LBB750:
 16843              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16844              		.loc 1 601 34 view .LVU5881
 16845 5a15 C585F3D1 		vpsllq	ymm2, ymm15, xmm1	# vect__104.709, tmp282, shift
 16846              	.LBE750:
 16847              	.LBB751:
 16848              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16849              		.loc 1 603 22 view .LVU5882
 16850 5a19 C58DEBEA 		vpor	ymm5, ymm14, ymm2	# vect__58.710, vect__57.705, vect__104.709
 16851 5a1d C5FE7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm5	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect
 16851      07
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16852              		.loc 1 602 32 is_stmt 1 view .LVU5883
 16853              	.LVL1010:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16854              		.loc 1 602 25 view .LVU5884
 16855              	.LBE751:
 598:sieve_extend.c ****     {
 16856              		.loc 1 598 24 view .LVU5885
 598:sieve_extend.c ****     {
 16857              		.loc 1 598 12 view .LVU5886
 16858 5a22 4883C020 		add	rax, 32	# ivtmp.718,
 16859              	.L1562:
 16860              	.LVL1011:
 16861              	.LBB752:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16862              		.loc 1 600 25 view .LVU5887
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16863              		.loc 1 601 13 view .LVU5888
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16864              		.loc 1 600 32 view .LVU5889
GAS LISTING /tmp/ccgH0yRS.s 			page 449


 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16865              		.loc 1 600 25 view .LVU5890
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16866              		.loc 1 601 13 view .LVU5891
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16867              		.loc 1 600 32 view .LVU5892
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16868              		.loc 1 600 25 view .LVU5893
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16869              		.loc 1 601 13 view .LVU5894
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16870              		.loc 1 600 32 view .LVU5895
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16871              		.loc 1 600 25 view .LVU5896
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16872              		.loc 1 601 13 view .LVU5897
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16873              		.loc 1 600 32 view .LVU5898
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16874              		.loc 1 600 25 view .LVU5899
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16875              		.loc 1 600 25 is_stmt 0 view .LVU5900
 16876              	.LBE752:
 16877              	.LBB753:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16878              		.loc 1 602 25 is_stmt 1 view .LVU5901
 603:sieve_extend.c ****     }
 16879              		.loc 1 603 13 view .LVU5902
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16880              		.loc 1 602 32 view .LVU5903
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16881              		.loc 1 602 25 view .LVU5904
 603:sieve_extend.c ****     }
 16882              		.loc 1 603 13 view .LVU5905
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16883              		.loc 1 602 32 view .LVU5906
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16884              		.loc 1 602 25 view .LVU5907
 603:sieve_extend.c ****     }
 16885              		.loc 1 603 13 view .LVU5908
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16886              		.loc 1 602 32 view .LVU5909
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16887              		.loc 1 602 25 view .LVU5910
 603:sieve_extend.c ****     }
 16888              		.loc 1 603 13 view .LVU5911
 16889              	.LBE753:
 16890              	.LBB754:
 16891              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16892              		.loc 1 601 25 is_stmt 0 view .LVU5912
 16893 5a26 C4E3FD00 		vpermq	ymm4, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114,
 16893      240655
 16894 5a2d 4183C101 		add	r9d, 1	# ivtmp.715,
 16895              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16896              		.loc 1 601 34 view .LVU5913
GAS LISTING /tmp/ccgH0yRS.s 			page 450


 16897 5a31 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rsi+rax]	# tmp283, MEM[base: src_35(D), index: ivtmp.718_114, offset: 0
 16897      06
 16898              	.LBE754:
 16899              	.LBB755:
 16900              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16901              		.loc 1 603 34 view .LVU5914
 16902 5a36 C5DDD3F0 		vpsrlq	ymm6, ymm4, xmm0	# vect__57.705, vect__102.704, _4
 16903              	.LBE755:
 16904              	.LBB756:
 16905              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16906              		.loc 1 601 34 view .LVU5915
 16907 5a3a C5E5F3F9 		vpsllq	ymm7, ymm3, xmm1	# vect__104.709, tmp283, shift
 16908              	.LBE756:
 16909              	.LBB757:
 16910              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16911              		.loc 1 603 22 view .LVU5916
 16912 5a3e C54DEBC7 		vpor	ymm8, ymm6, ymm7	# vect__58.710, vect__57.705, vect__104.709
 16913 5a42 C57E7F04 		vmovdqu	YMMWORD PTR [rdi+rax], ymm8	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect
 16913      07
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16914              		.loc 1 602 32 is_stmt 1 view .LVU5917
 16915              	.LVL1012:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16916              		.loc 1 602 25 view .LVU5918
 16917              	.LBE757:
 598:sieve_extend.c ****     {
 16918              		.loc 1 598 24 view .LVU5919
 598:sieve_extend.c ****     {
 16919              		.loc 1 598 12 view .LVU5920
 16920 5a47 4883C020 		add	rax, 32	# ivtmp.718,
 16921              	.L1561:
 16922              	.LVL1013:
 16923              	.LBB758:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16924              		.loc 1 600 25 view .LVU5921
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16925              		.loc 1 601 13 view .LVU5922
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16926              		.loc 1 600 32 view .LVU5923
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16927              		.loc 1 600 25 view .LVU5924
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16928              		.loc 1 601 13 view .LVU5925
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16929              		.loc 1 600 32 view .LVU5926
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16930              		.loc 1 600 25 view .LVU5927
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16931              		.loc 1 601 13 view .LVU5928
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16932              		.loc 1 600 32 view .LVU5929
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16933              		.loc 1 600 25 view .LVU5930
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
GAS LISTING /tmp/ccgH0yRS.s 			page 451


 16934              		.loc 1 601 13 view .LVU5931
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16935              		.loc 1 600 32 view .LVU5932
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16936              		.loc 1 600 25 view .LVU5933
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16937              		.loc 1 600 25 is_stmt 0 view .LVU5934
 16938              	.LBE758:
 16939              	.LBB759:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16940              		.loc 1 602 25 is_stmt 1 view .LVU5935
 603:sieve_extend.c ****     }
 16941              		.loc 1 603 13 view .LVU5936
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16942              		.loc 1 602 32 view .LVU5937
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16943              		.loc 1 602 25 view .LVU5938
 603:sieve_extend.c ****     }
 16944              		.loc 1 603 13 view .LVU5939
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16945              		.loc 1 602 32 view .LVU5940
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16946              		.loc 1 602 25 view .LVU5941
 603:sieve_extend.c ****     }
 16947              		.loc 1 603 13 view .LVU5942
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16948              		.loc 1 602 32 view .LVU5943
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16949              		.loc 1 602 25 view .LVU5944
 603:sieve_extend.c ****     }
 16950              		.loc 1 603 13 view .LVU5945
 16951              	.LBE759:
 16952              	.LBB760:
 16953              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16954              		.loc 1 601 25 is_stmt 0 view .LVU5946
 16955 5a4b C463FD00 		vpermq	ymm9, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114,
 16955      0C0655
 16956 5a52 4183C101 		add	r9d, 1	# ivtmp.715,
 16957              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16958              		.loc 1 601 34 view .LVU5947
 16959 5a56 C57E6F1C 		vmovdqu	ymm11, YMMWORD PTR [rsi+rax]	# tmp284, MEM[base: src_35(D), index: ivtmp.718_114, offset: 
 16959      06
 16960              	.LBE760:
 16961              	.LBB761:
 16962              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16963              		.loc 1 603 34 view .LVU5948
 16964 5a5b C535D3D0 		vpsrlq	ymm10, ymm9, xmm0	# vect__57.705, vect__102.704, _4
 16965              	.LBE761:
 16966              	.LBB762:
 16967              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16968              		.loc 1 601 34 view .LVU5949
 16969 5a5f C525F3E1 		vpsllq	ymm12, ymm11, xmm1	# vect__104.709, tmp284, shift
 16970              	.LBE762:
GAS LISTING /tmp/ccgH0yRS.s 			page 452


 16971              	.LBB763:
 16972              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 16973              		.loc 1 603 22 view .LVU5950
 16974 5a63 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__58.710, vect__57.705, vect__104.709
 16974      EC
 16975 5a68 C57E7F2C 		vmovdqu	YMMWORD PTR [rdi+rax], ymm13	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vec
 16975      07
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16976              		.loc 1 602 32 is_stmt 1 view .LVU5951
 16977              	.LVL1014:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 16978              		.loc 1 602 25 view .LVU5952
 16979              	.LBE763:
 598:sieve_extend.c ****     {
 16980              		.loc 1 598 24 view .LVU5953
 598:sieve_extend.c ****     {
 16981              		.loc 1 598 12 view .LVU5954
 16982 5a6d 4883C020 		add	rax, 32	# ivtmp.718,
 16983 5a71 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.715
 16984 5a74 0F863901 		jbe	.L1574	#,
 16984      0000
 16985              	.L1534:
 16986              	.LVL1015:
 16987              	.LBB764:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16988              		.loc 1 600 25 view .LVU5955
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16989              		.loc 1 601 13 view .LVU5956
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16990              		.loc 1 600 32 view .LVU5957
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16991              		.loc 1 600 25 view .LVU5958
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16992              		.loc 1 601 13 view .LVU5959
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16993              		.loc 1 600 32 view .LVU5960
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16994              		.loc 1 600 25 view .LVU5961
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16995              		.loc 1 601 13 view .LVU5962
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16996              		.loc 1 600 32 view .LVU5963
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16997              		.loc 1 600 25 view .LVU5964
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 16998              		.loc 1 601 13 view .LVU5965
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 16999              		.loc 1 600 32 view .LVU5966
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17000              		.loc 1 600 25 view .LVU5967
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17001              		.loc 1 600 25 is_stmt 0 view .LVU5968
 17002              	.LBE764:
 17003              	.LBB765:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17004              		.loc 1 602 25 is_stmt 1 view .LVU5969
GAS LISTING /tmp/ccgH0yRS.s 			page 453


 603:sieve_extend.c ****     }
 17005              		.loc 1 603 13 view .LVU5970
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17006              		.loc 1 602 32 view .LVU5971
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17007              		.loc 1 602 25 view .LVU5972
 603:sieve_extend.c ****     }
 17008              		.loc 1 603 13 view .LVU5973
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17009              		.loc 1 602 32 view .LVU5974
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17010              		.loc 1 602 25 view .LVU5975
 603:sieve_extend.c ****     }
 17011              		.loc 1 603 13 view .LVU5976
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17012              		.loc 1 602 32 view .LVU5977
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17013              		.loc 1 602 25 view .LVU5978
 603:sieve_extend.c ****     }
 17014              		.loc 1 603 13 view .LVU5979
 17015              	.LBE765:
 17016              	.LBB766:
 17017              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17018              		.loc 1 601 25 is_stmt 0 view .LVU5980
 17019 5a7a C463FD00 		vpermq	ymm14, YMMWORD PTR [rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114
 17019      340655
 17020 5a81 C4E3FD00 		vpermq	ymm6, YMMWORD PTR 32[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_11
 17020      74062055 
 17021              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17022              		.loc 1 601 34 view .LVU5981
 17023 5a89 C5FE6F14 		vmovdqu	ymm2, YMMWORD PTR [rsi+rax]	# tmp270, MEM[base: src_35(D), index: ivtmp.718_114, offset: 0
 17023      06
 17024              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17025              		.loc 1 601 25 view .LVU5982
 17026 5a8e C463FD00 		vpermq	ymm10, YMMWORD PTR 64[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_1
 17026      54064055 
 17027              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17028              		.loc 1 601 34 view .LVU5983
 17029 5a96 C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rsi+rax]	# tmp271, MEM[base: src_35(D), index: ivtmp.718_114, offset:
 17029      0620
 17030 5a9c 4183C108 		add	r9d, 8	# ivtmp.715,
 17031              	.LBE766:
 17032              	.LBB767:
 17033              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17034              		.loc 1 603 34 view .LVU5984
 17035 5aa0 C50DD3F8 		vpsrlq	ymm15, ymm14, xmm0	# vect__57.705, vect__102.704, _4
 17036 5aa4 C5CDD3F8 		vpsrlq	ymm7, ymm6, xmm0	# vect__57.705, vect__102.704, _4
 17037              	.LBE767:
 17038              	.LBB768:
 17039              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17040              		.loc 1 601 34 view .LVU5985
GAS LISTING /tmp/ccgH0yRS.s 			page 454


 17041 5aa8 C5EDF3E9 		vpsllq	ymm5, ymm2, xmm1	# vect__104.709, tmp270, shift
 17042 5aac C565F3C1 		vpsllq	ymm8, ymm3, xmm1	# vect__104.709, tmp271, shift
 17043 5ab0 C57E6F64 		vmovdqu	ymm12, YMMWORD PTR 64[rsi+rax]	# tmp272, MEM[base: src_35(D), index: ivtmp.718_114, offset
 17043      0640
 17044              	.LBE768:
 17045              	.LBB769:
 17046              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17047              		.loc 1 603 22 view .LVU5986
 17048 5ab6 C585EBE5 		vpor	ymm4, ymm15, ymm5	# vect__58.710, vect__57.705, vect__104.709
 17049              	.LBE769:
 17050              	.LBB770:
 17051              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17052              		.loc 1 601 34 view .LVU5987
 17053 5aba C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rsi+rax]	# tmp274, MEM[base: src_35(D), index: ivtmp.718_114, offset
 17053      06800000 
 17053      00
 17054              	.LBE770:
 17055              	.LBB771:
 17056              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17057              		.loc 1 603 22 view .LVU5988
 17058 5ac3 C44145EB 		vpor	ymm9, ymm7, ymm8	# vect__58.710, vect__57.705, vect__104.709
 17058      C8
 17059              	.LBE771:
 17060              	.LBB772:
 17061              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17062              		.loc 1 601 25 view .LVU5989
 17063 5ac8 C463FD00 		vpermq	ymm15, YMMWORD PTR 96[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_1
 17063      7C066055 
 17064 5ad0 C4E3FD00 		vpermq	ymm7, YMMWORD PTR 128[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_1
 17064      BC068000 
 17064      000055
 17065              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17066              		.loc 1 601 34 view .LVU5990
 17067 5adb C5FE6F6C 		vmovdqu	ymm5, YMMWORD PTR 96[rsi+rax]	# tmp273, MEM[base: src_35(D), index: ivtmp.718_114, offset:
 17067      0660
 17068              	.LBE772:
 17069              	.LBB773:
 17070              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17071              		.loc 1 603 34 view .LVU5991
 17072 5ae1 C52DD3D8 		vpsrlq	ymm11, ymm10, xmm0	# vect__57.705, vect__102.704, _4
 17073              	.LBE773:
 17074              	.LBB774:
 17075              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17076              		.loc 1 601 34 view .LVU5992
 17077 5ae5 C51DF3E9 		vpsllq	ymm13, ymm12, xmm1	# vect__104.709, tmp272, shift
 17078              	.LBE774:
 17079              	.LBB775:
 17080              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17081              		.loc 1 603 34 view .LVU5993
GAS LISTING /tmp/ccgH0yRS.s 			page 455


 17082 5ae9 C585D3D0 		vpsrlq	ymm2, ymm15, xmm0	# vect__57.705, vect__102.704, _4
 17083              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17084              		.loc 1 603 22 view .LVU5994
 17085 5aed C5FE7F24 		vmovdqu	YMMWORD PTR [rdi+rax], ymm4	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect
 17085      07
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17086              		.loc 1 602 32 is_stmt 1 view .LVU5995
 17087              	.LVL1016:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17088              		.loc 1 602 25 view .LVU5996
 17089              	.LBE775:
 598:sieve_extend.c ****     {
 17090              		.loc 1 598 24 view .LVU5997
 598:sieve_extend.c ****     {
 17091              		.loc 1 598 12 view .LVU5998
 17092              	.LBB776:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17093              		.loc 1 600 25 view .LVU5999
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17094              		.loc 1 601 13 view .LVU6000
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17095              		.loc 1 600 32 view .LVU6001
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17096              		.loc 1 600 25 view .LVU6002
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17097              		.loc 1 601 13 view .LVU6003
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17098              		.loc 1 600 32 view .LVU6004
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17099              		.loc 1 600 25 view .LVU6005
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17100              		.loc 1 601 13 view .LVU6006
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17101              		.loc 1 600 32 view .LVU6007
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17102              		.loc 1 600 25 view .LVU6008
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17103              		.loc 1 601 13 view .LVU6009
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17104              		.loc 1 600 32 view .LVU6010
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17105              		.loc 1 600 25 view .LVU6011
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17106              		.loc 1 600 25 is_stmt 0 view .LVU6012
 17107              	.LBE776:
 17108              	.LBB777:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17109              		.loc 1 602 25 is_stmt 1 view .LVU6013
 603:sieve_extend.c ****     }
 17110              		.loc 1 603 13 view .LVU6014
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17111              		.loc 1 602 32 view .LVU6015
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17112              		.loc 1 602 25 view .LVU6016
 603:sieve_extend.c ****     }
 17113              		.loc 1 603 13 view .LVU6017
GAS LISTING /tmp/ccgH0yRS.s 			page 456


 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17114              		.loc 1 602 32 view .LVU6018
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17115              		.loc 1 602 25 view .LVU6019
 603:sieve_extend.c ****     }
 17116              		.loc 1 603 13 view .LVU6020
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17117              		.loc 1 602 32 view .LVU6021
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17118              		.loc 1 602 25 view .LVU6022
 603:sieve_extend.c ****     }
 17119              		.loc 1 603 13 view .LVU6023
 17120              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17121              		.loc 1 603 22 is_stmt 0 view .LVU6024
 17122 5af2 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__58.710, vect__57.705, vect__104.709
 17122      F5
 17123              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17124              		.loc 1 603 34 view .LVU6025
 17125 5af7 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.705, vect__102.704, _4
 17126              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17127              		.loc 1 603 22 view .LVU6026
 17128 5afb C57E7F4C 		vmovdqu	YMMWORD PTR 32[rdi+rax], ymm9	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], ve
 17128      0720
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17129              		.loc 1 602 32 is_stmt 1 view .LVU6027
 17130              	.LVL1017:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17131              		.loc 1 602 25 view .LVU6028
 17132              	.LBE777:
 598:sieve_extend.c ****     {
 17133              		.loc 1 598 24 view .LVU6029
 598:sieve_extend.c ****     {
 17134              		.loc 1 598 12 view .LVU6030
 17135              	.LBB778:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17136              		.loc 1 600 25 view .LVU6031
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17137              		.loc 1 601 13 view .LVU6032
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17138              		.loc 1 600 32 view .LVU6033
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17139              		.loc 1 600 25 view .LVU6034
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17140              		.loc 1 601 13 view .LVU6035
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17141              		.loc 1 600 32 view .LVU6036
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17142              		.loc 1 600 25 view .LVU6037
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17143              		.loc 1 601 13 view .LVU6038
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17144              		.loc 1 600 32 view .LVU6039
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17145              		.loc 1 600 25 view .LVU6040
GAS LISTING /tmp/ccgH0yRS.s 			page 457


 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17146              		.loc 1 601 13 view .LVU6041
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17147              		.loc 1 600 32 view .LVU6042
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17148              		.loc 1 600 25 view .LVU6043
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17149              		.loc 1 600 25 is_stmt 0 view .LVU6044
 17150              	.LBE778:
 17151              	.LBB779:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17152              		.loc 1 602 25 is_stmt 1 view .LVU6045
 603:sieve_extend.c ****     }
 17153              		.loc 1 603 13 view .LVU6046
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17154              		.loc 1 602 32 view .LVU6047
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17155              		.loc 1 602 25 view .LVU6048
 603:sieve_extend.c ****     }
 17156              		.loc 1 603 13 view .LVU6049
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17157              		.loc 1 602 32 view .LVU6050
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17158              		.loc 1 602 25 view .LVU6051
 603:sieve_extend.c ****     }
 17159              		.loc 1 603 13 view .LVU6052
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17160              		.loc 1 602 32 view .LVU6053
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17161              		.loc 1 602 25 view .LVU6054
 603:sieve_extend.c ****     }
 17162              		.loc 1 603 13 view .LVU6055
 17163              	.LBE779:
 17164              	.LBB780:
 17165              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17166              		.loc 1 601 25 is_stmt 0 view .LVU6056
 17167 5b01 C463FD00 		vpermq	ymm11, YMMWORD PTR 160[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_
 17167      9C06A000 
 17167      000055
 17168              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17169              		.loc 1 601 34 view .LVU6057
 17170 5b0c C5D5F3E1 		vpsllq	ymm4, ymm5, xmm1	# vect__104.709, tmp273, shift
 17171 5b10 C565F3C9 		vpsllq	ymm9, ymm3, xmm1	# vect__104.709, tmp274, shift
 17172 5b14 C57E6FAC 		vmovdqu	ymm13, YMMWORD PTR 160[rsi+rax]	# tmp275, MEM[base: src_35(D), index: ivtmp.718_114, offse
 17172      06A00000 
 17172      00
 17173              	.LBE780:
 17174              	.LBB781:
 17175              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17176              		.loc 1 603 22 view .LVU6058
 17177 5b1d C5EDEBF4 		vpor	ymm6, ymm2, ymm4	# vect__58.710, vect__57.705, vect__104.709
 17178              	.LBE781:
 17179              	.LBB782:
 17180              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
GAS LISTING /tmp/ccgH0yRS.s 			page 458


 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17181              		.loc 1 601 34 view .LVU6059
 17182 5b21 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rsi+rax]	# tmp277, MEM[base: src_35(D), index: ivtmp.718_114, offset
 17182      06E00000 
 17182      00
 17183              	.LBE782:
 17184              	.LBB783:
 17185              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17186              		.loc 1 603 22 view .LVU6060
 17187 5b2a C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__58.710, vect__57.705, vect__104.709
 17187      D1
 17188              	.LBE783:
 17189              	.LBB784:
 17190              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17191              		.loc 1 601 25 view .LVU6061
 17192 5b2f C4E3FD00 		vpermq	ymm2, YMMWORD PTR 192[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_1
 17192      9406C000 
 17192      000055
 17193 5b3a C463FD00 		vpermq	ymm8, YMMWORD PTR 224[rsi+rax], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_1
 17193      8406E000 
 17193      000055
 17194              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17195              		.loc 1 601 34 view .LVU6062
 17196 5b45 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 192[rsi+rax]	# tmp276, MEM[base: src_35(D), index: ivtmp.718_114, offset
 17196      06C00000 
 17196      00
 17197              	.LBE784:
 17198              	.LBB785:
 17199              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17200              		.loc 1 603 22 view .LVU6063
 17201 5b4e C57E7F74 		vmovdqu	YMMWORD PTR 64[rdi+rax], ymm14	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], v
 17201      0740
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17202              		.loc 1 602 32 is_stmt 1 view .LVU6064
 17203              	.LVL1018:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17204              		.loc 1 602 25 view .LVU6065
 17205              	.LBE785:
 598:sieve_extend.c ****     {
 17206              		.loc 1 598 24 view .LVU6066
 598:sieve_extend.c ****     {
 17207              		.loc 1 598 12 view .LVU6067
 17208              	.LBB786:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17209              		.loc 1 600 25 view .LVU6068
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17210              		.loc 1 601 13 view .LVU6069
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17211              		.loc 1 600 32 view .LVU6070
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17212              		.loc 1 600 25 view .LVU6071
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17213              		.loc 1 601 13 view .LVU6072
GAS LISTING /tmp/ccgH0yRS.s 			page 459


 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17214              		.loc 1 600 32 view .LVU6073
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17215              		.loc 1 600 25 view .LVU6074
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17216              		.loc 1 601 13 view .LVU6075
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17217              		.loc 1 600 32 view .LVU6076
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17218              		.loc 1 600 25 view .LVU6077
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17219              		.loc 1 601 13 view .LVU6078
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17220              		.loc 1 600 32 view .LVU6079
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17221              		.loc 1 600 25 view .LVU6080
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17222              		.loc 1 600 25 is_stmt 0 view .LVU6081
 17223              	.LBE786:
 17224              	.LBB787:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17225              		.loc 1 602 25 is_stmt 1 view .LVU6082
 603:sieve_extend.c ****     }
 17226              		.loc 1 603 13 view .LVU6083
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17227              		.loc 1 602 32 view .LVU6084
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17228              		.loc 1 602 25 view .LVU6085
 603:sieve_extend.c ****     }
 17229              		.loc 1 603 13 view .LVU6086
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17230              		.loc 1 602 32 view .LVU6087
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17231              		.loc 1 602 25 view .LVU6088
 603:sieve_extend.c ****     }
 17232              		.loc 1 603 13 view .LVU6089
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17233              		.loc 1 602 32 view .LVU6090
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17234              		.loc 1 602 25 view .LVU6091
 603:sieve_extend.c ****     }
 17235              		.loc 1 603 13 view .LVU6092
 17236              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17237              		.loc 1 603 34 is_stmt 0 view .LVU6093
 17238 5b54 C525D3E0 		vpsrlq	ymm12, ymm11, xmm0	# vect__57.705, vect__102.704, _4
 17239              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17240              		.loc 1 603 22 view .LVU6094
 17241 5b58 C5FE7F74 		vmovdqu	YMMWORD PTR 96[rdi+rax], ymm6	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], ve
 17241      0760
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17242              		.loc 1 602 32 is_stmt 1 view .LVU6095
 17243              	.LVL1019:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17244              		.loc 1 602 25 view .LVU6096
 17245              	.LBE787:
GAS LISTING /tmp/ccgH0yRS.s 			page 460


 598:sieve_extend.c ****     {
 17246              		.loc 1 598 24 view .LVU6097
 598:sieve_extend.c ****     {
 17247              		.loc 1 598 12 view .LVU6098
 17248              	.LBB788:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17249              		.loc 1 600 25 view .LVU6099
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17250              		.loc 1 601 13 view .LVU6100
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17251              		.loc 1 600 32 view .LVU6101
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17252              		.loc 1 600 25 view .LVU6102
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17253              		.loc 1 601 13 view .LVU6103
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17254              		.loc 1 600 32 view .LVU6104
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17255              		.loc 1 600 25 view .LVU6105
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17256              		.loc 1 601 13 view .LVU6106
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17257              		.loc 1 600 32 view .LVU6107
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17258              		.loc 1 600 25 view .LVU6108
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17259              		.loc 1 601 13 view .LVU6109
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17260              		.loc 1 600 32 view .LVU6110
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17261              		.loc 1 600 25 view .LVU6111
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17262              		.loc 1 600 25 is_stmt 0 view .LVU6112
 17263              	.LBE788:
 17264              	.LBB789:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17265              		.loc 1 602 25 is_stmt 1 view .LVU6113
 603:sieve_extend.c ****     }
 17266              		.loc 1 603 13 view .LVU6114
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17267              		.loc 1 602 32 view .LVU6115
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17268              		.loc 1 602 25 view .LVU6116
 603:sieve_extend.c ****     }
 17269              		.loc 1 603 13 view .LVU6117
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17270              		.loc 1 602 32 view .LVU6118
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17271              		.loc 1 602 25 view .LVU6119
 603:sieve_extend.c ****     }
 17272              		.loc 1 603 13 view .LVU6120
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17273              		.loc 1 602 32 view .LVU6121
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17274              		.loc 1 602 25 view .LVU6122
 603:sieve_extend.c ****     }
 17275              		.loc 1 603 13 view .LVU6123
GAS LISTING /tmp/ccgH0yRS.s 			page 461


 17276              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17277              		.loc 1 603 22 is_stmt 0 view .LVU6124
 17278 5b5e C57E7F94 		vmovdqu	YMMWORD PTR 128[rdi+rax], ymm10	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], 
 17278      07800000 
 17278      00
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17279              		.loc 1 602 32 is_stmt 1 view .LVU6125
 17280              	.LVL1020:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17281              		.loc 1 602 25 view .LVU6126
 17282              	.LBE789:
 598:sieve_extend.c ****     {
 17283              		.loc 1 598 24 view .LVU6127
 598:sieve_extend.c ****     {
 17284              		.loc 1 598 12 view .LVU6128
 17285              	.LBB790:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17286              		.loc 1 600 25 view .LVU6129
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17287              		.loc 1 601 13 view .LVU6130
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17288              		.loc 1 600 32 view .LVU6131
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17289              		.loc 1 600 25 view .LVU6132
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17290              		.loc 1 601 13 view .LVU6133
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17291              		.loc 1 600 32 view .LVU6134
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17292              		.loc 1 600 25 view .LVU6135
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17293              		.loc 1 601 13 view .LVU6136
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17294              		.loc 1 600 32 view .LVU6137
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17295              		.loc 1 600 25 view .LVU6138
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17296              		.loc 1 601 13 view .LVU6139
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17297              		.loc 1 600 32 view .LVU6140
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17298              		.loc 1 600 25 view .LVU6141
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17299              		.loc 1 600 25 is_stmt 0 view .LVU6142
 17300              	.LBE790:
 17301              	.LBB791:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17302              		.loc 1 602 25 is_stmt 1 view .LVU6143
 603:sieve_extend.c ****     }
 17303              		.loc 1 603 13 view .LVU6144
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17304              		.loc 1 602 32 view .LVU6145
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17305              		.loc 1 602 25 view .LVU6146
 603:sieve_extend.c ****     }
 17306              		.loc 1 603 13 view .LVU6147
GAS LISTING /tmp/ccgH0yRS.s 			page 462


 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17307              		.loc 1 602 32 view .LVU6148
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17308              		.loc 1 602 25 view .LVU6149
 603:sieve_extend.c ****     }
 17309              		.loc 1 603 13 view .LVU6150
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17310              		.loc 1 602 32 view .LVU6151
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17311              		.loc 1 602 25 view .LVU6152
 603:sieve_extend.c ****     }
 17312              		.loc 1 603 13 view .LVU6153
 17313              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17314              		.loc 1 603 34 is_stmt 0 view .LVU6154
 17315 5b67 C5EDD3E8 		vpsrlq	ymm5, ymm2, xmm0	# vect__57.705, vect__102.704, _4
 17316              	.LBE791:
 17317              	.LBB792:
 17318              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17319              		.loc 1 601 34 view .LVU6155
 17320 5b6b C515F3F1 		vpsllq	ymm14, ymm13, xmm1	# vect__104.709, tmp275, shift
 17321              	.LBE792:
 17322              	.LBB793:
 17323              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17324              		.loc 1 603 34 view .LVU6156
 17325 5b6f C53DD3C8 		vpsrlq	ymm9, ymm8, xmm0	# vect__57.705, vect__102.704, _4
 17326              	.LBE793:
 17327              	.LBB794:
 17328              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17329              		.loc 1 601 34 view .LVU6157
 17330 5b73 C5DDF3F1 		vpsllq	ymm6, ymm4, xmm1	# vect__104.709, tmp276, shift
 17331 5b77 C565F3D1 		vpsllq	ymm10, ymm3, xmm1	# vect__104.709, tmp277, shift
 17332              	.LBE794:
 17333              	.LBB795:
 17334              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17335              		.loc 1 603 22 view .LVU6158
 17336 5b7b C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__58.710, vect__57.705, vect__104.709
 17336      FE
 17337 5b80 C5D5EBFE 		vpor	ymm7, ymm5, ymm6	# vect__58.710, vect__57.705, vect__104.709
 17338 5b84 C57E7FBC 		vmovdqu	YMMWORD PTR 160[rdi+rax], ymm15	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], 
 17338      07A00000 
 17338      00
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17339              		.loc 1 602 32 is_stmt 1 view .LVU6159
 17340              	.LVL1021:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17341              		.loc 1 602 25 view .LVU6160
 17342              	.LBE795:
 598:sieve_extend.c ****     {
 17343              		.loc 1 598 24 view .LVU6161
 598:sieve_extend.c ****     {
 17344              		.loc 1 598 12 view .LVU6162
 17345              	.LBB796:
GAS LISTING /tmp/ccgH0yRS.s 			page 463


 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17346              		.loc 1 600 25 view .LVU6163
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17347              		.loc 1 601 13 view .LVU6164
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17348              		.loc 1 600 32 view .LVU6165
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17349              		.loc 1 600 25 view .LVU6166
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17350              		.loc 1 601 13 view .LVU6167
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17351              		.loc 1 600 32 view .LVU6168
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17352              		.loc 1 600 25 view .LVU6169
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17353              		.loc 1 601 13 view .LVU6170
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17354              		.loc 1 600 32 view .LVU6171
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17355              		.loc 1 600 25 view .LVU6172
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17356              		.loc 1 601 13 view .LVU6173
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17357              		.loc 1 600 32 view .LVU6174
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17358              		.loc 1 600 25 view .LVU6175
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17359              		.loc 1 600 25 is_stmt 0 view .LVU6176
 17360              	.LBE796:
 17361              	.LBB797:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17362              		.loc 1 602 25 is_stmt 1 view .LVU6177
 603:sieve_extend.c ****     }
 17363              		.loc 1 603 13 view .LVU6178
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17364              		.loc 1 602 32 view .LVU6179
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17365              		.loc 1 602 25 view .LVU6180
 603:sieve_extend.c ****     }
 17366              		.loc 1 603 13 view .LVU6181
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17367              		.loc 1 602 32 view .LVU6182
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17368              		.loc 1 602 25 view .LVU6183
 603:sieve_extend.c ****     }
 17369              		.loc 1 603 13 view .LVU6184
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17370              		.loc 1 602 32 view .LVU6185
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17371              		.loc 1 602 25 view .LVU6186
 603:sieve_extend.c ****     }
 17372              		.loc 1 603 13 view .LVU6187
 17373              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17374              		.loc 1 603 22 is_stmt 0 view .LVU6188
 17375 5b8d C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__58.710, vect__57.705, vect__104.709
 17375      DA
GAS LISTING /tmp/ccgH0yRS.s 			page 464


 17376 5b92 C5FE7FBC 		vmovdqu	YMMWORD PTR 192[rdi+rax], ymm7	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], v
 17376      07C00000 
 17376      00
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17377              		.loc 1 602 32 is_stmt 1 view .LVU6189
 17378              	.LVL1022:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17379              		.loc 1 602 25 view .LVU6190
 17380              	.LBE797:
 598:sieve_extend.c ****     {
 17381              		.loc 1 598 24 view .LVU6191
 598:sieve_extend.c ****     {
 17382              		.loc 1 598 12 view .LVU6192
 17383              	.LBB798:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17384              		.loc 1 600 25 view .LVU6193
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17385              		.loc 1 601 13 view .LVU6194
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17386              		.loc 1 600 32 view .LVU6195
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17387              		.loc 1 600 25 view .LVU6196
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17388              		.loc 1 601 13 view .LVU6197
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17389              		.loc 1 600 32 view .LVU6198
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17390              		.loc 1 600 25 view .LVU6199
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17391              		.loc 1 601 13 view .LVU6200
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17392              		.loc 1 600 32 view .LVU6201
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17393              		.loc 1 600 25 view .LVU6202
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17394              		.loc 1 601 13 view .LVU6203
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17395              		.loc 1 600 32 view .LVU6204
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17396              		.loc 1 600 25 view .LVU6205
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17397              		.loc 1 600 25 is_stmt 0 view .LVU6206
 17398              	.LBE798:
 17399              	.LBB799:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17400              		.loc 1 602 25 is_stmt 1 view .LVU6207
 603:sieve_extend.c ****     }
 17401              		.loc 1 603 13 view .LVU6208
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17402              		.loc 1 602 32 view .LVU6209
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17403              		.loc 1 602 25 view .LVU6210
 603:sieve_extend.c ****     }
 17404              		.loc 1 603 13 view .LVU6211
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17405              		.loc 1 602 32 view .LVU6212
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
GAS LISTING /tmp/ccgH0yRS.s 			page 465


 17406              		.loc 1 602 25 view .LVU6213
 603:sieve_extend.c ****     }
 17407              		.loc 1 603 13 view .LVU6214
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17408              		.loc 1 602 32 view .LVU6215
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17409              		.loc 1 602 25 view .LVU6216
 603:sieve_extend.c ****     }
 17410              		.loc 1 603 13 view .LVU6217
 17411              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17412              		.loc 1 603 22 is_stmt 0 view .LVU6218
 17413 5b9b C57E7F9C 		vmovdqu	YMMWORD PTR 224[rdi+rax], ymm11	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], 
 17413      07E00000 
 17413      00
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17414              		.loc 1 602 32 is_stmt 1 view .LVU6219
 17415              	.LVL1023:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17416              		.loc 1 602 25 view .LVU6220
 17417              	.LBE799:
 598:sieve_extend.c ****     {
 17418              		.loc 1 598 24 view .LVU6221
 598:sieve_extend.c ****     {
 17419              		.loc 1 598 12 view .LVU6222
 17420 5ba4 48050001 		add	rax, 256	# ivtmp.718,
 17420      0000
 17421 5baa 4539CA   		cmp	r10d, r9d	# tmp164, ivtmp.715
 17422 5bad 0F87C7FE 		ja	.L1534	#,
 17422      FFFF
 17423              	.L1574:
 17424 5bb3 4589C3   		mov	r11d, r8d	# _25, _25
 17425 5bb6 428D0495 		lea	eax, 0[0+r10*4]	# i,
 17425      00000000 
 17426 5bbe 4983C301 		add	r11, 1	# tmp140,
 17427 5bc2 49C1E305 		sal	r11, 5	# _105,
 17428 5bc6 4C01DF   		add	rdi, r11	# dst, _105
 17429 5bc9 4C01DE   		add	rsi, r11	# src, _105
 17430 5bcc C5F877   		vzeroupper
 17431              	.LVL1024:
 17432              	.L1535:
 605:sieve_extend.c ****     {
 17433              		.loc 1 605 12 view .LVU6223
 17434              	# sieve_extend.c:605:     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
 17435              		.loc 1 605 5 is_stmt 0 view .LVU6224
 17436 5bcf 39C2     		cmp	edx, eax	# size, i
 17437 5bd1 0F8E9400 		jle	.L1578	#,
 17437      0000
 17438              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17439              		.loc 1 607 35 view .LVU6225
 17440 5bd7 4C8B5608 		mov	r10, QWORD PTR 8[rsi]	# _57, MEM[(const uint64_t *)src_30 + 8B]
 17441 5bdb 41B84000 		mov	r8d, 64	# tmp142,
 17441      0000
 17442              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
GAS LISTING /tmp/ccgH0yRS.s 			page 466


 17443              		.loc 1 607 23 view .LVU6226
 17444 5be1 C462F3F7 		shrx	r9, QWORD PTR [rsi], rcx	# tmp143, *src_30, shift
 17444      0E
 17445 5be6 4129C8   		sub	r8d, ecx	# _97, shift
 607:sieve_extend.c ****     }    
 17446              		.loc 1 607 9 is_stmt 1 view .LVU6227
 17447              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17448              		.loc 1 607 43 is_stmt 0 view .LVU6228
 17449 5be9 C442B9F7 		shlx	r11, r10, r8	# tmp145, _57, _97
 17449      DA
 17450              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17451              		.loc 1 607 32 view .LVU6229
 17452 5bee 4D09D9   		or	r9, r11	# tmp146, tmp145
 17453 5bf1 4C890F   		mov	QWORD PTR [rdi], r9	# *dst_86, tmp146
 605:sieve_extend.c ****     {
 17454              		.loc 1 605 22 is_stmt 1 view .LVU6230
 17455              	.LVL1025:
 605:sieve_extend.c ****     {
 17456              		.loc 1 605 12 view .LVU6231
 17457              	# sieve_extend.c:605:     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
 17458              		.loc 1 605 22 is_stmt 0 view .LVU6232
 17459 5bf4 448D4801 		lea	r9d, 1[rax]	# i,
 17460              	.LVL1026:
 17461              	# sieve_extend.c:605:     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
 17462              		.loc 1 605 5 view .LVU6233
 17463 5bf8 4439CA   		cmp	edx, r9d	# size, i
 17464 5bfb 7E6D     		jle	.L1575	#,
 607:sieve_extend.c ****     }    
 17465              		.loc 1 607 9 is_stmt 1 view .LVU6234
 17466              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17467              		.loc 1 607 35 is_stmt 0 view .LVU6235
 17468 5bfd 4C8B4E10 		mov	r9, QWORD PTR 16[rsi]	# _109, MEM[(const uint64_t *)src_30 + 16B]
 17469              	.LVL1027:
 17470              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17471              		.loc 1 607 23 view .LVU6236
 17472 5c01 C442F3F7 		shrx	r10, r10, rcx	# tmp148, _57, shift
 17472      D2
 17473              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17474              		.loc 1 607 43 view .LVU6237
 17475 5c06 C442B9F7 		shlx	r11, r9, r8	# tmp149, _109, _97
 17475      D9
 17476              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17477              		.loc 1 607 32 view .LVU6238
 17478 5c0b 4D09DA   		or	r10, r11	# tmp150, tmp149
 17479 5c0e 4C895708 		mov	QWORD PTR 8[rdi], r10	# MEM[(uint64_t *)dst_86 + 8B], tmp150
 605:sieve_extend.c ****     {
 17480              		.loc 1 605 22 is_stmt 1 view .LVU6239
 17481              	.LVL1028:
 605:sieve_extend.c ****     {
GAS LISTING /tmp/ccgH0yRS.s 			page 467


 17482              		.loc 1 605 12 view .LVU6240
 17483              	# sieve_extend.c:605:     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
 17484              		.loc 1 605 22 is_stmt 0 view .LVU6241
 17485 5c12 448D5002 		lea	r10d, 2[rax]	# i,
 17486              	.LVL1029:
 17487              	# sieve_extend.c:605:     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
 17488              		.loc 1 605 5 view .LVU6242
 17489 5c16 4439D2   		cmp	edx, r10d	# size, i
 17490 5c19 7E4F     		jle	.L1575	#,
 607:sieve_extend.c ****     }    
 17491              		.loc 1 607 9 is_stmt 1 view .LVU6243
 17492              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17493              		.loc 1 607 35 is_stmt 0 view .LVU6244
 17494 5c1b 4C8B5618 		mov	r10, QWORD PTR 24[rsi]	# _54, MEM[(const uint64_t *)src_30 + 24B]
 17495              	.LVL1030:
 17496              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17497              		.loc 1 607 23 view .LVU6245
 17498 5c1f C442F3F7 		shrx	r9, r9, rcx	# tmp152, _109, shift
 17498      C9
 17499              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17500              		.loc 1 607 43 view .LVU6246
 17501 5c24 C442B9F7 		shlx	r11, r10, r8	# tmp153, _54, _97
 17501      DA
 17502              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17503              		.loc 1 607 32 view .LVU6247
 17504 5c29 4D09D9   		or	r9, r11	# tmp154, tmp153
 17505 5c2c 4C894F10 		mov	QWORD PTR 16[rdi], r9	# MEM[(uint64_t *)dst_86 + 16B], tmp154
 605:sieve_extend.c ****     {
 17506              		.loc 1 605 22 is_stmt 1 view .LVU6248
 17507              	.LVL1031:
 605:sieve_extend.c ****     {
 17508              		.loc 1 605 12 view .LVU6249
 17509              	# sieve_extend.c:605:     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
 17510              		.loc 1 605 22 is_stmt 0 view .LVU6250
 17511 5c30 448D4803 		lea	r9d, 3[rax]	# i,
 17512              	.LVL1032:
 17513              	# sieve_extend.c:605:     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
 17514              		.loc 1 605 5 view .LVU6251
 17515 5c34 4439CA   		cmp	edx, r9d	# size, i
 17516 5c37 7E31     		jle	.L1575	#,
 607:sieve_extend.c ****     }    
 17517              		.loc 1 607 9 is_stmt 1 view .LVU6252
 17518              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17519              		.loc 1 607 35 is_stmt 0 view .LVU6253
 17520 5c39 4C8B4E20 		mov	r9, QWORD PTR 32[rsi]	# _77, MEM[(const uint64_t *)src_30 + 32B]
 17521              	.LVL1033:
 17522              	# sieve_extend.c:605:     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
GAS LISTING /tmp/ccgH0yRS.s 			page 468


 17523              		.loc 1 605 22 view .LVU6254
 17524 5c3d 83C004   		add	eax, 4	# i,
 17525              	.LVL1034:
 17526              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17527              		.loc 1 607 23 view .LVU6255
 17528 5c40 C442F3F7 		shrx	r10, r10, rcx	# tmp156, _54, shift
 17528      D2
 17529              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17530              		.loc 1 607 43 view .LVU6256
 17531 5c45 C442B9F7 		shlx	r11, r9, r8	# tmp157, _77, _97
 17531      D9
 17532              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17533              		.loc 1 607 32 view .LVU6257
 17534 5c4a 4D09DA   		or	r10, r11	# tmp158, tmp157
 17535              	# sieve_extend.c:605:     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
 17536              		.loc 1 605 5 view .LVU6258
 17537 5c4d 39C2     		cmp	edx, eax	# size, i
 17538              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17539              		.loc 1 607 32 view .LVU6259
 17540 5c4f 4C895718 		mov	QWORD PTR 24[rdi], r10	# MEM[(uint64_t *)dst_86 + 24B], tmp158
 605:sieve_extend.c ****     {
 17541              		.loc 1 605 22 is_stmt 1 view .LVU6260
 17542              	.LVL1035:
 605:sieve_extend.c ****     {
 17543              		.loc 1 605 12 view .LVU6261
 17544              	# sieve_extend.c:605:     for (; i < size; ++i,++src,++dst)
 605:sieve_extend.c ****     {
 17545              		.loc 1 605 5 is_stmt 0 view .LVU6262
 17546 5c53 7E15     		jle	.L1575	#,
 607:sieve_extend.c ****     }    
 17547              		.loc 1 607 9 is_stmt 1 discriminator 2 view .LVU6263
 17548              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17549              		.loc 1 607 43 is_stmt 0 discriminator 2 view .LVU6264
 17550 5c55 488B5628 		mov	rdx, QWORD PTR 40[rsi]	# MEM[(const uint64_t *)src_30 + 40B], MEM[(const uint64_t *)src_30 + 4
 17551              	.LVL1036:
 17552              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17553              		.loc 1 607 23 discriminator 2 view .LVU6265
 17554 5c59 C4C2F3F7 		shrx	rcx, r9, rcx	# tmp162, _77, shift
 17554      C9
 17555              	.LVL1037:
 17556              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17557              		.loc 1 607 43 discriminator 2 view .LVU6266
 17558 5c5e C4E2B9F7 		shlx	rsi, rdx, r8	# tmp160, MEM[(const uint64_t *)src_30 + 40B], _97
 17558      F2
 17559              	.LVL1038:
 17560              	# sieve_extend.c:607:         *dst = ((*src)>>shift) | (*(src+1)<<(64-shift));
 607:sieve_extend.c ****     }    
 17561              		.loc 1 607 32 discriminator 2 view .LVU6267
 17562 5c63 4809F1   		or	rcx, rsi	# tmp163, tmp160
GAS LISTING /tmp/ccgH0yRS.s 			page 469


 17563 5c66 48894F20 		mov	QWORD PTR 32[rdi], rcx	# MEM[(uint64_t *)dst_86 + 32B], tmp163
 605:sieve_extend.c ****     {
 17564              		.loc 1 605 22 is_stmt 1 discriminator 2 view .LVU6268
 17565              	.LVL1039:
 605:sieve_extend.c ****     {
 17566              		.loc 1 605 12 discriminator 2 view .LVU6269
 17567              	.L1575:
 17568              	# sieve_extend.c:609: }
 609:sieve_extend.c **** 
 17569              		.loc 1 609 1 is_stmt 0 view .LVU6270
 17570 5c6a C3       		ret	
 17571              	.LVL1040:
 17572              	.L1578:
 609:sieve_extend.c **** 
 17573              		.loc 1 609 1 view .LVU6271
 17574 5c6b C3       		ret	
 17575              	.LVL1041:
 17576              	.L1577:
 17577              	.LBB800:
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17578              		.loc 1 600 25 is_stmt 1 view .LVU6272
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17579              		.loc 1 601 13 view .LVU6273
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17580              		.loc 1 600 32 view .LVU6274
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17581              		.loc 1 600 25 view .LVU6275
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17582              		.loc 1 601 13 view .LVU6276
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17583              		.loc 1 600 32 view .LVU6277
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17584              		.loc 1 600 25 view .LVU6278
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17585              		.loc 1 601 13 view .LVU6279
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17586              		.loc 1 600 32 view .LVU6280
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17587              		.loc 1 600 25 view .LVU6281
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17588              		.loc 1 601 13 view .LVU6282
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17589              		.loc 1 600 32 view .LVU6283
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17590              		.loc 1 600 25 view .LVU6284
 600:sieve_extend.c ****             *(dst+j) = (*(src+j))<<shift;
 17591              		.loc 1 600 25 is_stmt 0 view .LVU6285
 17592              	.LBE800:
 17593              	.LBB801:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17594              		.loc 1 602 25 is_stmt 1 view .LVU6286
 603:sieve_extend.c ****     }
 17595              		.loc 1 603 13 view .LVU6287
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17596              		.loc 1 602 32 view .LVU6288
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17597              		.loc 1 602 25 view .LVU6289
GAS LISTING /tmp/ccgH0yRS.s 			page 470


 603:sieve_extend.c ****     }
 17598              		.loc 1 603 13 view .LVU6290
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17599              		.loc 1 602 32 view .LVU6291
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17600              		.loc 1 602 25 view .LVU6292
 603:sieve_extend.c ****     }
 17601              		.loc 1 603 13 view .LVU6293
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17602              		.loc 1 602 32 view .LVU6294
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17603              		.loc 1 602 25 view .LVU6295
 603:sieve_extend.c ****     }
 17604              		.loc 1 603 13 view .LVU6296
 17605              	.LBE801:
 17606              	.LBB802:
 17607              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17608              		.loc 1 601 25 is_stmt 0 view .LVU6297
 17609 5c6c C4E3FD00 		vpermq	ymm7, YMMWORD PTR 32[rsi], 85	# vect__102.704, MEM[base: src_35(D), index: ivtmp.718_114, o
 17609      7E2055
 17610 5c73 41B90200 		mov	r9d, 2	# ivtmp.715,
 17610      0000
 17611              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17612              		.loc 1 601 34 view .LVU6298
 17613 5c79 C57E6F4E 		vmovdqu	ymm9, YMMWORD PTR 32[rsi]	# tmp278, MEM[base: src_35(D), index: ivtmp.718_114, offset: 0B]
 17613      20
 17614 5c7e B8400000 		mov	eax, 64	# ivtmp.718,
 17614      00
 17615              	.LBE802:
 17616              	.LBB803:
 17617              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17618              		.loc 1 603 34 view .LVU6299
 17619 5c83 C545D3C0 		vpsrlq	ymm8, ymm7, xmm0	# vect__57.705, vect__102.704, _4
 17620              	.LBE803:
 17621              	.LBB804:
 17622              	# sieve_extend.c:601:             *(dst+j) = (*(src+j))<<shift;
 601:sieve_extend.c ****         for (int j = 0; j < 4; ++j)
 17623              		.loc 1 601 34 view .LVU6300
 17624 5c87 C535F3D1 		vpsllq	ymm10, ymm9, xmm1	# vect__104.709, tmp278, shift
 17625              	.LBE804:
 17626              	.LBB805:
 17627              	# sieve_extend.c:603:             *(dst+j) |= (*(src+1)>>(64-shift));
 603:sieve_extend.c ****     }
 17628              		.loc 1 603 22 view .LVU6301
 17629 5c8b C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__58.710, vect__57.705, vect__104.709
 17629      DA
 17630 5c90 C57E7F5F 		vmovdqu	YMMWORD PTR 32[rdi], ymm11	# MEM[base: dst_34(D), index: ivtmp.718_114, offset: 0B], vect_
 17630      20
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17631              		.loc 1 602 32 is_stmt 1 view .LVU6302
 17632              	.LVL1042:
 602:sieve_extend.c ****             *(dst+j) |= (*(src+1)>>(64-shift));
 17633              		.loc 1 602 25 view .LVU6303
 17634              	.LBE805:
GAS LISTING /tmp/ccgH0yRS.s 			page 471


 598:sieve_extend.c ****     {
 17635              		.loc 1 598 24 view .LVU6304
 598:sieve_extend.c ****     {
 17636              		.loc 1 598 12 view .LVU6305
 17637 5c95 E9F6FCFF 		jmp	.L1566	#
 17637      FF
 17638              	.LVL1043:
 17639              	.L1576:
 17640              	# sieve_extend.c:596:     int i = 0;
 596:sieve_extend.c ****     // MSVC: use steps of 2 for SSE, 4 for AVX2, 8 for AVX512
 17641              		.loc 1 596 9 is_stmt 0 view .LVU6306
 17642 5c9a 31C0     		xor	eax, eax	# i
 17643 5c9c E92EFFFF 		jmp	.L1535	#
 17643      FF
 17644              		.cfi_endproc
 17645              	.LFE66:
 17647              		.section	.rodata.str1.8,"aMS",@progbits,1
 17648              		.align 8
 17649              	.LC9:
 17650 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 17650      6C743A20 
 17650      53696576 
 17650      6573697A 
 17650      6520256A 
 17651 0055 000000   		.align 8
 17652              	.LC10:
 17653 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 17653      616C6964 
 17653      20726573 
 17653      756C742E 
 17653      20536965 
 17654              		.section	.rodata.str1.1
 17655              	.LC11:
 17656 0023 44656570 		.string	"DeepAnalyzing"
 17656      416E616C 
 17656      797A696E 
 17656      6700
 17657              		.section	.rodata.str1.8
 17658 00bb 00000000 		.align 8
 17658      00
 17659              	.LC12:
 17660 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 17660      65722025 
 17660      6A752028 
 17660      256A7529 
 17660      20776173 
 17661              		.align 8
 17662              	.LC13:
 17663 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 17663      65722025 
 17663      6A752028 
 17663      256A7529 
 17663      20776173 
 17664              		.text
 17665 5ca1 66662E0F 		.p2align 4
 17665      1F840000 
 17665      0000000F 
GAS LISTING /tmp/ccgH0yRS.s 			page 472


 17665      1F4000
 17666              		.globl	validatePrimeCount
 17668              	validatePrimeCount:
 17669              	.LVL1044:
 17670              	.LFB79:
1071:sieve_extend.c **** 
 17671              		.loc 1 1071 76 is_stmt 1 view -0
 17672              		.cfi_startproc
1071:sieve_extend.c **** 
 17673              		.loc 1 1071 76 is_stmt 0 view .LVU6308
 17674 5cb0 F30F1EFA 		endbr64	
1073:sieve_extend.c ****     counter_t valid_primes = 0;
 17675              		.loc 1 1073 5 is_stmt 1 view .LVU6309
 17676              	# sieve_extend.c:1071: int validatePrimeCount(struct sieve_state *sieve, int option_verboselevel) {
1071:sieve_extend.c **** 
 17677              		.loc 1 1071 76 is_stmt 0 view .LVU6310
 17678 5cb4 4157     		push	r15	#
 17679              		.cfi_def_cfa_offset 16
 17680              		.cfi_offset 15, -16
 17681 5cb6 4156     		push	r14	#
 17682              		.cfi_def_cfa_offset 24
 17683              		.cfi_offset 14, -24
 17684 5cb8 4155     		push	r13	#
 17685              		.cfi_def_cfa_offset 32
 17686              		.cfi_offset 13, -32
 17687 5cba 4154     		push	r12	#
 17688              		.cfi_def_cfa_offset 40
 17689              		.cfi_offset 12, -40
 17690 5cbc 55       		push	rbp	#
 17691              		.cfi_def_cfa_offset 48
 17692              		.cfi_offset 6, -48
 17693 5cbd 4889FD   		mov	rbp, rdi	# sieve, tmp307
 17694 5cc0 53       		push	rbx	#
 17695              		.cfi_def_cfa_offset 56
 17696              		.cfi_offset 3, -56
 17697 5cc1 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 17698 5cc3 488D6424 		lea	rsp, -56[rsp]	#,
 17698      C8
 17699              		.cfi_def_cfa_offset 112
 17700              	# sieve_extend.c:1073:     counter_t primecount = count_primes(sieve);
1073:sieve_extend.c ****     counter_t valid_primes = 0;
 17701              		.loc 1 1073 28 view .LVU6311
 17702 5cc8 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 17703 5ccb 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 17704              	.LVL1045:
 17705              	.LBB827:
 17706              	.LBI827:
1042:sieve_extend.c ****     counter_t primeCount = 1;
 17707              		.loc 1 1042 18 is_stmt 1 view .LVU6312
 17708              	.LBB828:
 17709              	.LBB829:
1044:sieve_extend.c ****     return primeCount;
 17710              		.loc 1 1044 30 view .LVU6313
 17711 5ccf 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_199, sieve_18(D)->size
 17712              	# sieve_extend.c:1044:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1044:sieve_extend.c ****     return primeCount;
 17713              		.loc 1 1044 5 is_stmt 0 view .LVU6314
GAS LISTING /tmp/ccgH0yRS.s 			page 473


 17714 5cd3 4883FF01 		cmp	rdi, 1	# _25,
 17715 5cd7 0F860B05 		jbe	.L1580	#,
 17715      0000
 17716              	# sieve_extend.c:1044:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1044:sieve_extend.c ****     return primeCount;
 17717              		.loc 1 1044 20 view .LVU6315
 17718 5cdd B8010000 		mov	eax, 1	# factor,
 17718      00
 17719              	.LBE829:
 17720              	# sieve_extend.c:1043:     counter_t primeCount = 1;
1043:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitarray, factor+
 17721              		.loc 1 1043 15 view .LVU6316
 17722 5ce2 41B80100 		mov	r8d, 1	# primeCount,
 17722      0000
 17723              	.LVL1046:
 17724 5ce8 0F1F8400 		.p2align 4
 17724      00000000 
 17725              		.p2align 3
 17726              	.L1583:
 17727              	.LBB832:
1044:sieve_extend.c ****     return primeCount;
 17728              		.loc 1 1044 104 is_stmt 1 view .LVU6317
 17729              	# sieve_extend.c:1044:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1044:sieve_extend.c ****     return primeCount;
 17730              		.loc 1 1044 114 is_stmt 0 view .LVU6318
 17731 5cf0 4983C001 		add	r8, 1	# primeCount,
 17732              	.LVL1047:
1044:sieve_extend.c ****     return primeCount;
 17733              		.loc 1 1044 52 is_stmt 1 view .LVU6319
 17734              	# sieve_extend.c:1044:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1044:sieve_extend.c ****     return primeCount;
 17735              		.loc 1 1044 61 is_stmt 0 view .LVU6320
 17736 5cf4 4883C001 		add	rax, 1	# factor,
 17737              	.LVL1048:
 17738              	.L1723:
 17739              	.LBB830:
 17740              	.LBI830:
 122:sieve_extend.c ****     while (bitarray[wordindex(index)] & markmask(index)) index++;
 17741              		.loc 1 122 25 is_stmt 1 view .LVU6321
 17742              	.LBB831:
 123:sieve_extend.c ****     return index;
 17743              		.loc 1 123 5 view .LVU6322
 123:sieve_extend.c ****     return index;
 17744              		.loc 1 123 11 view .LVU6323
 17745              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17746              		.loc 1 123 21 is_stmt 0 view .LVU6324
 17747 5cf8 4889C1   		mov	rcx, rax	# tmp162, factor
 17748 5cfb 48C1E906 		shr	rcx, 6	# tmp162,
 17749              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17750              		.loc 1 123 12 view .LVU6325
 17751 5cff 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 17752              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17753              		.loc 1 123 11 view .LVU6326
 17754 5d03 490FA3C3 		bt	r11, rax	# *_106, factor
GAS LISTING /tmp/ccgH0yRS.s 			page 474


 17755 5d07 0F83AB00 		jnc	.L1581	#,
 17755      0000
 123:sieve_extend.c ****     return index;
 17756              		.loc 1 123 58 is_stmt 1 view .LVU6327
 17757              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17758              		.loc 1 123 63 is_stmt 0 view .LVU6328
 17759 5d0d 4C8D6001 		lea	r12, 1[rax]	# tmp235,
 17760              	.LVL1049:
 17761              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17762              		.loc 1 123 21 view .LVU6329
 17763 5d11 4D89E5   		mov	r13, r12	# tmp167, factor
 17764              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17765              		.loc 1 123 63 view .LVU6330
 17766 5d14 4C89E0   		mov	rax, r12	# factor, tmp235
 123:sieve_extend.c ****     return index;
 17767              		.loc 1 123 11 is_stmt 1 view .LVU6331
 17768              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17769              		.loc 1 123 21 is_stmt 0 view .LVU6332
 17770 5d17 49C1ED06 		shr	r13, 6	# tmp167,
 17771              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17772              		.loc 1 123 12 view .LVU6333
 17773 5d1b 4E8B3CEA 		mov	r15, QWORD PTR [rdx+r13*8]	# *_35, *_35
 17774              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17775              		.loc 1 123 11 view .LVU6334
 17776 5d1f 4D0FA3E7 		bt	r15, r12	# *_35, factor
 17777 5d23 0F838F00 		jnc	.L1581	#,
 17777      0000
 123:sieve_extend.c ****     return index;
 17778              		.loc 1 123 58 is_stmt 1 view .LVU6335
 17779              	.LVL1050:
 17780              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17781              		.loc 1 123 63 is_stmt 0 view .LVU6336
 17782 5d29 4883C001 		add	rax, 1	# factor,
 17783              	.LVL1051:
 123:sieve_extend.c ****     return index;
 17784              		.loc 1 123 11 is_stmt 1 view .LVU6337
 17785              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17786              		.loc 1 123 21 is_stmt 0 view .LVU6338
 17787 5d2d 4989C6   		mov	r14, rax	# tmp279, factor
 17788 5d30 49C1EE06 		shr	r14, 6	# tmp279,
 17789              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17790              		.loc 1 123 12 view .LVU6339
 17791 5d34 4A8B34F2 		mov	rsi, QWORD PTR [rdx+r14*8]	# *_35, *_35
 17792              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17793              		.loc 1 123 11 view .LVU6340
 17794 5d38 480FA3C6 		bt	rsi, rax	# *_35, factor
 17795 5d3c 737A     		jnc	.L1581	#,
GAS LISTING /tmp/ccgH0yRS.s 			page 475


 123:sieve_extend.c ****     return index;
 17796              		.loc 1 123 58 is_stmt 1 view .LVU6341
 17797              	.LVL1052:
 17798              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17799              		.loc 1 123 63 is_stmt 0 view .LVU6342
 17800 5d3e 498D4424 		lea	rax, 2[r12]	# factor,
 17800      02
 17801              	.LVL1053:
 123:sieve_extend.c ****     return index;
 17802              		.loc 1 123 11 is_stmt 1 view .LVU6343
 17803              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17804              		.loc 1 123 21 is_stmt 0 view .LVU6344
 17805 5d43 4989C2   		mov	r10, rax	# tmp283, factor
 17806 5d46 49C1EA06 		shr	r10, 6	# tmp283,
 17807              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17808              		.loc 1 123 12 view .LVU6345
 17809 5d4a 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 17810              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17811              		.loc 1 123 11 view .LVU6346
 17812 5d4e 480FA3C1 		bt	rcx, rax	# *_35, factor
 17813 5d52 7364     		jnc	.L1581	#,
 123:sieve_extend.c ****     return index;
 17814              		.loc 1 123 58 is_stmt 1 view .LVU6347
 17815              	.LVL1054:
 17816              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17817              		.loc 1 123 63 is_stmt 0 view .LVU6348
 17818 5d54 498D4424 		lea	rax, 3[r12]	# factor,
 17818      03
 17819              	.LVL1055:
 123:sieve_extend.c ****     return index;
 17820              		.loc 1 123 11 is_stmt 1 view .LVU6349
 17821              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17822              		.loc 1 123 21 is_stmt 0 view .LVU6350
 17823 5d59 4989C3   		mov	r11, rax	# tmp287, factor
 17824 5d5c 49C1EB06 		shr	r11, 6	# tmp287,
 17825              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17826              		.loc 1 123 12 view .LVU6351
 17827 5d60 4E8B2CDA 		mov	r13, QWORD PTR [rdx+r11*8]	# *_35, *_35
 17828              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17829              		.loc 1 123 11 view .LVU6352
 17830 5d64 490FA3C5 		bt	r13, rax	# *_35, factor
 17831 5d68 734E     		jnc	.L1581	#,
 123:sieve_extend.c ****     return index;
 17832              		.loc 1 123 58 is_stmt 1 view .LVU6353
 17833              	.LVL1056:
 17834              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17835              		.loc 1 123 63 is_stmt 0 view .LVU6354
 17836 5d6a 498D4424 		lea	rax, 4[r12]	# factor,
GAS LISTING /tmp/ccgH0yRS.s 			page 476


 17836      04
 17837              	.LVL1057:
 123:sieve_extend.c ****     return index;
 17838              		.loc 1 123 11 is_stmt 1 view .LVU6355
 17839              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17840              		.loc 1 123 21 is_stmt 0 view .LVU6356
 17841 5d6f 4989C7   		mov	r15, rax	# tmp291, factor
 17842 5d72 49C1EF06 		shr	r15, 6	# tmp291,
 17843              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17844              		.loc 1 123 12 view .LVU6357
 17845 5d76 4E8B34FA 		mov	r14, QWORD PTR [rdx+r15*8]	# *_35, *_35
 17846              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17847              		.loc 1 123 11 view .LVU6358
 17848 5d7a 490FA3C6 		bt	r14, rax	# *_35, factor
 17849 5d7e 7338     		jnc	.L1581	#,
 123:sieve_extend.c ****     return index;
 17850              		.loc 1 123 58 is_stmt 1 view .LVU6359
 17851              	.LVL1058:
 17852              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17853              		.loc 1 123 63 is_stmt 0 view .LVU6360
 17854 5d80 498D4424 		lea	rax, 5[r12]	# factor,
 17854      05
 17855              	.LVL1059:
 123:sieve_extend.c ****     return index;
 17856              		.loc 1 123 11 is_stmt 1 view .LVU6361
 17857              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17858              		.loc 1 123 21 is_stmt 0 view .LVU6362
 17859 5d85 4889C6   		mov	rsi, rax	# tmp295, factor
 17860 5d88 48C1EE06 		shr	rsi, 6	# tmp295,
 17861              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17862              		.loc 1 123 12 view .LVU6363
 17863 5d8c 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 17864              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17865              		.loc 1 123 11 view .LVU6364
 17866 5d90 490FA3C2 		bt	r10, rax	# *_35, factor
 17867 5d94 7322     		jnc	.L1581	#,
 123:sieve_extend.c ****     return index;
 17868              		.loc 1 123 58 is_stmt 1 view .LVU6365
 17869              	.LVL1060:
 17870              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17871              		.loc 1 123 63 is_stmt 0 view .LVU6366
 17872 5d96 498D4424 		lea	rax, 6[r12]	# factor,
 17872      06
 17873              	.LVL1061:
 123:sieve_extend.c ****     return index;
 17874              		.loc 1 123 11 is_stmt 1 view .LVU6367
 17875              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17876              		.loc 1 123 21 is_stmt 0 view .LVU6368
GAS LISTING /tmp/ccgH0yRS.s 			page 477


 17877 5d9b 4889C1   		mov	rcx, rax	# tmp299, factor
 17878 5d9e 48C1E906 		shr	rcx, 6	# tmp299,
 17879              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17880              		.loc 1 123 12 view .LVU6369
 17881 5da2 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 17882              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17883              		.loc 1 123 11 view .LVU6370
 17884 5da6 490FA3C3 		bt	r11, rax	# *_35, factor
 17885 5daa 730C     		jnc	.L1581	#,
 123:sieve_extend.c ****     return index;
 17886              		.loc 1 123 58 is_stmt 1 view .LVU6371
 17887              	.LVL1062:
 17888              	# sieve_extend.c:123:     while (bitarray[wordindex(index)] & markmask(index)) index++;
 123:sieve_extend.c ****     return index;
 17889              		.loc 1 123 63 is_stmt 0 view .LVU6372
 17890 5dac 498D4424 		lea	rax, 7[r12]	# factor,
 17890      07
 17891              	.LVL1063:
 123:sieve_extend.c ****     return index;
 17892              		.loc 1 123 11 is_stmt 1 view .LVU6373
 17893 5db1 E942FFFF 		jmp	.L1723	#
 17893      FF
 17894              		.p2align 4,,7
 17895 5db6 6690     		.p2align 3
 17896              	.L1581:
 17897              	.LVL1064:
 123:sieve_extend.c ****     return index;
 17898              		.loc 1 123 11 is_stmt 0 view .LVU6374
 17899              	.LBE831:
 17900              	.LBE830:
1044:sieve_extend.c ****     return primeCount;
 17901              		.loc 1 1044 30 is_stmt 1 view .LVU6375
 17902              	# sieve_extend.c:1044:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(s
1044:sieve_extend.c ****     return primeCount;
 17903              		.loc 1 1044 5 is_stmt 0 view .LVU6376
 17904 5db8 4839C7   		cmp	rdi, rax	# _25, factor
 17905 5dbb 0F872FFF 		ja	.L1583	#,
 17905      FFFF
1044:sieve_extend.c ****     return primeCount;
 17906              		.loc 1 1044 5 view .LVU6377
 17907              	.LBE832:
1045:sieve_extend.c **** }
 17908              		.loc 1 1045 5 is_stmt 1 view .LVU6378
 17909              	.LVL1065:
1045:sieve_extend.c **** }
 17910              		.loc 1 1045 5 is_stmt 0 view .LVU6379
 17911              	.LBE828:
 17912              	.LBE827:
1074:sieve_extend.c ****     switch(sieve->size) {
 17913              		.loc 1 1074 5 is_stmt 1 view .LVU6380
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 17914              		.loc 1 1075 5 view .LVU6381
 17915 5dc1 83FB03   		cmp	ebx, 3	# option_verboselevel,
 17916 5dc4 0F9FC2   		setg	dl	#, tmp172
 17917 5dc7 4981F9A0 		cmp	r9, 100000	# pretmp_199,
GAS LISTING /tmp/ccgH0yRS.s 			page 478


 17917      860100
 17918 5dce 0F842D06 		je	.L1584	#,
 17918      0000
 17919 5dd4 0F86CC02 		jbe	.L1724	#,
 17919      0000
 17920 5dda 4981F900 		cmp	r9, 100000000	# pretmp_199,
 17920      E1F505
 17921 5de1 0F84D905 		je	.L1592	#,
 17921      0000
 17922              		.p2align 4,,4
 17923 5de7 0F863303 		jbe	.L1725	#,
 17923      0000
 17924 5ded 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 17924      CA9A3B
 17925 5df4 0F85EB05 		jne	.L1590	#,
 17925      0000
 17926 5dfa 4981F82E 		cmp	r8, 50847534	# primeCount,
 17926      DF0703
 17927              	# sieve_extend.c:1084:         case 1000000000:    valid_primes = 50847534; break;
1084:sieve_extend.c ****         default:            valid_primes= 0;
 17928              		.loc 1 1084 42 is_stmt 0 view .LVU6382
 17929 5e01 B92EDF07 		mov	ecx, 50847534	# valid_primes,
 17929      03
 17930 5e06 410F94C4 		sete	r12b	#, tmp189
 17931 5e0a 4421E2   		and	edx, r12d	# _251, tmp189
 17932 5e0d 4981F82E 		cmp	r8, 50847534	# primeCount,
 17932      DF0703
 17933 5e14 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp189
 17934 5e18 410F95C6 		setne	r14b	#, _135
1084:sieve_extend.c ****         default:            valid_primes= 0;
 17935              		.loc 1 1084 29 is_stmt 1 view .LVU6383
 17936              	.LVL1066:
1084:sieve_extend.c ****         default:            valid_primes= 0;
 17937              		.loc 1 1084 54 view .LVU6384
 17938 5e1c 0F1F4000 		.p2align 4
 17939              		.p2align 3
 17940              	.L1597:
1088:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 17941              		.loc 1 1088 5 view .LVU6385
1089:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17942              		.loc 1 1089 5 view .LVU6386
 17943              	# sieve_extend.c:1089:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is
1089:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17944              		.loc 1 1089 8 is_stmt 0 view .LVU6387
 17945 5e20 84D2     		test	dl, dl	# _251
 17946 5e22 0F841704 		je	.L1598	#,
 17946      0000
1089:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 17947              		.loc 1 1089 45 is_stmt 1 discriminator 1 view .LVU6388
 17948              	.LVL1067:
 17949              	.LBB834:
 17950              	.LBI834:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17951              		.loc 3 105 1 discriminator 1 view .LVU6389
 17952              	.LBB835:
 17953              		.loc 3 107 3 discriminator 1 view .LVU6390
 17954              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccgH0yRS.s 			page 479


 17955              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6391
 17956 5e28 4C89CA   		mov	rdx, r9	#, pretmp_199
 17957 5e2b 488D3500 		lea	rsi, .LC9[rip]	#,
 17957      000000
 17958 5e32 BF010000 		mov	edi, 1	#,
 17958      00
 17959 5e37 31C0     		xor	eax, eax	#
 17960 5e39 E8000000 		call	__printf_chk@PLT	#
 17960      00
 17961              	.LVL1068:
 17962              		.loc 3 107 10 discriminator 1 view .LVU6392
 17963              	.LBE835:
 17964              	.LBE834:
1090:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 17965              		.loc 1 1090 5 is_stmt 1 discriminator 1 view .LVU6393
 17966              	.L1599:
1094:sieve_extend.c ****     return (valid);
 17967              		.loc 1 1094 5 view .LVU6394
 17968              	# sieve_extend.c:1094:     if (!valid && option_verboselevel >= 3) deepAnalyzePrimes(sieve);
1094:sieve_extend.c ****     return (valid);
 17969              		.loc 1 1094 8 is_stmt 0 view .LVU6395
 17970 5e3e 83FB02   		cmp	ebx, 2	# option_verboselevel,
 17971 5e41 0F8E4C02 		jle	.L1579	#,
 17971      0000
 17972 5e47 4584F6   		test	r14b, r14b	# _135
 17973 5e4a 0F844302 		je	.L1579	#,
 17973      0000
1094:sieve_extend.c ****     return (valid);
 17974              		.loc 1 1094 45 is_stmt 1 discriminator 1 view .LVU6396
 17975              	.LBB836:
 17976              	.LBI836:
1048:sieve_extend.c ****     printf("DeepAnalyzing\n");
 17977              		.loc 1 1048 13 discriminator 1 view .LVU6397
 17978              	.LVL1069:
 17979              	.LBB837:
1049:sieve_extend.c ****     counter_t warn_prime = 0;
 17980              		.loc 1 1049 5 discriminator 1 view .LVU6398
 17981              	.LBB838:
 17982              	.LBI838:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17983              		.loc 3 105 1 discriminator 1 view .LVU6399
 17984              	.LBB839:
 17985              		.loc 3 107 3 discriminator 1 view .LVU6400
 17986              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17987              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6401
 17988 5e50 488D3D00 		lea	rdi, .LC11[rip]	#,
 17988      000000
 17989 5e57 E8000000 		call	puts@PLT	#
 17989      00
 17990              	.LVL1070:
 17991              		.loc 3 107 10 discriminator 1 view .LVU6402
 17992              	.LBE839:
 17993              	.LBE838:
1050:sieve_extend.c ****     counter_t warn_nonprime = 0;
 17994              		.loc 1 1050 5 is_stmt 1 discriminator 1 view .LVU6403
1051:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 17995              		.loc 1 1051 5 discriminator 1 view .LVU6404
GAS LISTING /tmp/ccgH0yRS.s 			page 480


1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17996              		.loc 1 1052 5 discriminator 1 view .LVU6405
 17997              	.LBB840:
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17998              		.loc 1 1052 10 discriminator 1 view .LVU6406
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 17999              		.loc 1 1052 31 discriminator 1 view .LVU6407
 18000              	# sieve_extend.c:1052:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18001              		.loc 1 1052 44 is_stmt 0 discriminator 1 view .LVU6408
 18002 5e5c 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 18003              	# sieve_extend.c:1052:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18004              		.loc 1 1052 5 discriminator 1 view .LVU6409
 18005 5e60 4883FF01 		cmp	rdi, 1	# _137,
 18006 5e64 0F862902 		jbe	.L1579	#,
 18006      0000
 18007              	.LBB841:
 18008              	.LBB842:
 18009              	.LBB843:
 18010              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18011              		.loc 3 107 10 view .LVU6410
 18012 5e6a 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 18012      24
 18013              	.LBE843:
 18014              	.LBE842:
 18015              	.LBE841:
 18016              	# sieve_extend.c:1052:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18017              		.loc 1 1052 5 view .LVU6411
 18018 5e6f 41BE0200 		mov	r14d, 2	# ivtmp.751,
 18018      0000
 18019 5e75 41BC0300 		mov	r12d, 3	# ivtmp.749,
 18019      0000
 18020              	.LBE840:
 18021              	# sieve_extend.c:1050:     counter_t warn_prime = 0;
1050:sieve_extend.c ****     counter_t warn_nonprime = 0;
 18022              		.loc 1 1050 15 view .LVU6412
 18023 5e7b 4531C0   		xor	r8d, r8d	# warn_prime
 18024              	# sieve_extend.c:1051:     counter_t warn_nonprime = 0;
1051:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 18025              		.loc 1 1051 15 view .LVU6413
 18026 5e7e 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 18026      18000000 
 18026      00
 18027              	.LBB862:
 18028              	# sieve_extend.c:1052:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18029              		.loc 1 1052 20 view .LVU6414
 18030 5e87 41BF0100 		mov	r15d, 1	# prime,
 18030      0000
 18031              	.LBB850:
 18032              	.LBB847:
 18033              	.LBB844:
 18034              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18035              		.loc 3 107 10 view .LVU6415
 18036 5e8d 4989ED   		mov	r13, rbp	# sieve, sieve
GAS LISTING /tmp/ccgH0yRS.s 			page 481


 18037              	.LVL1071:
 18038              		.p2align 4
 18039              		.p2align 3
 18040              	.L1609:
 18041              		.loc 3 107 10 view .LVU6416
 18042              	.LBE844:
 18043              	.LBE847:
 18044              	.LBE850:
1053:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18045              		.loc 1 1053 9 is_stmt 1 view .LVU6417
 18046              	# sieve_extend.c:1053:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1053:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18047              		.loc 1 1053 29 is_stmt 0 view .LVU6418
 18048 5e90 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 18049              	# sieve_extend.c:1053:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1053:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18050              		.loc 1 1053 30 view .LVU6419
 18051 5e94 4C89FB   		mov	rbx, r15	# tmp198, prime
 18052 5e97 48C1EB06 		shr	rbx, 6	# tmp198,
 18053              	# sieve_extend.c:1053:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1053:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18054              		.loc 1 1053 71 view .LVU6420
 18055 5e9b 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 18055      00
 18056 5ea0 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 18056      C9
 18057              	# sieve_extend.c:1053:         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) {
1053:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18058              		.loc 1 1053 12 view .LVU6421
 18059 5ea5 83E101   		and	ecx, 1	# c,
 18060 5ea8 0F84BA02 		je	.L1601	#,
 18060      0000
 18061              	.LVL1072:
 18062              	.LBB851:
 18063              	.LBB852:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18064              		.loc 1 1062 32 is_stmt 1 view .LVU6422
 18065              	.LBE852:
 18066              	# sieve_extend.c:1061:             counter_t c_prime = 0;
1061:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 18067              		.loc 1 1061 23 is_stmt 0 view .LVU6423
 18068 5eae 31ED     		xor	ebp, ebp	# c_prime
 18069              	.LBB853:
 18070              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18071              		.loc 1 1062 13 view .LVU6424
 18072 5eb0 4885FF   		test	rdi, rdi	# _137
 18073 5eb3 BE030000 		mov	esi, 3	# ivtmp.741,
 18073      00
 18074 5eb8 0F84E103 		je	.L1713	#,
 18074      0000
 18075 5ebe 4989FB   		mov	r11, rdi	# tmp231, _137
 18076 5ec1 4929CB   		sub	r11, rcx	# tmp231, c
 18077 5ec4 4183E303 		and	r11d, 3	# tmp231,
 18078 5ec8 4D89DA   		mov	r10, r11	# tmp232, tmp231
 18079 5ecb 0F84BF00 		je	.L1602	#,
 18079      0000
GAS LISTING /tmp/ccgH0yRS.s 			page 482


 18080              	.LVL1073:
1063:sieve_extend.c ****             }
 18081              		.loc 1 1063 17 is_stmt 1 view .LVU6425
 18082              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18083              		.loc 1 1063 48 is_stmt 0 view .LVU6426
 18084 5ed1 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 18085 5ed5 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.751
 18086 5ed8 7411     		je	.L1654	#,
 18087              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18088              		.loc 1 1063 33 view .LVU6427
 18089 5eda 31D2     		xor	edx, edx	# tmp241
 18090 5edc 4C89E0   		mov	rax, r12	# tmp242, ivtmp.749
 18091 5edf 48F7F6   		div	rsi	# ivtmp.741
 18092              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18093              		.loc 1 1063 82 view .LVU6428
 18094 5ee2 31ED     		xor	ebp, ebp	# c_prime
1063:sieve_extend.c ****             }
 18095              		.loc 1 1063 82 view .LVU6429
 18096 5ee4 4885D2   		test	rdx, rdx	# tmp241
 18097 5ee7 400F94C5 		sete	bpl	#, c_prime
 18098              	.LVL1074:
 18099              	.L1654:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18100              		.loc 1 1062 68 is_stmt 1 view .LVU6430
 18101              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18102              		.loc 1 1062 69 is_stmt 0 view .LVU6431
 18103 5eeb 4883C101 		add	rcx, 1	# c,
 18104              	.LVL1075:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18105              		.loc 1 1062 32 is_stmt 1 view .LVU6432
 18106              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18107              		.loc 1 1062 13 is_stmt 0 view .LVU6433
 18108 5eef 4839F9   		cmp	rcx, rdi	# c, _137
 18109 5ef2 0F877801 		ja	.L1608	#,
 18109      0000
 18110              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18111              		.loc 1 1062 51 view .LVU6434
 18112 5ef8 4989C9   		mov	r9, rcx	# tmp244, c
 18113 5efb BE050000 		mov	esi, 5	# ivtmp.741,
 18113      00
 18114 5f00 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 18115              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18116              		.loc 1 1062 47 view .LVU6435
 18117 5f04 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.749
 18118 5f07 0F876301 		ja	.L1608	#,
 18118      0000
 18119 5f0d 4983FA01 		cmp	r10, 1	# tmp232,
 18120 5f11 747D     		je	.L1602	#,
 18121 5f13 4983FA02 		cmp	r10, 2	# tmp232,
 18122 5f17 7438     		je	.L1685	#,
GAS LISTING /tmp/ccgH0yRS.s 			page 483


1063:sieve_extend.c ****             }
 18123              		.loc 1 1063 17 is_stmt 1 view .LVU6436
 18124              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18125              		.loc 1 1063 48 is_stmt 0 view .LVU6437
 18126 5f19 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 18127 5f1d 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.751
 18128 5f20 7417     		je	.L1656	#,
 18129              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18130              		.loc 1 1063 33 view .LVU6438
 18131 5f22 31D2     		xor	edx, edx	# tmp247
 18132 5f24 4C89E0   		mov	rax, r12	# tmp248, ivtmp.749
 18133 5f27 48F7F6   		div	rsi	# ivtmp.741
 18134              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18135              		.loc 1 1063 20 view .LVU6439
 18136 5f2a 4885D2   		test	rdx, rdx	# tmp247
 18137 5f2d 410F94C3 		sete	r11b	#, tmp249
 18138              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18139              		.loc 1 1063 82 view .LVU6440
 18140 5f31 4180FB01 		cmp	r11b, 1	# tmp249,
 18141 5f35 4883DDFF 		sbb	rbp, -1	# c_prime,
 18142              	.LVL1076:
 18143              	.L1656:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18144              		.loc 1 1062 68 is_stmt 1 view .LVU6441
 18145              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18146              		.loc 1 1062 69 is_stmt 0 view .LVU6442
 18147 5f39 4883C101 		add	rcx, 1	# c,
 18148              	.LVL1077:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18149              		.loc 1 1062 32 is_stmt 1 view .LVU6443
 18150 5f3d 4883C602 		add	rsi, 2	# ivtmp.741,
 18151              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18152              		.loc 1 1062 51 is_stmt 0 view .LVU6444
 18153 5f41 4989CA   		mov	r10, rcx	# tmp250, c
 18154 5f44 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 18155              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18156              		.loc 1 1062 47 view .LVU6445
 18157 5f48 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.749
 18158 5f4b 0F871F01 		ja	.L1608	#,
 18158      0000
 18159              	.L1685:
1063:sieve_extend.c ****             }
 18160              		.loc 1 1063 17 is_stmt 1 view .LVU6446
 18161              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18162              		.loc 1 1063 48 is_stmt 0 view .LVU6447
 18163 5f51 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 18164 5f55 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.751
 18165 5f58 7415     		je	.L1659	#,
 18166              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
GAS LISTING /tmp/ccgH0yRS.s 			page 484


1063:sieve_extend.c ****             }
 18167              		.loc 1 1063 33 view .LVU6448
 18168 5f5a 31D2     		xor	edx, edx	# tmp253
 18169 5f5c 4C89E0   		mov	rax, r12	# tmp254, ivtmp.749
 18170 5f5f 48F7F6   		div	rsi	# ivtmp.741
 18171              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18172              		.loc 1 1063 20 view .LVU6449
 18173 5f62 4885D2   		test	rdx, rdx	# tmp253
 18174 5f65 0F94C3   		sete	bl	#, tmp255
 18175              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18176              		.loc 1 1063 82 view .LVU6450
 18177 5f68 80FB01   		cmp	bl, 1	# tmp255,
 18178 5f6b 4883DDFF 		sbb	rbp, -1	# c_prime,
 18179              	.LVL1078:
 18180              	.L1659:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18181              		.loc 1 1062 68 is_stmt 1 view .LVU6451
 18182              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18183              		.loc 1 1062 69 is_stmt 0 view .LVU6452
 18184 5f6f 4883C101 		add	rcx, 1	# c,
 18185              	.LVL1079:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18186              		.loc 1 1062 32 is_stmt 1 view .LVU6453
 18187 5f73 4883C602 		add	rsi, 2	# ivtmp.741,
 18188              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18189              		.loc 1 1062 51 is_stmt 0 view .LVU6454
 18190 5f77 4989CB   		mov	r11, rcx	# tmp256, c
 18191 5f7a 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 18192              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18193              		.loc 1 1062 47 view .LVU6455
 18194 5f7e 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.749
 18195 5f81 0F87E900 		ja	.L1608	#,
 18195      0000
 18196              	.LVL1080:
 18197 5f87 660F1F84 		.p2align 4
 18197      00000000 
 18197      00
 18198              		.p2align 3
 18199              	.L1602:
1063:sieve_extend.c ****             }
 18200              		.loc 1 1063 17 is_stmt 1 view .LVU6456
 18201              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18202              		.loc 1 1063 48 is_stmt 0 view .LVU6457
 18203 5f90 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 18204 5f94 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.751
 18205 5f97 7417     		je	.L1607	#,
 18206              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18207              		.loc 1 1063 33 view .LVU6458
 18208 5f99 31D2     		xor	edx, edx	# tmp214
 18209 5f9b 4C89E0   		mov	rax, r12	# tmp215, ivtmp.749
GAS LISTING /tmp/ccgH0yRS.s 			page 485


 18210 5f9e 48F7F6   		div	rsi	# ivtmp.741
 18211              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18212              		.loc 1 1063 20 view .LVU6459
 18213 5fa1 4885D2   		test	rdx, rdx	# tmp214
 18214 5fa4 410F94C1 		sete	r9b	#, tmp217
 18215              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18216              		.loc 1 1063 82 view .LVU6460
 18217 5fa8 4180F901 		cmp	r9b, 1	# tmp217,
 18218 5fac 4883DDFF 		sbb	rbp, -1	# c_prime,
 18219              	.LVL1081:
 18220              	.L1607:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18221              		.loc 1 1062 68 is_stmt 1 view .LVU6461
 18222              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18223              		.loc 1 1062 69 is_stmt 0 view .LVU6462
 18224 5fb0 4883C101 		add	rcx, 1	# tmp234,
 18225              	.LVL1082:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18226              		.loc 1 1062 32 is_stmt 1 view .LVU6463
 18227              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18228              		.loc 1 1062 13 is_stmt 0 view .LVU6464
 18229 5fb4 4839F9   		cmp	rcx, rdi	# tmp234, _137
 18230 5fb7 0F87B300 		ja	.L1608	#,
 18230      0000
 18231              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18232              		.loc 1 1062 51 view .LVU6465
 18233 5fbd 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 18234 5fc0 4883C602 		add	rsi, 2	# tmp233,
 18235 5fc4 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 18236              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18237              		.loc 1 1062 47 view .LVU6466
 18238 5fc8 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.749
 18239 5fcb 0F879F00 		ja	.L1608	#,
 18239      0000
1063:sieve_extend.c ****             }
 18240              		.loc 1 1063 17 is_stmt 1 view .LVU6467
 18241              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18242              		.loc 1 1063 48 is_stmt 0 view .LVU6468
 18243 5fd1 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 18244 5fd5 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.751
 18245 5fd8 7417     		je	.L1663	#,
 18246              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18247              		.loc 1 1063 33 view .LVU6469
 18248 5fda 31D2     		xor	edx, edx	# tmp259
 18249 5fdc 4C89E0   		mov	rax, r12	# tmp260, ivtmp.749
 18250 5fdf 48F7F6   		div	rsi	# tmp233
 18251              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18252              		.loc 1 1063 20 view .LVU6470
GAS LISTING /tmp/ccgH0yRS.s 			page 486


 18253 5fe2 4885D2   		test	rdx, rdx	# tmp259
 18254 5fe5 410F94C2 		sete	r10b	#, tmp261
 18255              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18256              		.loc 1 1063 82 view .LVU6471
 18257 5fe9 4180FA01 		cmp	r10b, 1	# tmp261,
 18258 5fed 4883DDFF 		sbb	rbp, -1	# c_prime,
 18259              	.LVL1083:
 18260              	.L1663:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18261              		.loc 1 1062 68 is_stmt 1 view .LVU6472
 18262              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18263              		.loc 1 1062 69 is_stmt 0 view .LVU6473
 18264 5ff1 4C8D4901 		lea	r9, 1[rcx]	# c,
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18265              		.loc 1 1062 32 is_stmt 1 view .LVU6474
 18266 5ff5 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.741,
 18267              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18268              		.loc 1 1062 51 is_stmt 0 view .LVU6475
 18269 5ff9 4D89CB   		mov	r11, r9	# tmp264, c
 18270 5ffc 4D0FAFD9 		imul	r11, r9	# tmp264, c
 18271              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18272              		.loc 1 1062 47 view .LVU6476
 18273 6000 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.749
 18274 6003 776B     		ja	.L1608	#,
1063:sieve_extend.c ****             }
 18275              		.loc 1 1063 17 is_stmt 1 view .LVU6477
 18276              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18277              		.loc 1 1063 48 is_stmt 0 view .LVU6478
 18278 6005 4D01C9   		add	r9, r9	# tmp265
 18279 6008 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.751
 18280 600b 7417     		je	.L1665	#,
 18281              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18282              		.loc 1 1063 33 view .LVU6479
 18283 600d 31D2     		xor	edx, edx	# tmp267
 18284 600f 4C89E0   		mov	rax, r12	# tmp268, ivtmp.749
 18285 6012 48F7F3   		div	rbx	# ivtmp.741
 18286              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18287              		.loc 1 1063 20 view .LVU6480
 18288 6015 4885D2   		test	rdx, rdx	# tmp267
 18289 6018 410F94C2 		sete	r10b	#, tmp269
 18290              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18291              		.loc 1 1063 82 view .LVU6481
 18292 601c 4180FA01 		cmp	r10b, 1	# tmp269,
 18293 6020 4883DDFF 		sbb	rbp, -1	# c_prime,
 18294              	.LVL1084:
 18295              	.L1665:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18296              		.loc 1 1062 68 is_stmt 1 view .LVU6482
 18297              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccgH0yRS.s 			page 487


1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18298              		.loc 1 1062 69 is_stmt 0 view .LVU6483
 18299 6024 4C8D4902 		lea	r9, 2[rcx]	# c,
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18300              		.loc 1 1062 32 is_stmt 1 view .LVU6484
 18301 6028 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.741,
 18302              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18303              		.loc 1 1062 51 is_stmt 0 view .LVU6485
 18304 602c 4D89CB   		mov	r11, r9	# tmp272, c
 18305 602f 4D0FAFD9 		imul	r11, r9	# tmp272, c
 18306              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18307              		.loc 1 1062 47 view .LVU6486
 18308 6033 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.749
 18309 6036 7738     		ja	.L1608	#,
1063:sieve_extend.c ****             }
 18310              		.loc 1 1063 17 is_stmt 1 view .LVU6487
 18311              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18312              		.loc 1 1063 48 is_stmt 0 view .LVU6488
 18313 6038 4D01C9   		add	r9, r9	# tmp273
 18314 603b 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.751
 18315 603e 7417     		je	.L1667	#,
 18316              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18317              		.loc 1 1063 33 view .LVU6489
 18318 6040 31D2     		xor	edx, edx	# tmp275
 18319 6042 4C89E0   		mov	rax, r12	# tmp276, ivtmp.749
 18320 6045 48F7F3   		div	rbx	# ivtmp.741
 18321              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18322              		.loc 1 1063 20 view .LVU6490
 18323 6048 4885D2   		test	rdx, rdx	# tmp275
 18324 604b 410F94C2 		sete	r10b	#, tmp277
 18325              	# sieve_extend.c:1063:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_
1063:sieve_extend.c ****             }
 18326              		.loc 1 1063 82 view .LVU6491
 18327 604f 4180FA01 		cmp	r10b, 1	# tmp277,
 18328 6053 4883DDFF 		sbb	rbp, -1	# c_prime,
 18329              	.LVL1085:
 18330              	.L1667:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18331              		.loc 1 1062 68 is_stmt 1 view .LVU6492
 18332              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18333              		.loc 1 1062 69 is_stmt 0 view .LVU6493
 18334 6057 4883C103 		add	rcx, 3	# c,
 18335              	.LVL1086:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18336              		.loc 1 1062 32 is_stmt 1 view .LVU6494
 18337 605b 4883C606 		add	rsi, 6	# ivtmp.741,
 18338              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18339              		.loc 1 1062 51 is_stmt 0 view .LVU6495
 18340 605f 4989C9   		mov	r9, rcx	# tmp278, c
 18341 6062 4C0FAFC9 		imul	r9, rcx	# tmp278, c
GAS LISTING /tmp/ccgH0yRS.s 			page 488


 18342              	# sieve_extend.c:1062:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18343              		.loc 1 1062 47 view .LVU6496
 18344 6066 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.749
 18345 6069 0F8621FF 		jbe	.L1602	#,
 18345      FFFF
 18346              	.LVL1087:
 18347 606f 90       		.p2align 4
 18348              		.p2align 3
 18349              	.L1608:
1062:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 18350              		.loc 1 1062 47 view .LVU6497
 18351              	.LBE853:
1065:sieve_extend.c ****         }
 18352              		.loc 1 1065 13 is_stmt 1 view .LVU6498
 18353              	# sieve_extend.c:1065:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1065:sieve_extend.c ****         }
 18354              		.loc 1 1065 16 is_stmt 0 view .LVU6499
 18355 6070 4885ED   		test	rbp, rbp	# c_prime
 18356 6073 0F840D02 		je	.L1726	#,
 18356      0000
 18357              	.LVL1088:
 18358              	.L1605:
1065:sieve_extend.c ****         }
 18359              		.loc 1 1065 16 view .LVU6500
 18360              	.LBE851:
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18361              		.loc 1 1052 52 is_stmt 1 view .LVU6501
 18362              	# sieve_extend.c:1052:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18363              		.loc 1 1052 57 is_stmt 0 view .LVU6502
 18364 6079 4983C701 		add	r15, 1	# prime,
 18365              	.LVL1089:
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18366              		.loc 1 1052 31 is_stmt 1 view .LVU6503
 18367 607d 4983C402 		add	r12, 2	# ivtmp.749,
 18368 6081 4983C602 		add	r14, 2	# ivtmp.751,
 18369              	# sieve_extend.c:1052:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18370              		.loc 1 1052 5 is_stmt 0 view .LVU6504
 18371 6085 4939FF   		cmp	r15, rdi	# prime, _137
 18372 6088 0F8202FE 		jb	.L1609	#,
 18372      FFFF
 18373              	.LVL1090:
 18374              	.L1715:
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18375              		.loc 1 1052 5 view .LVU6505
 18376 608e 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 18376      24
 18377              	.LVL1091:
 18378              	.L1579:
1052:sieve_extend.c ****         if ((sieve->bitarray[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 18379              		.loc 1 1052 5 view .LVU6506
 18380              	.LBE862:
 18381              	.LBE837:
 18382              	.LBE836:
 18383              	# sieve_extend.c:1096: }
GAS LISTING /tmp/ccgH0yRS.s 			page 489


1096:sieve_extend.c **** 
 18384              		.loc 1 1096 1 view .LVU6507
 18385 6093 488D6424 		lea	rsp, 56[rsp]	#,
 18385      38
 18386              		.cfi_remember_state
 18387              		.cfi_def_cfa_offset 56
 18388 6098 4489E8   		mov	eax, r13d	#, <retval>
 18389 609b 5B       		pop	rbx	#
 18390              		.cfi_def_cfa_offset 48
 18391 609c 5D       		pop	rbp	#
 18392              		.cfi_def_cfa_offset 40
 18393 609d 415C     		pop	r12	#
 18394              		.cfi_def_cfa_offset 32
 18395 609f 415D     		pop	r13	#
 18396              		.cfi_def_cfa_offset 24
 18397 60a1 415E     		pop	r14	#
 18398              		.cfi_def_cfa_offset 16
 18399 60a3 415F     		pop	r15	#
 18400              		.cfi_def_cfa_offset 8
 18401 60a5 C3       		ret	
 18402              	.LVL1092:
 18403              	.L1724:
 18404              		.cfi_restore_state
 18405              	# sieve_extend.c:1075:     switch(sieve->size) {
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18406              		.loc 1 1075 5 view .LVU6508
 18407 60a6 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 18407      030000
 18408 60ad 0F84E602 		je	.L1586	#,
 18408      0000
 18409 60b3 7633     		jbe	.L1727	#,
 18410 60b5 4981F910 		cmp	r9, 10000	# pretmp_199,
 18410      270000
 18411 60bc 0F852303 		jne	.L1590	#,
 18411      0000
 18412 60c2 4981F8CD 		cmp	r8, 1229	# primeCount,
 18412      040000
 18413              	# sieve_extend.c:1079:         case 10000:         valid_primes = 1229;     break;
1079:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18414              		.loc 1 1079 42 view .LVU6509
 18415 60c9 B9CD0400 		mov	ecx, 1229	# valid_primes,
 18415      00
 18416 60ce 400F94C6 		sete	sil	#, tmp179
 18417 60d2 21F2     		and	edx, esi	# _251, tmp179
 18418 60d4 4981F8CD 		cmp	r8, 1229	# primeCount,
 18418      040000
 18419 60db 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 18420 60df 410F95C6 		setne	r14b	#, _135
1079:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18421              		.loc 1 1079 29 is_stmt 1 view .LVU6510
 18422              	.LVL1093:
1079:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18423              		.loc 1 1079 54 view .LVU6511
 18424              	# sieve_extend.c:1079:         case 10000:         valid_primes = 1229;     break;
1079:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 18425              		.loc 1 1079 9 is_stmt 0 view .LVU6512
 18426 60e3 E938FDFF 		jmp	.L1597	#
GAS LISTING /tmp/ccgH0yRS.s 			page 490


 18426      FF
 18427              	.LVL1094:
 18428              	.L1727:
 18429              	# sieve_extend.c:1075:     switch(sieve->size) {
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18430              		.loc 1 1075 5 view .LVU6513
 18431 60e8 4983F90A 		cmp	r9, 10	# pretmp_199,
 18432 60ec 0F841A02 		je	.L1588	#,
 18432      0000
 18433 60f2 4983F964 		cmp	r9, 100	# pretmp_199,
 18434 60f6 0F85E902 		jne	.L1590	#,
 18434      0000
 18435 60fc 4983F819 		cmp	r8, 25	# primeCount,
 18436 6100 0F94C1   		sete	cl	#, tmp173
 18437 6103 21CA     		and	edx, ecx	# _251, tmp173
 18438 6105 4983F819 		cmp	r8, 25	# primeCount,
 18439 6109 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 18440 610d 410F95C6 		setne	r14b	#, _135
 18441              	# sieve_extend.c:1077:         case 100:           valid_primes = 25;       break;
1077:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 18442              		.loc 1 1077 42 view .LVU6514
 18443 6111 B9190000 		mov	ecx, 25	# valid_primes,
 18443      00
 18444 6116 E905FDFF 		jmp	.L1597	#
 18444      FF
 18445 611b 0F1F4400 		.p2align 4,,7
 18445      00
 18446              		.p2align 3
 18447              	.L1725:
 18448              	# sieve_extend.c:1075:     switch(sieve->size) {
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18449              		.loc 1 1075 5 view .LVU6515
 18450 6120 4981F940 		cmp	r9, 1000000	# pretmp_199,
 18450      420F00
 18451 6127 0F84B801 		je	.L1594	#,
 18451      0000
 18452 612d 4981F980 		cmp	r9, 10000000	# pretmp_199,
 18452      969800
 18453 6134 0F85AB02 		jne	.L1590	#,
 18453      0000
 18454 613a 4981F803 		cmp	r8, 664579	# primeCount,
 18454      240A00
 18455              	# sieve_extend.c:1082:         case 10000000:      valid_primes = 664579;   break;
1082:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18456              		.loc 1 1082 42 view .LVU6516
 18457 6141 B903240A 		mov	ecx, 664579	# valid_primes,
 18457      00
 18458 6146 410F94C7 		sete	r15b	#, tmp185
 18459 614a 4421FA   		and	edx, r15d	# _251, tmp185
 18460 614d 4981F803 		cmp	r8, 664579	# primeCount,
 18460      240A00
 18461 6154 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 18462 6158 410F95C6 		setne	r14b	#, _135
1082:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18463              		.loc 1 1082 29 is_stmt 1 view .LVU6517
 18464              	.LVL1095:
1082:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
GAS LISTING /tmp/ccgH0yRS.s 			page 491


 18465              		.loc 1 1082 54 view .LVU6518
 18466              	# sieve_extend.c:1082:         case 10000000:      valid_primes = 664579;   break;
1082:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 18467              		.loc 1 1082 9 is_stmt 0 view .LVU6519
 18468 615c E9BFFCFF 		jmp	.L1597	#
 18468      FF
 18469              	.LVL1096:
 18470              		.p2align 4,,7
 18471 6161 0F1F8000 		.p2align 3
 18471      000000
 18472              	.L1601:
 18473              	.LBB867:
 18474              	.LBB865:
 18475              	.LBB863:
 18476              	.LBB860:
1054:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18477              		.loc 1 1054 32 is_stmt 1 view .LVU6520
 18478              	# sieve_extend.c:1054:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1054:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18479              		.loc 1 1054 13 is_stmt 0 view .LVU6521
 18480 6168 4885FF   		test	rdi, rdi	# _137
 18481 616b 0F841DFF 		je	.L1715	#,
 18481      FFFF
 18482              	# sieve_extend.c:1054:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1054:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18483              		.loc 1 1054 27 view .LVU6522
 18484 6171 BB010000 		mov	ebx, 1	# c,
 18484      00
 18485 6176 EB20     		jmp	.L1606	#
 18486              	.LVL1097:
 18487              		.p2align 4,,7
 18488              		.p2align 3
 18489              	.L1615:
 18490              	# sieve_extend.c:1056:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1056:sieve_extend.c ****                 }
 18491              		.loc 1 1056 35 view .LVU6523
 18492 6178 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 18493              	.LVL1098:
 18494              	.L1604:
1054:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18495              		.loc 1 1054 68 is_stmt 1 view .LVU6524
 18496              	# sieve_extend.c:1054:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1054:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18497              		.loc 1 1054 69 is_stmt 0 view .LVU6525
 18498 617b 4883C301 		add	rbx, 1	# c,
 18499              	.LVL1099:
1054:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18500              		.loc 1 1054 32 is_stmt 1 view .LVU6526
 18501              	# sieve_extend.c:1054:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1054:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18502              		.loc 1 1054 13 is_stmt 0 view .LVU6527
 18503 617f 4839FB   		cmp	rbx, rdi	# c, _137
 18504 6182 0F87F1FE 		ja	.L1605	#,
 18504      FFFF
 18505              	# sieve_extend.c:1054:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1054:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18506              		.loc 1 1054 51 view .LVU6528
GAS LISTING /tmp/ccgH0yRS.s 			page 492


 18507 6188 4989DB   		mov	r11, rbx	# tmp209, c
 18508 618b 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 18509              	# sieve_extend.c:1054:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
1054:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 18510              		.loc 1 1054 47 view .LVU6529
 18511 618f 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.749
 18512 6192 0F87E1FE 		ja	.L1605	#,
 18512      FFFF
 18513              	.LVL1100:
 18514              	.L1606:
1055:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18515              		.loc 1 1055 17 is_stmt 1 view .LVU6530
 18516 6198 488D2C1B 		lea	rbp, [rbx+rbx]	# _216,
 18517 619c 31D2     		xor	edx, edx	# tmp204
 18518 619e 4C89E0   		mov	rax, r12	# tmp203, ivtmp.749
 18519              	# sieve_extend.c:1055:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1055:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18520              		.loc 1 1055 39 is_stmt 0 view .LVU6531
 18521 61a1 488D7501 		lea	rsi, 1[rbp]	# _55,
 18522 61a5 48F7F6   		div	rsi	# _55
 18523              	# sieve_extend.c:1055:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
1055:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18524              		.loc 1 1055 48 view .LVU6532
 18525 61a8 4885D2   		test	rdx, rdx	# tmp204
 18526 61ab 75CE     		jne	.L1604	#,
1055:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 18527              		.loc 1 1055 48 view .LVU6533
 18528 61ad 4939EE   		cmp	r14, rbp	# ivtmp.751, _216
 18529 61b0 74C9     		je	.L1604	#,
1056:sieve_extend.c ****                 }
 18530              		.loc 1 1056 21 is_stmt 1 view .LVU6534
 18531              	# sieve_extend.c:1056:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1056:sieve_extend.c ****                 }
 18532              		.loc 1 1056 24 is_stmt 0 view .LVU6535
 18533 61b2 4983F81D 		cmp	r8, 29	# warn_prime,
 18534              	# sieve_extend.c:1056:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1056:sieve_extend.c ****                 }
 18535              		.loc 1 1056 35 view .LVU6536
 18536 61b6 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 18537              	.LVL1101:
 18538              	# sieve_extend.c:1056:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1056:sieve_extend.c ****                 }
 18539              		.loc 1 1056 24 view .LVU6537
 18540 61ba 77BC     		ja	.L1615	#,
1056:sieve_extend.c ****                 }
 18541              		.loc 1 1056 44 is_stmt 1 view .LVU6538
 18542              	.LVL1102:
 18543              	.LBB848:
 18544              	.LBI842:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18545              		.loc 3 105 1 view .LVU6539
 18546              	.LBB845:
 18547              		.loc 3 107 3 view .LVU6540
 18548              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18549              		.loc 3 107 10 is_stmt 0 view .LVU6541
 18550 61bc 4989F0   		mov	r8, rsi	#, _55
 18551 61bf 4989C1   		mov	r9, rax	#, tmp203
GAS LISTING /tmp/ccgH0yRS.s 			page 493


 18552 61c2 BF010000 		mov	edi, 1	#,
 18552      00
 18553 61c7 4C89F9   		mov	rcx, r15	#, prime
 18554 61ca 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.749
 18555 61ce 4C89E2   		mov	rdx, r12	#, ivtmp.749
 18556 61d1 488D3500 		lea	rsi, .LC12[rip]	#,
 18556      000000
 18557 61d8 31C0     		xor	eax, eax	#
 18558 61da E8000000 		call	__printf_chk@PLT	#
 18558      00
 18559              	.LVL1103:
 18560 61df 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 18561              	.LBE845:
 18562              	.LBE848:
 18563              	# sieve_extend.c:1056:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was mark
1056:sieve_extend.c ****                 }
 18564              		.loc 1 1056 35 view .LVU6542
 18565 61e3 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 18566              	.LBB849:
 18567              	.LBB846:
 18568              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18569              		.loc 3 107 10 view .LVU6543
 18570 61e6 EB93     		jmp	.L1604	#
 18571              	.LVL1104:
 18572              	.L1580:
 18573              		.loc 3 107 10 view .LVU6544
 18574              	.LBE846:
 18575              	.LBE849:
 18576              	.LBE860:
 18577              	.LBE863:
 18578              	.LBE865:
 18579              	.LBE867:
 18580              	.LBB868:
 18581              	.LBB833:
1045:sieve_extend.c **** }
 18582              		.loc 1 1045 5 is_stmt 1 view .LVU6545
1045:sieve_extend.c **** }
 18583              		.loc 1 1045 5 is_stmt 0 view .LVU6546
 18584              	.LBE833:
 18585              	.LBE868:
1074:sieve_extend.c ****     switch(sieve->size) {
 18586              		.loc 1 1074 5 is_stmt 1 view .LVU6547
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18587              		.loc 1 1075 5 view .LVU6548
 18588 61e8 4531ED   		xor	r13d, r13d	# <retval>
 18589 61eb 4981F9A0 		cmp	r9, 100000	# pretmp_199,
 18589      860100
 18590 61f2 41BE0100 		mov	r14d, 1	# _135,
 18590      0000
 18591 61f8 41B80100 		mov	r8d, 1	# primeCount,
 18591      0000
 18592 61fe 0F842302 		je	.L1618	#,
 18592      0000
 18593 6204 0F872301 		ja	.L1610	#,
 18593      0000
 18594 620a 4983F964 		cmp	r9, 100	# pretmp_199,
 18595 620e B9190000 		mov	ecx, 25	# valid_primes,
GAS LISTING /tmp/ccgH0yRS.s 			page 494


 18595      00
 18596 6213 742A     		je	.L1598	#,
 18597              		.p2align 4,,2
 18598 6215 0F864001 		jbe	.L1728	#,
 18598      0000
 18599 621b 4981F9E8 		cmp	r9, 1000	# pretmp_199,
 18599      030000
 18600              	# sieve_extend.c:1078:         case 1000:          valid_primes = 168;      break;
1078:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18601              		.loc 1 1078 42 is_stmt 0 view .LVU6549
 18602 6222 B9A80000 		mov	ecx, 168	# valid_primes,
 18602      00
 18603              	# sieve_extend.c:1075:     switch(sieve->size) {
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18604              		.loc 1 1075 5 view .LVU6550
 18605 6227 7416     		je	.L1598	#,
 18606 6229 4981F910 		cmp	r9, 10000	# pretmp_199,
 18606      270000
 18607 6230 B9CD0400 		mov	ecx, 1229	# tmp223,
 18607      00
 18608 6235 41BA0000 		mov	r10d, 0	# tmp224,
 18608      0000
 18609 623b 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 18610              	.LVL1105:
 18611              	.L1598:
1090:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18612              		.loc 1 1090 5 is_stmt 1 view .LVU6551
 18613              	# sieve_extend.c:1090:     if (!valid && option_verboselevel >= 1) {
1090:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18614              		.loc 1 1090 39 is_stmt 0 view .LVU6552
 18615 623f 85DB     		test	ebx, ebx	# option_verboselevel
 18616 6241 410F9FC4 		setg	r12b	#, tmp194
 18617              	# sieve_extend.c:1090:     if (!valid && option_verboselevel >= 1) {
1090:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18618              		.loc 1 1090 8 view .LVU6553
 18619 6245 4520F4   		and	r12b, r14b	# _7, _135
 18620 6248 0F84F0FB 		je	.L1599	#,
 18620      FFFF
1091:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 18621              		.loc 1 1091 9 is_stmt 1 view .LVU6554
 18622              	.LVL1106:
 18623              	.LBB869:
 18624              	.LBI869:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18625              		.loc 3 105 1 view .LVU6555
 18626              	.LBB870:
 18627              		.loc 3 107 3 view .LVU6556
 18628              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18629              		.loc 3 107 10 is_stmt 0 view .LVU6557
 18630 624e 31C0     		xor	eax, eax	#
 18631 6250 4C89CA   		mov	rdx, r9	#, pretmp_199
 18632 6253 488D3500 		lea	rsi, .LC10[rip]	#,
 18632      000000
 18633 625a BF010000 		mov	edi, 1	#,
 18633      00
 18634 625f E8000000 		call	__printf_chk@PLT	#
 18634      00
GAS LISTING /tmp/ccgH0yRS.s 			page 495


 18635              	.LVL1107:
 18636              		.loc 3 107 10 view .LVU6558
 18637              	.LBE870:
 18638              	.LBE869:
1092:sieve_extend.c ****     }
 18639              		.loc 1 1092 9 is_stmt 1 view .LVU6559
 18640              	# sieve_extend.c:1092:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1092:sieve_extend.c ****     }
 18641              		.loc 1 1092 12 is_stmt 0 view .LVU6560
 18642 6264 83FB01   		cmp	ebx, 1	# option_verboselevel,
 18643 6267 0F8426FE 		je	.L1579	#,
 18643      FFFF
1092:sieve_extend.c ****     }
 18644              		.loc 1 1092 49 is_stmt 1 discriminator 1 view .LVU6561
 18645 626d 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 18646 6271 BA640000 		mov	edx, 100	#,
 18646      00
 18647 6276 4889EF   		mov	rdi, rbp	#, sieve
 18648              	# sieve_extend.c:1090:     if (!valid && option_verboselevel >= 1) {
1090:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 18649              		.loc 1 1090 9 is_stmt 0 discriminator 1 view .LVU6562
 18650 6279 4589E6   		mov	r14d, r12d	# _135, _7
 18651              	# sieve_extend.c:1092:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_s
1092:sieve_extend.c ****     }
 18652              		.loc 1 1092 49 discriminator 1 view .LVU6563
 18653 627c E8CFD6FF 		call	show_primes.isra.0	#
 18653      FF
 18654              	.LVL1108:
 18655 6281 E9B8FBFF 		jmp	.L1599	#
 18655      FF
 18656              	.LVL1109:
 18657              	.L1726:
 18658              	.LBB871:
 18659              	.LBB866:
 18660              	.LBB864:
 18661              	.LBB861:
 18662              	# sieve_extend.c:1065:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1065:sieve_extend.c ****         }
 18663              		.loc 1 1065 44 view .LVU6564
 18664 6286 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 18664      18
 18665              	# sieve_extend.c:1065:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1065:sieve_extend.c ****         }
 18666              		.loc 1 1065 28 view .LVU6565
 18667 628b 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 18668              	# sieve_extend.c:1065:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1065:sieve_extend.c ****         }
 18669              		.loc 1 1065 44 view .LVU6566
 18670 628f 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 18671              	.LVL1110:
 18672              	# sieve_extend.c:1065:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1065:sieve_extend.c ****         }
 18673              		.loc 1 1065 28 view .LVU6567
 18674 6293 761D     		jbe	.L1613	#,
 18675              	# sieve_extend.c:1065:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1065:sieve_extend.c ****         }
 18676              		.loc 1 1065 44 view .LVU6568
GAS LISTING /tmp/ccgH0yRS.s 			page 496


 18677 6295 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 18677      18
 18678 629a E9DAFDFF 		jmp	.L1605	#
 18678      FF
 18679              	.LVL1111:
 18680              	.L1713:
1065:sieve_extend.c ****         }
 18681              		.loc 1 1065 44 view .LVU6569
 18682 629f 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 18682      18
 18683              	# sieve_extend.c:1065:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1065:sieve_extend.c ****         }
 18684              		.loc 1 1065 28 view .LVU6570
 18685 62a4 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 18686              	# sieve_extend.c:1065:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1065:sieve_extend.c ****         }
 18687              		.loc 1 1065 44 view .LVU6571
 18688 62a8 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 18689              	.LVL1112:
 18690              	# sieve_extend.c:1065:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1065:sieve_extend.c ****         }
 18691              		.loc 1 1065 28 view .LVU6572
 18692 62ac 0F87DCFD 		ja	.L1715	#,
 18692      FFFF
 18693              	.LVL1113:
 18694              	.L1613:
 18695              	.LBB854:
 18696              	.LBB855:
 18697              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18698              		.loc 3 107 10 view .LVU6573
 18699 62b2 BF010000 		mov	edi, 1	#,
 18699      00
 18700              	.LBE855:
 18701              	.LBE854:
 18702              	# sieve_extend.c:1065:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju)
1065:sieve_extend.c ****         }
 18703              		.loc 1 1065 53 view .LVU6574
 18704 62b7 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 18704      01
 18705              	.LBB858:
 18706              	.LBB856:
 18707              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18708              		.loc 3 107 10 view .LVU6575
 18709 62bc 4C89F9   		mov	rcx, r15	#, prime
 18710 62bf 488D3500 		lea	rsi, .LC13[rip]	#,
 18710      000000
 18711 62c6 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 18711      28
 18712              	.LBE856:
 18713              	.LBE858:
1065:sieve_extend.c ****         }
 18714              		.loc 1 1065 53 is_stmt 1 view .LVU6576
 18715              	.LVL1114:
 18716              	.LBB859:
 18717              	.LBI854:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18718              		.loc 3 105 1 view .LVU6577
GAS LISTING /tmp/ccgH0yRS.s 			page 497


 18719              	.LBB857:
 18720              		.loc 3 107 3 view .LVU6578
 18721              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18722              		.loc 3 107 10 is_stmt 0 view .LVU6579
 18723 62cb 31C0     		xor	eax, eax	#
 18724 62cd E8000000 		call	__printf_chk@PLT	#
 18724      00
 18725              	.LVL1115:
 18726              		.loc 3 107 10 view .LVU6580
 18727 62d2 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 18728 62d6 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 18728      28
 18729 62db 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 18729      18
 18730 62e0 E994FDFF 		jmp	.L1605	#
 18730      FF
 18731              	.LVL1116:
 18732              	.L1594:
 18733              		.loc 3 107 10 view .LVU6581
 18734 62e5 4981F8A2 		cmp	r8, 78498	# primeCount,
 18734      320100
 18735              	.LBE857:
 18736              	.LBE859:
 18737              	.LBE861:
 18738              	.LBE864:
 18739              	.LBE866:
 18740              	.LBE871:
 18741              	# sieve_extend.c:1081:         case 1000000:       valid_primes = 78498;    break;
1081:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18742              		.loc 1 1081 42 view .LVU6582
 18743 62ec B9A23201 		mov	ecx, 78498	# valid_primes,
 18743      00
 18744 62f1 410F94C5 		sete	r13b	#, tmp183
 18745 62f5 4421EA   		and	edx, r13d	# _251, tmp183
 18746 62f8 4981F8A2 		cmp	r8, 78498	# primeCount,
 18746      320100
 18747 62ff 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp183
 18748 6303 410F95C6 		setne	r14b	#, _135
1081:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18749              		.loc 1 1081 29 is_stmt 1 view .LVU6583
 18750              	.LVL1117:
1081:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18751              		.loc 1 1081 54 view .LVU6584
 18752              	# sieve_extend.c:1081:         case 1000000:       valid_primes = 78498;    break;
1081:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18753              		.loc 1 1081 9 is_stmt 0 view .LVU6585
 18754 6307 E914FBFF 		jmp	.L1597	#
 18754      FF
 18755              	.LVL1118:
 18756              	.L1588:
1081:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18757              		.loc 1 1081 9 view .LVU6586
 18758 630c 4983F804 		cmp	r8, 4	# primeCount,
 18759              	# sieve_extend.c:1076:         case 10:            valid_primes = 4;        break;
1076:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 18760              		.loc 1 1076 42 view .LVU6587
 18761 6310 B9040000 		mov	ecx, 4	# valid_primes,
GAS LISTING /tmp/ccgH0yRS.s 			page 498


 18761      00
 18762 6315 410F94C2 		sete	r10b	#, tmp175
 18763 6319 4421D2   		and	edx, r10d	# _251, tmp175
 18764 631c 4983F804 		cmp	r8, 4	# primeCount,
 18765 6320 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 18766 6324 410F95C6 		setne	r14b	#, _135
 18767 6328 E9F3FAFF 		jmp	.L1597	#
 18767      FF
 18768              	.LVL1119:
 18769              	.L1610:
 18770              	# sieve_extend.c:1075:     switch(sieve->size) {
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18771              		.loc 1 1075 5 view .LVU6588
 18772 632d 4981F900 		cmp	r9, 100000000	# pretmp_199,
 18772      E1F505
 18773              	# sieve_extend.c:1083:         case 100000000:     valid_primes = 5761455;  break;
1083:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18774              		.loc 1 1083 42 view .LVU6589
 18775 6334 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 18775      00
 18776              	# sieve_extend.c:1075:     switch(sieve->size) {
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18777              		.loc 1 1075 5 view .LVU6590
 18778 6339 0F8400FF 		je	.L1598	#,
 18778      FFFF
 18779 633f 762C     		jbe	.L1729	#,
 18780 6341 4981F900 		cmp	r9, 1000000000	# pretmp_199,
 18780      CA9A3B
 18781 6348 B92EDF07 		mov	ecx, 50847534	# tmp227,
 18781      03
 18782 634d B8000000 		mov	eax, 0	# tmp228,
 18782      00
 18783 6352 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 18784 6356 E9E4FEFF 		jmp	.L1598	#
 18784      FF
 18785              	.L1728:
 18786 635b 31C9     		xor	ecx, ecx	# valid_primes
 18787 635d 4983F90A 		cmp	r9, 10	# pretmp_199,
 18788 6361 0F94C1   		sete	cl	#, valid_primes
 18789 6364 48C1E102 		sal	rcx, 2	# valid_primes,
 18790 6368 E9D2FEFF 		jmp	.L1598	#
 18790      FF
 18791              	.L1729:
 18792 636d 4981F940 		cmp	r9, 1000000	# pretmp_199,
 18792      420F00
 18793              	# sieve_extend.c:1081:         case 1000000:       valid_primes = 78498;    break;
1081:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 18794              		.loc 1 1081 42 view .LVU6591
 18795 6374 B9A23201 		mov	ecx, 78498	# valid_primes,
 18795      00
 18796              	# sieve_extend.c:1075:     switch(sieve->size) {
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18797              		.loc 1 1075 5 view .LVU6592
 18798 6379 0F84C0FE 		je	.L1598	#,
 18798      FFFF
 18799 637f 4981F980 		cmp	r9, 10000000	# pretmp_199,
 18799      969800
GAS LISTING /tmp/ccgH0yRS.s 			page 499


 18800 6386 B903240A 		mov	ecx, 664579	# tmp225,
 18800      00
 18801 638b BE000000 		mov	esi, 0	# tmp226,
 18801      00
 18802 6390 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 18803 6394 E9A6FEFF 		jmp	.L1598	#
 18803      FF
 18804              	.LVL1120:
 18805              	.L1586:
1075:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 18806              		.loc 1 1075 5 view .LVU6593
 18807 6399 4981F8A8 		cmp	r8, 168	# primeCount,
 18807      000000
 18808              	# sieve_extend.c:1078:         case 1000:          valid_primes = 168;      break;
1078:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18809              		.loc 1 1078 42 view .LVU6594
 18810 63a0 B9A80000 		mov	ecx, 168	# valid_primes,
 18810      00
 18811 63a5 410F94C6 		sete	r14b	#, tmp177
 18812 63a9 4421F2   		and	edx, r14d	# _251, tmp177
 18813 63ac 4981F8A8 		cmp	r8, 168	# primeCount,
 18813      000000
 18814 63b3 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp177
 18815 63b7 410F95C6 		setne	r14b	#, _135
1078:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18816              		.loc 1 1078 29 is_stmt 1 view .LVU6595
 18817              	.LVL1121:
1078:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18818              		.loc 1 1078 54 view .LVU6596
 18819              	# sieve_extend.c:1078:         case 1000:          valid_primes = 168;      break;
1078:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18820              		.loc 1 1078 9 is_stmt 0 view .LVU6597
 18821 63bb E960FAFF 		jmp	.L1597	#
 18821      FF
 18822              	.LVL1122:
 18823              	.L1592:
1078:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 18824              		.loc 1 1078 9 view .LVU6598
 18825 63c0 4981F8AF 		cmp	r8, 5761455	# primeCount,
 18825      E95700
 18826              	# sieve_extend.c:1083:         case 100000000:     valid_primes = 5761455;  break;
1083:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18827              		.loc 1 1083 42 view .LVU6599
 18828 63c7 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 18828      00
 18829 63cc 0F94C0   		sete	al	#, tmp187
 18830 63cf 21C2     		and	edx, eax	# _251, tmp187
 18831 63d1 4981F8AF 		cmp	r8, 5761455	# primeCount,
 18831      E95700
 18832 63d8 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 18833 63dc 410F95C6 		setne	r14b	#, _135
1083:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18834              		.loc 1 1083 29 is_stmt 1 view .LVU6600
 18835              	.LVL1123:
1083:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18836              		.loc 1 1083 54 view .LVU6601
 18837              	# sieve_extend.c:1083:         case 100000000:     valid_primes = 5761455;  break;
GAS LISTING /tmp/ccgH0yRS.s 			page 500


1083:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18838              		.loc 1 1083 9 is_stmt 0 view .LVU6602
 18839 63e0 E93BFAFF 		jmp	.L1597	#
 18839      FF
 18840              	.LVL1124:
 18841              	.L1590:
1083:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 18842              		.loc 1 1083 9 view .LVU6603
 18843 63e5 4D85C0   		test	r8, r8	# primeCount
 18844 63e8 410F94C3 		sete	r11b	#, tmp191
 18845 63ec 4421DA   		and	edx, r11d	# _251, tmp191
 18846 63ef 4D85C0   		test	r8, r8	# primeCount
 18847 63f2 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 18848 63f6 410F95C6 		setne	r14b	#, _135
1085:sieve_extend.c ****     }
 18849              		.loc 1 1085 29 is_stmt 1 view .LVU6604
 18850              	# sieve_extend.c:1085:         default:            valid_primes= 0;
1085:sieve_extend.c ****     }
 18851              		.loc 1 1085 41 is_stmt 0 view .LVU6605
 18852 63fa 31C9     		xor	ecx, ecx	# valid_primes
 18853 63fc E91FFAFF 		jmp	.L1597	#
 18853      FF
 18854              	.L1584:
1085:sieve_extend.c ****     }
 18855              		.loc 1 1085 41 view .LVU6606
 18856 6401 4981F878 		cmp	r8, 9592	# primeCount,
 18856      250000
 18857              	# sieve_extend.c:1080:         case 100000:        valid_primes = 9592;     break;
1080:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18858              		.loc 1 1080 42 view .LVU6607
 18859 6408 B9782500 		mov	ecx, 9592	# valid_primes,
 18859      00
 18860 640d 400F94C7 		sete	dil	#, tmp181
 18861 6411 21FA     		and	edx, edi	# _251, tmp181
 18862 6413 4981F878 		cmp	r8, 9592	# primeCount,
 18862      250000
 18863 641a 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 18864 641e 410F95C6 		setne	r14b	#, _135
1080:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18865              		.loc 1 1080 29 is_stmt 1 view .LVU6608
 18866              	.LVL1125:
1080:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18867              		.loc 1 1080 54 view .LVU6609
 18868              	# sieve_extend.c:1080:         case 100000:        valid_primes = 9592;     break;
1080:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18869              		.loc 1 1080 9 is_stmt 0 view .LVU6610
 18870 6422 E9F9F9FF 		jmp	.L1597	#
 18870      FF
 18871              	.LVL1126:
 18872              	.L1618:
 18873              	# sieve_extend.c:1080:         case 100000:        valid_primes = 9592;     break;
1080:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 18874              		.loc 1 1080 42 view .LVU6611
 18875 6427 B9782500 		mov	ecx, 9592	# valid_primes,
 18875      00
 18876 642c E90EFEFF 		jmp	.L1598	#
 18876      FF
GAS LISTING /tmp/ccgH0yRS.s 			page 501


 18877              		.cfi_endproc
 18878              	.LFE79:
 18880              		.section	.rodata.str1.8
 18881 0145 000000   		.align 8
 18882              	.LC14:
 18883 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 18883      653A2025 
 18883      73205B6F 
 18883      7074696F 
 18883      6E735D20 
 18884              		.section	.rodata.str1.1
 18885              	.LC15:
 18886 0031 4F707469 		.string	"Options:\n"
 18886      6F6E733A 
 18886      0A00
 18887              		.section	.rodata.str1.8
 18888 0167 00       		.align 8
 18889              	.LC16:
 18890 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 18890      76657262 
 18890      6F736520 
 18890      3C6C6576 
 18890      656C3E20 
 18891 01a3 00000000 		.align 8
 18891      00
 18892              	.LC17:
 18893 01a8 20202020 		.string	"                     1 - show phase progress\n"
 18893      20202020 
 18893      20202020 
 18893      20202020 
 18893      20202020 
 18894 01d6 0000     		.align 8
 18895              	.LC18:
 18896 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 18896      20202020 
 18896      20202020 
 18896      20202020 
 18896      20202020 
 18897 0219 00000000 		.align 8
 18897      000000
 18898              	.LC19:
 18899 0220 20202020 		.string	"                     3 - show actual work\n"
 18899      20202020 
 18899      20202020 
 18899      20202020 
 18899      20202020 
 18900 024b 00000000 		.align 8
 18900      00
 18901              	.LC20:
 18902 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 18902      63686563 
 18902      6B202020 
 18902      20202020 
 18902      20202020 
 18903 028d 000000   		.align 8
 18904              	.LC21:
 18905 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
GAS LISTING /tmp/ccgH0yRS.s 			page 502


 18905      73686F77 
 18905      203C6D61 
 18905      78696D75 
 18905      6D3E2020 
 18906 02ce 0000     		.align 8
 18907              	.LC22:
 18908 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 18908      74756E65 
 18908      20203C6C 
 18908      6576656C 
 18908      3E202020 
 18909 031d 000000   		.align 8
 18910              	.LC23:
 18911 0320 20202020 		.string	"                     1 - fast tuning\n"
 18911      20202020 
 18911      20202020 
 18911      20202020 
 18911      20202020 
 18912 0346 0000     		.align 8
 18913              	.LC24:
 18914 0348 20202020 		.string	"                     2 - refined tuning\n"
 18914      20202020 
 18914      20202020 
 18914      20202020 
 18914      20202020 
 18915 0371 00000000 		.align 8
 18915      000000
 18916              	.LC25:
 18917 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 18917      20202020 
 18917      20202020 
 18917      20202020 
 18917      20202020 
 18918              		.text
 18919 6431 66662E0F 		.p2align 4
 18919      1F840000 
 18919      0000000F 
 18919      1F4000
 18920              		.globl	usage
 18922              	usage:
 18923              	.LVL1127:
 18924              	.LFB80:
1098:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18925              		.loc 1 1098 24 is_stmt 1 view -0
 18926              		.cfi_startproc
1098:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18927              		.loc 1 1098 24 is_stmt 0 view .LVU6613
 18928 6440 F30F1EFA 		endbr64	
 18929 6444 50       		push	rax	#
 18930              		.cfi_def_cfa_offset 16
 18931 6445 58       		pop	rax	#
 18932              		.cfi_def_cfa_offset 8
1099:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 18933              		.loc 1 1099 5 is_stmt 1 view .LVU6614
 18934              	.LVL1128:
 18935              	.LBB872:
 18936              	.LBI872:
GAS LISTING /tmp/ccgH0yRS.s 			page 503


  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18937              		.loc 3 98 1 view .LVU6615
 18938              	.LBB873:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18939              		.loc 3 100 3 view .LVU6616
 18940              	.LBE873:
 18941              	.LBE872:
 18942              	# sieve_extend.c:1098: void usage(char *name) {
1098:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18943              		.loc 1 1098 24 is_stmt 0 view .LVU6617
 18944 6446 488D6424 		lea	rsp, -8[rsp]	#,
 18944      F8
 18945              		.cfi_def_cfa_offset 16
 18946              	# sieve_extend.c:1098: void usage(char *name) {
1098:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 18947              		.loc 1 1098 24 view .LVU6618
 18948 644b 4889F9   		mov	rcx, rdi	# name, tmp107
 18949              	.LBB875:
 18950              	.LBB874:
 18951              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18952              		.loc 3 100 10 view .LVU6619
 18953 644e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 18953      000000
 18954              	.LVL1129:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18955              		.loc 3 100 10 view .LVU6620
 18956 6455 488D1500 		lea	rdx, .LC14[rip]	#,
 18956      000000
 18957 645c BE010000 		mov	esi, 1	#,
 18957      00
 18958 6461 31C0     		xor	eax, eax	#
 18959 6463 E8000000 		call	__fprintf_chk@PLT	#
 18959      00
 18960              	.LVL1130:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18961              		.loc 3 100 10 view .LVU6621
 18962              	.LBE874:
 18963              	.LBE875:
1100:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 18964              		.loc 1 1100 5 is_stmt 1 view .LVU6622
 18965              	.LBB876:
 18966              	.LBI876:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18967              		.loc 3 98 1 view .LVU6623
 18968              	.LBB877:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18969              		.loc 3 100 3 view .LVU6624
 18970              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18971              		.loc 3 100 10 is_stmt 0 view .LVU6625
 18972 6468 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18972      000000
 18973 646f BA090000 		mov	edx, 9	#,
 18973      00
 18974 6474 BE010000 		mov	esi, 1	#,
 18974      00
GAS LISTING /tmp/ccgH0yRS.s 			page 504


 18975 6479 488D3D00 		lea	rdi, .LC15[rip]	#,
 18975      000000
 18976 6480 E8000000 		call	fwrite@PLT	#
 18976      00
 18977              	.LVL1131:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18978              		.loc 3 100 10 view .LVU6626
 18979              	.LBE877:
 18980              	.LBE876:
1101:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 18981              		.loc 1 1101 5 is_stmt 1 view .LVU6627
 18982              	.LBB878:
 18983              	.LBI878:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18984              		.loc 3 98 1 view .LVU6628
 18985              	.LBB879:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18986              		.loc 3 100 3 view .LVU6629
 18987              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18988              		.loc 3 100 10 is_stmt 0 view .LVU6630
 18989 6485 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 18989      000000
 18990 648c BA3A0000 		mov	edx, 58	#,
 18990      00
 18991 6491 BE010000 		mov	esi, 1	#,
 18991      00
 18992 6496 488D3D00 		lea	rdi, .LC16[rip]	#,
 18992      000000
 18993 649d E8000000 		call	fwrite@PLT	#
 18993      00
 18994              	.LVL1132:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18995              		.loc 3 100 10 view .LVU6631
 18996              	.LBE879:
 18997              	.LBE878:
1102:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 18998              		.loc 1 1102 5 is_stmt 1 view .LVU6632
 18999              	.LBB880:
 19000              	.LBI880:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19001              		.loc 3 98 1 view .LVU6633
 19002              	.LBB881:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19003              		.loc 3 100 3 view .LVU6634
 19004              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19005              		.loc 3 100 10 is_stmt 0 view .LVU6635
 19006 64a2 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19006      000000
 19007 64a9 BA2D0000 		mov	edx, 45	#,
 19007      00
 19008 64ae BE010000 		mov	esi, 1	#,
 19008      00
 19009 64b3 488D3D00 		lea	rdi, .LC17[rip]	#,
 19009      000000
 19010 64ba E8000000 		call	fwrite@PLT	#
GAS LISTING /tmp/ccgH0yRS.s 			page 505


 19010      00
 19011              	.LVL1133:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19012              		.loc 3 100 10 view .LVU6636
 19013              	.LBE881:
 19014              	.LBE880:
1103:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 19015              		.loc 1 1103 5 is_stmt 1 view .LVU6637
 19016              	.LBB882:
 19017              	.LBI882:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19018              		.loc 3 98 1 view .LVU6638
 19019              	.LBB883:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19020              		.loc 3 100 3 view .LVU6639
 19021              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19022              		.loc 3 100 10 is_stmt 0 view .LVU6640
 19023 64bf 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19023      000000
 19024 64c6 BA400000 		mov	edx, 64	#,
 19024      00
 19025 64cb BE010000 		mov	esi, 1	#,
 19025      00
 19026 64d0 488D3D00 		lea	rdi, .LC18[rip]	#,
 19026      000000
 19027 64d7 E8000000 		call	fwrite@PLT	#
 19027      00
 19028              	.LVL1134:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19029              		.loc 3 100 10 view .LVU6641
 19030              	.LBE883:
 19031              	.LBE882:
1104:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 19032              		.loc 1 1104 5 is_stmt 1 view .LVU6642
 19033              	.LBB884:
 19034              	.LBI884:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19035              		.loc 3 98 1 view .LVU6643
 19036              	.LBB885:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19037              		.loc 3 100 3 view .LVU6644
 19038              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19039              		.loc 3 100 10 is_stmt 0 view .LVU6645
 19040 64dc 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19040      000000
 19041 64e3 BA2A0000 		mov	edx, 42	#,
 19041      00
 19042 64e8 BE010000 		mov	esi, 1	#,
 19042      00
 19043 64ed 488D3D00 		lea	rdi, .LC19[rip]	#,
 19043      000000
 19044 64f4 E8000000 		call	fwrite@PLT	#
 19044      00
 19045              	.LVL1135:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccgH0yRS.s 			page 506


 19046              		.loc 3 100 10 view .LVU6646
 19047              	.LBE885:
 19048              	.LBE884:
1105:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 19049              		.loc 1 1105 5 is_stmt 1 view .LVU6647
 19050              	.LBB886:
 19051              	.LBI886:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19052              		.loc 3 98 1 view .LVU6648
 19053              	.LBB887:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19054              		.loc 3 100 3 view .LVU6649
 19055              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19056              		.loc 3 100 10 is_stmt 0 view .LVU6650
 19057 64f9 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19057      000000
 19058 6500 BA3C0000 		mov	edx, 60	#,
 19058      00
 19059 6505 BE010000 		mov	esi, 1	#,
 19059      00
 19060 650a 488D3D00 		lea	rdi, .LC20[rip]	#,
 19060      000000
 19061 6511 E8000000 		call	fwrite@PLT	#
 19061      00
 19062              	.LVL1136:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19063              		.loc 3 100 10 view .LVU6651
 19064              	.LBE887:
 19065              	.LBE886:
1106:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 19066              		.loc 1 1106 5 is_stmt 1 view .LVU6652
 19067              	.LBB888:
 19068              	.LBI888:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19069              		.loc 3 98 1 view .LVU6653
 19070              	.LBB889:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19071              		.loc 3 100 3 view .LVU6654
 19072              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19073              		.loc 3 100 10 is_stmt 0 view .LVU6655
 19074 6516 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19074      000000
 19075 651d BA3D0000 		mov	edx, 61	#,
 19075      00
 19076 6522 BE010000 		mov	esi, 1	#,
 19076      00
 19077 6527 488D3D00 		lea	rdi, .LC21[rip]	#,
 19077      000000
 19078 652e E8000000 		call	fwrite@PLT	#
 19078      00
 19079              	.LVL1137:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19080              		.loc 3 100 10 view .LVU6656
 19081              	.LBE889:
 19082              	.LBE888:
GAS LISTING /tmp/ccgH0yRS.s 			page 507


1107:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 19083              		.loc 1 1107 5 is_stmt 1 view .LVU6657
 19084              	.LBB890:
 19085              	.LBI890:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19086              		.loc 3 98 1 view .LVU6658
 19087              	.LBB891:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19088              		.loc 3 100 3 view .LVU6659
 19089              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19090              		.loc 3 100 10 is_stmt 0 view .LVU6660
 19091 6533 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19091      000000
 19092 653a BA4C0000 		mov	edx, 76	#,
 19092      00
 19093 653f BE010000 		mov	esi, 1	#,
 19093      00
 19094 6544 488D3D00 		lea	rdi, .LC22[rip]	#,
 19094      000000
 19095 654b E8000000 		call	fwrite@PLT	#
 19095      00
 19096              	.LVL1138:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19097              		.loc 3 100 10 view .LVU6661
 19098              	.LBE891:
 19099              	.LBE890:
1108:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 19100              		.loc 1 1108 5 is_stmt 1 view .LVU6662
 19101              	.LBB892:
 19102              	.LBI892:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19103              		.loc 3 98 1 view .LVU6663
 19104              	.LBB893:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19105              		.loc 3 100 3 view .LVU6664
 19106              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19107              		.loc 3 100 10 is_stmt 0 view .LVU6665
 19108 6550 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19108      000000
 19109 6557 BA250000 		mov	edx, 37	#,
 19109      00
 19110 655c BE010000 		mov	esi, 1	#,
 19110      00
 19111 6561 488D3D00 		lea	rdi, .LC23[rip]	#,
 19111      000000
 19112 6568 E8000000 		call	fwrite@PLT	#
 19112      00
 19113              	.LVL1139:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19114              		.loc 3 100 10 view .LVU6666
 19115              	.LBE893:
 19116              	.LBE892:
1109:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 19117              		.loc 1 1109 5 is_stmt 1 view .LVU6667
 19118              	.LBB894:
GAS LISTING /tmp/ccgH0yRS.s 			page 508


 19119              	.LBI894:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19120              		.loc 3 98 1 view .LVU6668
 19121              	.LBB895:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19122              		.loc 3 100 3 view .LVU6669
 19123              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19124              		.loc 3 100 10 is_stmt 0 view .LVU6670
 19125 656d 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19125      000000
 19126 6574 BA280000 		mov	edx, 40	#,
 19126      00
 19127 6579 BE010000 		mov	esi, 1	#,
 19127      00
 19128 657e 488D3D00 		lea	rdi, .LC24[rip]	#,
 19128      000000
 19129 6585 E8000000 		call	fwrite@PLT	#
 19129      00
 19130              	.LVL1140:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19131              		.loc 3 100 10 view .LVU6671
 19132              	.LBE895:
 19133              	.LBE894:
1110:sieve_extend.c ****     exit(1);
 19134              		.loc 1 1110 5 is_stmt 1 view .LVU6672
 19135              	.LBB896:
 19136              	.LBI896:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19137              		.loc 3 98 1 view .LVU6673
 19138              	.LBB897:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19139              		.loc 3 100 3 view .LVU6674
 19140              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19141              		.loc 3 100 10 is_stmt 0 view .LVU6675
 19142 658a 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19142      000000
 19143 6591 488D3D00 		lea	rdi, .LC25[rip]	#,
 19143      000000
 19144 6598 BA350000 		mov	edx, 53	#,
 19144      00
 19145 659d BE010000 		mov	esi, 1	#,
 19145      00
 19146 65a2 E8000000 		call	fwrite@PLT	#
 19146      00
 19147              	.LVL1141:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19148              		.loc 3 100 10 view .LVU6676
 19149              	.LBE897:
 19150              	.LBE896:
1111:sieve_extend.c **** }
 19151              		.loc 1 1111 5 is_stmt 1 view .LVU6677
 19152 65a7 BF010000 		mov	edi, 1	#,
 19152      00
 19153 65ac E8000000 		call	exit@PLT	#
 19153      00
GAS LISTING /tmp/ccgH0yRS.s 			page 509


 19154              	.LVL1142:
 19155              		.cfi_endproc
 19156              	.LFE80:
 19158              		.section	.rodata.str1.1
 19159              	.LC27:
 19160 003b 56616C69 		.string	"Validating... "
 19160      64617469 
 19160      6E672E2E 
 19160      2E2000
 19161              	.LC28:
 19162 004a 2D2D6865 		.string	"--help"
 19162      6C7000
 19163              	.LC29:
 19164 0051 2D2D7665 		.string	"--verbose"
 19164      72626F73 
 19164      6500
 19165              	.LC30:
 19166 005b 4E6F2076 		.string	"No verbose level specified\n"
 19166      6572626F 
 19166      7365206C 
 19166      6576656C 
 19166      20737065 
 19167              	.LC31:
 19168 0077 256400   		.string	"%d"
 19169              		.section	.rodata.str1.8
 19170 03ae 0000     		.align 8
 19171              	.LC32:
 19172 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 19172      723A2049 
 19172      6E76616C 
 19172      6964206D 
 19172      65617375 
 19173              		.section	.rodata.str1.1
 19174              	.LC33:
 19175 007a 56657262 		.string	"Verbose level set to %d\n"
 19175      6F736520 
 19175      6C657665 
 19175      6C207365 
 19175      7420746F 
 19176              	.LC34:
 19177 0093 2D2D6368 		.string	"--check"
 19177      65636B00 
 19178              	.LC35:
 19179 009b 2D2D7475 		.string	"--tune"
 19179      6E6500
 19180              	.LC36:
 19181 00a2 4E6F2074 		.string	"No tune level specified\n"
 19181      756E6520 
 19181      6C657665 
 19181      6C207370 
 19181      65636966 
 19182              		.section	.rodata.str1.8
 19183 03d5 000000   		.align 8
 19184              	.LC37:
 19185 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 19185      723A2049 
 19185      6E76616C 
GAS LISTING /tmp/ccgH0yRS.s 			page 510


 19185      69642074 
 19185      756E6520 
 19186              		.section	.rodata.str1.1
 19187              	.LC38:
 19188 00bb 54756E65 		.string	"Tune level set to %d\n"
 19188      206C6576 
 19188      656C2073 
 19188      65742074 
 19188      6F202564 
 19189              	.LC39:
 19190 00d1 2D2D7368 		.string	"--show"
 19190      6F7700
 19191              	.LC40:
 19192 00d8 4E6F2073 		.string	"No show maximum specified\n"
 19192      686F7720 
 19192      6D617869 
 19192      6D756D20 
 19192      73706563 
 19193              	.LC41:
 19194 00f3 256A7500 		.string	"%ju"
 19195              		.section	.rodata.str1.8
 19196 03f7 00       		.align 8
 19197              	.LC42:
 19198 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 19198      723A2049 
 19198      6E76616C 
 19198      69642073 
 19198      686F7720 
 19199              		.section	.rodata.str1.1
 19200              	.LC43:
 19201 00f7 53686F77 		.string	"Show maximum set to %ju\n"
 19201      206D6178 
 19201      696D756D 
 19201      20736574 
 19201      20746F20 
 19202              	.LC44:
 19203 0110 496E7661 		.string	"Invalid size %s\n"
 19203      6C696420 
 19203      73697A65 
 19203      2025730A 
 19203      00
 19204              	.LC45:
 19205 0121 2E2E2E43 		.string	"...Checking size %ju ..."
 19205      6865636B 
 19205      696E6720 
 19205      73697A65 
 19205      20256A75 
 19206              	.LC46:
 19207 013a 2E626C6F 		.string	".blocksize %ju-"
 19207      636B7369 
 19207      7A652025 
 19207      6A752D00 
 19208              	.LC47:
 19209 014a 76616C69 		.string	"valid;"
 19209      643B00
 19210              	.LC48:
 19211 0151 2E2E2E56 		.string	"...Valid algorithm"
GAS LISTING /tmp/ccgH0yRS.s 			page 511


 19211      616C6964 
 19211      20616C67 
 19211      6F726974 
 19211      686D00
 19212              	.LC49:
 19213 0164 54756E69 		.string	"Tuning..."
 19213      6E672E2E 
 19213      2E00
 19214              	.LC50:
 19215 016e 2E283E29 		.string	".(>)"
 19215      00
 19216              		.section	.rodata.str1.8
 19217 0419 00000000 		.align 8
 19217      000000
 19218              	.LC51:
 19219 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 19219      6B73697A 
 19219      655F6269 
 19219      74732025 
 19219      31306A75 
 19220              		.section	.rodata.str1.1
 19221              	.LC52:
 19222 0173 2E2E2E2E 		.string	"...."
 19222      00
 19223              		.section	.rodata.str1.8
 19224 04a7 00       		.align 8
 19225              	.LC53:
 19226 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 19226      72657375 
 19226      6C74732E 
 19226      20496E69 
 19226      74616C20 
 19227              		.section	.rodata.str1.1
 19228              	.LC54:
 19229 0178 42657374 		.string	"Best options"
 19229      206F7074 
 19229      696F6E73 
 19229      00
 19230              	.LC55:
 19231 0185 28256A75 		.string	"(%ju) "
 19231      292000
 19232              	.LC56:
 19233 018c 2E2E2E00 		.string	"..."
 19234              	.LC57:
 19235 0190 2E426573 		.string	".Best result:"
 19235      74207265 
 19235      73756C74 
 19235      3A00
 19236              		.section	.rodata.str1.8
 19237 04fa 00000000 		.align 8
 19237      0000
 19238              	.LC58:
 19239 0500 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 19239      686D6172 
 19239      6B696E67 
 19239      2E2E2E20 
 19239      77697468 
GAS LISTING /tmp/ccgH0yRS.s 			page 512


 19240 0537 00       		.align 8
 19241              	.LC60:
 19242 0538 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 19242      65727661 
 19242      6E64616D 
 19242      5F657874 
 19242      656E643B 
 19243 057a 00000000 		.align 8
 19243      0000
 19244              	.LC61:
 19245 0580 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 19245      6573202D 
 19245      20706572 
 19245      20352073 
 19245      65636F6E 
 19246              		.section	.rodata.str1.1
 19247              	.LC62:
 19248 019e 53686F77 		.string	"Show result set:"
 19248      20726573 
 19248      756C7420 
 19248      7365743A 
 19248      00
 19249              		.section	.text.startup,"ax",@progbits
 19250              		.p2align 4
 19251              		.globl	main
 19253              	main:
 19254              	.LVL1143:
 19255              	.LFB85:
1157:sieve_extend.c **** 
1158:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
1159:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
1160:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
1161:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
1162:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
1163:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
1164:sieve_extend.c **** }
1165:sieve_extend.c **** 
1166:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
1167:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
1168:sieve_extend.c **** 
1169:sieve_extend.c ****     double best_avg = 0;
1170:sieve_extend.c ****     best_blocksize_bits = 0;
1171:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
1172:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
1173:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
1174:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
1175:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
1176:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
1177:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
1178:sieve_extend.c ****     counter_t sample_max = default_sample_max;
1179:sieve_extend.c ****     double sample_duration = default_sample_duration;
1180:sieve_extend.c **** 
1181:sieve_extend.c ****     // determines the size of the resultset
1182:sieve_extend.c ****     switch (tune_level) {
1183:sieve_extend.c ****         case 1:
1184:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
1185:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
GAS LISTING /tmp/ccgH0yRS.s 			page 513


1186:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/2;
1187:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
1188:sieve_extend.c ****             sample_max = 8;
1189:sieve_extend.c ****             sample_duration = 0.1;
1190:sieve_extend.c ****             break;
1191:sieve_extend.c ****         case 2:
1192:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
1193:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
1194:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
1195:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
1196:sieve_extend.c ****             sample_max = 8;
1197:sieve_extend.c ****             sample_duration = 0.2;
1198:sieve_extend.c ****             break;
1199:sieve_extend.c ****         case 3:
1200:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
1201:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
1202:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
1203:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
1204:sieve_extend.c ****             sample_max = 8;
1205:sieve_extend.c ****             sample_duration = 0.2;
1206:sieve_extend.c ****             break;
1207:sieve_extend.c ****     }
1208:sieve_extend.c ****     
1209:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselevel >= 2) printf("\n");
1210:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
1211:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
1212:sieve_extend.c ****     counter_t tuning_results=0;
1213:sieve_extend.c ****     counter_t tuning_result_index=0;
1214:sieve_extend.c ****     
1215:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; smallstep_faster += small
1216:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
1217:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
1218:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
1219:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
1220:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1221:sieve_extend.c **** 
1222:sieve_extend.c ****                         // set variables
1223:sieve_extend.c ****                         tuning_results++;
1224:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
1225:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
1226:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
1227:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1228:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
1229:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1230:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1231:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1232:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
1233:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
1234:sieve_extend.c **** 
1235:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
1236:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
1237:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
1238:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
1239:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
1240:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
1241:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
1242:sieve_extend.c ****                         }
GAS LISTING /tmp/ccgH0yRS.s 			page 514


1243:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
1244:sieve_extend.c ****                         tuning_result_index++;
1245:sieve_extend.c ****                     }
1246:sieve_extend.c ****                 }
1247:sieve_extend.c ****             }
1248:sieve_extend.c ****         }
1249:sieve_extend.c ****     }
1250:sieve_extend.c ****     if (option_verboselevel >= 2) {
1251:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
1252:sieve_extend.c ****         printf("Best options\n");
1253:sieve_extend.c ****     }
1254:sieve_extend.c ****     counter_t step=0;
1255:sieve_extend.c ****     while (tuning_results>4) {
1256:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1257:sieve_extend.c ****         step++;
1258:sieve_extend.c ****         if (option_verboselevel >= 2) {
1259:sieve_extend.c ****             tuning_result_index = 0;
1260:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
1261:sieve_extend.c ****             if (option_verboselevel >= 3) {
1262:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1263:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
1264:sieve_extend.c ****                 }
1265:sieve_extend.c ****             }
1266:sieve_extend.c ****         }
1267:sieve_extend.c **** 
1268:sieve_extend.c ****         tuning_results = tuning_results / 2;
1269:sieve_extend.c **** 
1270:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1271:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1272:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1273:sieve_extend.c ****         }
1274:sieve_extend.c ****         
1275:sieve_extend.c ****     }
1276:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1277:sieve_extend.c ****     if (option_verboselevel >= 1) {
1278:sieve_extend.c ****         tuning_result_index = 0;
1279:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
1280:sieve_extend.c ****     }
1281:sieve_extend.c **** 
1282:sieve_extend.c ****     free(tuning_result);
1283:sieve_extend.c ****     return best_result;
1284:sieve_extend.c **** }
1285:sieve_extend.c **** 
1286:sieve_extend.c **** int main(int argc, char *argv[]) {
 19256              		.loc 1 1286 34 view -0
 19257              		.cfi_startproc
 19258              		.loc 1 1286 34 is_stmt 0 view .LVU6679
 19259 0000 F30F1EFA 		endbr64	
 19260 0004 4157     		push	r15	#
 19261              		.cfi_def_cfa_offset 16
 19262              		.cfi_offset 15, -16
 19263 0006 4156     		push	r14	#
 19264              		.cfi_def_cfa_offset 24
 19265              		.cfi_offset 14, -24
 19266 0008 4155     		push	r13	#
 19267              		.cfi_def_cfa_offset 32
 19268              		.cfi_offset 13, -32
GAS LISTING /tmp/ccgH0yRS.s 			page 515


 19269 000a 4154     		push	r12	#
 19270              		.cfi_def_cfa_offset 40
 19271              		.cfi_offset 12, -40
 19272 000c 55       		push	rbp	#
 19273              		.cfi_def_cfa_offset 48
 19274              		.cfi_offset 6, -48
 19275 000d 53       		push	rbx	#
 19276              		.cfi_def_cfa_offset 56
 19277              		.cfi_offset 3, -56
 19278 000e 488DA424 		lea	rsp, -232[rsp]	#,
 19278      18FFFFFF 
 19279              		.cfi_def_cfa_offset 288
 19280              	# sieve_extend.c:1286: int main(int argc, char *argv[]) {
 19281              		.loc 1 1286 34 view .LVU6680
 19282 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp570, MEM[(<address-space-1> long unsigned int *)40B]
 19282      25280000 
 19282      00
 19283 001f 48898424 		mov	QWORD PTR 216[rsp], rax	# D.7536, tmp570
 19283      D8000000 
 19284 0027 31C0     		xor	eax, eax	# tmp570
1287:sieve_extend.c **** 
1288:sieve_extend.c ****     
1289:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 19285              		.loc 1 1289 5 is_stmt 1 view .LVU6681
 19286              	# sieve_extend.c:1289:     counter_t option_maxFactor  = default_sieve_limit;
 19287              		.loc 1 1289 15 is_stmt 0 view .LVU6682
 19288 0029 48C78424 		mov	QWORD PTR 160[rsp], 1000000	# option_maxFactor,
 19288      A0000000 
 19288      40420F00 
1290:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 19289              		.loc 1 1290 5 is_stmt 1 view .LVU6683
 19290              	.LBB1004:
 19291              	# sieve_extend.c:1295:     for (int arg=1; arg < argc; arg++) {
1291:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1292:sieve_extend.c ****     int option_check = default_check_level;
1293:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1294:sieve_extend.c **** 
1295:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 19292              		.loc 1 1295 5 is_stmt 0 view .LVU6684
 19293 0035 83FF01   		cmp	edi, 1	# argc,
 19294              	.LBE1004:
 19295              	# sieve_extend.c:1290:     counter_t option_showMaxFactor = default_showMaxFactor;
1290:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 19296              		.loc 1 1290 15 view .LVU6685
 19297 0038 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 19297      A8000000 
 19297      00000000 
1291:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 19298              		.loc 1 1291 5 is_stmt 1 view .LVU6686
 19299              	# sieve_extend.c:1291:     int option_verboselevel = default_verbose_level;
1291:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 19300              		.loc 1 1291 9 is_stmt 0 view .LVU6687
 19301 0044 C7842498 		mov	DWORD PTR 152[rsp], 2	# option_verboselevel,
 19301      00000002 
 19301      000000
1292:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 19302              		.loc 1 1292 5 is_stmt 1 view .LVU6688
GAS LISTING /tmp/ccgH0yRS.s 			page 516


 19303              	.LVL1144:
1293:sieve_extend.c **** 
 19304              		.loc 1 1293 5 view .LVU6689
 19305              	# sieve_extend.c:1293:     int option_tunelevel = default_tune_level;
1293:sieve_extend.c **** 
 19306              		.loc 1 1293 9 is_stmt 0 view .LVU6690
 19307 004f C784249C 		mov	DWORD PTR 156[rsp], 0	# option_tunelevel,
 19307      00000000 
 19307      000000
 19308              		.loc 1 1295 5 is_stmt 1 view .LVU6691
 19309              	.LBB1029:
 19310              		.loc 1 1295 10 view .LVU6692
 19311              	.LVL1145:
 19312              		.loc 1 1295 21 view .LVU6693
 19313              	# sieve_extend.c:1295:     for (int arg=1; arg < argc; arg++) {
 19314              		.loc 1 1295 5 is_stmt 0 view .LVU6694
 19315 005a 0F8E1C05 		jle	.L1749	#,
 19315      0000
 19316 0060 89FD     		mov	ebp, edi	# argc, tmp524
 19317 0062 4989F4   		mov	r12, rsi	# argv, tmp525
 19318              	# sieve_extend.c:1295:     for (int arg=1; arg < argc; arg++) {
 19319              		.loc 1 1295 14 view .LVU6695
 19320 0065 BB010000 		mov	ebx, 1	# arg,
 19320      00
 19321 006a 4C8D2D00 		lea	r13, .LC28[rip]	# tmp464,
 19321      000000
 19322              	# sieve_extend.c:1297:         else if (strcmp(argv[arg], "--verbose")==0) {
1296:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1297:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19323              		.loc 1 1297 18 view .LVU6696
 19324 0071 4C8D3500 		lea	r14, .LC29[rip]	# tmp479,
 19324      000000
 19325 0078 EB66     		jmp	.L1733	#
 19326              	.LVL1146:
 19327 007a 660F1F44 		.p2align 4,,7
 19327      0000
 19328              		.p2align 3
 19329              	.L1867:
1298:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19330              		.loc 1 1298 13 is_stmt 1 view .LVU6697
 19331              	# sieve_extend.c:1298:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 19332              		.loc 1 1298 16 is_stmt 0 view .LVU6698
 19333 0080 83C301   		add	ebx, 1	# arg,
 19334              	.LVL1147:
 19335              		.loc 1 1298 16 view .LVU6699
 19336 0083 39DD     		cmp	ebp, ebx	# argc, arg
 19337 0085 0F8E9D0E 		jle	.L1865	#,
 19337      0000
1299:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19338              		.loc 1 1299 13 is_stmt 1 view .LVU6700
 19339              	# sieve_extend.c:1299:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19340              		.loc 1 1299 28 is_stmt 0 view .LVU6701
 19341 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 19341      08
 19342              	# sieve_extend.c:1299:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19343              		.loc 1 1299 17 view .LVU6702
 19344 0090 488D9424 		lea	rdx, 152[rsp]	# tmp301,
GAS LISTING /tmp/ccgH0yRS.s 			page 517


 19344      98000000 
 19345 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 19346 009b 31C0     		xor	eax, eax	#
 19347 009d 488D3500 		lea	rsi, .LC31[rip]	#,
 19347      000000
 19348 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 19348      00
 19349              	.LVL1148:
 19350              	# sieve_extend.c:1299:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19351              		.loc 1 1299 16 view .LVU6703
 19352 00a9 83F801   		cmp	eax, 1	# tmp526,
 19353 00ac 0F85E204 		jne	.L1738	#,
 19353      0000
 19354              	# sieve_extend.c:1299:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19355              		.loc 1 1299 91 discriminator 1 view .LVU6704
 19356 00b2 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.16_19, option_verboselevel
 19356      000000
 19357              	# sieve_extend.c:1299:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 19358              		.loc 1 1299 68 discriminator 1 view .LVU6705
 19359 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 19360 00bc 0F8FD204 		jg	.L1738	#,
 19360      0000
1300:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1301:sieve_extend.c ****             }
1302:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 19361              		.loc 1 1302 13 is_stmt 1 view .LVU6706
 19362              	.LVL1149:
 19363              	.LBB1005:
 19364              	.LBI1005:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19365              		.loc 3 105 1 view .LVU6707
 19366              	.LBB1006:
 19367              		.loc 3 107 3 view .LVU6708
 19368              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19369              		.loc 3 107 10 is_stmt 0 view .LVU6709
 19370 00c2 488D3500 		lea	rsi, .LC33[rip]	#,
 19370      000000
 19371 00c9 BF010000 		mov	edi, 1	#,
 19371      00
 19372 00ce 31C0     		xor	eax, eax	#
 19373 00d0 E8000000 		call	__printf_chk@PLT	#
 19373      00
 19374              	.LVL1150:
 19375              	.L1740:
 19376              		.loc 3 107 10 view .LVU6710
 19377              	.LBE1006:
 19378              	.LBE1005:
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19379              		.loc 1 1295 33 is_stmt 1 discriminator 2 view .LVU6711
 19380              	# sieve_extend.c:1295:     for (int arg=1; arg < argc; arg++) {
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19381              		.loc 1 1295 36 is_stmt 0 discriminator 2 view .LVU6712
 19382 00d5 83C301   		add	ebx, 1	# arg,
 19383              	.LVL1151:
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19384              		.loc 1 1295 21 is_stmt 1 discriminator 2 view .LVU6713
 19385              	# sieve_extend.c:1295:     for (int arg=1; arg < argc; arg++) {
GAS LISTING /tmp/ccgH0yRS.s 			page 518


1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19386              		.loc 1 1295 5 is_stmt 0 discriminator 2 view .LVU6714
 19387 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 19388 00da 0F8E0001 		jle	.L1866	#,
 19388      0000
 19389              	.LVL1152:
 19390              	.L1733:
1296:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19391              		.loc 1 1296 9 is_stmt 1 view .LVU6715
 19392              	# sieve_extend.c:1296:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1296:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19393              		.loc 1 1296 24 is_stmt 0 view .LVU6716
 19394 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 19395              	# sieve_extend.c:1296:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1296:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19396              		.loc 1 1296 13 view .LVU6717
 19397 00e3 41B90700 		mov	r9d, 7	# tmp290,
 19397      0000
 19398              	# sieve_extend.c:1296:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1296:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19399              		.loc 1 1296 24 view .LVU6718
 19400 00e9 48C1E003 		sal	rax, 3	# _2,
 19401              	# sieve_extend.c:1296:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1296:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19402              		.loc 1 1296 13 view .LVU6719
 19403 00ed 4C89EF   		mov	rdi, r13	# tmp289, tmp464
 19404              	# sieve_extend.c:1296:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1296:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19405              		.loc 1 1296 24 view .LVU6720
 19406 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 19407              	# sieve_extend.c:1296:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1296:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19408              		.loc 1 1296 13 view .LVU6721
 19409 00f4 4C89C9   		mov	rcx, r9	# tmp490, tmp290
 19410 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 19411 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 19412 00fd F3A6     		repz cmpsb
 19413 00ff 0F97C2   		seta	dl	#, tmp291
 19414 0102 80DA00   		sbb	dl, 0	# _5
 19415              	# sieve_extend.c:1296:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1296:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 19416              		.loc 1 1296 12 view .LVU6722
 19417 0105 84D2     		test	dl, dl	# _5
 19418 0107 0F84A404 		je	.L1863	#,
 19418      0000
1297:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19419              		.loc 1 1297 14 is_stmt 1 view .LVU6723
 19420              	# sieve_extend.c:1297:         else if (strcmp(argv[arg], "--verbose")==0) {
1297:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19421              		.loc 1 1297 18 is_stmt 0 view .LVU6724
 19422 010d B90A0000 		mov	ecx, 10	# tmp296,
 19422      00
 19423 0112 4C89C6   		mov	rsi, r8	# _4, _4
 19424 0115 4C89F7   		mov	rdi, r14	# tmp295, tmp479
 19425 0118 F3A6     		repz cmpsb
 19426 011a 410F97C2 		seta	r10b	#, tmp297
 19427 011e 4180DA00 		sbb	r10b, 0	# _11
GAS LISTING /tmp/ccgH0yRS.s 			page 519


 19428              	# sieve_extend.c:1297:         else if (strcmp(argv[arg], "--verbose")==0) {
1297:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 19429              		.loc 1 1297 17 view .LVU6725
 19430 0122 4584D2   		test	r10b, r10b	# _11
 19431 0125 0F8455FF 		je	.L1867	#,
 19431      FFFF
1303:sieve_extend.c ****         } 
1304:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19432              		.loc 1 1304 14 is_stmt 1 view .LVU6726
 19433              	# sieve_extend.c:1304:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19434              		.loc 1 1304 18 is_stmt 0 view .LVU6727
 19435 012b B9080000 		mov	ecx, 8	# tmp306,
 19435      00
 19436 0130 4C89C6   		mov	rsi, r8	# _4, _4
 19437 0133 488D3D00 		lea	rdi, .LC34[rip]	# tmp305,
 19437      000000
 19438 013a F3A6     		repz cmpsb
 19439 013c 410F97C3 		seta	r11b	#, tmp307
 19440 0140 4180DB00 		sbb	r11b, 0	# _23
 19441              	# sieve_extend.c:1304:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 19442              		.loc 1 1304 17 view .LVU6728
 19443 0144 4584DB   		test	r11b, r11b	# _23
 19444 0147 748C     		je	.L1740	#,
1305:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19445              		.loc 1 1305 14 is_stmt 1 view .LVU6729
 19446              	# sieve_extend.c:1305:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19447              		.loc 1 1305 18 is_stmt 0 view .LVU6730
 19448 0149 4C89C6   		mov	rsi, r8	# _4, _4
 19449 014c 488D3D00 		lea	rdi, .LC35[rip]	# tmp311,
 19449      000000
 19450 0153 4C89C9   		mov	rcx, r9	# tmp496, tmp290
 19451 0156 F3A6     		repz cmpsb
 19452 0158 0F97C2   		seta	dl	#, tmp313
 19453 015b 80DA00   		sbb	dl, 0	# _24
 19454              	# sieve_extend.c:1305:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19455              		.loc 1 1305 17 view .LVU6731
 19456 015e 84D2     		test	dl, dl	# _24
 19457 0160 0F855A01 		jne	.L1741	#,
 19457      0000
 19458              		.loc 1 1305 52 is_stmt 1 discriminator 1 view .LVU6732
 19459              	# sieve_extend.c:1305:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 19460              		.loc 1 1305 68 is_stmt 0 discriminator 1 view .LVU6733
 19461 0166 C784249C 		mov	DWORD PTR 156[rsp], 0	# option_tunelevel,
 19461      00000000 
 19461      000000
1306:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 19462              		.loc 1 1306 13 is_stmt 1 discriminator 1 view .LVU6734
 19463              	# sieve_extend.c:1306:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 19464              		.loc 1 1306 16 is_stmt 0 discriminator 1 view .LVU6735
 19465 0171 83C301   		add	ebx, 1	# arg,
 19466              	.LVL1153:
 19467              		.loc 1 1306 16 discriminator 1 view .LVU6736
 19468 0174 39DD     		cmp	ebp, ebx	# argc, arg
 19469 0176 0F8EEC0D 		jle	.L1868	#,
 19469      0000
1307:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19470              		.loc 1 1307 13 is_stmt 1 view .LVU6737
GAS LISTING /tmp/ccgH0yRS.s 			page 520


 19471              	# sieve_extend.c:1307:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19472              		.loc 1 1307 28 is_stmt 0 view .LVU6738
 19473 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 19473      08
 19474              	# sieve_extend.c:1307:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19475              		.loc 1 1307 17 view .LVU6739
 19476 0181 488D9424 		lea	rdx, 156[rsp]	# tmp317,
 19476      9C000000 
 19477 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 19478 018c 31C0     		xor	eax, eax	#
 19479 018e 488D3500 		lea	rsi, .LC31[rip]	#,
 19479      000000
 19480 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 19480      00
 19481              	.LVL1154:
 19482              	# sieve_extend.c:1307:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19483              		.loc 1 1307 16 view .LVU6740
 19484 019a 83F801   		cmp	eax, 1	# tmp527,
 19485 019d 0F85A70D 		jne	.L1743	#,
 19485      0000
 19486              	# sieve_extend.c:1307:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19487              		.loc 1 1307 85 discriminator 1 view .LVU6741
 19488 01a3 8B94249C 		mov	edx, DWORD PTR 156[rsp]	# option_tunelevel.20_32, option_tunelevel
 19488      000000
 19489              	# sieve_extend.c:1307:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 19490              		.loc 1 1307 65 discriminator 1 view .LVU6742
 19491 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
 19492 01ad 0F8F970D 		jg	.L1743	#,
 19492      0000
1308:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1309:sieve_extend.c ****             }
1310:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 19493              		.loc 1 1310 13 is_stmt 1 view .LVU6743
 19494              	.LVL1155:
 19495              	.LBB1007:
 19496              	.LBI1007:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19497              		.loc 3 105 1 view .LVU6744
 19498              	.LBB1008:
 19499              		.loc 3 107 3 view .LVU6745
 19500              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19501              		.loc 3 107 10 is_stmt 0 view .LVU6746
 19502 01b3 31C0     		xor	eax, eax	#
 19503 01b5 488D3500 		lea	rsi, .LC38[rip]	#,
 19503      000000
 19504 01bc BF010000 		mov	edi, 1	#,
 19504      00
 19505              	.LBE1008:
 19506              	.LBE1007:
 19507              	# sieve_extend.c:1295:     for (int arg=1; arg < argc; arg++) {
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19508              		.loc 1 1295 36 view .LVU6747
 19509 01c1 83C301   		add	ebx, 1	# arg,
 19510              	.LVL1156:
 19511              	.LBB1010:
 19512              	.LBB1009:
 19513              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccgH0yRS.s 			page 521


 19514              		.loc 3 107 10 view .LVU6748
 19515 01c4 E8000000 		call	__printf_chk@PLT	#
 19515      00
 19516              	.LVL1157:
 19517              		.loc 3 107 10 view .LVU6749
 19518              	.LBE1009:
 19519              	.LBE1010:
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19520              		.loc 1 1295 33 is_stmt 1 view .LVU6750
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19521              		.loc 1 1295 21 view .LVU6751
 19522              	# sieve_extend.c:1295:     for (int arg=1; arg < argc; arg++) {
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19523              		.loc 1 1295 5 is_stmt 0 view .LVU6752
 19524 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 19525 01cb 0F8F0FFF 		jg	.L1733	#,
 19525      FFFF
 19526 01d1 66662E0F 		.p2align 4
 19526      1F840000 
 19526      0000000F 
 19526      1F4000
 19527              		.p2align 3
 19528              	.L1866:
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19529              		.loc 1 1295 5 view .LVU6753
 19530              	.LBE1029:
1311:sieve_extend.c ****         }
1312:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1313:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1314:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1315:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1316:sieve_extend.c ****             }
1317:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1318:sieve_extend.c ****         }
1319:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1320:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1321:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1322:sieve_extend.c ****         }
1323:sieve_extend.c ****     }
1324:sieve_extend.c **** 
1325:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 19531              		.loc 1 1325 5 is_stmt 1 view .LVU6754
1326:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, default_blocksize);
1327:sieve_extend.c ****         printf("\nResult set:\n");
1328:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1329:sieve_extend.c ****         int valid = validatePrimeCount(sieve_instance,3);
1330:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1331:sieve_extend.c ****         else printf("The sieve is VALID\n");
1332:sieve_extend.c ****         delete_sieve(sieve_instance);
1333:sieve_extend.c ****         exit(0);
1334:sieve_extend.c ****     }
1335:sieve_extend.c **** 
1336:sieve_extend.c ****     struct timespec start_time,end_time;
 19532              		.loc 1 1336 5 view .LVU6755
1337:sieve_extend.c **** 
1338:sieve_extend.c ****     if (option_check) {
 19533              		.loc 1 1338 5 view .LVU6756
GAS LISTING /tmp/ccgH0yRS.s 			page 522


1339:sieve_extend.c ****         // Count the number of primes and validate the result
1340:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
 19534              		.loc 1 1340 9 view .LVU6757
 19535              	# sieve_extend.c:1340:         if (option_verboselevel >= 1) printf("Validating... ");
 19536              		.loc 1 1340 12 is_stmt 0 view .LVU6758
 19537 01e0 8BAC2498 		mov	ebp, DWORD PTR 152[rsp]	#, option_verboselevel
 19537      000000
 19538              	.LVL1158:
 19539              		.loc 1 1340 12 view .LVU6759
 19540 01e7 85ED     		test	ebp, ebp	#
 19541 01e9 0F8F8D03 		jg	.L1749	#,
 19541      0000
 19542              	.LVL1159:
 19543              	.L1734:
1341:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 19544              		.loc 1 1341 9 is_stmt 1 view .LVU6760
 19545              	# sieve_extend.c:1341:         if (option_verboselevel >= 2) printf("\n");
 19546              		.loc 1 1341 12 is_stmt 0 view .LVU6761
 19547 01ef 83BC2498 		cmp	DWORD PTR 152[rsp], 1	# option_verboselevel,
 19547      00000001 
 19548 01f7 7E0A     		jle	.L1750	#,
 19549              		.loc 1 1341 39 is_stmt 1 view .LVU6762
 19550              	.LVL1160:
 19551              	.LBB1030:
 19552              	.LBI1030:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19553              		.loc 3 105 1 view .LVU6763
 19554              	.LBB1031:
 19555              		.loc 3 107 3 view .LVU6764
 19556              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19557              		.loc 3 107 10 is_stmt 0 view .LVU6765
 19558 01f9 BF0A0000 		mov	edi, 10	#,
 19558      00
 19559 01fe E8000000 		call	putchar@PLT	#
 19559      00
 19560              	.LVL1161:
 19561              	.L1750:
 19562              		.loc 3 107 10 view .LVU6766
 19563              	.LBE1031:
 19564              	.LBE1030:
 19565              	.LBB1032:
 19566              	# sieve_extend.c:1295:     for (int arg=1; arg < argc; arg++) {
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19567              		.loc 1 1295 14 view .LVU6767
 19568 0203 C7442420 		mov	DWORD PTR 32[rsp], 7	# %sfp,
 19568      07000000 
 19569 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 19569      0000
 19570              	.LBE1032:
 19571              	.LBB1033:
 19572              	.LBB1034:
 19573              	.LBB1035:
 19574              	.LBB1036:
 19575              	.LBB1037:
 19576              	.LBB1038:
 19577              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19578              		.loc 3 107 10 view .LVU6768
GAS LISTING /tmp/ccgH0yRS.s 			page 523


 19579 0211 4C8D3500 		lea	r14, .LC46[rip]	# tmp478,
 19579      000000
 19580              	.L1757:
 19581              	.LVL1162:
 19582              		.loc 3 107 10 view .LVU6769
 19583              	.LBE1038:
 19584              	.LBE1037:
 19585              	.LBE1036:
 19586              	.LBE1035:
1342:sieve_extend.c **** 
1343:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1344:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; sieveSize_check *=10) {
1345:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19587              		.loc 1 1345 13 is_stmt 1 view .LVU6770
 19588              	# sieve_extend.c:1345:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 19589              		.loc 1 1345 37 is_stmt 0 view .LVU6771
 19590 0218 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19590      000000
 19591              	# sieve_extend.c:1345:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 19592              		.loc 1 1345 16 view .LVU6772
 19593 021f 83F801   		cmp	eax, 1	# prephitmp_326,
 19594 0222 7E1D     		jle	.L1751	#,
 19595              		.loc 1 1345 43 is_stmt 1 view .LVU6773
 19596              	.LVL1163:
 19597              	.LBB1054:
 19598              	.LBI1054:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19599              		.loc 3 105 1 view .LVU6774
 19600              	.LBB1055:
 19601              		.loc 3 107 3 view .LVU6775
 19602              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19603              		.loc 3 107 10 is_stmt 0 view .LVU6776
 19604 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 19605 0227 488D3500 		lea	rsi, .LC45[rip]	#,
 19605      000000
 19606 022e BF010000 		mov	edi, 1	#,
 19606      00
 19607 0233 31C0     		xor	eax, eax	#
 19608 0235 E8000000 		call	__printf_chk@PLT	#
 19608      00
 19609              	.LVL1164:
 19610 023a 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19610      000000
 19611              	.LVL1165:
 19612              	.L1751:
 19613              		.loc 3 107 10 view .LVU6777
 19614              	.LBE1055:
 19615              	.LBE1054:
 19616              	.LBE1034:
 19617              	.LBE1033:
 19618              	.LBB1064:
 19619              	# sieve_extend.c:1295:     for (int arg=1; arg < argc; arg++) {
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19620              		.loc 1 1295 14 view .LVU6778
 19621 0241 41BC0500 		mov	r12d, 5	# ivtmp_106,
 19621      0000
 19622 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
GAS LISTING /tmp/ccgH0yRS.s 			page 524


 19622      00
 19623 024c EB56     		jmp	.L1755	#
 19624              	.LVL1166:
 19625 024e 6690     		.p2align 4,,7
 19626              		.p2align 3
 19627              	.L1752:
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19628              		.loc 1 1295 14 view .LVU6779
 19629              	.LBE1064:
 19630              	.LBB1065:
 19631              	.LBB1061:
 19632              	.LBB1056:
 19633              	.LBB1049:
1346:sieve_extend.c ****             struct sieve_state *sieve_instance_check;
1347:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1348:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1349:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19634              		.loc 1 1349 17 is_stmt 1 view .LVU6780
 19635              	# sieve_extend.c:1349:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
 19636              		.loc 1 1349 40 is_stmt 0 view .LVU6781
 19637 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 19638 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 19639 0256 E8000000 		call	sieve	#
 19639      00
 19640              	.LVL1167:
 19641              	# sieve_extend.c:1350:                 int valid = validatePrimeCount(sieve_instance_check,option_v
1350:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 19642              		.loc 1 1350 29 view .LVU6782
 19643 025b 8BB42498 		mov	esi, DWORD PTR 152[rsp]	#, option_verboselevel
 19643      000000
 19644              	# sieve_extend.c:1349:                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits
1349:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_instance_check,option_verboselevel);
 19645              		.loc 1 1349 40 view .LVU6783
 19646 0262 4989C7   		mov	r15, rax	# sieve_instance_check, tmp530
 19647              	.LVL1168:
 19648              		.loc 1 1350 17 is_stmt 1 view .LVU6784
 19649              	# sieve_extend.c:1350:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 19650              		.loc 1 1350 29 is_stmt 0 view .LVU6785
 19651 0265 4889C7   		mov	rdi, rax	#, sieve_instance_check
 19652 0268 E8000000 		call	validatePrimeCount	#
 19652      00
 19653              	.LVL1169:
 19654              	.LBB1040:
 19655              	.LBB1041:
 19656              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 19657              		.loc 1 117 5 view .LVU6786
 19658 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_instance_check_128->bitarray
 19659              	.LBE1041:
 19660              	.LBE1040:
 19661              	# sieve_extend.c:1350:                 int valid = validatePrimeCount(sieve_instance_check,option_v
 19662              		.loc 1 1350 29 view .LVU6787
 19663 0270 89C3     		mov	ebx, eax	# valid, tmp531
 19664              	.LVL1170:
1351:sieve_extend.c ****                 delete_sieve(sieve_instance_check);
 19665              		.loc 1 1351 17 is_stmt 1 view .LVU6788
 19666              	.LBB1043:
GAS LISTING /tmp/ccgH0yRS.s 			page 525


 19667              	.LBI1040:
 116:sieve_extend.c ****     free(sieve->bitarray);
 19668              		.loc 1 116 13 view .LVU6789
 19669              	.LBB1042:
 117:sieve_extend.c ****     free(sieve);
 19670              		.loc 1 117 5 view .LVU6790
 19671 0272 E8000000 		call	free@PLT	#
 19671      00
 19672              	.LVL1171:
 118:sieve_extend.c **** }
 19673              		.loc 1 118 5 view .LVU6791
 19674 0277 4C89FF   		mov	rdi, r15	#, sieve_instance_check
 19675 027a E8000000 		call	free@PLT	#
 19675      00
 19676              	.LVL1172:
 118:sieve_extend.c **** }
 19677              		.loc 1 118 5 is_stmt 0 view .LVU6792
 19678              	.LBE1042:
 19679              	.LBE1043:
1352:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
 19680              		.loc 1 1352 17 is_stmt 1 view .LVU6793
 19681              	# sieve_extend.c:1352:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19682              		.loc 1 1352 20 is_stmt 0 view .LVU6794
 19683 027f 85DB     		test	ebx, ebx	# valid
 19684 0281 0F84C902 		je	.L1793	#,
 19684      0000
 19685              		.loc 1 1352 44 is_stmt 1 discriminator 2 view .LVU6795
 19686              	# sieve_extend.c:1352:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19687              		.loc 1 1352 68 is_stmt 0 discriminator 2 view .LVU6796
 19688 0287 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19688      000000
 19689              	# sieve_extend.c:1352:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 19690              		.loc 1 1352 47 discriminator 2 view .LVU6797
 19691 028e 83F802   		cmp	eax, 2	# prephitmp_326,
 19692 0291 0F8FE900 		jg	.L1869	#,
 19692      0000
 19693              	.LBE1049:
1347:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19694              		.loc 1 1347 75 is_stmt 1 discriminator 2 view .LVU6798
 19695              	# sieve_extend.c:1347:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1347:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19696              		.loc 1 1347 90 is_stmt 0 discriminator 2 view .LVU6799
 19697 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 19698              	.LVL1173:
1347:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19699              		.loc 1 1347 49 is_stmt 1 discriminator 2 view .LVU6800
 19700              	# sieve_extend.c:1347:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1347:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19701              		.loc 1 1347 13 is_stmt 0 discriminator 2 view .LVU6801
 19702 029a 4183EC01 		sub	r12d, 1	# ivtmp_106,
 19703 029e 0F840301 		je	.L1870	#,
 19703      0000
 19704              	.LVL1174:
 19705              	.L1755:
 19706              	.LBB1050:
1348:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19707              		.loc 1 1348 17 is_stmt 1 view .LVU6802
GAS LISTING /tmp/ccgH0yRS.s 			page 526


 19708              	# sieve_extend.c:1348:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1348:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19709              		.loc 1 1348 20 is_stmt 0 view .LVU6803
 19710 02a4 83F802   		cmp	eax, 2	# prephitmp_326,
 19711 02a7 7EA7     		jle	.L1752	#,
1348:sieve_extend.c ****                 sieve_instance_check = sieve(sieveSize_check, blocksize_bits);
 19712              		.loc 1 1348 47 is_stmt 1 view .LVU6804
 19713              	.LVL1175:
 19714              	.LBB1044:
 19715              	.LBI1037:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19716              		.loc 3 105 1 view .LVU6805
 19717              	.LBB1039:
 19718              		.loc 3 107 3 view .LVU6806
 19719              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19720              		.loc 3 107 10 is_stmt 0 view .LVU6807
 19721 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 19722 02ac 4C89F6   		mov	rsi, r14	#, tmp478
 19723 02af BF010000 		mov	edi, 1	#,
 19723      00
 19724 02b4 31C0     		xor	eax, eax	#
 19725 02b6 E8000000 		call	__printf_chk@PLT	#
 19725      00
 19726              	.LVL1176:
 19727 02bb EB93     		jmp	.L1752	#
 19728              	.LVL1177:
 19729 02bd 0F1F00   		.p2align 4,,7
 19730              		.p2align 3
 19731              	.L1741:
 19732              		.loc 3 107 10 view .LVU6808
 19733              	.LBE1039:
 19734              	.LBE1044:
 19735              	.LBE1050:
 19736              	.LBE1056:
 19737              	.LBE1061:
 19738              	.LBE1065:
 19739              	.LBB1066:
1312:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19740              		.loc 1 1312 14 is_stmt 1 view .LVU6809
 19741              	# sieve_extend.c:1312:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1312:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19742              		.loc 1 1312 18 is_stmt 0 view .LVU6810
 19743 02c0 4C89C9   		mov	rcx, r9	# tmp290, tmp290
 19744 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 19745 02c6 488D3D00 		lea	rdi, .LC39[rip]	# tmp321,
 19745      000000
 19746 02cd F3A6     		repz cmpsb
 19747 02cf 410F97C1 		seta	r9b	#, tmp323
 19748 02d3 4180D900 		sbb	r9b, 0	# _36
 19749              	# sieve_extend.c:1312:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1312:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19750              		.loc 1 1312 17 view .LVU6811
 19751 02d7 4584C9   		test	r9b, r9b	# _36
 19752 02da 756C     		jne	.L1745	#,
1312:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19753              		.loc 1 1312 52 is_stmt 1 discriminator 1 view .LVU6812
 19754              	# sieve_extend.c:1312:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
GAS LISTING /tmp/ccgH0yRS.s 			page 527


1312:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 19755              		.loc 1 1312 72 is_stmt 0 discriminator 1 view .LVU6813
 19756 02dc 48C78424 		mov	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 19756      A8000000 
 19756      00000000 
1313:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19757              		.loc 1 1313 13 is_stmt 1 discriminator 1 view .LVU6814
 19758              	# sieve_extend.c:1313:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1313:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19759              		.loc 1 1313 16 is_stmt 0 discriminator 1 view .LVU6815
 19760 02e8 83C301   		add	ebx, 1	# arg,
 19761              	.LVL1178:
1313:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19762              		.loc 1 1313 16 discriminator 1 view .LVU6816
 19763 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 19764 02ed 0F8EA00C 		jle	.L1871	#,
 19764      0000
1314:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19765              		.loc 1 1314 13 is_stmt 1 view .LVU6817
 19766              	# sieve_extend.c:1314:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1314:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19767              		.loc 1 1314 28 is_stmt 0 view .LVU6818
 19768 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 19768      08
 19769              	# sieve_extend.c:1314:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1314:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19770              		.loc 1 1314 17 view .LVU6819
 19771 02f8 488D9424 		lea	rdx, 168[rsp]	# tmp327,
 19771      A8000000 
 19772 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 19773 0303 31C0     		xor	eax, eax	#
 19774 0305 488D3500 		lea	rsi, .LC41[rip]	#,
 19774      000000
 19775 030c E8000000 		call	__isoc99_sscanf@PLT	#
 19775      00
 19776              	.LVL1179:
 19777              	# sieve_extend.c:1314:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1314:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19778              		.loc 1 1314 16 view .LVU6820
 19779 0311 83F801   		cmp	eax, 1	# tmp528,
 19780 0314 0F853F0C 		jne	.L1747	#,
 19780      0000
 19781              	# sieve_extend.c:1314:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1314:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19782              		.loc 1 1314 106 discriminator 1 view .LVU6821
 19783 031a 488B9424 		mov	rdx, QWORD PTR 168[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 19783      A8000000 
 19784              	# sieve_extend.c:1314:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1314:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 19785              		.loc 1 1314 82 discriminator 1 view .LVU6822
 19786 0322 483B9424 		cmp	rdx, QWORD PTR 160[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 19786      A0000000 
 19787 032a 0F87290C 		ja	.L1747	#,
 19787      0000
1317:sieve_extend.c ****         }
 19788              		.loc 1 1317 13 is_stmt 1 view .LVU6823
 19789              	.LVL1180:
GAS LISTING /tmp/ccgH0yRS.s 			page 528


 19790              	.LBB1011:
 19791              	.LBI1011:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19792              		.loc 3 105 1 view .LVU6824
 19793              	.LBB1012:
 19794              		.loc 3 107 3 view .LVU6825
 19795              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19796              		.loc 3 107 10 is_stmt 0 view .LVU6826
 19797 0330 488D3500 		lea	rsi, .LC43[rip]	#,
 19797      000000
 19798 0337 BF010000 		mov	edi, 1	#,
 19798      00
 19799 033c 31C0     		xor	eax, eax	#
 19800 033e E8000000 		call	__printf_chk@PLT	#
 19800      00
 19801              	.LVL1181:
 19802 0343 E98DFDFF 		jmp	.L1740	#
 19802      FF
 19803              	.LVL1182:
 19804              		.p2align 4,,7
 19805              		.p2align 3
 19806              	.L1745:
 19807              		.loc 3 107 10 view .LVU6827
 19808              	.LBE1012:
 19809              	.LBE1011:
1319:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19810              		.loc 1 1319 14 is_stmt 1 view .LVU6828
 19811              	# sieve_extend.c:1319:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1319:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19812              		.loc 1 1319 18 is_stmt 0 view .LVU6829
 19813 0348 31C0     		xor	eax, eax	#
 19814 034a 488D9424 		lea	rdx, 160[rsp]	# tmp329,
 19814      A0000000 
 19815 0352 488D3500 		lea	rsi, .LC41[rip]	#,
 19815      000000
 19816 0359 4C89C7   		mov	rdi, r8	#, _4
 19817 035c E8000000 		call	__isoc99_sscanf@PLT	#
 19817      00
 19818              	.LVL1183:
 19819              	# sieve_extend.c:1319:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1319:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 19820              		.loc 1 1319 17 view .LVU6830
 19821 0361 83F801   		cmp	eax, 1	# tmp529,
 19822 0364 0F846BFD 		je	.L1740	#,
 19822      FFFF
1320:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 19823              		.loc 1 1320 13 is_stmt 1 view .LVU6831
 19824              	.LVL1184:
 19825              	.LBB1013:
 19826              	.LBI1013:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19827              		.loc 3 98 1 view .LVU6832
 19828              	.LBB1014:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19829              		.loc 3 100 3 view .LVU6833
 19830              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccgH0yRS.s 			page 529


 19831              		.loc 3 100 10 is_stmt 0 view .LVU6834
 19832 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 19833 036d 488D1500 		lea	rdx, .LC44[rip]	#,
 19833      000000
 19834 0374 E9250200 		jmp	.L1862	#
 19834      00
 19835              	.LVL1185:
 19836 0379 0F1F8000 		.p2align 4,,7
 19836      000000
 19837              		.p2align 3
 19838              	.L1869:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19839              		.loc 3 100 10 view .LVU6835
 19840              	.LBE1014:
 19841              	.LBE1013:
 19842              	.LBE1066:
 19843              	.LBB1067:
 19844              	.LBB1062:
 19845              	.LBB1057:
 19846              	.LBB1051:
 19847              		.loc 1 1352 74 is_stmt 1 view .LVU6836
 19848              	.LBB1045:
 19849              	.LBI1045:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19850              		.loc 3 105 1 view .LVU6837
 19851              	.LBB1046:
 19852              		.loc 3 107 3 view .LVU6838
 19853              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19854              		.loc 3 107 10 is_stmt 0 view .LVU6839
 19855 0380 31C0     		xor	eax, eax	#
 19856 0382 488D3500 		lea	rsi, .LC47[rip]	#,
 19856      000000
 19857 0389 BF010000 		mov	edi, 1	#,
 19857      00
 19858              	.LBE1046:
 19859              	.LBE1045:
 19860              	.LBE1051:
 19861              	# sieve_extend.c:1347:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1347:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19862              		.loc 1 1347 90 view .LVU6840
 19863 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 19864              	.LVL1186:
 19865              	.LBB1052:
 19866              	.LBB1048:
 19867              	.LBB1047:
 19868              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19869              		.loc 3 107 10 view .LVU6841
 19870 0391 E8000000 		call	__printf_chk@PLT	#
 19870      00
 19871              	.LVL1187:
 19872 0396 8B842498 		mov	eax, DWORD PTR 152[rsp]	# prephitmp_326, option_verboselevel
 19872      000000
 19873              	.LVL1188:
 19874              		.loc 3 107 10 view .LVU6842
 19875              	.LBE1047:
 19876              	.LBE1048:
 19877              	.LBE1052:
GAS LISTING /tmp/ccgH0yRS.s 			page 530


1347:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19878              		.loc 1 1347 75 is_stmt 1 view .LVU6843
1347:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19879              		.loc 1 1347 49 view .LVU6844
 19880              	# sieve_extend.c:1347:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1347:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19881              		.loc 1 1347 13 is_stmt 0 view .LVU6845
 19882 039d 4183EC01 		sub	r12d, 1	# ivtmp_106,
 19883 03a1 0F85FDFE 		jne	.L1755	#,
 19883      FFFF
 19884              	.L1870:
1347:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 19885              		.loc 1 1347 13 view .LVU6846
 19886              	.LBE1057:
1353:sieve_extend.c ****             }
1354:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 19887              		.loc 1 1354 13 is_stmt 1 view .LVU6847
 19888              	# sieve_extend.c:1354:             if (option_verboselevel >= 2) printf("\n");
 19889              		.loc 1 1354 16 is_stmt 0 view .LVU6848
 19890 03a7 83F801   		cmp	eax, 1	# prephitmp_326,
 19891 03aa 7E0A     		jle	.L1756	#,
 19892              		.loc 1 1354 43 is_stmt 1 view .LVU6849
 19893              	.LVL1189:
 19894              	.LBB1058:
 19895              	.LBI1058:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19896              		.loc 3 105 1 view .LVU6850
 19897              	.LBB1059:
 19898              		.loc 3 107 3 view .LVU6851
 19899              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19900              		.loc 3 107 10 is_stmt 0 view .LVU6852
 19901 03ac BF0A0000 		mov	edi, 10	#,
 19901      00
 19902 03b1 E8000000 		call	putchar@PLT	#
 19902      00
 19903              	.LVL1190:
 19904              	.L1756:
 19905              		.loc 3 107 10 view .LVU6853
 19906              	.LBE1059:
 19907              	.LBE1058:
 19908              	.LBE1062:
1344:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19909              		.loc 1 1344 77 is_stmt 1 discriminator 2 view .LVU6854
 19910              	# sieve_extend.c:1344:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1344:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19911              		.loc 1 1344 93 is_stmt 0 discriminator 2 view .LVU6855
 19912 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp335,
 19912      00
 19913              	.LVL1191:
1344:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19914              		.loc 1 1344 93 discriminator 2 view .LVU6856
 19915 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 19916              	.LVL1192:
1344:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 19917              		.loc 1 1344 47 is_stmt 1 discriminator 2 view .LVU6857
 19918              	# sieve_extend.c:1344:         for (counter_t sieveSize_check = 100; sieveSize_check <= 100000000; 
1344:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
GAS LISTING /tmp/ccgH0yRS.s 			page 531


 19919              		.loc 1 1344 9 is_stmt 0 discriminator 2 view .LVU6858
 19920 03be 836C2420 		sub	DWORD PTR 32[rsp], 1	# %sfp,
 19920      01
 19921 03c3 0F854FFE 		jne	.L1757	#,
 19921      FFFF
 19922              	.LBE1067:
1355:sieve_extend.c ****         }
1356:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19923              		.loc 1 1356 9 is_stmt 1 view .LVU6859
 19924              	# sieve_extend.c:1356:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 19925              		.loc 1 1356 12 is_stmt 0 view .LVU6860
 19926 03c9 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 19926      00000000 
 19927 03d1 0F8F4E09 		jg	.L1872	#,
 19927      0000
1357:sieve_extend.c ****     }
1358:sieve_extend.c ****     
1359:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19928              		.loc 1 1359 5 is_stmt 1 view .LVU6861
 19929              	.LVL1193:
1360:sieve_extend.c ****     if (option_tunelevel) {
 19930              		.loc 1 1360 5 view .LVU6862
 19931              	# sieve_extend.c:1360:     if (option_tunelevel) {
 19932              		.loc 1 1360 9 is_stmt 0 view .LVU6863
 19933 03d7 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_380, option_tunelevel
 19933      9C000000 
 19934              	# sieve_extend.c:1359:     counter_t best_blocksize_bits = default_blocksize;
1359:sieve_extend.c ****     if (option_tunelevel) {
 19935              		.loc 1 1359 15 view .LVU6864
 19936 03df 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 19936      0300
 19937              	# sieve_extend.c:1360:     if (option_tunelevel) {
 19938              		.loc 1 1360 8 view .LVU6865
 19939 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.40_380
 19940 03e8 0F858C02 		jne	.L1873	#,
 19940      0000
 19941              	.LVL1194:
 19942              	.L1786:
 19943              	.LBB1068:
1361:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1362:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1363:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1364:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1365:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1366:sieve_extend.c ****     }
1367:sieve_extend.c **** 
1368:sieve_extend.c ****     double max_time = default_sieve_duration;
1369:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1370:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
1371:sieve_extend.c ****         counter_t passes = 0;
 19944              		.loc 1 1371 9 is_stmt 1 view .LVU6866
1372:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19945              		.loc 1 1372 9 view .LVU6867
1373:sieve_extend.c ****         double elapsed_time = 0;
 19946              		.loc 1 1373 9 view .LVU6868
1374:sieve_extend.c ****         struct sieve_state *sieve_instance;
 19947              		.loc 1 1374 9 view .LVU6869
GAS LISTING /tmp/ccgH0yRS.s 			page 532


1375:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 19948              		.loc 1 1375 9 view .LVU6870
 19949 03ee 488DB424 		lea	rsi, 176[rsp]	# tmp438,
 19949      B0000000 
 19950 03f6 BF010000 		mov	edi, 1	#,
 19950      00
 19951 03fb E8000000 		call	clock_gettime@PLT	#
 19951      00
 19952              	.LVL1195:
1376:sieve_extend.c ****         while (elapsed_time <= max_time) {
 19953              		.loc 1 1376 9 view .LVU6871
 19954              		.loc 1 1376 15 view .LVU6872
 19955              	# sieve_extend.c:1371:         counter_t passes = 0;
1371:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 19956              		.loc 1 1371 19 is_stmt 0 view .LVU6873
 19957 0400 4531FF   		xor	r15d, r15d	# passes
 19958 0403 4C8DA424 		lea	r12, 192[rsp]	# tmp465,
 19958      C0000000 
 19959              	.LVL1196:
 19960              	.L1787:
1377:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19961              		.loc 1 1377 13 is_stmt 1 view .LVU6874
 19962              	# sieve_extend.c:1377:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
 19963              		.loc 1 1377 30 is_stmt 0 view .LVU6875
 19964 040b 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 19964      A0000000 
 19965 0413 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 19966              	# sieve_extend.c:1379:             passes++;
1378:sieve_extend.c ****             delete_sieve(sieve_instance);
1379:sieve_extend.c ****             passes++;
 19967              		.loc 1 1379 19 view .LVU6876
 19968 0416 4983C701 		add	r15, 1	# passes,
 19969              	# sieve_extend.c:1377:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1377:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19970              		.loc 1 1377 30 view .LVU6877
 19971 041a E8000000 		call	sieve	#
 19971      00
 19972              	.LVL1197:
 19973              	.LBB1069:
 19974              	.LBB1070:
 19975              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 19976              		.loc 1 117 5 view .LVU6878
 19977 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_146->bitarray
 19978              	.LBE1070:
 19979              	.LBE1069:
 19980              	# sieve_extend.c:1377:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1377:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 19981              		.loc 1 1377 30 view .LVU6879
 19982 0422 4989C5   		mov	r13, rax	# sieve_instance, tmp533
 19983              	.LVL1198:
1378:sieve_extend.c ****             delete_sieve(sieve_instance);
 19984              		.loc 1 1378 13 is_stmt 1 view .LVU6880
 19985              	.LBB1074:
 19986              	.LBI1069:
 116:sieve_extend.c ****     free(sieve->bitarray);
 19987              		.loc 1 116 13 view .LVU6881
GAS LISTING /tmp/ccgH0yRS.s 			page 533


 19988              	.LBB1071:
 117:sieve_extend.c ****     free(sieve);
 19989              		.loc 1 117 5 view .LVU6882
 19990 0425 E8000000 		call	free@PLT	#
 19990      00
 19991              	.LVL1199:
 118:sieve_extend.c **** }
 19992              		.loc 1 118 5 view .LVU6883
 19993 042a 4C89EF   		mov	rdi, r13	#, sieve_instance
 19994 042d E8000000 		call	free@PLT	#
 19994      00
 19995              	.LVL1200:
 118:sieve_extend.c **** }
 19996              		.loc 1 118 5 is_stmt 0 view .LVU6884
 19997              	.LBE1071:
 19998              	.LBE1074:
 19999              		.loc 1 1379 13 is_stmt 1 view .LVU6885
1380:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 20000              		.loc 1 1380 13 view .LVU6886
 20001 0432 4C89E6   		mov	rsi, r12	#, tmp465
 20002 0435 BF010000 		mov	edi, 1	#,
 20002      00
 20003 043a E8000000 		call	clock_gettime@PLT	#
 20003      00
 20004              	.LVL1201:
1381:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 20005              		.loc 1 1381 13 view .LVU6887
 20006              	# sieve_extend.c:1381:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20007              		.loc 1 1381 62 is_stmt 0 view .LVU6888
 20008 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 200[rsp]	# tmp441, end_time.tv_nsec
 20008      AC24C800 
 20008      0000
 20009              	# sieve_extend.c:1381:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20010              		.loc 1 1381 68 view .LVU6889
 20011 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 176[rsp]	# tmp442, start_time.tv_sec
 20011      9424B000 
 20011      0000
 20012              	# sieve_extend.c:1381:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20013              		.loc 1 1381 108 view .LVU6890
 20014 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 184[rsp]	# tmp444, start_time.tv_nsec
 20014      8424B800 
 20014      0000
 20015              	# sieve_extend.c:1381:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20016              		.loc 1 1381 44 view .LVU6891
 20017 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 192[rsp]	# tmp445, end_time.tv_sec
 20017      8C24C000 
 20017      0000
 20018              	# sieve_extend.c:1376:         while (elapsed_time <= max_time) {
1376:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 20019              		.loc 1 1376 15 view .LVU6892
 20020 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC59[rip]	# tmp628,
 20020      00000000 
 20021 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _301, tmp442,
 20021      2D000000 
 20021      00
 20022 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _302, tmp445,
 20022      05000000 
GAS LISTING /tmp/ccgH0yRS.s 			page 534


 20022      00
 20023              	# sieve_extend.c:1381:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20024              		.loc 1 1381 26 view .LVU6893
 20025 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _301, _302
 20025      C0
 20026              	.LVL1202:
1376:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 20027              		.loc 1 1376 15 is_stmt 1 view .LVU6894
 20028 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp628, elapsed_time
 20029 048a 0F828500 		jb	.L1859	#,
 20029      0000
 20030              	.LVL1203:
1377:sieve_extend.c ****             delete_sieve(sieve_instance);
 20031              		.loc 1 1377 13 view .LVU6895
 20032              	# sieve_extend.c:1377:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1377:sieve_extend.c ****             delete_sieve(sieve_instance);
 20033              		.loc 1 1377 30 is_stmt 0 view .LVU6896
 20034 0490 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	#, option_maxFactor
 20034      A0000000 
 20035 0498 4C89F6   		mov	rsi, r14	#, best_result$blocksize_bits
 20036              	# sieve_extend.c:1379:             passes++;
1379:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 20037              		.loc 1 1379 19 view .LVU6897
 20038 049b 4983C701 		add	r15, 1	# passes,
 20039              	# sieve_extend.c:1377:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1377:sieve_extend.c ****             delete_sieve(sieve_instance);
 20040              		.loc 1 1377 30 view .LVU6898
 20041 049f E8000000 		call	sieve	#
 20041      00
 20042              	.LVL1204:
 20043              	.LBB1075:
 20044              	.LBB1072:
 20045              	# sieve_extend.c:117:     free(sieve->bitarray);
 117:sieve_extend.c ****     free(sieve);
 20046              		.loc 1 117 5 view .LVU6899
 20047 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_instance_146->bitarray
 20048              	.LBE1072:
 20049              	.LBE1075:
 20050              	# sieve_extend.c:1377:             sieve_instance = sieve(option_maxFactor, blocksize_bits);//block
1377:sieve_extend.c ****             delete_sieve(sieve_instance);
 20051              		.loc 1 1377 30 view .LVU6900
 20052 04a7 4889C5   		mov	rbp, rax	# sieve_instance, tmp535
1378:sieve_extend.c ****             passes++;
 20053              		.loc 1 1378 13 is_stmt 1 view .LVU6901
 20054              	.LVL1205:
 20055              	.LBB1076:
 116:sieve_extend.c ****     free(sieve->bitarray);
 20056              		.loc 1 116 13 view .LVU6902
 20057              	.LBB1073:
 117:sieve_extend.c ****     free(sieve);
 20058              		.loc 1 117 5 view .LVU6903
 20059 04aa E8000000 		call	free@PLT	#
 20059      00
 20060              	.LVL1206:
 118:sieve_extend.c **** }
 20061              		.loc 1 118 5 view .LVU6904
 20062 04af 4889EF   		mov	rdi, rbp	#, sieve_instance
GAS LISTING /tmp/ccgH0yRS.s 			page 535


 20063 04b2 E8000000 		call	free@PLT	#
 20063      00
 20064              	.LVL1207:
 118:sieve_extend.c **** }
 20065              		.loc 1 118 5 is_stmt 0 view .LVU6905
 20066              	.LBE1073:
 20067              	.LBE1076:
1379:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 20068              		.loc 1 1379 13 is_stmt 1 view .LVU6906
1380:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 20069              		.loc 1 1380 13 view .LVU6907
 20070 04b7 4C89E6   		mov	rsi, r12	#, tmp465
 20071 04ba BF010000 		mov	edi, 1	#,
 20071      00
 20072 04bf E8000000 		call	clock_gettime@PLT	#
 20072      00
 20073              	.LVL1208:
 20074              		.loc 1 1381 13 view .LVU6908
 20075              	# sieve_extend.c:1381:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20076              		.loc 1 1381 62 is_stmt 0 view .LVU6909
 20077 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 200[rsp]	# tmp518, end_time.tv_nsec
 20077      9C24C800 
 20077      0000
 20078              	# sieve_extend.c:1381:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20079              		.loc 1 1381 68 view .LVU6910
 20080 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 176[rsp]	# tmp519, start_time.tv_sec
 20080      A424B000 
 20080      0000
 20081              	# sieve_extend.c:1381:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20082              		.loc 1 1381 108 view .LVU6911
 20083 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 184[rsp]	# tmp521, start_time.tv_nsec
 20083      AC24B800 
 20083      0000
 20084              	# sieve_extend.c:1381:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20085              		.loc 1 1381 44 view .LVU6912
 20086 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 192[rsp]	# tmp522, end_time.tv_sec
 20086      B424C000 
 20086      0000
 20087              	# sieve_extend.c:1376:         while (elapsed_time <= max_time) {
1376:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 20088              		.loc 1 1376 15 view .LVU6913
 20089 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC59[rip]	# tmp635,
 20089      00000000 
 20090 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _301, tmp519,
 20090      1D000000 
 20090      00
 20091 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _302, tmp522,
 20091      2D000000 
 20091      00
 20092              	# sieve_extend.c:1381:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 20093              		.loc 1 1381 26 view .LVU6914
 20094 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _301, _302
 20094      C5
 20095              	.LVL1209:
1376:sieve_extend.c ****             sieve_instance = sieve(option_maxFactor, blocksize_bits);//blocksize_bits);
 20096              		.loc 1 1376 15 is_stmt 1 view .LVU6915
 20097 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp635, elapsed_time
GAS LISTING /tmp/ccgH0yRS.s 			page 536


 20098 050f 0F83F6FE 		jnb	.L1787	#,
 20098      FFFF
 20099              	.L1859:
1382:sieve_extend.c ****         }
1383:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 20100              		.loc 1 1383 9 view .LVU6916
 20101              	.LVL1210:
 20102              	.LBB1077:
 20103              	.LBI1077:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20104              		.loc 3 105 1 view .LVU6917
 20105              	.LBB1078:
 20106              		.loc 3 107 3 view .LVU6918
 20107              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20108              		.loc 3 107 10 is_stmt 0 view .LVU6919
 20109 0515 4C89FA   		mov	rdx, r15	#, passes
 20110 0518 488D3500 		lea	rsi, .LC60[rip]	#,
 20110      000000
 20111 051f BF010000 		mov	edi, 1	#,
 20111      00
 20112 0524 B8010000 		mov	eax, 1	#,
 20112      00
 20113 0529 C5FB1144 		vmovsd	QWORD PTR 32[rsp], xmm0	# %sfp, elapsed_time
 20113      2420
 20114 052f E8000000 		call	__printf_chk@PLT	#
 20114      00
 20115              	.LVL1211:
 20116              		.loc 3 107 10 view .LVU6920
 20117              	.LBE1078:
 20118              	.LBE1077:
1384:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 20119              		.loc 1 1384 9 is_stmt 1 view .LVU6921
 20120              	# sieve_extend.c:1384:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 20121              		.loc 1 1384 12 is_stmt 0 view .LVU6922
 20122 0534 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 20122      00000000 
 20123 053c 0F8FCA00 		jg	.L1874	#,
 20123      0000
 20124              	.LVL1212:
 20125              	.L1785:
 20126              		.loc 1 1384 12 view .LVU6923
 20127              	.LBE1068:
1385:sieve_extend.c ****     }
1386:sieve_extend.c ****     
1387:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 20128              		.loc 1 1387 5 is_stmt 1 view .LVU6924
 20129              	# sieve_extend.c:1387:     if (option_showMaxFactor > 0) {
 20130              		.loc 1 1387 8 is_stmt 0 view .LVU6925
 20131 0542 4883BC24 		cmp	QWORD PTR 168[rsp], 0	# option_showMaxFactor,
 20131      A8000000 
 20131      00
 20132 054b 756D     		jne	.L1875	#,
 20133 054d 0F1F00   		.p2align 4
 20134              		.p2align 3
 20135              	.L1793:
 20136              	.LBB1085:
 20137              	.LBB1063:
GAS LISTING /tmp/ccgH0yRS.s 			page 537


 20138              	.LBB1060:
 20139              	.LBB1053:
1352:sieve_extend.c ****             }
 20140              		.loc 1 1352 29 is_stmt 1 discriminator 1 view .LVU6926
 20141              	.LBE1053:
 20142              	.LBE1060:
 20143              	.LBE1063:
 20144              	.LBE1085:
 20145              	# sieve_extend.c:1394: }
1388:sieve_extend.c ****         printf("Show result set:\n");
1389:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
1390:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
1391:sieve_extend.c ****         delete_sieve(sieve_instance);
1392:sieve_extend.c ****         printf("\n");
1393:sieve_extend.c ****     }
1394:sieve_extend.c **** }
 20146              		.loc 1 1394 1 is_stmt 0 discriminator 1 view .LVU6927
 20147 0550 488B8424 		mov	rax, QWORD PTR 216[rsp]	# tmp571, D.7536
 20147      D8000000 
 20148 0558 64483304 		xor	rax, QWORD PTR fs:40	# tmp571, MEM[(<address-space-1> long unsigned int *)40B]
 20148      25280000 
 20148      00
 20149 0561 0F85270A 		jne	.L1876	#,
 20149      0000
 20150              	# sieve_extend.c:1394: }
 20151              		.loc 1 1394 1 view .LVU6928
 20152 0567 488DA424 		lea	rsp, 232[rsp]	#,
 20152      E8000000 
 20153              		.cfi_remember_state
 20154              		.cfi_def_cfa_offset 56
 20155 056f 31C0     		xor	eax, eax	#
 20156 0571 5B       		pop	rbx	#
 20157              		.cfi_def_cfa_offset 48
 20158 0572 5D       		pop	rbp	#
 20159              		.cfi_def_cfa_offset 40
 20160 0573 415C     		pop	r12	#
 20161              		.cfi_def_cfa_offset 32
 20162 0575 415D     		pop	r13	#
 20163              		.cfi_def_cfa_offset 24
 20164 0577 415E     		pop	r14	#
 20165              		.cfi_def_cfa_offset 16
 20166 0579 415F     		pop	r15	#
 20167              		.cfi_def_cfa_offset 8
 20168 057b C3       		ret	
 20169              	.L1749:
 20170              		.cfi_restore_state
1340:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 20171              		.loc 1 1340 39 is_stmt 1 view .LVU6929
 20172              	.LVL1213:
 20173              	.LBB1086:
 20174              	.LBI1086:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20175              		.loc 3 105 1 view .LVU6930
 20176              	.LBB1087:
 20177              		.loc 3 107 3 view .LVU6931
 20178              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20179              		.loc 3 107 10 is_stmt 0 view .LVU6932
GAS LISTING /tmp/ccgH0yRS.s 			page 538


 20180 057c 488D3500 		lea	rsi, .LC27[rip]	#,
 20180      000000
 20181 0583 BF010000 		mov	edi, 1	#,
 20181      00
 20182 0588 31C0     		xor	eax, eax	#
 20183 058a E8000000 		call	__printf_chk@PLT	#
 20183      00
 20184              	.LVL1214:
 20185 058f E95BFCFF 		jmp	.L1734	#
 20185      FF
 20186              	.LVL1215:
 20187              	.L1738:
 20188              		.loc 3 107 10 view .LVU6933
 20189              	.LBE1087:
 20190              	.LBE1086:
 20191              	.LBB1088:
1300:sieve_extend.c ****             }
 20192              		.loc 1 1300 17 is_stmt 1 view .LVU6934
 20193              	.LBB1015:
 20194              	.LBI1015:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20195              		.loc 3 98 1 view .LVU6935
 20196              	.LBB1016:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20197              		.loc 3 100 3 view .LVU6936
 20198              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20199              		.loc 3 100 10 is_stmt 0 view .LVU6937
 20200 0594 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 20201 0597 488D1500 		lea	rdx, .LC32[rip]	#,
 20201      000000
 20202              	.LVL1216:
 20203              	.L1862:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20204              		.loc 3 100 10 view .LVU6938
 20205              	.LBE1016:
 20206              	.LBE1015:
 20207              	.LBB1017:
 20208              	.LBB1018:
 20209 059e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 20209      000000
 20210 05a5 BE010000 		mov	esi, 1	#,
 20210      00
 20211 05aa 31C0     		xor	eax, eax	#
 20212 05ac E8000000 		call	__fprintf_chk@PLT	#
 20212      00
 20213              	.LVL1217:
 20214              	.L1863:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 20215              		.loc 3 100 10 view .LVU6939
 20216              	.LBE1018:
 20217              	.LBE1017:
1308:sieve_extend.c ****             }
 20218              		.loc 1 1308 80 is_stmt 1 view .LVU6940
 20219 05b1 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 20220 05b5 E8000000 		call	usage	#
 20220      00
GAS LISTING /tmp/ccgH0yRS.s 			page 539


 20221              	.LVL1218:
 20222              	.L1875:
1308:sieve_extend.c ****             }
 20223              		.loc 1 1308 80 is_stmt 0 view .LVU6941
 20224              	.LBE1088:
 20225              	.LBB1089:
1388:sieve_extend.c ****         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_maxFactor);
 20226              		.loc 1 1388 9 is_stmt 1 view .LVU6942
 20227              	.LBB1090:
 20228              	.LBI1090:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20229              		.loc 3 105 1 view .LVU6943
 20230              	.LBB1091:
 20231              		.loc 3 107 3 view .LVU6944
 20232              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20233              		.loc 3 107 10 is_stmt 0 view .LVU6945
 20234 05ba 488D3D00 		lea	rdi, .LC62[rip]	#,
 20234      000000
 20235 05c1 E8000000 		call	puts@PLT	#
 20235      00
 20236              	.LVL1219:
 20237              		.loc 3 107 10 view .LVU6946
 20238              	.LBE1091:
 20239              	.LBE1090:
1389:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 20240              		.loc 1 1389 9 is_stmt 1 view .LVU6947
 20241              	# sieve_extend.c:1389:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1389:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 20242              		.loc 1 1389 46 is_stmt 0 view .LVU6948
 20243 05c6 488BBC24 		mov	rdi, QWORD PTR 160[rsp]	# option_maxFactor.51_93, option_maxFactor
 20243      A0000000 
 20244 05ce 4889FE   		mov	rsi, rdi	#, option_maxFactor.51_93
 20245 05d1 E8000000 		call	sieve	#
 20245      00
 20246              	.LVL1220:
 20247              	# sieve_extend.c:1390:         show_primes(sieve_instance, option_showMaxFactor);
1390:sieve_extend.c ****         delete_sieve(sieve_instance);
 20248              		.loc 1 1390 9 view .LVU6949
 20249 05d6 488B9424 		mov	rdx, QWORD PTR 168[rsp]	#, option_showMaxFactor
 20249      A8000000 
 20250              	# sieve_extend.c:1389:         struct sieve_state* sieve_instance = sieve(option_maxFactor, option_
1389:sieve_extend.c ****         show_primes(sieve_instance, option_showMaxFactor);
 20251              		.loc 1 1389 46 view .LVU6950
 20252 05de 4989C6   		mov	r14, rax	# sieve_instance, tmp534
 20253              	.LVL1221:
1390:sieve_extend.c ****         delete_sieve(sieve_instance);
 20254              		.loc 1 1390 9 is_stmt 1 view .LVU6951
 20255 05e1 488D7008 		lea	rsi, 8[rax]	# tmp460,
 20256 05e5 4889C7   		mov	rdi, rax	#, sieve_instance
 20257 05e8 E8000000 		call	show_primes.isra.0	#
 20257      00
 20258              	.LVL1222:
1391:sieve_extend.c ****         printf("\n");
 20259              		.loc 1 1391 9 view .LVU6952
 20260              	.LBB1092:
 20261              	.LBI1092:
 116:sieve_extend.c ****     free(sieve->bitarray);
GAS LISTING /tmp/ccgH0yRS.s 			page 540


 20262              		.loc 1 116 13 view .LVU6953
 20263              	.LBB1093:
 117:sieve_extend.c ****     free(sieve);
 20264              		.loc 1 117 5 view .LVU6954
 20265 05ed 498B3E   		mov	rdi, QWORD PTR [r14]	#, sieve_instance_151->bitarray
 20266 05f0 E8000000 		call	free@PLT	#
 20266      00
 20267              	.LVL1223:
 118:sieve_extend.c **** }
 20268              		.loc 1 118 5 view .LVU6955
 20269 05f5 4C89F7   		mov	rdi, r14	#, sieve_instance
 20270 05f8 E8000000 		call	free@PLT	#
 20270      00
 20271              	.LVL1224:
 118:sieve_extend.c **** }
 20272              		.loc 1 118 5 is_stmt 0 view .LVU6956
 20273              	.LBE1093:
 20274              	.LBE1092:
1392:sieve_extend.c ****     }
 20275              		.loc 1 1392 9 is_stmt 1 view .LVU6957
 20276              	.LBB1094:
 20277              	.LBI1094:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20278              		.loc 3 105 1 view .LVU6958
 20279              	.LBB1095:
 20280              		.loc 3 107 3 view .LVU6959
 20281              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20282              		.loc 3 107 10 is_stmt 0 view .LVU6960
 20283 05fd BF0A0000 		mov	edi, 10	#,
 20283      00
 20284 0602 E8000000 		call	putchar@PLT	#
 20284      00
 20285              	.LVL1225:
 20286 0607 E944FFFF 		jmp	.L1793	#
 20286      FF
 20287              	.LVL1226:
 20288              	.L1874:
 20289              		.loc 3 107 10 view .LVU6961
 20290              	.LBE1095:
 20291              	.LBE1094:
 20292              	.LBE1089:
 20293              	.LBB1096:
1384:sieve_extend.c ****     }
 20294              		.loc 1 1384 39 is_stmt 1 discriminator 1 view .LVU6962
 20295              	.LBB1079:
 20296              	.LBI1079:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20297              		.loc 3 105 1 discriminator 1 view .LVU6963
 20298              	.LBB1080:
 20299              		.loc 3 107 3 discriminator 1 view .LVU6964
 20300              	.LBE1080:
 20301              	.LBE1079:
 20302              	# sieve_extend.c:1384:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1384:sieve_extend.c ****     }
 20303              		.loc 1 1384 39 is_stmt 0 discriminator 1 view .LVU6965
 20304 060c C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp448, passes
 20304      C7
GAS LISTING /tmp/ccgH0yRS.s 			page 541


 20305 0611 4D85FF   		test	r15, r15	# passes
 20306 0614 C5FB1074 		vmovsd	xmm6, QWORD PTR 32[rsp]	# elapsed_time, %sfp
 20306      2420
 20307 061a 7918     		jns	.L1790	#,
 20308 061c 4C89F8   		mov	rax, r15	# tmp450, passes
 20309 061f 4C89FA   		mov	rdx, r15	# tmp451, passes
 20310 0622 48D1E8   		shr	rax	# tmp450
 20311 0625 83E201   		and	edx, 1	# tmp451,
 20312 0628 4809D0   		or	rax, rdx	# tmp514, tmp451
 20313 062b C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rax	# tmp449, tmp514
 20313      F8
 20314 0630 C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp448, tmp449, tmp449
 20315              	.L1790:
1384:sieve_extend.c ****     }
 20316              		.loc 1 1384 39 discriminator 1 view .LVU6966
 20317 0634 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp452, tmp448, elapsed_time
 20318              	# sieve_extend.c:1384:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1384:sieve_extend.c ****     }
 20319              		.loc 1 1384 95 discriminator 1 view .LVU6967
 20320 0638 4B8D34BF 		lea	rsi, [r15+r15*4]	# tmp453,
 20321              	# sieve_extend.c:1384:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1384:sieve_extend.c ****     }
 20322              		.loc 1 1384 39 discriminator 1 view .LVU6968
 20323 063c 4885F6   		test	rsi, rsi	# tmp453
 20324 063f C4E1E32A 		vcvtsi2sd	xmm3, xmm3, rsi	# tmp454, tmp453
 20324      DE
 20325 0644 7915     		jns	.L1792	#,
 20326 0646 4989F0   		mov	r8, rsi	# tmp456, tmp453
 20327 0649 83E601   		and	esi, 1	# tmp457,
 20328 064c 49D1E8   		shr	r8	# tmp456
 20329 064f 4909F0   		or	r8, rsi	# tmp515, tmp457
 20330 0652 C4C1DB2A 		vcvtsi2sd	xmm4, xmm4, r8	# tmp455, tmp515
 20330      E0
 20331 0657 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp454, tmp455, tmp455
 20332              	.L1792:
 20333 065b C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp458, tmp454, elapsed_time
 20334              	.LBB1082:
 20335              	.LBB1081:
 20336              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20337              		.loc 3 107 10 discriminator 1 view .LVU6969
 20338 065f 488D3500 		lea	rsi, .LC61[rip]	#,
 20338      000000
 20339 0666 BF010000 		mov	edi, 1	#,
 20339      00
 20340 066b B8020000 		mov	eax, 2	#,
 20340      00
 20341 0670 E8000000 		call	__printf_chk@PLT	#
 20341      00
 20342              	.LVL1227:
 20343 0675 E9C8FEFF 		jmp	.L1785	#
 20343      FF
 20344              	.LVL1228:
 20345              	.L1873:
 20346              		.loc 3 107 10 discriminator 1 view .LVU6970
 20347              	.LBE1081:
 20348              	.LBE1082:
 20349              	.LBE1096:
GAS LISTING /tmp/ccgH0yRS.s 			page 542


 20350              	.LBB1097:
1361:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20351              		.loc 1 1361 9 is_stmt 1 view .LVU6971
 20352              	# sieve_extend.c:1361:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1361:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 20353              		.loc 1 1361 44 is_stmt 0 view .LVU6972
 20354 067a 448B9424 		mov	r10d, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 20354      98000000 
 20355 0682 4183E801 		sub	r8d, 1	#,
 20356 0686 4C8B9C24 		mov	r11, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 20356      A0000000 
 20357 068e 4183F802 		cmp	r8d, 2	# _212,
 20358 0692 44895424 		mov	DWORD PTR 88[rsp], r10d	# %sfp, option_verboselevel.41_63
 20358      58
 20359 0697 4C895C24 		mov	QWORD PTR 120[rsp], r11	# %sfp, option_maxFactor.42_64
 20359      78
 20360              	.LVL1229:
 20361              	.LBB1098:
 20362              	.LBI1098:
1166:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 20363              		.loc 1 1166 27 is_stmt 1 view .LVU6973
 20364              	.LBB1099:
1167:sieve_extend.c **** 
 20365              		.loc 1 1167 5 view .LVU6974
1169:sieve_extend.c ****     best_blocksize_bits = 0;
 20366              		.loc 1 1169 5 view .LVU6975
1170:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20367              		.loc 1 1170 5 view .LVU6976
1171:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20368              		.loc 1 1171 5 view .LVU6977
1172:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 20369              		.loc 1 1172 5 view .LVU6978
1173:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 20370              		.loc 1 1173 5 view .LVU6979
1174:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 20371              		.loc 1 1174 5 view .LVU6980
1175:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 20372              		.loc 1 1175 5 view .LVU6981
1176:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 20373              		.loc 1 1176 5 view .LVU6982
1177:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 20374              		.loc 1 1177 5 view .LVU6983
1178:sieve_extend.c ****     double sample_duration = default_sample_duration;
 20375              		.loc 1 1178 5 view .LVU6984
1179:sieve_extend.c **** 
 20376              		.loc 1 1179 5 view .LVU6985
1182:sieve_extend.c ****         case 1:
 20377              		.loc 1 1182 5 view .LVU6986
 20378 069c 0F869407 		jbe	.L1794	#,
 20378      0000
 20379 06a2 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC26[rip]	# sample_duration,
 20379      00000000 
 20380 06aa 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 20380      68050000 
 20380      00
 20381 06b3 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 20381      60800000 
GAS LISTING /tmp/ccgH0yRS.s 			page 543


 20381      00
 20382 06bc 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 20382      80000000 
 20382      20000000 
 20383 06c8 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 20383      88000000 
 20383      04000000 
 20384 06d4 C5FB1174 		vmovsd	QWORD PTR 112[rsp], xmm6	# %sfp, sample_duration
 20384      2470
 20385              	.LVL1230:
 20386              	.L1762:
1210:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20387              		.loc 1 1210 5 view .LVU6987
 20388              	# sieve_extend.c:1210:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1210:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20389              		.loc 1 1210 33 is_stmt 0 view .LVU6988
 20390 06da B8400000 		mov	eax, 64	# tmp348,
 20390      00
 20391 06df 31D2     		xor	edx, edx	# tmp347
 20392 06e1 48F7B424 		div	QWORD PTR 136[rsp]	# %sfp
 20392      88000000 
 20393              	# sieve_extend.c:1210:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1210:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20394              		.loc 1 1210 254 view .LVU6989
 20395 06e9 31D2     		xor	edx, edx	# tmp355
 20396              	# sieve_extend.c:1212:     counter_t tuning_results=0;
1212:sieve_extend.c ****     counter_t tuning_result_index=0;
 20397              		.loc 1 1212 15 view .LVU6990
 20398 06eb 4531ED   		xor	r13d, r13d	# tuning_results
 20399              	# sieve_extend.c:1210:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1210:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20400              		.loc 1 1210 83 view .LVU6991
 20401 06ee 488D7801 		lea	rdi, 1[rax]	# _229,
 20402              	.LVL1231:
1211:sieve_extend.c ****     counter_t tuning_results=0;
 20403              		.loc 1 1211 5 is_stmt 1 view .LVU6992
 20404              	# sieve_extend.c:1210:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1210:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20405              		.loc 1 1210 254 is_stmt 0 view .LVU6993
 20406 06f2 B8001000 		mov	eax, 4096	# tmp356,
 20406      00
 20407 06f7 48F77424 		div	QWORD PTR 96[rsp]	# %sfp
 20407      60
 20408              	.LVL1232:
 20409              	# sieve_extend.c:1210:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1210:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20410              		.loc 1 1210 148 view .LVU6994
 20411 06fc 31D2     		xor	edx, edx	# tmp365
 20412              	# sieve_extend.c:1211:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1211:sieve_extend.c ****     counter_t tuning_results=0;
 20413              		.loc 1 1211 41 view .LVU6995
 20414 06fe 480FAFC7 		imul	rax, rdi	# tmp361, _229
 20415              	.LVL1233:
1211:sieve_extend.c ****     counter_t tuning_results=0;
 20416              		.loc 1 1211 41 view .LVU6996
 20417 0702 480FAFF8 		imul	rdi, rax	# tmp362, tmp361
 20418              	.LVL1234:
GAS LISTING /tmp/ccgH0yRS.s 			page 544


 20419              	# sieve_extend.c:1210:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1210:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20420              		.loc 1 1210 148 view .LVU6997
 20421 0706 B8000100 		mov	eax, 256	# tmp366,
 20421      00
 20422 070b 48F7B424 		div	QWORD PTR 128[rsp]	# %sfp
 20422      80000000 
 20423              	# sieve_extend.c:1210:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_
1210:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 20424              		.loc 1 1210 201 view .LVU6998
 20425 0713 4883C001 		add	rax, 1	# tmp371,
 20426              	# sieve_extend.c:1211:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_r
1211:sieve_extend.c ****     counter_t tuning_results=0;
 20427              		.loc 1 1211 41 view .LVU6999
 20428 0717 480FAFF8 		imul	rdi, rax	# tmp372, tmp371
 20429 071b 48C1E708 		sal	rdi, 8	# tmp372,
 20430 071f E8000000 		call	malloc@PLT	#
 20430      00
 20431              	.LVL1235:
1212:sieve_extend.c ****     counter_t tuning_result_index=0;
 20432              		.loc 1 1212 5 is_stmt 1 view .LVU7000
1213:sieve_extend.c ****     
 20433              		.loc 1 1213 5 view .LVU7001
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20434              		.loc 1 1215 5 view .LVU7002
 20435              	.LBB1100:
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20436              		.loc 1 1215 10 view .LVU7003
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20437              		.loc 1 1215 42 view .LVU7004
 20438              	.LBE1100:
 20439              	# sieve_extend.c:1169:     double best_avg = 0;
1169:sieve_extend.c ****     best_blocksize_bits = 0;
 20440              		.loc 1 1169 12 is_stmt 0 view .LVU7005
 20441 0724 C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 20442              	# sieve_extend.c:1172:     counter_t best_mediumstep_faster = 0;
1172:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 20443              		.loc 1 1172 15 view .LVU7006
 20444 0728 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 20444      48000000 
 20444      00
 20445              	# sieve_extend.c:1171:     counter_t best_smallstep_faster = 0;
1171:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 20446              		.loc 1 1171 15 view .LVU7007
 20447 0731 48C74424 		mov	QWORD PTR 64[rsp], 0	# %sfp,
 20447      40000000 
 20447      00
 20448              	# sieve_extend.c:1170:     best_blocksize_bits = 0;
1170:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 20449              		.loc 1 1170 25 view .LVU7008
 20450 073a 48C74424 		mov	QWORD PTR 56[rsp], 0	# %sfp,
 20450      38000000 
 20450      00
 20451              	.LBB1130:
 20452              	# sieve_extend.c:1215:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20453              		.loc 1 1215 20 view .LVU7009
GAS LISTING /tmp/ccgH0yRS.s 			page 545


 20454 0743 48C74424 		mov	QWORD PTR 32[rsp], 0	# %sfp,
 20454      20000000 
 20454      00
 20455 074c 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, tuning_result
 20455      50
 20456              	.LBE1130:
 20457              	# sieve_extend.c:1169:     double best_avg = 0;
1169:sieve_extend.c ****     best_blocksize_bits = 0;
 20458              		.loc 1 1169 12 view .LVU7010
 20459 0751 C5FB114C 		vmovsd	QWORD PTR 40[rsp], xmm1	# %sfp, best_avg
 20459      2428
 20460              	.LVL1236:
 20461              	.L1764:
 20462              	.LBB1131:
 20463              	.LBB1101:
1216:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20464              		.loc 1 1216 62 is_stmt 1 view .LVU7011
 20465              	.LBB1102:
 20466              	.LBB1103:
 20467              	# sieve_extend.c:1218:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1218:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20468              		.loc 1 1218 32 is_stmt 0 view .LVU7012
 20469 0757 4C8B7424 		mov	r14, QWORD PTR 32[rsp]	# mediumstep_faster, %sfp
 20469      20
 20470              	.LVL1237:
 20471 075c 0F1F4000 		.p2align 4
 20472              		.p2align 3
 20473              	.L1776:
1218:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20474              		.loc 1 1218 32 view .LVU7013
 20475              	.LBE1103:
1217:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20476              		.loc 1 1217 67 is_stmt 1 view .LVU7014
 20477              	.LBB1126:
 20478              	# sieve_extend.c:1218:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1218:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20479              		.loc 1 1218 32 is_stmt 0 view .LVU7015
 20480 0760 4C897424 		mov	QWORD PTR 48[rsp], r14	# %sfp, mediumstep_faster
 20480      30
 20481              	.LVL1238:
 20482 0765 66662E0F 		.p2align 4
 20482      1F840000 
 20482      000000
 20483              		.p2align 3
 20484              	.L1774:
1218:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20485              		.loc 1 1218 50 is_stmt 1 view .LVU7016
 20486              	.LBB1104:
 20487              	# sieve_extend.c:1219:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1219:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20488              		.loc 1 1219 36 is_stmt 0 view .LVU7017
 20489 0770 C744245C 		mov	DWORD PTR 92[rsp], 6	# %sfp,
 20489      06000000 
 20490              	.LBE1104:
 20491              	# sieve_extend.c:1218:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1218:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20492              		.loc 1 1218 32 view .LVU7018
GAS LISTING /tmp/ccgH0yRS.s 			page 546


 20493 0778 41BC0001 		mov	r12d, 256	# blocksize_kb,
 20493      0000
 20494              	.LVL1239:
 20495 077e 6690     		.p2align 4
 20496              		.p2align 3
 20497              	.L1772:
 20498              	.LBB1124:
1219:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20499              		.loc 1 1219 49 is_stmt 1 view .LVU7019
 20500 0780 4F8D546D 		lea	r10, 0[r13+r13*2]	# tmp399,
 20500      00
 20501              	# sieve_extend.c:1219:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1219:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20502              		.loc 1 1219 134 is_stmt 0 view .LVU7020
 20503 0785 4C89E3   		mov	rbx, r12	# ivtmp.792, blocksize_kb
 20504 0788 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# tuning_result, %sfp
 20504      50
 20505              	# sieve_extend.c:1219:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1219:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20506              		.loc 1 1219 36 view .LVU7021
 20507 078d 31ED     		xor	ebp, ebp	# free_bits
 20508 078f 49C1E205 		sal	r10, 5	# tmp400,
 20509              	# sieve_extend.c:1219:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1219:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20510              		.loc 1 1219 134 view .LVU7022
 20511 0793 48C1E30D 		sal	rbx, 13	# ivtmp.792,
 20512 0797 4F8D3C13 		lea	r15, [r11+r10]	# ivtmp.791,
 20513 079b EB44     		jmp	.L1770	#
 20514              	.LVL1240:
 20515 079d 0F1F00   		.p2align 4,,7
 20516              		.p2align 3
 20517              	.L1767:
 20518              	.LBB1105:
1236:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 20519              		.loc 1 1236 29 is_stmt 1 view .LVU7023
1237:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20520              		.loc 1 1237 29 view .LVU7024
1238:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 20521              		.loc 1 1238 29 view .LVU7025
1239:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 20522              		.loc 1 1239 29 view .LVU7026
1240:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 20523              		.loc 1 1240 29 view .LVU7027
1241:sieve_extend.c ****                         }
 20524              		.loc 1 1241 29 view .LVU7028
 20525              	# sieve_extend.c:1241:                             if (option_verboselevel >=2) { printf(".(>)"); t
1241:sieve_extend.c ****                         }
 20526              		.loc 1 1241 32 is_stmt 0 view .LVU7029
 20527 07a0 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20527      01
 20528 07a5 0F8FDD03 		jg	.L1877	#,
 20528      0000
1241:sieve_extend.c ****                         }
 20529              		.loc 1 1241 32 view .LVU7030
 20530 07ab 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20530      20
 20531 07b0 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
GAS LISTING /tmp/ccgH0yRS.s 			page 547


 20531      48
 20532              	# sieve_extend.c:1236:                             best_avg = tuning_result[tuning_result_index].av
1236:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 20533              		.loc 1 1236 38 view .LVU7031
 20534 07b5 C5FB115C 		vmovsd	QWORD PTR 40[rsp], xmm3	# %sfp, _253
 20534      2428
 20535              	# sieve_extend.c:1237:                             best_blocksize_bits = blocksize_bits;
1237:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 20536              		.loc 1 1237 49 view .LVU7032
 20537 07bb 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.792
 20537      38
 20538 07c0 48897424 		mov	QWORD PTR 64[rsp], rsi	# %sfp, smallstep_faster
 20538      40
 20539              	.LVL1241:
 20540              	.L1765:
1244:sieve_extend.c ****                     }
 20541              		.loc 1 1244 25 is_stmt 1 view .LVU7033
1244:sieve_extend.c ****                     }
 20542              		.loc 1 1244 25 is_stmt 0 view .LVU7034
 20543              	.LBE1105:
1219:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20544              		.loc 1 1219 141 is_stmt 1 view .LVU7035
 20545              	# sieve_extend.c:1219:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1219:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20546              		.loc 1 1219 151 is_stmt 0 view .LVU7036
 20547 07c5 488B4C24 		mov	rcx, QWORD PTR 96[rsp]	# freebits_steps, %sfp
 20547      60
 20548 07ca 4983C760 		add	r15, 96	# ivtmp.791,
 20549 07ce 4801CD   		add	rbp, rcx	# free_bits, freebits_steps
 20550              	.LVL1242:
1219:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20551              		.loc 1 1219 49 is_stmt 1 view .LVU7037
 20552 07d1 4829CB   		sub	rbx, rcx	# ivtmp.792, freebits_steps
 20553              	.LVL1243:
 20554              	# sieve_extend.c:1219:                     for (counter_t free_bits=0; (free_bits < (anticiped_cach
1219:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 20555              		.loc 1 1219 21 is_stmt 0 view .LVU7038
 20556 07d4 4881FDFF 		cmp	rbp, 4095	# free_bits,
 20556      0F0000
 20557 07db 0F87E700 		ja	.L1766	#,
 20557      0000
 20558              	.LVL1244:
 20559              	.L1770:
 20560              	.LBB1122:
1220:sieve_extend.c **** 
 20561              		.loc 1 1220 25 is_stmt 1 view .LVU7039
1223:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 20562              		.loc 1 1223 25 view .LVU7040
 20563              	# sieve_extend.c:1230:                         tuning_result[tuning_result_index].smallstep_faster 
1230:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20564              		.loc 1 1230 77 is_stmt 0 view .LVU7041
 20565 07e1 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20565      20
 20566 07e6 4C89EE   		mov	rsi, r13	# tuning_results, tuning_results
 20567              	# sieve_extend.c:1224:                         tuning_result[tuning_result_index].maxints = maxints
1224:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20568              		.loc 1 1224 68 view .LVU7042
GAS LISTING /tmp/ccgH0yRS.s 			page 548


 20569 07e9 488B4C24 		mov	rcx, QWORD PTR 120[rsp]	# option_maxFactor.42_64, %sfp
 20569      78
 20570              	# sieve_extend.c:1223:                         tuning_results++;
1223:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 20571              		.loc 1 1223 39 view .LVU7043
 20572 07ee 4983C501 		add	r13, 1	# tuning_results,
 20573              	.LVL1245:
1224:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20574              		.loc 1 1224 25 is_stmt 1 view .LVU7044
 20575              	# sieve_extend.c:1226:                         tuning_result[tuning_result_index].sample_max = samp
1226:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20576              		.loc 1 1226 71 is_stmt 0 view .LVU7045
 20577 07f2 4C8B4C24 		mov	r9, QWORD PTR 104[rsp]	# sample_max, %sfp
 20577      68
 20578              	# sieve_extend.c:1232:                         tuning_result[tuning_result_index].vectorstep_faster
1232:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20579              		.loc 1 1232 78 view .LVU7046
 20580 07f7 488B4424 		mov	rax, QWORD PTR 48[rsp]	# vectorstep_faster, %sfp
 20580      30
 20581              	# sieve_extend.c:1230:                         tuning_result[tuning_result_index].smallstep_faster 
1230:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20582              		.loc 1 1230 77 view .LVU7047
 20583 07fc 49897F20 		mov	QWORD PTR 32[r15], rdi	# MEM[base: _500, offset: 32B], smallstep_faster
 20584              	# sieve_extend.c:1233:                         tune_benchmark(tuning_result, tuning_result_index);
1233:sieve_extend.c **** 
 20585              		.loc 1 1233 25 view .LVU7048
 20586 0800 488B7C24 		mov	rdi, QWORD PTR 80[rsp]	#, %sfp
 20586      50
 20587              	# sieve_extend.c:1225:                         tuning_result[tuning_result_index].sample_duration =
1225:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20588              		.loc 1 1225 76 view .LVU7049
 20589 0805 C5FB1064 		vmovsd	xmm4, QWORD PTR 112[rsp]	# sample_duration, %sfp
 20589      2470
 20590              	# sieve_extend.c:1224:                         tuning_result[tuning_result_index].maxints = maxints
1224:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 20591              		.loc 1 1224 68 view .LVU7050
 20592 080b 49890F   		mov	QWORD PTR [r15], rcx	# MEM[base: _500, offset: 0B], option_maxFactor.42_64
1225:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20593              		.loc 1 1225 25 is_stmt 1 view .LVU7051
 20594              	# sieve_extend.c:1226:                         tuning_result[tuning_result_index].sample_max = samp
1226:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20595              		.loc 1 1226 71 is_stmt 0 view .LVU7052
 20596 080e 4D894F38 		mov	QWORD PTR 56[r15], r9	# MEM[base: _500, offset: 56B], sample_max
 20597              	# sieve_extend.c:1227:                         tuning_result[tuning_result_index].blocksize_kb = bl
1227:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 20598              		.loc 1 1227 73 view .LVU7053
 20599 0812 4D896710 		mov	QWORD PTR 16[r15], r12	# MEM[base: _500, offset: 16B], blocksize_kb
 20600              	# sieve_extend.c:1228:                         tuning_result[tuning_result_index].free_bits = free_
1228:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 20601              		.loc 1 1228 70 view .LVU7054
 20602 0816 49896F18 		mov	QWORD PTR 24[r15], rbp	# MEM[base: _500, offset: 24B], free_bits
 20603              	# sieve_extend.c:1229:                         tuning_result[tuning_result_index].blocksize_bits = 
1229:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 20604              		.loc 1 1229 75 view .LVU7055
 20605 081a 49895F08 		mov	QWORD PTR 8[r15], rbx	# MEM[base: _500, offset: 8B], ivtmp.792
 20606              	# sieve_extend.c:1231:                         tuning_result[tuning_result_index].mediumstep_faster
1231:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
GAS LISTING /tmp/ccgH0yRS.s 			page 549


 20607              		.loc 1 1231 78 view .LVU7056
 20608 081e 4D897728 		mov	QWORD PTR 40[r15], r14	# MEM[base: _500, offset: 40B], mediumstep_faster
 20609              	# sieve_extend.c:1232:                         tuning_result[tuning_result_index].vectorstep_faster
1232:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20610              		.loc 1 1232 78 view .LVU7057
 20611 0822 49894730 		mov	QWORD PTR 48[r15], rax	# MEM[base: _500, offset: 48B], vectorstep_faster
 20612              	# sieve_extend.c:1225:                         tuning_result[tuning_result_index].sample_duration =
1225:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 20613              		.loc 1 1225 76 view .LVU7058
 20614 0826 C4C17B11 		vmovsd	QWORD PTR 64[r15], xmm4	# MEM[base: _500, offset: 64B], sample_duration
 20614      6740
1226:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 20615              		.loc 1 1226 25 is_stmt 1 view .LVU7059
1227:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 20616              		.loc 1 1227 25 view .LVU7060
1228:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 20617              		.loc 1 1228 25 view .LVU7061
1229:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 20618              		.loc 1 1229 25 view .LVU7062
1230:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 20619              		.loc 1 1230 25 view .LVU7063
1231:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 20620              		.loc 1 1231 25 view .LVU7064
1232:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 20621              		.loc 1 1232 25 view .LVU7065
1233:sieve_extend.c **** 
 20622              		.loc 1 1233 25 view .LVU7066
 20623 082c E8000000 		call	tune_benchmark	#
 20623      00
 20624              	.LVL1246:
1235:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20625              		.loc 1 1235 25 view .LVU7067
 20626              	# sieve_extend.c:1235:                         if ( tuning_result[tuning_result_index].avg > best_a
1235:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20627              		.loc 1 1235 64 is_stmt 0 view .LVU7068
 20628 0831 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r15]	# _253, MEM[base: _500, offset: 88B]
 20628      5F58
 20629              	# sieve_extend.c:1235:                         if ( tuning_result[tuning_result_index].avg > best_a
1235:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 20630              		.loc 1 1235 28 view .LVU7069
 20631 0837 C5F92F5C 		vcomisd	xmm3, QWORD PTR 40[rsp]	# _253, %sfp
 20631      2428
 20632 083d 0F875DFF 		ja	.L1767	#,
 20632      FFFF
 20633              	.L1768:
1243:sieve_extend.c ****                         tuning_result_index++;
 20634              		.loc 1 1243 25 is_stmt 1 view .LVU7070
 20635              	# sieve_extend.c:1243:                         if (option_verboselevel >= 3) { printf("...."); tuni
1243:sieve_extend.c ****                         tuning_result_index++;
 20636              		.loc 1 1243 28 is_stmt 0 view .LVU7071
 20637 0843 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 20637      02
 20638 0848 0F8E77FF 		jle	.L1765	#,
 20638      FFFF
1243:sieve_extend.c ****                         tuning_result_index++;
 20639              		.loc 1 1243 57 is_stmt 1 view .LVU7072
 20640              	.LVL1247:
GAS LISTING /tmp/ccgH0yRS.s 			page 550


 20641              	.LBB1106:
 20642              	.LBI1106:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20643              		.loc 3 105 1 view .LVU7073
 20644              	.LBB1107:
 20645              		.loc 3 107 3 view .LVU7074
 20646              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20647              		.loc 3 107 10 is_stmt 0 view .LVU7075
 20648 084e 488D3500 		lea	rsi, .LC52[rip]	#,
 20648      000000
 20649 0855 BF010000 		mov	edi, 1	#,
 20649      00
 20650 085a 31C0     		xor	eax, eax	#
 20651 085c E8000000 		call	__printf_chk@PLT	#
 20651      00
 20652              	.LVL1248:
 20653              		.loc 3 107 10 view .LVU7076
 20654              	.LBE1107:
 20655              	.LBE1106:
1243:sieve_extend.c ****                         tuning_result_index++;
 20656              		.loc 1 1243 73 is_stmt 1 view .LVU7077
 20657              	.LBB1108:
 20658              	.LBI1108:
1158:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 20659              		.loc 1 1158 20 view .LVU7078
 20660              	.LBB1109:
1159:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 20661              		.loc 1 1159 5 view .LVU7079
 20662              	.LBB1110:
 20663              	.LBI1110:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20664              		.loc 3 105 1 view .LVU7080
 20665              	.LBB1111:
 20666              		.loc 3 107 3 view .LVU7081
 20667              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20668              		.loc 3 107 10 is_stmt 0 view .LVU7082
 20669 0861 498B7F38 		mov	rdi, QWORD PTR 56[r15]	# MEM[base: _500, offset: 56B], MEM[base: _500, offset: 56B]
 20670 0865 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[base: _500, offset: 80B], MEM[base: _500, offset: 80B]
 20670      4750
 20671 086b 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _500, offset: 16B], MEM[base: _500, offset: 16B]
 20672 086f 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _500, offset: 8B], MEM[base: _500, offset: 8B]
 20673 0873 48897C24 		mov	QWORD PTR 24[rsp], rdi	#, MEM[base: _500, offset: 56B]
 20673      18
 20674 0878 BF010000 		mov	edi, 1	#,
 20674      00
 20675 087d 498B4748 		mov	rax, QWORD PTR 72[r15]	# MEM[base: _500, offset: 72B], MEM[base: _500, offset: 72B]
 20676 0881 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[base: _500, offset: 72B]
 20676      10
 20677 0886 B8030000 		mov	eax, 3	#,
 20677      00
 20678 088b 498B7730 		mov	rsi, QWORD PTR 48[r15]	# MEM[base: _500, offset: 48B], MEM[base: _500, offset: 48B]
 20679 088f 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[base: _500, offset: 48B]
 20679      08
 20680 0894 488D3500 		lea	rsi, .LC51[rip]	#,
 20680      000000
 20681 089b 4D8B4728 		mov	r8, QWORD PTR 40[r15]	# MEM[base: _500, offset: 40B], MEM[base: _500, offset: 40B]
 20682 089f 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[base: _500, offset: 40B]
GAS LISTING /tmp/ccgH0yRS.s 			page 551


 20683 08a3 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _500, offset: 32B]
 20684 08a7 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _500, offset: 24B]
 20685 08ab C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[base: _500, offset: 88B]
 20685      5758
 20686 08b1 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[base: _500, offset: 64B]
 20686      4F40
 20687 08b7 E8000000 		call	__printf_chk@PLT	#
 20687      00
 20688              	.LVL1249:
 20689              		.loc 3 107 10 view .LVU7083
 20690              	.LBE1111:
 20691              	.LBE1110:
 20692              	# sieve_extend.c:1164: }
1164:sieve_extend.c **** 
 20693              		.loc 1 1164 1 view .LVU7084
 20694 08bc E904FFFF 		jmp	.L1765	#
 20694      FF
 20695              	.LVL1250:
 20696              		.p2align 4,,7
 20697 08c1 0F1F8000 		.p2align 3
 20697      000000
 20698              	.L1766:
1164:sieve_extend.c **** 
 20699              		.loc 1 1164 1 view .LVU7085
 20700              	.LBE1109:
 20701              	.LBE1108:
 20702              	.LBE1122:
 20703              	.LBE1124:
1218:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20704              		.loc 1 1218 67 is_stmt 1 view .LVU7086
 20705              	# sieve_extend.c:1218:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1218:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20706              		.loc 1 1218 80 is_stmt 0 view .LVU7087
 20707 08c8 49D1EC   		shr	r12	# blocksize_kb
 20708              	.LVL1251:
1218:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20709              		.loc 1 1218 50 is_stmt 1 view .LVU7088
 20710              	# sieve_extend.c:1218:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_
1218:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 20711              		.loc 1 1218 17 is_stmt 0 view .LVU7089
 20712 08cb 836C245C 		sub	DWORD PTR 92[rsp], 1	# %sfp,
 20712      01
 20713 08d0 0F85AAFE 		jne	.L1772	#,
 20713      FFFF
 20714              	.LBE1126:
1217:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20715              		.loc 1 1217 101 is_stmt 1 view .LVU7090
 20716              	# sieve_extend.c:1217:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1217:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20717              		.loc 1 1217 119 is_stmt 0 view .LVU7091
 20718 08d6 4C8BA424 		mov	r12, QWORD PTR 128[rsp]	# vectorstep_faster_steps, %sfp
 20718      80000000 
 20719              	.LVL1252:
1217:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20720              		.loc 1 1217 119 view .LVU7092
 20721 08de 4C016424 		add	QWORD PTR 48[rsp], r12	# %sfp, vectorstep_faster_steps
 20721      30
GAS LISTING /tmp/ccgH0yRS.s 			page 552


 20722              	.LVL1253:
1217:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20723              		.loc 1 1217 119 view .LVU7093
 20724 08e3 488B5C24 		mov	rbx, QWORD PTR 48[rsp]	# vectorstep_faster, %sfp
 20724      30
 20725              	.LVL1254:
1217:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20726              		.loc 1 1217 67 is_stmt 1 view .LVU7094
 20727              	# sieve_extend.c:1217:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep
1217:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 20728              		.loc 1 1217 13 is_stmt 0 view .LVU7095
 20729 08e8 4881FB00 		cmp	rbx, 256	# vectorstep_faster,
 20729      010000
 20730 08ef 0F867BFE 		jbe	.L1774	#,
 20730      FFFF
 20731              	.LBE1102:
1216:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20732              		.loc 1 1216 94 is_stmt 1 view .LVU7096
 20733              	# sieve_extend.c:1216:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1216:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20734              		.loc 1 1216 112 is_stmt 0 view .LVU7097
 20735 08f5 4C03B424 		add	r14, QWORD PTR 136[rsp]	# mediumstep_faster, %sfp
 20735      88000000 
 20736              	.LVL1255:
1216:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20737              		.loc 1 1216 62 is_stmt 1 view .LVU7098
 20738              	# sieve_extend.c:1216:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_fast
1216:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE;
 20739              		.loc 1 1216 9 is_stmt 0 view .LVU7099
 20740 08fd 4983FE40 		cmp	r14, 64	# mediumstep_faster,
 20741 0901 0F8659FE 		jbe	.L1776	#,
 20741      FFFF
 20742              	.LBE1101:
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20743              		.loc 1 1215 75 is_stmt 1 view .LVU7100
 20744              	# sieve_extend.c:1215:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20745              		.loc 1 1215 92 is_stmt 0 view .LVU7101
 20746 0907 4C8BB424 		mov	r14, QWORD PTR 136[rsp]	# smallstep_faster_steps, %sfp
 20746      88000000 
 20747              	.LVL1256:
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20748              		.loc 1 1215 92 view .LVU7102
 20749 090f 4C017424 		add	QWORD PTR 32[rsp], r14	# %sfp, smallstep_faster_steps
 20749      20
 20750              	.LVL1257:
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20751              		.loc 1 1215 92 view .LVU7103
 20752 0914 4C8B7C24 		mov	r15, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 20752      20
 20753              	.LVL1258:
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20754              		.loc 1 1215 42 is_stmt 1 view .LVU7104
 20755              	# sieve_extend.c:1215:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE/2; sm
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20756              		.loc 1 1215 5 is_stmt 0 view .LVU7105
 20757 0919 4983FF20 		cmp	r15, 32	# smallstep_faster,
GAS LISTING /tmp/ccgH0yRS.s 			page 553


 20758 091d 0F8634FE 		jbe	.L1764	#,
 20758      FFFF
 20759 0923 4C8B7C24 		mov	r15, QWORD PTR 80[rsp]	# tuning_result, %sfp
 20759      50
 20760              	.LVL1259:
1215:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE; medium
 20761              		.loc 1 1215 5 view .LVU7106
 20762              	.LBE1131:
1250:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 20763              		.loc 1 1250 5 is_stmt 1 view .LVU7107
 20764              	# sieve_extend.c:1250:     if (option_verboselevel >= 2) {
1250:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju\n"
 20765              		.loc 1 1250 8 is_stmt 0 view .LVU7108
 20766 0928 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20766      01
 20767 092d 7E31     		jle	.L1777	#,
1251:sieve_extend.c ****         printf("Best options\n");
 20768              		.loc 1 1251 9 is_stmt 1 view .LVU7109
 20769              	.LVL1260:
 20770              	.LBB1132:
 20771              	.LBI1132:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20772              		.loc 3 105 1 view .LVU7110
 20773              	.LBB1133:
 20774              		.loc 3 107 3 view .LVU7111
 20775              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20776              		.loc 3 107 10 is_stmt 0 view .LVU7112
 20777 092f 4C8B4C24 		mov	r9, QWORD PTR 72[rsp]	#, %sfp
 20777      48
 20778 0934 BF010000 		mov	edi, 1	#,
 20778      00
 20779 0939 4C8B4424 		mov	r8, QWORD PTR 64[rsp]	#, %sfp
 20779      40
 20780 093e 4C89EA   		mov	rdx, r13	#, tuning_results
 20781 0941 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	#, %sfp
 20781      38
 20782 0946 488D3500 		lea	rsi, .LC53[rip]	#,
 20782      000000
 20783 094d 31C0     		xor	eax, eax	#
 20784 094f E8000000 		call	__printf_chk@PLT	#
 20784      00
 20785              	.LVL1261:
 20786              		.loc 3 107 10 view .LVU7113
 20787              	.LBE1133:
 20788              	.LBE1132:
1252:sieve_extend.c ****     }
 20789              		.loc 1 1252 9 is_stmt 1 view .LVU7114
 20790              	.LBB1134:
 20791              	.LBI1134:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 20792              		.loc 3 105 1 view .LVU7115
 20793              	.LBB1135:
 20794              		.loc 3 107 3 view .LVU7116
 20795              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 20796              		.loc 3 107 10 is_stmt 0 view .LVU7117
 20797 0954 488D3D00 		lea	rdi, .LC54[rip]	#,
 20797      000000
GAS LISTING /tmp/ccgH0yRS.s 			page 554


 20798 095b E8000000 		call	puts@PLT	#
 20798      00
 20799              	.LVL1262:
 20800              	.L1777:
 20801              		.loc 3 107 10 view .LVU7118
 20802              	.LBE1135:
 20803              	.LBE1134:
 20804              	.LBB1136:
 20805              	# sieve_extend.c:1262:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1262:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 20806              		.loc 1 1262 75 view .LVU7119
 20807 0960 4C8B7424 		mov	r14, QWORD PTR 104[rsp]	# sample_max, %sfp
 20807      68
 20808              	.LBE1136:
 20809              	.LBB1145:
 20810              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20811              		.loc 1 1270 24 view .LVU7120
 20812 0965 4531E4   		xor	r12d, r12d	# step
 20813              	.LVL1263:
 20814              	.L1782:
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20815              		.loc 1 1270 24 view .LVU7121
 20816              	.LBE1145:
1255:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 20817              		.loc 1 1255 11 is_stmt 1 view .LVU7122
 20818 0968 4983FD04 		cmp	r13, 4	# tuning_results,
 20819 096c 0F861404 		jbe	.L1878	#,
 20819      0000
1256:sieve_extend.c ****         step++;
 20820              		.loc 1 1256 9 view .LVU7123
 20821 0972 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 20821      000000
 20822 0979 BA600000 		mov	edx, 96	#,
 20822      00
 20823 097e 4C89EE   		mov	rsi, r13	#, tuning_results
 20824 0981 4C89FF   		mov	rdi, r15	#, tuning_result
 20825 0984 E8000000 		call	qsort@PLT	#
 20825      00
 20826              	.LVL1264:
1257:sieve_extend.c ****         if (option_verboselevel >= 2) {
 20827              		.loc 1 1257 9 view .LVU7124
 20828              	# sieve_extend.c:1257:         step++;
1257:sieve_extend.c ****         if (option_verboselevel >= 2) {
 20829              		.loc 1 1257 13 is_stmt 0 view .LVU7125
 20830 0989 4983C401 		add	r12, 1	# step,
 20831              	.LVL1265:
1258:sieve_extend.c ****             tuning_result_index = 0;
 20832              		.loc 1 1258 9 is_stmt 1 view .LVU7126
 20833              	# sieve_extend.c:1258:         if (option_verboselevel >= 2) {
1258:sieve_extend.c ****             tuning_result_index = 0;
 20834              		.loc 1 1258 12 is_stmt 0 view .LVU7127
 20835 098d 837C2458 		cmp	DWORD PTR 88[rsp], 1	# %sfp,
 20835      01
 20836 0992 0F8F7D02 		jg	.L1778	#,
 20836      0000
 20837              	.L1780:
GAS LISTING /tmp/ccgH0yRS.s 			page 555


1268:sieve_extend.c **** 
 20838              		.loc 1 1268 9 is_stmt 1 view .LVU7128
 20839              	# sieve_extend.c:1268:         tuning_results = tuning_results / 2;
1268:sieve_extend.c **** 
 20840              		.loc 1 1268 24 is_stmt 0 view .LVU7129
 20841 0998 49D1ED   		shr	r13	# tuning_results
 20842              	.LVL1266:
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20843              		.loc 1 1270 9 is_stmt 1 view .LVU7130
 20844              	.LBB1146:
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20845              		.loc 1 1270 14 view .LVU7131
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20846              		.loc 1 1270 29 view .LVU7132
 20847              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20848              		.loc 1 1270 24 is_stmt 0 view .LVU7133
 20849 099b 31ED     		xor	ebp, ebp	# i
 20850 099d 4D89E8   		mov	r8, r13	# tmp487, tuning_results
 20851 09a0 498D5F38 		lea	rbx, 56[r15]	# ivtmp.773,
 20852 09a4 4183E007 		and	r8d, 7	# tmp487,
 20853 09a8 0F84D200 		je	.L1779	#,
 20853      0000
 20854 09ae 4983F801 		cmp	r8, 1	# tmp487,
 20855 09b2 0F84A900 		je	.L1837	#,
 20855      0000
 20856 09b8 4983F802 		cmp	r8, 2	# tmp487,
 20857 09bc 0F848900 		je	.L1838	#,
 20857      0000
 20858 09c2 4983F803 		cmp	r8, 3	# tmp487,
 20859 09c6 746D     		je	.L1839	#,
 20860 09c8 4983F804 		cmp	r8, 4	# tmp487,
 20861 09cc 7451     		je	.L1840	#,
 20862 09ce 4983F805 		cmp	r8, 5	# tmp487,
 20863 09d2 7435     		je	.L1841	#,
 20864 09d4 4983F806 		cmp	r8, 6	# tmp487,
 20865 09d8 7419     		je	.L1842	#,
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20866              		.loc 1 1271 13 is_stmt 1 view .LVU7134
 20867 09da 31F6     		xor	esi, esi	#
 20868 09dc 4C89FF   		mov	rdi, r15	#, tuning_result
 20869 09df E8000000 		call	tune_benchmark	#
 20869      00
 20870              	.LVL1267:
1272:sieve_extend.c ****         }
 20871              		.loc 1 1272 13 view .LVU7135
 20872              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20873              		.loc 1 1270 48 is_stmt 0 view .LVU7136
 20874 09e4 BD010000 		mov	ebp, 1	# i,
 20874      00
 20875              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 20876              		.loc 1 1272 41 view .LVU7137
 20877 09e9 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20878              		.loc 1 1270 47 is_stmt 1 view .LVU7138
GAS LISTING /tmp/ccgH0yRS.s 			page 556


 20879              	.LVL1268:
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20880              		.loc 1 1270 29 view .LVU7139
 20881 09ec 498D9F98 		lea	rbx, 152[r15]	# ivtmp.773,
 20881      000000
 20882              	.L1842:
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20883              		.loc 1 1271 13 view .LVU7140
 20884 09f3 4889EE   		mov	rsi, rbp	#, i
 20885 09f6 4C89FF   		mov	rdi, r15	#, tuning_result
 20886 09f9 E8000000 		call	tune_benchmark	#
 20886      00
 20887              	.LVL1269:
1272:sieve_extend.c ****         }
 20888              		.loc 1 1272 13 view .LVU7141
 20889              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20890              		.loc 1 1270 48 is_stmt 0 view .LVU7142
 20891 09fe 4883C501 		add	rbp, 1	# i,
 20892              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 20893              		.loc 1 1272 41 view .LVU7143
 20894 0a02 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20895              		.loc 1 1270 47 is_stmt 1 view .LVU7144
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20896              		.loc 1 1270 29 view .LVU7145
 20897 0a05 4883C360 		add	rbx, 96	# ivtmp.773,
 20898              	.L1841:
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20899              		.loc 1 1271 13 view .LVU7146
 20900 0a09 4889EE   		mov	rsi, rbp	#, i
 20901 0a0c 4C89FF   		mov	rdi, r15	#, tuning_result
 20902 0a0f E8000000 		call	tune_benchmark	#
 20902      00
 20903              	.LVL1270:
1272:sieve_extend.c ****         }
 20904              		.loc 1 1272 13 view .LVU7147
 20905              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20906              		.loc 1 1270 48 is_stmt 0 view .LVU7148
 20907 0a14 4883C501 		add	rbp, 1	# i,
 20908              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 20909              		.loc 1 1272 41 view .LVU7149
 20910 0a18 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20911              		.loc 1 1270 47 is_stmt 1 view .LVU7150
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20912              		.loc 1 1270 29 view .LVU7151
 20913 0a1b 4883C360 		add	rbx, 96	# ivtmp.773,
 20914              	.L1840:
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20915              		.loc 1 1271 13 view .LVU7152
 20916 0a1f 4889EE   		mov	rsi, rbp	#, i
 20917 0a22 4C89FF   		mov	rdi, r15	#, tuning_result
 20918 0a25 E8000000 		call	tune_benchmark	#
GAS LISTING /tmp/ccgH0yRS.s 			page 557


 20918      00
 20919              	.LVL1271:
1272:sieve_extend.c ****         }
 20920              		.loc 1 1272 13 view .LVU7153
 20921              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20922              		.loc 1 1270 48 is_stmt 0 view .LVU7154
 20923 0a2a 4883C501 		add	rbp, 1	# i,
 20924              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 20925              		.loc 1 1272 41 view .LVU7155
 20926 0a2e 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20927              		.loc 1 1270 47 is_stmt 1 view .LVU7156
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20928              		.loc 1 1270 29 view .LVU7157
 20929 0a31 4883C360 		add	rbx, 96	# ivtmp.773,
 20930              	.L1839:
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20931              		.loc 1 1271 13 view .LVU7158
 20932 0a35 4889EE   		mov	rsi, rbp	#, i
 20933 0a38 4C89FF   		mov	rdi, r15	#, tuning_result
 20934 0a3b E8000000 		call	tune_benchmark	#
 20934      00
 20935              	.LVL1272:
1272:sieve_extend.c ****         }
 20936              		.loc 1 1272 13 view .LVU7159
 20937              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20938              		.loc 1 1270 48 is_stmt 0 view .LVU7160
 20939 0a40 4883C501 		add	rbp, 1	# i,
 20940              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 20941              		.loc 1 1272 41 view .LVU7161
 20942 0a44 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20943              		.loc 1 1270 47 is_stmt 1 view .LVU7162
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20944              		.loc 1 1270 29 view .LVU7163
 20945 0a47 4883C360 		add	rbx, 96	# ivtmp.773,
 20946              	.L1838:
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20947              		.loc 1 1271 13 view .LVU7164
 20948 0a4b 4889EE   		mov	rsi, rbp	#, i
 20949 0a4e 4C89FF   		mov	rdi, r15	#, tuning_result
 20950 0a51 E8000000 		call	tune_benchmark	#
 20950      00
 20951              	.LVL1273:
1272:sieve_extend.c ****         }
 20952              		.loc 1 1272 13 view .LVU7165
 20953              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20954              		.loc 1 1270 48 is_stmt 0 view .LVU7166
 20955 0a56 4883C501 		add	rbp, 1	# i,
 20956              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 20957              		.loc 1 1272 41 view .LVU7167
GAS LISTING /tmp/ccgH0yRS.s 			page 558


 20958 0a5a 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20959              		.loc 1 1270 47 is_stmt 1 view .LVU7168
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20960              		.loc 1 1270 29 view .LVU7169
 20961 0a5d 4883C360 		add	rbx, 96	# ivtmp.773,
 20962              	.L1837:
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20963              		.loc 1 1271 13 view .LVU7170
 20964 0a61 4889EE   		mov	rsi, rbp	#, i
 20965 0a64 4C89FF   		mov	rdi, r15	#, tuning_result
 20966              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20967              		.loc 1 1270 48 is_stmt 0 view .LVU7171
 20968 0a67 4883C501 		add	rbp, 1	# i,
 20969              	# sieve_extend.c:1271:             tune_benchmark(tuning_result, i);
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20970              		.loc 1 1271 13 view .LVU7172
 20971 0a6b E8000000 		call	tune_benchmark	#
 20971      00
 20972              	.LVL1274:
1272:sieve_extend.c ****         }
 20973              		.loc 1 1272 13 is_stmt 1 view .LVU7173
 20974              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 20975              		.loc 1 1272 41 is_stmt 0 view .LVU7174
 20976 0a70 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20977              		.loc 1 1270 47 is_stmt 1 view .LVU7175
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20978              		.loc 1 1270 29 view .LVU7176
 20979 0a73 4883C360 		add	rbx, 96	# ivtmp.773,
 20980              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20981              		.loc 1 1270 9 is_stmt 0 view .LVU7177
 20982 0a77 4939ED   		cmp	r13, rbp	# tuning_results, i
 20983 0a7a 0F84E8FE 		je	.L1782	#,
 20983      FFFF
 20984              	.L1779:
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 20985              		.loc 1 1271 13 is_stmt 1 view .LVU7178
 20986 0a80 4889EE   		mov	rsi, rbp	#, i
 20987 0a83 4C89FF   		mov	rdi, r15	#, tuning_result
 20988 0a86 E8000000 		call	tune_benchmark	#
 20988      00
 20989              	.LVL1275:
1272:sieve_extend.c ****         }
 20990              		.loc 1 1272 13 view .LVU7179
 20991 0a8b 4C8D5360 		lea	r10, 96[rbx]	# tmp489,
 20992              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 20993              		.loc 1 1272 41 is_stmt 0 view .LVU7180
 20994 0a8f 4C0133   		add	QWORD PTR [rbx], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20995              		.loc 1 1270 47 is_stmt 1 view .LVU7181
 20996              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccgH0yRS.s 			page 559


 20997              		.loc 1 1270 48 is_stmt 0 view .LVU7182
 20998 0a92 488D7501 		lea	rsi, 1[rbp]	# tmp488,
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 20999              		.loc 1 1270 29 is_stmt 1 view .LVU7183
 21000              	# sieve_extend.c:1271:             tune_benchmark(tuning_result, i);
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21001              		.loc 1 1271 13 is_stmt 0 view .LVU7184
 21002 0a96 4C89FF   		mov	rdi, r15	#, tuning_result
 21003 0a99 4C895424 		mov	QWORD PTR 32[rsp], r10	# %sfp, tmp489
 21003      20
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21004              		.loc 1 1271 13 is_stmt 1 view .LVU7185
 21005 0a9e E8000000 		call	tune_benchmark	#
 21005      00
 21006              	.LVL1276:
1272:sieve_extend.c ****         }
 21007              		.loc 1 1272 13 view .LVU7186
 21008              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21009              		.loc 1 1272 41 is_stmt 0 view .LVU7187
 21010 0aa3 4C8B5C24 		mov	r11, QWORD PTR 32[rsp]	# tmp489, %sfp
 21010      20
 21011 0aa8 4C8D8BC0 		lea	r9, 192[rbx]	# ivtmp.773,
 21011      000000
 21012              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21013              		.loc 1 1270 48 view .LVU7188
 21014 0aaf 488D7502 		lea	rsi, 2[rbp]	# i,
 21015              	# sieve_extend.c:1271:             tune_benchmark(tuning_result, i);
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21016              		.loc 1 1271 13 view .LVU7189
 21017 0ab3 4C89FF   		mov	rdi, r15	#, tuning_result
 21018 0ab6 4C894C24 		mov	QWORD PTR 32[rsp], r9	# %sfp, ivtmp.773
 21018      20
 21019              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21020              		.loc 1 1272 41 view .LVU7190
 21021 0abb 4D0133   		add	QWORD PTR [r11], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21022              		.loc 1 1270 47 is_stmt 1 view .LVU7191
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21023              		.loc 1 1270 29 view .LVU7192
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21024              		.loc 1 1271 13 view .LVU7193
 21025 0abe E8000000 		call	tune_benchmark	#
 21025      00
 21026              	.LVL1277:
1272:sieve_extend.c ****         }
 21027              		.loc 1 1272 13 view .LVU7194
 21028              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21029              		.loc 1 1272 41 is_stmt 0 view .LVU7195
 21030 0ac3 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21030      20
 21031 0ac8 488D8320 		lea	rax, 288[rbx]	# ivtmp.773,
 21031      010000
 21032 0acf 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, ivtmp.773
GAS LISTING /tmp/ccgH0yRS.s 			page 560


 21032      20
 21033              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21034              		.loc 1 1270 48 view .LVU7196
 21035 0ad4 488D7503 		lea	rsi, 3[rbp]	# i,
 21036              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21037              		.loc 1 1272 41 view .LVU7197
 21038 0ad8 4C0137   		add	QWORD PTR [rdi], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21039              		.loc 1 1270 47 is_stmt 1 view .LVU7198
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21040              		.loc 1 1270 29 view .LVU7199
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21041              		.loc 1 1271 13 view .LVU7200
 21042 0adb 4C89FF   		mov	rdi, r15	#, tuning_result
 21043 0ade E8000000 		call	tune_benchmark	#
 21043      00
 21044              	.LVL1278:
1272:sieve_extend.c ****         }
 21045              		.loc 1 1272 13 view .LVU7201
 21046              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21047              		.loc 1 1272 41 is_stmt 0 view .LVU7202
 21048 0ae3 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21048      20
 21049 0ae8 488D8B80 		lea	rcx, 384[rbx]	# ivtmp.773,
 21049      010000
 21050              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21051              		.loc 1 1270 48 view .LVU7203
 21052 0aef 488D7504 		lea	rsi, 4[rbp]	# i,
 21053              	# sieve_extend.c:1271:             tune_benchmark(tuning_result, i);
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21054              		.loc 1 1271 13 view .LVU7204
 21055 0af3 4C89FF   		mov	rdi, r15	#, tuning_result
 21056 0af6 48894C24 		mov	QWORD PTR 32[rsp], rcx	# %sfp, ivtmp.773
 21056      20
 21057              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21058              		.loc 1 1272 41 view .LVU7205
 21059 0afb 4C0132   		add	QWORD PTR [rdx], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21060              		.loc 1 1270 47 is_stmt 1 view .LVU7206
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21061              		.loc 1 1270 29 view .LVU7207
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21062              		.loc 1 1271 13 view .LVU7208
 21063 0afe E8000000 		call	tune_benchmark	#
 21063      00
 21064              	.LVL1279:
1272:sieve_extend.c ****         }
 21065              		.loc 1 1272 13 view .LVU7209
 21066              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21067              		.loc 1 1272 41 is_stmt 0 view .LVU7210
 21068 0b03 488B7424 		mov	rsi, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
GAS LISTING /tmp/ccgH0yRS.s 			page 561


 21068      20
 21069 0b08 4C8D83E0 		lea	r8, 480[rbx]	# ivtmp.773,
 21069      010000
 21070 0b0f 4C894424 		mov	QWORD PTR 32[rsp], r8	# %sfp, ivtmp.773
 21070      20
 21071              	# sieve_extend.c:1271:             tune_benchmark(tuning_result, i);
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21072              		.loc 1 1271 13 view .LVU7211
 21073 0b14 4C89FF   		mov	rdi, r15	#, tuning_result
 21074              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21075              		.loc 1 1272 41 view .LVU7212
 21076 0b17 4C0136   		add	QWORD PTR [rsi], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21077              		.loc 1 1270 47 is_stmt 1 view .LVU7213
 21078              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21079              		.loc 1 1270 48 is_stmt 0 view .LVU7214
 21080 0b1a 488D7505 		lea	rsi, 5[rbp]	# i,
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21081              		.loc 1 1270 29 is_stmt 1 view .LVU7215
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21082              		.loc 1 1271 13 view .LVU7216
 21083 0b1e E8000000 		call	tune_benchmark	#
 21083      00
 21084              	.LVL1280:
1272:sieve_extend.c ****         }
 21085              		.loc 1 1272 13 view .LVU7217
 21086              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21087              		.loc 1 1272 41 is_stmt 0 view .LVU7218
 21088 0b23 4C8B5424 		mov	r10, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21088      20
 21089 0b28 4C8D9B40 		lea	r11, 576[rbx]	# ivtmp.773,
 21089      020000
 21090              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21091              		.loc 1 1270 48 view .LVU7219
 21092 0b2f 488D7506 		lea	rsi, 6[rbp]	# i,
 21093              	# sieve_extend.c:1271:             tune_benchmark(tuning_result, i);
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21094              		.loc 1 1271 13 view .LVU7220
 21095 0b33 4C89FF   		mov	rdi, r15	#, tuning_result
 21096 0b36 4C895C24 		mov	QWORD PTR 32[rsp], r11	# %sfp, ivtmp.773
 21096      20
 21097              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21098              		.loc 1 1272 41 view .LVU7221
 21099 0b3b 4D0132   		add	QWORD PTR [r10], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21100              		.loc 1 1270 47 is_stmt 1 view .LVU7222
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21101              		.loc 1 1270 29 view .LVU7223
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21102              		.loc 1 1271 13 view .LVU7224
 21103 0b3e E8000000 		call	tune_benchmark	#
 21103      00
GAS LISTING /tmp/ccgH0yRS.s 			page 562


 21104              	.LVL1281:
1272:sieve_extend.c ****         }
 21105              		.loc 1 1272 13 view .LVU7225
 21106              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21107              		.loc 1 1272 41 is_stmt 0 view .LVU7226
 21108 0b43 4C8B4C24 		mov	r9, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21108      20
 21109 0b48 488DBBA0 		lea	rdi, 672[rbx]	# ivtmp.773,
 21109      020000
 21110              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21111              		.loc 1 1270 48 view .LVU7227
 21112 0b4f 488D7507 		lea	rsi, 7[rbp]	# i,
 21113 0b53 4883C508 		add	rbp, 8	# i,
 21114 0b57 48897C24 		mov	QWORD PTR 32[rsp], rdi	# %sfp, ivtmp.773
 21114      20
 21115              	# sieve_extend.c:1271:             tune_benchmark(tuning_result, i);
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21116              		.loc 1 1271 13 view .LVU7228
 21117 0b5c 4C89FF   		mov	rdi, r15	#, tuning_result
 21118              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21119              		.loc 1 1272 41 view .LVU7229
 21120 0b5f 4D0131   		add	QWORD PTR [r9], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21121              		.loc 1 1270 47 is_stmt 1 view .LVU7230
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21122              		.loc 1 1270 29 view .LVU7231
1271:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 21123              		.loc 1 1271 13 view .LVU7232
 21124 0b62 4881C300 		add	rbx, 768	# ivtmp.773,
 21124      030000
 21125 0b69 E8000000 		call	tune_benchmark	#
 21125      00
 21126              	.LVL1282:
1272:sieve_extend.c ****         }
 21127              		.loc 1 1272 13 view .LVU7233
 21128              	# sieve_extend.c:1272:             tuning_result[i].sample_max += sample_max;
1272:sieve_extend.c ****         }
 21129              		.loc 1 1272 41 is_stmt 0 view .LVU7234
 21130 0b6e 488B4424 		mov	rax, QWORD PTR 32[rsp]	# ivtmp.773, %sfp
 21130      20
 21131 0b73 4C0130   		add	QWORD PTR [rax], r14	# MEM[base: _116, offset: 0B], sample_max
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21132              		.loc 1 1270 47 is_stmt 1 view .LVU7235
 21133              	.LVL1283:
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21134              		.loc 1 1270 29 view .LVU7236
 21135              	# sieve_extend.c:1270:         for (counter_t i=0; i<tuning_results; i++) {
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21136              		.loc 1 1270 9 is_stmt 0 view .LVU7237
 21137 0b76 4939ED   		cmp	r13, rbp	# tuning_results, i
 21138 0b79 0F8501FF 		jne	.L1779	#,
 21138      FFFF
 21139 0b7f E9E4FDFF 		jmp	.L1782	#
 21139      FF
GAS LISTING /tmp/ccgH0yRS.s 			page 563


 21140              	.LVL1284:
 21141              		.p2align 4,,7
 21142 0b84 0F1F4000 		.p2align 3
 21143              	.L1877:
1270:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 21144              		.loc 1 1270 9 view .LVU7238
 21145              	.LBE1146:
 21146              	.LBB1147:
 21147              	.LBB1129:
 21148              	.LBB1128:
 21149              	.LBB1127:
 21150              	.LBB1125:
 21151              	.LBB1123:
 21152              	.LBB1112:
 21153              	.LBB1113:
 21154              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21155              		.loc 3 107 10 view .LVU7239
 21156 0b88 488D3500 		lea	rsi, .LC50[rip]	#,
 21156      000000
 21157 0b8f BF010000 		mov	edi, 1	#,
 21157      00
 21158 0b94 C5FB115C 		vmovsd	QWORD PTR 40[rsp], xmm3	# %sfp, _253
 21158      2428
 21159              	.LBE1113:
 21160              	.LBE1112:
1241:sieve_extend.c ****                         }
 21161              		.loc 1 1241 60 is_stmt 1 view .LVU7240
 21162              	.LVL1285:
 21163              	.LBB1115:
 21164              	.LBI1112:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21165              		.loc 3 105 1 view .LVU7241
 21166              	.LBB1114:
 21167              		.loc 3 107 3 view .LVU7242
 21168              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21169              		.loc 3 107 10 is_stmt 0 view .LVU7243
 21170 0b9a 31C0     		xor	eax, eax	#
 21171 0b9c E8000000 		call	__printf_chk@PLT	#
 21171      00
 21172              	.LVL1286:
 21173              		.loc 3 107 10 view .LVU7244
 21174              	.LBE1114:
 21175              	.LBE1115:
1241:sieve_extend.c ****                         }
 21176              		.loc 1 1241 76 is_stmt 1 view .LVU7245
 21177              	.LBB1116:
 21178              	.LBI1116:
1158:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21179              		.loc 1 1158 20 view .LVU7246
 21180              	.LBB1117:
1159:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21181              		.loc 1 1159 5 view .LVU7247
 21182              	.LBB1118:
 21183              	.LBI1118:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21184              		.loc 3 105 1 view .LVU7248
 21185              	.LBB1119:
GAS LISTING /tmp/ccgH0yRS.s 			page 564


 21186              		.loc 3 107 3 view .LVU7249
 21187              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21188              		.loc 3 107 10 is_stmt 0 view .LVU7250
 21189 0ba1 4D8B4738 		mov	r8, QWORD PTR 56[r15]	# MEM[base: _500, offset: 56B], MEM[base: _500, offset: 56B]
 21190 0ba5 488D3500 		lea	rsi, .LC51[rip]	#,
 21190      000000
 21191 0bac 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[base: _500, offset: 8B], MEM[base: _500, offset: 8B]
 21192 0bb0 BF010000 		mov	edi, 1	#,
 21192      00
 21193 0bb5 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[base: _500, offset: 80B], MEM[base: _500, offset: 80B]
 21193      4750
 21194 0bbb B8030000 		mov	eax, 3	#,
 21194      00
 21195 0bc0 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[base: _500, offset: 16B], MEM[base: _500, offset: 16B]
 21196 0bc4 4C894424 		mov	QWORD PTR 24[rsp], r8	#, MEM[base: _500, offset: 56B]
 21196      18
 21197 0bc9 4D8B5748 		mov	r10, QWORD PTR 72[r15]	# MEM[base: _500, offset: 72B], MEM[base: _500, offset: 72B]
 21198 0bcd 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _500, offset: 72B]
 21198      10
 21199 0bd2 4D8B5F30 		mov	r11, QWORD PTR 48[r15]	# MEM[base: _500, offset: 48B], MEM[base: _500, offset: 48B]
 21200 0bd6 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _500, offset: 48B]
 21200      08
 21201 0bdb 4D8B4F28 		mov	r9, QWORD PTR 40[r15]	# MEM[base: _500, offset: 40B], MEM[base: _500, offset: 40B]
 21202 0bdf 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[base: _500, offset: 40B]
 21203 0be3 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[base: _500, offset: 32B]
 21204 0be7 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[base: _500, offset: 24B]
 21205 0beb C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[base: _500, offset: 88B]
 21205      5758
 21206 0bf1 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[base: _500, offset: 64B]
 21206      4F40
 21207 0bf7 E8000000 		call	__printf_chk@PLT	#
 21207      00
 21208              	.LVL1287:
 21209              		.loc 3 107 10 view .LVU7251
 21210              	.LBE1119:
 21211              	.LBE1118:
 21212              	# sieve_extend.c:1164: }
1164:sieve_extend.c **** 
 21213              		.loc 1 1164 1 view .LVU7252
 21214 0bfc 488B5424 		mov	rdx, QWORD PTR 32[rsp]	# smallstep_faster, %sfp
 21214      20
 21215 0c01 4C897424 		mov	QWORD PTR 72[rsp], r14	# %sfp, mediumstep_faster
 21215      48
 21216              	.LBE1117:
 21217              	.LBE1116:
 21218              	# sieve_extend.c:1237:                             best_blocksize_bits = blocksize_bits;
1237:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 21219              		.loc 1 1237 49 view .LVU7253
 21220 0c06 48895C24 		mov	QWORD PTR 56[rsp], rbx	# %sfp, ivtmp.792
 21220      38
 21221              	.LBB1121:
 21222              	.LBB1120:
 21223              	# sieve_extend.c:1164: }
1164:sieve_extend.c **** 
 21224              		.loc 1 1164 1 view .LVU7254
 21225 0c0b 48895424 		mov	QWORD PTR 64[rsp], rdx	# %sfp, smallstep_faster
 21225      40
GAS LISTING /tmp/ccgH0yRS.s 			page 565


 21226 0c10 E92EFCFF 		jmp	.L1768	#
 21226      FF
 21227              	.LVL1288:
 21228              	.L1778:
1164:sieve_extend.c **** 
 21229              		.loc 1 1164 1 view .LVU7255
 21230              	.LBE1120:
 21231              	.LBE1121:
 21232              	.LBE1123:
 21233              	.LBE1125:
 21234              	.LBE1127:
 21235              	.LBE1128:
 21236              	.LBE1129:
 21237              	.LBE1147:
1259:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 21238              		.loc 1 1259 13 is_stmt 1 view .LVU7256
1260:sieve_extend.c ****             if (option_verboselevel >= 3) {
 21239              		.loc 1 1260 13 view .LVU7257
 21240              	.LBB1148:
 21241              	.LBI1148:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21242              		.loc 3 105 1 view .LVU7258
 21243              	.LBB1149:
 21244              		.loc 3 107 3 view .LVU7259
 21245              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21246              		.loc 3 107 10 is_stmt 0 view .LVU7260
 21247 0c15 4C89E2   		mov	rdx, r12	#, step
 21248 0c18 488D3500 		lea	rsi, .LC55[rip]	#,
 21248      000000
 21249 0c1f BF010000 		mov	edi, 1	#,
 21249      00
 21250 0c24 31C0     		xor	eax, eax	#
 21251 0c26 E8000000 		call	__printf_chk@PLT	#
 21251      00
 21252              	.LVL1289:
 21253              		.loc 3 107 10 view .LVU7261
 21254              	.LBE1149:
 21255              	.LBE1148:
1260:sieve_extend.c ****             if (option_verboselevel >= 3) {
 21256              		.loc 1 1260 47 is_stmt 1 view .LVU7262
 21257              	.LBB1150:
 21258              	.LBI1150:
1158:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21259              		.loc 1 1158 20 view .LVU7263
 21260              	.LBB1151:
1159:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21261              		.loc 1 1159 5 view .LVU7264
 21262              	.LBB1152:
 21263              	.LBI1152:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21264              		.loc 3 105 1 view .LVU7265
 21265              	.LBB1153:
 21266              		.loc 3 107 3 view .LVU7266
 21267              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21268              		.loc 3 107 10 is_stmt 0 view .LVU7267
 21269 0c2b 498B5F38 		mov	rbx, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 56B], MEM[(struc
 21270 0c2f 488D3500 		lea	rsi, .LC51[rip]	#,
GAS LISTING /tmp/ccgH0yRS.s 			page 566


 21270      000000
 21271 0c36 C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 80B], MEM[(s
 21271      4750
 21272 0c3c BF010000 		mov	edi, 1	#,
 21272      00
 21273 0c41 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 16B], MEM[(struc
 21274 0c45 B8030000 		mov	eax, 3	#,
 21274      00
 21275 0c4a 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 8B], MEM[(struct 
 21276 0c4e 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_239 + 56B]
 21276      18
 21277 0c53 4D8B5748 		mov	r10, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 72B], MEM[(struc
 21278 0c57 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[(struct tuning_result_type *)tuning_result_239 + 72B]
 21278      10
 21279 0c5c 4D8B5F30 		mov	r11, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 48B], MEM[(struc
 21280 0c60 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_239 + 48B]
 21280      08
 21281 0c65 4D8B4F28 		mov	r9, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 40B], MEM[(struct
 21282 0c69 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_239 + 40B]
 21283 0c6d 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 32B]
 21284 0c71 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 24B]
 21285 0c75 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 88B]
 21285      5758
 21286 0c7b C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 64B]
 21286      4F40
 21287 0c81 E8000000 		call	__printf_chk@PLT	#
 21287      00
 21288              	.LVL1290:
 21289              		.loc 3 107 10 view .LVU7268
 21290              	.LBE1153:
 21291              	.LBE1152:
 21292              	.LBE1151:
 21293              	.LBE1150:
1261:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 21294              		.loc 1 1261 13 is_stmt 1 view .LVU7269
 21295              	# sieve_extend.c:1261:             if (option_verboselevel >= 3) {
1261:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 21296              		.loc 1 1261 16 is_stmt 0 view .LVU7270
 21297 0c86 837C2458 		cmp	DWORD PTR 88[rsp], 2	# %sfp,
 21297      02
 21298 0c8b 0F8407FD 		je	.L1780	#,
 21298      FFFF
 21299 0c91 498D5F08 		lea	rbx, 8[r15]	# ivtmp.779,
 21300              	.LBB1154:
 21301              	# sieve_extend.c:1262:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1262:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21302              		.loc 1 1262 32 view .LVU7271
 21303 0c95 31ED     		xor	ebp, ebp	# tuning_result_index
 21304              	.L1781:
 21305              	.LVL1291:
1263:sieve_extend.c ****                 }
 21306              		.loc 1 1263 21 is_stmt 1 view .LVU7272
 21307              	.LBB1137:
 21308              	.LBI1137:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21309              		.loc 3 105 1 view .LVU7273
 21310              	.LBB1138:
GAS LISTING /tmp/ccgH0yRS.s 			page 567


 21311              		.loc 3 107 3 view .LVU7274
 21312              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21313              		.loc 3 107 10 is_stmt 0 view .LVU7275
 21314 0c97 488D3500 		lea	rsi, .LC56[rip]	#,
 21314      000000
 21315 0c9e BF010000 		mov	edi, 1	#,
 21315      00
 21316 0ca3 31C0     		xor	eax, eax	#
 21317              	.LBE1138:
 21318              	.LBE1137:
 21319              	# sieve_extend.c:1262:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1262:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21320              		.loc 1 1262 118 view .LVU7276
 21321 0ca5 4883C501 		add	rbp, 1	# tuning_result_index,
 21322              	.LVL1292:
 21323              	.LBB1140:
 21324              	.LBB1139:
 21325              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21326              		.loc 3 107 10 view .LVU7277
 21327 0ca9 E8000000 		call	__printf_chk@PLT	#
 21327      00
 21328              	.LVL1293:
 21329              		.loc 3 107 10 view .LVU7278
 21330              	.LBE1139:
 21331              	.LBE1140:
1263:sieve_extend.c ****                 }
 21332              		.loc 1 1263 36 is_stmt 1 view .LVU7279
 21333              	.LBB1141:
 21334              	.LBI1141:
1158:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21335              		.loc 1 1158 20 view .LVU7280
 21336              	.LBB1142:
1159:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21337              		.loc 1 1159 5 view .LVU7281
 21338              	.LBB1143:
 21339              	.LBI1143:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21340              		.loc 3 105 1 view .LVU7282
 21341              	.LBB1144:
 21342              		.loc 3 107 3 view .LVU7283
 21343              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21344              		.loc 3 107 10 is_stmt 0 view .LVU7284
 21345 0cae 488B7B30 		mov	rdi, QWORD PTR 48[rbx]	# MEM[base: _158, offset: 48B], MEM[base: _158, offset: 48B]
 21346 0cb2 4883C360 		add	rbx, 96	# ivtmp.779,
 21347 0cb6 488B4BA8 		mov	rcx, QWORD PTR -88[rbx]	# MEM[base: _158, offset: 8B], MEM[base: _158, offset: 8B]
 21348 0cba C5FB1043 		vmovsd	xmm0, QWORD PTR -24[rbx]	# MEM[base: _158, offset: 72B], MEM[base: _158, offset: 72B]
 21348      E8
 21349 0cbf 48897C24 		mov	QWORD PTR 24[rsp], rdi	#, MEM[base: _158, offset: 48B]
 21349      18
 21350 0cc4 BF010000 		mov	edi, 1	#,
 21350      00
 21351 0cc9 488B43E0 		mov	rax, QWORD PTR -32[rbx]	# MEM[base: _158, offset: 64B], MEM[base: _158, offset: 64B]
 21352 0ccd 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[base: _158, offset: 64B]
 21352      10
 21353 0cd2 B8030000 		mov	eax, 3	#,
 21353      00
 21354 0cd7 488B53C8 		mov	rdx, QWORD PTR -56[rbx]	# MEM[base: _158, offset: 40B], MEM[base: _158, offset: 40B]
GAS LISTING /tmp/ccgH0yRS.s 			page 568


 21355 0cdb 48895424 		mov	QWORD PTR 8[rsp], rdx	#, MEM[base: _158, offset: 40B]
 21355      08
 21356 0ce0 488B73C0 		mov	rsi, QWORD PTR -64[rbx]	# MEM[base: _158, offset: 32B], MEM[base: _158, offset: 32B]
 21357 0ce4 48893424 		mov	QWORD PTR [rsp], rsi	#, MEM[base: _158, offset: 32B]
 21358 0ce8 488D3500 		lea	rsi, .LC51[rip]	#,
 21358      000000
 21359 0cef 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _158, offset: 24B]
 21360 0cf3 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _158, offset: 16B]
 21361 0cf7 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _158, offset: 0B]
 21362 0cfb C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _158, offset: 80B]
 21362      F0
 21363 0d00 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _158, offset: 56B]
 21363      D8
 21364 0d05 E8000000 		call	__printf_chk@PLT	#
 21364      00
 21365              	.LVL1294:
 21366              		.loc 3 107 10 view .LVU7285
 21367              	.LBE1144:
 21368              	.LBE1143:
 21369              	.LBE1142:
 21370              	.LBE1141:
1262:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21371              		.loc 1 1262 99 is_stmt 1 view .LVU7286
1262:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21372              		.loc 1 1262 55 view .LVU7287
 21373              	# sieve_extend.c:1262:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1262:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21374              		.loc 1 1262 75 is_stmt 0 view .LVU7288
 21375 0d0a 4983FD0A 		cmp	r13, 10	# tuning_results,
 21376 0d0e B90A0000 		mov	ecx, 10	# tmp422,
 21376      00
 21377 0d13 490F46CD 		cmovbe	rcx, r13	# tuning_results,, tmp422
 21378              	# sieve_extend.c:1262:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1262:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21379              		.loc 1 1262 17 view .LVU7289
 21380 0d17 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp422
 21381 0d1a 0F8277FF 		jb	.L1781	#,
 21381      FFFF
 21382 0d20 E973FCFF 		jmp	.L1780	#
 21382      FF
 21383              	.LVL1295:
 21384              	.L1872:
1262:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 21385              		.loc 1 1262 17 view .LVU7290
 21386              	.LBE1154:
 21387              	.LBE1099:
 21388              	.LBE1098:
 21389              	.LBE1097:
1356:sieve_extend.c ****     }
 21390              		.loc 1 1356 39 is_stmt 1 view .LVU7291
 21391              	.LBB1173:
 21392              	.LBI1173:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21393              		.loc 3 105 1 view .LVU7292
 21394              	.LBB1174:
 21395              		.loc 3 107 3 view .LVU7293
 21396              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccgH0yRS.s 			page 569


 21397              		.loc 3 107 10 is_stmt 0 view .LVU7294
 21398 0d25 488D3D00 		lea	rdi, .LC48[rip]	#,
 21398      000000
 21399              	.LBE1174:
 21400              	.LBE1173:
 21401              	# sieve_extend.c:1359:     counter_t best_blocksize_bits = default_blocksize;
1359:sieve_extend.c ****     if (option_tunelevel) {
 21402              		.loc 1 1359 15 view .LVU7295
 21403 0d2c 41BE00FC 		mov	r14d, 261120	# best_result$blocksize_bits,
 21403      0300
 21404              	.LBB1176:
 21405              	.LBB1175:
 21406              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21407              		.loc 3 107 10 view .LVU7296
 21408 0d32 E8000000 		call	puts@PLT	#
 21408      00
 21409              	.LVL1296:
 21410              		.loc 3 107 10 view .LVU7297
 21411              	.LBE1175:
 21412              	.LBE1176:
1359:sieve_extend.c ****     if (option_tunelevel) {
 21413              		.loc 1 1359 5 is_stmt 1 view .LVU7298
1360:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21414              		.loc 1 1360 5 view .LVU7299
 21415              	# sieve_extend.c:1360:     if (option_tunelevel) {
1360:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21416              		.loc 1 1360 9 is_stmt 0 view .LVU7300
 21417 0d37 448B8424 		mov	r8d, DWORD PTR 156[rsp]	# option_tunelevel.40_62, option_tunelevel
 21417      9C000000 
 21418              	# sieve_extend.c:1360:     if (option_tunelevel) {
1360:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 21419              		.loc 1 1360 8 view .LVU7301
 21420 0d3f 4585C0   		test	r8d, r8d	# option_tunelevel.40_62
 21421 0d42 0F857D01 		jne	.L1879	#,
 21421      0000
 21422              	.LVL1297:
 21423              	.L1759:
 21424              	.LBB1177:
1370:sieve_extend.c ****         counter_t passes = 0;
 21425              		.loc 1 1370 9 is_stmt 1 view .LVU7302
 21426              	# sieve_extend.c:1370:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1370:sieve_extend.c ****         counter_t passes = 0;
 21427              		.loc 1 1370 12 is_stmt 0 view .LVU7303
 21428 0d48 83BC2498 		cmp	DWORD PTR 152[rsp], 0	# option_verboselevel,
 21428      00000000 
 21429 0d50 0F8E98F6 		jle	.L1786	#,
 21429      FFFF
1370:sieve_extend.c ****         counter_t passes = 0;
 21430              		.loc 1 1370 39 is_stmt 1 discriminator 1 view .LVU7304
 21431              	.LVL1298:
 21432              	.LBB1083:
 21433              	.LBI1083:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21434              		.loc 3 105 1 discriminator 1 view .LVU7305
 21435              	.LBB1084:
 21436              		.loc 3 107 3 discriminator 1 view .LVU7306
 21437              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
GAS LISTING /tmp/ccgH0yRS.s 			page 570


 21438              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU7307
 21439 0d56 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
 21439      000000
 21440 0d5d 4C89F2   		mov	rdx, r14	#, best_result$blocksize_bits
 21441 0d60 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 21441      000000
 21442 0d67 488D3500 		lea	rsi, .LC58[rip]	#,
 21442      000000
 21443 0d6e 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 21443      000000
 21444 0d75 BF010000 		mov	edi, 1	#,
 21444      00
 21445 0d7a 31C0     		xor	eax, eax	#
 21446 0d7c E8000000 		call	__printf_chk@PLT	#
 21446      00
 21447              	.LVL1299:
 21448 0d81 E968F6FF 		jmp	.L1786	#
 21448      FF
 21449              	.LVL1300:
 21450              	.L1878:
 21451              		.loc 3 107 10 discriminator 1 view .LVU7308
 21452              	.LBE1084:
 21453              	.LBE1083:
 21454              	.LBE1177:
 21455              	.LBB1178:
 21456              	.LBB1170:
 21457              	.LBB1167:
1276:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21458              		.loc 1 1276 5 is_stmt 1 view .LVU7309
 21459              	# sieve_extend.c:1276:     tuning_result_type best_result = tuning_result[0];
1276:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21460              		.loc 1 1276 24 is_stmt 0 view .LVU7310
 21461 0d86 4D8B7708 		mov	r14, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 21462              	.LVL1301:
 21463              	# sieve_extend.c:1277:     if (option_verboselevel >= 1) {
1277:sieve_extend.c ****         tuning_result_index = 0;
 21464              		.loc 1 1277 8 view .LVU7311
 21465 0d8a 837C2458 		cmp	DWORD PTR 88[rsp], 0	# %sfp,
 21465      00
 21466              	# sieve_extend.c:1276:     tuning_result_type best_result = tuning_result[0];
1276:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21467              		.loc 1 1276 24 view .LVU7312
 21468 0d8f 4D8B6F20 		mov	r13, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 21469              	.LVL1302:
1276:sieve_extend.c ****     if (option_verboselevel >= 1) {
 21470              		.loc 1 1276 24 view .LVU7313
 21471 0d93 498B6F28 		mov	rbp, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 21472 0d97 498B5F30 		mov	rbx, QWORD PTR 48[r15]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
1277:sieve_extend.c ****         tuning_result_index = 0;
 21473              		.loc 1 1277 5 is_stmt 1 view .LVU7314
 21474              	# sieve_extend.c:1277:     if (option_verboselevel >= 1) {
1277:sieve_extend.c ****         tuning_result_index = 0;
 21475              		.loc 1 1277 8 is_stmt 0 view .LVU7315
 21476 0d9b 7E6E     		jle	.L1784	#,
1278:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 21477              		.loc 1 1278 9 is_stmt 1 view .LVU7316
 21478              	.LVL1303:
GAS LISTING /tmp/ccgH0yRS.s 			page 571


1279:sieve_extend.c ****     }
 21479              		.loc 1 1279 9 view .LVU7317
 21480              	.LBB1155:
 21481              	.LBI1155:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21482              		.loc 3 105 1 view .LVU7318
 21483              	.LBB1156:
 21484              		.loc 3 107 3 view .LVU7319
 21485              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21486              		.loc 3 107 10 is_stmt 0 view .LVU7320
 21487 0d9d 488D3500 		lea	rsi, .LC57[rip]	#,
 21487      000000
 21488 0da4 BF010000 		mov	edi, 1	#,
 21488      00
 21489 0da9 31C0     		xor	eax, eax	#
 21490 0dab E8000000 		call	__printf_chk@PLT	#
 21490      00
 21491              	.LVL1304:
 21492              		.loc 3 107 10 view .LVU7321
 21493              	.LBE1156:
 21494              	.LBE1155:
1279:sieve_extend.c ****     }
 21495              		.loc 1 1279 34 is_stmt 1 view .LVU7322
 21496              	.LBB1157:
 21497              	.LBI1157:
1158:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 21498              		.loc 1 1158 20 view .LVU7323
 21499              	.LBB1158:
1159:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 21500              		.loc 1 1159 5 view .LVU7324
 21501              	.LBB1159:
 21502              	.LBI1159:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21503              		.loc 3 105 1 view .LVU7325
 21504              	.LBB1160:
 21505              		.loc 3 107 3 view .LVU7326
 21506              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21507              		.loc 3 107 10 is_stmt 0 view .LVU7327
 21508 0db0 4D8B5738 		mov	r10, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 56B], MEM[(struc
 21509 0db4 488D3500 		lea	rsi, .LC51[rip]	#,
 21509      000000
 21510 0dbb C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 80B], MEM[(s
 21510      4750
 21511 0dc1 B8030000 		mov	eax, 3	#,
 21511      00
 21512 0dc6 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 16B], MEM[(struc
 21513 0dca 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 8B], MEM[(struct 
 21514 0dce 4C895424 		mov	QWORD PTR 24[rsp], r10	#, MEM[(struct tuning_result_type *)tuning_result_239 + 56B]
 21514      18
 21515 0dd3 4D8B5F48 		mov	r11, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 72B], MEM[(struc
 21516 0dd7 4C895C24 		mov	QWORD PTR 16[rsp], r11	#, MEM[(struct tuning_result_type *)tuning_result_239 + 72B]
 21516      10
 21517 0ddc 4D8B4F30 		mov	r9, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 48B], MEM[(struct
 21518 0de0 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_239 + 48B]
 21518      08
 21519 0de5 498B7F28 		mov	rdi, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_239 + 40B], MEM[(struc
 21520 0de9 48893C24 		mov	QWORD PTR [rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_239 + 40B]
GAS LISTING /tmp/ccgH0yRS.s 			page 572


 21521 0ded BF010000 		mov	edi, 1	#,
 21521      00
 21522 0df2 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 32B]
 21523 0df6 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 24B]
 21524 0dfa C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 88B]
 21524      5758
 21525 0e00 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_239 + 64B]
 21525      4F40
 21526 0e06 E8000000 		call	__printf_chk@PLT	#
 21526      00
 21527              	.LVL1305:
 21528              	.L1784:
 21529              		.loc 3 107 10 view .LVU7328
 21530              	.LBE1160:
 21531              	.LBE1159:
 21532              	.LBE1158:
 21533              	.LBE1157:
1282:sieve_extend.c ****     return best_result;
 21534              		.loc 1 1282 5 is_stmt 1 view .LVU7329
 21535 0e0b 4C89FF   		mov	rdi, r15	#, tuning_result
 21536 0e0e E8000000 		call	free@PLT	#
 21536      00
 21537              	.LVL1306:
1283:sieve_extend.c **** }
 21538              		.loc 1 1283 5 view .LVU7330
1283:sieve_extend.c **** }
 21539              		.loc 1 1283 5 is_stmt 0 view .LVU7331
 21540              	.LBE1167:
 21541              	.LBE1170:
1362:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 21542              		.loc 1 1362 9 is_stmt 1 view .LVU7332
 21543              	# sieve_extend.c:1362:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1362:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 21544              		.loc 1 1362 33 is_stmt 0 view .LVU7333
 21545 0e13 4C892D00 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r13	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 21545      000000
1363:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 21546              		.loc 1 1363 9 is_stmt 1 view .LVU7334
 21547              	.LBE1178:
 21548              	# sieve_extend.c:1369:     if (best_blocksize_bits > 0) {
1369:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21549              		.loc 1 1369 8 is_stmt 0 view .LVU7335
 21550 0e1a 4D85F6   		test	r14, r14	# best_result$blocksize_bits
 21551              	.LBB1179:
 21552              	# sieve_extend.c:1363:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1363:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 21553              		.loc 1 1363 34 view .LVU7336
 21554 0e1d 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 21554      000000
1364:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 21555              		.loc 1 1364 9 is_stmt 1 view .LVU7337
 21556              	# sieve_extend.c:1364:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1364:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 21557              		.loc 1 1364 34 is_stmt 0 view .LVU7338
 21558 0e24 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 21558      000000
1365:sieve_extend.c ****     }
GAS LISTING /tmp/ccgH0yRS.s 			page 573


 21559              		.loc 1 1365 9 is_stmt 1 view .LVU7339
 21560              	.LVL1307:
1365:sieve_extend.c ****     }
 21561              		.loc 1 1365 9 is_stmt 0 view .LVU7340
 21562              	.LBE1179:
1368:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 21563              		.loc 1 1368 5 is_stmt 1 view .LVU7341
1369:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21564              		.loc 1 1369 5 view .LVU7342
 21565              	# sieve_extend.c:1369:     if (best_blocksize_bits > 0) {
1369:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21566              		.loc 1 1369 8 is_stmt 0 view .LVU7343
 21567 0e2b 0F8411F7 		je	.L1785	#,
 21567      FFFF
 21568 0e31 E912FFFF 		jmp	.L1759	#
 21568      FF
 21569              	.LVL1308:
 21570              	.L1794:
1369:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21571              		.loc 1 1369 8 view .LVU7344
 21572 0e36 488D3D00 		lea	rdi, CSWTCH.128[rip]	# tmp337,
 21572      000000
 21573 0e3d 4C8D0D00 		lea	r9, CSWTCH.129[rip]	# tmp339,
 21573      000000
 21574 0e44 488D2D00 		lea	rbp, CSWTCH.130[rip]	# tmp341,
 21574      000000
 21575              	.LVL1309:
1369:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21576              		.loc 1 1369 8 view .LVU7345
 21577 0e4b 488D1D00 		lea	rbx, CSWTCH.131[rip]	# tmp343,
 21577      000000
 21578              	.LVL1310:
1369:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21579              		.loc 1 1369 8 view .LVU7346
 21580 0e52 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.128
 21581 0e56 4F8B24C1 		mov	r12, QWORD PTR [r9+r8*8]	# vectorstep_faster_steps, CSWTCH.129
 21582 0e5a 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# freebits_steps, CSWTCH.130
 21582      00
 21583              	.LVL1311:
1369:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 21584              		.loc 1 1369 8 view .LVU7347
 21585 0e5f C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.131
 21585      3CC3
 21586 0e65 48898C24 		mov	QWORD PTR 136[rsp], rcx	# %sfp, smallstep_faster_steps
 21586      88000000 
 21587 0e6d 4C89A424 		mov	QWORD PTR 128[rsp], r12	# %sfp, vectorstep_faster_steps
 21587      80000000 
 21588 0e75 4C897C24 		mov	QWORD PTR 96[rsp], r15	# %sfp, freebits_steps
 21588      60
 21589              	.LBB1180:
 21590              	# sieve_extend.c:1295:     for (int arg=1; arg < argc; arg++) {
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 21591              		.loc 1 1295 14 view .LVU7348
 21592 0e7a 48C74424 		mov	QWORD PTR 104[rsp], 8	# %sfp,
 21592      68080000 
 21592      00
 21593 0e83 C5FB117C 		vmovsd	QWORD PTR 112[rsp], xmm7	# %sfp, sample_duration
GAS LISTING /tmp/ccgH0yRS.s 			page 574


 21593      2470
 21594              	.L1760:
 21595              	.LVL1312:
1295:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 21596              		.loc 1 1295 14 view .LVU7349
 21597              	.LBE1180:
 21598              	.LBB1181:
 21599              	.LBB1171:
 21600              	.LBB1168:
1209:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21601              		.loc 1 1209 5 is_stmt 1 view .LVU7350
 21602              	# sieve_extend.c:1209:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1209:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21603              		.loc 1 1209 8 is_stmt 0 view .LVU7351
 21604 0e89 448B6C24 		mov	r13d, DWORD PTR 88[rsp]	# option_verboselevel.41_63, %sfp
 21604      58
 21605              	.LVL1313:
1209:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21606              		.loc 1 1209 8 view .LVU7352
 21607 0e8e 4585ED   		test	r13d, r13d	# option_verboselevel.41_63
 21608 0e91 0F8E43F8 		jle	.L1762	#,
 21608      FFFF
1209:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21609              		.loc 1 1209 35 is_stmt 1 view .LVU7353
 21610              	.LVL1314:
 21611              	.LBB1161:
 21612              	.LBI1161:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21613              		.loc 3 105 1 view .LVU7354
 21614              	.LBB1162:
 21615              		.loc 3 107 3 view .LVU7355
 21616              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21617              		.loc 3 107 10 is_stmt 0 view .LVU7356
 21618 0e97 31C0     		xor	eax, eax	#
 21619 0e99 488D3500 		lea	rsi, .LC49[rip]	#,
 21619      000000
 21620 0ea0 BF010000 		mov	edi, 1	#,
 21620      00
 21621              	.LBE1162:
 21622              	.LBE1161:
 21623              	# sieve_extend.c:1209:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
1209:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21624              		.loc 1 1209 59 view .LVU7357
 21625 0ea5 4489EB   		mov	ebx, r13d	# option_verboselevel.41_63, option_verboselevel.41_63
 21626              	.LBB1164:
 21627              	.LBB1163:
 21628              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21629              		.loc 3 107 10 view .LVU7358
 21630 0ea8 E8000000 		call	__printf_chk@PLT	#
 21630      00
 21631              	.LVL1315:
 21632              		.loc 3 107 10 view .LVU7359
 21633              	.LBE1163:
 21634              	.LBE1164:
1209:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21635              		.loc 1 1209 56 is_stmt 1 view .LVU7360
 21636              	# sieve_extend.c:1209:     if (option_verboselevel >= 1) printf("Tuning..."); if (option_verboselev
GAS LISTING /tmp/ccgH0yRS.s 			page 575


1209:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21637              		.loc 1 1209 59 is_stmt 0 view .LVU7361
 21638 0ead 83EB01   		sub	ebx, 1	# option_verboselevel.41_63,
 21639 0eb0 0F8424F8 		je	.L1762	#,
 21639      FFFF
1209:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 21640              		.loc 1 1209 86 is_stmt 1 view .LVU7362
 21641              	.LVL1316:
 21642              	.LBB1165:
 21643              	.LBI1165:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21644              		.loc 3 105 1 view .LVU7363
 21645              	.LBB1166:
 21646              		.loc 3 107 3 view .LVU7364
 21647              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 21648              		.loc 3 107 10 is_stmt 0 view .LVU7365
 21649 0eb6 BF0A0000 		mov	edi, 10	#,
 21649      00
 21650 0ebb E8000000 		call	putchar@PLT	#
 21650      00
 21651              	.LVL1317:
 21652 0ec0 E915F8FF 		jmp	.L1762	#
 21652      FF
 21653              	.LVL1318:
 21654              	.L1879:
 21655              		.loc 3 107 10 view .LVU7366
 21656              	.LBE1166:
 21657              	.LBE1165:
 21658              	.LBE1168:
 21659              	.LBE1171:
1361:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 21660              		.loc 1 1361 9 is_stmt 1 view .LVU7367
 21661              	# sieve_extend.c:1361:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1361:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 21662              		.loc 1 1361 44 is_stmt 0 view .LVU7368
 21663 0ec5 8B942498 		mov	edx, DWORD PTR 152[rsp]	# option_verboselevel.41_63, option_verboselevel
 21663      000000
 21664 0ecc 4183E801 		sub	r8d, 1	#,
 21665 0ed0 488BB424 		mov	rsi, QWORD PTR 160[rsp]	# option_maxFactor.42_64, option_maxFactor
 21665      A0000000 
 21666 0ed8 4183F802 		cmp	r8d, 2	# _212,
 21667 0edc 89542458 		mov	DWORD PTR 88[rsp], edx	# %sfp, option_verboselevel.41_63
 21668 0ee0 48897424 		mov	QWORD PTR 120[rsp], rsi	# %sfp, option_maxFactor.42_64
 21668      78
 21669              	.LVL1319:
 21670              	.LBB1172:
1166:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 21671              		.loc 1 1166 27 is_stmt 1 view .LVU7369
 21672              	.LBB1169:
1167:sieve_extend.c **** 
 21673              		.loc 1 1167 5 view .LVU7370
1169:sieve_extend.c ****     best_blocksize_bits = 0;
 21674              		.loc 1 1169 5 view .LVU7371
1170:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 21675              		.loc 1 1170 5 view .LVU7372
1171:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 21676              		.loc 1 1171 5 view .LVU7373
GAS LISTING /tmp/ccgH0yRS.s 			page 576


1172:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 21677              		.loc 1 1172 5 view .LVU7374
1173:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 21678              		.loc 1 1173 5 view .LVU7375
1174:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 21679              		.loc 1 1174 5 view .LVU7376
1175:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 21680              		.loc 1 1175 5 view .LVU7377
1176:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 21681              		.loc 1 1176 5 view .LVU7378
1177:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 21682              		.loc 1 1177 5 view .LVU7379
1178:sieve_extend.c ****     double sample_duration = default_sample_duration;
 21683              		.loc 1 1178 5 view .LVU7380
1179:sieve_extend.c **** 
 21684              		.loc 1 1179 5 view .LVU7381
1182:sieve_extend.c ****         case 1:
 21685              		.loc 1 1182 5 view .LVU7382
 21686 0ee5 0F864BFF 		jbe	.L1794	#,
 21686      FFFF
 21687 0eeb C5FB1005 		vmovsd	xmm0, QWORD PTR .LC26[rip]	# sample_duration,
 21687      00000000 
 21688 0ef3 48C74424 		mov	QWORD PTR 104[rsp], 5	# %sfp,
 21688      68050000 
 21688      00
 21689 0efc 48C74424 		mov	QWORD PTR 96[rsp], 128	# %sfp,
 21689      60800000 
 21689      00
 21690 0f05 48C78424 		mov	QWORD PTR 128[rsp], 32	# %sfp,
 21690      80000000 
 21690      20000000 
 21691 0f11 48C78424 		mov	QWORD PTR 136[rsp], 4	# %sfp,
 21691      88000000 
 21691      04000000 
 21692 0f1d C5FB1144 		vmovsd	QWORD PTR 112[rsp], xmm0	# %sfp, sample_duration
 21692      2470
 21693 0f23 E961FFFF 		jmp	.L1760	#
 21693      FF
 21694              	.LVL1320:
 21695              	.L1865:
1182:sieve_extend.c ****         case 1:
 21696              		.loc 1 1182 5 is_stmt 0 view .LVU7383
 21697              	.LBE1169:
 21698              	.LBE1172:
 21699              	.LBE1181:
 21700              	.LBB1182:
1298:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 21701              		.loc 1 1298 34 is_stmt 1 discriminator 1 view .LVU7384
 21702              	.LBB1020:
 21703              	.LBI1020:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21704              		.loc 3 98 1 discriminator 1 view .LVU7385
 21705              	.LBB1021:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21706              		.loc 3 100 3 discriminator 1 view .LVU7386
 21707              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccgH0yRS.s 			page 577


 21708              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7387
 21709 0f28 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21709      000000
 21710 0f2f BA1B0000 		mov	edx, 27	#,
 21710      00
 21711 0f34 BE010000 		mov	esi, 1	#,
 21711      00
 21712 0f39 488D3D00 		lea	rdi, .LC30[rip]	#,
 21712      000000
 21713 0f40 E8000000 		call	fwrite@PLT	#
 21713      00
 21714              	.LVL1321:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21715              		.loc 3 100 10 discriminator 1 view .LVU7388
 21716              	.LBE1021:
 21717              	.LBE1020:
1298:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 21718              		.loc 1 1298 83 is_stmt 1 discriminator 1 view .LVU7389
 21719 0f45 E967F6FF 		jmp	.L1863	#
 21719      FF
 21720              	.L1743:
1308:sieve_extend.c ****             }
 21721              		.loc 1 1308 17 view .LVU7390
 21722              	.LVL1322:
 21723              	.LBB1022:
 21724              	.LBI1017:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21725              		.loc 3 98 1 view .LVU7391
 21726              	.LBB1019:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21727              		.loc 3 100 3 view .LVU7392
 21728              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21729              		.loc 3 100 10 is_stmt 0 view .LVU7393
 21730 0f4a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 21731 0f4d 488D1500 		lea	rdx, .LC37[rip]	#,
 21731      000000
 21732 0f54 E945F6FF 		jmp	.L1862	#
 21732      FF
 21733              	.LVL1323:
 21734              	.L1747:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21735              		.loc 3 100 10 view .LVU7394
 21736              	.LBE1019:
 21737              	.LBE1022:
1315:sieve_extend.c ****             }
 21738              		.loc 1 1315 17 is_stmt 1 view .LVU7395
 21739              	.LBB1023:
 21740              	.LBI1023:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21741              		.loc 3 98 1 view .LVU7396
 21742              	.LBB1024:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21743              		.loc 3 100 3 view .LVU7397
 21744              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21745              		.loc 3 100 10 is_stmt 0 view .LVU7398
GAS LISTING /tmp/ccgH0yRS.s 			page 578


 21746 0f59 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 21747 0f5c 488D1500 		lea	rdx, .LC42[rip]	#,
 21747      000000
 21748 0f63 E936F6FF 		jmp	.L1862	#
 21748      FF
 21749              	.LVL1324:
 21750              	.L1868:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21751              		.loc 3 100 10 view .LVU7399
 21752              	.LBE1024:
 21753              	.LBE1023:
1306:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21754              		.loc 1 1306 34 is_stmt 1 discriminator 1 view .LVU7400
 21755              	.LBB1025:
 21756              	.LBI1025:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21757              		.loc 3 98 1 discriminator 1 view .LVU7401
 21758              	.LBB1026:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21759              		.loc 3 100 3 discriminator 1 view .LVU7402
 21760              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21761              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7403
 21762 0f68 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21762      000000
 21763 0f6f 488D3D00 		lea	rdi, .LC36[rip]	#,
 21763      000000
 21764 0f76 BA180000 		mov	edx, 24	#,
 21764      00
 21765 0f7b BE010000 		mov	esi, 1	#,
 21765      00
 21766 0f80 E8000000 		call	fwrite@PLT	#
 21766      00
 21767              	.LVL1325:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21768              		.loc 3 100 10 discriminator 1 view .LVU7404
 21769              	.LBE1026:
 21770              	.LBE1025:
1306:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21771              		.loc 1 1306 80 is_stmt 1 discriminator 1 view .LVU7405
 21772 0f85 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 21773 0f89 E8000000 		call	usage	#
 21773      00
 21774              	.LVL1326:
 21775              	.L1876:
1306:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 21776              		.loc 1 1306 80 is_stmt 0 discriminator 1 view .LVU7406
 21777              	.LBE1182:
 21778              	# sieve_extend.c:1394: }
 21779              		.loc 1 1394 1 view .LVU7407
 21780 0f8e E8000000 		call	__stack_chk_fail@PLT	#
 21780      00
 21781              	.LVL1327:
 21782              	.L1871:
 21783              	.LBB1183:
1313:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 21784              		.loc 1 1313 34 is_stmt 1 discriminator 1 view .LVU7408
GAS LISTING /tmp/ccgH0yRS.s 			page 579


 21785              	.LBB1027:
 21786              	.LBI1027:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 21787              		.loc 3 98 1 discriminator 1 view .LVU7409
 21788              	.LBB1028:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21789              		.loc 3 100 3 discriminator 1 view .LVU7410
 21790              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21791              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU7411
 21792 0f93 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 21792      000000
 21793 0f9a 488D3D00 		lea	rdi, .LC40[rip]	#,
 21793      000000
 21794 0fa1 BA1A0000 		mov	edx, 26	#,
 21794      00
 21795 0fa6 BE010000 		mov	esi, 1	#,
 21795      00
 21796 0fab E8000000 		call	fwrite@PLT	#
 21796      00
 21797              	.LVL1328:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 21798              		.loc 3 100 10 discriminator 1 view .LVU7412
 21799              	.LBE1028:
 21800              	.LBE1027:
1313:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 21801              		.loc 1 1313 82 is_stmt 1 discriminator 1 view .LVU7413
 21802 0fb0 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_159(D)
 21803 0fb4 E8000000 		call	usage	#
 21803      00
 21804              	.LVL1329:
 21805              	.LBE1183:
 21806              		.cfi_endproc
 21807              	.LFE85:
 21809              		.section	.rodata
 21810              		.align 16
 21813              	CSWTCH.131:
 21814 0000 9A999999 		.long	2576980378
 21815 0004 9999B93F 		.long	1069128089
 21816 0008 9A999999 		.long	2576980378
 21817 000c 9999C93F 		.long	1070176665
 21818 0010 9A999999 		.long	2576980378
 21819 0014 9999C93F 		.long	1070176665
 21820 0018 00000000 		.align 16
 21820      00000000 
 21823              	CSWTCH.130:
 21824 0020 00080000 		.quad	2048
 21824      00000000 
 21825 0028 00040000 		.quad	1024
 21825      00000000 
 21826 0030 40000000 		.quad	64
 21826      00000000 
 21827 0038 00000000 		.align 16
 21827      00000000 
 21830              	CSWTCH.129:
 21831 0040 20000000 		.quad	32
 21831      00000000 
GAS LISTING /tmp/ccgH0yRS.s 			page 580


 21832 0048 10000000 		.quad	16
 21832      00000000 
 21833 0050 04000000 		.quad	4
 21833      00000000 
 21834 0058 00000000 		.align 16
 21834      00000000 
 21837              	CSWTCH.128:
 21838 0060 10000000 		.quad	16
 21838      00000000 
 21839 0068 08000000 		.quad	8
 21839      00000000 
 21840 0070 04000000 		.quad	4
 21840      00000000 
 21841              		.globl	debug_hitpoint
 21842              		.bss
 21843              		.align 32
 21846              	debug_hitpoint:
 21847 0000 00000000 		.zero	40
 21847      00000000 
 21847      00000000 
 21847      00000000 
 21847      00000000 
 21848              		.globl	global_VECTORSTEP_FASTER
 21849              		.data
 21850              		.align 8
 21853              	global_VECTORSTEP_FASTER:
 21854 0000 80000000 		.quad	128
 21854      00000000 
 21855              		.globl	global_MEDIUMSTEP_FASTER
 21856              		.bss
 21857              		.align 8
 21860              	global_MEDIUMSTEP_FASTER:
 21861 0028 00000000 		.zero	8
 21861      00000000 
 21862              		.globl	global_SMALLSTEP_FASTER
 21863              		.align 8
 21866              	global_SMALLSTEP_FASTER:
 21867 0030 00000000 		.zero	8
 21867      00000000 
 21868              		.section	.rodata.cst32,"aM",@progbits,32
 21869              		.align 32
 21870              	.LC0:
 21871 0000 00000000 		.quad	0
 21871      00000000 
 21872 0008 01000000 		.quad	1
 21872      00000000 
 21873 0010 02000000 		.quad	2
 21873      00000000 
 21874 0018 03000000 		.quad	3
 21874      00000000 
 21875              		.align 32
 21876              	.LC1:
 21877 0020 08000000 		.quad	8
 21877      00000000 
 21878 0028 08000000 		.quad	8
 21878      00000000 
 21879 0030 08000000 		.quad	8
GAS LISTING /tmp/ccgH0yRS.s 			page 581


 21879      00000000 
 21880 0038 08000000 		.quad	8
 21880      00000000 
 21881              		.align 32
 21882              	.LC2:
 21883 0040 04000000 		.quad	4
 21883      00000000 
 21884 0048 04000000 		.quad	4
 21884      00000000 
 21885 0050 04000000 		.quad	4
 21885      00000000 
 21886 0058 04000000 		.quad	4
 21886      00000000 
 21887              		.align 32
 21888              	.LC3:
 21889 0060 3F000000 		.long	63
 21890 0064 3F000000 		.long	63
 21891 0068 3F000000 		.long	63
 21892 006c 3F000000 		.long	63
 21893 0070 3F000000 		.long	63
 21894 0074 3F000000 		.long	63
 21895 0078 3F000000 		.long	63
 21896 007c 3F000000 		.long	63
 21897              		.section	.rodata.cst8,"aM",@progbits,8
 21898              		.align 8
 21899              	.LC7:
 21900 0000 00000000 		.long	0
 21901 0004 0000F87F 		.long	2146959360
 21902              		.align 8
 21903              	.LC8:
 21904 0008 95D626E8 		.long	3894859413
 21905 000c 0B2E113E 		.long	1041313291
 21906              		.align 8
 21907              	.LC26:
 21908 0010 9A999999 		.long	2576980378
 21909 0014 9999B93F 		.long	1069128089
 21910              		.align 8
 21911              	.LC59:
 21912 0018 00000000 		.long	0
 21913 001c 00001440 		.long	1075052544
 21914              		.text
 21915              	.Letext0:
 21916              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 21917              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 21918              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 21919              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 21920              		.file 8 "/usr/include/stdio.h"
 21921              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 21922              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 21923              		.file 11 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 21924              		.file 12 "/usr/include/stdint.h"
 21925              		.file 13 "/usr/include/time.h"
 21926              		.file 14 "/usr/include/math.h"
 21927              		.file 15 "/usr/include/stdlib.h"
 21928              		.file 16 "<built-in>"
 50044              		.section	.note.gnu.property,"a"
 50045              		.align 8
GAS LISTING /tmp/ccgH0yRS.s 			page 582


 50046 0000 04000000 		.long	 1f - 0f
 50047 0004 10000000 		.long	 4f - 1f
 50048 0008 05000000 		.long	 5
 50049              	0:
 50050 000c 474E5500 		.string	 "GNU"
 50051              	1:
 50052              		.align 8
 50053 0010 020000C0 		.long	 0xc0000002
 50054 0014 04000000 		.long	 3f - 2f
 50055              	2:
 50056 0018 03000000 		.long	 0x3
 50057              	3:
 50058 001c 00000000 		.align 8
 50059              	4:
GAS LISTING /tmp/ccgH0yRS.s 			page 583


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccgH0yRS.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccgH0yRS.s:21870  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccgH0yRS.s:21876  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccgH0yRS.s:21882  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccgH0yRS.s:21888  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccgH0yRS.s:1228   .text:00000000000006c0 extendSieve_shiftright_ivdep
     /tmp/ccgH0yRS.s:3232   .text:00000000000014f0 compare_tuning_result
     /tmp/ccgH0yRS.s:3258   .text:0000000000001510 setBitsTrue_largeRange_vector
     /tmp/ccgH0yRS.s:5422   .text:00000000000020d0 extendSieve_aligned
     /tmp/ccgH0yRS.s:6311   .text:0000000000002650 extendSieve_shiftleft
     /tmp/ccgH0yRS.s:9279   .text:0000000000003950 show_primes.isra.0
     /tmp/ccgH0yRS.s:9274   .rodata.str1.1:0000000000000006 .LC5
     /tmp/ccgH0yRS.s:9272   .rodata.str1.1:0000000000000000 .LC4
     /tmp/ccgH0yRS.s:9686   .text:0000000000003af0 sieve
     /tmp/ccgH0yRS.s:21866  .bss:0000000000000030 global_SMALLSTEP_FASTER
     /tmp/ccgH0yRS.s:21860  .bss:0000000000000028 global_MEDIUMSTEP_FASTER
     /tmp/ccgH0yRS.s:21853  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccgH0yRS.s:16289  .text:00000000000057b0 tune_benchmark
     /tmp/ccgH0yRS.s:21899  .rodata.cst8:0000000000000000 .LC7
     /tmp/ccgH0yRS.s:21903  .rodata.cst8:0000000000000008 .LC8
     /tmp/ccgH0yRS.s:16506  .text:00000000000058f0 shiftvec
     /tmp/ccgH0yRS.s:17668  .text:0000000000005cb0 validatePrimeCount
     /tmp/ccgH0yRS.s:17649  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccgH0yRS.s:17655  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccgH0yRS.s:17659  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccgH0yRS.s:17652  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccgH0yRS.s:17662  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccgH0yRS.s:18922  .text:0000000000006440 usage
     /tmp/ccgH0yRS.s:18882  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccgH0yRS.s:18885  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccgH0yRS.s:18889  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccgH0yRS.s:18892  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccgH0yRS.s:18895  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccgH0yRS.s:18898  .rodata.str1.8:0000000000000220 .LC19
     /tmp/ccgH0yRS.s:18901  .rodata.str1.8:0000000000000250 .LC20
     /tmp/ccgH0yRS.s:18904  .rodata.str1.8:0000000000000290 .LC21
     /tmp/ccgH0yRS.s:18907  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/ccgH0yRS.s:18910  .rodata.str1.8:0000000000000320 .LC23
     /tmp/ccgH0yRS.s:18913  .rodata.str1.8:0000000000000348 .LC24
     /tmp/ccgH0yRS.s:18916  .rodata.str1.8:0000000000000378 .LC25
     /tmp/ccgH0yRS.s:19253  .text.startup:0000000000000000 main
     /tmp/ccgH0yRS.s:19161  .rodata.str1.1:000000000000004a .LC28
     /tmp/ccgH0yRS.s:19163  .rodata.str1.1:0000000000000051 .LC29
     /tmp/ccgH0yRS.s:19167  .rodata.str1.1:0000000000000077 .LC31
     /tmp/ccgH0yRS.s:19174  .rodata.str1.1:000000000000007a .LC33
     /tmp/ccgH0yRS.s:19176  .rodata.str1.1:0000000000000093 .LC34
     /tmp/ccgH0yRS.s:19178  .rodata.str1.1:000000000000009b .LC35
     /tmp/ccgH0yRS.s:19187  .rodata.str1.1:00000000000000bb .LC38
     /tmp/ccgH0yRS.s:19206  .rodata.str1.1:000000000000013a .LC46
     /tmp/ccgH0yRS.s:19204  .rodata.str1.1:0000000000000121 .LC45
     /tmp/ccgH0yRS.s:19189  .rodata.str1.1:00000000000000d1 .LC39
     /tmp/ccgH0yRS.s:19193  .rodata.str1.1:00000000000000f3 .LC41
     /tmp/ccgH0yRS.s:19200  .rodata.str1.1:00000000000000f7 .LC43
     /tmp/ccgH0yRS.s:19202  .rodata.str1.1:0000000000000110 .LC44
     /tmp/ccgH0yRS.s:19208  .rodata.str1.1:000000000000014a .LC47
GAS LISTING /tmp/ccgH0yRS.s 			page 584


     /tmp/ccgH0yRS.s:21911  .rodata.cst8:0000000000000018 .LC59
     /tmp/ccgH0yRS.s:19241  .rodata.str1.8:0000000000000538 .LC60
     /tmp/ccgH0yRS.s:19159  .rodata.str1.1:000000000000003b .LC27
     /tmp/ccgH0yRS.s:19171  .rodata.str1.8:00000000000003b0 .LC32
     /tmp/ccgH0yRS.s:19247  .rodata.str1.1:000000000000019e .LC62
     /tmp/ccgH0yRS.s:19244  .rodata.str1.8:0000000000000580 .LC61
     /tmp/ccgH0yRS.s:21907  .rodata.cst8:0000000000000010 .LC26
     /tmp/ccgH0yRS.s:19221  .rodata.str1.1:0000000000000173 .LC52
     /tmp/ccgH0yRS.s:19218  .rodata.str1.8:0000000000000420 .LC51
     /tmp/ccgH0yRS.s:19225  .rodata.str1.8:00000000000004a8 .LC53
     /tmp/ccgH0yRS.s:19228  .rodata.str1.1:0000000000000178 .LC54
     /tmp/ccgH0yRS.s:19214  .rodata.str1.1:000000000000016e .LC50
     /tmp/ccgH0yRS.s:19230  .rodata.str1.1:0000000000000185 .LC55
     /tmp/ccgH0yRS.s:19232  .rodata.str1.1:000000000000018c .LC56
     /tmp/ccgH0yRS.s:19210  .rodata.str1.1:0000000000000151 .LC48
     /tmp/ccgH0yRS.s:19238  .rodata.str1.8:0000000000000500 .LC58
     /tmp/ccgH0yRS.s:19234  .rodata.str1.1:0000000000000190 .LC57
     /tmp/ccgH0yRS.s:21837  .rodata:0000000000000060 CSWTCH.128
     /tmp/ccgH0yRS.s:21830  .rodata:0000000000000040 CSWTCH.129
     /tmp/ccgH0yRS.s:21823  .rodata:0000000000000020 CSWTCH.130
     /tmp/ccgH0yRS.s:21813  .rodata:0000000000000000 CSWTCH.131
     /tmp/ccgH0yRS.s:19212  .rodata.str1.1:0000000000000164 .LC49
     /tmp/ccgH0yRS.s:19165  .rodata.str1.1:000000000000005b .LC30
     /tmp/ccgH0yRS.s:19184  .rodata.str1.8:00000000000003d8 .LC37
     /tmp/ccgH0yRS.s:19197  .rodata.str1.8:00000000000003f8 .LC42
     /tmp/ccgH0yRS.s:19180  .rodata.str1.1:00000000000000a2 .LC36
     /tmp/ccgH0yRS.s:19191  .rodata.str1.1:00000000000000d8 .LC40
     /tmp/ccgH0yRS.s:21846  .bss:0000000000000000 debug_hitpoint

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
