GAS LISTING /tmp/ccfflXEb.s 			page 1


   1              		.file	"sieve_extend.c"
   2              		.intel_syntax noprefix
   3              	# GNU C17 (Ubuntu 9.4.0-1ubuntu1~20.04.1) version 9.4.0 (x86_64-linux-gnu)
   4              	#	compiled by GNU C version 9.4.0, GMP version 6.2.0, MPFR version 4.0.2, MPC version 1.1.0, isl ve
   5              	
   6              	# GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
   7              	# options passed:  -imultiarch x86_64-linux-gnu sieve_extend.c
   8              	# -march=skylake -mmmx -mno-3dnow -msse -msse2 -msse3 -mssse3 -mno-sse4a
   9              	# -mcx16 -msahf -mmovbe -maes -mno-sha -mpclmul -mpopcnt -mabm -mno-lwp
  10              	# -mfma -mno-fma4 -mno-xop -mbmi -mno-sgx -mbmi2 -mno-pconfig -mno-wbnoinvd
  11              	# -mno-tbm -mavx2 -msse4.2 -msse4.1 -mlzcnt -mrtm -mhle -mrdrnd -mf16c
  12              	# -mfsgsbase -mrdseed -mprfchw -madx -mfxsr -mxsave -mxsaveopt -mno-avx512f
  13              	# -mno-avx512er -mno-avx512cd -mno-avx512pf -mno-prefetchwt1 -mclflushopt
  14              	# -mxsavec -mxsaves -mno-avx512dq -mno-avx512bw -mno-avx512vl
  15              	# -mno-avx512ifma -mno-avx512vbmi -mno-avx5124fmaps -mno-avx5124vnniw
  16              	# -mno-clwb -mno-mwaitx -mno-clzero -mno-pku -mno-rdpid -mno-gfni
  17              	# -mno-shstk -mno-avx512vbmi2 -mno-avx512vnni -mno-vaes -mno-vpclmulqdq
  18              	# -mno-avx512bitalg -mno-avx512vpopcntdq -mno-movdiri -mno-movdir64b
  19              	# -mno-waitpkg -mno-cldemote -mno-ptwrite -mtune=intel -masm=intel
  20              	# -malign-data=cacheline -mavx -g -Ofast -Wextra -Wall -Wno-unused-function
  21              	# -funroll-all-loops -fno-asynchronous-unwind-tables -fno-exceptions
  22              	# -fverbose-asm -fstack-protector-strong -Wformat-security
  23              	# -fstack-clash-protection -fcf-protection
  24              	# options enabled:  -fPIC -fPIE -faggressive-loop-optimizations
  25              	# -falign-functions -falign-jumps -falign-labels -falign-loops
  26              	# -fassociative-math -fassume-phsa -fauto-inc-dec -fbranch-count-reg
  27              	# -fcaller-saves -fcode-hoisting -fcombine-stack-adjustments -fcommon
  28              	# -fcompare-elim -fcprop-registers -fcrossjumping -fcse-follow-jumps
  29              	# -fcx-limited-range -fdefer-pop -fdelete-null-pointer-checks
  30              	# -fdevirtualize -fdevirtualize-speculatively -fdwarf2-cfi-asm
  31              	# -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  32              	# -ffinite-math-only -fforward-propagate -ffp-int-builtin-inexact
  33              	# -ffunction-cse -fgcse -fgcse-after-reload -fgcse-lm -fgnu-runtime
  34              	# -fgnu-unique -fguess-branch-probability -fhoist-adjacent-loads -fident
  35              	# -fif-conversion -fif-conversion2 -findirect-inlining -finline
  36              	# -finline-atomics -finline-functions -finline-functions-called-once
  37              	# -finline-small-functions -fipa-bit-cp -fipa-cp -fipa-cp-clone -fipa-icf
  38              	# -fipa-icf-functions -fipa-icf-variables -fipa-profile -fipa-pure-const
  39              	# -fipa-ra -fipa-reference -fipa-reference-addressable -fipa-sra
  40              	# -fipa-stack-alignment -fipa-vrp -fira-hoist-pressure
  41              	# -fira-share-save-slots -fira-share-spill-slots
  42              	# -fisolate-erroneous-paths-dereference -fivopts -fkeep-static-consts
  43              	# -fleading-underscore -flifetime-dse -floop-interchange
  44              	# -floop-unroll-and-jam -flra-remat -flto-odr-type-merging
  45              	# -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  46              	# -fomit-frame-pointer -foptimize-sibling-calls -foptimize-strlen
  47              	# -fpartial-inlining -fpeel-loops -fpeephole -fpeephole2 -fplt
  48              	# -fpredictive-commoning -fprefetch-loop-arrays -freciprocal-math -free
  49              	# -freg-struct-return -frename-registers -freorder-blocks
  50              	# -freorder-blocks-and-partition -freorder-functions -frerun-cse-after-loop
  51              	# -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  52              	# -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  53              	# -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  54              	# -fsched-stalled-insns-dep -fschedule-fusion -fschedule-insns2
  55              	# -fsemantic-interposition -fshow-column -fshrink-wrap
  56              	# -fshrink-wrap-separate -fsplit-ivs-in-unroller -fsplit-loops
  57              	# -fsplit-paths -fsplit-wide-types -fssa-backprop -fssa-phiopt
GAS LISTING /tmp/ccfflXEb.s 			page 2


  58              	# -fstack-clash-protection -fstack-protector-strong -fstdarg-opt
  59              	# -fstore-merging -fstrict-aliasing -fstrict-volatile-bitfields
  60              	# -fsync-libcalls -fthread-jumps -ftoplevel-reorder -ftree-bit-ccp
  61              	# -ftree-builtin-call-dce -ftree-ccp -ftree-ch -ftree-coalesce-vars
  62              	# -ftree-copy-prop -ftree-cselim -ftree-dce -ftree-dominator-opts
  63              	# -ftree-dse -ftree-forwprop -ftree-fre -ftree-loop-distribute-patterns
  64              	# -ftree-loop-distribution -ftree-loop-if-convert -ftree-loop-im
  65              	# -ftree-loop-ivcanon -ftree-loop-optimize -ftree-loop-vectorize
  66              	# -ftree-parallelize-loops= -ftree-partial-pre -ftree-phiprop -ftree-pre
  67              	# -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  68              	# -ftree-slp-vectorize -ftree-slsr -ftree-sra -ftree-switch-conversion
  69              	# -ftree-tail-merge -ftree-ter -ftree-vrp -funit-at-a-time
  70              	# -funroll-all-loops -funroll-loops -funsafe-math-optimizations
  71              	# -funswitch-loops -fvar-tracking -fvar-tracking-assignments -fverbose-asm
  72              	# -fversion-loops-for-strides -fweb -fzero-initialized-in-bss
  73              	# -m128bit-long-double -m64 -m80387 -mabm -maccumulate-outgoing-args -madx
  74              	# -maes -malign-stringops -mavx -mavx2 -mbmi -mbmi2 -mclflushopt -mcx16
  75              	# -mf16c -mfancy-math-387 -mfma -mfp-ret-in-387 -mfsgsbase -mfxsr -mglibc
  76              	# -mhle -mlong-double-80 -mlzcnt -mmmx -mmovbe -mpclmul -mpopcnt -mprfchw
  77              	# -mpush-args -mrdrnd -mrdseed -mred-zone -mrtm -msahf -msse -msse2 -msse3
  78              	# -msse4 -msse4.1 -msse4.2 -mssse3 -mstv -mtls-direct-seg-refs -mvzeroupper
  79              	# -mxsave -mxsavec -mxsaveopt -mxsaves
  80              	
  81              		.text
  82              	.Ltext0:
  83              		.cfi_sections	.debug_frame
  84              		.p2align 4
  86              	extendSieve_smallSize:
  87              	.LVL0:
  88              	.LFB66:
  89              		.file 1 "sieve_extend.c"
   1:sieve_extend.c **** // SIeve alogithm by Rogier van Dam
   2:sieve_extend.c **** 
   3:sieve_extend.c **** // TODO; Check why vector is not working with range > 1000000
   4:sieve_extend.c **** 
   5:sieve_extend.c **** #include <stdio.h>
   6:sieve_extend.c **** #include <stdlib.h>
   7:sieve_extend.c **** #include <stdint.h>
   8:sieve_extend.c **** #include <time.h>
   9:sieve_extend.c **** #include <math.h>
  10:sieve_extend.c **** #include <string.h>
  11:sieve_extend.c **** 
  12:sieve_extend.c **** //add debug in front of a line to only compile it if the value below is set to 1 (or !=0)
  13:sieve_extend.c **** #define option_runonce 0
  14:sieve_extend.c **** #define debug if (option_runonce)
  15:sieve_extend.c **** #define debug2 if (option_runonce>=2)
  16:sieve_extend.c **** 
  17:sieve_extend.c **** // defaults
  18:sieve_extend.c **** #define default_sieve_limit 1000000
  19:sieve_extend.c **** #define default_blocksize (32*1024*8)
  20:sieve_extend.c **** #define default_sieve_duration 5
  21:sieve_extend.c **** #define default_sample_duration 0.1
  22:sieve_extend.c **** #define default_sample_max 5
  23:sieve_extend.c **** #define default_verbose_level 2
  24:sieve_extend.c **** #define default_tune_level 0
  25:sieve_extend.c **** #define default_check_level 1
  26:sieve_extend.c **** #define default_show_primes_on_error 100
GAS LISTING /tmp/ccfflXEb.s 			page 3


  27:sieve_extend.c **** #define default_showMaxFactor (0 || option_runonce?100:0)
  28:sieve_extend.c **** #define anticiped_cache_line_bytesize 128
  29:sieve_extend.c **** 
  30:sieve_extend.c **** // helper functions
  31:sieve_extend.c **** #define pow(base,pow) (pow*((base>>pow)&1U))
  32:sieve_extend.c **** #define min(a,b) ((a<b) ? a : b)
  33:sieve_extend.c **** #define uintsafeminus(a,b) ((a>b)?(a-b):0)
  34:sieve_extend.c **** #define likely(x)       (__builtin_expect((x),1))
  35:sieve_extend.c **** #define unlikely(x)     (__builtin_expect((x),0))
  36:sieve_extend.c **** 
  37:sieve_extend.c **** // types
  38:sieve_extend.c **** #define bitword_t uint64_t
  39:sieve_extend.c **** #define TYPE uint64_t
  40:sieve_extend.c **** #define counter_t TYPE
  41:sieve_extend.c **** #define bitshift_t TYPE
  42:sieve_extend.c **** 
  43:sieve_extend.c **** // masks and mask helpers
  44:sieve_extend.c **** #define WORD_SIZE (sizeof(bitword_t)*8)
  45:sieve_extend.c **** #define WORD_SIZE_counter ((counter_t)WORD_SIZE)
  46:sieve_extend.c **** #define WORD_SIZE_bitshift ((bitshift_t)WORD_SIZE)
  47:sieve_extend.c **** #define SHIFT_WORD ((bitshift_t)(pow(WORD_SIZE,1)+pow(WORD_SIZE,2)+pow(WORD_SIZE,3)+pow(WORD_SIZE,4
  48:sieve_extend.c **** #define VECTOR_ELEMENTS 4
  49:sieve_extend.c **** #define VECTOR_SIZE_bytes (sizeof(bitword_t)*VECTOR_ELEMENTS)
  50:sieve_extend.c **** #define VECTOR_SIZE_counter ((counter_t)VECTOR_SIZE_bytes*8)
  51:sieve_extend.c **** #define VECTOR_SIZE (VECTOR_SIZE_bytes*8)
  52:sieve_extend.c **** #define SHIFT_VECTOR ((bitshift_t)(pow(VECTOR_SIZE,1)+pow(VECTOR_SIZE,2)+pow(VECTOR_SIZE,3)+pow(VEC
  53:sieve_extend.c **** 
  54:sieve_extend.c **** // types (II) - calculated
  55:sieve_extend.c **** typedef bitword_t bitvector_t __attribute__ ((vector_size(VECTOR_SIZE_bytes)));
  56:sieve_extend.c **** 
  57:sieve_extend.c **** // globals for tuning
  58:sieve_extend.c **** // #define SMALLSTEP_FASTER ((counter_t)0)
  59:sieve_extend.c **** // #define MEDIUMSTEP_FASTER ((counter_t)16)
  60:sieve_extend.c **** // #define VECTORSTEP_FASTER ((counter_t)128)
  61:sieve_extend.c **** counter_t global_SMALLSTEP_FASTER = 0;
  62:sieve_extend.c **** counter_t global_MEDIUMSTEP_FASTER = 0;
  63:sieve_extend.c **** counter_t global_VECTORSTEP_FASTER = 96;
  64:sieve_extend.c **** #define SMALLSTEP_FASTER ((counter_t)global_SMALLSTEP_FASTER)
  65:sieve_extend.c **** #define MEDIUMSTEP_FASTER ((counter_t)global_MEDIUMSTEP_FASTER)
  66:sieve_extend.c **** #define VECTORSTEP_FASTER ((counter_t)global_VECTORSTEP_FASTER)
  67:sieve_extend.c **** 
  68:sieve_extend.c **** // Patterns based on types
  69:sieve_extend.c **** #define SAFE_SHIFTBIT (bitshift_t)1U
  70:sieve_extend.c **** #define SAFE_ZERO  (bitword_t)0U
  71:sieve_extend.c **** #define BITWORD_SHIFTBIT (bitword_t)1U
  72:sieve_extend.c **** #define WORDMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_WORD))
  73:sieve_extend.c **** #define VECTORMASK ((~SAFE_ZERO)>>(WORD_SIZE_bitshift-SHIFT_VECTOR))
  74:sieve_extend.c **** 
  75:sieve_extend.c **** // helpder functions for word/vector indexing
  76:sieve_extend.c **** #define wordindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_WORD)
  77:sieve_extend.c **** #define wordend(index) ((counter_t)index|WORDMASK)
  78:sieve_extend.c **** #define wordstart(index) ((counter_t)(index)&(counter_t)(~WORDMASK))
  79:sieve_extend.c **** #define vectorindex(index) (((counter_t)index) >> (bitshift_t)SHIFT_VECTOR)
  80:sieve_extend.c **** #define vectorstart(index) (((counter_t)index) & (counter_t)~VECTORMASK)
  81:sieve_extend.c **** #define vectorfromword(word) ((counter_t)(word)>>(SHIFT_VECTOR-SHIFT_WORD))
  82:sieve_extend.c **** #define wordinvector(index) ((counter_t)(index) & (counter_t)VECTORMASK)
  83:sieve_extend.c **** 
GAS LISTING /tmp/ccfflXEb.s 			page 4


  84:sieve_extend.c **** // modern processors do a & over the shiftssize, so we only have to do that ourselve when using the
  85:sieve_extend.c **** #define bitindex(index) ((bitshift_t)(index))
  86:sieve_extend.c **** #define bitindex_calc(index) ((bitshift_t)(index)&((bitshift_t)(WORDMASK)))
  87:sieve_extend.c **** #define markmask(index) (BITWORD_SHIFTBIT << bitindex(index))
  88:sieve_extend.c **** #define markmask_calc(index) (BITWORD_SHIFTBIT << bitindex_calc(index))
  89:sieve_extend.c **** // #define chopmask(index) ((SAFE_SHIFTBIT << bitindex(index))-SAFE_SHIFTBIT)
  90:sieve_extend.c **** #define chopmask(index) (~SAFE_ZERO >> (WORD_SIZE-1-bitindex_calc(index)))
  91:sieve_extend.c **** #define keepmask(index) (~SAFE_ZERO << (bitindex_calc(index)))
  92:sieve_extend.c **** 
  93:sieve_extend.c **** struct sieve_t {
  94:sieve_extend.c ****     bitword_t* bitstorage;
  95:sieve_extend.c ****     counter_t  bits;
  96:sieve_extend.c ****     counter_t  size;
  97:sieve_extend.c **** };
  98:sieve_extend.c **** 
  99:sieve_extend.c **** #include "debugtools.h"
 100:sieve_extend.c **** 
 101:sieve_extend.c **** // use cache lines as much as possible - alignment might be key
 102:sieve_extend.c **** // moved clearing the sieve with 0 to the sieve_block_extend - it gave weird malloc problems at thi
 103:sieve_extend.c **** #define ceiling(x,y) (((x) + (y) - 1) / (y)) // Return the smallest multiple N of y such that:  x <
 104:sieve_extend.c **** static struct sieve_t *sieve_create(counter_t size) {
 105:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 106:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 107:sieve_extend.c ****     sieve->bits     = size >> 1;
 108:sieve_extend.c ****     sieve->size     = size;
 109:sieve_extend.c ****     return sieve;
 110:sieve_extend.c **** }
 111:sieve_extend.c **** 
 112:sieve_extend.c **** static void sieve_delete(struct sieve_t *sieve) {
 113:sieve_extend.c ****     free(sieve->bitstorage);
 114:sieve_extend.c ****     free(sieve);
 115:sieve_extend.c **** }
 116:sieve_extend.c **** 
 117:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 118:sieve_extend.c **** static inline counter_t searchBitFalse(bitword_t* bitstorage, register counter_t index) {
 119:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 120:sieve_extend.c ****     return index;
 121:sieve_extend.c **** }
 122:sieve_extend.c **** 
 123:sieve_extend.c **** // not much performance gain at smaller sieves, but its's nice to have an implementation
 124:sieve_extend.c **** static inline counter_t searchBitFalse_longRange(bitword_t* bitstorage, register counter_t index) {
 125:sieve_extend.c ****    const bitshift_t index_bit  = bitindex_calc(index);
 126:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 127:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 128:sieve_extend.c ****    index += distance;
 129:sieve_extend.c ****    distance += index_bit;
 130:sieve_extend.c **** 
 131:sieve_extend.c ****    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from optimzer
 132:sieve_extend.c ****        index_word++;
 133:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 134:sieve_extend.c ****        index += distance;
 135:sieve_extend.c ****    }
 136:sieve_extend.c **** 
 137:sieve_extend.c ****    return index;
 138:sieve_extend.c **** }
 139:sieve_extend.c **** 
 140:sieve_extend.c **** 
GAS LISTING /tmp/ccfflXEb.s 			page 5


 141:sieve_extend.c **** static inline void applyMask_array(bitword_t* __restrict bitstorage, const counter_t step, const co
 142:sieve_extend.c ****     register const counter_t step_2 = step * 2;
 143:sieve_extend.c ****     register const counter_t step_3 = step * 3;
 144:sieve_extend.c ****     register const counter_t step_4 = step * 4;
 145:sieve_extend.c ****     register const counter_t range_stop_word = wordindex(range_stop);
 146:sieve_extend.c ****     const counter_t loop_stop_word = (range_stop_word > step_3) ? (range_stop_word - step_3) : (cou
 147:sieve_extend.c **** 
 148:sieve_extend.c ****     #pragma GCC ivdep
 149:sieve_extend.c ****     for (;index_word < loop_stop_word;  index_word += step_4) {
 150:sieve_extend.c ****         bitstorage[index_word         ] |= mask;
 151:sieve_extend.c ****         bitstorage[index_word + step  ] |= mask;
 152:sieve_extend.c ****         bitstorage[index_word + step_2] |= mask;
 153:sieve_extend.c ****         bitstorage[index_word + step_3] |= mask;
 154:sieve_extend.c ****     }
 155:sieve_extend.c **** 
 156:sieve_extend.c ****     #pragma GCC ivdep
 157:sieve_extend.c ****     while (index_word < range_stop_word) {
 158:sieve_extend.c ****         bitstorage[index_word] |= mask;
 159:sieve_extend.c ****         index_word += step;
 160:sieve_extend.c ****     }
 161:sieve_extend.c **** 
 162:sieve_extend.c ****     if (index_word == wordindex(range_stop)) {
 163:sieve_extend.c ****         bitstorage[wordindex(range_stop)] |= (mask & chopmask(range_stop)); //only needed if blocks
 164:sieve_extend.c ****         
 165:sieve_extend.c ****     }
 166:sieve_extend.c **** }
 167:sieve_extend.c **** 
 168:sieve_extend.c **** static inline void applyMask_ptr(bitword_t* __restrict bitstorage, const counter_t step, const coun
 169:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 170:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 171:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 172:sieve_extend.c **** 
 173:sieve_extend.c ****    //#pragma GCC unroll 10
 174:sieve_extend.c ****    #pragma GCC ivdep
 175:sieve_extend.c ****    while likely(index_ptr < fast_loop_ptr) {
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 181:sieve_extend.c ****    }
 182:sieve_extend.c **** 
 183:sieve_extend.c ****    register const bitword_t* __restrict range_stop_ptr = &bitstorage[(range_stop_word)];
 184:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 185:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 186:sieve_extend.c ****    }
 187:sieve_extend.c **** 
 188:sieve_extend.c ****    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range_stop_ptr, depending o
 189:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 190:sieve_extend.c ****    }
 191:sieve_extend.c **** }
 192:sieve_extend.c **** 
 193:sieve_extend.c **** // set bits by creating a pattern and then extending it to word and range size
 194:sieve_extend.c **** static inline void setBitsTrue_smallStep(bitword_t* __restrict bitstorage, const counter_t range_st
 195:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using smallstep (%ju occurances)
 196:sieve_extend.c **** 
 197:sieve_extend.c ****     // build the pattern in a word
GAS LISTING /tmp/ccfflXEb.s 			page 6


 198:sieve_extend.c **** 	register bitword_t pattern = BITWORD_SHIFTBIT;
 199:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 200:sieve_extend.c ****         pattern |= (pattern << patternsize);
 201:sieve_extend.c **** 
 202:sieve_extend.c ****     // initialize loop variables and stop if this is it
 203:sieve_extend.c ****     const counter_t range_stop_word = wordindex(range_stop);
 204:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 205:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 206:sieve_extend.c ****        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 207:sieve_extend.c ****        return;
 208:sieve_extend.c ****     }
 209:sieve_extend.c ****   
 210:sieve_extend.c ****     bitstorage[range_start_word] |= (pattern << bitindex(range_start));
 211:sieve_extend.c **** 
 212:sieve_extend.c ****    // from now on, we are before range_stop_word
 213:sieve_extend.c ****    // first word is special, because it should not set bits before the range_start_bit
 214:sieve_extend.c ****    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshift % step);
 215:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 216:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 217:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 218:sieve_extend.c ****    #pragma GCC ivdep
 219:sieve_extend.c ****    for (counter_t i=1; i <= loop_range; ++i) {
 220:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 221:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 222:sieve_extend.c ****    }
 223:sieve_extend.c ****    bitstorage[range_stop_word] &= chopmask(range_stop);
 224:sieve_extend.c **** }
 225:sieve_extend.c **** 
 226:sieve_extend.c **** // Medium steps could be within the same word (e.g. less than 64 bits apart).
 227:sieve_extend.c **** // By joining the masks and then writing to memory, we might save some time.
 228:sieve_extend.c **** // This is especially true for small steps over long ranges
 229:sieve_extend.c **** // but it needs tuning, because there is some overhead of checking if the next step is in the same 
 230:sieve_extend.c **** static void  setBitsTrue_mediumStep(bitword_t* __restrict bitstorage, const counter_t range_start, 
 231:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 232:sieve_extend.c **** 
 233:sieve_extend.c ****     if (range_stop_unique > range_stop) { // the range will not repeat itself; no need to try to re
 234:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 235:sieve_extend.c **** 
 236:sieve_extend.c ****         #pragma GCC ivdep
 237:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop;) {
 238:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 239:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 240:sieve_extend.c ****             #pragma GCC ivdep
 241:sieve_extend.c ****             do {
 242:sieve_extend.c ****                 mask |= markmask(index);
 243:sieve_extend.c ****                 index += step;
 244:sieve_extend.c ****             } while (index_word == wordindex(index));
 245:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 246:sieve_extend.c ****             //     mask |= markmask(index);
 247:sieve_extend.c ****             bitstorage[index_word] |= mask;
 248:sieve_extend.c ****         }
 249:sieve_extend.c ****     }
 250:sieve_extend.c ****     else { // this mask will reoccur at a interval of step words -> fill mask and reapply as a inte
 251:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-repeat (%ju
 252:sieve_extend.c ****         
 253:sieve_extend.c ****         #pragma GCC ivdep
 254:sieve_extend.c ****         for (register counter_t index = range_start; index <= range_stop_unique;) {
GAS LISTING /tmp/ccfflXEb.s 			page 7


 255:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 256:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 257:sieve_extend.c ****             #pragma GCC ivdep
 258:sieve_extend.c ****             do {
 259:sieve_extend.c ****                 mask |= markmask(index);
 260:sieve_extend.c ****                 index += step;
 261:sieve_extend.c ****             } while (index_word == wordindex(index));
 262:sieve_extend.c ****             // #pragma GCC ivdep
 263:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 264:sieve_extend.c ****             //     mask |= markmask(index);
 265:sieve_extend.c ****             #if __APPLE__
 266:sieve_extend.c ****                applyMask_array(bitstorage, step, range_stop, mask, index_word);
 267:sieve_extend.c ****             #else
 268:sieve_extend.c ****                applyMask_ptr(bitstorage, step, range_stop, mask, index_word);
 269:sieve_extend.c ****             #endif
 270:sieve_extend.c ****         }
 271:sieve_extend.c ****     }
 272:sieve_extend.c **** }
 273:sieve_extend.c **** 
 274:sieve_extend.c **** // large steps in small ranges (< WORD_SIZE * step) mean the mask is unique
 275:sieve_extend.c **** static inline void setBitsTrue_largeSteps(bitword_t* __restrict bitstorage, const counter_t range_s
 276:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 277:sieve_extend.c ****     
 278:sieve_extend.c ****     //#pragma GCC unroll 16
 279:sieve_extend.c ****     #pragma GCC ivdep
 280:sieve_extend.c ****     for (counter_t index = range_start; index <= range_stop; index += step) {
 281:sieve_extend.c ****         bitstorage[wordindex(index)] |= markmask(index);
 282:sieve_extend.c ****     }
 283:sieve_extend.c **** }
 284:sieve_extend.c **** 
 285:sieve_extend.c **** static inline void setBitsTrue_largeSteps_unroll(bitword_t* __restrict bitstorage, const counter_t 
 286:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largesteps (%ju occurances
 287:sieve_extend.c ****     
 288:sieve_extend.c ****     counter_t loop_iterations = (range_stop - range_start) / step;
 289:sieve_extend.c ****     //#pragma GCC unroll 16
 290:sieve_extend.c ****     #pragma GCC ivdep 
 291:sieve_extend.c ****     for (register counter_t i = 0; i <= loop_iterations; i++) {
 292:sieve_extend.c ****          bitstorage[wordindex(range_start+i*step)] |= markmask(range_start+i*step);
 293:sieve_extend.c ****     }
 294:sieve_extend.c **** }
 295:sieve_extend.c **** 
 296:sieve_extend.c **** 
 297:sieve_extend.c **** 
 298:sieve_extend.c **** // Large ranges (> WORD_SIZE * step) mean the same mask can be reused
 299:sieve_extend.c **** static inline void setBitsTrue_largeRange(bitword_t* __restrict bitstorage, const counter_t range_s
 300:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 301:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 302:sieve_extend.c **** 
 303:sieve_extend.c ****     //#pragma GCC unroll 16
 304:sieve_extend.c ****     #pragma GCC ivdep
 305:sieve_extend.c ****     for (register counter_t index = range_start; index < range_stop_unique; index += step) {
 306:sieve_extend.c ****         #if __APPLE__
 307:sieve_extend.c ****             applyMask_array(bitstorage, step, range_stop, markmask(index), wordindex(index));
 308:sieve_extend.c ****         #else
 309:sieve_extend.c ****             applyMask_ptr(bitstorage, step, range_stop, markmask(index), wordindex(index));
 310:sieve_extend.c ****         #endif
 311:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 8


 312:sieve_extend.c **** }
 313:sieve_extend.c **** 
 314:sieve_extend.c **** 
 315:sieve_extend.c **** static inline void applyMask_vector(bitvector_t* __restrict bitstorage, const counter_t step, const
 316:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 317:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 318:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 319:sieve_extend.c ****     
 320:sieve_extend.c ****     //#pragma GCC unroll 16
 321:sieve_extend.c ****     #pragma GCC ivdep
 322:sieve_extend.c ****     while likely(index_ptr < fast_loop_ptr) {
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 327:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 328:sieve_extend.c ****     }
 329:sieve_extend.c ****     
 330:sieve_extend.c ****     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_aligned(&bitstorage[(r
 331:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 332:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 333:sieve_extend.c ****     }
 334:sieve_extend.c **** }
 335:sieve_extend.c **** 
 336:sieve_extend.c **** 
 337:sieve_extend.c **** 
 338:sieve_extend.c **** static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitstorage_word, counter_t range_st
 339:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 340:sieve_extend.c **** 
 341:sieve_extend.c ****     counter_t range_start_atvector = vectorstart(range_start);
 342:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 343:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 344:sieve_extend.c **** 
 345:sieve_extend.c ****         range_start_atvector += VECTOR_SIZE; // find next vector
 346:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 347:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 348:sieve_extend.c **** 
 349:sieve_extend.c ****             for (counter_t index = range_start; index <= range_stop; index += step) 
 350:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 351:sieve_extend.c ****             return;                 
 352:sieve_extend.c ****         }
 353:sieve_extend.c **** 
 354:sieve_extend.c ****         debug2 printf("..Marking without vector until %ju\n",(uintmax_t)vectorstart(range_start));
 355:sieve_extend.c ****         #pragma GCC ivdep 
 356:sieve_extend.c ****         for (; range_start <= range_start_atvector; range_start += step) 
 357:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 358:sieve_extend.c ****     }
 359:sieve_extend.c ****     
 360:sieve_extend.c ****     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counter * step, range_stop);
 361:sieve_extend.c **** 
 362:sieve_extend.c ****     for (counter_t index = range_start; index < range_stop_unique;) {
 363:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 364:sieve_extend.c ****          const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD)
 365:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 366:sieve_extend.c **** 
 367:sieve_extend.c ****         register bitvector_t quadmask = { };
 368:sieve_extend.c **** 
GAS LISTING /tmp/ccfflXEb.s 			page 9


 369:sieve_extend.c ****         // build a quadmask
 370:sieve_extend.c ****         #pragma GCC ivdep 
 371:sieve_extend.c ****         do {
 372:sieve_extend.c ****             quadmask[word] |= markmask(index);
 373:sieve_extend.c ****             index += step;
 374:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 375:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 376:sieve_extend.c **** 
 377:sieve_extend.c ****         // use mask on all n*step multiples
 378:sieve_extend.c ****         // register counter_t current_vector = current_vector_start_word >> (SHIFT_VECTOR - SHIFT_W
 379:sieve_extend.c ****         bitvector_t* __restrict bitstorage_vector = __builtin_assume_aligned( (bitvector_t*) bitsto
 380:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 381:sieve_extend.c ****     }
 382:sieve_extend.c **** }
 383:sieve_extend.c **** 
 384:sieve_extend.c **** static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const counter_t source_start, c
  90              		.loc 1 384 155 view -0
  91              		.cfi_startproc
 385:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  92              		.loc 1 385 5 view .LVU1
 386:sieve_extend.c ****     // debug { printf("...At start. "); dump_bitstorage(bitstorage, 4); }
 387:sieve_extend.c **** 
 388:sieve_extend.c ****     const counter_t source_word = wordindex(source_start);
  93              		.loc 1 388 5 view .LVU2
 389:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
  94              		.loc 1 389 5 view .LVU3
  95              	# sieve_extend.c:384: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 384:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
  96              		.loc 1 384 155 is_stmt 0 view .LVU4
  97 0000 55       		push	rbp	#
  98              		.cfi_def_cfa_offset 16
  99              		.cfi_offset 6, -16
 100 0001 4989D1   		mov	r9, rdx	# size, tmp576
 101              	# sieve_extend.c:388:     const counter_t source_word = wordindex(source_start);
 388:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
 102              		.loc 1 388 21 view .LVU5
 103 0004 4889F0   		mov	rax, rsi	# source_word, source_start
 104              	# sieve_extend.c:384: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 384:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 105              		.loc 1 384 155 view .LVU6
 106 0007 4889E5   		mov	rbp, rsp	#,
 107              		.cfi_def_cfa_register 6
 108              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 109              		.loc 1 389 138 view .LVU7
 110 000a 89F2     		mov	edx, esi	# tmp334, source_start
 111              	.LVL1:
 112              	# sieve_extend.c:384: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 384:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 113              		.loc 1 384 155 view .LVU8
 114 000c 4157     		push	r15	#
 115              	# sieve_extend.c:388:     const counter_t source_word = wordindex(source_start);
 388:sieve_extend.c ****     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source_start)) | (bitstorage
 116              		.loc 1 388 21 view .LVU9
 117 000e 48C1E806 		shr	rax, 6	# source_word,
 118              	.LVL2:
 119              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 120              		.loc 1 389 138 view .LVU10
GAS LISTING /tmp/ccfflXEb.s 			page 10


 121 0012 83E23F   		and	edx, 63	# tmp334,
 122              	# sieve_extend.c:384: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 384:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 123              		.loc 1 384 155 view .LVU11
 124 0015 4156     		push	r14	#
 125              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 126              		.loc 1 389 137 view .LVU12
 127 0017 41B84000 		mov	r8d, 64	# tmp336,
 127      0000
 128              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 129              		.loc 1 389 171 view .LVU13
 130 001d 4589CB   		mov	r11d, r9d	# tmp342, size
 131              	# sieve_extend.c:384: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 384:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 132              		.loc 1 384 155 view .LVU14
 133 0020 4155     		push	r13	#
 134              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 135              		.loc 1 389 137 view .LVU15
 136 0022 4129D0   		sub	r8d, edx	# tmp335, tmp334
 137              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 138              		.loc 1 389 171 view .LVU16
 139 0025 41F7D3   		not	r11d	# tmp342
 140              	# sieve_extend.c:384: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 384:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 141              		.loc 1 384 155 view .LVU17
 142 0028 4154     		push	r12	#
 143              		.cfi_offset 15, -24
 144              		.cfi_offset 14, -32
 145              		.cfi_offset 13, -40
 146              		.cfi_offset 12, -48
 147              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 148              		.loc 1 389 171 view .LVU18
 149 002a 49C7C4FF 		mov	r12, -1	# tmp345,
 149      FFFFFF
 150 0031 C442A3F7 		shrx	r13, r12, r11	# tmp344, tmp345, tmp342
 150      EC
 151              	# sieve_extend.c:384: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 384:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 152              		.loc 1 384 155 view .LVU19
 153 0036 53       		push	rbx	#
 154              		.cfi_offset 3, -56
 155 0037 4889CB   		mov	rbx, rcx	# destination_stop, tmp577
 156              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 157              		.loc 1 389 60 view .LVU20
 158 003a 488B0CC7 		mov	rcx, QWORD PTR [rdi+rax*8]	# *_5, *_5
 159              	.LVL3:
 160              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 161              		.loc 1 389 116 view .LVU21
 162 003e C462B9F7 		shlx	r8, QWORD PTR 8[rdi+rax*8], r8	# tmp337, *_11, tmp335
 162      44C708
 163              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 164              		.loc 1 389 60 view .LVU22
 165 0045 C462CBF7 		shrx	r10, rcx, rsi	# tmp339, *_5, source_start
 165      D1
 166              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 167              		.loc 1 389 87 view .LVU23
 168 004a 4D09D0   		or	r8, r10	# tmp341, tmp339
GAS LISTING /tmp/ccfflXEb.s 			page 11


 169              	# sieve_extend.c:384: static void extendSieve_smallSize(bitword_t* __restrict bitstorage, const cou
 384:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using smallsize (%ju copies)\
 170              		.loc 1 384 155 view .LVU24
 171 004d 4883E4E0 		and	rsp, -32	#,
 172              	# sieve_extend.c:389:     register bitword_t pattern = ((bitstorage[source_word] >> bitindex(source
 173              		.loc 1 389 24 view .LVU25
 174 0051 4D21E8   		and	r8, r13	# pattern, tmp344
 175              	.LVL4:
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 176              		.loc 1 390 5 is_stmt 1 view .LVU26
 177              	.LBB311:
 178              		.loc 1 390 10 view .LVU27
 179              		.loc 1 390 54 view .LVU28
 180              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 181              		.loc 1 390 5 is_stmt 0 view .LVU29
 182 0054 4983F940 		cmp	r9, 64	# size,
 183 0058 0F87C200 		ja	.L2	#,
 183      0000
 184 005e 4D89CE   		mov	r14, r9	# pattern_size, size
 185              	.LVL5:
 186              	.L3:
 391:sieve_extend.c ****         pattern |= (pattern << pattern_size);
 187              		.loc 1 391 9 is_stmt 1 discriminator 3 view .LVU30
 188              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 189              		.loc 1 390 103 is_stmt 0 discriminator 3 view .LVU31
 190 0061 4B8D0436 		lea	rax, [r14+r14]	# pattern_size,
 191              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 192              		.loc 1 391 29 discriminator 3 view .LVU32
 193 0065 C44289F7 		shlx	r15, r8, r14	# _23, pattern, pattern_size
 193      F8
 194              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 195              		.loc 1 391 17 discriminator 3 view .LVU33
 196 006a 4D09F8   		or	r8, r15	# pattern, _23
 197              	.LVL6:
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 198              		.loc 1 390 90 is_stmt 1 discriminator 3 view .LVU34
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 199              		.loc 1 390 54 discriminator 3 view .LVU35
 200              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 201              		.loc 1 390 5 is_stmt 0 discriminator 3 view .LVU36
 202 006d 4883F840 		cmp	rax, 64	# pattern_size,
 203 0071 0F87A900 		ja	.L2	#,
 203      0000
 204              		.loc 1 391 9 is_stmt 1 view .LVU37
 205              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 206              		.loc 1 390 103 is_stmt 0 view .LVU38
 207 0077 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# pattern_size,
 207      00000000 
 208              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 209              		.loc 1 391 29 view .LVU39
 210 007f C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 210      D0
 211              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 212              		.loc 1 391 17 view .LVU40
GAS LISTING /tmp/ccfflXEb.s 			page 12


 213 0084 4909D0   		or	r8, rdx	# pattern, _23
 214              	.LVL7:
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 215              		.loc 1 390 90 is_stmt 1 view .LVU41
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 216              		.loc 1 390 54 view .LVU42
 217              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 218              		.loc 1 390 5 is_stmt 0 view .LVU43
 219 0087 4883F940 		cmp	rcx, 64	# pattern_size,
 220 008b 0F878F00 		ja	.L2	#,
 220      0000
 221              		.loc 1 391 9 is_stmt 1 view .LVU44
 222              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 223              		.loc 1 390 103 is_stmt 0 view .LVU45
 224 0091 4E8D1CF5 		lea	r11, 0[0+r14*8]	# pattern_size,
 224      00000000 
 225              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 226              		.loc 1 391 29 view .LVU46
 227 0099 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 227      D0
 228              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 229              		.loc 1 391 17 view .LVU47
 230 009e 4D09D0   		or	r8, r10	# pattern, _23
 231              	.LVL8:
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 232              		.loc 1 390 90 is_stmt 1 view .LVU48
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 233              		.loc 1 390 54 view .LVU49
 234              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 235              		.loc 1 390 5 is_stmt 0 view .LVU50
 236 00a1 4983FB40 		cmp	r11, 64	# pattern_size,
 237 00a5 7779     		ja	.L2	#,
 238              		.loc 1 391 9 is_stmt 1 view .LVU51
 239              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 240              		.loc 1 390 103 is_stmt 0 view .LVU52
 241 00a7 4D89F5   		mov	r13, r14	# pattern_size, pattern_size
 242              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 243              		.loc 1 391 29 view .LVU53
 244 00aa C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 244      E0
 245              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 246              		.loc 1 390 103 view .LVU54
 247 00af 49C1E504 		sal	r13, 4	# pattern_size,
 248              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 249              		.loc 1 391 17 view .LVU55
 250 00b3 4D09E0   		or	r8, r12	# pattern, _23
 251              	.LVL9:
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 252              		.loc 1 390 90 is_stmt 1 view .LVU56
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 253              		.loc 1 390 54 view .LVU57
 254              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
GAS LISTING /tmp/ccfflXEb.s 			page 13


 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 255              		.loc 1 390 5 is_stmt 0 view .LVU58
 256 00b6 4983FD40 		cmp	r13, 64	# pattern_size,
 257 00ba 7764     		ja	.L2	#,
 258              		.loc 1 391 9 is_stmt 1 view .LVU59
 259              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 260              		.loc 1 390 103 is_stmt 0 view .LVU60
 261 00bc 4C89F0   		mov	rax, r14	# pattern_size, pattern_size
 262              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 263              		.loc 1 391 29 view .LVU61
 264 00bf C44291F7 		shlx	r15, r8, r13	# _23, pattern, pattern_size
 264      F8
 265              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 266              		.loc 1 390 103 view .LVU62
 267 00c4 48C1E005 		sal	rax, 5	# pattern_size,
 268              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 269              		.loc 1 391 17 view .LVU63
 270 00c8 4D09F8   		or	r8, r15	# pattern, _23
 271              	.LVL10:
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 272              		.loc 1 390 90 is_stmt 1 view .LVU64
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 273              		.loc 1 390 54 view .LVU65
 274              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 275              		.loc 1 390 5 is_stmt 0 view .LVU66
 276 00cb 4883F840 		cmp	rax, 64	# pattern_size,
 277 00cf 774F     		ja	.L2	#,
 278              		.loc 1 391 9 is_stmt 1 view .LVU67
 279              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 280              		.loc 1 390 103 is_stmt 0 view .LVU68
 281 00d1 4C89F1   		mov	rcx, r14	# pattern_size, pattern_size
 282              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 283              		.loc 1 391 29 view .LVU69
 284 00d4 C4C2F9F7 		shlx	rdx, r8, rax	# _23, pattern, pattern_size
 284      D0
 285              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 286              		.loc 1 390 103 view .LVU70
 287 00d9 48C1E106 		sal	rcx, 6	# pattern_size,
 288              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 289              		.loc 1 391 17 view .LVU71
 290 00dd 4909D0   		or	r8, rdx	# pattern, _23
 291              	.LVL11:
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 292              		.loc 1 390 90 is_stmt 1 view .LVU72
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 293              		.loc 1 390 54 view .LVU73
 294              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 295              		.loc 1 390 5 is_stmt 0 view .LVU74
 296 00e0 4883F940 		cmp	rcx, 64	# pattern_size,
 297 00e4 773A     		ja	.L2	#,
 298              		.loc 1 391 9 is_stmt 1 view .LVU75
GAS LISTING /tmp/ccfflXEb.s 			page 14


 299              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 300              		.loc 1 390 103 is_stmt 0 view .LVU76
 301 00e6 4D89F3   		mov	r11, r14	# pattern_size, pattern_size
 302              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 303              		.loc 1 391 29 view .LVU77
 304 00e9 C442F1F7 		shlx	r10, r8, rcx	# _23, pattern, pattern_size
 304      D0
 305              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 306              		.loc 1 390 103 view .LVU78
 307 00ee 49C1E307 		sal	r11, 7	# pattern_size,
 308              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 309              		.loc 1 391 17 view .LVU79
 310 00f2 4D09D0   		or	r8, r10	# pattern, _23
 311              	.LVL12:
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 312              		.loc 1 390 90 is_stmt 1 view .LVU80
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 313              		.loc 1 390 54 view .LVU81
 314              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 315              		.loc 1 390 5 is_stmt 0 view .LVU82
 316 00f5 4983FB40 		cmp	r11, 64	# pattern_size,
 317 00f9 7725     		ja	.L2	#,
 318              		.loc 1 391 9 is_stmt 1 view .LVU83
 319              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 320              		.loc 1 390 103 is_stmt 0 view .LVU84
 321 00fb 49C1E608 		sal	r14, 8	# pattern_size,
 322              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 323              		.loc 1 391 29 view .LVU85
 324 00ff C442A1F7 		shlx	r12, r8, r11	# _23, pattern, pattern_size
 324      E0
 325              	# sieve_extend.c:391:         pattern |= (pattern << pattern_size);
 326              		.loc 1 391 17 view .LVU86
 327 0104 4D09E0   		or	r8, r12	# pattern, _23
 328              	.LVL13:
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 329              		.loc 1 390 90 is_stmt 1 view .LVU87
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 330              		.loc 1 390 54 view .LVU88
 331              	# sieve_extend.c:390:     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZ
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 332              		.loc 1 390 5 is_stmt 0 view .LVU89
 333 0107 4983FE40 		cmp	r14, 64	# pattern_size,
 334 010b 0F8650FF 		jbe	.L3	#,
 334      FFFF
 335              	.LVL14:
 336 0111 66662E0F 		.p2align 4
 336      1F840000 
 336      0000000F 
 336      1F4000
 337              		.p2align 3
 338              	.L2:
 390:sieve_extend.c ****     for (bitshift_t pattern_size = (bitshift_t)size; pattern_size <= WORD_SIZE_bitshift; pattern_si
 339              		.loc 1 390 5 view .LVU90
GAS LISTING /tmp/ccfflXEb.s 			page 15


 340              	.LBE311:
 392:sieve_extend.c **** 
 393:sieve_extend.c ****     const counter_t destination_start = source_start + size;
 341              		.loc 1 393 5 is_stmt 1 view .LVU91
 342              	# sieve_extend.c:393:     const counter_t destination_start = source_start + size;
 343              		.loc 1 393 21 is_stmt 0 view .LVU92
 344 0120 4A8D0C0E 		lea	rcx, [rsi+r9]	# destination_start,
 345              	.LVL15:
 394:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 346              		.loc 1 394 5 is_stmt 1 view .LVU93
 347              	# sieve_extend.c:395:     counter_t destination_stop_word = wordindex(destination_stop);
 395:sieve_extend.c ****     counter_t destination_stop_word = wordindex(destination_stop);
 348              		.loc 1 395 15 is_stmt 0 view .LVU94
 349 0124 4989DC   		mov	r12, rbx	# destination_stop_word, destination_stop
 350              	# sieve_extend.c:394:     counter_t destination_start_word = wordindex(destination_start);
 394:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 351              		.loc 1 394 15 view .LVU95
 352 0127 4989CB   		mov	r11, rcx	# destination_start_word, destination_start
 353 012a F7D3     		not	ebx	# tmp348
 354              	.LVL16:
 394:sieve_extend.c ****     counter_t destination_start_word = wordindex(destination_start);
 355              		.loc 1 394 15 view .LVU96
 356 012c 49C1EB06 		shr	r11, 6	# destination_start_word,
 357              	.LVL17:
 358              		.loc 1 395 5 is_stmt 1 view .LVU97
 359 0130 49C7C5FF 		mov	r13, -1	# tmp350,
 359      FFFFFF
 360              	# sieve_extend.c:395:     counter_t destination_stop_word = wordindex(destination_stop);
 361              		.loc 1 395 15 is_stmt 0 view .LVU98
 362 0137 49C1EC06 		shr	r12, 6	# destination_stop_word,
 363              	.LVL18:
 396:sieve_extend.c ****     if (destination_start_word >= destination_stop_word) {
 364              		.loc 1 396 5 is_stmt 1 view .LVU99
 365 013b 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _116,
 365      00000000 
 366              	.LVL19:
 367              		.loc 1 396 5 is_stmt 0 view .LVU100
 368 0143 4C8D3437 		lea	r14, [rdi+rsi]	# _117,
 369              	# sieve_extend.c:396:     if (destination_start_word >= destination_stop_word) {
 370              		.loc 1 396 8 view .LVU101
 371 0147 4D39E3   		cmp	r11, r12	# destination_start_word, destination_stop_word
 372 014a C4C2F1F7 		shlx	rax, r8, rcx	# _120, pattern, destination_start
 372      C0
 373 014f 4D8B3E   		mov	r15, QWORD PTR [r14]	# pretmp_118, *_117
 374 0152 C4C2E3F7 		shrx	rbx, r13, rbx	# _124, tmp350, tmp348
 374      DD
 375 0157 0F833305 		jnb	.L49	#,
 375      0000
 397:sieve_extend.c ****         bitstorage[destination_start_word] |= (pattern << bitindex(destination_start)) & chopmask(d
 398:sieve_extend.c ****         return;
 399:sieve_extend.c ****     }
 400:sieve_extend.c **** 
 401:sieve_extend.c ****     bitstorage[destination_start_word] |= (pattern << bitindex(destination_start));
 376              		.loc 1 401 5 is_stmt 1 view .LVU102
 377              	# sieve_extend.c:401:     bitstorage[destination_start_word] |= (pattern << bitindex(destination_st
 378              		.loc 1 401 40 is_stmt 0 view .LVU103
 379 015d 4C09F8   		or	rax, r15	# tmp353, pretmp_118
GAS LISTING /tmp/ccfflXEb.s 			page 16


 380              	# sieve_extend.c:404:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 402:sieve_extend.c **** 
 403:sieve_extend.c ****     // TODO: refactor according to smallstep
 404:sieve_extend.c ****     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 381              		.loc 1 404 31 view .LVU104
 382 0160 31D2     		xor	edx, edx	# tmp355
 383              	# sieve_extend.c:401:     bitstorage[destination_start_word] |= (pattern << bitindex(destination_st
 401:sieve_extend.c **** 
 384              		.loc 1 401 40 view .LVU105
 385 0162 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp353
 386              		.loc 1 404 5 is_stmt 1 view .LVU106
 387              	# sieve_extend.c:404:     register const bitshift_t pattern_shift = WORD_SIZE_counter % size;
 388              		.loc 1 404 31 is_stmt 0 view .LVU107
 389 0165 41BE4000 		mov	r14d, 64	# tmp354,
 389      0000
 390 016b 4C89F0   		mov	rax, r14	# tmp356, tmp354
 391 016e 488D7437 		lea	rsi, 8[rdi+rsi]	# vectp.144,
 391      08
 392 0173 49F7F1   		div	r9	# size
 393              	.LVL20:
 405:sieve_extend.c ****     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shift;
 394              		.loc 1 405 5 is_stmt 1 view .LVU108
 406:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 395              		.loc 1 406 5 view .LVU109
 407:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 396              		.loc 1 407 5 view .LVU110
 397 0176 48C1EE03 		shr	rsi, 3	# tmp363,
 398              	# sieve_extend.c:407:     register counter_t loop_range = destination_stop_word - destination_start
 399              		.loc 1 407 24 is_stmt 0 view .LVU111
 400 017a 4D89E1   		mov	r9, r12	# loop_range, destination_stop_word
 401              	.LVL21:
 402              	# sieve_extend.c:406:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 406:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 403              		.loc 1 406 89 view .LVU112
 404 017d 48F7D9   		neg	rcx	# tmp359
 405              	.LVL22:
 406              	# sieve_extend.c:407:     register counter_t loop_range = destination_stop_word - destination_start
 407              		.loc 1 407 24 view .LVU113
 408 0180 4D29D9   		sub	r9, r11	# loop_range, destination_start_word
 409              	.LVL23:
 408:sieve_extend.c ****     destination_start_word++;
 410              		.loc 1 408 5 is_stmt 1 view .LVU114
 411              	# sieve_extend.c:405:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 405:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 412              		.loc 1 405 31 is_stmt 0 view .LVU115
 413 0183 4C89F0   		mov	rax, r14	# tmp354, tmp354
 414 0186 48F7DE   		neg	rsi	# tmp364
 415              	# sieve_extend.c:406:     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destinati
 406:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 416              		.loc 1 406 25 view .LVU116
 417 0189 83E13F   		and	ecx, 63	# shift,
 418              	.LVL24:
 406:sieve_extend.c ****     register counter_t loop_range = destination_stop_word - destination_start_word;
 419              		.loc 1 406 25 view .LVU117
 420 018c 83E603   		and	esi, 3	# prolog_loop_niters.145,
 421              	# sieve_extend.c:408:     destination_start_word++;
 422              		.loc 1 408 27 view .LVU118
GAS LISTING /tmp/ccfflXEb.s 			page 17


 423 018f 4D8D5301 		lea	r10, 1[r11]	# destination_start_word,
 424              	.LVL25:
 425              	.LBB312:
 409:sieve_extend.c ****     
 410:sieve_extend.c ****     //#pragma GCC unroll 16
 411:sieve_extend.c ****     #pragma GCC ivdep
 412:sieve_extend.c ****     for (counter_t i=0; i<=loop_range; ++i ) {
 426              		.loc 1 412 10 is_stmt 1 view .LVU119
 427              		.loc 1 412 25 view .LVU120
 428 0193 4D8D6901 		lea	r13, 1[r9]	# niters.143,
 429 0197 894C24F4 		mov	DWORD PTR -12[rsp], ecx	# %sfp, shift
 430 019b 895424F8 		mov	DWORD PTR -8[rsp], edx	# %sfp, tmp355
 431              	.LBE312:
 432              	# sieve_extend.c:405:     register const bitshift_t pattern_size = WORD_SIZE_bitshift - pattern_shi
 405:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 433              		.loc 1 405 31 is_stmt 0 view .LVU121
 434 019f 4829D0   		sub	rax, rdx	# tmp354, tmp355
 435              	.LVL26:
 405:sieve_extend.c ****     register bitshift_t shift = (WORD_SIZE_bitshift - bitindex_calc(destination_start)) & WORDMASK;
 436              		.loc 1 405 31 view .LVU122
 437 01a2 894424FC 		mov	DWORD PTR -4[rsp], eax	# %sfp, pattern_size
 438 01a6 4983F90A 		cmp	r9, 10	# loop_range,
 439 01aa 0F860505 		jbe	.L11	#,
 439      0000
 440 01b0 4885F6   		test	rsi, rsi	# prolog_loop_niters.145
 441 01b3 0F84F404 		je	.L12	#,
 441      0000
 442              	.LBB313:
 413:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 443              		.loc 1 413 9 is_stmt 1 view .LVU123
 444              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 445              		.loc 1 413 74 is_stmt 0 view .LVU124
 446 01b9 4189C7   		mov	r15d, eax	# tmp365, pattern_size
 447 01bc 4129CF   		sub	r15d, ecx	# tmp365, shift
 448              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 449              		.loc 1 413 57 view .LVU125
 450 01bf C44281F7 		shlx	r14, r8, r15	# tmp366, pattern, tmp365
 450      F0
 451              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 452              		.loc 1 413 129 view .LVU126
 453 01c4 C442F3F7 		shrx	r15, r8, rcx	# tmp367, pattern, shift
 453      F8
 454              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 455              		.loc 1 413 118 view .LVU127
 456 01c9 4D09FE   		or	r14, r15	# tmp368, tmp367
 457 01cc 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_317, tmp368
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 458              		.loc 1 412 40 is_stmt 1 view .LVU128
 459              	.LVL27:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 460              		.loc 1 412 25 view .LVU129
 461 01d0 4883FE01 		cmp	rsi, 1	# prolog_loop_niters.145,
 462              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 463              		.loc 1 412 40 is_stmt 0 view .LVU130
 464 01d4 41BE0100 		mov	r14d, 1	# i,
 464      0000
GAS LISTING /tmp/ccfflXEb.s 			page 18


 465 01da 7452     		je	.L7	#,
 466              		.loc 1 413 9 is_stmt 1 view .LVU131
 467              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 468              		.loc 1 413 83 is_stmt 0 view .LVU132
 469 01dc 448D3411 		lea	r14d, [rcx+rdx]	# tmp369,
 470              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 471              		.loc 1 413 74 view .LVU133
 472 01e0 4189C7   		mov	r15d, eax	# tmp371, pattern_size
 473              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 474              		.loc 1 413 101 view .LVU134
 475 01e3 4183E63F 		and	r14d, 63	# _328,
 476              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 477              		.loc 1 413 74 view .LVU135
 478 01e7 4529F7   		sub	r15d, r14d	# tmp371, _328
 479              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 480              		.loc 1 413 129 view .LVU136
 481 01ea C4428BF7 		shrx	r14, r8, r14	# tmp373, pattern, _328
 481      F0
 482              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 483              		.loc 1 413 57 view .LVU137
 484 01ef C44281F7 		shlx	r15, r8, r15	# tmp372, pattern, tmp371
 484      F8
 485              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 486              		.loc 1 413 118 view .LVU138
 487 01f4 4D09FE   		or	r14, r15	# tmp374, tmp372
 488 01f7 4E8974DF 		mov	QWORD PTR 16[rdi+r11*8], r14	# *_334, tmp374
 488      10
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 489              		.loc 1 412 40 is_stmt 1 view .LVU139
 490              	.LVL28:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 491              		.loc 1 412 25 view .LVU140
 492 01fc 4883FE03 		cmp	rsi, 3	# prolog_loop_niters.145,
 493              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 494              		.loc 1 412 40 is_stmt 0 view .LVU141
 495 0200 41BE0200 		mov	r14d, 2	# i,
 495      0000
 496 0206 7526     		jne	.L7	#,
 497              		.loc 1 413 9 is_stmt 1 view .LVU142
 498              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 499              		.loc 1 413 83 is_stmt 0 view .LVU143
 500 0208 448D3451 		lea	r14d, [rcx+rdx*2]	# tmp376,
 501              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 502              		.loc 1 413 74 view .LVU144
 503 020c 4189C7   		mov	r15d, eax	# tmp378, pattern_size
 504              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 505              		.loc 1 413 101 view .LVU145
 506 020f 4183E63F 		and	r14d, 63	# _104,
 507              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 508              		.loc 1 413 74 view .LVU146
 509 0213 4529F7   		sub	r15d, r14d	# tmp378, _104
 510              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 511              		.loc 1 413 129 view .LVU147
 512 0216 C4428BF7 		shrx	r14, r8, r14	# tmp380, pattern, _104
 512      F0
 513              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
GAS LISTING /tmp/ccfflXEb.s 			page 19


 514              		.loc 1 413 57 view .LVU148
 515 021b C44281F7 		shlx	r15, r8, r15	# tmp379, pattern, tmp378
 515      F8
 516              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 517              		.loc 1 413 118 view .LVU149
 518 0220 4D09FE   		or	r14, r15	# tmp381, tmp379
 519 0223 4E8974DF 		mov	QWORD PTR 24[rdi+r11*8], r14	# *_94, tmp381
 519      18
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 520              		.loc 1 412 40 is_stmt 1 view .LVU150
 521              	.LVL29:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 522              		.loc 1 412 25 view .LVU151
 523              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 524              		.loc 1 412 40 is_stmt 0 view .LVU152
 525 0228 41BE0300 		mov	r14d, 3	# i,
 525      0000
 526              	.LVL30:
 527              	.L7:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 528              		.loc 1 412 40 view .LVU153
 529 022e 4929F5   		sub	r13, rsi	# niters.146, prolog_loop_niters.145
 530 0231 4C01D6   		add	rsi, r10	# tmp388, destination_start_word
 531 0234 4D89EB   		mov	r11, r13	# bnd.147, niters.146
 532 0237 C4C1F96E 		vmovq	xmm3, r14	# i, i
 532      DE
 533 023c 49C1EB03 		shr	r11, 3	# bnd.147,
 534 0240 488D34F7 		lea	rsi, [rdi+rsi*8]	# ivtmp.165,
 535 0244 49C1E306 		sal	r11, 6	# tmp391,
 536 0248 C4627D59 		vpbroadcastq	ymm9, xmm3	# tmp382, i
 536      CB
 537 024d C4C1F96E 		vmovq	xmm4, r8	# pattern, pattern
 537      E0
 538 0252 4D8D3C33 		lea	r15, [r11+rsi]	# _344,
 539 0256 4183E340 		and	r11d, 64	# tmp391,
 540 025a C535D435 		vpaddq	ymm14, ymm9, YMMWORD PTR .LC0[rip]	# vect_vec_iv_.150, tmp382,
 540      00000000 
 541 0262 C4E27D58 		vpbroadcastd	ymm6, DWORD PTR -8[rsp]	# vect_cst__146, %sfp
 541      7424F8
 542 0269 C4E27D59 		vpbroadcastq	ymm2, xmm4	# vect_cst__156, pattern
 542      D4
 543 026e C4E27D58 		vpbroadcastd	ymm5, DWORD PTR -12[rsp]	# vect_cst__148, %sfp
 543      6C24F4
 544 0275 C4627D58 		vpbroadcastd	ymm12, DWORD PTR -4[rsp]	# vect_cst__152, %sfp
 544      6424FC
 545 027c C57D6F05 		vmovdqa	ymm8, YMMWORD PTR .LC1[rip]	# tmp496,
 545      00000000 
 546 0284 C5FD6F3D 		vmovdqa	ymm7, YMMWORD PTR .LC2[rip]	# tmp497,
 546      00000000 
 547 028c C57D6F2D 		vmovdqa	ymm13, YMMWORD PTR .LC3[rip]	# tmp498,
 547      00000000 
 548 0294 0F849600 		je	.L9	#,
 548      0000
 549              	.LVL31:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 550              		.loc 1 412 40 view .LVU154
GAS LISTING /tmp/ccfflXEb.s 			page 20


 551 029a C57D7FF1 		vmovdqa	ymm1, ymm14	# vect_vec_iv_.150, vect_vec_iv_.150
 552 029e 4883C640 		add	rsi, 64	# ivtmp.165,
 553              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 554              		.loc 1 413 83 view .LVU155
 555 02a2 C575D4D7 		vpaddq	ymm10, ymm1, ymm7	# vect_vec_iv_.150, vect_vec_iv_.150, tmp497
 556 02a6 C4410DD4 		vpaddq	ymm14, ymm14, ymm8	# vect_vec_iv_.150, vect_vec_iv_.150, tmp496
 556      F0
 557              		.loc 1 413 9 is_stmt 1 view .LVU156
 558              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 559              		.loc 1 413 83 is_stmt 0 view .LVU157
 560 02ab C4C37546 		vperm2i128	ymm0, ymm1, ymm10, 32	# tmp538, vect_vec_iv_.150, vect_vec_iv_.150,
 560      C220
 561 02b1 C4437546 		vperm2i128	ymm11, ymm1, ymm10, 49	# tmp539, vect_vec_iv_.150, vect_vec_iv_.150,
 561      DA31
 562 02b7 C57D70F8 		vpshufd	ymm15, ymm0, 216	# tmp540, tmp538,
 562      D8
 563 02bc C4C17D70 		vpshufd	ymm3, ymm11, 216	# tmp541, tmp539,
 563      DBD8
 564 02c2 C5056CCB 		vpunpcklqdq	ymm9, ymm15, ymm3	# tmp542, tmp540, tmp541
 565 02c6 C4C24D40 		vpmulld	ymm4, ymm6, ymm9	# vect__45.152, vect_cst__146, tmp542
 565      E1
 566              	.LVL32:
 567              		.loc 1 413 83 view .LVU158
 568 02cb C5DDFECD 		vpaddd	ymm1, ymm4, ymm5	# vect__47.153, vect__45.152, vect_cst__148
 569              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 570              		.loc 1 413 101 view .LVU159
 571 02cf C4C175DB 		vpand	ymm0, ymm1, ymm13	# vect__48.154, vect__47.153, tmp498
 571      C5
 572              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 573              		.loc 1 413 74 view .LVU160
 574 02d4 C51DFAF8 		vpsubd	ymm15, ymm12, ymm0	# vect__49.155, vect_cst__152, vect__48.154
 575              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 576              		.loc 1 413 118 view .LVU161
 577 02d8 C4627D35 		vpmovzxdq	ymm11, xmm0	#, vect__48.154
 577      D8
 578 02dd C4427D35 		vpmovzxdq	ymm10, xmm15	#, vect__49.155
 578      D7
 579 02e2 C442ED45 		vpsrlvq	ymm9, ymm2, ymm11	# vect_patt_136.159, vect_cst__156, vect_patt_137.158
 579      CB
 580 02e7 C4C2ED47 		vpsllvq	ymm3, ymm2, ymm10	# vect_patt_138.157, vect_cst__156, vect_patt_139.156
 580      DA
 581 02ec C4637D39 		vextracti128	xmm1, ymm15, 0x1	# tmp554, vect__49.155
 581      F901
 582 02f2 C4C165EB 		vpor	ymm4, ymm3, ymm9	# vect__55.160, vect_patt_138.157, vect_patt_136.159
 582      E1
 583 02f7 C4E37D39 		vextracti128	xmm0, ymm0, 0x1	# tmp557, vect__48.154
 583      C001
 584 02fd C4627D35 		vpmovzxdq	ymm15, xmm1	# vect_patt_139.156, tmp554
 584      F9
 585 0302 C4E27D35 		vpmovzxdq	ymm3, xmm0	# vect_patt_137.158, tmp557
 585      D8
 586 0307 C442ED47 		vpsllvq	ymm10, ymm2, ymm15	# vect_patt_138.157, vect_cst__156, vect_patt_139.156
 586      D7
 587 030c C462ED45 		vpsrlvq	ymm11, ymm2, ymm3	# vect_patt_136.159, vect_cst__156, vect_patt_137.158
 587      DB
 588              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 589              		.loc 1 413 46 view .LVU162
GAS LISTING /tmp/ccfflXEb.s 			page 21


 590 0311 C5FD7F66 		vmovdqa	YMMWORD PTR -64[rsi], ymm4	# MEM[base: _341, offset: 0B], vect__55.160
 590      C0
 591              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 592              		.loc 1 413 118 view .LVU163
 593 0316 C4412DEB 		vpor	ymm9, ymm10, ymm11	# vect__55.160, vect_patt_138.157, vect_patt_136.159
 593      CB
 594              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 595              		.loc 1 413 46 view .LVU164
 596 031b C57D7F4E 		vmovdqa	YMMWORD PTR -32[rsi], ymm9	# MEM[base: _341, offset: 32B], vect__55.160
 596      E0
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 597              		.loc 1 412 40 is_stmt 1 view .LVU165
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 598              		.loc 1 412 25 view .LVU166
 599 0320 4C39FE   		cmp	rsi, r15	# ivtmp.165, _344
 600 0323 0F841201 		je	.L37	#,
 600      0000
 601 0329 0F1F8000 		.p2align 4
 601      000000
 602              		.p2align 3
 603              	.L9:
 604              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 605              		.loc 1 413 83 is_stmt 0 discriminator 3 view .LVU167
 606 0330 C58DD4CF 		vpaddq	ymm1, ymm14, ymm7	# vect_vec_iv_.150, vect_vec_iv_.150, tmp497
 607 0334 C4C10DD4 		vpaddq	ymm4, ymm14, ymm8	# vect_vec_iv_.150, vect_vec_iv_.150, tmp496
 607      E0
 608              		.loc 1 413 9 is_stmt 1 discriminator 3 view .LVU168
 609              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 610              		.loc 1 413 83 is_stmt 0 discriminator 3 view .LVU169
 611 0339 C4630D46 		vperm2i128	ymm15, ymm14, ymm1, 32	# tmp398, vect_vec_iv_.150, vect_vec_iv_.150,
 611      F920
 612 033f C4630D46 		vperm2i128	ymm14, ymm14, ymm1, 49	# tmp399, vect_vec_iv_.150, vect_vec_iv_.150,
 612      F131
 613 0345 C4417D70 		vpshufd	ymm10, ymm15, 216	# tmp396, tmp398,
 613      D7D8
 614 034b 4883EE80 		sub	rsi, -128	# ivtmp.165,
 615 034f C4C17D70 		vpshufd	ymm0, ymm14, 216	# tmp397, tmp399,
 615      C6D8
 616 0355 C5AD6CD8 		vpunpcklqdq	ymm3, ymm10, ymm0	# tmp400, tmp396, tmp397
 617 0359 C4624D40 		vpmulld	ymm11, ymm6, ymm3	# vect__45.152, vect_cst__146, tmp400
 617      DB
 618 035e C525FECD 		vpaddd	ymm9, ymm11, ymm5	# vect__47.153, vect__45.152, vect_cst__148
 619              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 620              		.loc 1 413 101 discriminator 3 view .LVU170
 621 0362 C44135DB 		vpand	ymm15, ymm9, ymm13	# vect__48.154, vect__47.153, tmp498
 621      FD
 622              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 623              		.loc 1 413 74 discriminator 3 view .LVU171
 624 0367 C4C11DFA 		vpsubd	ymm1, ymm12, ymm15	# vect__49.155, vect_cst__152, vect__48.154
 624      CF
 625              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 626              		.loc 1 413 118 discriminator 3 view .LVU172
 627 036c C4C27D35 		vpmovzxdq	ymm0, xmm15	#, vect__48.154
 627      C7
 628 0371 C4627D35 		vpmovzxdq	ymm14, xmm1	#, vect__49.155
 628      F1
 629 0376 C4E2ED45 		vpsrlvq	ymm3, ymm2, ymm0	# vect_patt_136.159, vect_cst__156, vect_patt_137.158
GAS LISTING /tmp/ccfflXEb.s 			page 22


 629      D8
 630 037b C442ED47 		vpsllvq	ymm10, ymm2, ymm14	# vect_patt_138.157, vect_cst__156, vect_patt_139.156
 630      D6
 631 0380 C4C37D39 		vextracti128	xmm9, ymm1, 0x1	# tmp412, vect__49.155
 631      C901
 632 0386 C52DEBDB 		vpor	ymm11, ymm10, ymm3	# vect__55.160, vect_patt_138.157, vect_patt_136.159
 633 038a C4437D39 		vextracti128	xmm15, ymm15, 0x1	# tmp415, vect__48.154
 633      FF01
 634 0390 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_139.156, tmp412
 634      C9
 635 0395 C4427D35 		vpmovzxdq	ymm10, xmm15	# vect_patt_137.158, tmp415
 635      D7
 636 039a C462ED47 		vpsllvq	ymm14, ymm2, ymm1	# vect_patt_138.157, vect_cst__156, vect_patt_139.156
 636      F1
 637 039f C4C2ED45 		vpsrlvq	ymm0, ymm2, ymm10	# vect_patt_136.159, vect_cst__156, vect_patt_137.158
 637      C2
 638              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 639              		.loc 1 413 46 discriminator 3 view .LVU173
 640 03a4 C57D7F5E 		vmovdqa	YMMWORD PTR -128[rsi], ymm11	# MEM[base: _341, offset: 0B], vect__55.160
 640      80
 641              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 642              		.loc 1 413 83 discriminator 3 view .LVU174
 643 03a9 C55DD4DF 		vpaddq	ymm11, ymm4, ymm7	# vect_vec_iv_.150, vect_vec_iv_.150, tmp497
 644              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 645              		.loc 1 413 118 discriminator 3 view .LVU175
 646 03ad C58DEBD8 		vpor	ymm3, ymm14, ymm0	# vect__55.160, vect_patt_138.157, vect_patt_136.159
 647              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 648              		.loc 1 413 83 discriminator 3 view .LVU176
 649 03b1 C4435D46 		vperm2i128	ymm9, ymm4, ymm11, 32	# tmp513, vect_vec_iv_.150, vect_vec_iv_.150,
 649      CB20
 650 03b7 C4C17D70 		vpshufd	ymm1, ymm9, 216	# tmp515, tmp513,
 650      C9D8
 651 03bd C4415DD4 		vpaddq	ymm14, ymm4, ymm8	# vect_vec_iv_.150, vect_vec_iv_.150, tmp496
 651      F0
 652              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 653              		.loc 1 413 46 discriminator 3 view .LVU177
 654 03c2 C5FD7F5E 		vmovdqa	YMMWORD PTR -96[rsi], ymm3	# MEM[base: _341, offset: 32B], vect__55.160
 654      A0
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 655              		.loc 1 412 40 is_stmt 1 discriminator 3 view .LVU178
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 656              		.loc 1 412 25 discriminator 3 view .LVU179
 657              		.loc 1 413 9 discriminator 3 view .LVU180
 658              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 659              		.loc 1 413 83 is_stmt 0 discriminator 3 view .LVU181
 660 03c7 C4C35D46 		vperm2i128	ymm4, ymm4, ymm11, 49	# tmp514, vect_vec_iv_.150, vect_vec_iv_.150,
 660      E331
 661 03cd C57D70FC 		vpshufd	ymm15, ymm4, 216	# tmp516, tmp514,
 661      D8
 662 03d2 C441756C 		vpunpcklqdq	ymm10, ymm1, ymm15	# tmp517, tmp515, tmp516
 662      D7
 663 03d7 C4C24D40 		vpmulld	ymm0, ymm6, ymm10	# vect__45.152, vect_cst__146, tmp517
 663      C2
 664 03dc C5FDFEDD 		vpaddd	ymm3, ymm0, ymm5	# vect__47.153, vect__45.152, vect_cst__148
 665              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 666              		.loc 1 413 101 discriminator 3 view .LVU182
 667 03e0 C44165DB 		vpand	ymm9, ymm3, ymm13	# vect__48.154, vect__47.153, tmp498
GAS LISTING /tmp/ccfflXEb.s 			page 23


 667      CD
 668              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 669              		.loc 1 413 74 discriminator 3 view .LVU183
 670 03e5 C4C11DFA 		vpsubd	ymm4, ymm12, ymm9	# vect__49.155, vect_cst__152, vect__48.154
 670      E1
 671              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 672              		.loc 1 413 118 discriminator 3 view .LVU184
 673 03ea C4427D35 		vpmovzxdq	ymm15, xmm9	#, vect__48.154
 673      F9
 674 03ef C4627D35 		vpmovzxdq	ymm11, xmm4	#, vect__49.155
 674      DC
 675 03f4 C442ED45 		vpsrlvq	ymm10, ymm2, ymm15	# vect_patt_136.159, vect_cst__156, vect_patt_137.158
 675      D7
 676 03f9 C4C2ED47 		vpsllvq	ymm1, ymm2, ymm11	# vect_patt_138.157, vect_cst__156, vect_patt_139.156
 676      CB
 677 03fe C4E37D39 		vextracti128	xmm3, ymm4, 0x1	# tmp529, vect__49.155
 677      E301
 678 0404 C4C175EB 		vpor	ymm0, ymm1, ymm10	# vect__55.160, vect_patt_138.157, vect_patt_136.159
 678      C2
 679 0409 C4437D39 		vextracti128	xmm9, ymm9, 0x1	# tmp532, vect__48.154
 679      C901
 680 040f C4E27D35 		vpmovzxdq	ymm4, xmm3	# vect_patt_139.156, tmp529
 680      E3
 681 0414 C4C27D35 		vpmovzxdq	ymm1, xmm9	# vect_patt_137.158, tmp532
 681      C9
 682 0419 C462ED47 		vpsllvq	ymm11, ymm2, ymm4	# vect_patt_138.157, vect_cst__156, vect_patt_139.156
 682      DC
 683 041e C462ED45 		vpsrlvq	ymm15, ymm2, ymm1	# vect_patt_136.159, vect_cst__156, vect_patt_137.158
 683      F9
 684              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 685              		.loc 1 413 46 discriminator 3 view .LVU185
 686 0423 C5FD7F46 		vmovdqa	YMMWORD PTR -64[rsi], ymm0	# MEM[base: _341, offset: 0B], vect__55.160
 686      C0
 687              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 688              		.loc 1 413 118 discriminator 3 view .LVU186
 689 0428 C44125EB 		vpor	ymm10, ymm11, ymm15	# vect__55.160, vect_patt_138.157, vect_patt_136.159
 689      D7
 690              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 691              		.loc 1 413 46 discriminator 3 view .LVU187
 692 042d C57D7F56 		vmovdqa	YMMWORD PTR -32[rsi], ymm10	# MEM[base: _341, offset: 32B], vect__55.160
 692      E0
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 693              		.loc 1 412 40 is_stmt 1 discriminator 3 view .LVU188
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 694              		.loc 1 412 25 discriminator 3 view .LVU189
 695 0432 4C39FE   		cmp	rsi, r15	# ivtmp.165, _344
 696 0435 0F85F5FE 		jne	.L9	#,
 696      FFFF
 697              	.L37:
 698 043b 4C89EE   		mov	rsi, r13	# niters_vector_mult_vf.148, niters.146
 699 043e 4883E6F8 		and	rsi, -8	# niters_vector_mult_vf.148,
 700 0442 4901F6   		add	r14, rsi	# tmp.149, niters_vector_mult_vf.148
 701 0445 4939F5   		cmp	r13, rsi	# niters.146, niters_vector_mult_vf.148
 702 0448 0F845A02 		je	.L50	#,
 702      0000
 703 044e C5F877   		vzeroupper
 704              	.L6:
GAS LISTING /tmp/ccfflXEb.s 			page 24


 705              	.LVL33:
 706              		.loc 1 413 9 view .LVU190
 707              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 708              		.loc 1 413 83 is_stmt 0 view .LVU191
 709 0451 4189D7   		mov	r15d, edx	# tmp418, tmp355
 710              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 711              		.loc 1 413 74 view .LVU192
 712 0454 4189C5   		mov	r13d, eax	# tmp421, pattern_size
 713              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 714              		.loc 1 413 83 view .LVU193
 715 0457 450FAFFE 		imul	r15d, r14d	# tmp418, tmp.149
 716              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 717              		.loc 1 413 19 view .LVU194
 718 045b 4F8D1C16 		lea	r11, [r14+r10]	# tmp420,
 719              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 720              		.loc 1 413 83 view .LVU195
 721 045f 4101CF   		add	r15d, ecx	# tmp419, shift
 722              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 723              		.loc 1 413 101 view .LVU196
 724 0462 4183E73F 		and	r15d, 63	# _49,
 725              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 726              		.loc 1 413 129 view .LVU197
 727 0466 C4C283F7 		shrx	rsi, r8, r15	# tmp423, pattern, _49
 727      F0
 728              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 729              		.loc 1 413 74 view .LVU198
 730 046b 4529FD   		sub	r13d, r15d	# tmp421, _49
 731              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 732              		.loc 1 412 40 view .LVU199
 733 046e 4D8D7E01 		lea	r15, 1[r14]	# i,
 734              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 735              		.loc 1 413 57 view .LVU200
 736 0472 C44291F7 		shlx	r13, r8, r13	# tmp422, pattern, tmp421
 736      E8
 737              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 738              		.loc 1 413 118 view .LVU201
 739 0477 4C09EE   		or	rsi, r13	# tmp424, tmp422
 740 047a 4A8934DF 		mov	QWORD PTR [rdi+r11*8], rsi	# *_55, tmp424
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 741              		.loc 1 412 40 is_stmt 1 view .LVU202
 742              	.LVL34:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 743              		.loc 1 412 25 view .LVU203
 744              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 745              		.loc 1 412 5 is_stmt 0 view .LVU204
 746 047e 4D39CF   		cmp	r15, r9	# i, loop_range
 747 0481 0F87F101 		ja	.L10	#,
 747      0000
 748              		.loc 1 413 9 is_stmt 1 view .LVU205
 749              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 750              		.loc 1 413 83 is_stmt 0 view .LVU206
 751 0487 4189D3   		mov	r11d, edx	# tmp425, tmp355
 752              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 753              		.loc 1 413 74 view .LVU207
 754 048a 4189C5   		mov	r13d, eax	# tmp428, pattern_size
GAS LISTING /tmp/ccfflXEb.s 			page 25


 755              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 756              		.loc 1 413 83 view .LVU208
 757 048d 450FAFDF 		imul	r11d, r15d	# tmp425, i
 758              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 759              		.loc 1 413 19 view .LVU209
 760 0491 4D01D7   		add	r15, r10	# tmp427, destination_start_word
 761              	.LVL35:
 762              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 763              		.loc 1 413 83 view .LVU210
 764 0494 4101CB   		add	r11d, ecx	# tmp426, shift
 765              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 766              		.loc 1 413 101 view .LVU211
 767 0497 4183E33F 		and	r11d, 63	# _83,
 768              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 769              		.loc 1 413 74 view .LVU212
 770 049b 4529DD   		sub	r13d, r11d	# tmp428, _83
 771              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 772              		.loc 1 413 129 view .LVU213
 773 049e C442A3F7 		shrx	r11, r8, r11	# tmp430, pattern, _83
 773      D8
 774              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 775              		.loc 1 413 57 view .LVU214
 776 04a3 C4C291F7 		shlx	rsi, r8, r13	# tmp429, pattern, tmp428
 776      F0
 777              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 778              		.loc 1 413 118 view .LVU215
 779 04a8 4C09DE   		or	rsi, r11	# tmp431, tmp430
 780 04ab 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_181, tmp431
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 781              		.loc 1 412 40 is_stmt 1 view .LVU216
 782 04af 4D8D7E02 		lea	r15, 2[r14]	# i,
 783              	.LVL36:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 784              		.loc 1 412 25 view .LVU217
 785              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 786              		.loc 1 412 5 is_stmt 0 view .LVU218
 787 04b3 4D39F9   		cmp	r9, r15	# loop_range, i
 788 04b6 0F82BC01 		jb	.L10	#,
 788      0000
 789              		.loc 1 413 9 is_stmt 1 view .LVU219
 790              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 791              		.loc 1 413 83 is_stmt 0 view .LVU220
 792 04bc 89D6     		mov	esi, edx	# tmp432, tmp355
 793              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 794              		.loc 1 413 74 view .LVU221
 795 04be 4189C5   		mov	r13d, eax	# tmp435, pattern_size
 796              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 797              		.loc 1 413 83 view .LVU222
 798 04c1 410FAFF7 		imul	esi, r15d	# tmp432, i
 799              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 800              		.loc 1 413 19 view .LVU223
 801 04c5 4D01D7   		add	r15, r10	# tmp434, destination_start_word
 802              	.LVL37:
 803              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 804              		.loc 1 413 83 view .LVU224
 805 04c8 01CE     		add	esi, ecx	# tmp433, shift
GAS LISTING /tmp/ccfflXEb.s 			page 26


 806              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 807              		.loc 1 413 101 view .LVU225
 808 04ca 83E63F   		and	esi, 63	# _190,
 809              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 810              		.loc 1 413 74 view .LVU226
 811 04cd 4129F5   		sub	r13d, esi	# tmp435, _190
 812              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 813              		.loc 1 413 129 view .LVU227
 814 04d0 C4C2CBF7 		shrx	rsi, r8, rsi	# tmp437, pattern, _190
 814      F0
 815              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 816              		.loc 1 413 57 view .LVU228
 817 04d5 C44291F7 		shlx	r11, r8, r13	# tmp436, pattern, tmp435
 817      D8
 818              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 819              		.loc 1 413 118 view .LVU229
 820 04da 4C09DE   		or	rsi, r11	# tmp438, tmp436
 821 04dd 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_196, tmp438
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 822              		.loc 1 412 40 is_stmt 1 view .LVU230
 823 04e1 4D8D7E03 		lea	r15, 3[r14]	# i,
 824              	.LVL38:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 825              		.loc 1 412 25 view .LVU231
 826              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 827              		.loc 1 412 5 is_stmt 0 view .LVU232
 828 04e5 4D39F9   		cmp	r9, r15	# loop_range, i
 829 04e8 0F828A01 		jb	.L10	#,
 829      0000
 830              		.loc 1 413 9 is_stmt 1 view .LVU233
 831              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 832              		.loc 1 413 83 is_stmt 0 view .LVU234
 833 04ee 4189D3   		mov	r11d, edx	# tmp439, tmp355
 834              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 835              		.loc 1 413 74 view .LVU235
 836 04f1 4189C5   		mov	r13d, eax	# tmp442, pattern_size
 837              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 838              		.loc 1 413 83 view .LVU236
 839 04f4 450FAFDF 		imul	r11d, r15d	# tmp439, i
 840              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 841              		.loc 1 413 19 view .LVU237
 842 04f8 4D01D7   		add	r15, r10	# tmp441, destination_start_word
 843              	.LVL39:
 844              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 845              		.loc 1 413 83 view .LVU238
 846 04fb 4101CB   		add	r11d, ecx	# tmp440, shift
 847              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 848              		.loc 1 413 101 view .LVU239
 849 04fe 4183E33F 		and	r11d, 63	# _205,
 850              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 851              		.loc 1 413 129 view .LVU240
 852 0502 C4C2A3F7 		shrx	rsi, r8, r11	# tmp444, pattern, _205
 852      F0
 853              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 854              		.loc 1 413 74 view .LVU241
 855 0507 4529DD   		sub	r13d, r11d	# tmp442, _205
GAS LISTING /tmp/ccfflXEb.s 			page 27


 856              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 857              		.loc 1 413 57 view .LVU242
 858 050a C44291F7 		shlx	r13, r8, r13	# tmp443, pattern, tmp442
 858      E8
 859              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 860              		.loc 1 413 118 view .LVU243
 861 050f 4C09EE   		or	rsi, r13	# tmp445, tmp443
 862 0512 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_211, tmp445
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 863              		.loc 1 412 40 is_stmt 1 view .LVU244
 864 0516 4D8D7E04 		lea	r15, 4[r14]	# i,
 865              	.LVL40:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 866              		.loc 1 412 25 view .LVU245
 867              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 868              		.loc 1 412 5 is_stmt 0 view .LVU246
 869 051a 4D39F9   		cmp	r9, r15	# loop_range, i
 870 051d 0F825501 		jb	.L10	#,
 870      0000
 871              		.loc 1 413 9 is_stmt 1 view .LVU247
 872              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 873              		.loc 1 413 83 is_stmt 0 view .LVU248
 874 0523 4189D3   		mov	r11d, edx	# tmp446, tmp355
 875              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 876              		.loc 1 413 74 view .LVU249
 877 0526 4189C5   		mov	r13d, eax	# tmp449, pattern_size
 878              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 879              		.loc 1 413 83 view .LVU250
 880 0529 450FAFDF 		imul	r11d, r15d	# tmp446, i
 881              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 882              		.loc 1 413 19 view .LVU251
 883 052d 4D01D7   		add	r15, r10	# tmp448, destination_start_word
 884              	.LVL41:
 885              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 886              		.loc 1 413 83 view .LVU252
 887 0530 4101CB   		add	r11d, ecx	# tmp447, shift
 888              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 889              		.loc 1 413 101 view .LVU253
 890 0533 4183E33F 		and	r11d, 63	# _220,
 891              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 892              		.loc 1 413 129 view .LVU254
 893 0537 C4C2A3F7 		shrx	rsi, r8, r11	# tmp451, pattern, _220
 893      F0
 894              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 895              		.loc 1 413 74 view .LVU255
 896 053c 4529DD   		sub	r13d, r11d	# tmp449, _220
 897              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 898              		.loc 1 413 57 view .LVU256
 899 053f C44291F7 		shlx	r13, r8, r13	# tmp450, pattern, tmp449
 899      E8
 900              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 901              		.loc 1 413 118 view .LVU257
 902 0544 4C09EE   		or	rsi, r13	# tmp452, tmp450
 903 0547 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_226, tmp452
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 904              		.loc 1 412 40 is_stmt 1 view .LVU258
GAS LISTING /tmp/ccfflXEb.s 			page 28


 905 054b 4D8D7E05 		lea	r15, 5[r14]	# i,
 906              	.LVL42:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 907              		.loc 1 412 25 view .LVU259
 908              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 909              		.loc 1 412 5 is_stmt 0 view .LVU260
 910 054f 4D39F9   		cmp	r9, r15	# loop_range, i
 911 0552 0F822001 		jb	.L10	#,
 911      0000
 912              		.loc 1 413 9 is_stmt 1 view .LVU261
 913              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 914              		.loc 1 413 83 is_stmt 0 view .LVU262
 915 0558 4189D3   		mov	r11d, edx	# tmp453, tmp355
 916              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 917              		.loc 1 413 74 view .LVU263
 918 055b 4189C5   		mov	r13d, eax	# tmp456, pattern_size
 919              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 920              		.loc 1 413 83 view .LVU264
 921 055e 450FAFDF 		imul	r11d, r15d	# tmp453, i
 922              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 923              		.loc 1 413 19 view .LVU265
 924 0562 4D01D7   		add	r15, r10	# tmp455, destination_start_word
 925              	.LVL43:
 926              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 927              		.loc 1 413 83 view .LVU266
 928 0565 4101CB   		add	r11d, ecx	# tmp454, shift
 929              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 930              		.loc 1 413 101 view .LVU267
 931 0568 4183E33F 		and	r11d, 63	# _235,
 932              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 933              		.loc 1 413 129 view .LVU268
 934 056c C4C2A3F7 		shrx	rsi, r8, r11	# tmp458, pattern, _235
 934      F0
 935              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 936              		.loc 1 413 74 view .LVU269
 937 0571 4529DD   		sub	r13d, r11d	# tmp456, _235
 938              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 939              		.loc 1 413 57 view .LVU270
 940 0574 C44291F7 		shlx	r13, r8, r13	# tmp457, pattern, tmp456
 940      E8
 941              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 942              		.loc 1 413 118 view .LVU271
 943 0579 4C09EE   		or	rsi, r13	# tmp459, tmp457
 944 057c 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_241, tmp459
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 945              		.loc 1 412 40 is_stmt 1 view .LVU272
 946 0580 4D8D7E06 		lea	r15, 6[r14]	# i,
 947              	.LVL44:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 948              		.loc 1 412 25 view .LVU273
 949              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 950              		.loc 1 412 5 is_stmt 0 view .LVU274
 951 0584 4D39F9   		cmp	r9, r15	# loop_range, i
 952 0587 0F82EB00 		jb	.L10	#,
 952      0000
GAS LISTING /tmp/ccfflXEb.s 			page 29


 953              		.loc 1 413 9 is_stmt 1 view .LVU275
 954              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 955              		.loc 1 413 83 is_stmt 0 view .LVU276
 956 058d 4189D3   		mov	r11d, edx	# tmp460, tmp355
 957              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 958              		.loc 1 413 74 view .LVU277
 959 0590 4189C5   		mov	r13d, eax	# tmp463, pattern_size
 960              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 961              		.loc 1 413 83 view .LVU278
 962 0593 450FAFDF 		imul	r11d, r15d	# tmp460, i
 963              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 964              		.loc 1 413 19 view .LVU279
 965 0597 4D01D7   		add	r15, r10	# tmp462, destination_start_word
 966              	.LVL45:
 967              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 968              		.loc 1 413 83 view .LVU280
 969 059a 4101CB   		add	r11d, ecx	# tmp461, shift
 970              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 971              		.loc 1 413 101 view .LVU281
 972 059d 4183E33F 		and	r11d, 63	# _250,
 973              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 974              		.loc 1 413 129 view .LVU282
 975 05a1 C4C2A3F7 		shrx	rsi, r8, r11	# tmp465, pattern, _250
 975      F0
 976              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 977              		.loc 1 413 74 view .LVU283
 978 05a6 4529DD   		sub	r13d, r11d	# tmp463, _250
 979              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 980              		.loc 1 413 57 view .LVU284
 981 05a9 C44291F7 		shlx	r13, r8, r13	# tmp464, pattern, tmp463
 981      E8
 982              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 983              		.loc 1 413 118 view .LVU285
 984 05ae 4C09EE   		or	rsi, r13	# tmp466, tmp464
 985 05b1 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_256, tmp466
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 986              		.loc 1 412 40 is_stmt 1 view .LVU286
 987 05b5 4D8D7E07 		lea	r15, 7[r14]	# i,
 988              	.LVL46:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 989              		.loc 1 412 25 view .LVU287
 990              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 991              		.loc 1 412 5 is_stmt 0 view .LVU288
 992 05b9 4D39F9   		cmp	r9, r15	# loop_range, i
 993 05bc 0F82B600 		jb	.L10	#,
 993      0000
 994              		.loc 1 413 9 is_stmt 1 view .LVU289
 995              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 996              		.loc 1 413 83 is_stmt 0 view .LVU290
 997 05c2 4189D3   		mov	r11d, edx	# tmp467, tmp355
 998              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 999              		.loc 1 413 74 view .LVU291
 1000 05c5 4189C5   		mov	r13d, eax	# tmp470, pattern_size
 1001              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1002              		.loc 1 413 83 view .LVU292
 1003 05c8 450FAFDF 		imul	r11d, r15d	# tmp467, i
GAS LISTING /tmp/ccfflXEb.s 			page 30


 1004              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1005              		.loc 1 413 19 view .LVU293
 1006 05cc 4D01D7   		add	r15, r10	# tmp469, destination_start_word
 1007              	.LVL47:
 1008              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1009              		.loc 1 413 83 view .LVU294
 1010 05cf 4101CB   		add	r11d, ecx	# tmp468, shift
 1011              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1012              		.loc 1 413 101 view .LVU295
 1013 05d2 4183E33F 		and	r11d, 63	# _265,
 1014              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1015              		.loc 1 413 129 view .LVU296
 1016 05d6 C4C2A3F7 		shrx	rsi, r8, r11	# tmp472, pattern, _265
 1016      F0
 1017              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1018              		.loc 1 413 74 view .LVU297
 1019 05db 4529DD   		sub	r13d, r11d	# tmp470, _265
 1020              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1021              		.loc 1 413 57 view .LVU298
 1022 05de C44291F7 		shlx	r13, r8, r13	# tmp471, pattern, tmp470
 1022      E8
 1023              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1024              		.loc 1 413 118 view .LVU299
 1025 05e3 4C09EE   		or	rsi, r13	# tmp473, tmp471
 1026 05e6 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_271, tmp473
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1027              		.loc 1 412 40 is_stmt 1 view .LVU300
 1028 05ea 4D8D7E08 		lea	r15, 8[r14]	# i,
 1029              	.LVL48:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1030              		.loc 1 412 25 view .LVU301
 1031              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1032              		.loc 1 412 5 is_stmt 0 view .LVU302
 1033 05ee 4D39F9   		cmp	r9, r15	# loop_range, i
 1034 05f1 0F828100 		jb	.L10	#,
 1034      0000
 1035              		.loc 1 413 9 is_stmt 1 view .LVU303
 1036              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1037              		.loc 1 413 83 is_stmt 0 view .LVU304
 1038 05f7 4189D3   		mov	r11d, edx	# tmp474, tmp355
 1039              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1040              		.loc 1 413 74 view .LVU305
 1041 05fa 4189C5   		mov	r13d, eax	# tmp477, pattern_size
 1042              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1043              		.loc 1 413 83 view .LVU306
 1044 05fd 450FAFDF 		imul	r11d, r15d	# tmp474, i
 1045              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1046              		.loc 1 413 19 view .LVU307
 1047 0601 4D01D7   		add	r15, r10	# tmp476, destination_start_word
 1048              	.LVL49:
 1049              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1050              		.loc 1 413 83 view .LVU308
 1051 0604 4101CB   		add	r11d, ecx	# tmp475, shift
 1052              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1053              		.loc 1 413 101 view .LVU309
 1054 0607 4183E33F 		and	r11d, 63	# _280,
GAS LISTING /tmp/ccfflXEb.s 			page 31


 1055              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1056              		.loc 1 413 129 view .LVU310
 1057 060b C4C2A3F7 		shrx	rsi, r8, r11	# tmp479, pattern, _280
 1057      F0
 1058              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1059              		.loc 1 413 74 view .LVU311
 1060 0610 4529DD   		sub	r13d, r11d	# tmp477, _280
 1061              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1062              		.loc 1 413 57 view .LVU312
 1063 0613 C44291F7 		shlx	r13, r8, r13	# tmp478, pattern, tmp477
 1063      E8
 1064              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1065              		.loc 1 413 118 view .LVU313
 1066 0618 4C09EE   		or	rsi, r13	# tmp480, tmp478
 1067 061b 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_286, tmp480
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1068              		.loc 1 412 40 is_stmt 1 view .LVU314
 1069 061f 4D8D7E09 		lea	r15, 9[r14]	# i,
 1070              	.LVL50:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1071              		.loc 1 412 25 view .LVU315
 1072              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1073              		.loc 1 412 5 is_stmt 0 view .LVU316
 1074 0623 4D39F9   		cmp	r9, r15	# loop_range, i
 1075 0626 7250     		jb	.L10	#,
 1076              		.loc 1 413 9 is_stmt 1 view .LVU317
 1077              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1078              		.loc 1 413 83 is_stmt 0 view .LVU318
 1079 0628 4189D3   		mov	r11d, edx	# tmp481, tmp355
 1080              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1081              		.loc 1 413 74 view .LVU319
 1082 062b 4189C5   		mov	r13d, eax	# tmp484, pattern_size
 1083              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1084              		.loc 1 413 83 view .LVU320
 1085 062e 450FAFDF 		imul	r11d, r15d	# tmp481, i
 1086              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1087              		.loc 1 412 40 view .LVU321
 1088 0632 4983C60A 		add	r14, 10	# i,
 1089              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1090              		.loc 1 413 19 view .LVU322
 1091 0636 4D01D7   		add	r15, r10	# tmp483, destination_start_word
 1092              	.LVL51:
 1093              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1094              		.loc 1 413 83 view .LVU323
 1095 0639 4101CB   		add	r11d, ecx	# tmp482, shift
 1096              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1097              		.loc 1 413 101 view .LVU324
 1098 063c 4183E33F 		and	r11d, 63	# _295,
 1099              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1100              		.loc 1 413 129 view .LVU325
 1101 0640 C4C2A3F7 		shrx	rsi, r8, r11	# tmp486, pattern, _295
 1101      F0
 1102              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1103              		.loc 1 413 74 view .LVU326
 1104 0645 4529DD   		sub	r13d, r11d	# tmp484, _295
GAS LISTING /tmp/ccfflXEb.s 			page 32


 1105              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1106              		.loc 1 413 57 view .LVU327
 1107 0648 C44291F7 		shlx	r13, r8, r13	# tmp485, pattern, tmp484
 1107      E8
 1108              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1109              		.loc 1 413 118 view .LVU328
 1110 064d 4C09EE   		or	rsi, r13	# tmp487, tmp485
 1111              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1112              		.loc 1 412 5 view .LVU329
 1113 0650 4D39F1   		cmp	r9, r14	# loop_range, i
 1114              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1115              		.loc 1 413 118 view .LVU330
 1116 0653 4A8934FF 		mov	QWORD PTR [rdi+r15*8], rsi	# *_301, tmp487
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1117              		.loc 1 412 40 is_stmt 1 view .LVU331
 1118              	.LVL52:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1119              		.loc 1 412 25 view .LVU332
 1120              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1121              		.loc 1 412 5 is_stmt 0 view .LVU333
 1122 0657 721F     		jb	.L10	#,
 1123              		.loc 1 413 9 is_stmt 1 view .LVU334
 1124              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1125              		.loc 1 413 83 is_stmt 0 view .LVU335
 1126 0659 410FAFD6 		imul	edx, r14d	# tmp488, i
 1127              	.LVL53:
 1128              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1129              		.loc 1 413 19 view .LVU336
 1130 065d 4D01D6   		add	r14, r10	# tmp490, destination_start_word
 1131              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1132              		.loc 1 413 83 view .LVU337
 1133 0660 01D1     		add	ecx, edx	# tmp489, tmp488
 1134              	.LVL54:
 1135              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1136              		.loc 1 413 101 view .LVU338
 1137 0662 83E13F   		and	ecx, 63	# _108,
 1138              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1139              		.loc 1 413 74 view .LVU339
 1140 0665 29C8     		sub	eax, ecx	# tmp491, _108
 1141              	.LVL55:
 1142              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1143              		.loc 1 413 57 view .LVU340
 1144 0667 C4C2F9F7 		shlx	rdx, r8, rax	# tmp492, pattern, tmp491
 1144      D0
 1145              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1146              		.loc 1 413 129 view .LVU341
 1147 066c C442F3F7 		shrx	r8, r8, rcx	# tmp493, pattern, _108
 1147      C0
 1148              	.LVL56:
 1149              	# sieve_extend.c:413:         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((
 1150              		.loc 1 413 118 view .LVU342
 1151 0671 4909D0   		or	r8, rdx	# tmp494, tmp492
 1152 0674 4E8904F7 		mov	QWORD PTR [rdi+r14*8], r8	# *_42, tmp494
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1153              		.loc 1 412 40 is_stmt 1 view .LVU343
GAS LISTING /tmp/ccfflXEb.s 			page 33


 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1154              		.loc 1 412 25 view .LVU344
 1155              	.L10:
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1156              		.loc 1 412 25 is_stmt 0 view .LVU345
 1157              	.LBE313:
 414:sieve_extend.c ****     }
 415:sieve_extend.c ****     bitstorage[destination_stop_word] &= chopmask(destination_stop);
 1158              		.loc 1 415 5 is_stmt 1 view .LVU346
 1159              	# sieve_extend.c:415:     bitstorage[destination_stop_word] &= chopmask(destination_stop);
 1160              		.loc 1 415 39 is_stmt 0 view .LVU347
 1161 0678 4A211CE7 		and	QWORD PTR [rdi+r12*8], rbx	# *_57, _124
 1162              	# sieve_extend.c:416: }
 416:sieve_extend.c **** }
 1163              		.loc 1 416 1 view .LVU348
 1164 067c 488D65D8 		lea	rsp, -40[rbp]	#,
 1165 0680 5B       		pop	rbx	#
 1166 0681 415C     		pop	r12	#
 1167              	.LVL57:
 1168              		.loc 1 416 1 view .LVU349
 1169 0683 415D     		pop	r13	#
 1170 0685 415E     		pop	r14	#
 1171 0687 415F     		pop	r15	#
 1172 0689 5D       		pop	rbp	#
 1173              		.cfi_remember_state
 1174              		.cfi_def_cfa 7, 8
 1175 068a C3       		ret	
 1176              	.LVL58:
 1177 068b 0F1F4400 		.p2align 4,,7
 1177      00
 1178              		.p2align 3
 1179              	.L49:
 1180              		.cfi_restore_state
 397:sieve_extend.c ****         return;
 1181              		.loc 1 397 9 is_stmt 1 view .LVU350
 1182              	# sieve_extend.c:397:         bitstorage[destination_start_word] |= (pattern << bitindex(destinatio
 397:sieve_extend.c ****         return;
 1183              		.loc 1 397 88 is_stmt 0 view .LVU351
 1184 0690 4821D8   		and	rax, rbx	# tmp351, _124
 1185              	# sieve_extend.c:397:         bitstorage[destination_start_word] |= (pattern << bitindex(destinatio
 397:sieve_extend.c ****         return;
 1186              		.loc 1 397 44 view .LVU352
 1187 0693 4C09F8   		or	rax, r15	# tmp352, pretmp_118
 1188 0696 498906   		mov	QWORD PTR [r14], rax	# *_117, tmp352
 398:sieve_extend.c ****     }
 1189              		.loc 1 398 9 is_stmt 1 view .LVU353
 1190              	# sieve_extend.c:416: }
 1191              		.loc 1 416 1 is_stmt 0 view .LVU354
 1192 0699 488D65D8 		lea	rsp, -40[rbp]	#,
 1193 069d 5B       		pop	rbx	#
 1194 069e 415C     		pop	r12	#
 1195              	.LVL59:
 1196              		.loc 1 416 1 view .LVU355
 1197 06a0 415D     		pop	r13	#
 1198 06a2 415E     		pop	r14	#
 1199 06a4 415F     		pop	r15	#
 1200 06a6 5D       		pop	rbp	#
GAS LISTING /tmp/ccfflXEb.s 			page 34


 1201              		.cfi_remember_state
 1202              		.cfi_def_cfa 7, 8
 1203 06a7 C3       		ret	
 1204              	.LVL60:
 1205              	.L50:
 1206              		.cfi_restore_state
 1207              		.loc 1 416 1 view .LVU356
 1208 06a8 C5F877   		vzeroupper
 1209 06ab EBCB     		jmp	.L10	#
 1210              	.LVL61:
 1211              	.L12:
 1212              	.LBB314:
 1213              	# sieve_extend.c:412:     for (counter_t i=0; i<=loop_range; ++i ) {
 412:sieve_extend.c ****         bitstorage[destination_start_word+i] = (pattern << (pattern_size - ((shift+i*pattern_shift)
 1214              		.loc 1 412 20 view .LVU357
 1215 06ad 4531F6   		xor	r14d, r14d	# i
 1216 06b0 E979FBFF 		jmp	.L7	#
 1216      FF
 1217              	.L11:
 1218 06b5 4531F6   		xor	r14d, r14d	# tmp.149
 1219              		.p2align 4,,2
 1220 06b8 E994FDFF 		jmp	.L6	#
 1220      FF
 1221              	.LBE314:
 1222              		.cfi_endproc
 1223              	.LFE66:
 1225 06bd 0F1F00   		.p2align 4
 1226              		.globl	compare_tuning_result
 1228              	compare_tuning_result:
 1229              	.LVL62:
 1230              	.LFB83:
 417:sieve_extend.c **** 
 418:sieve_extend.c **** static void extendSieve_aligned(bitword_t* bitstorage, const counter_t source_start, const counter_
 419:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 420:sieve_extend.c **** 
 421:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 422:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 423:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 424:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 425:sieve_extend.c ****     
 426:sieve_extend.c ****     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 427:sieve_extend.c **** 
 428:sieve_extend.c ****     while (copy_word + size <= destination_stop_word) {
 429:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 430:sieve_extend.c ****         copy_word += size;
 431:sieve_extend.c ****     }
 432:sieve_extend.c **** 
 433:sieve_extend.c ****    while (copy_word < destination_stop_word) {
 434:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 435:sieve_extend.c ****         source_word++;
 436:sieve_extend.c ****         copy_word++;
 437:sieve_extend.c ****     }
 438:sieve_extend.c **** 
 439:sieve_extend.c **** }
 440:sieve_extend.c **** 
 441:sieve_extend.c **** #define forward_distance 4
 442:sieve_extend.c **** static void extendSieve_shiftright_vector(bitword_t* bitstorage, const counter_t source_start, cons
GAS LISTING /tmp/ccfflXEb.s 			page 35


 443:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 444:sieve_extend.c ****    
 445:sieve_extend.c ****     bitvector_t* bitstorage_vector = (bitvector_t*) bitstorage;
 446:sieve_extend.c **** 
 447:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 448:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 449:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 450:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 451:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 452:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 453:sieve_extend.c **** 
 454:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the start in to not lose da
 455:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
 456:sieve_extend.c ****                                 & keepmask(copy_start);
 457:sieve_extend.c **** 
 458:sieve_extend.c ****     if (copy_word >= destination_stop_word) return; // rapid exit for one word variant
 459:sieve_extend.c **** 
 460:sieve_extend.c ****     copy_word++;
 461:sieve_extend.c **** 
 462:sieve_extend.c ****     debug printf("..copy distance %ju\n",(uintmax_t) copy_word - (uintmax_t) source_word);
 463:sieve_extend.c ****     if (((copy_word - source_word) > 8)) {
 464:sieve_extend.c **** 
 465:sieve_extend.c ****         // move one vector further
 466:sieve_extend.c ****         counter_t target_word = wordindex(vectorstart(source_start+size)+VECTOR_SIZE_counter);
 467:sieve_extend.c ****         counter_t delta_word   = 4-((copy_word-source_word-1) % 4);
 468:sieve_extend.c ****         if (delta_word==0) { 
 469:sieve_extend.c ****             target_word += 8;
 470:sieve_extend.c ****         }
 471:sieve_extend.c **** 
 472:sieve_extend.c ****         debug printf("..source_word %ju copy_word %ju mod %ju target_word %ju\n",source_word, copy_
 473:sieve_extend.c **** 
 474:sieve_extend.c ****         #pragma GCC ivdep
 475:sieve_extend.c ****         for (; copy_word < target_word; copy_word++, source_word++ ) {
 476:sieve_extend.c ****             bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source
 477:sieve_extend.c ****         }
 478:sieve_extend.c **** 
 479:sieve_extend.c ****         if (delta_word==0) { 
 480:sieve_extend.c ****             delta_word = 4;
 481:sieve_extend.c ****             source_word += 4;
 482:sieve_extend.c ****         }
 483:sieve_extend.c **** 
 484:sieve_extend.c ****         counter_t source_vector = vectorfromword(source_word+1);
 485:sieve_extend.c ****         counter_t copy_vector = vectorfromword(copy_word);
 486:sieve_extend.c **** 
 487:sieve_extend.c ****         // debug printf("..using vectors source_vector %ju copy vector %ju target_word %ju delta_wo
 488:sieve_extend.c **** 
 489:sieve_extend.c ****         const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
 490:sieve_extend.c ****         const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
 491:sieve_extend.c ****         const bitvector_t shift_vector = { shift, shift, shift, shift };
 492:sieve_extend.c ****         const bitvector_t shift_flipped_vector = { shift_flipped, shift_flipped, shift_flipped, shi
 493:sieve_extend.c **** 
 494:sieve_extend.c ****         const counter_t target_vector = vectorindex(destination_stop);
 495:sieve_extend.c **** 
 496:sieve_extend.c ****         // debug printf("..should be copy from source_word %ju to %ju, but takes vector %ju to %ju 
 497:sieve_extend.c **** 
 498:sieve_extend.c ****         // dump_bitstorage(bitstorage, copy_word+4);
 499:sieve_extend.c **** 
GAS LISTING /tmp/ccfflXEb.s 			page 36


 500:sieve_extend.c ****         // debug printf("Will copy from %ju to %ju  vector %ju to %ju at copy_word %ju\n",source_ve
 501:sieve_extend.c ****         #pragma GCC ivdep
 502:sieve_extend.c ****         for (; copy_vector <= target_vector; copy_vector++, source_vector++ ) {
 503:sieve_extend.c ****             bitvector_t source0 = bitstorage_vector[source_vector];
 504:sieve_extend.c ****             bitvector_t source1 = bitstorage_vector[source_vector+1];
 505:sieve_extend.c ****             bitvector_t copy1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped_vector
 506:sieve_extend.c ****             bitvector_t copy2 = __builtin_shuffle(source0,source1,shuffle2) << shift_vector;
 507:sieve_extend.c ****             bitstorage_vector[copy_vector] = copy1 | copy2;
 508:sieve_extend.c ****             // copy_word += 4;
 509:sieve_extend.c ****             // source_word += 4;
 510:sieve_extend.c ****         }
 511:sieve_extend.c **** 
 512:sieve_extend.c ****         // target_word = target_vector*4;
 513:sieve_extend.c ****         // for (; copy_word <= target_word; copy_word++, source_word++ ) {
 514:sieve_extend.c ****         //     bitword_t shouldbe = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source
 515:sieve_extend.c ****         //     bitword_t asis = bitstorage[copy_word];
 516:sieve_extend.c ****         //     debug printf("Copy_word = %ju\n",copy_word);
 517:sieve_extend.c ****         //     if (shouldbe != asis) {
 518:sieve_extend.c ****         //         printf("ERROR expected at copy_word %ju\n", copy_word);
 519:sieve_extend.c ****         //         printWord(shouldbe);
 520:sieve_extend.c ****         //         printf("\n");
 521:sieve_extend.c ****         //         printf("But is\n");
 522:sieve_extend.c ****         //         printWord(asis);
 523:sieve_extend.c ****         //         printf("\n");
 524:sieve_extend.c ****         //         // dump_bitstorage(bitstorage, copy_word+4);
 525:sieve_extend.c ****         //         exit(0);
 526:sieve_extend.c ****         //     }
 527:sieve_extend.c ****         //     else {
 528:sieve_extend.c ****         //         // debug printf("Correct for copy_word %ju\n",copy_word);
 529:sieve_extend.c ****         //     }
 530:sieve_extend.c ****         // }
 531:sieve_extend.c **** 
 532:sieve_extend.c ****         // copy_word += 4;
 533:sieve_extend.c ****         // source_word += 4;
 534:sieve_extend.c **** 
 535:sieve_extend.c **** 
 536:sieve_extend.c ****         // #pragma GCC ivdep 
 537:sieve_extend.c ****         // for (; copy_word <= destination_stop_word; copy_word++,source_word++ ) {
 538:sieve_extend.c ****         //     bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[sou
 539:sieve_extend.c ****         // }
 540:sieve_extend.c ****         // bitstorage[copy_word] &= chopmask(destination_stop);
 541:sieve_extend.c ****     }
 542:sieve_extend.c ****     else {
 543:sieve_extend.c ****         register counter_t i = 0;
 544:sieve_extend.c ****         bitword_t* copy_ptr   = &bitstorage[copy_word];
 545:sieve_extend.c ****         bitword_t* source_ptr = &bitstorage[source_word];
 546:sieve_extend.c ****         bitword_t* dest_ptr   = &bitstorage[destination_stop_word];
 547:sieve_extend.c ****         counter_t size_word_ptr   = dest_ptr - copy_ptr;
 548:sieve_extend.c ****         for (; i <= size_word_ptr; i++)
 549:sieve_extend.c ****             *(copy_ptr+i) = (*(source_ptr+i) >> shift_flipped) | (*(source_ptr+i+1) << shift);
 550:sieve_extend.c ****     }
 551:sieve_extend.c **** }
 552:sieve_extend.c **** 
 553:sieve_extend.c **** static inline counter_t extendSieve_shiftleft_unrolled(bitword_t* bitstorage, const counter_t align
 554:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 555:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 556:sieve_extend.c ****     counter_t distance = 0;
GAS LISTING /tmp/ccfflXEb.s 			page 37


 557:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 558:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 559:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 560:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 561:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 562:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 563:sieve_extend.c ****         copy_word += 2;
 564:sieve_extend.c ****         source_word += 2;
 565:sieve_extend.c ****         distance += 2;
 566:sieve_extend.c ****     }
 567:sieve_extend.c ****     return distance;
 568:sieve_extend.c **** }
 569:sieve_extend.c **** 
 570:sieve_extend.c **** 
 571:sieve_extend.c **** 
 572:sieve_extend.c **** 
 573:sieve_extend.c **** static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter_t source_start, const
 574:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 575:sieve_extend.c ****    
 576:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 577:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 578:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 579:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 580:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 581:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 582:sieve_extend.c **** 
 583:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstorage[copy_word] >> shift
 584:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 585:sieve_extend.c **** 
 586:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 587:sieve_extend.c **** 
 588:sieve_extend.c ****     if (size >= WORD_SIZE_counter) {
 589:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 590:sieve_extend.c **** 
 591:sieve_extend.c ****         #pragma GCC ivdep
 592:sieve_extend.c ****         for (register counter_t i = 0; i <loop_distance; ++i) {
 593:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 594:sieve_extend.c ****         }
 595:sieve_extend.c **** 
 596:sieve_extend.c ****         source_word += loop_distance; copy_word+= loop_distance;
 597:sieve_extend.c ****     }
 598:sieve_extend.c **** 
 599:sieve_extend.c ****     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 600:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 601:sieve_extend.c ****     }
 602:sieve_extend.c **** 
 603:sieve_extend.c ****     // TODO: this looks a bug (copyword = destination_stop_word+1): why is it 1000 faster?
 604:sieve_extend.c ****     // bitstorage[copy_word] &= chopmask(destination_stop);
 605:sieve_extend.c **** 
 606:sieve_extend.c **** }
 607:sieve_extend.c **** 
 608:sieve_extend.c **** static void  extendSieve_shiftright_base(bitword_t* bitstorage, const counter_t source_start, const
 609:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 610:sieve_extend.c ****    
 611:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 612:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 613:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
GAS LISTING /tmp/ccfflXEb.s 			page 38


 614:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 615:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 616:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 617:sieve_extend.c **** 
 618:sieve_extend.c ****     if (copy_word >= destination_stop_word) { 
 619:sieve_extend.c ****         bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the start in to not los
 620:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
 621:sieve_extend.c ****                                 & keepmask(copy_start) & chopmask(destination_stop);
 622:sieve_extend.c ****         return; // rapid exit for one word variant
 623:sieve_extend.c ****     }
 624:sieve_extend.c **** 
 625:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] << shift)  // or the start in to not lose da
 626:sieve_extend.c ****                                 | (bitstorage[copy_word] >> shift_flipped))
 627:sieve_extend.c ****                                 & keepmask(copy_start);
 628:sieve_extend.c ****     
 629:sieve_extend.c ****     copy_word++;
 630:sieve_extend.c **** 
 631:sieve_extend.c ****     debug { printf("...start - %ju - %ju - end\n",(uintmax_t)wordindex(copy_start), (uintmax_t)dest
 632:sieve_extend.c **** 
 633:sieve_extend.c ****     for (; copy_word <= destination_stop_word; copy_word++, source_word++ ) 
 634:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 635:sieve_extend.c ****     // bitstorage[copy_word] &= chopmask(destination_stop);
 636:sieve_extend.c **** 
 637:sieve_extend.c **** }
 638:sieve_extend.c **** 
 639:sieve_extend.c **** static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t source_start, const counte
 640:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 641:sieve_extend.c **** 
 642:sieve_extend.c ****     const counter_t destination_stop_word = wordindex(destination_stop);
 643:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 644:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 645:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 646:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 647:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 648:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 649:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 650:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 651:sieve_extend.c **** 
 652:sieve_extend.c ****     copy_word++;
 653:sieve_extend.c ****     source_word++;
 654:sieve_extend.c **** 
 655:sieve_extend.c ****     const counter_t aligned_copy_word = min(source_word + size, destination_stop_word); // after <<
 656:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitstorage, aligned_copy_word, shift
 657:sieve_extend.c ****     source_word += distance;
 658:sieve_extend.c ****     copy_word += distance;
 659:sieve_extend.c **** 
 660:sieve_extend.c ****      debug { counter_t fast_loop_stop_word = uintsafeminus(aligned_copy_word,2); printf("...start -
 661:sieve_extend.c **** 
 662:sieve_extend.c ****     #pragma GCC ivdep
 663:sieve_extend.c ****     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 664:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 665:sieve_extend.c ****     }
 666:sieve_extend.c **** 
 667:sieve_extend.c ****     if (copy_word >= destination_stop_word) return;
 668:sieve_extend.c **** 
 669:sieve_extend.c ****     source_word = copy_word - size; // recalibrate
 670:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
GAS LISTING /tmp/ccfflXEb.s 			page 39


 671:sieve_extend.c **** 
 672:sieve_extend.c ****     #pragma GCC ivdep
 673:sieve_extend.c ****     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 674:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 675:sieve_extend.c **** 
 676:sieve_extend.c ****     #pragma GCC ivdep
 677:sieve_extend.c ****     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 678:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 679:sieve_extend.c **** 
 680:sieve_extend.c **** 
 681:sieve_extend.c ****  }
 682:sieve_extend.c **** 
 683:sieve_extend.c **** static inline void extendSieve(bitword_t* bitstorage, const counter_t source_start, const counter_t
 684:sieve_extend.c ****     if (size < WORD_SIZE_counter) return extendSieve_smallSize (bitstorage, source_start, size, des
 685:sieve_extend.c **** 
 686:sieve_extend.c ****     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 687:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 688:sieve_extend.c **** 
 689:sieve_extend.c ****     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source_start, size, destinat
 690:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 691:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 692:sieve_extend.c **** }
 693:sieve_extend.c **** 
 694:sieve_extend.c **** static void sieve_block_stripe(bitword_t* bitstorage, const counter_t block_start, const counter_t 
 695:sieve_extend.c ****     counter_t prime = prime_start;
 696:sieve_extend.c ****     counter_t start = 0;
 697:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 698:sieve_extend.c **** 
 699:sieve_extend.c ****     debug printf("Block strip for block %ju - %ju\n",(uintmax_t)block_start,(uintmax_t)block_stop);
 700:sieve_extend.c ****     
 701:sieve_extend.c ****     while (prime*step <= block_stop) {
 702:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 703:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 704:sieve_extend.c ****         else 
 705:sieve_extend.c ****             start = prime * prime * 2 + prime * 2;
 706:sieve_extend.c **** 
 707:sieve_extend.c ****         if unlikely(step < VECTORSTEP_FASTER) {
 708:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 709:sieve_extend.c ****             prime = searchBitFalse(bitstorage, prime+1 );
 710:sieve_extend.c ****         }
 711:sieve_extend.c ****         else {
 712:sieve_extend.c ****             setBitsTrue_largeRange(bitstorage, start, step, block_stop);
 713:sieve_extend.c ****             prime = searchBitFalse_longRange(bitstorage, prime+1 );
 714:sieve_extend.c ****         }
 715:sieve_extend.c **** 
 716:sieve_extend.c ****         step  = prime * 2 + 1;
 717:sieve_extend.c ****     }
 718:sieve_extend.c **** }
 719:sieve_extend.c **** 
 720:sieve_extend.c **** struct block {
 721:sieve_extend.c ****     counter_t pattern_size; // size of pattern applied 
 722:sieve_extend.c ****     counter_t pattern_start; // start of pattern
 723:sieve_extend.c ****     counter_t prime; // next prime to be striped
 724:sieve_extend.c **** };
 725:sieve_extend.c **** 
 726:sieve_extend.c **** // returns prime that could not be handled:
 727:sieve_extend.c **** // start is too large
GAS LISTING /tmp/ccfflXEb.s 			page 40


 728:sieve_extend.c **** // range is too big
 729:sieve_extend.c **** static struct block sieve_block_extend(struct sieve_t *sieve, const counter_t block_start, const co
 730:sieve_extend.c ****     bitword_t* bitstorage      = sieve->bitstorage;
 731:sieve_extend.c ****     register counter_t prime   = 0;
 732:sieve_extend.c ****     counter_t patternsize_bits = 1;
 733:sieve_extend.c ****     counter_t pattern_start    = 0;
 734:sieve_extend.c ****     counter_t range_stop       = block_start;
 735:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 736:sieve_extend.c **** 
 737:sieve_extend.c ****     sieve->bitstorage[wordindex(block_start)] = SAFE_ZERO; // only the first word has to be cleared
 738:sieve_extend.c ****     
 739:sieve_extend.c ****     for (;range_stop < block_stop;) {
 740:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 741:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 742:sieve_extend.c ****         if unlikely(start > block_stop) break;
 743:sieve_extend.c **** 
 744:sieve_extend.c ****         const counter_t step  = prime * 2 + 1;
 745:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 746:sieve_extend.c **** 
 747:sieve_extend.c ****         range_stop = block_start + patternsize_bits * step * 2;  // range is x2 so the second block
 748:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 749:sieve_extend.c ****         block.pattern_start = pattern_start;
 750:sieve_extend.c ****         if unlikely(range_stop > block_stop) break;//return block; //range_stop = block_stop;
 751:sieve_extend.c **** 
 752:sieve_extend.c ****         if likely(patternsize_bits>1) {
 753:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 754:sieve_extend.c ****             extendSieve(bitstorage, pattern_start, patternsize_bits, range_stop);
 755:sieve_extend.c ****         }
 756:sieve_extend.c ****         patternsize_bits *= step;
 757:sieve_extend.c **** 
 758:sieve_extend.c ****         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitstorage, start, (bitshift_
 759:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitstorage, start, step, rang
 760:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitstorage, start, step, ra
 761:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitstorage, start, step, range_sto
 762:sieve_extend.c ****         block.prime = prime;
 763:sieve_extend.c ****     } 
 764:sieve_extend.c **** 
 765:sieve_extend.c ****     return block;
 766:sieve_extend.c **** }
 767:sieve_extend.c **** 
 768:sieve_extend.c **** static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t blocksize) {
 769:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 770:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 771:sieve_extend.c **** 
 772:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 773:sieve_extend.c **** 
 774:sieve_extend.c ****     // fill the whole sieve bij adding en copying incrementally
 775:sieve_extend.c ****     struct block block = sieve_block_extend(sieve, 0, sieve->bits);
 776:sieve_extend.c ****     extendSieve(bitstorage, block.pattern_start, block.pattern_size, sieve->bits);
 777:sieve_extend.c ****     counter_t startprime = block.prime;
 778:sieve_extend.c **** 
 779:sieve_extend.c ****     // //#pragma GCC unroll 8
 780:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 781:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 782:sieve_extend.c ****         counter_t prime = searchBitFalse(bitstorage, startprime);
 783:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 784:sieve_extend.c ****     } 
GAS LISTING /tmp/ccfflXEb.s 			page 41


 785:sieve_extend.c **** 
 786:sieve_extend.c ****     return sieve;
 787:sieve_extend.c **** }
 788:sieve_extend.c **** 
 789:sieve_extend.c **** static struct sieve_t *sieve_blockbyblock(const counter_t maxints, const counter_t blocksize) {
 790:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 791:sieve_extend.c ****     counter_t prime     = 1;
 792:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 793:sieve_extend.c ****     for(counter_t index=0; index<wordindex(maxints/2); index++) {
 794:sieve_extend.c ****         bitstorage[index]=SAFE_ZERO;
 795:sieve_extend.c ****     }
 796:sieve_extend.c **** 
 797:sieve_extend.c ****     debug printf("Running sieve to find all primes up to %ju with blocksize %ju\n",(uintmax_t)maxin
 798:sieve_extend.c **** 
 799:sieve_extend.c ****     // //#pragma GCC unroll 8
 800:sieve_extend.c ****     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= sieve->bits; block_sta
 801:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 802:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime);
 803:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 804:sieve_extend.c ****     } 
 805:sieve_extend.c **** 
 806:sieve_extend.c ****     return sieve;
 807:sieve_extend.c **** }
 808:sieve_extend.c **** 
 809:sieve_extend.c **** static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 810:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 811:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 812:sieve_extend.c ****         primeCount++;
 813:sieve_extend.c ****         if (factor < maxFactor/2) {
 814:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 815:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 816:sieve_extend.c ****         }
 817:sieve_extend.c ****     }
 818:sieve_extend.c ****     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t)sieve->bits*2+1);
 819:sieve_extend.c **** }
 820:sieve_extend.c **** 
 821:sieve_extend.c **** static counter_t count_primes(struct sieve_t *sieve) {
 822:sieve_extend.c ****     counter_t primeCount = 1;
 823:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 824:sieve_extend.c ****     return primeCount;
 825:sieve_extend.c **** }
 826:sieve_extend.c **** 
 827:sieve_extend.c **** static void deepAnalyzePrimes(struct sieve_t *sieve) {
 828:sieve_extend.c ****     printf("DeepAnalyzing\n");
 829:sieve_extend.c ****     counter_t warn_prime = 0;
 830:sieve_extend.c ****     counter_t warn_nonprime = 0;
 831:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 832:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 833:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 834:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 835:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 836:sieve_extend.c ****                 }
 837:sieve_extend.c ****             }
 838:sieve_extend.c ****         }
 839:sieve_extend.c ****         else {
 840:sieve_extend.c ****             counter_t c_prime = 0;
 841:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccfflXEb.s 			page 42


 842:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 843:sieve_extend.c ****             }
 844:sieve_extend.c ****             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) was marked non-prime, 
 845:sieve_extend.c ****         }
 846:sieve_extend.c ****     }
 847:sieve_extend.c **** }
 848:sieve_extend.c **** 
 849:sieve_extend.c **** 
 850:sieve_extend.c **** int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 851:sieve_extend.c **** 
 852:sieve_extend.c ****     counter_t primecount = count_primes(sieve);
 853:sieve_extend.c ****     counter_t valid_primes = 0;
 854:sieve_extend.c ****     switch(sieve->size) {
 855:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 856:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 857:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 858:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 859:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 860:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 861:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 862:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 863:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 864:sieve_extend.c ****         default:            valid_primes= 0;
 865:sieve_extend.c ****     }
 866:sieve_extend.c **** 
 867:sieve_extend.c ****     int valid = (valid_primes == primecount);
 868:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 869:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 870:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 871:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 872:sieve_extend.c ****     }
 873:sieve_extend.c ****     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
 874:sieve_extend.c ****     return (valid);
 875:sieve_extend.c **** }
 876:sieve_extend.c **** 
 877:sieve_extend.c **** void usage(char *name) {
 878:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 879:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 880:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 881:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 882:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 883:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 884:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 885:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 886:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 887:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 888:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 889:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 890:sieve_extend.c ****     exit(1);
 891:sieve_extend.c **** }
 892:sieve_extend.c **** 
 893:sieve_extend.c **** typedef struct  {
 894:sieve_extend.c ****     counter_t maxints;
 895:sieve_extend.c ****     counter_t blocksize_bits;
 896:sieve_extend.c ****     counter_t blocksize_kb;
 897:sieve_extend.c ****     counter_t free_bits;
 898:sieve_extend.c ****     counter_t smallstep_faster;
GAS LISTING /tmp/ccfflXEb.s 			page 43


 899:sieve_extend.c ****     counter_t mediumstep_faster;
 900:sieve_extend.c ****     counter_t vectorstep_faster;
 901:sieve_extend.c ****     counter_t sample_max;
 902:sieve_extend.c ****     double    sample_duration;
 903:sieve_extend.c ****     counter_t passes;
 904:sieve_extend.c ****     double    elapsed_time;
 905:sieve_extend.c ****     double    avg;
 906:sieve_extend.c **** } tuning_result_type;
 907:sieve_extend.c **** 
 908:sieve_extend.c **** int compare_tuning_result(const void *a, const void *b) {
 1231              		.loc 1 908 57 is_stmt 1 view -0
 1232              		.cfi_startproc
 1233              		.loc 1 908 57 is_stmt 0 view .LVU359
 1234 06c0 F30F1EFA 		endbr64	
 909:sieve_extend.c ****     tuning_result_type *resultA = (tuning_result_type *)a;
 1235              		.loc 1 909 5 is_stmt 1 view .LVU360
 1236              	.LVL63:
 910:sieve_extend.c ****     tuning_result_type *resultB = (tuning_result_type *)b;
 1237              		.loc 1 910 5 view .LVU361
 911:sieve_extend.c ****     return (resultB->avg > resultA->avg ? 1 : -1);
 1238              		.loc 1 911 5 view .LVU362
 1239              	# sieve_extend.c:911:     return (resultB->avg > resultA->avg ? 1 : -1);
 1240              		.loc 1 911 45 is_stmt 0 view .LVU363
 1241 06c4 C5FB1046 		vmovsd	xmm0, QWORD PTR 88[rsi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning_
 1241      58
 1242 06c9 31C0     		xor	eax, eax	# <retval>
 1243 06cb C5F92F47 		vcomisd	xmm0, QWORD PTR 88[rdi]	# MEM[(struct tuning_result_type *)b_5(D)].avg, MEM[(struct tuning
 1243      58
 1244 06d0 0F97C0   		seta	al	#, <retval>
 1245 06d3 8D4400FF 		lea	eax, -1[rax+rax]	# <retval>,
 1246              	# sieve_extend.c:912: }
 912:sieve_extend.c **** }
 1247              		.loc 1 912 1 view .LVU364
 1248 06d7 C3       		ret	
 1249              		.cfi_endproc
 1250              	.LFE83:
 1252 06d8 0F1F8400 		.p2align 4
 1252      00000000 
 1254              	extendSieve_shiftright_ivdep:
 1255              	.LVL64:
 1256              	.LFB70:
 573:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1257              		.loc 1 573 151 is_stmt 1 view -0
 1258              		.cfi_startproc
 574:sieve_extend.c ****    
 1259              		.loc 1 574 5 view .LVU366
 576:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1260              		.loc 1 576 5 view .LVU367
 1261              	# sieve_extend.c:573: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 573:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1262              		.loc 1 573 151 is_stmt 0 view .LVU368
 1263 06e0 55       		push	rbp	#
 1264              		.cfi_def_cfa_offset 16
 1265              		.cfi_offset 6, -16
 1266              	# sieve_extend.c:577:     const counter_t copy_start = source_start + size;
 577:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1267              		.loc 1 577 21 view .LVU369
GAS LISTING /tmp/ccfflXEb.s 			page 44


 1268 06e1 4C8D0C16 		lea	r9, [rsi+rdx]	# copy_start,
 1269              	# sieve_extend.c:578:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 578:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1270              		.loc 1 578 67 view .LVU370
 1271 06e5 4889F0   		mov	rax, rsi	# _5, source_start
 1272              	# sieve_extend.c:573: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 573:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1273              		.loc 1 573 151 view .LVU371
 1274 06e8 4889E5   		mov	rbp, rsp	#,
 1275              		.cfi_def_cfa_register 6
 1276              	# sieve_extend.c:578:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 578:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1277              		.loc 1 578 67 view .LVU372
 1278 06eb 83E03F   		and	eax, 63	# _5,
 1279              	# sieve_extend.c:573: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 573:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1280              		.loc 1 573 151 view .LVU373
 1281 06ee 4157     		push	r15	#
 1282              	# sieve_extend.c:580:     register counter_t source_word = wordindex(source_start);
 580:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1283              		.loc 1 580 24 view .LVU374
 1284 06f0 48C1EE06 		shr	rsi, 6	# source_word,
 1285              	.LVL65:
 1286              	# sieve_extend.c:573: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 573:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1287              		.loc 1 573 151 view .LVU375
 1288 06f4 4156     		push	r14	#
 1289              	# sieve_extend.c:576:     const counter_t destination_stop_word = wordindex(destination_stop);
 576:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 1290              		.loc 1 576 21 view .LVU376
 1291 06f6 48C1E906 		shr	rcx, 6	# destination_stop_word,
 1292              	.LVL66:
 577:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_calc(source_start);
 1293              		.loc 1 577 5 is_stmt 1 view .LVU377
 578:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1294              		.loc 1 578 5 view .LVU378
 1295              	# sieve_extend.c:573: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 573:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1296              		.loc 1 573 151 is_stmt 0 view .LVU379
 1297 06fa 4155     		push	r13	#
 1298 06fc 4154     		push	r12	#
 1299              		.cfi_offset 15, -24
 1300              		.cfi_offset 14, -32
 1301              		.cfi_offset 13, -40
 1302              		.cfi_offset 12, -48
 1303              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1304              		.loc 1 583 42 view .LVU380
 1305 06fe 4C8D24F5 		lea	r12, 0[0+rsi*8]	# _9,
 1305      00000000 
 1306              	# sieve_extend.c:573: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 573:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1307              		.loc 1 573 151 view .LVU381
 1308 0706 53       		push	rbx	#
 1309              		.cfi_offset 3, -56
 1310              	# sieve_extend.c:578:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 578:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
GAS LISTING /tmp/ccfflXEb.s 			page 45


 1311              		.loc 1 578 39 view .LVU382
 1312 0707 4C89CB   		mov	rbx, r9	# _4, copy_start
 1313              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1314              		.loc 1 583 42 view .LVU383
 1315 070a 4E8D0427 		lea	r8, [rdi+r12]	# _10,
 1316              	# sieve_extend.c:573: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 573:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1317              		.loc 1 573 151 view .LVU384
 1318              	# sieve_extend.c:578:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 578:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1319              		.loc 1 578 39 view .LVU385
 1320 070e 83E33F   		and	ebx, 63	# _4,
 1321              	.LVL67:
 579:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1322              		.loc 1 579 5 is_stmt 1 view .LVU386
 580:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 1323              		.loc 1 580 5 view .LVU387
 581:sieve_extend.c **** 
 1324              		.loc 1 581 5 view .LVU388
 1325              	# sieve_extend.c:573: static void extendSieve_shiftright_ivdep(bitword_t* bitstorage, const counter
 573:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftright (%ju copies)
 1326              		.loc 1 573 151 is_stmt 0 view .LVU389
 1327 0711 4883E4E0 		and	rsp, -32	#,
 1328              	# sieve_extend.c:581:     register counter_t copy_word = wordindex(copy_start);
 581:sieve_extend.c **** 
 1329              		.loc 1 581 24 view .LVU390
 1330 0715 49C1E906 		shr	r9, 6	# copy_word,
 1331              	.LVL68:
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1332              		.loc 1 583 5 is_stmt 1 view .LVU391
 1333              	# sieve_extend.c:578:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 578:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1334              		.loc 1 578 31 is_stmt 0 view .LVU392
 1335 0719 4989DB   		mov	r11, rbx	# shift, _4
 1336              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1337              		.loc 1 583 27 view .LVU393
 1338 071c 4E8D2CCF 		lea	r13, [rdi+r9*8]	# _7,
 1339              	# sieve_extend.c:578:     register const bitshift_t shift = bitindex_calc(copy_start) - bitindex_ca
 578:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 1340              		.loc 1 578 31 view .LVU394
 1341 0720 4929C3   		sub	r11, rax	# shift, _5
 1342              	.LVL69:
 1343              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1344              		.loc 1 583 27 view .LVU395
 1345 0723 4D8B7500 		mov	r14, QWORD PTR 0[r13]	# _8, *_7
 1346              	# sieve_extend.c:579:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 579:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1347              		.loc 1 579 31 view .LVU396
 1348 0727 4883C040 		add	rax, 64	# tmp391,
 1349              	.LVL70:
 1350              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1351              		.loc 1 583 56 view .LVU397
 1352 072b C442A1F7 		shlx	r15, QWORD PTR [r8], r11	# tmp393, *_10, shift
GAS LISTING /tmp/ccfflXEb.s 			page 46


 1352      38
 1353 0730 44895C24 		mov	DWORD PTR -4[rsp], r11d	# %sfp, shift
 1353      FC
 1354              	# sieve_extend.c:579:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 579:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 1355              		.loc 1 579 31 view .LVU398
 1356 0735 4829D8   		sub	rax, rbx	# shift_flipped, _4
 1357              	.LVL71:
 1358              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1359              		.loc 1 583 92 view .LVU399
 1360 0738 C442FBF7 		shrx	r10, r14, rax	# tmp395, _8, shift_flipped
 1360      D6
 1361 073d 894424F8 		mov	DWORD PTR -8[rsp], eax	# %sfp, shift_flipped
 1362              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1363              		.loc 1 583 66 view .LVU400
 1364 0741 4D09FA   		or	r10, r15	# tmp396, tmp393
 1365              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1366              		.loc 1 583 113 view .LVU401
 1367 0744 49C7C7FF 		mov	r15, -1	# tmp399,
 1367      FFFFFF
 1368 074b C4C2E1F7 		shlx	rbx, r15, rbx	# tmp398, tmp399, _4
 1368      DF
 1369              	.LVL72:
 1370              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1371              		.loc 1 583 111 view .LVU402
 1372 0750 4C21D3   		and	rbx, r10	# tmp400, tmp396
 1373              	# sieve_extend.c:584:     if unlikely(++copy_word > destination_stop_word) return; // rapid exit fo
 584:sieve_extend.c **** 
 1374              		.loc 1 584 8 view .LVU403
 1375 0753 4D8D5101 		lea	r10, 1[r9]	# copy_word,
 1376              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1377              		.loc 1 583 27 view .LVU404
 1378 0757 4909DE   		or	r14, rbx	# tmp401, tmp400
 1379              	# sieve_extend.c:584:     if unlikely(++copy_word > destination_stop_word) return; // rapid exit fo
 584:sieve_extend.c **** 
 1380              		.loc 1 584 8 view .LVU405
 1381 075a 4C39D1   		cmp	rcx, r10	# destination_stop_word, copy_word
 1382              	# sieve_extend.c:583:     bitstorage[copy_word] |= ((bitstorage[source_word] << shift) |  (bitstora
 583:sieve_extend.c ****     if unlikely(++copy_word > destination_stop_word) return; // rapid exit for one word variant
 1383              		.loc 1 583 27 view .LVU406
 1384 075d 4D897500 		mov	QWORD PTR 0[r13], r14	# *_7, tmp401
 584:sieve_extend.c **** 
 1385              		.loc 1 584 5 is_stmt 1 view .LVU407
 1386              	.LVL73:
 1387              	# sieve_extend.c:584:     if unlikely(++copy_word > destination_stop_word) return; // rapid exit fo
 584:sieve_extend.c **** 
 1388              		.loc 1 584 8 is_stmt 0 view .LVU408
 1389 0761 0F829306 		jb	.L210	#,
 1389      0000
 586:sieve_extend.c **** 
 1390              		.loc 1 586 5 is_stmt 1 view .LVU409
 588:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
GAS LISTING /tmp/ccfflXEb.s 			page 47


 1391              		.loc 1 588 5 view .LVU410
 1392              	# sieve_extend.c:588:     if (size >= WORD_SIZE_counter) {
 588:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 1393              		.loc 1 588 8 is_stmt 0 view .LVU411
 1394 0767 4883FA3F 		cmp	rdx, 63	# size,
 1395 076b 0F869F06 		jbe	.L56	#,
 1395      0000
 1396              	.LBB315:
 589:sieve_extend.c **** 
 1397              		.loc 1 589 9 is_stmt 1 view .LVU412
 1398              	.LVL74:
 1399              	.LBB316:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1400              		.loc 1 592 14 view .LVU413
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1401              		.loc 1 592 40 view .LVU414
 1402              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1403              		.loc 1 592 9 is_stmt 0 view .LVU415
 1404 0771 4989CF   		mov	r15, rcx	# loop_distance, destination_stop_word
 1405 0774 4D29D7   		sub	r15, r10	# loop_distance, copy_word
 1406              	.LVL75:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1407              		.loc 1 592 9 view .LVU416
 1408 0777 0F843704 		je	.L57	#,
 1408      0000
 1409 077d 4C89C2   		mov	rdx, r8	# tmp402, _10
 1410              	.LVL76:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1411              		.loc 1 592 9 view .LVU417
 1412 0780 41BE0500 		mov	r14d, 5	# tmp406,
 1412      0000
 1413 0786 48C1EA03 		shr	rdx, 3	# tmp402,
 1414 078a 4D8D6FFF 		lea	r13, -1[r15]	# tmp404,
 1415 078e 48F7DA   		neg	rdx	# tmp403
 1416 0791 83E203   		and	edx, 3	# prolog_loop_niters.198,
 1417 0794 488D5A03 		lea	rbx, 3[rdx]	# tmp405,
 1418 0798 4883FB05 		cmp	rbx, 5	# tmp405,
 1419 079c 490F42DE 		cmovb	rbx, r14	# tmp405,, tmp572, tmp406
 1420 07a0 4939DD   		cmp	r13, rbx	# tmp404, tmp572
 1421 07a3 0F82E50A 		jb	.L74	#,
 1421      0000
 1422 07a9 4885D2   		test	rdx, rdx	# prolog_loop_niters.198
 1423 07ac 0F84960A 		je	.L75	#,
 1423      0000
 593:sieve_extend.c ****         }
 1424              		.loc 1 593 13 is_stmt 1 view .LVU418
 1425              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1426              		.loc 1 593 115 is_stmt 0 view .LVU419
 1427 07b2 4E8B6427 		mov	r12, QWORD PTR 8[rdi+r12]	# *_416, *_416
 1427      08
 1428 07b7 C442A1F7 		shlx	r13, r12, r11	# tmp407, *_416, shift
 1428      EC
 1429              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1430              		.loc 1 593 66 view .LVU420
GAS LISTING /tmp/ccfflXEb.s 			page 48


 1431 07bc 4D8B00   		mov	r8, QWORD PTR [r8]	# *_10, *_10
 1432 07bf C442FBF7 		shrx	r14, r8, rax	# tmp409, *_10, shift_flipped
 1432      F0
 1433              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1434              		.loc 1 593 84 view .LVU421
 1435 07c4 4D09EE   		or	r14, r13	# tmp411, tmp407
 1436 07c7 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.198,
 1437 07cb 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# *_421, tmp411
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1438              		.loc 1 592 58 is_stmt 1 view .LVU422
 1439              	.LVL77:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1440              		.loc 1 592 40 view .LVU423
 1441              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1442              		.loc 1 593 111 is_stmt 0 view .LVU424
 1443 07cf 488D5E01 		lea	rbx, 1[rsi]	# tmp553,
 1444              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1445              		.loc 1 592 58 view .LVU425
 1446 07d3 48C74424 		mov	QWORD PTR -16[rsp], 1	# %sfp,
 1446      F0010000 
 1446      00
 1447 07dc 7449     		je	.L59	#,
 593:sieve_extend.c ****         }
 1448              		.loc 1 593 13 is_stmt 1 view .LVU426
 1449              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1450              		.loc 1 593 115 is_stmt 0 view .LVU427
 1451 07de C462A1F7 		shlx	r13, QWORD PTR 8[rdi+rbx*8], r11	# tmp413, *_436, shift
 1451      6CDF08
 1452              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1453              		.loc 1 593 66 view .LVU428
 1454 07e5 C462FBF7 		shrx	r12, QWORD PTR [rdi+rbx*8], rax	# tmp415, *_431, shift_flipped
 1454      24DF
 1455              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1456              		.loc 1 592 58 view .LVU429
 1457 07eb 48C74424 		mov	QWORD PTR -16[rsp], 2	# %sfp,
 1457      F0020000 
 1457      00
 1458              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1459              		.loc 1 593 84 view .LVU430
 1460 07f4 4D09E5   		or	r13, r12	# tmp417, tmp415
 1461 07f7 4E896CCF 		mov	QWORD PTR 16[rdi+r9*8], r13	# *_441, tmp417
 1461      10
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1462              		.loc 1 592 58 is_stmt 1 view .LVU431
 1463              	.LVL78:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1464              		.loc 1 592 40 view .LVU432
 1465 07fc 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.198,
 1466 0800 7525     		jne	.L59	#,
 593:sieve_extend.c ****         }
GAS LISTING /tmp/ccfflXEb.s 			page 49


 1467              		.loc 1 593 13 view .LVU433
 1468              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1469              		.loc 1 592 58 is_stmt 0 view .LVU434
 1470 0802 48C74424 		mov	QWORD PTR -16[rsp], 3	# %sfp,
 1470      F0030000 
 1470      00
 1471              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1472              		.loc 1 593 62 view .LVU435
 1473 080b 4C8D7602 		lea	r14, 2[rsi]	# tmp418,
 1474              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1475              		.loc 1 593 66 view .LVU436
 1476 080f 4E8B2CF7 		mov	r13, QWORD PTR [rdi+r14*8]	# *_210, *_210
 1477              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1478              		.loc 1 593 115 view .LVU437
 1479 0813 C422A1F7 		shlx	r8, QWORD PTR 8[rdi+r14*8], r11	# tmp420, *_215, shift
 1479      44F708
 1480              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1481              		.loc 1 593 66 view .LVU438
 1482 081a C442FBF7 		shrx	r12, r13, rax	# tmp422, *_210, shift_flipped
 1482      E5
 1483              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1484              		.loc 1 593 84 view .LVU439
 1485 081f 4D09E0   		or	r8, r12	# tmp424, tmp422
 1486 0822 4E8944CF 		mov	QWORD PTR 24[rdi+r9*8], r8	# *_220, tmp424
 1486      18
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1487              		.loc 1 592 58 is_stmt 1 view .LVU440
 1488              	.LVL79:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1489              		.loc 1 592 40 view .LVU441
 1490              	.L59:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1491              		.loc 1 592 40 is_stmt 0 view .LVU442
 1492 0827 4D89FD   		mov	r13, r15	# niters.199, loop_distance
 1493 082a 4801D3   		add	rbx, rdx	# tmp428, prolog_loop_niters.198
 1494 082d 4929D5   		sub	r13, rdx	# niters.199, prolog_loop_niters.198
 1495 0830 4C8D0C16 		lea	r9, [rsi+rdx]	# tmp425,
 1496 0834 4D89EE   		mov	r14, r13	# bnd.200, niters.199
 1497 0837 4C01D2   		add	rdx, r10	# tmp430, copy_word
 1498 083a 49C1EE02 		shr	r14, 2	# bnd.200,
 1499 083e 4C8D24D7 		lea	r12, [rdi+rdx*8]	# vectp.213,
 1500 0842 49C1E605 		sal	r14, 5	# _458,
 1501              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1502              		.loc 1 592 33 view .LVU443
 1503 0846 31D2     		xor	edx, edx	# ivtmp.238
 1504 0848 4D8D46E0 		lea	r8, -32[r14]	# tmp562,
 1505 084c 4E8D0CCF 		lea	r9, [rdi+r9*8]	# vectp.204,
 1506 0850 C5F96E4C 		vmovd	xmm1, DWORD PTR -8[rsp]	# _14, %sfp
 1506      24F8
 1507 0856 488D1CDF 		lea	rbx, [rdi+rbx*8]	# vectp.208,
GAS LISTING /tmp/ccfflXEb.s 			page 50


 1508 085a 49C1E805 		shr	r8, 5	# tmp560,
 1509 085e C5F96E44 		vmovd	xmm0, DWORD PTR -4[rsp]	# _12, %sfp
 1509      24FC
 1510 0864 4983C001 		add	r8, 1	# tmp563,
 1511 0868 4183E007 		and	r8d, 7	# tmp564,
 1512 086c 0F840301 		je	.L61	#,
 1512      0000
 1513 0872 4983F801 		cmp	r8, 1	# tmp564,
 1514 0876 0F84CE00 		je	.L152	#,
 1514      0000
 1515 087c 4983F802 		cmp	r8, 2	# tmp564,
 1516 0880 0F84A200 		je	.L153	#,
 1516      0000
 1517 0886 4983F803 		cmp	r8, 3	# tmp564,
 1518 088a 747B     		je	.L154	#,
 1519 088c 4983F804 		cmp	r8, 4	# tmp564,
 1520 0890 7453     		je	.L155	#,
 1521 0892 4983F805 		cmp	r8, 5	# tmp564,
 1522 0896 742C     		je	.L156	#,
 1523 0898 4983F806 		cmp	r8, 6	# tmp564,
 1524 089c 0F85C609 		jne	.L212	#,
 1524      0000
 1525              	.L157:
 593:sieve_extend.c ****         }
 1526              		.loc 1 593 13 is_stmt 1 view .LVU444
 1527              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1528              		.loc 1 593 66 is_stmt 0 view .LVU445
 1529 08a2 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR [r9+rdx]	# tmp924, MEM[base: vectp.204_259, index: ivtmp.238_456, offse
 1529      2411
 1530              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1531              		.loc 1 593 115 view .LVU446
 1532 08a8 C57E6F34 		vmovdqu	ymm14, YMMWORD PTR [rbx+rdx]	# tmp925, MEM[base: vectp.208_266, index: ivtmp.238_456, offs
 1532      13
 1533              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1534              		.loc 1 593 66 view .LVU447
 1535 08ad C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__30.206, tmp924, _14
 1536              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1537              		.loc 1 593 115 view .LVU448
 1538 08b1 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__35.210, tmp925, _12
 1539              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1540              		.loc 1 593 84 view .LVU449
 1541 08b5 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__39.211, vect__30.206, vect__35.210
 1541      F7
 1542              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1543              		.loc 1 593 37 view .LVU450
 1544 08ba C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm6	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B], 
 1544      3414
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1545              		.loc 1 592 58 is_stmt 1 view .LVU451
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1546              		.loc 1 592 40 view .LVU452
GAS LISTING /tmp/ccfflXEb.s 			page 51


 1547 08c0 4883C220 		add	rdx, 32	# ivtmp.238,
 1548              	.L156:
 593:sieve_extend.c ****         }
 1549              		.loc 1 593 13 view .LVU453
 1550              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1551              		.loc 1 593 66 is_stmt 0 view .LVU454
 1552 08c4 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r9+rdx]	# tmp926, MEM[base: vectp.204_259, index: ivtmp.238_456, offset
 1552      1411
 1553              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1554              		.loc 1 593 115 view .LVU455
 1555 08ca C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rbx+rdx]	# tmp927, MEM[base: vectp.208_266, index: ivtmp.238_456, offse
 1555      13
 1556              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1557              		.loc 1 593 66 view .LVU456
 1558 08cf C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__30.206, tmp926, _14
 1559              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1560              		.loc 1 593 115 view .LVU457
 1561 08d3 C5DDF3E8 		vpsllq	ymm5, ymm4, xmm0	# vect__35.210, tmp927, _12
 1562              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1563              		.loc 1 593 84 view .LVU458
 1564 08d7 C545EBC5 		vpor	ymm8, ymm7, ymm5	# vect__39.211, vect__30.206, vect__35.210
 1565              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1566              		.loc 1 593 37 view .LVU459
 1567 08db C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm8	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B], 
 1567      0414
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1568              		.loc 1 592 58 is_stmt 1 view .LVU460
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1569              		.loc 1 592 40 view .LVU461
 1570 08e1 4883C220 		add	rdx, 32	# ivtmp.238,
 1571              	.L155:
 593:sieve_extend.c ****         }
 1572              		.loc 1 593 13 view .LVU462
 1573              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1574              		.loc 1 593 66 is_stmt 0 view .LVU463
 1575 08e5 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR [r9+rdx]	# tmp928, MEM[base: vectp.204_259, index: ivtmp.238_456, offset
 1575      0C11
 1576              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1577              		.loc 1 593 115 view .LVU464
 1578 08eb C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rbx+rdx]	# tmp929, MEM[base: vectp.208_266, index: ivtmp.238_456, offse
 1578      13
 1579              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1580              		.loc 1 593 66 view .LVU465
 1581 08f0 C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__30.206, tmp928, _14
 1582              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1583              		.loc 1 593 115 view .LVU466
 1584 08f4 C565F3D8 		vpsllq	ymm11, ymm3, xmm0	# vect__35.210, tmp929, _12
GAS LISTING /tmp/ccfflXEb.s 			page 52


 1585              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1586              		.loc 1 593 84 view .LVU467
 1587 08f8 C4412DEB 		vpor	ymm12, ymm10, ymm11	# vect__39.211, vect__30.206, vect__35.210
 1587      E3
 1588              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1589              		.loc 1 593 37 view .LVU468
 1590 08fd C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm12	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B],
 1590      2414
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1591              		.loc 1 592 58 is_stmt 1 view .LVU469
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1592              		.loc 1 592 40 view .LVU470
 1593 0903 4883C220 		add	rdx, 32	# ivtmp.238,
 1594              	.L154:
 593:sieve_extend.c ****         }
 1595              		.loc 1 593 13 view .LVU471
 1596              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1597              		.loc 1 593 66 is_stmt 0 view .LVU472
 1598 0907 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r9+rdx]	# tmp930, MEM[base: vectp.204_259, index: ivtmp.238_456, offse
 1598      2C11
 1599              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1600              		.loc 1 593 115 view .LVU473
 1601 090d C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rbx+rdx]	# tmp931, MEM[base: vectp.208_266, index: ivtmp.238_456, offs
 1601      13
 1602              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1603              		.loc 1 593 66 view .LVU474
 1604 0912 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__30.206, tmp930, _14
 1605              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1606              		.loc 1 593 115 view .LVU475
 1607 0916 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__35.210, tmp931, _12
 1608              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1609              		.loc 1 593 84 view .LVU476
 1610 091a C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__39.211, vect__30.206, vect__35.210
 1611              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1612              		.loc 1 593 37 view .LVU477
 1613 091e C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm2	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B], 
 1613      1414
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1614              		.loc 1 592 58 is_stmt 1 view .LVU478
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1615              		.loc 1 592 40 view .LVU479
 1616 0924 4883C220 		add	rdx, 32	# ivtmp.238,
 1617              	.L153:
 593:sieve_extend.c ****         }
 1618              		.loc 1 593 13 view .LVU480
 1619              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1620              		.loc 1 593 66 is_stmt 0 view .LVU481
 1621 0928 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR [r9+rdx]	# tmp932, MEM[base: vectp.204_259, index: ivtmp.238_456, offset
GAS LISTING /tmp/ccfflXEb.s 			page 53


 1621      3C11
 1622              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1623              		.loc 1 593 115 view .LVU482
 1624 092e C5FE6F2C 		vmovdqu	ymm5, YMMWORD PTR [rbx+rdx]	# tmp933, MEM[base: vectp.208_266, index: ivtmp.238_456, offse
 1624      13
 1625              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1626              		.loc 1 593 66 view .LVU483
 1627 0933 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__30.206, tmp932, _14
 1628              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1629              		.loc 1 593 115 view .LVU484
 1630 0937 C555F3C0 		vpsllq	ymm8, ymm5, xmm0	# vect__35.210, tmp933, _12
 1631              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1632              		.loc 1 593 84 view .LVU485
 1633 093b C4415DEB 		vpor	ymm9, ymm4, ymm8	# vect__39.211, vect__30.206, vect__35.210
 1633      C8
 1634              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1635              		.loc 1 593 37 view .LVU486
 1636 0940 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm9	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B], 
 1636      0C14
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1637              		.loc 1 592 58 is_stmt 1 view .LVU487
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1638              		.loc 1 592 40 view .LVU488
 1639 0946 4883C220 		add	rdx, 32	# ivtmp.238,
 1640              	.L152:
 593:sieve_extend.c ****         }
 1641              		.loc 1 593 13 view .LVU489
 1642              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1643              		.loc 1 593 66 is_stmt 0 view .LVU490
 1644 094a C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r9+rdx]	# tmp934, MEM[base: vectp.204_259, index: ivtmp.238_456, offse
 1644      1411
 1645              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1646              		.loc 1 593 115 view .LVU491
 1647 0950 C5FE6F1C 		vmovdqu	ymm3, YMMWORD PTR [rbx+rdx]	# tmp935, MEM[base: vectp.208_266, index: ivtmp.238_456, offse
 1647      13
 1648              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1649              		.loc 1 593 66 view .LVU492
 1650 0955 C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__30.206, tmp934, _14
 1651              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1652              		.loc 1 593 115 view .LVU493
 1653 0959 C565F3E0 		vpsllq	ymm12, ymm3, xmm0	# vect__35.210, tmp935, _12
 1654              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1655              		.loc 1 593 84 view .LVU494
 1656 095d C44125EB 		vpor	ymm13, ymm11, ymm12	# vect__39.211, vect__30.206, vect__35.210
 1656      EC
 1657              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
GAS LISTING /tmp/ccfflXEb.s 			page 54


 1658              		.loc 1 593 37 view .LVU495
 1659 0962 C4417E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm13	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B],
 1659      2C14
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1660              		.loc 1 592 58 is_stmt 1 view .LVU496
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1661              		.loc 1 592 40 view .LVU497
 1662 0968 4883C220 		add	rdx, 32	# ivtmp.238,
 1663 096c 4C39F2   		cmp	rdx, r14	# ivtmp.238, _458
 1664 096f 0F843601 		je	.L199	#,
 1664      0000
 1665              	.L61:
 593:sieve_extend.c ****         }
 1666              		.loc 1 593 13 discriminator 3 view .LVU498
 1667              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1668              		.loc 1 593 66 is_stmt 0 discriminator 3 view .LVU499
 1669 0975 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r9+rdx]	# tmp865, MEM[base: vectp.204_259, index: ivtmp.238_456, offse
 1669      3411
 1670              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1671              		.loc 1 593 115 discriminator 3 view .LVU500
 1672 097b C5FE6F34 		vmovdqu	ymm6, YMMWORD PTR [rbx+rdx]	# tmp866, MEM[base: vectp.208_266, index: ivtmp.238_456, offse
 1672      13
 1673              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1674              		.loc 1 593 66 discriminator 3 view .LVU501
 1675 0980 C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__30.206, tmp865, _14
 1676              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1677              		.loc 1 593 115 discriminator 3 view .LVU502
 1678 0984 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__35.210, tmp866, _12
 1679              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1680              		.loc 1 593 84 discriminator 3 view .LVU503
 1681 0988 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__39.211, vect__30.206, vect__35.210
 1682              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1683              		.loc 1 593 37 discriminator 3 view .LVU504
 1684 098c C4C17E7F 		vmovdqu	YMMWORD PTR [r12+rdx], ymm7	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B], 
 1684      3C14
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1685              		.loc 1 592 58 is_stmt 1 discriminator 3 view .LVU505
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1686              		.loc 1 592 40 discriminator 3 view .LVU506
 593:sieve_extend.c ****         }
 1687              		.loc 1 593 13 discriminator 3 view .LVU507
 1688              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1689              		.loc 1 593 66 is_stmt 0 discriminator 3 view .LVU508
 1690 0992 C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR 32[r9+rdx]	# tmp867, MEM[base: vectp.204_259, index: ivtmp.238_456, offs
 1690      641120
 1691              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1692              		.loc 1 593 115 discriminator 3 view .LVU509
 1693 0999 C57E6F44 		vmovdqu	ymm8, YMMWORD PTR 32[rbx+rdx]	# tmp868, MEM[base: vectp.208_266, index: ivtmp.238_456, off
 1693      1320
GAS LISTING /tmp/ccfflXEb.s 			page 55


 1694              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1695              		.loc 1 593 66 discriminator 3 view .LVU510
 1696 099f C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__30.206, tmp867, _14
 1697              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1698              		.loc 1 593 115 discriminator 3 view .LVU511
 1699 09a3 C53DF3C8 		vpsllq	ymm9, ymm8, xmm0	# vect__35.210, tmp868, _12
 1700              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1701              		.loc 1 593 84 discriminator 3 view .LVU512
 1702 09a7 C44155EB 		vpor	ymm10, ymm5, ymm9	# vect__39.211, vect__30.206, vect__35.210
 1702      D1
 1703              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1704              		.loc 1 593 37 discriminator 3 view .LVU513
 1705 09ac C4417E7F 		vmovdqu	YMMWORD PTR 32[r12+rdx], ymm10	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B
 1705      541420
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1706              		.loc 1 592 58 is_stmt 1 discriminator 3 view .LVU514
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1707              		.loc 1 592 40 discriminator 3 view .LVU515
 593:sieve_extend.c ****         }
 1708              		.loc 1 593 13 discriminator 3 view .LVU516
 1709              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1710              		.loc 1 593 66 is_stmt 0 discriminator 3 view .LVU517
 1711 09b3 C4417D6F 		vmovdqa	ymm11, YMMWORD PTR 64[r9+rdx]	# tmp869, MEM[base: vectp.204_259, index: ivtmp.238_456, off
 1711      5C1140
 1712              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1713              		.loc 1 593 115 discriminator 3 view .LVU518
 1714 09ba C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 64[rbx+rdx]	# tmp870, MEM[base: vectp.208_266, index: ivtmp.238_456, off
 1714      1340
 1715              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1716              		.loc 1 593 66 discriminator 3 view .LVU519
 1717 09c0 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__30.206, tmp869, _14
 1718              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1719              		.loc 1 593 115 discriminator 3 view .LVU520
 1720 09c4 C565F3E8 		vpsllq	ymm13, ymm3, xmm0	# vect__35.210, tmp870, _12
 1721              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1722              		.loc 1 593 84 discriminator 3 view .LVU521
 1723 09c8 C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__39.211, vect__30.206, vect__35.210
 1723      F5
 1724              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1725              		.loc 1 593 37 discriminator 3 view .LVU522
 1726 09cd C4417E7F 		vmovdqu	YMMWORD PTR 64[r12+rdx], ymm14	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B
 1726      741440
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1727              		.loc 1 592 58 is_stmt 1 discriminator 3 view .LVU523
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1728              		.loc 1 592 40 discriminator 3 view .LVU524
 593:sieve_extend.c ****         }
GAS LISTING /tmp/ccfflXEb.s 			page 56


 1729              		.loc 1 593 13 discriminator 3 view .LVU525
 1730              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1731              		.loc 1 593 66 is_stmt 0 discriminator 3 view .LVU526
 1732 09d4 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR 96[r9+rdx]	# tmp871, MEM[base: vectp.204_259, index: ivtmp.238_456, off
 1732      7C1160
 1733              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1734              		.loc 1 593 115 discriminator 3 view .LVU527
 1735 09db C5FE6F54 		vmovdqu	ymm2, YMMWORD PTR 96[rbx+rdx]	# tmp872, MEM[base: vectp.208_266, index: ivtmp.238_456, off
 1735      1360
 1736              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1737              		.loc 1 593 66 discriminator 3 view .LVU528
 1738 09e1 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__30.206, tmp871, _14
 1739              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1740              		.loc 1 593 115 discriminator 3 view .LVU529
 1741 09e5 C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__35.210, tmp872, _12
 1742              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1743              		.loc 1 593 84 discriminator 3 view .LVU530
 1744 09e9 C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__39.211, vect__30.206, vect__35.210
 1745              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1746              		.loc 1 593 37 discriminator 3 view .LVU531
 1747 09ed C4C17E7F 		vmovdqu	YMMWORD PTR 96[r12+rdx], ymm4	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B]
 1747      641460
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1748              		.loc 1 592 58 is_stmt 1 discriminator 3 view .LVU532
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1749              		.loc 1 592 40 discriminator 3 view .LVU533
 593:sieve_extend.c ****         }
 1750              		.loc 1 593 13 discriminator 3 view .LVU534
 1751              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1752              		.loc 1 593 66 is_stmt 0 discriminator 3 view .LVU535
 1753 09f4 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 128[r9+rdx]	# tmp873, MEM[base: vectp.204_259, index: ivtmp.238_456, off
 1753      AC118000 
 1753      0000
 1754              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1755              		.loc 1 593 115 discriminator 3 view .LVU536
 1756 09fe C57E6F8C 		vmovdqu	ymm9, YMMWORD PTR 128[rbx+rdx]	# tmp874, MEM[base: vectp.208_266, index: ivtmp.238_456, of
 1756      13800000 
 1756      00
 1757              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1758              		.loc 1 593 66 discriminator 3 view .LVU537
 1759 0a07 C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__30.206, tmp873, _14
 1760              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1761              		.loc 1 593 115 discriminator 3 view .LVU538
 1762 0a0b C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__35.210, tmp874, _12
 1763              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1764              		.loc 1 593 84 discriminator 3 view .LVU539
GAS LISTING /tmp/ccfflXEb.s 			page 57


 1765 0a0f C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__39.211, vect__30.206, vect__35.210
 1765      DA
 1766              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1767              		.loc 1 593 37 discriminator 3 view .LVU540
 1768 0a14 C4417E7F 		vmovdqu	YMMWORD PTR 128[r12+rdx], ymm11	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0
 1768      9C148000 
 1768      0000
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1769              		.loc 1 592 58 is_stmt 1 discriminator 3 view .LVU541
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1770              		.loc 1 592 40 discriminator 3 view .LVU542
 593:sieve_extend.c ****         }
 1771              		.loc 1 593 13 discriminator 3 view .LVU543
 1772              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1773              		.loc 1 593 66 is_stmt 0 discriminator 3 view .LVU544
 1774 0a1e C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 160[r9+rdx]	# tmp875, MEM[base: vectp.204_259, index: ivtmp.238_456, of
 1774      A411A000 
 1774      0000
 1775              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1776              		.loc 1 593 115 discriminator 3 view .LVU545
 1777 0a28 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 160[rbx+rdx]	# tmp876, MEM[base: vectp.208_266, index: ivtmp.238_456, of
 1777      13A00000 
 1777      00
 1778              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1779              		.loc 1 593 66 discriminator 3 view .LVU546
 1780 0a31 C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__30.206, tmp875, _14
 1781              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1782              		.loc 1 593 115 discriminator 3 view .LVU547
 1783 0a35 C565F3F0 		vpsllq	ymm14, ymm3, xmm0	# vect__35.210, tmp876, _12
 1784              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1785              		.loc 1 593 84 discriminator 3 view .LVU548
 1786 0a39 C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__39.211, vect__30.206, vect__35.210
 1786      FE
 1787              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1788              		.loc 1 593 37 discriminator 3 view .LVU549
 1789 0a3e C4417E7F 		vmovdqu	YMMWORD PTR 160[r12+rdx], ymm15	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0
 1789      BC14A000 
 1789      0000
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1790              		.loc 1 592 58 is_stmt 1 discriminator 3 view .LVU550
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1791              		.loc 1 592 40 discriminator 3 view .LVU551
 593:sieve_extend.c ****         }
 1792              		.loc 1 593 13 discriminator 3 view .LVU552
 1793              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1794              		.loc 1 593 66 is_stmt 0 discriminator 3 view .LVU553
 1795 0a48 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 192[r9+rdx]	# tmp877, MEM[base: vectp.204_259, index: ivtmp.238_456, off
 1795      B411C000 
 1795      0000
GAS LISTING /tmp/ccfflXEb.s 			page 58


 1796              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1797              		.loc 1 593 115 discriminator 3 view .LVU554
 1798 0a52 C5FE6FBC 		vmovdqu	ymm7, YMMWORD PTR 192[rbx+rdx]	# tmp878, MEM[base: vectp.208_266, index: ivtmp.238_456, of
 1798      13C00000 
 1798      00
 1799              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1800              		.loc 1 593 66 discriminator 3 view .LVU555
 1801 0a5b C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__30.206, tmp877, _14
 1802              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1803              		.loc 1 593 115 discriminator 3 view .LVU556
 1804 0a5f C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__35.210, tmp878, _12
 1805              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1806              		.loc 1 593 84 discriminator 3 view .LVU557
 1807 0a63 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__39.211, vect__30.206, vect__35.210
 1808              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1809              		.loc 1 593 37 discriminator 3 view .LVU558
 1810 0a67 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r12+rdx], ymm5	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B
 1810      AC14C000 
 1810      0000
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1811              		.loc 1 592 58 is_stmt 1 discriminator 3 view .LVU559
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1812              		.loc 1 592 40 discriminator 3 view .LVU560
 593:sieve_extend.c ****         }
 1813              		.loc 1 593 13 discriminator 3 view .LVU561
 1814              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1815              		.loc 1 593 66 is_stmt 0 discriminator 3 view .LVU562
 1816 0a71 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 224[r9+rdx]	# tmp879, MEM[base: vectp.204_259, index: ivtmp.238_456, off
 1816      8411E000 
 1816      0000
 1817              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1818              		.loc 1 593 115 discriminator 3 view .LVU563
 1819 0a7b C57E6F94 		vmovdqu	ymm10, YMMWORD PTR 224[rbx+rdx]	# tmp880, MEM[base: vectp.208_266, index: ivtmp.238_456, o
 1819      13E00000 
 1819      00
 1820              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1821              		.loc 1 593 66 discriminator 3 view .LVU564
 1822 0a84 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__30.206, tmp879, _14
 1823              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1824              		.loc 1 593 115 discriminator 3 view .LVU565
 1825 0a88 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__35.210, tmp880, _12
 1826              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1827              		.loc 1 593 84 discriminator 3 view .LVU566
 1828 0a8c C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__39.211, vect__30.206, vect__35.210
 1828      E3
 1829              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
GAS LISTING /tmp/ccfflXEb.s 			page 59


 1830              		.loc 1 593 37 discriminator 3 view .LVU567
 1831 0a91 C4417E7F 		vmovdqu	YMMWORD PTR 224[r12+rdx], ymm12	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0
 1831      A414E000 
 1831      0000
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1832              		.loc 1 592 58 is_stmt 1 discriminator 3 view .LVU568
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1833              		.loc 1 592 40 discriminator 3 view .LVU569
 1834 0a9b 4881C200 		add	rdx, 256	# ivtmp.238,
 1834      010000
 1835 0aa2 4C39F2   		cmp	rdx, r14	# ivtmp.238, _458
 1836 0aa5 0F85CAFE 		jne	.L61	#,
 1836      FFFF
 1837              	.L199:
 1838 0aab 4C8B6424 		mov	r12, QWORD PTR -16[rsp]	# i, %sfp
 1838      F0
 1839 0ab0 4D89E9   		mov	r9, r13	# niters_vector_mult_vf.201, niters.199
 1840 0ab3 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.201,
 1841 0ab7 4D01CC   		add	r12, r9	# i, niters_vector_mult_vf.201
 1842 0aba 4D39CD   		cmp	r13, r9	# niters.199, niters_vector_mult_vf.201
 1843 0abd 0F849D07 		je	.L213	#,
 1843      0000
 1844 0ac3 C5F877   		vzeroupper
 1845              	.L58:
 1846              	.LVL80:
 593:sieve_extend.c ****         }
 1847              		.loc 1 593 13 view .LVU570
 1848              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1849              		.loc 1 593 62 is_stmt 0 view .LVU571
 1850 0ac6 4E8D2C26 		lea	r13, [rsi+r12]	# tmp440,
 1851              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1852              		.loc 1 593 115 view .LVU572
 1853 0aca C422A1F7 		shlx	r14, QWORD PTR 8[rdi+r13*8], r11	# tmp442, *_325, shift
 1853      74EF08
 1854              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1855              		.loc 1 593 66 view .LVU573
 1856 0ad1 4E8B04EF 		mov	r8, QWORD PTR [rdi+r13*8]	# *_320, *_320
 1857              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1858              		.loc 1 592 58 view .LVU574
 1859 0ad5 4D8D6C24 		lea	r13, 1[r12]	# i,
 1859      01
 1860              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1861              		.loc 1 593 23 view .LVU575
 1862 0ada 4B8D1C22 		lea	rbx, [r10+r12]	# tmp441,
 1863              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1864              		.loc 1 593 66 view .LVU576
 1865 0ade C4C2FBF7 		shrx	rdx, r8, rax	# tmp444, *_320, shift_flipped
 1865      D0
 1866              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1867              		.loc 1 593 84 view .LVU577
GAS LISTING /tmp/ccfflXEb.s 			page 60


 1868 0ae3 4909D6   		or	r14, rdx	# tmp446, tmp444
 1869              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1870              		.loc 1 592 9 view .LVU578
 1871 0ae6 4D39EF   		cmp	r15, r13	# loop_distance, i
 1872              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1873              		.loc 1 593 84 view .LVU579
 1874 0ae9 4C8934DF 		mov	QWORD PTR [rdi+rbx*8], r14	# *_330, tmp446
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1875              		.loc 1 592 58 is_stmt 1 view .LVU580
 1876              	.LVL81:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1877              		.loc 1 592 40 view .LVU581
 1878              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1879              		.loc 1 592 9 is_stmt 0 view .LVU582
 1880 0aed 0F86C100 		jbe	.L57	#,
 1880      0000
 593:sieve_extend.c ****         }
 1881              		.loc 1 593 13 is_stmt 1 view .LVU583
 1882              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1883              		.loc 1 593 62 is_stmt 0 view .LVU584
 1884 0af3 4A8D1C2E 		lea	rbx, [rsi+r13]	# tmp447,
 1885              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1886              		.loc 1 592 58 view .LVU585
 1887 0af7 498D5424 		lea	rdx, 2[r12]	# i,
 1887      02
 1888              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1889              		.loc 1 593 66 view .LVU586
 1890 0afc 4C8B34DF 		mov	r14, QWORD PTR [rdi+rbx*8]	# *_338, *_338
 1891              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1892              		.loc 1 593 23 view .LVU587
 1893 0b00 4D01D5   		add	r13, r10	# tmp448, copy_word
 1894              	.LVL82:
 1895              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1896              		.loc 1 593 115 view .LVU588
 1897 0b03 C462A1F7 		shlx	r9, QWORD PTR 8[rdi+rbx*8], r11	# tmp449, *_343, shift
 1897      4CDF08
 1898              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1899              		.loc 1 593 66 view .LVU589
 1900 0b0a C442FBF7 		shrx	r8, r14, rax	# tmp451, *_338, shift_flipped
 1900      C6
 1901              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1902              		.loc 1 593 84 view .LVU590
 1903 0b0f 4D09C1   		or	r9, r8	# tmp453, tmp451
 1904              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1905              		.loc 1 592 9 view .LVU591
 1906 0b12 4939D7   		cmp	r15, rdx	# loop_distance, i
GAS LISTING /tmp/ccfflXEb.s 			page 61


 1907              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1908              		.loc 1 593 84 view .LVU592
 1909 0b15 4E890CEF 		mov	QWORD PTR [rdi+r13*8], r9	# *_348, tmp453
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1910              		.loc 1 592 58 is_stmt 1 view .LVU593
 1911              	.LVL83:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1912              		.loc 1 592 40 view .LVU594
 1913              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1914              		.loc 1 592 9 is_stmt 0 view .LVU595
 1915 0b19 0F869500 		jbe	.L57	#,
 1915      0000
 593:sieve_extend.c ****         }
 1916              		.loc 1 593 13 is_stmt 1 view .LVU596
 1917              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1918              		.loc 1 593 62 is_stmt 0 view .LVU597
 1919 0b1f 4C8D2C16 		lea	r13, [rsi+rdx]	# tmp454,
 1920              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1921              		.loc 1 592 58 view .LVU598
 1922 0b23 4D8D4424 		lea	r8, 3[r12]	# i,
 1922      03
 1923              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1924              		.loc 1 593 66 view .LVU599
 1925 0b28 4A8B1CEF 		mov	rbx, QWORD PTR [rdi+r13*8]	# *_356, *_356
 1926              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1927              		.loc 1 593 23 view .LVU600
 1928 0b2c 4C01D2   		add	rdx, r10	# tmp455, copy_word
 1929              	.LVL84:
 1930              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1931              		.loc 1 593 115 view .LVU601
 1932 0b2f C422A1F7 		shlx	r9, QWORD PTR 8[rdi+r13*8], r11	# tmp456, *_361, shift
 1932      4CEF08
 1933              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1934              		.loc 1 593 66 view .LVU602
 1935 0b36 C462FBF7 		shrx	r14, rbx, rax	# tmp458, *_356, shift_flipped
 1935      F3
 1936              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1937              		.loc 1 593 84 view .LVU603
 1938 0b3b 4D09F1   		or	r9, r14	# tmp460, tmp458
 1939              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1940              		.loc 1 592 9 view .LVU604
 1941 0b3e 4D39C7   		cmp	r15, r8	# loop_distance, i
 1942              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1943              		.loc 1 593 84 view .LVU605
 1944 0b41 4C890CD7 		mov	QWORD PTR [rdi+rdx*8], r9	# *_366, tmp460
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
GAS LISTING /tmp/ccfflXEb.s 			page 62


 1945              		.loc 1 592 58 is_stmt 1 view .LVU606
 1946              	.LVL85:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1947              		.loc 1 592 40 view .LVU607
 1948              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1949              		.loc 1 592 9 is_stmt 0 view .LVU608
 1950 0b45 766D     		jbe	.L57	#,
 593:sieve_extend.c ****         }
 1951              		.loc 1 593 13 is_stmt 1 view .LVU609
 1952              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1953              		.loc 1 593 62 is_stmt 0 view .LVU610
 1954 0b47 4A8D1406 		lea	rdx, [rsi+r8]	# tmp461,
 1955              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1956              		.loc 1 592 58 view .LVU611
 1957 0b4b 4D8D7424 		lea	r14, 4[r12]	# i,
 1957      04
 1958              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1959              		.loc 1 593 66 view .LVU612
 1960 0b50 4C8B0CD7 		mov	r9, QWORD PTR [rdi+rdx*8]	# *_374, *_374
 1961              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1962              		.loc 1 593 23 view .LVU613
 1963 0b54 4D01D0   		add	r8, r10	# tmp462, copy_word
 1964              	.LVL86:
 1965              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1966              		.loc 1 593 115 view .LVU614
 1967 0b57 C462A1F7 		shlx	r13, QWORD PTR 8[rdi+rdx*8], r11	# tmp463, *_379, shift
 1967      6CD708
 1968              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1969              		.loc 1 593 66 view .LVU615
 1970 0b5e C4C2FBF7 		shrx	rbx, r9, rax	# tmp465, *_374, shift_flipped
 1970      D9
 1971              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1972              		.loc 1 593 84 view .LVU616
 1973 0b63 4909DD   		or	r13, rbx	# tmp467, tmp465
 1974              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1975              		.loc 1 592 9 view .LVU617
 1976 0b66 4D39F7   		cmp	r15, r14	# loop_distance, i
 1977              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1978              		.loc 1 593 84 view .LVU618
 1979 0b69 4E892CC7 		mov	QWORD PTR [rdi+r8*8], r13	# *_384, tmp467
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1980              		.loc 1 592 58 is_stmt 1 view .LVU619
 1981              	.LVL87:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1982              		.loc 1 592 40 view .LVU620
 1983              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
GAS LISTING /tmp/ccfflXEb.s 			page 63


 1984              		.loc 1 592 9 is_stmt 0 view .LVU621
 1985 0b6d 7645     		jbe	.L57	#,
 593:sieve_extend.c ****         }
 1986              		.loc 1 593 13 is_stmt 1 view .LVU622
 1987              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1988              		.loc 1 593 62 is_stmt 0 view .LVU623
 1989 0b6f 4E8D0436 		lea	r8, [rsi+r14]	# tmp468,
 1990              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 1991              		.loc 1 592 58 view .LVU624
 1992 0b73 4983C405 		add	r12, 5	# i,
 1993              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1994              		.loc 1 593 66 view .LVU625
 1995 0b77 4E8B2CC7 		mov	r13, QWORD PTR [rdi+r8*8]	# *_392, *_392
 1996              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 1997              		.loc 1 593 23 view .LVU626
 1998 0b7b 4D01D6   		add	r14, r10	# tmp469, copy_word
 1999              	.LVL88:
 2000              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 2001              		.loc 1 593 115 view .LVU627
 2002 0b7e C4A2A1F7 		shlx	rdx, QWORD PTR 8[rdi+r8*8], r11	# tmp470, *_397, shift
 2002      54C708
 2003              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 2004              		.loc 1 593 66 view .LVU628
 2005 0b85 C442FBF7 		shrx	r9, r13, rax	# tmp472, *_392, shift_flipped
 2005      CD
 2006              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 2007              		.loc 1 593 84 view .LVU629
 2008 0b8a 4C09CA   		or	rdx, r9	# tmp474, tmp472
 2009              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2010              		.loc 1 592 9 view .LVU630
 2011 0b8d 4D39E7   		cmp	r15, r12	# loop_distance, i
 2012              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 2013              		.loc 1 593 84 view .LVU631
 2014 0b90 4A8914F7 		mov	QWORD PTR [rdi+r14*8], rdx	# *_402, tmp474
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2015              		.loc 1 592 58 is_stmt 1 view .LVU632
 2016              	.LVL89:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2017              		.loc 1 592 40 view .LVU633
 2018              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2019              		.loc 1 592 9 is_stmt 0 view .LVU634
 2020 0b94 761E     		jbe	.L57	#,
 593:sieve_extend.c ****         }
 2021              		.loc 1 593 13 is_stmt 1 view .LVU635
 2022              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 2023              		.loc 1 593 62 is_stmt 0 view .LVU636
GAS LISTING /tmp/ccfflXEb.s 			page 64


 2024 0b96 4A8D1C26 		lea	rbx, [rsi+r12]	# tmp475,
 2025              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 2026              		.loc 1 593 23 view .LVU637
 2027 0b9a 4D01D4   		add	r12, r10	# tmp476, copy_word
 2028              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 2029              		.loc 1 593 115 view .LVU638
 2030 0b9d C462A1F7 		shlx	r10, QWORD PTR 8[rdi+rbx*8], r11	# tmp477, *_240, shift
 2030      54DF08
 2031              	.LVL90:
 2032              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 2033              		.loc 1 593 66 view .LVU639
 2034 0ba4 4C8B1CDF 		mov	r11, QWORD PTR [rdi+rbx*8]	# *_235, *_235
 2035              	.LVL91:
 593:sieve_extend.c ****         }
 2036              		.loc 1 593 66 view .LVU640
 2037 0ba8 C4C2FBF7 		shrx	rax, r11, rax	# tmp479, *_235, shift_flipped
 2037      C3
 2038              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 2039              		.loc 1 593 84 view .LVU641
 2040 0bad 4C09D0   		or	rax, r10	# tmp481, tmp477
 2041 0bb0 4A8904E7 		mov	QWORD PTR [rdi+r12*8], rax	# *_245, tmp481
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2042              		.loc 1 592 58 is_stmt 1 view .LVU642
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2043              		.loc 1 592 40 view .LVU643
 2044              	.L57:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2045              		.loc 1 592 40 is_stmt 0 view .LVU644
 2046              	.LBE316:
 596:sieve_extend.c ****     }
 2047              		.loc 1 596 9 is_stmt 1 view .LVU645
 2048              	.LVL92:
 596:sieve_extend.c ****     }
 2049              		.loc 1 596 39 view .LVU646
 596:sieve_extend.c ****     }
 2050              		.loc 1 596 39 is_stmt 0 view .LVU647
 2051              	.LBE315:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2052              		.loc 1 599 12 is_stmt 1 view .LVU648
 2053              	.LBB318:
 2054              	# sieve_extend.c:596:         source_word += loop_distance; copy_word+= loop_distance;
 596:sieve_extend.c ****     }
 2055              		.loc 1 596 21 is_stmt 0 view .LVU649
 2056 0bb4 4C01FE   		add	rsi, r15	# source_word, loop_distance
 2057              	.LVL93:
 596:sieve_extend.c ****     }
 2058              		.loc 1 596 21 view .LVU650
 2059 0bb7 4989CA   		mov	r10, rcx	# copy_word, destination_stop_word
 2060 0bba 4C8D2CF5 		lea	r13, 40[0+rsi*8]	# _271,
 2060      28000000 
 2061              	.LVL94:
 2062              	.L63:
 596:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 65


 2063              		.loc 1 596 21 view .LVU651
 2064 0bc2 4889CE   		mov	rsi, rcx	# tmp556, destination_stop_word
 2065 0bc5 4E8D7C2F 		lea	r15, -40[rdi+r13]	# ivtmp.220,
 2065      D8
 2066              	.LBE318:
 2067              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2068              		.loc 1 600 105 view .LVU652
 2069 0bca 440FB664 		movzx	r12d, BYTE PTR -4[rsp]	# tmp884, %sfp
 2069      24FC
 2070 0bd0 4C29D6   		sub	rsi, r10	# tmp556, copy_word
 2071 0bd3 C44299F7 		shlx	r14, QWORD PTR 8[r15], r12	# tmp500, MEM[base: _451, offset: 8B], tmp884
 2071      7708
 2072              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2073              		.loc 1 599 48 view .LVU653
 2074 0bd9 4D8D6201 		lea	r12, 1[r10]	# copy_word,
 2075              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2076              		.loc 1 600 58 view .LVU654
 2077 0bdd 440FB644 		movzx	r8d, BYTE PTR -8[rsp]	# tmp885, %sfp
 2077      24F8
 2078 0be3 83E607   		and	esi, 7	# tmp557,
 600:sieve_extend.c ****     }
 2079              		.loc 1 600 9 is_stmt 1 view .LVU655
 2080              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2081              		.loc 1 600 58 is_stmt 0 view .LVU656
 2082 0be6 C4C2BBF7 		shrx	rdx, QWORD PTR [r15], r8	# tmp502, MEM[base: _451, offset: 0B], tmp885
 2082      17
 2083              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2084              		.loc 1 600 76 view .LVU657
 2085 0beb 4909D6   		or	r14, rdx	# tmp504, tmp502
 2086              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2087              		.loc 1 599 5 view .LVU658
 2088 0bee 4C39E1   		cmp	rcx, r12	# destination_stop_word, copy_word
 2089 0bf1 498D4708 		lea	rax, 8[r15]	# ivtmp.220,
 2090              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2091              		.loc 1 600 76 view .LVU659
 2092 0bf5 4E8934D7 		mov	QWORD PTR [rdi+r10*8], r14	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2093              		.loc 1 599 48 is_stmt 1 view .LVU660
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2094              		.loc 1 599 12 view .LVU661
 2095              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2096              		.loc 1 599 5 is_stmt 0 view .LVU662
 2097 0bf9 0F82FB01 		jb	.L210	#,
 2097      0000
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2098              		.loc 1 599 5 view .LVU663
 2099 0bff 4885F6   		test	rsi, rsi	# tmp557
 2100 0c02 0F843B01 		je	.L204	#,
 2100      0000
GAS LISTING /tmp/ccfflXEb.s 			page 66


 2101 0c08 4883FE01 		cmp	rsi, 1	# tmp557,
 2102 0c0c 0F840301 		je	.L165	#,
 2102      0000
 2103 0c12 4883FE02 		cmp	rsi, 2	# tmp557,
 2104 0c16 0F84D400 		je	.L166	#,
 2104      0000
 2105 0c1c 4883FE03 		cmp	rsi, 3	# tmp557,
 2106 0c20 0F84A500 		je	.L167	#,
 2106      0000
 2107 0c26 4883FE04 		cmp	rsi, 4	# tmp557,
 2108 0c2a 747A     		je	.L168	#,
 2109 0c2c 4883FE05 		cmp	rsi, 5	# tmp557,
 2110 0c30 744E     		je	.L169	#,
 2111 0c32 4883FE06 		cmp	rsi, 6	# tmp557,
 2112 0c36 7423     		je	.L170	#,
 600:sieve_extend.c ****     }
 2113              		.loc 1 600 9 is_stmt 1 view .LVU664
 2114              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2115              		.loc 1 600 58 is_stmt 0 view .LVU665
 2116 0c38 488B18   		mov	rbx, QWORD PTR [rax]	# MEM[base: _451, offset: 0B], MEM[base: _451, offset: 0B]
 2117 0c3b C462BBF7 		shrx	r11, rbx, r8	# tmp719, MEM[base: _451, offset: 0B], tmp909
 2117      DB
 2118              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2119              		.loc 1 600 105 view .LVU666
 2120 0c40 440FB66C 		movzx	r13d, BYTE PTR -4[rsp]	# tmp908, %sfp
 2120      24FC
 2121 0c46 C46291F7 		shlx	r9, QWORD PTR 8[rax], r13	# tmp717, MEM[base: _451, offset: 8B], tmp908
 2121      4808
 2122              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2123              		.loc 1 600 76 view .LVU667
 2124 0c4c 4D09CB   		or	r11, r9	# tmp720, tmp717
 2125 0c4f 498D4710 		lea	rax, 16[r15]	# ivtmp.220,
 2126 0c53 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2127              		.loc 1 599 48 is_stmt 1 view .LVU668
 2128 0c57 4D8D6202 		lea	r12, 2[r10]	# copy_word,
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2129              		.loc 1 599 12 view .LVU669
 2130              	.L170:
 600:sieve_extend.c ****     }
 2131              		.loc 1 600 9 view .LVU670
 2132              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2133              		.loc 1 600 105 is_stmt 0 view .LVU671
 2134 0c5b 440FB654 		movzx	r10d, BYTE PTR -4[rsp]	# tmp910, %sfp
 2134      24FC
 2135              	.LVL95:
 600:sieve_extend.c ****     }
 2136              		.loc 1 600 105 view .LVU672
 2137 0c61 C462A9F7 		shlx	r15, QWORD PTR 8[rax], r10	# tmp722, MEM[base: _451, offset: 8B], tmp910
 2137      7808
 2138              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2139              		.loc 1 600 58 view .LVU673
GAS LISTING /tmp/ccfflXEb.s 			page 67


 2140 0c67 0FB67424 		movzx	esi, BYTE PTR -8[rsp]	# tmp911, %sfp
 2140      F8
 2141 0c6c C462CBF7 		shrx	r14, QWORD PTR [rax], rsi	# tmp724, MEM[base: _451, offset: 0B], tmp911
 2141      30
 2142              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2143              		.loc 1 600 76 view .LVU674
 2144 0c71 4D09F7   		or	r15, r14	# tmp725, tmp724
 2145 0c74 4883C008 		add	rax, 8	# ivtmp.220,
 2146 0c78 4E893CE7 		mov	QWORD PTR [rdi+r12*8], r15	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2147              		.loc 1 599 48 is_stmt 1 view .LVU675
 2148 0c7c 4983C401 		add	r12, 1	# copy_word,
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2149              		.loc 1 599 12 view .LVU676
 2150              	.L169:
 600:sieve_extend.c ****     }
 2151              		.loc 1 600 9 view .LVU677
 2152              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2153              		.loc 1 600 105 is_stmt 0 view .LVU678
 2154 0c80 440FB644 		movzx	r8d, BYTE PTR -4[rsp]	# tmp912, %sfp
 2154      24FC
 2155 0c86 C4E2B9F7 		shlx	rdx, QWORD PTR 8[rax], r8	# tmp727, MEM[base: _451, offset: 8B], tmp912
 2155      5008
 2156              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2157              		.loc 1 600 58 view .LVU679
 2158 0c8c 440FB66C 		movzx	r13d, BYTE PTR -8[rsp]	# tmp913, %sfp
 2158      24F8
 2159 0c92 C46293F7 		shrx	r9, QWORD PTR [rax], r13	# tmp729, MEM[base: _451, offset: 0B], tmp913
 2159      08
 2160              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2161              		.loc 1 600 76 view .LVU680
 2162 0c97 4C09CA   		or	rdx, r9	# tmp730, tmp729
 2163 0c9a 4883C008 		add	rax, 8	# ivtmp.220,
 2164 0c9e 4A8914E7 		mov	QWORD PTR [rdi+r12*8], rdx	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2165              		.loc 1 599 48 is_stmt 1 view .LVU681
 2166 0ca2 4983C401 		add	r12, 1	# copy_word,
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2167              		.loc 1 599 12 view .LVU682
 2168              	.L168:
 600:sieve_extend.c ****     }
 2169              		.loc 1 600 9 view .LVU683
 2170              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2171              		.loc 1 600 105 is_stmt 0 view .LVU684
 2172 0ca6 0FB65C24 		movzx	ebx, BYTE PTR -4[rsp]	# tmp914, %sfp
 2172      FC
 2173 0cab C462E1F7 		shlx	r11, QWORD PTR 8[rax], rbx	# tmp732, MEM[base: _451, offset: 8B], tmp914
 2173      5808
 2174              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2175              		.loc 1 600 58 view .LVU685
 2176 0cb1 440FB654 		movzx	r10d, BYTE PTR -8[rsp]	# tmp915, %sfp
GAS LISTING /tmp/ccfflXEb.s 			page 68


 2176      24F8
 2177 0cb7 C462ABF7 		shrx	r15, QWORD PTR [rax], r10	# tmp734, MEM[base: _451, offset: 0B], tmp915
 2177      38
 2178              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2179              		.loc 1 600 76 view .LVU686
 2180 0cbc 4D09FB   		or	r11, r15	# tmp735, tmp734
 2181 0cbf 4883C008 		add	rax, 8	# ivtmp.220,
 2182 0cc3 4E891CE7 		mov	QWORD PTR [rdi+r12*8], r11	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2183              		.loc 1 599 48 is_stmt 1 view .LVU687
 2184 0cc7 4983C401 		add	r12, 1	# copy_word,
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2185              		.loc 1 599 12 view .LVU688
 2186              	.L167:
 600:sieve_extend.c ****     }
 2187              		.loc 1 600 9 view .LVU689
 2188              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2189              		.loc 1 600 105 is_stmt 0 view .LVU690
 2190 0ccb 0FB67424 		movzx	esi, BYTE PTR -4[rsp]	# tmp916, %sfp
 2190      FC
 2191 0cd0 C462C9F7 		shlx	r14, QWORD PTR 8[rax], rsi	# tmp737, MEM[base: _451, offset: 8B], tmp916
 2191      7008
 2192              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2193              		.loc 1 600 58 view .LVU691
 2194 0cd6 440FB644 		movzx	r8d, BYTE PTR -8[rsp]	# tmp917, %sfp
 2194      24F8
 2195 0cdc C4E2BBF7 		shrx	rdx, QWORD PTR [rax], r8	# tmp739, MEM[base: _451, offset: 0B], tmp917
 2195      10
 2196              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2197              		.loc 1 600 76 view .LVU692
 2198 0ce1 4909D6   		or	r14, rdx	# tmp740, tmp739
 2199 0ce4 4883C008 		add	rax, 8	# ivtmp.220,
 2200 0ce8 4E8934E7 		mov	QWORD PTR [rdi+r12*8], r14	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2201              		.loc 1 599 48 is_stmt 1 view .LVU693
 2202 0cec 4983C401 		add	r12, 1	# copy_word,
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2203              		.loc 1 599 12 view .LVU694
 2204              	.L166:
 600:sieve_extend.c ****     }
 2205              		.loc 1 600 9 view .LVU695
 2206              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2207              		.loc 1 600 105 is_stmt 0 view .LVU696
 2208 0cf0 440FB66C 		movzx	r13d, BYTE PTR -4[rsp]	# tmp918, %sfp
 2208      24FC
 2209 0cf6 C46291F7 		shlx	r9, QWORD PTR 8[rax], r13	# tmp742, MEM[base: _451, offset: 8B], tmp918
 2209      4808
 2210              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2211              		.loc 1 600 58 view .LVU697
 2212 0cfc 0FB65C24 		movzx	ebx, BYTE PTR -8[rsp]	# tmp919, %sfp
 2212      F8
GAS LISTING /tmp/ccfflXEb.s 			page 69


 2213 0d01 C462E3F7 		shrx	r11, QWORD PTR [rax], rbx	# tmp744, MEM[base: _451, offset: 0B], tmp919
 2213      18
 2214              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2215              		.loc 1 600 76 view .LVU698
 2216 0d06 4D09D9   		or	r9, r11	# tmp745, tmp744
 2217 0d09 4883C008 		add	rax, 8	# ivtmp.220,
 2218 0d0d 4E890CE7 		mov	QWORD PTR [rdi+r12*8], r9	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2219              		.loc 1 599 48 is_stmt 1 view .LVU699
 2220 0d11 4983C401 		add	r12, 1	# copy_word,
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2221              		.loc 1 599 12 view .LVU700
 2222              	.L165:
 600:sieve_extend.c ****     }
 2223              		.loc 1 600 9 view .LVU701
 2224              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2225              		.loc 1 600 105 is_stmt 0 view .LVU702
 2226 0d15 440FB654 		movzx	r10d, BYTE PTR -4[rsp]	# tmp920, %sfp
 2226      24FC
 2227 0d1b C462A9F7 		shlx	r15, QWORD PTR 8[rax], r10	# tmp747, MEM[base: _451, offset: 8B], tmp920
 2227      7808
 2228              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2229              		.loc 1 600 58 view .LVU703
 2230 0d21 0FB67424 		movzx	esi, BYTE PTR -8[rsp]	# tmp921, %sfp
 2230      F8
 2231 0d26 C462CBF7 		shrx	r14, QWORD PTR [rax], rsi	# tmp749, MEM[base: _451, offset: 0B], tmp921
 2231      30
 2232              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2233              		.loc 1 600 76 view .LVU704
 2234 0d2b 4D09F7   		or	r15, r14	# tmp750, tmp749
 2235 0d2e 4883C008 		add	rax, 8	# ivtmp.220,
 2236 0d32 4E893CE7 		mov	QWORD PTR [rdi+r12*8], r15	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2237              		.loc 1 599 48 is_stmt 1 view .LVU705
 2238 0d36 4983C401 		add	r12, 1	# copy_word,
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2239              		.loc 1 599 12 view .LVU706
 2240              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2241              		.loc 1 599 5 is_stmt 0 view .LVU707
 2242 0d3a 4C39E1   		cmp	rcx, r12	# destination_stop_word, copy_word
 2243 0d3d 0F82B700 		jb	.L210	#,
 2243      0000
 2244              	.L204:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2245              		.loc 1 599 5 view .LVU708
 2246 0d43 8B5424FC 		mov	edx, DWORD PTR -4[rsp]	# _12, %sfp
 2247 0d47 448B4424 		mov	r8d, DWORD PTR -8[rsp]	# _14, %sfp
 2247      F8
 2248              	.L65:
 600:sieve_extend.c ****     }
 2249              		.loc 1 600 9 is_stmt 1 view .LVU709
 2250              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccfflXEb.s 			page 70


 600:sieve_extend.c ****     }
 2251              		.loc 1 600 58 is_stmt 0 view .LVU710
 2252 0d4c C462BBF7 		shrx	r9, QWORD PTR [rax], r8	# tmp620, MEM[base: _451, offset: 0B], _14
 2252      08
 2253              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2254              		.loc 1 600 105 view .LVU711
 2255 0d51 C462E9F7 		shlx	r13, QWORD PTR 8[rax], rdx	# tmp618, MEM[base: _451, offset: 8B], _12
 2255      6808
 2256              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2257              		.loc 1 600 76 view .LVU712
 2258 0d57 4D09CD   		or	r13, r9	# tmp621, tmp620
 2259 0d5a 4883C040 		add	rax, 64	# ivtmp.220,
 2260 0d5e 4E892CE7 		mov	QWORD PTR [rdi+r12*8], r13	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offset
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2261              		.loc 1 599 48 is_stmt 1 view .LVU713
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2262              		.loc 1 599 12 view .LVU714
 600:sieve_extend.c ****     }
 2263              		.loc 1 600 9 view .LVU715
 2264              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2265              		.loc 1 600 58 is_stmt 0 view .LVU716
 2266 0d62 C462BBF7 		shrx	r11, QWORD PTR -56[rax], r8	# tmp627, MEM[base: _451, offset: 0B], _14
 2266      58C8
 2267              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2268              		.loc 1 600 105 view .LVU717
 2269 0d68 C4E2E9F7 		shlx	rbx, QWORD PTR -48[rax], rdx	# tmp625, MEM[base: _451, offset: 8B], _12
 2269      58D0
 2270              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2271              		.loc 1 600 76 view .LVU718
 2272 0d6e 4C09DB   		or	rbx, r11	# tmp628, tmp627
 2273 0d71 4A895CE7 		mov	QWORD PTR 8[rdi+r12*8], rbx	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offse
 2273      08
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2274              		.loc 1 599 48 is_stmt 1 view .LVU719
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2275              		.loc 1 599 12 view .LVU720
 600:sieve_extend.c ****     }
 2276              		.loc 1 600 9 view .LVU721
 2277              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2278              		.loc 1 600 58 is_stmt 0 view .LVU722
 2279 0d76 C462BBF7 		shrx	r10, QWORD PTR -48[rax], r8	# tmp634, MEM[base: _451, offset: 0B], _14
 2279      50D0
 2280              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2281              		.loc 1 600 105 view .LVU723
 2282 0d7c C462E9F7 		shlx	r15, QWORD PTR -40[rax], rdx	# tmp632, MEM[base: _451, offset: 8B], _12
 2282      78D8
 2283              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2284              		.loc 1 600 76 view .LVU724
 2285 0d82 4D09D7   		or	r15, r10	# tmp635, tmp634
GAS LISTING /tmp/ccfflXEb.s 			page 71


 2286 0d85 4E897CE7 		mov	QWORD PTR 16[rdi+r12*8], r15	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2286      10
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2287              		.loc 1 599 48 is_stmt 1 view .LVU725
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2288              		.loc 1 599 12 view .LVU726
 600:sieve_extend.c ****     }
 2289              		.loc 1 600 9 view .LVU727
 2290              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2291              		.loc 1 600 58 is_stmt 0 view .LVU728
 2292 0d8a C462BBF7 		shrx	r14, QWORD PTR -40[rax], r8	# tmp641, MEM[base: _451, offset: 0B], _14
 2292      70D8
 2293              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2294              		.loc 1 600 105 view .LVU729
 2295 0d90 C4E2E9F7 		shlx	rsi, QWORD PTR -32[rax], rdx	# tmp639, MEM[base: _451, offset: 8B], _12
 2295      70E0
 2296              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2297              		.loc 1 600 76 view .LVU730
 2298 0d96 4C09F6   		or	rsi, r14	# tmp642, tmp641
 2299 0d99 4A8974E7 		mov	QWORD PTR 24[rdi+r12*8], rsi	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2299      18
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2300              		.loc 1 599 48 is_stmt 1 view .LVU731
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2301              		.loc 1 599 12 view .LVU732
 600:sieve_extend.c ****     }
 2302              		.loc 1 600 9 view .LVU733
 2303              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2304              		.loc 1 600 105 is_stmt 0 view .LVU734
 2305 0d9e C462E9F7 		shlx	r13, QWORD PTR -24[rax], rdx	# tmp646, MEM[base: _451, offset: 8B], _12
 2305      68E8
 2306              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2307              		.loc 1 600 58 view .LVU735
 2308 0da4 C462BBF7 		shrx	r9, QWORD PTR -32[rax], r8	# tmp648, MEM[base: _451, offset: 0B], _14
 2308      48E0
 2309              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2310              		.loc 1 600 76 view .LVU736
 2311 0daa 4D09CD   		or	r13, r9	# tmp649, tmp648
 2312 0dad 4E896CE7 		mov	QWORD PTR 32[rdi+r12*8], r13	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2312      20
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2313              		.loc 1 599 48 is_stmt 1 view .LVU737
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2314              		.loc 1 599 12 view .LVU738
 600:sieve_extend.c ****     }
 2315              		.loc 1 600 9 view .LVU739
 2316              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2317              		.loc 1 600 105 is_stmt 0 view .LVU740
 2318 0db2 C4E2E9F7 		shlx	rbx, QWORD PTR -16[rax], rdx	# tmp653, MEM[base: _451, offset: 8B], _12
 2318      58F0
GAS LISTING /tmp/ccfflXEb.s 			page 72


 2319              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2320              		.loc 1 600 58 view .LVU741
 2321 0db8 C462BBF7 		shrx	r11, QWORD PTR -24[rax], r8	# tmp655, MEM[base: _451, offset: 0B], _14
 2321      58E8
 2322              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2323              		.loc 1 600 76 view .LVU742
 2324 0dbe 4C09DB   		or	rbx, r11	# tmp656, tmp655
 2325 0dc1 4A895CE7 		mov	QWORD PTR 40[rdi+r12*8], rbx	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2325      28
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2326              		.loc 1 599 48 is_stmt 1 view .LVU743
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2327              		.loc 1 599 12 view .LVU744
 600:sieve_extend.c ****     }
 2328              		.loc 1 600 9 view .LVU745
 2329              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2330              		.loc 1 600 105 is_stmt 0 view .LVU746
 2331 0dc6 C462E9F7 		shlx	r15, QWORD PTR -8[rax], rdx	# tmp660, MEM[base: _451, offset: 8B], _12
 2331      78F8
 2332              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2333              		.loc 1 600 58 view .LVU747
 2334 0dcc C462BBF7 		shrx	r10, QWORD PTR -16[rax], r8	# tmp662, MEM[base: _451, offset: 0B], _14
 2334      50F0
 2335              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2336              		.loc 1 600 76 view .LVU748
 2337 0dd2 4D09D7   		or	r15, r10	# tmp663, tmp662
 2338 0dd5 4E897CE7 		mov	QWORD PTR 48[rdi+r12*8], r15	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2338      30
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2339              		.loc 1 599 48 is_stmt 1 view .LVU749
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2340              		.loc 1 599 12 view .LVU750
 600:sieve_extend.c ****     }
 2341              		.loc 1 600 9 view .LVU751
 2342              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2343              		.loc 1 600 105 is_stmt 0 view .LVU752
 2344 0dda C4E2E9F7 		shlx	rsi, QWORD PTR [rax], rdx	# tmp667, MEM[base: _451, offset: 8B], _12
 2344      30
 2345              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2346              		.loc 1 600 58 view .LVU753
 2347 0ddf C462BBF7 		shrx	r14, QWORD PTR -8[rax], r8	# tmp669, MEM[base: _451, offset: 0B], _14
 2347      70F8
 2348              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2349              		.loc 1 600 76 view .LVU754
 2350 0de5 4C09F6   		or	rsi, r14	# tmp670, tmp669
 2351 0de8 4A8974E7 		mov	QWORD PTR 56[rdi+r12*8], rsi	# MEM[base: bitstorage_63(D), index: copy_word_118, step: 8, offs
 2351      38
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2352              		.loc 1 599 48 is_stmt 1 view .LVU755
GAS LISTING /tmp/ccfflXEb.s 			page 73


 2353 0ded 4983C408 		add	r12, 8	# copy_word,
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2354              		.loc 1 599 12 view .LVU756
 2355              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2356              		.loc 1 599 5 is_stmt 0 view .LVU757
 2357 0df1 4C39E1   		cmp	rcx, r12	# destination_stop_word, copy_word
 2358 0df4 0F8352FF 		jnb	.L65	#,
 2358      FFFF
 2359              	.L210:
 2360              	# sieve_extend.c:606: }
 606:sieve_extend.c **** 
 2361              		.loc 1 606 1 view .LVU758
 2362 0dfa 488D65D8 		lea	rsp, -40[rbp]	#,
 2363 0dfe 5B       		pop	rbx	#
 2364 0dff 415C     		pop	r12	#
 2365 0e01 415D     		pop	r13	#
 2366 0e03 415E     		pop	r14	#
 2367 0e05 415F     		pop	r15	#
 2368 0e07 5D       		pop	rbp	#
 2369              		.cfi_remember_state
 2370              		.cfi_def_cfa 7, 8
 2371 0e08 C3       		ret	
 2372              	.LVL96:
 2373 0e09 0F1F8000 		.p2align 4,,7
 2373      000000
 2374              		.p2align 3
 2375              	.L56:
 2376              		.cfi_restore_state
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2377              		.loc 1 599 12 is_stmt 1 view .LVU759
 2378 0e10 4A8D14CD 		lea	rdx, 40[0+r9*8]	# _135,
 2378      28000000 
 2379              	.LVL97:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2380              		.loc 1 599 12 is_stmt 0 view .LVU760
 2381 0e18 4D8D6C24 		lea	r13, 40[r12]	# _271,
 2381      28
 2382 0e1d 4C8D7AE0 		lea	r15, -32[rdx]	# tmp541,
 2383 0e21 4C8D7101 		lea	r14, 1[rcx]	# _82,
 2384 0e25 4D39EF   		cmp	r15, r13	# tmp541, _271
 2385 0e28 498D5902 		lea	rbx, 2[r9]	# copy_word,
 2386 0e2c 410F9DC7 		setge	r15b	#, tmp543
 2387 0e30 4939D4   		cmp	r12, rdx	# _9, _135
 2388 0e33 0F9DC2   		setge	dl	#, tmp545
 2389 0e36 4108D7   		or	r15b, dl	# tmp543, tmp545
 2390 0e39 0F8483FD 		je	.L63	#,
 2390      FFFF
 2391 0e3f 4989CF   		mov	r15, rcx	# tmp547, destination_stop_word
 2392 0e42 4D29D7   		sub	r15, r10	# tmp547, copy_word
 2393 0e45 4983FF05 		cmp	r15, 5	# tmp547,
 2394 0e49 410F97C7 		seta	r15b	#, tmp549
 2395 0e4d 4939DE   		cmp	r14, rbx	# _82, copy_word
 2396 0e50 0F93C2   		setnb	dl	#, tmp551
 2397 0e53 4184D7   		test	r15b, dl	# tmp549, tmp551
 2398 0e56 0F8466FD 		je	.L63	#,
 2398      FFFF
GAS LISTING /tmp/ccfflXEb.s 			page 74


 2399 0e5c 4989CD   		mov	r13, rcx	# tmp505, destination_stop_word
 2400 0e5f 4C89C2   		mov	rdx, r8	# _10, _10
 2401 0e62 4D29CD   		sub	r13, r9	# tmp505, copy_word
 2402 0e65 4939DE   		cmp	r14, rbx	# _82, copy_word
 2403 0e68 41BE0100 		mov	r14d, 1	# tmp506,
 2403      0000
 2404 0e6e 4D0F42EE 		cmovb	r13, r14	# tmp505,, niters.177, tmp506
 2405 0e72 48C1EA03 		shr	rdx, 3	# _10,
 2406 0e76 48F7DA   		neg	rdx	# tmp509
 2407 0e79 83E203   		and	edx, 3	# prolog_loop_niters.179,
 2408 0e7c 0F84B603 		je	.L78	#,
 2408      0000
 600:sieve_extend.c ****     }
 2409              		.loc 1 600 9 is_stmt 1 view .LVU761
 2410              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2411              		.loc 1 600 105 is_stmt 0 view .LVU762
 2412 0e82 4E8B6427 		mov	r12, QWORD PTR 8[rdi+r12]	# *_288, *_288
 2412      08
 2413              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2414              		.loc 1 600 58 view .LVU763
 2415 0e87 C462FBF7 		shrx	r15, QWORD PTR [rdi+rsi*8], rax	# tmp512, *_283, shift_flipped
 2415      3CF7
 2416              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2417              		.loc 1 600 89 view .LVU764
 2418 0e8d 4C8D7601 		lea	r14, 1[rsi]	# tmp671,
 2419              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2420              		.loc 1 600 105 view .LVU765
 2421 0e91 C442A1F7 		shlx	r12, r12, r11	# tmp510, *_288, shift
 2421      E4
 2422              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2423              		.loc 1 600 76 view .LVU766
 2424 0e96 4D09FC   		or	r12, r15	# tmp514, tmp512
 2425 0e99 4883FA01 		cmp	rdx, 1	# prolog_loop_niters.179,
 2426 0e9d 4E8924D7 		mov	QWORD PTR [rdi+r10*8], r12	# *_292, tmp514
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2427              		.loc 1 599 48 is_stmt 1 view .LVU767
 2428              	.LVL98:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2429              		.loc 1 599 12 view .LVU768
 2430              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2431              		.loc 1 600 89 is_stmt 0 view .LVU769
 2432 0ea1 4D89F0   		mov	r8, r14	# source_word, tmp671
 2433 0ea4 7454     		je	.L67	#,
 600:sieve_extend.c ****     }
 2434              		.loc 1 600 9 is_stmt 1 view .LVU770
 2435              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2436              		.loc 1 600 44 is_stmt 0 view .LVU771
 2437 0ea6 4E8D3CF5 		lea	r15, 0[0+r14*8]	# _301,
 2437      00000000 
 2438              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccfflXEb.s 			page 75


 600:sieve_extend.c ****     }
 2439              		.loc 1 600 105 view .LVU772
 2440 0eae C422A1F7 		shlx	r12, QWORD PTR 8[rdi+r15], r11	# tmp515, *_307, shift
 2440      643F08
 2441              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2442              		.loc 1 600 58 view .LVU773
 2443 0eb5 4E8B3C3F 		mov	r15, QWORD PTR [rdi+r15]	# *_302, *_302
 2444 0eb9 C442FBF7 		shrx	r15, r15, rax	# tmp517, *_302, shift_flipped
 2444      FF
 2445              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2446              		.loc 1 600 76 view .LVU774
 2447 0ebe 4D09FC   		or	r12, r15	# tmp519, tmp517
 2448 0ec1 4883FA03 		cmp	rdx, 3	# prolog_loop_niters.179,
 2449 0ec5 4C8924DF 		mov	QWORD PTR [rdi+rbx*8], r12	# *_311, tmp519
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2450              		.loc 1 599 48 is_stmt 1 view .LVU775
 2451              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2452              		.loc 1 600 89 is_stmt 0 view .LVU776
 2453 0ec9 4C8D4602 		lea	r8, 2[rsi]	# source_word,
 2454              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2455              		.loc 1 599 48 view .LVU777
 2456 0ecd 498D5903 		lea	rbx, 3[r9]	# copy_word,
 2457              	.LVL99:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2458              		.loc 1 599 12 is_stmt 1 view .LVU778
 2459 0ed1 7527     		jne	.L67	#,
 600:sieve_extend.c ****     }
 2460              		.loc 1 600 9 view .LVU779
 2461              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2462              		.loc 1 600 44 is_stmt 0 view .LVU780
 2463 0ed3 4E8D3CC5 		lea	r15, 0[0+r8*8]	# _86,
 2463      00000000 
 2464              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2465              		.loc 1 600 105 view .LVU781
 2466 0edb C422A1F7 		shlx	r12, QWORD PTR 8[rdi+r15], r11	# tmp520, *_74, shift
 2466      643F08
 2467              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2468              		.loc 1 600 58 view .LVU782
 2469 0ee2 4E8B3C3F 		mov	r15, QWORD PTR [rdi+r15]	# *_85, *_85
 2470 0ee6 C442FBF7 		shrx	r15, r15, rax	# tmp522, *_85, shift_flipped
 2470      FF
 2471              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2472              		.loc 1 600 76 view .LVU783
 2473 0eeb 4D09FC   		or	r12, r15	# tmp524, tmp522
 2474              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2475              		.loc 1 600 89 view .LVU784
 2476 0eee 4C8D4603 		lea	r8, 3[rsi]	# source_word,
 2477              	.LVL100:
GAS LISTING /tmp/ccfflXEb.s 			page 76


 2478              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2479              		.loc 1 600 76 view .LVU785
 2480 0ef2 4C8924DF 		mov	QWORD PTR [rdi+rbx*8], r12	# *_3, tmp524
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2481              		.loc 1 599 48 is_stmt 1 view .LVU786
 2482 0ef6 498D5904 		lea	rbx, 4[r9]	# copy_word,
 2483              	.LVL101:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2484              		.loc 1 599 12 view .LVU787
 2485              	.L67:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2486              		.loc 1 599 12 is_stmt 0 view .LVU788
 2487 0efa 4929D5   		sub	r13, rdx	# niters.180, prolog_loop_niters.179
 2488 0efd 4901D6   		add	r14, rdx	# tmp528, prolog_loop_niters.179
 2489 0f00 4D89EC   		mov	r12, r13	# bnd.181, niters.180
 2490 0f03 4E8D0CF7 		lea	r9, [rdi+r14*8]	# vectp.190,
 2491 0f07 49C1EC02 		shr	r12, 2	# bnd.181,
 2492 0f0b 4801D6   		add	rsi, rdx	# tmp525, prolog_loop_niters.179
 2493 0f0e 49C1E405 		sal	r12, 5	# _455,
 2494 0f12 4C01D2   		add	rdx, r10	# tmp530, copy_word
 2495 0f15 4D8D7424 		lea	r14, -32[r12]	# tmp568,
 2495      E0
 2496 0f1a 4C8D14D7 		lea	r10, [rdi+rdx*8]	# vectp.195,
 2497              	# sieve_extend.c:588:     if (size >= WORD_SIZE_counter) {
 588:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 2498              		.loc 1 588 8 view .LVU789
 2499 0f1e 31D2     		xor	edx, edx	# ivtmp.228
 2500 0f20 488D34F7 		lea	rsi, [rdi+rsi*8]	# vectp.186,
 2501 0f24 49C1EE05 		shr	r14, 5	# tmp566,
 2502 0f28 C5F96E4C 		vmovd	xmm1, DWORD PTR -8[rsp]	# _14, %sfp
 2502      24F8
 2503 0f2e 4983C601 		add	r14, 1	# tmp569,
 2504 0f32 C5F96E44 		vmovd	xmm0, DWORD PTR -4[rsp]	# _12, %sfp
 2504      24FC
 2505 0f38 4183E607 		and	r14d, 7	# tmp570,
 2506 0f3c 0F842101 		je	.L69	#,
 2506      0000
 2507 0f42 4983FE01 		cmp	r14, 1	# tmp570,
 2508 0f46 0F84ED00 		je	.L159	#,
 2508      0000
 2509 0f4c 4983FE02 		cmp	r14, 2	# tmp570,
 2510 0f50 0F84C200 		je	.L160	#,
 2510      0000
 2511 0f56 4983FE03 		cmp	r14, 3	# tmp570,
 2512 0f5a 0F849600 		je	.L161	#,
 2512      0000
 2513 0f60 4983FE04 		cmp	r14, 4	# tmp570,
 2514 0f64 746F     		je	.L162	#,
 2515 0f66 4983FE05 		cmp	r14, 5	# tmp570,
 2516 0f6a 7447     		je	.L163	#,
 2517 0f6c 4983FE06 		cmp	r14, 6	# tmp570,
 2518 0f70 741F     		je	.L164	#,
 600:sieve_extend.c ****     }
 2519              		.loc 1 600 9 is_stmt 1 view .LVU790
 2520              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 77


 2521              		.loc 1 600 58 is_stmt 0 view .LVU791
 2522 0f72 C5FD6F36 		vmovdqa	ymm6, YMMWORD PTR [rsi]	# tmp936, MEM[base: vectp.186_175, index: ivtmp.228_453, offset: 0
 2523 0f76 BA200000 		mov	edx, 32	# ivtmp.228,
 2523      00
 2524              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2525              		.loc 1 600 105 view .LVU792
 2526 0f7b C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR [r9]	# tmp937, MEM[base: vectp.190_182, index: ivtmp.228_453, offset: 0B
 2526      39
 2527              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2528              		.loc 1 600 58 view .LVU793
 2529 0f80 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__43.188, tmp936, _14
 2530              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2531              		.loc 1 600 105 view .LVU794
 2532 0f84 C5C5F3D8 		vpsllq	ymm3, ymm7, xmm0	# vect__48.192, tmp937, _12
 2533              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2534              		.loc 1 600 76 view .LVU795
 2535 0f88 C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# vect__51.193, vect__43.188, vect__48.192
 2536              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2537              		.loc 1 600 31 view .LVU796
 2538 0f8c C4C17E7F 		vmovdqu	YMMWORD PTR [r10], ymm4	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B], vect
 2538      22
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2539              		.loc 1 599 48 is_stmt 1 view .LVU797
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2540              		.loc 1 599 12 view .LVU798
 2541              	.L164:
 600:sieve_extend.c ****     }
 2542              		.loc 1 600 9 view .LVU799
 2543              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2544              		.loc 1 600 58 is_stmt 0 view .LVU800
 2545 0f91 C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rdx]	# tmp938, MEM[base: vectp.186_175, index: ivtmp.228_453, offse
 2545      16
 2546              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2547              		.loc 1 600 105 view .LVU801
 2548 0f96 C4417E6F 		vmovdqu	ymm9, YMMWORD PTR [r9+rdx]	# tmp939, MEM[base: vectp.190_182, index: ivtmp.228_453, offset
 2548      0C11
 2549              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2550              		.loc 1 600 58 view .LVU802
 2551 0f9c C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__43.188, tmp938, _14
 2552              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2553              		.loc 1 600 105 view .LVU803
 2554 0fa0 C535F3D0 		vpsllq	ymm10, ymm9, xmm0	# vect__48.192, tmp939, _12
 2555              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2556              		.loc 1 600 76 view .LVU804
 2557 0fa4 C4413DEB 		vpor	ymm11, ymm8, ymm10	# vect__51.193, vect__43.188, vect__48.192
 2557      DA
 2558              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccfflXEb.s 			page 78


 600:sieve_extend.c ****     }
 2559              		.loc 1 600 31 view .LVU805
 2560 0fa9 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm11	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B],
 2560      1C12
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2561              		.loc 1 599 48 is_stmt 1 view .LVU806
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2562              		.loc 1 599 12 view .LVU807
 2563 0faf 4883C220 		add	rdx, 32	# ivtmp.228,
 2564              	.L163:
 600:sieve_extend.c ****     }
 2565              		.loc 1 600 9 view .LVU808
 2566              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2567              		.loc 1 600 58 is_stmt 0 view .LVU809
 2568 0fb3 C57D6F24 		vmovdqa	ymm12, YMMWORD PTR [rsi+rdx]	# tmp940, MEM[base: vectp.186_175, index: ivtmp.228_453, offs
 2568      16
 2569              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2570              		.loc 1 600 105 view .LVU810
 2571 0fb8 C4417E6F 		vmovdqu	ymm14, YMMWORD PTR [r9+rdx]	# tmp941, MEM[base: vectp.190_182, index: ivtmp.228_453, offse
 2571      3411
 2572              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2573              		.loc 1 600 58 view .LVU811
 2574 0fbe C51DD3E9 		vpsrlq	ymm13, ymm12, xmm1	# vect__43.188, tmp940, _14
 2575              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2576              		.loc 1 600 105 view .LVU812
 2577 0fc2 C50DF3F8 		vpsllq	ymm15, ymm14, xmm0	# vect__48.192, tmp941, _12
 2578              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2579              		.loc 1 600 76 view .LVU813
 2580 0fc6 C4C115EB 		vpor	ymm6, ymm13, ymm15	# vect__51.193, vect__43.188, vect__48.192
 2580      F7
 2581              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2582              		.loc 1 600 31 view .LVU814
 2583 0fcb C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm6	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B], 
 2583      3412
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2584              		.loc 1 599 48 is_stmt 1 view .LVU815
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2585              		.loc 1 599 12 view .LVU816
 2586 0fd1 4883C220 		add	rdx, 32	# ivtmp.228,
 2587              	.L162:
 600:sieve_extend.c ****     }
 2588              		.loc 1 600 9 view .LVU817
 2589              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2590              		.loc 1 600 58 is_stmt 0 view .LVU818
 2591 0fd5 C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rdx]	# tmp942, MEM[base: vectp.186_175, index: ivtmp.228_453, offse
 2591      16
 2592              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2593              		.loc 1 600 105 view .LVU819
 2594 0fda C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r9+rdx]	# tmp943, MEM[base: vectp.190_182, index: ivtmp.228_453, offset
GAS LISTING /tmp/ccfflXEb.s 			page 79


 2594      1C11
 2595              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2596              		.loc 1 600 58 view .LVU820
 2597 0fe0 C5EDD3F9 		vpsrlq	ymm7, ymm2, xmm1	# vect__43.188, tmp942, _14
 2598              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2599              		.loc 1 600 105 view .LVU821
 2600 0fe4 C5E5F3E0 		vpsllq	ymm4, ymm3, xmm0	# vect__48.192, tmp943, _12
 2601              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2602              		.loc 1 600 76 view .LVU822
 2603 0fe8 C5C5EBEC 		vpor	ymm5, ymm7, ymm4	# vect__51.193, vect__43.188, vect__48.192
 2604              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2605              		.loc 1 600 31 view .LVU823
 2606 0fec C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm5	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B], 
 2606      2C12
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2607              		.loc 1 599 48 is_stmt 1 view .LVU824
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2608              		.loc 1 599 12 view .LVU825
 2609 0ff2 4883C220 		add	rdx, 32	# ivtmp.228,
 2610              	.L161:
 600:sieve_extend.c ****     }
 2611              		.loc 1 600 9 view .LVU826
 2612              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2613              		.loc 1 600 58 is_stmt 0 view .LVU827
 2614 0ff6 C57D6F04 		vmovdqa	ymm8, YMMWORD PTR [rsi+rdx]	# tmp944, MEM[base: vectp.186_175, index: ivtmp.228_453, offse
 2614      16
 2615              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2616              		.loc 1 600 105 view .LVU828
 2617 0ffb C4417E6F 		vmovdqu	ymm10, YMMWORD PTR [r9+rdx]	# tmp945, MEM[base: vectp.190_182, index: ivtmp.228_453, offse
 2617      1411
 2618              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2619              		.loc 1 600 58 view .LVU829
 2620 1001 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__43.188, tmp944, _14
 2621              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2622              		.loc 1 600 105 view .LVU830
 2623 1005 C52DF3D8 		vpsllq	ymm11, ymm10, xmm0	# vect__48.192, tmp945, _12
 2624              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2625              		.loc 1 600 76 view .LVU831
 2626 1009 C44135EB 		vpor	ymm12, ymm9, ymm11	# vect__51.193, vect__43.188, vect__48.192
 2626      E3
 2627              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2628              		.loc 1 600 31 view .LVU832
 2629 100e C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm12	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B],
 2629      2412
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2630              		.loc 1 599 48 is_stmt 1 view .LVU833
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
GAS LISTING /tmp/ccfflXEb.s 			page 80


 2631              		.loc 1 599 12 view .LVU834
 2632 1014 4883C220 		add	rdx, 32	# ivtmp.228,
 2633              	.L160:
 600:sieve_extend.c ****     }
 2634              		.loc 1 600 9 view .LVU835
 2635              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2636              		.loc 1 600 58 is_stmt 0 view .LVU836
 2637 1018 C57D6F2C 		vmovdqa	ymm13, YMMWORD PTR [rsi+rdx]	# tmp946, MEM[base: vectp.186_175, index: ivtmp.228_453, offs
 2637      16
 2638              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2639              		.loc 1 600 105 view .LVU837
 2640 101d C4417E6F 		vmovdqu	ymm15, YMMWORD PTR [r9+rdx]	# tmp947, MEM[base: vectp.190_182, index: ivtmp.228_453, offse
 2640      3C11
 2641              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2642              		.loc 1 600 58 view .LVU838
 2643 1023 C515D3F1 		vpsrlq	ymm14, ymm13, xmm1	# vect__43.188, tmp946, _14
 2644              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2645              		.loc 1 600 105 view .LVU839
 2646 1027 C585F3F0 		vpsllq	ymm6, ymm15, xmm0	# vect__48.192, tmp947, _12
 2647              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2648              		.loc 1 600 76 view .LVU840
 2649 102b C58DEBD6 		vpor	ymm2, ymm14, ymm6	# vect__51.193, vect__43.188, vect__48.192
 2650              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2651              		.loc 1 600 31 view .LVU841
 2652 102f C4C17E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm2	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B], 
 2652      1412
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2653              		.loc 1 599 48 is_stmt 1 view .LVU842
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2654              		.loc 1 599 12 view .LVU843
 2655 1035 4883C220 		add	rdx, 32	# ivtmp.228,
 2656              	.L159:
 600:sieve_extend.c ****     }
 2657              		.loc 1 600 9 view .LVU844
 2658              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2659              		.loc 1 600 58 is_stmt 0 view .LVU845
 2660 1039 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rdx]	# tmp948, MEM[base: vectp.186_175, index: ivtmp.228_453, offse
 2660      16
 2661              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2662              		.loc 1 600 105 view .LVU846
 2663 103e C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR [r9+rdx]	# tmp949, MEM[base: vectp.190_182, index: ivtmp.228_453, offset
 2663      1C11
 2664              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2665              		.loc 1 600 58 view .LVU847
 2666 1044 C5C5D3E1 		vpsrlq	ymm4, ymm7, xmm1	# vect__43.188, tmp948, _14
 2667              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2668              		.loc 1 600 105 view .LVU848
GAS LISTING /tmp/ccfflXEb.s 			page 81


 2669 1048 C5E5F3E8 		vpsllq	ymm5, ymm3, xmm0	# vect__48.192, tmp949, _12
 2670              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2671              		.loc 1 600 76 view .LVU849
 2672 104c C55DEBC5 		vpor	ymm8, ymm4, ymm5	# vect__51.193, vect__43.188, vect__48.192
 2673              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2674              		.loc 1 600 31 view .LVU850
 2675 1050 C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm8	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B], 
 2675      0412
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2676              		.loc 1 599 48 is_stmt 1 view .LVU851
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2677              		.loc 1 599 12 view .LVU852
 2678 1056 4883C220 		add	rdx, 32	# ivtmp.228,
 2679 105a 4C39E2   		cmp	rdx, r12	# ivtmp.228, _455
 2680 105d 0F843601 		je	.L200	#,
 2680      0000
 2681              	.L69:
 600:sieve_extend.c ****     }
 2682              		.loc 1 600 9 discriminator 2 view .LVU853
 2683              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2684              		.loc 1 600 58 is_stmt 0 discriminator 2 view .LVU854
 2685 1063 C57D6F0C 		vmovdqa	ymm9, YMMWORD PTR [rsi+rdx]	# tmp889, MEM[base: vectp.186_175, index: ivtmp.228_453, offse
 2685      16
 2686              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2687              		.loc 1 600 105 discriminator 2 view .LVU855
 2688 1068 C4417E6F 		vmovdqu	ymm11, YMMWORD PTR [r9+rdx]	# tmp890, MEM[base: vectp.190_182, index: ivtmp.228_453, offse
 2688      1C11
 2689              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2690              		.loc 1 600 58 discriminator 2 view .LVU856
 2691 106e C535D3D1 		vpsrlq	ymm10, ymm9, xmm1	# vect__43.188, tmp889, _14
 2692              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2693              		.loc 1 600 105 discriminator 2 view .LVU857
 2694 1072 C525F3E0 		vpsllq	ymm12, ymm11, xmm0	# vect__48.192, tmp890, _12
 2695              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2696              		.loc 1 600 76 discriminator 2 view .LVU858
 2697 1076 C4412DEB 		vpor	ymm13, ymm10, ymm12	# vect__51.193, vect__43.188, vect__48.192
 2697      EC
 2698              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2699              		.loc 1 600 31 discriminator 2 view .LVU859
 2700 107b C4417E7F 		vmovdqu	YMMWORD PTR [r10+rdx], ymm13	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B],
 2700      2C12
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2701              		.loc 1 599 48 is_stmt 1 discriminator 2 view .LVU860
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2702              		.loc 1 599 12 discriminator 2 view .LVU861
 600:sieve_extend.c ****     }
 2703              		.loc 1 600 9 discriminator 2 view .LVU862
 2704              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 82


 2705              		.loc 1 600 58 is_stmt 0 discriminator 2 view .LVU863
 2706 1081 C57D6F74 		vmovdqa	ymm14, YMMWORD PTR 32[rsi+rdx]	# tmp891, MEM[base: vectp.186_175, index: ivtmp.228_453, of
 2706      1620
 2707              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2708              		.loc 1 600 105 discriminator 2 view .LVU864
 2709 1087 C4C17E6F 		vmovdqu	ymm6, YMMWORD PTR 32[r9+rdx]	# tmp892, MEM[base: vectp.190_182, index: ivtmp.228_453, offs
 2709      741120
 2710              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2711              		.loc 1 600 58 discriminator 2 view .LVU865
 2712 108e C50DD3F9 		vpsrlq	ymm15, ymm14, xmm1	# vect__43.188, tmp891, _14
 2713              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2714              		.loc 1 600 105 discriminator 2 view .LVU866
 2715 1092 C5CDF3D0 		vpsllq	ymm2, ymm6, xmm0	# vect__48.192, tmp892, _12
 2716              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2717              		.loc 1 600 76 discriminator 2 view .LVU867
 2718 1096 C585EBFA 		vpor	ymm7, ymm15, ymm2	# vect__51.193, vect__43.188, vect__48.192
 2719              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2720              		.loc 1 600 31 discriminator 2 view .LVU868
 2721 109a C4C17E7F 		vmovdqu	YMMWORD PTR 32[r10+rdx], ymm7	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B]
 2721      7C1220
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2722              		.loc 1 599 48 is_stmt 1 discriminator 2 view .LVU869
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2723              		.loc 1 599 12 discriminator 2 view .LVU870
 600:sieve_extend.c ****     }
 2724              		.loc 1 600 9 discriminator 2 view .LVU871
 2725              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2726              		.loc 1 600 58 is_stmt 0 discriminator 2 view .LVU872
 2727 10a1 C5FD6F64 		vmovdqa	ymm4, YMMWORD PTR 64[rsi+rdx]	# tmp893, MEM[base: vectp.186_175, index: ivtmp.228_453, off
 2727      1640
 2728              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2729              		.loc 1 600 105 discriminator 2 view .LVU873
 2730 10a7 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 64[r9+rdx]	# tmp894, MEM[base: vectp.190_182, index: ivtmp.228_453, offs
 2730      5C1140
 2731              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2732              		.loc 1 600 58 discriminator 2 view .LVU874
 2733 10ae C5DDD3E9 		vpsrlq	ymm5, ymm4, xmm1	# vect__43.188, tmp893, _14
 2734              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2735              		.loc 1 600 105 discriminator 2 view .LVU875
 2736 10b2 C565F3C0 		vpsllq	ymm8, ymm3, xmm0	# vect__48.192, tmp894, _12
 2737              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2738              		.loc 1 600 76 discriminator 2 view .LVU876
 2739 10b6 C44155EB 		vpor	ymm9, ymm5, ymm8	# vect__51.193, vect__43.188, vect__48.192
 2739      C8
 2740              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2741              		.loc 1 600 31 discriminator 2 view .LVU877
GAS LISTING /tmp/ccfflXEb.s 			page 83


 2742 10bb C4417E7F 		vmovdqu	YMMWORD PTR 64[r10+rdx], ymm9	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B]
 2742      4C1240
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2743              		.loc 1 599 48 is_stmt 1 discriminator 2 view .LVU878
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2744              		.loc 1 599 12 discriminator 2 view .LVU879
 600:sieve_extend.c ****     }
 2745              		.loc 1 600 9 discriminator 2 view .LVU880
 2746              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2747              		.loc 1 600 58 is_stmt 0 discriminator 2 view .LVU881
 2748 10c2 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rdx]	# tmp895, MEM[base: vectp.186_175, index: ivtmp.228_453, of
 2748      1660
 2749              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2750              		.loc 1 600 105 discriminator 2 view .LVU882
 2751 10c8 C4417E6F 		vmovdqu	ymm12, YMMWORD PTR 96[r9+rdx]	# tmp896, MEM[base: vectp.190_182, index: ivtmp.228_453, off
 2751      641160
 2752              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2753              		.loc 1 600 58 discriminator 2 view .LVU883
 2754 10cf C52DD3D9 		vpsrlq	ymm11, ymm10, xmm1	# vect__43.188, tmp895, _14
 2755              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2756              		.loc 1 600 105 discriminator 2 view .LVU884
 2757 10d3 C51DF3E8 		vpsllq	ymm13, ymm12, xmm0	# vect__48.192, tmp896, _12
 2758              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2759              		.loc 1 600 76 discriminator 2 view .LVU885
 2760 10d7 C44125EB 		vpor	ymm14, ymm11, ymm13	# vect__51.193, vect__43.188, vect__48.192
 2760      F5
 2761              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2762              		.loc 1 600 31 discriminator 2 view .LVU886
 2763 10dc C4417E7F 		vmovdqu	YMMWORD PTR 96[r10+rdx], ymm14	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B
 2763      741260
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2764              		.loc 1 599 48 is_stmt 1 discriminator 2 view .LVU887
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2765              		.loc 1 599 12 discriminator 2 view .LVU888
 600:sieve_extend.c ****     }
 2766              		.loc 1 600 9 discriminator 2 view .LVU889
 2767              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2768              		.loc 1 600 58 is_stmt 0 discriminator 2 view .LVU890
 2769 10e3 C57D6FBC 		vmovdqa	ymm15, YMMWORD PTR 128[rsi+rdx]	# tmp897, MEM[base: vectp.186_175, index: ivtmp.228_453, o
 2769      16800000 
 2769      00
 2770              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2771              		.loc 1 600 105 discriminator 2 view .LVU891
 2772 10ec C4C17E6F 		vmovdqu	ymm2, YMMWORD PTR 128[r9+rdx]	# tmp898, MEM[base: vectp.190_182, index: ivtmp.228_453, off
 2772      94118000 
 2772      0000
 2773              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2774              		.loc 1 600 58 discriminator 2 view .LVU892
GAS LISTING /tmp/ccfflXEb.s 			page 84


 2775 10f6 C585D3F1 		vpsrlq	ymm6, ymm15, xmm1	# vect__43.188, tmp897, _14
 2776              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2777              		.loc 1 600 105 discriminator 2 view .LVU893
 2778 10fa C5EDF3F8 		vpsllq	ymm7, ymm2, xmm0	# vect__48.192, tmp898, _12
 2779              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2780              		.loc 1 600 76 discriminator 2 view .LVU894
 2781 10fe C5CDEBE7 		vpor	ymm4, ymm6, ymm7	# vect__51.193, vect__43.188, vect__48.192
 2782              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2783              		.loc 1 600 31 discriminator 2 view .LVU895
 2784 1102 C4C17E7F 		vmovdqu	YMMWORD PTR 128[r10+rdx], ymm4	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B
 2784      A4128000 
 2784      0000
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2785              		.loc 1 599 48 is_stmt 1 discriminator 2 view .LVU896
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2786              		.loc 1 599 12 discriminator 2 view .LVU897
 600:sieve_extend.c ****     }
 2787              		.loc 1 600 9 discriminator 2 view .LVU898
 2788              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2789              		.loc 1 600 58 is_stmt 0 discriminator 2 view .LVU899
 2790 110c C5FD6FAC 		vmovdqa	ymm5, YMMWORD PTR 160[rsi+rdx]	# tmp899, MEM[base: vectp.186_175, index: ivtmp.228_453, of
 2790      16A00000 
 2790      00
 2791              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2792              		.loc 1 600 105 discriminator 2 view .LVU900
 2793 1115 C4C17E6F 		vmovdqu	ymm3, YMMWORD PTR 160[r9+rdx]	# tmp900, MEM[base: vectp.190_182, index: ivtmp.228_453, off
 2793      9C11A000 
 2793      0000
 2794              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2795              		.loc 1 600 58 discriminator 2 view .LVU901
 2796 111f C555D3C1 		vpsrlq	ymm8, ymm5, xmm1	# vect__43.188, tmp899, _14
 2797              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2798              		.loc 1 600 105 discriminator 2 view .LVU902
 2799 1123 C565F3C8 		vpsllq	ymm9, ymm3, xmm0	# vect__48.192, tmp900, _12
 2800              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2801              		.loc 1 600 76 discriminator 2 view .LVU903
 2802 1127 C4413DEB 		vpor	ymm10, ymm8, ymm9	# vect__51.193, vect__43.188, vect__48.192
 2802      D1
 2803              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2804              		.loc 1 600 31 discriminator 2 view .LVU904
 2805 112c C4417E7F 		vmovdqu	YMMWORD PTR 160[r10+rdx], ymm10	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0
 2805      9412A000 
 2805      0000
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2806              		.loc 1 599 48 is_stmt 1 discriminator 2 view .LVU905
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2807              		.loc 1 599 12 discriminator 2 view .LVU906
 600:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 85


 2808              		.loc 1 600 9 discriminator 2 view .LVU907
 2809              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2810              		.loc 1 600 58 is_stmt 0 discriminator 2 view .LVU908
 2811 1136 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 192[rsi+rdx]	# tmp901, MEM[base: vectp.186_175, index: ivtmp.228_453, o
 2811      16C00000 
 2811      00
 2812              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2813              		.loc 1 600 105 discriminator 2 view .LVU909
 2814 113f C4417E6F 		vmovdqu	ymm13, YMMWORD PTR 192[r9+rdx]	# tmp902, MEM[base: vectp.190_182, index: ivtmp.228_453, of
 2814      AC11C000 
 2814      0000
 2815              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2816              		.loc 1 600 58 discriminator 2 view .LVU910
 2817 1149 C525D3E1 		vpsrlq	ymm12, ymm11, xmm1	# vect__43.188, tmp901, _14
 2818              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2819              		.loc 1 600 105 discriminator 2 view .LVU911
 2820 114d C515F3F0 		vpsllq	ymm14, ymm13, xmm0	# vect__48.192, tmp902, _12
 2821              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2822              		.loc 1 600 76 discriminator 2 view .LVU912
 2823 1151 C4411DEB 		vpor	ymm15, ymm12, ymm14	# vect__51.193, vect__43.188, vect__48.192
 2823      FE
 2824              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2825              		.loc 1 600 31 discriminator 2 view .LVU913
 2826 1156 C4417E7F 		vmovdqu	YMMWORD PTR 192[r10+rdx], ymm15	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0
 2826      BC12C000 
 2826      0000
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2827              		.loc 1 599 48 is_stmt 1 discriminator 2 view .LVU914
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2828              		.loc 1 599 12 discriminator 2 view .LVU915
 600:sieve_extend.c ****     }
 2829              		.loc 1 600 9 discriminator 2 view .LVU916
 2830              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2831              		.loc 1 600 58 is_stmt 0 discriminator 2 view .LVU917
 2832 1160 C5FD6FB4 		vmovdqa	ymm6, YMMWORD PTR 224[rsi+rdx]	# tmp903, MEM[base: vectp.186_175, index: ivtmp.228_453, of
 2832      16E00000 
 2832      00
 2833              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2834              		.loc 1 600 105 discriminator 2 view .LVU918
 2835 1169 C4C17E6F 		vmovdqu	ymm7, YMMWORD PTR 224[r9+rdx]	# tmp904, MEM[base: vectp.190_182, index: ivtmp.228_453, off
 2835      BC11E000 
 2835      0000
 2836              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2837              		.loc 1 600 58 discriminator 2 view .LVU919
 2838 1173 C5CDD3D1 		vpsrlq	ymm2, ymm6, xmm1	# vect__43.188, tmp903, _14
 2839              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2840              		.loc 1 600 105 discriminator 2 view .LVU920
GAS LISTING /tmp/ccfflXEb.s 			page 86


 2841 1177 C5C5F3E0 		vpsllq	ymm4, ymm7, xmm0	# vect__48.192, tmp904, _12
 2842              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2843              		.loc 1 600 76 discriminator 2 view .LVU921
 2844 117b C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# vect__51.193, vect__43.188, vect__48.192
 2845              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2846              		.loc 1 600 31 discriminator 2 view .LVU922
 2847 117f C4C17E7F 		vmovdqu	YMMWORD PTR 224[r10+rdx], ymm5	# MEM[base: vectp.195_191, index: ivtmp.228_453, offset: 0B
 2847      AC12E000 
 2847      0000
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2848              		.loc 1 599 48 is_stmt 1 discriminator 2 view .LVU923
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2849              		.loc 1 599 12 discriminator 2 view .LVU924
 2850 1189 4881C200 		add	rdx, 256	# ivtmp.228,
 2850      010000
 2851 1190 4C39E2   		cmp	rdx, r12	# ivtmp.228, _455
 2852 1193 0F85CAFE 		jne	.L69	#,
 2852      FFFF
 2853              	.L200:
 2854 1199 4D89EF   		mov	r15, r13	# niters_vector_mult_vf.182, niters.180
 2855 119c 4983E7FC 		and	r15, -4	# niters_vector_mult_vf.182,
 2856 11a0 4C01FB   		add	rbx, r15	# tmp.183, niters_vector_mult_vf.182
 2857 11a3 4D01F8   		add	r8, r15	# tmp.184, niters_vector_mult_vf.182
 2858 11a6 4D39FD   		cmp	r13, r15	# niters.180, niters_vector_mult_vf.182
 2859 11a9 7475     		je	.L209	#,
 2860              	.LVL102:
 600:sieve_extend.c ****     }
 2861              		.loc 1 600 9 view .LVU925
 2862              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2863              		.loc 1 599 48 is_stmt 0 view .LVU926
 2864 11ab 4C8D5301 		lea	r10, 1[rbx]	# copy_word,
 2865              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2866              		.loc 1 600 105 view .LVU927
 2867 11af C422A1F7 		shlx	r9, QWORD PTR 8[rdi+r8*8], r11	# tmp484, *_47, shift
 2867      4CC708
 2868              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2869              		.loc 1 600 58 view .LVU928
 2870 11b6 C4A2FBF7 		shrx	rsi, QWORD PTR [rdi+r8*8], rax	# tmp486, *_42, shift_flipped
 2870      34C7
 2871              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2872              		.loc 1 600 76 view .LVU929
 2873 11bc 4909F1   		or	r9, rsi	# tmp488, tmp486
 2874              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2875              		.loc 1 599 5 view .LVU930
 2876 11bf 4C39D1   		cmp	rcx, r10	# destination_stop_word, copy_word
 2877              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2878              		.loc 1 600 89 view .LVU931
 2879 11c2 4D8D6801 		lea	r13, 1[r8]	# _45,
 2880              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
GAS LISTING /tmp/ccfflXEb.s 			page 87


 600:sieve_extend.c ****     }
 2881              		.loc 1 600 76 view .LVU932
 2882 11c6 4C890CDF 		mov	QWORD PTR [rdi+rbx*8], r9	# *_51, tmp488
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2883              		.loc 1 599 48 is_stmt 1 view .LVU933
 2884              	.LVL103:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2885              		.loc 1 599 12 view .LVU934
 2886              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2887              		.loc 1 599 5 is_stmt 0 view .LVU935
 2888 11ca 7254     		jb	.L209	#,
 600:sieve_extend.c ****     }
 2889              		.loc 1 600 9 is_stmt 1 view .LVU936
 2890              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2891              		.loc 1 599 48 is_stmt 0 view .LVU937
 2892 11cc 4883C302 		add	rbx, 2	# copy_word,
 2893              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2894              		.loc 1 600 105 view .LVU938
 2895 11d0 C422A1F7 		shlx	r12, QWORD PTR 8[rdi+r13*8], r11	# tmp489, *_34, shift
 2895      64EF08
 2896              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2897              		.loc 1 600 58 view .LVU939
 2898 11d7 4E8B34EF 		mov	r14, QWORD PTR [rdi+r13*8]	# *_29, *_29
 2899              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2900              		.loc 1 600 89 view .LVU940
 2901 11db 4983C002 		add	r8, 2	# _32,
 2902              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2903              		.loc 1 600 58 view .LVU941
 2904 11df C4C2FBF7 		shrx	rdx, r14, rax	# tmp491, *_29, shift_flipped
 2904      D6
 2905              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2906              		.loc 1 600 76 view .LVU942
 2907 11e4 4909D4   		or	r12, rdx	# tmp493, tmp491
 2908 11e7 4E8924D7 		mov	QWORD PTR [rdi+r10*8], r12	# *_38, tmp493
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2909              		.loc 1 599 48 is_stmt 1 view .LVU943
 2910              	.LVL104:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2911              		.loc 1 599 12 view .LVU944
 2912              	# sieve_extend.c:599:     for (; copy_word <= destination_stop_word; ++copy_word, ++source_word ) {
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2913              		.loc 1 599 5 is_stmt 0 view .LVU945
 2914 11eb 4839D9   		cmp	rcx, rbx	# destination_stop_word, copy_word
 2915 11ee 7230     		jb	.L209	#,
 600:sieve_extend.c ****     }
 2916              		.loc 1 600 9 is_stmt 1 view .LVU946
 2917              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2918              		.loc 1 600 105 is_stmt 0 view .LVU947
 2919 11f0 C4A2A1F7 		shlx	rcx, QWORD PTR 8[rdi+r8*8], r11	# tmp494, *_161, shift
GAS LISTING /tmp/ccfflXEb.s 			page 88


 2919      4CC708
 2920              	.LVL105:
 2921              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2922              		.loc 1 600 58 view .LVU948
 2923 11f7 4E8B1CC7 		mov	r11, QWORD PTR [rdi+r8*8]	# *_156, *_156
 2924              	.LVL106:
 600:sieve_extend.c ****     }
 2925              		.loc 1 600 58 view .LVU949
 2926 11fb C4C2FBF7 		shrx	rax, r11, rax	# tmp496, *_156, shift_flipped
 2926      C3
 2927              	# sieve_extend.c:600:         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | 
 600:sieve_extend.c ****     }
 2928              		.loc 1 600 76 view .LVU950
 2929 1200 4809C8   		or	rax, rcx	# tmp498, tmp494
 2930 1203 488904DF 		mov	QWORD PTR [rdi+rbx*8], rax	# *_165, tmp498
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2931              		.loc 1 599 48 is_stmt 1 view .LVU951
 2932              	.LVL107:
 599:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word] >> shift_flipped) | (bitstorage[source_wor
 2933              		.loc 1 599 12 view .LVU952
 2934 1207 C5F877   		vzeroupper
 2935              	# sieve_extend.c:606: }
 606:sieve_extend.c **** 
 2936              		.loc 1 606 1 is_stmt 0 view .LVU953
 2937 120a 488D65D8 		lea	rsp, -40[rbp]	#,
 2938 120e 5B       		pop	rbx	#
 2939 120f 415C     		pop	r12	#
 2940 1211 415D     		pop	r13	#
 2941 1213 415E     		pop	r14	#
 2942 1215 415F     		pop	r15	#
 2943 1217 5D       		pop	rbp	#
 2944              		.cfi_remember_state
 2945              		.cfi_def_cfa 7, 8
 2946 1218 C3       		ret	
 2947              	.LVL108:
 2948 1219 0F1F8000 		.p2align 4,,7
 2948      000000
 2949              		.p2align 3
 2950              	.L209:
 2951              		.cfi_restore_state
 606:sieve_extend.c **** 
 2952              		.loc 1 606 1 view .LVU954
 2953 1220 C5F877   		vzeroupper
 2954 1223 488D65D8 		lea	rsp, -40[rbp]	#,
 2955 1227 5B       		pop	rbx	#
 2956 1228 415C     		pop	r12	#
 2957 122a 415D     		pop	r13	#
 2958 122c 415E     		pop	r14	#
 2959 122e 415F     		pop	r15	#
 2960 1230 5D       		pop	rbp	#
 2961              		.cfi_remember_state
 2962              		.cfi_def_cfa 7, 8
 2963 1231 C3       		ret	
 2964              	.LVL109:
 2965              		.p2align 4,,7
 2966 1232 660F1F44 		.p2align 3
GAS LISTING /tmp/ccfflXEb.s 			page 89


 2966      0000
 2967              	.L78:
 2968              		.cfi_restore_state
 2969              	# sieve_extend.c:580:     register counter_t source_word = wordindex(source_start);
 580:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 2970              		.loc 1 580 24 view .LVU955
 2971 1238 4989F0   		mov	r8, rsi	# source_word, source_word
 2972              	# sieve_extend.c:588:     if (size >= WORD_SIZE_counter) {
 588:sieve_extend.c ****         register const counter_t loop_distance = destination_stop_word - copy_word;
 2973              		.loc 1 588 8 view .LVU956
 2974 123b 4C89D3   		mov	rbx, r10	# copy_word, copy_word
 2975 123e 4C8D7601 		lea	r14, 1[rsi]	# tmp671,
 2976 1242 E9B3FCFF 		jmp	.L67	#
 2976      FF
 2977              	.LVL110:
 2978              		.p2align 4,,7
 2979 1247 90       		.p2align 3
 2980              	.L75:
 2981              	.LBB319:
 2982              	.LBB317:
 2983              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2984              		.loc 1 592 33 view .LVU957
 2985 1248 48C74424 		mov	QWORD PTR -16[rsp], 0	# %sfp,
 2985      F0000000 
 2985      00
 2986 1251 488D5E01 		lea	rbx, 1[rsi]	# tmp553,
 2987 1255 E9CDF5FF 		jmp	.L59	#
 2987      FF
 2988              	.LVL111:
 2989 125a 660F1F44 		.p2align 4,,7
 2989      0000
 2990              		.p2align 3
 2991              	.L213:
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 2992              		.loc 1 592 33 view .LVU958
 2993 1260 C5F877   		vzeroupper
 2994 1263 E94CF9FF 		jmp	.L57	#
 2994      FF
 2995              	.L212:
 593:sieve_extend.c ****         }
 2996              		.loc 1 593 13 is_stmt 1 view .LVU959
 2997              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 2998              		.loc 1 593 66 is_stmt 0 view .LVU960
 2999 1268 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r9]	# tmp922, MEM[base: vectp.204_259, index: ivtmp.238_456, offset: 0B
 2999      01
 3000 126d BA200000 		mov	edx, 32	# ivtmp.238,
 3000      00
 3001              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 3002              		.loc 1 593 115 view .LVU961
 3003 1272 C5FE6F1B 		vmovdqu	ymm3, YMMWORD PTR [rbx]	# tmp923, MEM[base: vectp.208_266, index: ivtmp.238_456, offset: 0
 3004              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 3005              		.loc 1 593 66 view .LVU962
 3006 1276 C53DD3C9 		vpsrlq	ymm9, ymm8, xmm1	# vect__30.206, tmp922, _14
GAS LISTING /tmp/ccfflXEb.s 			page 90


 3007              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 3008              		.loc 1 593 115 view .LVU963
 3009 127a C565F3D0 		vpsllq	ymm10, ymm3, xmm0	# vect__35.210, tmp923, _12
 3010              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 3011              		.loc 1 593 84 view .LVU964
 3012 127e C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__39.211, vect__30.206, vect__35.210
 3012      DA
 3013              	# sieve_extend.c:593:             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_fli
 593:sieve_extend.c ****         }
 3014              		.loc 1 593 37 view .LVU965
 3015 1283 C4417E7F 		vmovdqu	YMMWORD PTR [r12], ymm11	# MEM[base: vectp.213_275, index: ivtmp.238_456, offset: 0B], vec
 3015      1C24
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 3016              		.loc 1 592 58 is_stmt 1 view .LVU966
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 3017              		.loc 1 592 40 view .LVU967
 3018 1289 E914F6FF 		jmp	.L157	#
 3018      FF
 3019              	.LVL112:
 3020              	.L74:
 3021              	# sieve_extend.c:592:         for (register counter_t i = 0; i <loop_distance; ++i) {
 592:sieve_extend.c ****             bitstorage[copy_word+i] = (bitstorage[source_word+i] >> shift_flipped) | (bitstorage[so
 3022              		.loc 1 592 33 is_stmt 0 view .LVU968
 3023 128e 4531E4   		xor	r12d, r12d	# tmp.202
 3024 1291 E930F8FF 		jmp	.L58	#
 3024      FF
 3025              	.LBE317:
 3026              	.LBE319:
 3027              		.cfi_endproc
 3028              	.LFE70:
 3030 1296 662E0F1F 		.p2align 4
 3030      84000000 
 3030      0000
 3032              	setBitsTrue_largeRange_vector:
 3033              	.LVL113:
 3034              	.LFB65:
 338:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3035              		.loc 1 338 155 is_stmt 1 view -0
 3036              		.cfi_startproc
 338:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3037              		.loc 1 338 155 is_stmt 0 view .LVU970
 3038 12a0 55       		push	rbp	#
 3039              		.cfi_def_cfa_offset 16
 3040              		.cfi_offset 6, -16
 3041 12a1 4889E5   		mov	rbp, rsp	#,
 3042              		.cfi_def_cfa_register 6
 3043 12a4 4157     		push	r15	#
 3044 12a6 4156     		push	r14	#
 3045 12a8 4155     		push	r13	#
 3046 12aa 4154     		push	r12	#
 3047 12ac 53       		push	rbx	#
 3048 12ad 4883E4E0 		and	rsp, -32	#,
 3049 12b1 488D6424 		lea	rsp, -64[rsp]	#,
 3049      C0
 3050              		.cfi_offset 15, -24
GAS LISTING /tmp/ccfflXEb.s 			page 91


 3051              		.cfi_offset 14, -32
 3052              		.cfi_offset 13, -40
 3053              		.cfi_offset 12, -48
 3054              		.cfi_offset 3, -56
 3055              	# sieve_extend.c:338: static void setBitsTrue_largeRange_vector(bitword_t* __restrict bitstorage_wo
 338:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange vector (%ju occ
 3056              		.loc 1 338 155 view .LVU971
 3057 12b6 64488B04 		mov	rax, QWORD PTR fs:40	# tmp425, MEM[(<address-space-1> long unsigned int *)40B]
 3057      25280000 
 3057      00
 3058 12bf 48894424 		mov	QWORD PTR 56[rsp], rax	# D.6771, tmp425
 3058      38
 3059 12c4 31C0     		xor	eax, eax	# tmp425
 339:sieve_extend.c **** 
 3060              		.loc 1 339 5 is_stmt 1 view .LVU972
 341:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 3061              		.loc 1 341 5 view .LVU973
 3062              	# sieve_extend.c:341:     counter_t range_start_atvector = vectorstart(range_start);
 341:sieve_extend.c ****     if likely(( range_start_atvector + step) < range_start) { // not the first step possible in thi
 3063              		.loc 1 341 15 is_stmt 0 view .LVU974
 3064 12c6 4889F0   		mov	rax, rsi	# range_start_atvector, range_start
 3065 12c9 30C0     		xor	al, al	# range_start_atvector
 3066              	.LVL114:
 342:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3067              		.loc 1 342 5 is_stmt 1 view .LVU975
 3068              	# sieve_extend.c:342:     if likely(( range_start_atvector + step) < range_start) { // not the firs
 342:sieve_extend.c ****         debug { printf("Range start+step %ju not at start of vector %ju\n",(uintmax_t)range_start+(
 3069              		.loc 1 342 8 is_stmt 0 view .LVU976
 3070 12cb 4C8D0410 		lea	r8, [rax+rdx]	# tmp174,
 3071 12cf 4939F0   		cmp	r8, rsi	# tmp174, range_start
 3072 12d2 0F83F800 		jnb	.L215	#,
 3072      0000
 343:sieve_extend.c **** 
 3073              		.loc 1 343 9 is_stmt 1 view .LVU977
 345:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3074              		.loc 1 345 9 view .LVU978
 3075              	# sieve_extend.c:345:         range_start_atvector += VECTOR_SIZE; // find next vector
 345:sieve_extend.c ****         if (unlikely(range_start_atvector > range_stop)) { // we should not be here; just handle wi
 3076              		.loc 1 345 30 is_stmt 0 view .LVU979
 3077 12d8 48050001 		add	rax, 256	# range_start_atvector,
 3077      0000
 3078              	.LVL115:
 346:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3079              		.loc 1 346 9 is_stmt 1 view .LVU980
 3080              	# sieve_extend.c:346:         if (unlikely(range_start_atvector > range_stop)) { // we should not b
 346:sieve_extend.c ****             debug2 printf("..Marking and returning without vector\n");
 3081              		.loc 1 346 12 is_stmt 0 view .LVU981
 3082 12de 4839C8   		cmp	rax, rcx	# range_start_atvector, range_stop
 3083 12e1 0F87B708 		ja	.L216	#,
 3083      0000
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3084              		.loc 1 356 16 is_stmt 1 view .LVU982
 3085              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3086              		.loc 1 356 9 is_stmt 0 view .LVU983
 3087 12e7 4839C6   		cmp	rsi, rax	# range_start, range_start_atvector
 3088              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
GAS LISTING /tmp/ccfflXEb.s 			page 92


 357:sieve_extend.c ****     }
 3089              		.loc 1 357 56 view .LVU984
 3090 12ea 41B90100 		mov	r9d, 1	# tmp184,
 3090      0000
 3091              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3092              		.loc 1 356 9 view .LVU985
 3093 12f0 0F87DA00 		ja	.L215	#,
 3093      0000
 3094              	.LVL116:
 3095              	.L217:
 357:sieve_extend.c ****     }
 3096              		.loc 1 357 13 is_stmt 1 discriminator 2 view .LVU986
 3097              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3098              		.loc 1 357 53 is_stmt 0 discriminator 2 view .LVU987
 3099 12f6 4889F3   		mov	rbx, rsi	# tmp180, range_start
 3100              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3101              		.loc 1 357 56 discriminator 2 view .LVU988
 3102 12f9 C442C9F7 		shlx	r10, r9, rsi	# tmp183, tmp184, range_start
 3102      D1
 3103              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3104              		.loc 1 357 53 discriminator 2 view .LVU989
 3105 12fe 48C1EB06 		shr	rbx, 6	# tmp180,
 3106              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3107              		.loc 1 356 65 discriminator 2 view .LVU990
 3108 1302 4801D6   		add	rsi, rdx	# range_start, step
 3109              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3110              		.loc 1 357 53 discriminator 2 view .LVU991
 3111 1305 4C0914DF 		or	QWORD PTR [rdi+rbx*8], r10	# *_22, tmp183
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3112              		.loc 1 356 53 is_stmt 1 discriminator 2 view .LVU992
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3113              		.loc 1 356 16 discriminator 2 view .LVU993
 3114              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3115              		.loc 1 356 9 is_stmt 0 discriminator 2 view .LVU994
 3116 1309 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3117 130c 0F82BE00 		jb	.L215	#,
 3117      0000
 357:sieve_extend.c ****     }
 3118              		.loc 1 357 13 is_stmt 1 view .LVU995
 3119              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3120              		.loc 1 357 53 is_stmt 0 view .LVU996
 3121 1312 4989F3   		mov	r11, rsi	# tmp393, range_start
 3122              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3123              		.loc 1 357 56 view .LVU997
 3124 1315 C442C9F7 		shlx	r12, r9, rsi	# tmp396, tmp184, range_start
 3124      E1
 3125              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 93


 3126              		.loc 1 357 53 view .LVU998
 3127 131a 49C1EB06 		shr	r11, 6	# tmp393,
 3128              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3129              		.loc 1 356 65 view .LVU999
 3130 131e 4801D6   		add	rsi, rdx	# range_start, step
 3131              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3132              		.loc 1 357 53 view .LVU1000
 3133 1321 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_22, tmp396
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3134              		.loc 1 356 53 is_stmt 1 view .LVU1001
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3135              		.loc 1 356 16 view .LVU1002
 3136              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3137              		.loc 1 356 9 is_stmt 0 view .LVU1003
 3138 1325 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3139 1328 0F82A200 		jb	.L215	#,
 3139      0000
 357:sieve_extend.c ****     }
 3140              		.loc 1 357 13 is_stmt 1 view .LVU1004
 3141              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3142              		.loc 1 357 53 is_stmt 0 view .LVU1005
 3143 132e 4989F5   		mov	r13, rsi	# tmp397, range_start
 3144              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3145              		.loc 1 357 56 view .LVU1006
 3146 1331 C442C9F7 		shlx	r14, r9, rsi	# tmp400, tmp184, range_start
 3146      F1
 3147              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3148              		.loc 1 357 53 view .LVU1007
 3149 1336 49C1ED06 		shr	r13, 6	# tmp397,
 3150              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3151              		.loc 1 356 65 view .LVU1008
 3152 133a 4801D6   		add	rsi, rdx	# range_start, step
 3153              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3154              		.loc 1 357 53 view .LVU1009
 3155 133d 4E0934EF 		or	QWORD PTR [rdi+r13*8], r14	# *_22, tmp400
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3156              		.loc 1 356 53 is_stmt 1 view .LVU1010
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3157              		.loc 1 356 16 view .LVU1011
 3158              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3159              		.loc 1 356 9 is_stmt 0 view .LVU1012
 3160 1341 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3161 1344 0F828600 		jb	.L215	#,
 3161      0000
 357:sieve_extend.c ****     }
 3162              		.loc 1 357 13 is_stmt 1 view .LVU1013
 3163              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 94


 3164              		.loc 1 357 53 is_stmt 0 view .LVU1014
 3165 134a 4989F7   		mov	r15, rsi	# tmp401, range_start
 3166              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3167              		.loc 1 357 56 view .LVU1015
 3168 134d C442C9F7 		shlx	r8, r9, rsi	# tmp404, tmp184, range_start
 3168      C1
 3169              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3170              		.loc 1 357 53 view .LVU1016
 3171 1352 49C1EF06 		shr	r15, 6	# tmp401,
 3172              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3173              		.loc 1 356 65 view .LVU1017
 3174 1356 4801D6   		add	rsi, rdx	# range_start, step
 3175              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3176              		.loc 1 357 53 view .LVU1018
 3177 1359 4E0904FF 		or	QWORD PTR [rdi+r15*8], r8	# *_22, tmp404
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3178              		.loc 1 356 53 is_stmt 1 view .LVU1019
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3179              		.loc 1 356 16 view .LVU1020
 3180              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3181              		.loc 1 356 9 is_stmt 0 view .LVU1021
 3182 135d 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3183 1360 726E     		jb	.L215	#,
 357:sieve_extend.c ****     }
 3184              		.loc 1 357 13 is_stmt 1 view .LVU1022
 3185              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3186              		.loc 1 357 53 is_stmt 0 view .LVU1023
 3187 1362 4889F3   		mov	rbx, rsi	# tmp405, range_start
 3188              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3189              		.loc 1 357 56 view .LVU1024
 3190 1365 C442C9F7 		shlx	r10, r9, rsi	# tmp408, tmp184, range_start
 3190      D1
 3191              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3192              		.loc 1 357 53 view .LVU1025
 3193 136a 48C1EB06 		shr	rbx, 6	# tmp405,
 3194              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3195              		.loc 1 356 65 view .LVU1026
 3196 136e 4801D6   		add	rsi, rdx	# range_start, step
 3197              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3198              		.loc 1 357 53 view .LVU1027
 3199 1371 4C0914DF 		or	QWORD PTR [rdi+rbx*8], r10	# *_22, tmp408
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3200              		.loc 1 356 53 is_stmt 1 view .LVU1028
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3201              		.loc 1 356 16 view .LVU1029
 3202              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
GAS LISTING /tmp/ccfflXEb.s 			page 95


 3203              		.loc 1 356 9 is_stmt 0 view .LVU1030
 3204 1375 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3205 1378 7256     		jb	.L215	#,
 357:sieve_extend.c ****     }
 3206              		.loc 1 357 13 is_stmt 1 view .LVU1031
 3207              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3208              		.loc 1 357 53 is_stmt 0 view .LVU1032
 3209 137a 4989F3   		mov	r11, rsi	# tmp409, range_start
 3210              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3211              		.loc 1 357 56 view .LVU1033
 3212 137d C442C9F7 		shlx	r12, r9, rsi	# tmp412, tmp184, range_start
 3212      E1
 3213              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3214              		.loc 1 357 53 view .LVU1034
 3215 1382 49C1EB06 		shr	r11, 6	# tmp409,
 3216              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3217              		.loc 1 356 65 view .LVU1035
 3218 1386 4801D6   		add	rsi, rdx	# range_start, step
 3219              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3220              		.loc 1 357 53 view .LVU1036
 3221 1389 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_22, tmp412
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3222              		.loc 1 356 53 is_stmt 1 view .LVU1037
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3223              		.loc 1 356 16 view .LVU1038
 3224              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3225              		.loc 1 356 9 is_stmt 0 view .LVU1039
 3226 138d 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3227 1390 723E     		jb	.L215	#,
 357:sieve_extend.c ****     }
 3228              		.loc 1 357 13 is_stmt 1 view .LVU1040
 3229              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3230              		.loc 1 357 53 is_stmt 0 view .LVU1041
 3231 1392 4989F5   		mov	r13, rsi	# tmp413, range_start
 3232              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3233              		.loc 1 357 56 view .LVU1042
 3234 1395 C442C9F7 		shlx	r14, r9, rsi	# tmp416, tmp184, range_start
 3234      F1
 3235              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3236              		.loc 1 357 53 view .LVU1043
 3237 139a 49C1ED06 		shr	r13, 6	# tmp413,
 3238              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3239              		.loc 1 356 65 view .LVU1044
 3240 139e 4801D6   		add	rsi, rdx	# range_start, step
 3241              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3242              		.loc 1 357 53 view .LVU1045
GAS LISTING /tmp/ccfflXEb.s 			page 96


 3243 13a1 4E0934EF 		or	QWORD PTR [rdi+r13*8], r14	# *_22, tmp416
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3244              		.loc 1 356 53 is_stmt 1 view .LVU1046
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3245              		.loc 1 356 16 view .LVU1047
 3246              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3247              		.loc 1 356 9 is_stmt 0 view .LVU1048
 3248 13a5 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3249 13a8 7226     		jb	.L215	#,
 357:sieve_extend.c ****     }
 3250              		.loc 1 357 13 is_stmt 1 view .LVU1049
 3251              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3252              		.loc 1 357 53 is_stmt 0 view .LVU1050
 3253 13aa 4989F7   		mov	r15, rsi	# tmp417, range_start
 3254              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3255              		.loc 1 357 56 view .LVU1051
 3256 13ad C442C9F7 		shlx	r8, r9, rsi	# tmp420, tmp184, range_start
 3256      C1
 3257              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3258              		.loc 1 357 53 view .LVU1052
 3259 13b2 49C1EF06 		shr	r15, 6	# tmp417,
 3260              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3261              		.loc 1 356 65 view .LVU1053
 3262 13b6 4801D6   		add	rsi, rdx	# range_start, step
 3263              	# sieve_extend.c:357:             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 357:sieve_extend.c ****     }
 3264              		.loc 1 357 53 view .LVU1054
 3265 13b9 4E0904FF 		or	QWORD PTR [rdi+r15*8], r8	# *_22, tmp420
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3266              		.loc 1 356 53 is_stmt 1 view .LVU1055
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3267              		.loc 1 356 16 view .LVU1056
 3268              	# sieve_extend.c:356:         for (; range_start <= range_start_atvector; range_start += step) 
 356:sieve_extend.c ****             bitstorage_word[wordindex(range_start)] |= markmask(range_start);
 3269              		.loc 1 356 9 is_stmt 0 view .LVU1057
 3270 13bd 4839F0   		cmp	rax, rsi	# range_start_atvector, range_start
 3271 13c0 0F8330FF 		jnb	.L217	#,
 3271      FFFF
 3272 13c6 662E0F1F 		.p2align 4
 3272      84000000 
 3272      0000
 3273              		.p2align 3
 3274              	.L215:
 360:sieve_extend.c **** 
 3275              		.loc 1 360 5 is_stmt 1 view .LVU1058
 3276              	# sieve_extend.c:360:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
 360:sieve_extend.c **** 
 3277              		.loc 1 360 42 is_stmt 0 view .LVU1059
 3278 13d0 4989D3   		mov	r11, rdx	# tmp185, step
 3279 13d3 49C1E308 		sal	r11, 8	# tmp185,
 3280 13d7 4901F3   		add	r11, rsi	# tmp186, range_start
 3281              	# sieve_extend.c:360:     const counter_t range_stop_unique =  min(range_start + VECTOR_SIZE_counte
GAS LISTING /tmp/ccfflXEb.s 			page 97


 360:sieve_extend.c **** 
 3282              		.loc 1 360 21 view .LVU1060
 3283 13da 4939CB   		cmp	r11, rcx	# tmp186, range_stop
 3284 13dd 4C0F47D9 		cmova	r11, rcx	# tmp186,, range_stop_unique, range_stop
 3285              	.LVL117:
 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 3286              		.loc 1 362 5 is_stmt 1 view .LVU1061
 3287              	.LBB325:
 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 3288              		.loc 1 362 10 view .LVU1062
 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 3289              		.loc 1 362 41 view .LVU1063
 3290              	# sieve_extend.c:362:     for (counter_t index = range_start; index < range_stop_unique;) {
 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 3291              		.loc 1 362 5 is_stmt 0 view .LVU1064
 3292 13e1 4C39DE   		cmp	rsi, r11	# range_start, range_stop_unique
 3293 13e4 0F83B904 		jnb	.L214	#,
 3293      0000
 3294              	.LBB326:
 3295              	.LBB327:
 3296              	.LBB328:
 3297              	# sieve_extend.c:316:     const counter_t range_stop_vector = vectorindex(range_stop);
 316:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 3298              		.loc 1 316 21 view .LVU1065
 3299 13ea 48C1E908 		shr	rcx, 8	# range_stop_vector,
 3300              	.LVL118:
 3301              	# sieve_extend.c:318:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 318:sieve_extend.c ****     
 3302              		.loc 1 318 117 view .LVU1066
 3303 13ee 4C8D0C95 		lea	r9, 0[0+rdx*4]	# _70,
 3303      00000000 
 3304              	# sieve_extend.c:318:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 318:sieve_extend.c ****     
 3305              		.loc 1 318 142 view .LVU1067
 3306 13f6 4889C8   		mov	rax, rcx	# tmp187, range_stop_vector
 3307              	.LVL119:
 3308              	# sieve_extend.c:330:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 330:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 3309              		.loc 1 330 97 view .LVU1068
 3310 13f9 4989CA   		mov	r10, rcx	# tmp188, range_stop_vector
 3311              	# sieve_extend.c:318:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 318:sieve_extend.c ****     
 3312              		.loc 1 318 142 view .LVU1069
 3313 13fc 4C29C8   		sub	rax, r9	# tmp187, _70
 3314              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3315              		.loc 1 323 38 view .LVU1070
 3316 13ff 4989D0   		mov	r8, rdx	# _79, step
 3317              	# sieve_extend.c:330:     register const bitvector_t* __restrict range_stop_ptr = __builtin_assume_
 330:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 3318              		.loc 1 330 97 view .LVU1071
 3319 1402 49C1E205 		sal	r10, 5	# tmp188,
 3320              	# sieve_extend.c:318:     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_align
 318:sieve_extend.c ****     
 3321              		.loc 1 318 92 view .LVU1072
 3322 1406 48C1E005 		sal	rax, 5	# iftmp.60_72,
 3323 140a 4901FA   		add	r10, rdi	# _165, bitstorage_word
GAS LISTING /tmp/ccfflXEb.s 			page 98


 3324              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3325              		.loc 1 323 38 view .LVU1073
 3326 140d 49C1E005 		sal	r8, 5	# _79,
 3327 1411 4801F8   		add	rax, rdi	# tmp203, bitstorage_word
 3328 1414 4883FA01 		cmp	rdx, 1	# step,
 3329 1418 0F85A804 		jne	.L381	#,
 3329      0000
 3330 141e 4883F904 		cmp	rcx, 4	# range_stop_vector,
 3331              	.LBE328:
 3332              	.LBE327:
 3333              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3334              		.loc 1 372 31 view .LVU1074
 3335 1422 41B90100 		mov	r9d, 1	# tmp208,
 3335      0000
 3336              	# sieve_extend.c:367:         register bitvector_t quadmask = { };
 367:sieve_extend.c **** 
 3337              		.loc 1 367 30 view .LVU1075
 3338 1428 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp205
 3339 142c 480F46C7 		cmovbe	rax, rdi	# bitstorage_word,, tmp203
 3340 1430 4889C3   		mov	rbx, rax	# fast_loop_ptr, tmp203
 3341              	.LVL120:
 3342 1433 66662E0F 		.p2align 4
 3342      1F840000 
 3342      00000066 
 3342      90
 3343              		.p2align 3
 3344              	.L231:
 363:sieve_extend.c ****          const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD)
 3345              		.loc 1 363 9 is_stmt 1 view .LVU1076
 3346              	# sieve_extend.c:363:         const counter_t current_vector =  vectorindex(index);
 363:sieve_extend.c ****          const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD)
 3347              		.loc 1 363 25 is_stmt 0 view .LVU1077
 3348 1440 4889F0   		mov	rax, rsi	# current_vector, range_start
 3349              	# sieve_extend.c:365:         register counter_t word = wordindex(index) - current_vector_start_wor
 365:sieve_extend.c **** 
 3350              		.loc 1 365 35 view .LVU1078
 3351 1443 4989F6   		mov	r14, rsi	# tmp204, range_start
 3352              	# sieve_extend.c:363:         const counter_t current_vector =  vectorindex(index);
 363:sieve_extend.c ****          const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD)
 3353              		.loc 1 363 25 view .LVU1079
 3354 1446 48C1E808 		shr	rax, 8	# current_vector,
 3355              	.LVL121:
 364:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3356              		.loc 1 364 10 is_stmt 1 view .LVU1080
 3357              	# sieve_extend.c:365:         register counter_t word = wordindex(index) - current_vector_start_wor
 365:sieve_extend.c **** 
 3358              		.loc 1 365 35 is_stmt 0 view .LVU1081
 3359 144a 49C1EE06 		shr	r14, 6	# tmp204,
 3360              	# sieve_extend.c:364:          const counter_t current_vector_start_word =  current_vector << (SHIF
 364:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 3361              		.loc 1 364 26 view .LVU1082
 3362 144e 488D1485 		lea	rdx, 0[0+rax*4]	# current_vector_start_word,
 3362      00000000 
 3363              	.LVL122:
 365:sieve_extend.c **** 
GAS LISTING /tmp/ccfflXEb.s 			page 99


 3364              		.loc 1 365 9 is_stmt 1 view .LVU1083
 3365              	# sieve_extend.c:367:         register bitvector_t quadmask = { };
 367:sieve_extend.c **** 
 3366              		.loc 1 367 30 is_stmt 0 view .LVU1084
 3367 1456 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp205
 3367      24
 3368              	# sieve_extend.c:365:         register counter_t word = wordindex(index) - current_vector_start_wor
 365:sieve_extend.c **** 
 3369              		.loc 1 365 28 view .LVU1085
 3370 145b 4929D6   		sub	r14, rdx	# word, current_vector_start_word
 3371              	.LVL123:
 367:sieve_extend.c **** 
 3372              		.loc 1 367 9 is_stmt 1 view .LVU1086
 3373              	.L226:
 372:sieve_extend.c ****             index += step;
 3374              		.loc 1 372 13 view .LVU1087
 3375              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3376              		.loc 1 372 31 is_stmt 0 view .LVU1088
 3377 145e C442C9F7 		shlx	r15, r9, rsi	# tmp207, tmp208, range_start
 3377      F9
 3378              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3379              		.loc 1 372 28 view .LVU1089
 3380 1463 4E093CF4 		or	QWORD PTR [rsp+r14*8], r15	# quadmask, tmp207
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3381              		.loc 1 373 13 is_stmt 1 view .LVU1090
 3382              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3383              		.loc 1 373 19 is_stmt 0 view .LVU1091
 3384 1467 4C8D7601 		lea	r14, 1[rsi]	# tmp228,
 3385              	.LVL124:
 3386              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3387              		.loc 1 374 20 view .LVU1092
 3388 146b 4C89F1   		mov	rcx, r14	# tmp209, range_start
 3389              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3390              		.loc 1 373 19 view .LVU1093
 3391 146e 4C89F6   		mov	rsi, r14	# range_start, tmp228
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3392              		.loc 1 374 13 is_stmt 1 view .LVU1094
 3393              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3394              		.loc 1 374 20 is_stmt 0 view .LVU1095
 3395 1471 48C1E906 		shr	rcx, 6	# tmp209,
 3396              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3397              		.loc 1 374 18 view .LVU1096
 3398 1475 4829D1   		sub	rcx, rdx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 3399              		.loc 1 375 17 is_stmt 1 view .LVU1097
 3400              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 3401              		.loc 1 375 9 is_stmt 0 view .LVU1098
 3402 1478 4883F903 		cmp	rcx, 3	# word,
 3403 147c 0F87DE00 		ja	.L375	#,
GAS LISTING /tmp/ccfflXEb.s 			page 100


 3403      0000
 372:sieve_extend.c ****             index += step;
 3404              		.loc 1 372 13 is_stmt 1 view .LVU1099
 3405              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3406              		.loc 1 373 19 is_stmt 0 view .LVU1100
 3407 1482 4883C601 		add	rsi, 1	# range_start,
 3408              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3409              		.loc 1 372 31 view .LVU1101
 3410 1486 C44289F7 		shlx	r8, r9, r14	# tmp326, tmp208, range_start
 3410      C1
 3411              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3412              		.loc 1 374 20 view .LVU1102
 3413 148b 4989F4   		mov	r12, rsi	# tmp327, range_start
 3414              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3415              		.loc 1 372 28 view .LVU1103
 3416 148e 4C0904CC 		or	QWORD PTR [rsp+rcx*8], r8	# quadmask, tmp326
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3417              		.loc 1 373 13 is_stmt 1 view .LVU1104
 3418              	.LVL125:
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3419              		.loc 1 374 13 view .LVU1105
 3420              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3421              		.loc 1 374 20 is_stmt 0 view .LVU1106
 3422 1492 49C1EC06 		shr	r12, 6	# tmp327,
 3423              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3424              		.loc 1 374 18 view .LVU1107
 3425 1496 4929D4   		sub	r12, rdx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 3426              		.loc 1 375 17 is_stmt 1 view .LVU1108
 3427              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 3428              		.loc 1 375 9 is_stmt 0 view .LVU1109
 3429 1499 4983FC03 		cmp	r12, 3	# word,
 3430 149d 0F87BD00 		ja	.L375	#,
 3430      0000
 372:sieve_extend.c ****             index += step;
 3431              		.loc 1 372 13 is_stmt 1 view .LVU1110
 3432              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3433              		.loc 1 372 31 is_stmt 0 view .LVU1111
 3434 14a3 C4C2C9F7 		shlx	rsi, r9, rsi	# tmp329, tmp208, range_start
 3434      F1
 3435              	.LVL126:
 3436              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3437              		.loc 1 372 28 view .LVU1112
 3438 14a8 4A0934E4 		or	QWORD PTR [rsp+r12*8], rsi	# quadmask, tmp329
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3439              		.loc 1 373 13 is_stmt 1 view .LVU1113
 3440              	.LVL127:
 3441              	# sieve_extend.c:373:             index += step;
GAS LISTING /tmp/ccfflXEb.s 			page 101


 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3442              		.loc 1 373 19 is_stmt 0 view .LVU1114
 3443 14ac 498D7602 		lea	rsi, 2[r14]	# range_start,
 3444              	.LVL128:
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3445              		.loc 1 374 13 is_stmt 1 view .LVU1115
 3446              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3447              		.loc 1 374 20 is_stmt 0 view .LVU1116
 3448 14b0 4989F5   		mov	r13, rsi	# tmp330, range_start
 3449 14b3 49C1ED06 		shr	r13, 6	# tmp330,
 3450              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3451              		.loc 1 374 18 view .LVU1117
 3452 14b7 4929D5   		sub	r13, rdx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 3453              		.loc 1 375 17 is_stmt 1 view .LVU1118
 3454              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 3455              		.loc 1 375 9 is_stmt 0 view .LVU1119
 3456 14ba 4983FD03 		cmp	r13, 3	# word,
 3457 14be 0F879C00 		ja	.L375	#,
 3457      0000
 372:sieve_extend.c ****             index += step;
 3458              		.loc 1 372 13 is_stmt 1 view .LVU1120
 3459              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3460              		.loc 1 372 31 is_stmt 0 view .LVU1121
 3461 14c4 C442C9F7 		shlx	r15, r9, rsi	# tmp332, tmp208, range_start
 3461      F9
 3462              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3463              		.loc 1 373 19 view .LVU1122
 3464 14c9 498D7603 		lea	rsi, 3[r14]	# range_start,
 3465              	.LVL129:
 3466              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3467              		.loc 1 374 20 view .LVU1123
 3468 14cd 4889F1   		mov	rcx, rsi	# tmp333, range_start
 3469              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3470              		.loc 1 372 28 view .LVU1124
 3471 14d0 4E093CEC 		or	QWORD PTR [rsp+r13*8], r15	# quadmask, tmp332
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3472              		.loc 1 373 13 is_stmt 1 view .LVU1125
 3473              	.LVL130:
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3474              		.loc 1 374 13 view .LVU1126
 3475              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3476              		.loc 1 374 20 is_stmt 0 view .LVU1127
 3477 14d4 48C1E906 		shr	rcx, 6	# tmp333,
 3478              	.LVL131:
 3479              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3480              		.loc 1 374 18 view .LVU1128
 3481 14d8 4829D1   		sub	rcx, rdx	# word, current_vector_start_word
GAS LISTING /tmp/ccfflXEb.s 			page 102


 375:sieve_extend.c **** 
 3482              		.loc 1 375 17 is_stmt 1 view .LVU1129
 3483              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 3484              		.loc 1 375 9 is_stmt 0 view .LVU1130
 3485 14db 4883F903 		cmp	rcx, 3	# word,
 3486 14df 777F     		ja	.L375	#,
 372:sieve_extend.c ****             index += step;
 3487              		.loc 1 372 13 is_stmt 1 view .LVU1131
 3488              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3489              		.loc 1 372 31 is_stmt 0 view .LVU1132
 3490 14e1 C442C9F7 		shlx	r8, r9, rsi	# tmp335, tmp208, range_start
 3490      C1
 3491              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3492              		.loc 1 373 19 view .LVU1133
 3493 14e6 498D7604 		lea	rsi, 4[r14]	# range_start,
 3494              	.LVL132:
 3495              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3496              		.loc 1 374 20 view .LVU1134
 3497 14ea 4989F4   		mov	r12, rsi	# tmp336, range_start
 3498              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3499              		.loc 1 372 28 view .LVU1135
 3500 14ed 4C0904CC 		or	QWORD PTR [rsp+rcx*8], r8	# quadmask, tmp335
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3501              		.loc 1 373 13 is_stmt 1 view .LVU1136
 3502              	.LVL133:
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3503              		.loc 1 374 13 view .LVU1137
 3504              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3505              		.loc 1 374 20 is_stmt 0 view .LVU1138
 3506 14f1 49C1EC06 		shr	r12, 6	# tmp336,
 3507              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3508              		.loc 1 374 18 view .LVU1139
 3509 14f5 4929D4   		sub	r12, rdx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 3510              		.loc 1 375 17 is_stmt 1 view .LVU1140
 3511              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 3512              		.loc 1 375 9 is_stmt 0 view .LVU1141
 3513 14f8 4983FC03 		cmp	r12, 3	# word,
 3514 14fc 7762     		ja	.L375	#,
 372:sieve_extend.c ****             index += step;
 3515              		.loc 1 372 13 is_stmt 1 view .LVU1142
 3516              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3517              		.loc 1 372 31 is_stmt 0 view .LVU1143
 3518 14fe C4C2C9F7 		shlx	rsi, r9, rsi	# tmp338, tmp208, range_start
 3518      F1
 3519              	.LVL134:
 3520              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
GAS LISTING /tmp/ccfflXEb.s 			page 103


 3521              		.loc 1 372 28 view .LVU1144
 3522 1503 4A0934E4 		or	QWORD PTR [rsp+r12*8], rsi	# quadmask, tmp338
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3523              		.loc 1 373 13 is_stmt 1 view .LVU1145
 3524              	.LVL135:
 3525              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3526              		.loc 1 373 19 is_stmt 0 view .LVU1146
 3527 1507 498D7605 		lea	rsi, 5[r14]	# range_start,
 3528              	.LVL136:
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3529              		.loc 1 374 13 is_stmt 1 view .LVU1147
 3530              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3531              		.loc 1 374 20 is_stmt 0 view .LVU1148
 3532 150b 4989F5   		mov	r13, rsi	# tmp339, range_start
 3533 150e 49C1ED06 		shr	r13, 6	# tmp339,
 3534              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3535              		.loc 1 374 18 view .LVU1149
 3536 1512 4929D5   		sub	r13, rdx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 3537              		.loc 1 375 17 is_stmt 1 view .LVU1150
 3538              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 3539              		.loc 1 375 9 is_stmt 0 view .LVU1151
 3540 1515 4983FD03 		cmp	r13, 3	# word,
 3541 1519 7745     		ja	.L375	#,
 372:sieve_extend.c ****             index += step;
 3542              		.loc 1 372 13 is_stmt 1 view .LVU1152
 3543              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3544              		.loc 1 372 31 is_stmt 0 view .LVU1153
 3545 151b C442C9F7 		shlx	r15, r9, rsi	# tmp341, tmp208, range_start
 3545      F9
 3546              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3547              		.loc 1 373 19 view .LVU1154
 3548 1520 498D7606 		lea	rsi, 6[r14]	# range_start,
 3549              	.LVL137:
 3550              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3551              		.loc 1 374 20 view .LVU1155
 3552 1524 4889F1   		mov	rcx, rsi	# tmp342, range_start
 3553              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3554              		.loc 1 372 28 view .LVU1156
 3555 1527 4E093CEC 		or	QWORD PTR [rsp+r13*8], r15	# quadmask, tmp341
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3556              		.loc 1 373 13 is_stmt 1 view .LVU1157
 3557              	.LVL138:
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3558              		.loc 1 374 13 view .LVU1158
 3559              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3560              		.loc 1 374 20 is_stmt 0 view .LVU1159
 3561 152b 48C1E906 		shr	rcx, 6	# tmp342,
GAS LISTING /tmp/ccfflXEb.s 			page 104


 3562              	.LVL139:
 3563              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3564              		.loc 1 374 18 view .LVU1160
 3565 152f 4829D1   		sub	rcx, rdx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 3566              		.loc 1 375 17 is_stmt 1 view .LVU1161
 3567              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 3568              		.loc 1 375 9 is_stmt 0 view .LVU1162
 3569 1532 4883F903 		cmp	rcx, 3	# word,
 3570 1536 7728     		ja	.L375	#,
 372:sieve_extend.c ****             index += step;
 3571              		.loc 1 372 13 is_stmt 1 view .LVU1163
 3572              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3573              		.loc 1 372 31 is_stmt 0 view .LVU1164
 3574 1538 C442C9F7 		shlx	r8, r9, rsi	# tmp344, tmp208, range_start
 3574      C1
 3575              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3576              		.loc 1 373 19 view .LVU1165
 3577 153d 498D7607 		lea	rsi, 7[r14]	# range_start,
 3578              	.LVL140:
 3579              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3580              		.loc 1 374 20 view .LVU1166
 3581 1541 4989F6   		mov	r14, rsi	# tmp345, range_start
 3582              	.LVL141:
 3583              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 3584              		.loc 1 372 28 view .LVU1167
 3585 1544 4C0904CC 		or	QWORD PTR [rsp+rcx*8], r8	# quadmask, tmp344
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 3586              		.loc 1 373 13 is_stmt 1 view .LVU1168
 3587              	.LVL142:
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3588              		.loc 1 374 13 view .LVU1169
 3589              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3590              		.loc 1 374 20 is_stmt 0 view .LVU1170
 3591 1548 49C1EE06 		shr	r14, 6	# tmp345,
 3592              	.LVL143:
 3593              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 3594              		.loc 1 374 18 view .LVU1171
 3595 154c 4929D6   		sub	r14, rdx	# word, current_vector_start_word
 3596              	.LVL144:
 375:sieve_extend.c **** 
 3597              		.loc 1 375 17 is_stmt 1 view .LVU1172
 3598              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 3599              		.loc 1 375 9 is_stmt 0 view .LVU1173
 3600 154f 4983FE03 		cmp	r14, 3	# word,
 3601 1553 0F8605FF 		jbe	.L226	#,
 3601      FFFF
 3602              	.LVL145:
GAS LISTING /tmp/ccfflXEb.s 			page 105


 3603 1559 0F1F8000 		.p2align 4
 3603      000000
 3604              		.p2align 3
 3605              	.L375:
 379:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 3606              		.loc 1 379 9 is_stmt 1 view .LVU1174
 380:sieve_extend.c ****     }
 3607              		.loc 1 380 9 view .LVU1175
 3608              	.LBB332:
 3609              	.LBB329:
 3610              	# sieve_extend.c:317:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 317:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 3611              		.loc 1 317 92 is_stmt 0 view .LVU1176
 3612 1560 48C1E005 		sal	rax, 5	# tmp210,
 3613              	.LVL146:
 317:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 3614              		.loc 1 317 92 view .LVU1177
 3615              	.LBE329:
 3616              	.LBE332:
 3617              	# sieve_extend.c:380:         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, curre
 380:sieve_extend.c ****     }
 3618              		.loc 1 380 9 view .LVU1178
 3619 1564 C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsp]	# quadmask.59_154, quadmask
 3619      24
 3620              	.LVL147:
 3621              	.LBB333:
 3622              	.LBI327:
 315:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
 3623              		.loc 1 315 20 is_stmt 1 view .LVU1179
 3624              	.LBB330:
 316:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 3625              		.loc 1 316 5 view .LVU1180
 317:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 3626              		.loc 1 317 5 view .LVU1181
 3627              	# sieve_extend.c:317:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 317:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 3628              		.loc 1 317 81 is_stmt 0 view .LVU1182
 3629 1569 4801F8   		add	rax, rdi	# _26, bitstorage_word
 3630              	.LVL148:
 318:sieve_extend.c ****     
 3631              		.loc 1 318 5 is_stmt 1 view .LVU1183
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3632              		.loc 1 322 11 view .LVU1184
 3633 156c 4839C3   		cmp	rbx, rax	# fast_loop_ptr, _26
 3634 156f 0F86FB01 		jbe	.L227	#,
 3634      0000
 3635 1575 4989C5   		mov	r13, rax	# tmp223, _26
 3636              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3637              		.loc 1 323 20 is_stmt 0 view .LVU1185
 3638 1578 C57DEB20 		vpor	ymm12, ymm0, YMMWORD PTR [rax]	# tmp211, quadmask.59_154, MEM[base: index_ptr_147, offset: 0B
 3639 157c 49F7D5   		not	r13	# tmp223
 3640              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3641              		.loc 1 324 20 view .LVU1186
 3642 157f C57DEB68 		vpor	ymm13, ymm0, YMMWORD PTR 32[rax]	# tmp212, quadmask.59_154, MEM[base: index_ptr_147, offset: 
 3642      20
GAS LISTING /tmp/ccfflXEb.s 			page 106


 3643              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3644              		.loc 1 325 20 view .LVU1187
 3645 1584 C57DEB70 		vpor	ymm14, ymm0, YMMWORD PTR 64[rax]	# tmp213, quadmask.59_154, MEM[base: _19, offset: 0B]
 3645      40
 3646 1589 4901DD   		add	r13, rbx	# tmp224, fast_loop_ptr
 3647 158c 4C8D6040 		lea	r12, 64[rax]	# ivtmp.263,
 3648              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3649              		.loc 1 326 20 view .LVU1188
 3650 1590 C57DEB78 		vpor	ymm15, ymm0, YMMWORD PTR 96[rax]	# tmp214, quadmask.59_154, MEM[base: _19, offset: 32B]
 3650      60
 3651              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3652              		.loc 1 323 20 view .LVU1189
 3653 1595 C57D7F20 		vmovdqa	YMMWORD PTR [rax], ymm12	# MEM[base: index_ptr_147, offset: 0B], tmp211
 3654 1599 4883E880 		sub	rax, -128	# _26,
 3655              	.LVL149:
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3656              		.loc 1 323 20 view .LVU1190
 3657 159d 49C1ED07 		shr	r13, 7	# tmp222,
 3658 15a1 498D9424 		lea	rdx, 128[r12]	# ivtmp.263,
 3658      80000000 
 3659              	.LVL150:
 3660              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3661              		.loc 1 324 20 view .LVU1191
 3662 15a9 C57D7F68 		vmovdqa	YMMWORD PTR -96[rax], ymm13	# MEM[base: index_ptr_147, offset: 32B], tmp212
 3662      A0
 3663 15ae 4183E503 		and	r13d, 3	# tmp225,
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3664              		.loc 1 323 9 is_stmt 1 view .LVU1192
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3665              		.loc 1 323 29 view .LVU1193
 3666              	.LVL151:
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3667              		.loc 1 324 9 view .LVU1194
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3668              		.loc 1 324 29 view .LVU1195
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3669              		.loc 1 325 9 view .LVU1196
 3670              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3671              		.loc 1 325 20 is_stmt 0 view .LVU1197
 3672 15b2 C57D7F70 		vmovdqa	YMMWORD PTR -64[rax], ymm14	# MEM[base: _19, offset: 0B], tmp213
 3672      C0
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3673              		.loc 1 325 29 is_stmt 1 view .LVU1198
 3674              	.LVL152:
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3675              		.loc 1 326 9 view .LVU1199
 3676              	# sieve_extend.c:322:     while likely(index_ptr < fast_loop_ptr) {
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3677              		.loc 1 322 11 is_stmt 0 view .LVU1200
 3678 15b7 4839D8   		cmp	rax, rbx	# _26, fast_loop_ptr
 3679              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 107


 3680              		.loc 1 326 20 view .LVU1201
 3681 15ba C4417D7F 		vmovdqa	YMMWORD PTR 32[r12], ymm15	# MEM[base: _19, offset: 32B], tmp214
 3681      7C2420
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3682              		.loc 1 326 29 is_stmt 1 view .LVU1202
 3683              	.LVL153:
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3684              		.loc 1 322 11 view .LVU1203
 3685 15c1 0F83A901 		jnb	.L227	#,
 3685      0000
 3686 15c7 4D85ED   		test	r13, r13	# tmp225
 3687 15ca 0F84AD00 		je	.L228	#,
 3687      0000
 3688 15d0 4983FD01 		cmp	r13, 1	# tmp225,
 3689 15d4 7470     		je	.L337	#,
 3690 15d6 4983FD02 		cmp	r13, 2	# tmp225,
 3691 15da 743C     		je	.L338	#,
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3692              		.loc 1 323 9 view .LVU1204
 3693              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3694              		.loc 1 323 20 is_stmt 0 view .LVU1205
 3695 15dc C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp314, quadmask.59_154, MEM[base: index_ptr_147, offset: 0B]
 3696              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3697              		.loc 1 324 20 view .LVU1206
 3698 15e0 C5FDEB58 		vpor	ymm3, ymm0, YMMWORD PTR 32[rax]	# tmp315, quadmask.59_154, MEM[base: index_ptr_147, offset: 3
 3698      20
 3699              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3700              		.loc 1 323 20 view .LVU1207
 3701 15e5 C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_147, offset: 0B], tmp314
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3702              		.loc 1 323 29 is_stmt 1 view .LVU1208
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3703              		.loc 1 324 9 view .LVU1209
 3704 15e9 4883E880 		sub	rax, -128	# _26,
 3705              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3706              		.loc 1 324 20 is_stmt 0 view .LVU1210
 3707 15ed C5FD7F58 		vmovdqa	YMMWORD PTR -96[rax], ymm3	# MEM[base: index_ptr_147, offset: 32B], tmp315
 3707      A0
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3708              		.loc 1 324 29 is_stmt 1 view .LVU1211
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3709              		.loc 1 325 9 view .LVU1212
 3710              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3711              		.loc 1 325 20 is_stmt 0 view .LVU1213
 3712 15f2 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR 128[r12]	# tmp316, quadmask.59_154, MEM[base: _19, offset: 0B]
 3712      A4248000 
 3712      0000
 3713 15fc C4C17D7F 		vmovdqa	YMMWORD PTR 128[r12], ymm4	# MEM[base: _19, offset: 0B], tmp316
 3713      A4248000 
 3713      0000
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3714              		.loc 1 325 29 is_stmt 1 view .LVU1214
GAS LISTING /tmp/ccfflXEb.s 			page 108


 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3715              		.loc 1 326 9 view .LVU1215
 3716              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3717              		.loc 1 326 20 is_stmt 0 view .LVU1216
 3718 1606 C5FDEB6A 		vpor	ymm5, ymm0, YMMWORD PTR 32[rdx]	# tmp317, quadmask.59_154, MEM[base: _19, offset: 32B]
 3718      20
 3719 160b C5FD7F6A 		vmovdqa	YMMWORD PTR 32[rdx], ymm5	# MEM[base: _19, offset: 32B], tmp317
 3719      20
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3720              		.loc 1 326 29 is_stmt 1 view .LVU1217
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3721              		.loc 1 322 11 view .LVU1218
 3722 1610 498D9424 		lea	rdx, 256[r12]	# ivtmp.263,
 3722      00010000 
 3723              	.L338:
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3724              		.loc 1 323 9 view .LVU1219
 3725              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3726              		.loc 1 323 20 is_stmt 0 view .LVU1220
 3727 1618 C5FDEB30 		vpor	ymm6, ymm0, YMMWORD PTR [rax]	# tmp318, quadmask.59_154, MEM[base: index_ptr_147, offset: 0B]
 3728              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3729              		.loc 1 324 20 view .LVU1221
 3730 161c C5FDEB78 		vpor	ymm7, ymm0, YMMWORD PTR 32[rax]	# tmp319, quadmask.59_154, MEM[base: index_ptr_147, offset: 3
 3730      20
 3731              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3732              		.loc 1 323 20 view .LVU1222
 3733 1621 C5FD7F30 		vmovdqa	YMMWORD PTR [rax], ymm6	# MEM[base: index_ptr_147, offset: 0B], tmp318
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3734              		.loc 1 323 29 is_stmt 1 view .LVU1223
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3735              		.loc 1 324 9 view .LVU1224
 3736 1625 4883EA80 		sub	rdx, -128	# ivtmp.263,
 3737              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3738              		.loc 1 324 20 is_stmt 0 view .LVU1225
 3739 1629 C5FD7F78 		vmovdqa	YMMWORD PTR 32[rax], ymm7	# MEM[base: index_ptr_147, offset: 32B], tmp319
 3739      20
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3740              		.loc 1 324 29 is_stmt 1 view .LVU1226
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3741              		.loc 1 325 9 view .LVU1227
 3742 162e 4883E880 		sub	rax, -128	# _26,
 3743              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3744              		.loc 1 325 20 is_stmt 0 view .LVU1228
 3745 1632 C57DEB42 		vpor	ymm8, ymm0, YMMWORD PTR -128[rdx]	# tmp320, quadmask.59_154, MEM[base: _19, offset: 0B]
 3745      80
 3746              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3747              		.loc 1 326 20 view .LVU1229
 3748 1637 C57DEB4A 		vpor	ymm9, ymm0, YMMWORD PTR -96[rdx]	# tmp321, quadmask.59_154, MEM[base: _19, offset: 32B]
 3748      A0
 3749              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 109


 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3750              		.loc 1 325 20 view .LVU1230
 3751 163c C57D7F42 		vmovdqa	YMMWORD PTR -128[rdx], ymm8	# MEM[base: _19, offset: 0B], tmp320
 3751      80
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3752              		.loc 1 325 29 is_stmt 1 view .LVU1231
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3753              		.loc 1 326 9 view .LVU1232
 3754              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3755              		.loc 1 326 20 is_stmt 0 view .LVU1233
 3756 1641 C57D7F4A 		vmovdqa	YMMWORD PTR -96[rdx], ymm9	# MEM[base: _19, offset: 32B], tmp321
 3756      A0
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3757              		.loc 1 326 29 is_stmt 1 view .LVU1234
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3758              		.loc 1 322 11 view .LVU1235
 3759              	.L337:
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3760              		.loc 1 323 9 view .LVU1236
 3761              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3762              		.loc 1 323 20 is_stmt 0 view .LVU1237
 3763 1646 C57DEB10 		vpor	ymm10, ymm0, YMMWORD PTR [rax]	# tmp322, quadmask.59_154, MEM[base: index_ptr_147, offset: 0B
 3764              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3765              		.loc 1 324 20 view .LVU1238
 3766 164a C57DEB58 		vpor	ymm11, ymm0, YMMWORD PTR 32[rax]	# tmp323, quadmask.59_154, MEM[base: index_ptr_147, offset: 
 3766      20
 3767              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3768              		.loc 1 323 20 view .LVU1239
 3769 164f C57D7F10 		vmovdqa	YMMWORD PTR [rax], ymm10	# MEM[base: index_ptr_147, offset: 0B], tmp322
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3770              		.loc 1 323 29 is_stmt 1 view .LVU1240
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3771              		.loc 1 324 9 view .LVU1241
 3772 1653 4883E880 		sub	rax, -128	# _26,
 3773              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3774              		.loc 1 324 20 is_stmt 0 view .LVU1242
 3775 1657 C57D7F58 		vmovdqa	YMMWORD PTR -96[rax], ymm11	# MEM[base: index_ptr_147, offset: 32B], tmp323
 3775      A0
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3776              		.loc 1 324 29 is_stmt 1 view .LVU1243
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3777              		.loc 1 325 9 view .LVU1244
 3778 165c 4883EA80 		sub	rdx, -128	# ivtmp.263,
 3779              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3780              		.loc 1 325 20 is_stmt 0 view .LVU1245
 3781 1660 C57DEB62 		vpor	ymm12, ymm0, YMMWORD PTR -128[rdx]	# tmp324, quadmask.59_154, MEM[base: _19, offset: 0B]
 3781      80
 3782              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3783              		.loc 1 326 20 view .LVU1246
 3784 1665 C57DEB6A 		vpor	ymm13, ymm0, YMMWORD PTR -96[rdx]	# tmp325, quadmask.59_154, MEM[base: _19, offset: 32B]
GAS LISTING /tmp/ccfflXEb.s 			page 110


 3784      A0
 3785              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3786              		.loc 1 325 20 view .LVU1247
 3787 166a C57D7F62 		vmovdqa	YMMWORD PTR -128[rdx], ymm12	# MEM[base: _19, offset: 0B], tmp324
 3787      80
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3788              		.loc 1 325 29 is_stmt 1 view .LVU1248
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3789              		.loc 1 326 9 view .LVU1249
 3790              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3791              		.loc 1 326 20 is_stmt 0 view .LVU1250
 3792 166f C57D7F6A 		vmovdqa	YMMWORD PTR -96[rdx], ymm13	# MEM[base: _19, offset: 32B], tmp325
 3792      A0
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3793              		.loc 1 326 29 is_stmt 1 view .LVU1251
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3794              		.loc 1 322 11 view .LVU1252
 3795 1674 4839D8   		cmp	rax, rbx	# _26, fast_loop_ptr
 3796 1677 0F83F300 		jnb	.L227	#,
 3796      0000
 3797              	.L228:
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3798              		.loc 1 323 9 view .LVU1253
 3799              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3800              		.loc 1 323 20 is_stmt 0 view .LVU1254
 3801 167d C57DEB30 		vpor	ymm14, ymm0, YMMWORD PTR [rax]	# tmp234, quadmask.59_154, MEM[base: index_ptr_147, offset: 0B
 3802              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3803              		.loc 1 324 20 view .LVU1255
 3804 1681 C57DEB78 		vpor	ymm15, ymm0, YMMWORD PTR 32[rax]	# tmp235, quadmask.59_154, MEM[base: index_ptr_147, offset: 
 3804      20
 3805              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3806              		.loc 1 323 20 view .LVU1256
 3807 1686 C57D7F30 		vmovdqa	YMMWORD PTR [rax], ymm14	# MEM[base: index_ptr_147, offset: 0B], tmp234
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3808              		.loc 1 323 29 is_stmt 1 view .LVU1257
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3809              		.loc 1 324 9 view .LVU1258
 3810 168a 48050002 		add	rax, 512	# _26,
 3810      0000
 3811              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3812              		.loc 1 324 20 is_stmt 0 view .LVU1259
 3813 1690 C57D7FB8 		vmovdqa	YMMWORD PTR -480[rax], ymm15	# MEM[base: index_ptr_147, offset: 32B], tmp235
 3813      20FEFFFF 
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3814              		.loc 1 324 29 is_stmt 1 view .LVU1260
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3815              		.loc 1 325 9 view .LVU1261
 3816 1698 4881C200 		add	rdx, 512	# ivtmp.263,
 3816      020000
 3817              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 111


 3818              		.loc 1 325 20 is_stmt 0 view .LVU1262
 3819 169f C5FDEB8A 		vpor	ymm1, ymm0, YMMWORD PTR -512[rdx]	# tmp236, quadmask.59_154, MEM[base: _19, offset: 0B]
 3819      00FEFFFF 
 3820              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3821              		.loc 1 326 20 view .LVU1263
 3822 16a7 C5FDEB9A 		vpor	ymm3, ymm0, YMMWORD PTR -480[rdx]	# tmp237, quadmask.59_154, MEM[base: _19, offset: 32B]
 3822      20FEFFFF 
 3823              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3824              		.loc 1 325 20 view .LVU1264
 3825 16af C5FD7F8A 		vmovdqa	YMMWORD PTR -512[rdx], ymm1	# MEM[base: _19, offset: 0B], tmp236
 3825      00FEFFFF 
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3826              		.loc 1 325 29 is_stmt 1 view .LVU1265
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3827              		.loc 1 326 9 view .LVU1266
 3828              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3829              		.loc 1 326 20 is_stmt 0 view .LVU1267
 3830 16b7 C5FD7F9A 		vmovdqa	YMMWORD PTR -480[rdx], ymm3	# MEM[base: _19, offset: 32B], tmp237
 3830      20FEFFFF 
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3831              		.loc 1 326 29 is_stmt 1 view .LVU1268
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3832              		.loc 1 322 11 view .LVU1269
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3833              		.loc 1 323 9 view .LVU1270
 3834              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3835              		.loc 1 323 20 is_stmt 0 view .LVU1271
 3836 16bf C5FDEBA0 		vpor	ymm4, ymm0, YMMWORD PTR -384[rax]	# tmp240, quadmask.59_154, MEM[base: index_ptr_147, offset:
 3836      80FEFFFF 
 3837              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3838              		.loc 1 324 20 view .LVU1272
 3839 16c7 C5FDEBA8 		vpor	ymm5, ymm0, YMMWORD PTR -352[rax]	# tmp241, quadmask.59_154, MEM[base: index_ptr_147, offset:
 3839      A0FEFFFF 
 3840              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3841              		.loc 1 323 20 view .LVU1273
 3842 16cf C5FD7FA0 		vmovdqa	YMMWORD PTR -384[rax], ymm4	# MEM[base: index_ptr_147, offset: 0B], tmp240
 3842      80FEFFFF 
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3843              		.loc 1 323 29 is_stmt 1 view .LVU1274
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3844              		.loc 1 324 9 view .LVU1275
 3845              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3846              		.loc 1 324 20 is_stmt 0 view .LVU1276
 3847 16d7 C5FD7FA8 		vmovdqa	YMMWORD PTR -352[rax], ymm5	# MEM[base: index_ptr_147, offset: 32B], tmp241
 3847      A0FEFFFF 
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3848              		.loc 1 324 29 is_stmt 1 view .LVU1277
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3849              		.loc 1 325 9 view .LVU1278
 3850              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 112


 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3851              		.loc 1 325 20 is_stmt 0 view .LVU1279
 3852 16df C5FDEBB2 		vpor	ymm6, ymm0, YMMWORD PTR -384[rdx]	# tmp242, quadmask.59_154, MEM[base: _19, offset: 0B]
 3852      80FEFFFF 
 3853              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3854              		.loc 1 326 20 view .LVU1280
 3855 16e7 C5FDEBBA 		vpor	ymm7, ymm0, YMMWORD PTR -352[rdx]	# tmp243, quadmask.59_154, MEM[base: _19, offset: 32B]
 3855      A0FEFFFF 
 3856              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3857              		.loc 1 325 20 view .LVU1281
 3858 16ef C5FD7FB2 		vmovdqa	YMMWORD PTR -384[rdx], ymm6	# MEM[base: _19, offset: 0B], tmp242
 3858      80FEFFFF 
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3859              		.loc 1 325 29 is_stmt 1 view .LVU1282
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3860              		.loc 1 326 9 view .LVU1283
 3861              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3862              		.loc 1 326 20 is_stmt 0 view .LVU1284
 3863 16f7 C5FD7FBA 		vmovdqa	YMMWORD PTR -352[rdx], ymm7	# MEM[base: _19, offset: 32B], tmp243
 3863      A0FEFFFF 
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3864              		.loc 1 326 29 is_stmt 1 view .LVU1285
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3865              		.loc 1 322 11 view .LVU1286
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3866              		.loc 1 323 9 view .LVU1287
 3867              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3868              		.loc 1 323 20 is_stmt 0 view .LVU1288
 3869 16ff C57DEB80 		vpor	ymm8, ymm0, YMMWORD PTR -256[rax]	# tmp246, quadmask.59_154, MEM[base: index_ptr_147, offset:
 3869      00FFFFFF 
 3870              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3871              		.loc 1 324 20 view .LVU1289
 3872 1707 C57DEB88 		vpor	ymm9, ymm0, YMMWORD PTR -224[rax]	# tmp247, quadmask.59_154, MEM[base: index_ptr_147, offset:
 3872      20FFFFFF 
 3873              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3874              		.loc 1 323 20 view .LVU1290
 3875 170f C57D7F80 		vmovdqa	YMMWORD PTR -256[rax], ymm8	# MEM[base: index_ptr_147, offset: 0B], tmp246
 3875      00FFFFFF 
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3876              		.loc 1 323 29 is_stmt 1 view .LVU1291
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3877              		.loc 1 324 9 view .LVU1292
 3878              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3879              		.loc 1 324 20 is_stmt 0 view .LVU1293
 3880 1717 C57D7F88 		vmovdqa	YMMWORD PTR -224[rax], ymm9	# MEM[base: index_ptr_147, offset: 32B], tmp247
 3880      20FFFFFF 
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3881              		.loc 1 324 29 is_stmt 1 view .LVU1294
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3882              		.loc 1 325 9 view .LVU1295
GAS LISTING /tmp/ccfflXEb.s 			page 113


 3883              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3884              		.loc 1 325 20 is_stmt 0 view .LVU1296
 3885 171f C57DEB92 		vpor	ymm10, ymm0, YMMWORD PTR -256[rdx]	# tmp248, quadmask.59_154, MEM[base: _19, offset: 0B]
 3885      00FFFFFF 
 3886              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3887              		.loc 1 326 20 view .LVU1297
 3888 1727 C57DEB9A 		vpor	ymm11, ymm0, YMMWORD PTR -224[rdx]	# tmp249, quadmask.59_154, MEM[base: _19, offset: 32B]
 3888      20FFFFFF 
 3889              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3890              		.loc 1 325 20 view .LVU1298
 3891 172f C57D7F92 		vmovdqa	YMMWORD PTR -256[rdx], ymm10	# MEM[base: _19, offset: 0B], tmp248
 3891      00FFFFFF 
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3892              		.loc 1 325 29 is_stmt 1 view .LVU1299
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3893              		.loc 1 326 9 view .LVU1300
 3894              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3895              		.loc 1 326 20 is_stmt 0 view .LVU1301
 3896 1737 C57D7F9A 		vmovdqa	YMMWORD PTR -224[rdx], ymm11	# MEM[base: _19, offset: 32B], tmp249
 3896      20FFFFFF 
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3897              		.loc 1 326 29 is_stmt 1 view .LVU1302
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3898              		.loc 1 322 11 view .LVU1303
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3899              		.loc 1 323 9 view .LVU1304
 3900              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3901              		.loc 1 323 20 is_stmt 0 view .LVU1305
 3902 173f C57DEB60 		vpor	ymm12, ymm0, YMMWORD PTR -128[rax]	# tmp252, quadmask.59_154, MEM[base: index_ptr_147, offset
 3902      80
 3903              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3904              		.loc 1 324 20 view .LVU1306
 3905 1744 C57DEB68 		vpor	ymm13, ymm0, YMMWORD PTR -96[rax]	# tmp253, quadmask.59_154, MEM[base: index_ptr_147, offset:
 3905      A0
 3906              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3907              		.loc 1 323 20 view .LVU1307
 3908 1749 C57D7F60 		vmovdqa	YMMWORD PTR -128[rax], ymm12	# MEM[base: index_ptr_147, offset: 0B], tmp252
 3908      80
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3909              		.loc 1 323 29 is_stmt 1 view .LVU1308
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3910              		.loc 1 324 9 view .LVU1309
 3911              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3912              		.loc 1 324 20 is_stmt 0 view .LVU1310
 3913 174e C57D7F68 		vmovdqa	YMMWORD PTR -96[rax], ymm13	# MEM[base: index_ptr_147, offset: 32B], tmp253
 3913      A0
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3914              		.loc 1 324 29 is_stmt 1 view .LVU1311
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 114


 3915              		.loc 1 325 9 view .LVU1312
 3916              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3917              		.loc 1 325 20 is_stmt 0 view .LVU1313
 3918 1753 C57DEB72 		vpor	ymm14, ymm0, YMMWORD PTR -128[rdx]	# tmp254, quadmask.59_154, MEM[base: _19, offset: 0B]
 3918      80
 3919              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3920              		.loc 1 326 20 view .LVU1314
 3921 1758 C57DEB7A 		vpor	ymm15, ymm0, YMMWORD PTR -96[rdx]	# tmp255, quadmask.59_154, MEM[base: _19, offset: 32B]
 3921      A0
 3922              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3923              		.loc 1 325 20 view .LVU1315
 3924 175d C57D7F72 		vmovdqa	YMMWORD PTR -128[rdx], ymm14	# MEM[base: _19, offset: 0B], tmp254
 3924      80
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3925              		.loc 1 325 29 is_stmt 1 view .LVU1316
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3926              		.loc 1 326 9 view .LVU1317
 3927              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3928              		.loc 1 326 20 is_stmt 0 view .LVU1318
 3929 1762 C57D7F7A 		vmovdqa	YMMWORD PTR -96[rdx], ymm15	# MEM[base: _19, offset: 32B], tmp255
 3929      A0
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 3930              		.loc 1 326 29 is_stmt 1 view .LVU1319
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3931              		.loc 1 322 11 view .LVU1320
 3932 1767 4839D8   		cmp	rax, rbx	# _26, fast_loop_ptr
 3933 176a 0F820DFF 		jb	.L228	#,
 3933      FFFF
 3934              	.L227:
 330:sieve_extend.c ****     while likely(index_ptr <= range_stop_ptr) {
 3935              		.loc 1 330 5 view .LVU1321
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3936              		.loc 1 331 5 view .LVU1322
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3937              		.loc 1 331 11 view .LVU1323
 3938 1770 4C39D0   		cmp	rax, r10	# _26, _165
 3939 1773 0F871E01 		ja	.L229	#,
 3939      0000
 3940 1779 4D89D7   		mov	r15, r10	# tmp219, _165
 3941              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 3942              		.loc 1 332 38 is_stmt 0 view .LVU1324
 3943 177c 488D4820 		lea	rcx, 32[rax]	# _26,
 3944 1780 4929C7   		sub	r15, rax	# tmp219, _26
 3945              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 3946              		.loc 1 332 20 view .LVU1325
 3947 1783 C5FDEB08 		vpor	ymm1, ymm0, YMMWORD PTR [rax]	# tmp215, quadmask.59_154, MEM[base: index_ptr_115, offset: 0B]
 3948 1787 49C1EF05 		shr	r15, 5	# tmp218,
 3949 178b C5FD7F08 		vmovdqa	YMMWORD PTR [rax], ymm1	# MEM[base: index_ptr_115, offset: 0B], tmp215
 3950 178f 4183E707 		and	r15d, 7	# tmp220,
 332:sieve_extend.c ****     }
 3951              		.loc 1 332 9 is_stmt 1 view .LVU1326
GAS LISTING /tmp/ccfflXEb.s 			page 115


 332:sieve_extend.c ****     }
 3952              		.loc 1 332 29 view .LVU1327
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3953              		.loc 1 331 11 view .LVU1328
 3954 1793 4C39D1   		cmp	rcx, r10	# _26, _165
 3955 1796 0F87FB00 		ja	.L229	#,
 3955      0000
 3956 179c 4D85FF   		test	r15, r15	# tmp220
 3957 179f 0F848300 		je	.L230	#,
 3957      0000
 3958 17a5 4983FF01 		cmp	r15, 1	# tmp220,
 3959 17a9 746B     		je	.L331	#,
 3960 17ab 4983FF02 		cmp	r15, 2	# tmp220,
 3961 17af 7458     		je	.L332	#,
 3962 17b1 4983FF03 		cmp	r15, 3	# tmp220,
 3963 17b5 7445     		je	.L333	#,
 3964 17b7 4983FF04 		cmp	r15, 4	# tmp220,
 3965 17bb 7432     		je	.L334	#,
 3966 17bd 4983FF05 		cmp	r15, 5	# tmp220,
 3967 17c1 741F     		je	.L335	#,
 3968 17c3 4983FF06 		cmp	r15, 6	# tmp220,
 3969 17c7 740C     		je	.L336	#,
 332:sieve_extend.c ****     }
 3970              		.loc 1 332 9 view .LVU1329
 3971              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 3972              		.loc 1 332 20 is_stmt 0 view .LVU1330
 3973 17c9 C5FDEB19 		vpor	ymm3, ymm0, YMMWORD PTR [rcx]	# tmp307, quadmask.59_154, MEM[base: index_ptr_115, offset: 0B]
 3974 17cd C5FD7F19 		vmovdqa	YMMWORD PTR [rcx], ymm3	# MEM[base: index_ptr_115, offset: 0B], tmp307
 332:sieve_extend.c ****     }
 3975              		.loc 1 332 29 is_stmt 1 view .LVU1331
 3976              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 3977              		.loc 1 332 38 is_stmt 0 view .LVU1332
 3978 17d1 488D4840 		lea	rcx, 64[rax]	# _26,
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3979              		.loc 1 331 11 is_stmt 1 view .LVU1333
 3980              	.L336:
 332:sieve_extend.c ****     }
 3981              		.loc 1 332 9 view .LVU1334
 3982              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 3983              		.loc 1 332 20 is_stmt 0 view .LVU1335
 3984 17d5 C5FDEB21 		vpor	ymm4, ymm0, YMMWORD PTR [rcx]	# tmp308, quadmask.59_154, MEM[base: index_ptr_115, offset: 0B]
 3985              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 3986              		.loc 1 332 38 view .LVU1336
 3987 17d9 4883C120 		add	rcx, 32	# _26,
 3988              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 3989              		.loc 1 332 20 view .LVU1337
 3990 17dd C5FD7F61 		vmovdqa	YMMWORD PTR -32[rcx], ymm4	# MEM[base: index_ptr_115, offset: 0B], tmp308
 3990      E0
 332:sieve_extend.c ****     }
 3991              		.loc 1 332 29 is_stmt 1 view .LVU1338
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 3992              		.loc 1 331 11 view .LVU1339
GAS LISTING /tmp/ccfflXEb.s 			page 116


 3993              	.L335:
 332:sieve_extend.c ****     }
 3994              		.loc 1 332 9 view .LVU1340
 3995              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 3996              		.loc 1 332 20 is_stmt 0 view .LVU1341
 3997 17e2 C5FDEB29 		vpor	ymm5, ymm0, YMMWORD PTR [rcx]	# tmp309, quadmask.59_154, MEM[base: index_ptr_115, offset: 0B]
 3998              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 3999              		.loc 1 332 38 view .LVU1342
 4000 17e6 4883C120 		add	rcx, 32	# _26,
 4001              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4002              		.loc 1 332 20 view .LVU1343
 4003 17ea C5FD7F69 		vmovdqa	YMMWORD PTR -32[rcx], ymm5	# MEM[base: index_ptr_115, offset: 0B], tmp309
 4003      E0
 332:sieve_extend.c ****     }
 4004              		.loc 1 332 29 is_stmt 1 view .LVU1344
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4005              		.loc 1 331 11 view .LVU1345
 4006              	.L334:
 332:sieve_extend.c ****     }
 4007              		.loc 1 332 9 view .LVU1346
 4008              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4009              		.loc 1 332 20 is_stmt 0 view .LVU1347
 4010 17ef C5FDEB31 		vpor	ymm6, ymm0, YMMWORD PTR [rcx]	# tmp310, quadmask.59_154, MEM[base: index_ptr_115, offset: 0B]
 4011              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4012              		.loc 1 332 38 view .LVU1348
 4013 17f3 4883C120 		add	rcx, 32	# _26,
 4014              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4015              		.loc 1 332 20 view .LVU1349
 4016 17f7 C5FD7F71 		vmovdqa	YMMWORD PTR -32[rcx], ymm6	# MEM[base: index_ptr_115, offset: 0B], tmp310
 4016      E0
 332:sieve_extend.c ****     }
 4017              		.loc 1 332 29 is_stmt 1 view .LVU1350
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4018              		.loc 1 331 11 view .LVU1351
 4019              	.L333:
 332:sieve_extend.c ****     }
 4020              		.loc 1 332 9 view .LVU1352
 4021              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4022              		.loc 1 332 20 is_stmt 0 view .LVU1353
 4023 17fc C5FDEB39 		vpor	ymm7, ymm0, YMMWORD PTR [rcx]	# tmp311, quadmask.59_154, MEM[base: index_ptr_115, offset: 0B]
 4024              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4025              		.loc 1 332 38 view .LVU1354
 4026 1800 4883C120 		add	rcx, 32	# _26,
 4027              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4028              		.loc 1 332 20 view .LVU1355
 4029 1804 C5FD7F79 		vmovdqa	YMMWORD PTR -32[rcx], ymm7	# MEM[base: index_ptr_115, offset: 0B], tmp311
 4029      E0
 332:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 117


 4030              		.loc 1 332 29 is_stmt 1 view .LVU1356
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4031              		.loc 1 331 11 view .LVU1357
 4032              	.L332:
 332:sieve_extend.c ****     }
 4033              		.loc 1 332 9 view .LVU1358
 4034              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4035              		.loc 1 332 20 is_stmt 0 view .LVU1359
 4036 1809 C57DEB01 		vpor	ymm8, ymm0, YMMWORD PTR [rcx]	# tmp312, quadmask.59_154, MEM[base: index_ptr_115, offset: 0B]
 4037              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4038              		.loc 1 332 38 view .LVU1360
 4039 180d 4883C120 		add	rcx, 32	# _26,
 4040              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4041              		.loc 1 332 20 view .LVU1361
 4042 1811 C57D7F41 		vmovdqa	YMMWORD PTR -32[rcx], ymm8	# MEM[base: index_ptr_115, offset: 0B], tmp312
 4042      E0
 332:sieve_extend.c ****     }
 4043              		.loc 1 332 29 is_stmt 1 view .LVU1362
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4044              		.loc 1 331 11 view .LVU1363
 4045              	.L331:
 332:sieve_extend.c ****     }
 4046              		.loc 1 332 9 view .LVU1364
 4047              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4048              		.loc 1 332 20 is_stmt 0 view .LVU1365
 4049 1816 C57DEB09 		vpor	ymm9, ymm0, YMMWORD PTR [rcx]	# tmp313, quadmask.59_154, MEM[base: index_ptr_115, offset: 0B]
 4050              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4051              		.loc 1 332 38 view .LVU1366
 4052 181a 4883C120 		add	rcx, 32	# _26,
 4053              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4054              		.loc 1 332 20 view .LVU1367
 4055 181e C57D7F49 		vmovdqa	YMMWORD PTR -32[rcx], ymm9	# MEM[base: index_ptr_115, offset: 0B], tmp313
 4055      E0
 332:sieve_extend.c ****     }
 4056              		.loc 1 332 29 is_stmt 1 view .LVU1368
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4057              		.loc 1 331 11 view .LVU1369
 4058 1823 4C39D1   		cmp	rcx, r10	# _26, _165
 4059 1826 776F     		ja	.L229	#,
 4060              	.L230:
 332:sieve_extend.c ****     }
 4061              		.loc 1 332 9 view .LVU1370
 4062              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4063              		.loc 1 332 20 is_stmt 0 view .LVU1371
 4064 1828 C57DEB11 		vpor	ymm10, ymm0, YMMWORD PTR [rcx]	# tmp257, quadmask.59_154, MEM[base: index_ptr_115, offset: 0B
 4065 182c C57DEB59 		vpor	ymm11, ymm0, YMMWORD PTR 32[rcx]	# tmp259, quadmask.59_154, MEM[base: index_ptr_115, offset: 
 4065      20
 4066 1831 C57DEB61 		vpor	ymm12, ymm0, YMMWORD PTR 64[rcx]	# tmp261, quadmask.59_154, MEM[base: index_ptr_115, offset: 
 4066      40
 4067 1836 C57DEB69 		vpor	ymm13, ymm0, YMMWORD PTR 96[rcx]	# tmp263, quadmask.59_154, MEM[base: index_ptr_115, offset: 
GAS LISTING /tmp/ccfflXEb.s 			page 118


 4067      60
 4068 183b C57DEBB1 		vpor	ymm14, ymm0, YMMWORD PTR 128[rcx]	# tmp265, quadmask.59_154, MEM[base: index_ptr_115, offset:
 4068      80000000 
 4069 1843 C57DEBB9 		vpor	ymm15, ymm0, YMMWORD PTR 160[rcx]	# tmp267, quadmask.59_154, MEM[base: index_ptr_115, offset:
 4069      A0000000 
 4070 184b C5FDEB89 		vpor	ymm1, ymm0, YMMWORD PTR 192[rcx]	# tmp269, quadmask.59_154, MEM[base: index_ptr_115, offset: 
 4070      C0000000 
 4071 1853 C5FDEB99 		vpor	ymm3, ymm0, YMMWORD PTR 224[rcx]	# tmp271, quadmask.59_154, MEM[base: index_ptr_115, offset: 
 4071      E0000000 
 4072 185b C57D7F11 		vmovdqa	YMMWORD PTR [rcx], ymm10	# MEM[base: index_ptr_115, offset: 0B], tmp257
 332:sieve_extend.c ****     }
 4073              		.loc 1 332 29 is_stmt 1 view .LVU1372
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4074              		.loc 1 331 11 view .LVU1373
 332:sieve_extend.c ****     }
 4075              		.loc 1 332 9 view .LVU1374
 4076              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4077              		.loc 1 332 38 is_stmt 0 view .LVU1375
 4078 185f 4881C100 		add	rcx, 256	# _26,
 4078      010000
 4079              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4080              		.loc 1 332 20 view .LVU1376
 4081 1866 C57D7F99 		vmovdqa	YMMWORD PTR -224[rcx], ymm11	# MEM[base: index_ptr_115, offset: 0B], tmp259
 4081      20FFFFFF 
 332:sieve_extend.c ****     }
 4082              		.loc 1 332 29 is_stmt 1 view .LVU1377
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4083              		.loc 1 331 11 view .LVU1378
 332:sieve_extend.c ****     }
 4084              		.loc 1 332 9 view .LVU1379
 4085              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4086              		.loc 1 332 20 is_stmt 0 view .LVU1380
 4087 186e C57D7FA1 		vmovdqa	YMMWORD PTR -192[rcx], ymm12	# MEM[base: index_ptr_115, offset: 0B], tmp261
 4087      40FFFFFF 
 332:sieve_extend.c ****     }
 4088              		.loc 1 332 29 is_stmt 1 view .LVU1381
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4089              		.loc 1 331 11 view .LVU1382
 332:sieve_extend.c ****     }
 4090              		.loc 1 332 9 view .LVU1383
 4091              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4092              		.loc 1 332 20 is_stmt 0 view .LVU1384
 4093 1876 C57D7FA9 		vmovdqa	YMMWORD PTR -160[rcx], ymm13	# MEM[base: index_ptr_115, offset: 0B], tmp263
 4093      60FFFFFF 
 332:sieve_extend.c ****     }
 4094              		.loc 1 332 29 is_stmt 1 view .LVU1385
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4095              		.loc 1 331 11 view .LVU1386
 332:sieve_extend.c ****     }
 4096              		.loc 1 332 9 view .LVU1387
 4097              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4098              		.loc 1 332 20 is_stmt 0 view .LVU1388
GAS LISTING /tmp/ccfflXEb.s 			page 119


 4099 187e C57D7F71 		vmovdqa	YMMWORD PTR -128[rcx], ymm14	# MEM[base: index_ptr_115, offset: 0B], tmp265
 4099      80
 332:sieve_extend.c ****     }
 4100              		.loc 1 332 29 is_stmt 1 view .LVU1389
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4101              		.loc 1 331 11 view .LVU1390
 332:sieve_extend.c ****     }
 4102              		.loc 1 332 9 view .LVU1391
 4103              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4104              		.loc 1 332 20 is_stmt 0 view .LVU1392
 4105 1883 C57D7F79 		vmovdqa	YMMWORD PTR -96[rcx], ymm15	# MEM[base: index_ptr_115, offset: 0B], tmp267
 4105      A0
 332:sieve_extend.c ****     }
 4106              		.loc 1 332 29 is_stmt 1 view .LVU1393
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4107              		.loc 1 331 11 view .LVU1394
 332:sieve_extend.c ****     }
 4108              		.loc 1 332 9 view .LVU1395
 4109              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4110              		.loc 1 332 20 is_stmt 0 view .LVU1396
 4111 1888 C5FD7F49 		vmovdqa	YMMWORD PTR -64[rcx], ymm1	# MEM[base: index_ptr_115, offset: 0B], tmp269
 4111      C0
 332:sieve_extend.c ****     }
 4112              		.loc 1 332 29 is_stmt 1 view .LVU1397
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4113              		.loc 1 331 11 view .LVU1398
 332:sieve_extend.c ****     }
 4114              		.loc 1 332 9 view .LVU1399
 4115              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4116              		.loc 1 332 20 is_stmt 0 view .LVU1400
 4117 188d C5FD7F59 		vmovdqa	YMMWORD PTR -32[rcx], ymm3	# MEM[base: index_ptr_115, offset: 0B], tmp271
 4117      E0
 332:sieve_extend.c ****     }
 4118              		.loc 1 332 29 is_stmt 1 view .LVU1401
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4119              		.loc 1 331 11 view .LVU1402
 4120 1892 4C39D1   		cmp	rcx, r10	# _26, _165
 4121 1895 7691     		jbe	.L230	#,
 4122              	.L229:
 4123              	.LVL154:
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4124              		.loc 1 331 11 is_stmt 0 view .LVU1403
 4125              	.LBE330:
 4126              	.LBE333:
 4127              	.LBE326:
 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 4128              		.loc 1 362 41 is_stmt 1 view .LVU1404
 4129              	# sieve_extend.c:362:     for (counter_t index = range_start; index < range_stop_unique;) {
 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 4130              		.loc 1 362 5 is_stmt 0 view .LVU1405
 4131 1897 4939F3   		cmp	r11, rsi	# range_stop_unique, range_start
 4132 189a 0F87A0FB 		ja	.L231	#,
 4132      FFFF
 4133              	.L380:
GAS LISTING /tmp/ccfflXEb.s 			page 120


 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 4134              		.loc 1 362 5 view .LVU1406
 4135 18a0 C5F877   		vzeroupper
 4136              	.LVL155:
 4137              	.L214:
 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 4138              		.loc 1 362 5 view .LVU1407
 4139              	.LBE325:
 4140              	# sieve_extend.c:382: }
 382:sieve_extend.c **** 
 4141              		.loc 1 382 1 view .LVU1408
 4142 18a3 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp426, D.6771
 4142      38
 4143 18a8 64483304 		xor	rax, QWORD PTR fs:40	# tmp426, MEM[(<address-space-1> long unsigned int *)40B]
 4143      25280000 
 4143      00
 4144 18b1 0F85DB03 		jne	.L382	#,
 4144      0000
 4145 18b7 488D65D8 		lea	rsp, -40[rbp]	#,
 4146 18bb 5B       		pop	rbx	#
 4147 18bc 415C     		pop	r12	#
 4148 18be 415D     		pop	r13	#
 4149 18c0 415E     		pop	r14	#
 4150 18c2 415F     		pop	r15	#
 4151 18c4 5D       		pop	rbp	#
 4152              		.cfi_remember_state
 4153              		.cfi_def_cfa 7, 8
 4154 18c5 C3       		ret	
 4155              	.LVL156:
 4156              	.L381:
 4157              		.cfi_restore_state
 382:sieve_extend.c **** 
 4158              		.loc 1 382 1 view .LVU1409
 4159 18c6 4C39C9   		cmp	rcx, r9	# range_stop_vector, _70
 4160 18c9 4889D3   		mov	rbx, rdx	# _3, step
 4161 18cc 4989D5   		mov	r13, rdx	# _162, step
 4162              	.LBB336:
 4163              	.LBB335:
 4164              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4165              		.loc 1 372 31 view .LVU1410
 4166 18cf 41BC0100 		mov	r12d, 1	# tmp195,
 4166      0000
 4167              	# sieve_extend.c:367:         register bitvector_t quadmask = { };
 367:sieve_extend.c **** 
 4168              		.loc 1 367 30 view .LVU1411
 4169 18d5 C5E9EFD2 		vpxor	xmm2, xmm2, xmm2	# tmp192
 4170 18d9 480F46C7 		cmovbe	rax, rdi	# bitstorage_word,, tmp190
 4171 18dd 48C1E307 		sal	rbx, 7	# _3,
 4172 18e1 49C1E506 		sal	r13, 6	# _162,
 4173 18e5 4989C1   		mov	r9, rax	# fast_loop_ptr, tmp190
 4174 18e8 0F1F8400 		.p2align 4
 4174      00000000 
 4175              		.p2align 3
 4176              	.L225:
 363:sieve_extend.c ****          const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD)
 4177              		.loc 1 363 9 is_stmt 1 view .LVU1412
GAS LISTING /tmp/ccfflXEb.s 			page 121


 4178              	# sieve_extend.c:363:         const counter_t current_vector =  vectorindex(index);
 363:sieve_extend.c ****          const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD)
 4179              		.loc 1 363 25 is_stmt 0 view .LVU1413
 4180 18f0 4989F6   		mov	r14, rsi	# current_vector, range_start
 4181              	# sieve_extend.c:365:         register counter_t word = wordindex(index) - current_vector_start_wor
 365:sieve_extend.c **** 
 4182              		.loc 1 365 35 view .LVU1414
 4183 18f3 4889F0   		mov	rax, rsi	# tmp191, range_start
 4184              	# sieve_extend.c:363:         const counter_t current_vector =  vectorindex(index);
 363:sieve_extend.c ****          const counter_t current_vector_start_word =  current_vector << (SHIFT_VECTOR - SHIFT_WORD)
 4185              		.loc 1 363 25 view .LVU1415
 4186 18f6 49C1EE08 		shr	r14, 8	# current_vector,
 4187              	.LVL157:
 364:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4188              		.loc 1 364 10 is_stmt 1 view .LVU1416
 4189              	# sieve_extend.c:365:         register counter_t word = wordindex(index) - current_vector_start_wor
 365:sieve_extend.c **** 
 4190              		.loc 1 365 35 is_stmt 0 view .LVU1417
 4191 18fa 48C1E806 		shr	rax, 6	# tmp191,
 4192              	# sieve_extend.c:364:          const counter_t current_vector_start_word =  current_vector << (SHIF
 364:sieve_extend.c ****         register counter_t word = wordindex(index) - current_vector_start_word;
 4193              		.loc 1 364 26 view .LVU1418
 4194 18fe 4A8D0CB5 		lea	rcx, 0[0+r14*4]	# current_vector_start_word,
 4194      00000000 
 4195              	.LVL158:
 365:sieve_extend.c **** 
 4196              		.loc 1 365 9 is_stmt 1 view .LVU1419
 4197              	# sieve_extend.c:367:         register bitvector_t quadmask = { };
 367:sieve_extend.c **** 
 4198              		.loc 1 367 30 is_stmt 0 view .LVU1420
 4199 1906 C5FD7F14 		vmovdqa	YMMWORD PTR [rsp], ymm2	# quadmask, tmp192
 4199      24
 4200              	# sieve_extend.c:365:         register counter_t word = wordindex(index) - current_vector_start_wor
 365:sieve_extend.c **** 
 4201              		.loc 1 365 28 view .LVU1421
 4202 190b 4829C8   		sub	rax, rcx	# word, current_vector_start_word
 4203              	.LVL159:
 367:sieve_extend.c **** 
 4204              		.loc 1 367 9 is_stmt 1 view .LVU1422
 4205              	.L221:
 372:sieve_extend.c ****             index += step;
 4206              		.loc 1 372 13 discriminator 1 view .LVU1423
 4207              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4208              		.loc 1 372 31 is_stmt 0 discriminator 1 view .LVU1424
 4209 190e C442C9F7 		shlx	r15, r12, rsi	# tmp194, tmp195, range_start
 4209      FC
 4210              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4211              		.loc 1 373 19 discriminator 1 view .LVU1425
 4212 1913 4801D6   		add	rsi, rdx	# range_start, step
 4213              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4214              		.loc 1 372 28 discriminator 1 view .LVU1426
 4215 1916 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp194
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4216              		.loc 1 373 13 is_stmt 1 discriminator 1 view .LVU1427
GAS LISTING /tmp/ccfflXEb.s 			page 122


 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4217              		.loc 1 374 13 discriminator 1 view .LVU1428
 4218              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4219              		.loc 1 374 20 is_stmt 0 discriminator 1 view .LVU1429
 4220 191a 4889F0   		mov	rax, rsi	# tmp196, range_start
 4221              	.LVL160:
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4222              		.loc 1 374 20 discriminator 1 view .LVU1430
 4223 191d 48C1E806 		shr	rax, 6	# tmp196,
 4224              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4225              		.loc 1 374 18 discriminator 1 view .LVU1431
 4226 1921 4829C8   		sub	rax, rcx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 4227              		.loc 1 375 17 is_stmt 1 discriminator 1 view .LVU1432
 4228              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 4229              		.loc 1 375 9 is_stmt 0 discriminator 1 view .LVU1433
 4230 1924 4883F803 		cmp	rax, 3	# word,
 4231 1928 0F87D200 		ja	.L376	#,
 4231      0000
 372:sieve_extend.c ****             index += step;
 4232              		.loc 1 372 13 is_stmt 1 view .LVU1434
 4233              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4234              		.loc 1 372 31 is_stmt 0 view .LVU1435
 4235 192e C442C9F7 		shlx	r15, r12, rsi	# tmp373, tmp195, range_start
 4235      FC
 4236              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4237              		.loc 1 373 19 view .LVU1436
 4238 1933 4801D6   		add	rsi, rdx	# range_start, step
 4239              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4240              		.loc 1 372 28 view .LVU1437
 4241 1936 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp373
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4242              		.loc 1 373 13 is_stmt 1 view .LVU1438
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4243              		.loc 1 374 13 view .LVU1439
 4244              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4245              		.loc 1 374 20 is_stmt 0 view .LVU1440
 4246 193a 4889F0   		mov	rax, rsi	# tmp374, range_start
 4247 193d 48C1E806 		shr	rax, 6	# tmp374,
 4248              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4249              		.loc 1 374 18 view .LVU1441
 4250 1941 4829C8   		sub	rax, rcx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 4251              		.loc 1 375 17 is_stmt 1 view .LVU1442
 4252              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 4253              		.loc 1 375 9 is_stmt 0 view .LVU1443
 4254 1944 4883F803 		cmp	rax, 3	# word,
 4255 1948 0F87B200 		ja	.L376	#,
GAS LISTING /tmp/ccfflXEb.s 			page 123


 4255      0000
 372:sieve_extend.c ****             index += step;
 4256              		.loc 1 372 13 is_stmt 1 view .LVU1444
 4257              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4258              		.loc 1 372 31 is_stmt 0 view .LVU1445
 4259 194e C442C9F7 		shlx	r15, r12, rsi	# tmp376, tmp195, range_start
 4259      FC
 4260              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4261              		.loc 1 373 19 view .LVU1446
 4262 1953 4801D6   		add	rsi, rdx	# range_start, step
 4263              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4264              		.loc 1 372 28 view .LVU1447
 4265 1956 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp376
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4266              		.loc 1 373 13 is_stmt 1 view .LVU1448
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4267              		.loc 1 374 13 view .LVU1449
 4268              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4269              		.loc 1 374 20 is_stmt 0 view .LVU1450
 4270 195a 4889F0   		mov	rax, rsi	# tmp377, range_start
 4271 195d 48C1E806 		shr	rax, 6	# tmp377,
 4272              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4273              		.loc 1 374 18 view .LVU1451
 4274 1961 4829C8   		sub	rax, rcx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 4275              		.loc 1 375 17 is_stmt 1 view .LVU1452
 4276              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 4277              		.loc 1 375 9 is_stmt 0 view .LVU1453
 4278 1964 4883F803 		cmp	rax, 3	# word,
 4279 1968 0F879200 		ja	.L376	#,
 4279      0000
 372:sieve_extend.c ****             index += step;
 4280              		.loc 1 372 13 is_stmt 1 view .LVU1454
 4281              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4282              		.loc 1 372 31 is_stmt 0 view .LVU1455
 4283 196e C442C9F7 		shlx	r15, r12, rsi	# tmp379, tmp195, range_start
 4283      FC
 4284              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4285              		.loc 1 373 19 view .LVU1456
 4286 1973 4801D6   		add	rsi, rdx	# range_start, step
 4287              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4288              		.loc 1 372 28 view .LVU1457
 4289 1976 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp379
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4290              		.loc 1 373 13 is_stmt 1 view .LVU1458
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4291              		.loc 1 374 13 view .LVU1459
 4292              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
GAS LISTING /tmp/ccfflXEb.s 			page 124


 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4293              		.loc 1 374 20 is_stmt 0 view .LVU1460
 4294 197a 4889F0   		mov	rax, rsi	# tmp380, range_start
 4295 197d 48C1E806 		shr	rax, 6	# tmp380,
 4296              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4297              		.loc 1 374 18 view .LVU1461
 4298 1981 4829C8   		sub	rax, rcx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 4299              		.loc 1 375 17 is_stmt 1 view .LVU1462
 4300              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 4301              		.loc 1 375 9 is_stmt 0 view .LVU1463
 4302 1984 4883F803 		cmp	rax, 3	# word,
 4303 1988 7776     		ja	.L376	#,
 372:sieve_extend.c ****             index += step;
 4304              		.loc 1 372 13 is_stmt 1 view .LVU1464
 4305              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4306              		.loc 1 372 31 is_stmt 0 view .LVU1465
 4307 198a C442C9F7 		shlx	r15, r12, rsi	# tmp382, tmp195, range_start
 4307      FC
 4308              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4309              		.loc 1 373 19 view .LVU1466
 4310 198f 4801D6   		add	rsi, rdx	# range_start, step
 4311              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4312              		.loc 1 372 28 view .LVU1467
 4313 1992 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp382
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4314              		.loc 1 373 13 is_stmt 1 view .LVU1468
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4315              		.loc 1 374 13 view .LVU1469
 4316              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4317              		.loc 1 374 20 is_stmt 0 view .LVU1470
 4318 1996 4889F0   		mov	rax, rsi	# tmp383, range_start
 4319 1999 48C1E806 		shr	rax, 6	# tmp383,
 4320              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4321              		.loc 1 374 18 view .LVU1471
 4322 199d 4829C8   		sub	rax, rcx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 4323              		.loc 1 375 17 is_stmt 1 view .LVU1472
 4324              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 4325              		.loc 1 375 9 is_stmt 0 view .LVU1473
 4326 19a0 4883F803 		cmp	rax, 3	# word,
 4327 19a4 775A     		ja	.L376	#,
 372:sieve_extend.c ****             index += step;
 4328              		.loc 1 372 13 is_stmt 1 view .LVU1474
 4329              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4330              		.loc 1 372 31 is_stmt 0 view .LVU1475
 4331 19a6 C442C9F7 		shlx	r15, r12, rsi	# tmp385, tmp195, range_start
 4331      FC
GAS LISTING /tmp/ccfflXEb.s 			page 125


 4332              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4333              		.loc 1 373 19 view .LVU1476
 4334 19ab 4801D6   		add	rsi, rdx	# range_start, step
 4335              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4336              		.loc 1 372 28 view .LVU1477
 4337 19ae 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp385
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4338              		.loc 1 373 13 is_stmt 1 view .LVU1478
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4339              		.loc 1 374 13 view .LVU1479
 4340              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4341              		.loc 1 374 20 is_stmt 0 view .LVU1480
 4342 19b2 4889F0   		mov	rax, rsi	# tmp386, range_start
 4343 19b5 48C1E806 		shr	rax, 6	# tmp386,
 4344              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4345              		.loc 1 374 18 view .LVU1481
 4346 19b9 4829C8   		sub	rax, rcx	# word, current_vector_start_word
 375:sieve_extend.c **** 
 4347              		.loc 1 375 17 is_stmt 1 view .LVU1482
 4348              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 4349              		.loc 1 375 9 is_stmt 0 view .LVU1483
 4350 19bc 4883F803 		cmp	rax, 3	# word,
 4351 19c0 773E     		ja	.L376	#,
 372:sieve_extend.c ****             index += step;
 4352              		.loc 1 372 13 is_stmt 1 view .LVU1484
 4353              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4354              		.loc 1 372 31 is_stmt 0 view .LVU1485
 4355 19c2 C442C9F7 		shlx	r15, r12, rsi	# tmp388, tmp195, range_start
 4355      FC
 4356              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4357              		.loc 1 373 19 view .LVU1486
 4358 19c7 4801D6   		add	rsi, rdx	# range_start, step
 4359              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4360              		.loc 1 372 28 view .LVU1487
 4361 19ca 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp388
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4362              		.loc 1 373 13 is_stmt 1 view .LVU1488
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4363              		.loc 1 374 13 view .LVU1489
 4364              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4365              		.loc 1 374 20 is_stmt 0 view .LVU1490
 4366 19ce 4889F0   		mov	rax, rsi	# tmp389, range_start
 4367 19d1 48C1E806 		shr	rax, 6	# tmp389,
 4368              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4369              		.loc 1 374 18 view .LVU1491
 4370 19d5 4829C8   		sub	rax, rcx	# word, current_vector_start_word
 375:sieve_extend.c **** 
GAS LISTING /tmp/ccfflXEb.s 			page 126


 4371              		.loc 1 375 17 is_stmt 1 view .LVU1492
 4372              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 4373              		.loc 1 375 9 is_stmt 0 view .LVU1493
 4374 19d8 4883F803 		cmp	rax, 3	# word,
 4375 19dc 7722     		ja	.L376	#,
 372:sieve_extend.c ****             index += step;
 4376              		.loc 1 372 13 is_stmt 1 view .LVU1494
 4377              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4378              		.loc 1 372 31 is_stmt 0 view .LVU1495
 4379 19de C442C9F7 		shlx	r15, r12, rsi	# tmp391, tmp195, range_start
 4379      FC
 4380              	# sieve_extend.c:373:             index += step;
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4381              		.loc 1 373 19 view .LVU1496
 4382 19e3 4801D6   		add	rsi, rdx	# range_start, step
 4383              	# sieve_extend.c:372:             quadmask[word] |= markmask(index);
 372:sieve_extend.c ****             index += step;
 4384              		.loc 1 372 28 view .LVU1497
 4385 19e6 4C093CC4 		or	QWORD PTR [rsp+rax*8], r15	# quadmask, tmp391
 373:sieve_extend.c ****             word = wordindex(index) - current_vector_start_word;
 4386              		.loc 1 373 13 is_stmt 1 view .LVU1498
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4387              		.loc 1 374 13 view .LVU1499
 4388              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4389              		.loc 1 374 20 is_stmt 0 view .LVU1500
 4390 19ea 4889F0   		mov	rax, rsi	# tmp392, range_start
 4391 19ed 48C1E806 		shr	rax, 6	# tmp392,
 4392              	.LVL161:
 4393              	# sieve_extend.c:374:             word = wordindex(index) - current_vector_start_word;
 374:sieve_extend.c ****         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 4394              		.loc 1 374 18 view .LVU1501
 4395 19f1 4829C8   		sub	rax, rcx	# word, current_vector_start_word
 4396              	.LVL162:
 375:sieve_extend.c **** 
 4397              		.loc 1 375 17 is_stmt 1 view .LVU1502
 4398              	# sieve_extend.c:375:         } while (word < (VECTOR_ELEMENTS));// && index <= range_stop_unique);
 375:sieve_extend.c **** 
 4399              		.loc 1 375 9 is_stmt 0 view .LVU1503
 4400 19f4 4883F803 		cmp	rax, 3	# word,
 4401 19f8 0F8610FF 		jbe	.L221	#,
 4401      FFFF
 4402              	.LVL163:
 4403 19fe 6690     		.p2align 4
 4404              		.p2align 3
 4405              	.L376:
 379:sieve_extend.c ****         applyMask_vector(bitstorage_vector, step, range_stop, quadmask, current_vector);
 4406              		.loc 1 379 9 is_stmt 1 view .LVU1504
 380:sieve_extend.c ****     }
 4407              		.loc 1 380 9 view .LVU1505
 4408 1a00 C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsp]	# quadmask.59_36, quadmask
 4408      24
 4409              	.LVL164:
 4410              	.LBB334:
 315:sieve_extend.c ****     const counter_t range_stop_vector = vectorindex(range_stop);
GAS LISTING /tmp/ccfflXEb.s 			page 127


 4411              		.loc 1 315 20 view .LVU1506
 4412              	.LBB331:
 316:sieve_extend.c ****     register bitvector_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_v
 4413              		.loc 1 316 5 view .LVU1507
 317:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 4414              		.loc 1 317 5 view .LVU1508
 4415              	# sieve_extend.c:317:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 317:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 4416              		.loc 1 317 92 is_stmt 0 view .LVU1509
 4417 1a05 4C89F1   		mov	rcx, r14	# current_vector, current_vector
 4418              	.LVL165:
 317:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 4419              		.loc 1 317 92 view .LVU1510
 4420 1a08 48C1E105 		sal	rcx, 5	# current_vector,
 4421              	# sieve_extend.c:317:     register bitvector_t* __restrict index_ptr      =  __builtin_assume_align
 317:sieve_extend.c ****     register bitvector_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range
 4422              		.loc 1 317 81 view .LVU1511
 4423 1a0c 4801F9   		add	rcx, rdi	# index_ptr, bitstorage_word
 4424              	.LVL166:
 318:sieve_extend.c ****     
 4425              		.loc 1 318 5 is_stmt 1 view .LVU1512
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4426              		.loc 1 322 11 view .LVU1513
 4427 1a0f 4C39C9   		cmp	rcx, r9	# index_ptr, fast_loop_ptr
 4428 1a12 0F83E800 		jnb	.L379	#,
 4428      0000
 4429 1a18 4E8D3429 		lea	r14, [rcx+r13]	# ivtmp.288,
 4430              	.LVL167:
 4431              	.L223:
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4432              		.loc 1 323 9 view .LVU1514
 4433              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4434              		.loc 1 323 20 is_stmt 0 view .LVU1515
 4435 1a1c C5FDEB09 		vpor	ymm1, ymm0, YMMWORD PTR [rcx]	# tmp198, quadmask.59_36, MEM[base: index_ptr_124, offset: 0B]
 4436 1a20 C5FD7F09 		vmovdqa	YMMWORD PTR [rcx], ymm1	# MEM[base: index_ptr_124, offset: 0B], tmp198
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4437              		.loc 1 323 29 is_stmt 1 view .LVU1516
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4438              		.loc 1 324 9 view .LVU1517
 4439              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4440              		.loc 1 324 20 is_stmt 0 view .LVU1518
 4441 1a24 C4A17DEB 		vpor	ymm3, ymm0, YMMWORD PTR [rcx+r8]	# tmp199, quadmask.59_36, MEM[base: index_ptr_124, index: _7
 4441      1C01
 4442 1a2a C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r8], ymm3	# MEM[base: index_ptr_124, index: _79, offset: 0B], tmp199
 4442      1C01
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4443              		.loc 1 324 29 is_stmt 1 view .LVU1519
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4444              		.loc 1 325 9 view .LVU1520
 4445 1a30 4801D9   		add	rcx, rbx	# index_ptr, _3
 4446              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4447              		.loc 1 325 20 is_stmt 0 view .LVU1521
 4448 1a33 C4C17DEB 		vpor	ymm4, ymm0, YMMWORD PTR [r14]	# tmp200, quadmask.59_36, MEM[base: _94, offset: 0B]
 4448      26
GAS LISTING /tmp/ccfflXEb.s 			page 128


 4449 1a38 C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm4	# MEM[base: _94, offset: 0B], tmp200
 4449      26
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4450              		.loc 1 325 29 is_stmt 1 view .LVU1522
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4451              		.loc 1 326 9 view .LVU1523
 4452              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4453              		.loc 1 326 20 is_stmt 0 view .LVU1524
 4454 1a3d C4817DEB 		vpor	ymm5, ymm0, YMMWORD PTR [r14+r8]	# tmp201, quadmask.59_36, MEM[base: _94, index: _79, offset:
 4454      2C06
 4455 1a43 C4817D7F 		vmovdqa	YMMWORD PTR [r14+r8], ymm5	# MEM[base: _94, index: _79, offset: 0B], tmp201
 4455      2C06
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4456              		.loc 1 326 29 is_stmt 1 view .LVU1525
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4457              		.loc 1 322 11 view .LVU1526
 4458 1a49 4901DE   		add	r14, rbx	# ivtmp.288, _3
 4459 1a4c 4C39C9   		cmp	rcx, r9	# index_ptr, fast_loop_ptr
 4460 1a4f 0F83AB00 		jnb	.L379	#,
 4460      0000
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4461              		.loc 1 323 9 view .LVU1527
 4462              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4463              		.loc 1 323 20 is_stmt 0 view .LVU1528
 4464 1a55 C5FDEB31 		vpor	ymm6, ymm0, YMMWORD PTR [rcx]	# tmp359, quadmask.59_36, MEM[base: index_ptr_124, offset: 0B]
 4465 1a59 C5FD7F31 		vmovdqa	YMMWORD PTR [rcx], ymm6	# MEM[base: index_ptr_124, offset: 0B], tmp359
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4466              		.loc 1 323 29 is_stmt 1 view .LVU1529
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4467              		.loc 1 324 9 view .LVU1530
 4468              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4469              		.loc 1 324 20 is_stmt 0 view .LVU1531
 4470 1a5d C4A17DEB 		vpor	ymm7, ymm0, YMMWORD PTR [rcx+r8]	# tmp360, quadmask.59_36, MEM[base: index_ptr_124, index: _7
 4470      3C01
 4471 1a63 C4A17D7F 		vmovdqa	YMMWORD PTR [rcx+r8], ymm7	# MEM[base: index_ptr_124, index: _79, offset: 0B], tmp360
 4471      3C01
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4472              		.loc 1 324 29 is_stmt 1 view .LVU1532
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4473              		.loc 1 325 9 view .LVU1533
 4474 1a69 4801D9   		add	rcx, rbx	# index_ptr, _3
 4475              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4476              		.loc 1 325 20 is_stmt 0 view .LVU1534
 4477 1a6c C4417DEB 		vpor	ymm8, ymm0, YMMWORD PTR [r14]	# tmp361, quadmask.59_36, MEM[base: _94, offset: 0B]
 4477      06
 4478 1a71 C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm8	# MEM[base: _94, offset: 0B], tmp361
 4478      06
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4479              		.loc 1 325 29 is_stmt 1 view .LVU1535
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4480              		.loc 1 326 9 view .LVU1536
 4481              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 129


 4482              		.loc 1 326 20 is_stmt 0 view .LVU1537
 4483 1a76 C4017DEB 		vpor	ymm9, ymm0, YMMWORD PTR [r14+r8]	# tmp362, quadmask.59_36, MEM[base: _94, index: _79, offset:
 4483      0C06
 4484 1a7c C4017D7F 		vmovdqa	YMMWORD PTR [r14+r8], ymm9	# MEM[base: _94, index: _79, offset: 0B], tmp362
 4484      0C06
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4485              		.loc 1 326 29 is_stmt 1 view .LVU1538
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4486              		.loc 1 322 11 view .LVU1539
 4487 1a82 4901DE   		add	r14, rbx	# ivtmp.288, _3
 4488 1a85 4C39C9   		cmp	rcx, r9	# index_ptr, fast_loop_ptr
 4489 1a88 7376     		jnb	.L379	#,
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4490              		.loc 1 323 9 view .LVU1540
 4491              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4492              		.loc 1 323 20 is_stmt 0 view .LVU1541
 4493 1a8a C57DEB11 		vpor	ymm10, ymm0, YMMWORD PTR [rcx]	# tmp364, quadmask.59_36, MEM[base: index_ptr_124, offset: 0B]
 4494 1a8e C57D7F11 		vmovdqa	YMMWORD PTR [rcx], ymm10	# MEM[base: index_ptr_124, offset: 0B], tmp364
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4495              		.loc 1 323 29 is_stmt 1 view .LVU1542
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4496              		.loc 1 324 9 view .LVU1543
 4497              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4498              		.loc 1 324 20 is_stmt 0 view .LVU1544
 4499 1a92 C4217DEB 		vpor	ymm11, ymm0, YMMWORD PTR [rcx+r8]	# tmp365, quadmask.59_36, MEM[base: index_ptr_124, index: _
 4499      1C01
 4500 1a98 C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r8], ymm11	# MEM[base: index_ptr_124, index: _79, offset: 0B], tmp365
 4500      1C01
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4501              		.loc 1 324 29 is_stmt 1 view .LVU1545
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4502              		.loc 1 325 9 view .LVU1546
 4503 1a9e 4801D9   		add	rcx, rbx	# index_ptr, _3
 4504              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4505              		.loc 1 325 20 is_stmt 0 view .LVU1547
 4506 1aa1 C4417DEB 		vpor	ymm12, ymm0, YMMWORD PTR [r14]	# tmp366, quadmask.59_36, MEM[base: _94, offset: 0B]
 4506      26
 4507 1aa6 C4417D7F 		vmovdqa	YMMWORD PTR [r14], ymm12	# MEM[base: _94, offset: 0B], tmp366
 4507      26
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4508              		.loc 1 325 29 is_stmt 1 view .LVU1548
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4509              		.loc 1 326 9 view .LVU1549
 4510              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4511              		.loc 1 326 20 is_stmt 0 view .LVU1550
 4512 1aab C4017DEB 		vpor	ymm13, ymm0, YMMWORD PTR [r14+r8]	# tmp367, quadmask.59_36, MEM[base: _94, index: _79, offset
 4512      2C06
 4513 1ab1 C4017D7F 		vmovdqa	YMMWORD PTR [r14+r8], ymm13	# MEM[base: _94, index: _79, offset: 0B], tmp367
 4513      2C06
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4514              		.loc 1 326 29 is_stmt 1 view .LVU1551
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4515              		.loc 1 322 11 view .LVU1552
GAS LISTING /tmp/ccfflXEb.s 			page 130


 4516 1ab7 4901DE   		add	r14, rbx	# ivtmp.288, _3
 4517 1aba 4C39C9   		cmp	rcx, r9	# index_ptr, fast_loop_ptr
 4518 1abd 7341     		jnb	.L379	#,
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4519              		.loc 1 323 9 view .LVU1553
 4520              	# sieve_extend.c:323:         *index_ptr |= mask; index_ptr+=step;
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4521              		.loc 1 323 20 is_stmt 0 view .LVU1554
 4522 1abf C57DEB31 		vpor	ymm14, ymm0, YMMWORD PTR [rcx]	# tmp369, quadmask.59_36, MEM[base: index_ptr_124, offset: 0B]
 4523 1ac3 C57D7F31 		vmovdqa	YMMWORD PTR [rcx], ymm14	# MEM[base: index_ptr_124, offset: 0B], tmp369
 323:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4524              		.loc 1 323 29 is_stmt 1 view .LVU1555
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4525              		.loc 1 324 9 view .LVU1556
 4526              	# sieve_extend.c:324:         *index_ptr |= mask; index_ptr+=step;
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4527              		.loc 1 324 20 is_stmt 0 view .LVU1557
 4528 1ac7 C4217DEB 		vpor	ymm15, ymm0, YMMWORD PTR [rcx+r8]	# tmp370, quadmask.59_36, MEM[base: index_ptr_124, index: _
 4528      3C01
 4529 1acd C4217D7F 		vmovdqa	YMMWORD PTR [rcx+r8], ymm15	# MEM[base: index_ptr_124, index: _79, offset: 0B], tmp370
 4529      3C01
 324:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4530              		.loc 1 324 29 is_stmt 1 view .LVU1558
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4531              		.loc 1 325 9 view .LVU1559
 4532 1ad3 4801D9   		add	rcx, rbx	# index_ptr, _3
 4533              	# sieve_extend.c:325:         *index_ptr |= mask; index_ptr+=step;
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4534              		.loc 1 325 20 is_stmt 0 view .LVU1560
 4535 1ad6 C4C17DEB 		vpor	ymm1, ymm0, YMMWORD PTR [r14]	# tmp371, quadmask.59_36, MEM[base: _94, offset: 0B]
 4535      0E
 4536 1adb C4C17D7F 		vmovdqa	YMMWORD PTR [r14], ymm1	# MEM[base: _94, offset: 0B], tmp371
 4536      0E
 325:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4537              		.loc 1 325 29 is_stmt 1 view .LVU1561
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4538              		.loc 1 326 9 view .LVU1562
 4539              	# sieve_extend.c:326:         *index_ptr |= mask; index_ptr+=step;
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4540              		.loc 1 326 20 is_stmt 0 view .LVU1563
 4541 1ae0 C4817DEB 		vpor	ymm3, ymm0, YMMWORD PTR [r14+r8]	# tmp372, quadmask.59_36, MEM[base: _94, index: _79, offset:
 4541      1C06
 4542 1ae6 C4817D7F 		vmovdqa	YMMWORD PTR [r14+r8], ymm3	# MEM[base: _94, index: _79, offset: 0B], tmp372
 4542      1C06
 326:sieve_extend.c ****         // *index_ptr |= mask; index_ptr+=step;
 4543              		.loc 1 326 29 is_stmt 1 view .LVU1564
 322:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4544              		.loc 1 322 11 view .LVU1565
 4545 1aec 4901DE   		add	r14, rbx	# ivtmp.288, _3
 4546 1aef 4C39C9   		cmp	rcx, r9	# index_ptr, fast_loop_ptr
 4547 1af2 0F8224FF 		jb	.L223	#,
 4547      FFFF
 4548 1af8 0F1F8400 		.p2align 4
 4548      00000000 
 4549              		.p2align 3
 4550              	.L379:
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 131


 4551              		.loc 1 331 11 view .LVU1566
 4552 1b00 4C39D1   		cmp	rcx, r10	# index_ptr, _165
 4553 1b03 0F878700 		ja	.L232	#,
 4553      0000
 4554              	.L224:
 332:sieve_extend.c ****     }
 4555              		.loc 1 332 9 view .LVU1567
 4556              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4557              		.loc 1 332 20 is_stmt 0 view .LVU1568
 4558 1b09 C5FDEB21 		vpor	ymm4, ymm0, YMMWORD PTR [rcx]	# tmp216, quadmask.59_36, MEM[base: index_ptr_121, offset: 0B]
 4559 1b0d C5FD7F21 		vmovdqa	YMMWORD PTR [rcx], ymm4	# MEM[base: index_ptr_121, offset: 0B], tmp216
 332:sieve_extend.c ****     }
 4560              		.loc 1 332 29 is_stmt 1 view .LVU1569
 4561              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4562              		.loc 1 332 38 is_stmt 0 view .LVU1570
 4563 1b11 4C01C1   		add	rcx, r8	# index_ptr, _79
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4564              		.loc 1 331 11 is_stmt 1 view .LVU1571
 4565 1b14 4C39D1   		cmp	rcx, r10	# index_ptr, _165
 4566 1b17 7777     		ja	.L232	#,
 332:sieve_extend.c ****     }
 4567              		.loc 1 332 9 view .LVU1572
 4568              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4569              		.loc 1 332 20 is_stmt 0 view .LVU1573
 4570 1b19 C5FDEB29 		vpor	ymm5, ymm0, YMMWORD PTR [rcx]	# tmp346, quadmask.59_36, MEM[base: index_ptr_121, offset: 0B]
 4571 1b1d C5FD7F29 		vmovdqa	YMMWORD PTR [rcx], ymm5	# MEM[base: index_ptr_121, offset: 0B], tmp346
 332:sieve_extend.c ****     }
 4572              		.loc 1 332 29 is_stmt 1 view .LVU1574
 4573              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4574              		.loc 1 332 38 is_stmt 0 view .LVU1575
 4575 1b21 4C01C1   		add	rcx, r8	# index_ptr, _79
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4576              		.loc 1 331 11 is_stmt 1 view .LVU1576
 4577 1b24 4C39D1   		cmp	rcx, r10	# index_ptr, _165
 4578 1b27 7767     		ja	.L232	#,
 332:sieve_extend.c ****     }
 4579              		.loc 1 332 9 view .LVU1577
 4580              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4581              		.loc 1 332 20 is_stmt 0 view .LVU1578
 4582 1b29 C5FDEB31 		vpor	ymm6, ymm0, YMMWORD PTR [rcx]	# tmp348, quadmask.59_36, MEM[base: index_ptr_121, offset: 0B]
 4583 1b2d C5FD7F31 		vmovdqa	YMMWORD PTR [rcx], ymm6	# MEM[base: index_ptr_121, offset: 0B], tmp348
 332:sieve_extend.c ****     }
 4584              		.loc 1 332 29 is_stmt 1 view .LVU1579
 4585              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4586              		.loc 1 332 38 is_stmt 0 view .LVU1580
 4587 1b31 4C01C1   		add	rcx, r8	# index_ptr, _79
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4588              		.loc 1 331 11 is_stmt 1 view .LVU1581
 4589 1b34 4C39D1   		cmp	rcx, r10	# index_ptr, _165
 4590 1b37 7757     		ja	.L232	#,
 332:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 132


 4591              		.loc 1 332 9 view .LVU1582
 4592              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4593              		.loc 1 332 20 is_stmt 0 view .LVU1583
 4594 1b39 C5FDEB39 		vpor	ymm7, ymm0, YMMWORD PTR [rcx]	# tmp350, quadmask.59_36, MEM[base: index_ptr_121, offset: 0B]
 4595 1b3d C5FD7F39 		vmovdqa	YMMWORD PTR [rcx], ymm7	# MEM[base: index_ptr_121, offset: 0B], tmp350
 332:sieve_extend.c ****     }
 4596              		.loc 1 332 29 is_stmt 1 view .LVU1584
 4597              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4598              		.loc 1 332 38 is_stmt 0 view .LVU1585
 4599 1b41 4C01C1   		add	rcx, r8	# index_ptr, _79
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4600              		.loc 1 331 11 is_stmt 1 view .LVU1586
 4601 1b44 4C39D1   		cmp	rcx, r10	# index_ptr, _165
 4602 1b47 7747     		ja	.L232	#,
 332:sieve_extend.c ****     }
 4603              		.loc 1 332 9 view .LVU1587
 4604              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4605              		.loc 1 332 20 is_stmt 0 view .LVU1588
 4606 1b49 C57DEB01 		vpor	ymm8, ymm0, YMMWORD PTR [rcx]	# tmp352, quadmask.59_36, MEM[base: index_ptr_121, offset: 0B]
 4607 1b4d C57D7F01 		vmovdqa	YMMWORD PTR [rcx], ymm8	# MEM[base: index_ptr_121, offset: 0B], tmp352
 332:sieve_extend.c ****     }
 4608              		.loc 1 332 29 is_stmt 1 view .LVU1589
 4609              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4610              		.loc 1 332 38 is_stmt 0 view .LVU1590
 4611 1b51 4C01C1   		add	rcx, r8	# index_ptr, _79
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4612              		.loc 1 331 11 is_stmt 1 view .LVU1591
 4613 1b54 4C39D1   		cmp	rcx, r10	# index_ptr, _165
 4614 1b57 7737     		ja	.L232	#,
 332:sieve_extend.c ****     }
 4615              		.loc 1 332 9 view .LVU1592
 4616              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4617              		.loc 1 332 20 is_stmt 0 view .LVU1593
 4618 1b59 C57DEB09 		vpor	ymm9, ymm0, YMMWORD PTR [rcx]	# tmp354, quadmask.59_36, MEM[base: index_ptr_121, offset: 0B]
 4619 1b5d C57D7F09 		vmovdqa	YMMWORD PTR [rcx], ymm9	# MEM[base: index_ptr_121, offset: 0B], tmp354
 332:sieve_extend.c ****     }
 4620              		.loc 1 332 29 is_stmt 1 view .LVU1594
 4621              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4622              		.loc 1 332 38 is_stmt 0 view .LVU1595
 4623 1b61 4C01C1   		add	rcx, r8	# index_ptr, _79
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4624              		.loc 1 331 11 is_stmt 1 view .LVU1596
 4625 1b64 4C39D1   		cmp	rcx, r10	# index_ptr, _165
 4626 1b67 7727     		ja	.L232	#,
 332:sieve_extend.c ****     }
 4627              		.loc 1 332 9 view .LVU1597
 4628              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4629              		.loc 1 332 20 is_stmt 0 view .LVU1598
 4630 1b69 C57DEB11 		vpor	ymm10, ymm0, YMMWORD PTR [rcx]	# tmp356, quadmask.59_36, MEM[base: index_ptr_121, offset: 0B]
 4631 1b6d C57D7F11 		vmovdqa	YMMWORD PTR [rcx], ymm10	# MEM[base: index_ptr_121, offset: 0B], tmp356
GAS LISTING /tmp/ccfflXEb.s 			page 133


 332:sieve_extend.c ****     }
 4632              		.loc 1 332 29 is_stmt 1 view .LVU1599
 4633              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4634              		.loc 1 332 38 is_stmt 0 view .LVU1600
 4635 1b71 4C01C1   		add	rcx, r8	# index_ptr, _79
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4636              		.loc 1 331 11 is_stmt 1 view .LVU1601
 4637 1b74 4C39D1   		cmp	rcx, r10	# index_ptr, _165
 4638 1b77 7717     		ja	.L232	#,
 332:sieve_extend.c ****     }
 4639              		.loc 1 332 9 view .LVU1602
 4640              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4641              		.loc 1 332 20 is_stmt 0 view .LVU1603
 4642 1b79 C57DEB19 		vpor	ymm11, ymm0, YMMWORD PTR [rcx]	# tmp358, quadmask.59_36, MEM[base: index_ptr_121, offset: 0B]
 4643 1b7d C57D7F19 		vmovdqa	YMMWORD PTR [rcx], ymm11	# MEM[base: index_ptr_121, offset: 0B], tmp358
 332:sieve_extend.c ****     }
 4644              		.loc 1 332 29 is_stmt 1 view .LVU1604
 4645              	.LVL168:
 4646              	# sieve_extend.c:332:         *index_ptr |= mask; index_ptr+=step;
 332:sieve_extend.c ****     }
 4647              		.loc 1 332 38 is_stmt 0 view .LVU1605
 4648 1b81 4C01C1   		add	rcx, r8	# index_ptr, _79
 4649              	.LVL169:
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4650              		.loc 1 331 11 is_stmt 1 view .LVU1606
 4651 1b84 4C39D1   		cmp	rcx, r10	# index_ptr, _165
 4652 1b87 7680     		jbe	.L224	#,
 4653              	.LVL170:
 4654 1b89 0F1F8000 		.p2align 4
 4654      000000
 4655              		.p2align 3
 4656              	.L232:
 331:sieve_extend.c ****         *index_ptr |= mask; index_ptr+=step;
 4657              		.loc 1 331 11 is_stmt 0 view .LVU1607
 4658              	.LBE331:
 4659              	.LBE334:
 4660              	.LBE335:
 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 4661              		.loc 1 362 41 is_stmt 1 view .LVU1608
 4662              	# sieve_extend.c:362:     for (counter_t index = range_start; index < range_stop_unique;) {
 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 4663              		.loc 1 362 5 is_stmt 0 view .LVU1609
 4664 1b90 4939F3   		cmp	r11, rsi	# range_stop_unique, range_start
 4665 1b93 0F8757FD 		ja	.L225	#,
 4665      FFFF
 4666 1b99 E902FDFF 		jmp	.L380	#
 4666      FF
 4667              	.LVL171:
 4668              	.L216:
 362:sieve_extend.c ****         const counter_t current_vector =  vectorindex(index);
 4669              		.loc 1 362 5 view .LVU1610
 4670              	.LBE336:
 4671              	.LBB337:
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4672              		.loc 1 349 49 is_stmt 1 view .LVU1611
GAS LISTING /tmp/ccfflXEb.s 			page 134


 4673              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4674              		.loc 1 349 13 is_stmt 0 view .LVU1612
 4675 1b9e 4839CE   		cmp	rsi, rcx	# range_start, range_stop
 4676              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4677              		.loc 1 350 54 view .LVU1613
 4678 1ba1 41BA0100 		mov	r10d, 1	# tmp179,
 4678      0000
 4679              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4680              		.loc 1 349 13 view .LVU1614
 4681 1ba7 0F87F6FC 		ja	.L214	#,
 4681      FFFF
 4682              	.LVL172:
 4683              	.L218:
 350:sieve_extend.c ****             return;                 
 4684              		.loc 1 350 17 is_stmt 1 discriminator 3 view .LVU1615
 4685              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4686              		.loc 1 350 51 is_stmt 0 discriminator 3 view .LVU1616
 4687 1bad 4989F3   		mov	r11, rsi	# tmp175, range_start
 4688              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4689              		.loc 1 350 54 discriminator 3 view .LVU1617
 4690 1bb0 C442C9F7 		shlx	r8, r10, rsi	# tmp178, tmp179, range_start
 4690      C2
 4691              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4692              		.loc 1 350 51 discriminator 3 view .LVU1618
 4693 1bb5 49C1EB06 		shr	r11, 6	# tmp175,
 4694              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4695              		.loc 1 349 76 discriminator 3 view .LVU1619
 4696 1bb9 4801D6   		add	rsi, rdx	# range_start, step
 4697              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4698              		.loc 1 350 51 discriminator 3 view .LVU1620
 4699 1bbc 4E0904DF 		or	QWORD PTR [rdi+r11*8], r8	# *_14, tmp178
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4700              		.loc 1 349 70 is_stmt 1 discriminator 3 view .LVU1621
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4701              		.loc 1 349 49 discriminator 3 view .LVU1622
 4702              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4703              		.loc 1 349 13 is_stmt 0 discriminator 3 view .LVU1623
 4704 1bc0 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4705 1bc3 0F82DAFC 		jb	.L214	#,
 4705      FFFF
 350:sieve_extend.c ****             return;                 
 4706              		.loc 1 350 17 is_stmt 1 view .LVU1624
 4707              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4708              		.loc 1 350 51 is_stmt 0 view .LVU1625
 4709 1bc9 4989F6   		mov	r14, rsi	# tmp273, range_start
 4710              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
GAS LISTING /tmp/ccfflXEb.s 			page 135


 4711              		.loc 1 350 54 view .LVU1626
 4712 1bcc C442C9F7 		shlx	r12, r10, rsi	# tmp276, tmp179, range_start
 4712      E2
 4713              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4714              		.loc 1 350 51 view .LVU1627
 4715 1bd1 49C1EE06 		shr	r14, 6	# tmp273,
 4716              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4717              		.loc 1 349 76 view .LVU1628
 4718 1bd5 4801D6   		add	rsi, rdx	# range_start, step
 4719              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4720              		.loc 1 350 51 view .LVU1629
 4721 1bd8 4E0924F7 		or	QWORD PTR [rdi+r14*8], r12	# *_14, tmp276
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4722              		.loc 1 349 70 is_stmt 1 view .LVU1630
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4723              		.loc 1 349 49 view .LVU1631
 4724              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4725              		.loc 1 349 13 is_stmt 0 view .LVU1632
 4726 1bdc 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4727 1bdf 0F82BEFC 		jb	.L214	#,
 4727      FFFF
 350:sieve_extend.c ****             return;                 
 4728              		.loc 1 350 17 is_stmt 1 view .LVU1633
 4729              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4730              		.loc 1 350 51 is_stmt 0 view .LVU1634
 4731 1be5 4989F5   		mov	r13, rsi	# tmp278, range_start
 4732              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4733              		.loc 1 350 54 view .LVU1635
 4734 1be8 C4C2C9F7 		shlx	rax, r10, rsi	# tmp281, tmp179, range_start
 4734      C2
 4735              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4736              		.loc 1 350 51 view .LVU1636
 4737 1bed 49C1ED06 		shr	r13, 6	# tmp278,
 4738              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4739              		.loc 1 349 76 view .LVU1637
 4740 1bf1 4801D6   		add	rsi, rdx	# range_start, step
 4741              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4742              		.loc 1 350 51 view .LVU1638
 4743 1bf4 4A0904EF 		or	QWORD PTR [rdi+r13*8], rax	# *_14, tmp281
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4744              		.loc 1 349 70 is_stmt 1 view .LVU1639
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4745              		.loc 1 349 49 view .LVU1640
 4746              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4747              		.loc 1 349 13 is_stmt 0 view .LVU1641
 4748 1bf8 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4749 1bfb 0F82A2FC 		jb	.L214	#,
GAS LISTING /tmp/ccfflXEb.s 			page 136


 4749      FFFF
 350:sieve_extend.c ****             return;                 
 4750              		.loc 1 350 17 is_stmt 1 view .LVU1642
 4751              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4752              		.loc 1 350 51 is_stmt 0 view .LVU1643
 4753 1c01 4989F7   		mov	r15, rsi	# tmp283, range_start
 4754              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4755              		.loc 1 350 54 view .LVU1644
 4756 1c04 C4C2C9F7 		shlx	rbx, r10, rsi	# tmp286, tmp179, range_start
 4756      DA
 4757              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4758              		.loc 1 350 51 view .LVU1645
 4759 1c09 49C1EF06 		shr	r15, 6	# tmp283,
 4760              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4761              		.loc 1 349 76 view .LVU1646
 4762 1c0d 4801D6   		add	rsi, rdx	# range_start, step
 4763              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4764              		.loc 1 350 51 view .LVU1647
 4765 1c10 4A091CFF 		or	QWORD PTR [rdi+r15*8], rbx	# *_14, tmp286
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4766              		.loc 1 349 70 is_stmt 1 view .LVU1648
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4767              		.loc 1 349 49 view .LVU1649
 4768              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4769              		.loc 1 349 13 is_stmt 0 view .LVU1650
 4770 1c14 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4771 1c17 0F8286FC 		jb	.L214	#,
 4771      FFFF
 350:sieve_extend.c ****             return;                 
 4772              		.loc 1 350 17 is_stmt 1 view .LVU1651
 4773              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4774              		.loc 1 350 51 is_stmt 0 view .LVU1652
 4775 1c1d 4989F3   		mov	r11, rsi	# tmp288, range_start
 4776              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4777              		.loc 1 350 54 view .LVU1653
 4778 1c20 C442C9F7 		shlx	r9, r10, rsi	# tmp291, tmp179, range_start
 4778      CA
 4779              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4780              		.loc 1 350 51 view .LVU1654
 4781 1c25 49C1EB06 		shr	r11, 6	# tmp288,
 4782              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4783              		.loc 1 349 76 view .LVU1655
 4784 1c29 4801D6   		add	rsi, rdx	# range_start, step
 4785              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4786              		.loc 1 350 51 view .LVU1656
 4787 1c2c 4E090CDF 		or	QWORD PTR [rdi+r11*8], r9	# *_14, tmp291
GAS LISTING /tmp/ccfflXEb.s 			page 137


 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4788              		.loc 1 349 70 is_stmt 1 view .LVU1657
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4789              		.loc 1 349 49 view .LVU1658
 4790              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4791              		.loc 1 349 13 is_stmt 0 view .LVU1659
 4792 1c30 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4793 1c33 0F826AFC 		jb	.L214	#,
 4793      FFFF
 350:sieve_extend.c ****             return;                 
 4794              		.loc 1 350 17 is_stmt 1 view .LVU1660
 4795              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4796              		.loc 1 350 51 is_stmt 0 view .LVU1661
 4797 1c39 4989F0   		mov	r8, rsi	# tmp293, range_start
 4798              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4799              		.loc 1 350 54 view .LVU1662
 4800 1c3c C442C9F7 		shlx	r14, r10, rsi	# tmp296, tmp179, range_start
 4800      F2
 4801              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4802              		.loc 1 350 51 view .LVU1663
 4803 1c41 49C1E806 		shr	r8, 6	# tmp293,
 4804              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4805              		.loc 1 349 76 view .LVU1664
 4806 1c45 4801D6   		add	rsi, rdx	# range_start, step
 4807              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4808              		.loc 1 350 51 view .LVU1665
 4809 1c48 4E0934C7 		or	QWORD PTR [rdi+r8*8], r14	# *_14, tmp296
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4810              		.loc 1 349 70 is_stmt 1 view .LVU1666
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4811              		.loc 1 349 49 view .LVU1667
 4812              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4813              		.loc 1 349 13 is_stmt 0 view .LVU1668
 4814 1c4c 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4815 1c4f 0F824EFC 		jb	.L214	#,
 4815      FFFF
 350:sieve_extend.c ****             return;                 
 4816              		.loc 1 350 17 is_stmt 1 view .LVU1669
 4817              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4818              		.loc 1 350 51 is_stmt 0 view .LVU1670
 4819 1c55 4989F4   		mov	r12, rsi	# tmp298, range_start
 4820              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4821              		.loc 1 350 54 view .LVU1671
 4822 1c58 C442C9F7 		shlx	r13, r10, rsi	# tmp301, tmp179, range_start
 4822      EA
 4823              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4824              		.loc 1 350 51 view .LVU1672
GAS LISTING /tmp/ccfflXEb.s 			page 138


 4825 1c5d 49C1EC06 		shr	r12, 6	# tmp298,
 4826              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4827              		.loc 1 349 76 view .LVU1673
 4828 1c61 4801D6   		add	rsi, rdx	# range_start, step
 4829              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4830              		.loc 1 350 51 view .LVU1674
 4831 1c64 4E092CE7 		or	QWORD PTR [rdi+r12*8], r13	# *_14, tmp301
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4832              		.loc 1 349 70 is_stmt 1 view .LVU1675
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4833              		.loc 1 349 49 view .LVU1676
 4834              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4835              		.loc 1 349 13 is_stmt 0 view .LVU1677
 4836 1c68 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4837 1c6b 0F8232FC 		jb	.L214	#,
 4837      FFFF
 350:sieve_extend.c ****             return;                 
 4838              		.loc 1 350 17 is_stmt 1 view .LVU1678
 4839              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4840              		.loc 1 350 51 is_stmt 0 view .LVU1679
 4841 1c71 4889F0   		mov	rax, rsi	# tmp303, range_start
 4842              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4843              		.loc 1 350 54 view .LVU1680
 4844 1c74 C442C9F7 		shlx	r15, r10, rsi	# tmp306, tmp179, range_start
 4844      FA
 4845              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4846              		.loc 1 350 51 view .LVU1681
 4847 1c79 48C1E806 		shr	rax, 6	# tmp303,
 4848              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4849              		.loc 1 349 76 view .LVU1682
 4850 1c7d 4801D6   		add	rsi, rdx	# range_start, step
 4851              	# sieve_extend.c:350:                 bitstorage_word[wordindex(index)] |= markmask(index);
 350:sieve_extend.c ****             return;                 
 4852              		.loc 1 350 51 view .LVU1683
 4853 1c80 4C093CC7 		or	QWORD PTR [rdi+rax*8], r15	# *_14, tmp306
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4854              		.loc 1 349 70 is_stmt 1 view .LVU1684
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4855              		.loc 1 349 49 view .LVU1685
 4856              	# sieve_extend.c:349:             for (counter_t index = range_start; index <= range_stop; index +=
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
 4857              		.loc 1 349 13 is_stmt 0 view .LVU1686
 4858 1c84 4839F1   		cmp	rcx, rsi	# range_stop, range_start
 4859 1c87 0F8320FF 		jnb	.L218	#,
 4859      FFFF
 4860 1c8d E911FCFF 		jmp	.L214	#
 4860      FF
 4861              	.LVL173:
 4862              	.L382:
 349:sieve_extend.c ****                 bitstorage_word[wordindex(index)] |= markmask(index);
GAS LISTING /tmp/ccfflXEb.s 			page 139


 4863              		.loc 1 349 13 view .LVU1687
 4864              	.LBE337:
 4865              	# sieve_extend.c:382: }
 382:sieve_extend.c **** 
 4866              		.loc 1 382 1 view .LVU1688
 4867 1c92 E8000000 		call	__stack_chk_fail@PLT	#
 4867      00
 4868              	.LVL174:
 382:sieve_extend.c **** 
 4869              		.loc 1 382 1 view .LVU1689
 4870              		.cfi_endproc
 4871              	.LFE65:
 4873 1c97 660F1F84 		.p2align 4
 4873      00000000 
 4873      00
 4875              	extendSieve_aligned:
 4876              	.LVL175:
 4877              	.LFB67:
 418:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4878              		.loc 1 418 142 is_stmt 1 view -0
 4879              		.cfi_startproc
 419:sieve_extend.c **** 
 4880              		.loc 1 419 5 view .LVU1691
 421:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4881              		.loc 1 421 5 view .LVU1692
 4882              	# sieve_extend.c:418: static void extendSieve_aligned(bitword_t* bitstorage, const counter_t source
 418:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4883              		.loc 1 418 142 is_stmt 0 view .LVU1693
 4884 1ca0 55       		push	rbp	#
 4885              		.cfi_def_cfa_offset 16
 4886              		.cfi_offset 6, -16
 4887 1ca1 4889E5   		mov	rbp, rsp	#,
 4888              		.cfi_def_cfa_register 6
 4889 1ca4 4157     		push	r15	#
 4890 1ca6 4156     		push	r14	#
 4891 1ca8 4155     		push	r13	#
 4892              		.cfi_offset 15, -24
 4893              		.cfi_offset 14, -32
 4894              		.cfi_offset 13, -40
 4895 1caa 4989FD   		mov	r13, rdi	# bitstorage, tmp295
 4896 1cad 4154     		push	r12	#
 4897              		.cfi_offset 12, -48
 4898 1caf 4989D4   		mov	r12, rdx	# size, tmp297
 4899 1cb2 53       		push	rbx	#
 4900              		.cfi_offset 3, -56
 4901              	# sieve_extend.c:421:     const counter_t destination_stop_word = wordindex(destination_stop);
 421:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4902              		.loc 1 421 21 view .LVU1694
 4903 1cb3 4889CB   		mov	rbx, rcx	# tmp298, tmp298
 4904              	# sieve_extend.c:422:     const counter_t copy_start = source_start + size;
 422:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 4905              		.loc 1 422 21 view .LVU1695
 4906 1cb6 488D0C16 		lea	rcx, [rsi+rdx]	# copy_start,
 4907              	.LVL176:
 4908              	# sieve_extend.c:418: static void extendSieve_aligned(bitword_t* bitstorage, const counter_t source
 418:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4909              		.loc 1 418 142 view .LVU1696
GAS LISTING /tmp/ccfflXEb.s 			page 140


 4910 1cba 4883E4E0 		and	rsp, -32	#,
 4911              	# sieve_extend.c:424:     counter_t copy_word = wordindex(copy_start);
 424:sieve_extend.c ****     
 4912              		.loc 1 424 15 view .LVU1697
 4913 1cbe 4889C8   		mov	rax, rcx	# ivtmp.341, copy_start
 4914              	# sieve_extend.c:423:     counter_t source_word = wordindex(source_start);
 423:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4915              		.loc 1 423 15 view .LVU1698
 4916 1cc1 48C1EE06 		shr	rsi, 6	# source_start,
 4917              	.LVL177:
 4918              	# sieve_extend.c:418: static void extendSieve_aligned(bitword_t* bitstorage, const counter_t source
 418:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using aligned (%ju copies)\n"
 4919              		.loc 1 418 142 view .LVU1699
 4920 1cc5 488D6424 		lea	rsp, -32[rsp]	#,
 4920      E0
 4921              	# sieve_extend.c:424:     counter_t copy_word = wordindex(copy_start);
 424:sieve_extend.c ****     
 4922              		.loc 1 424 15 view .LVU1700
 4923 1cca 48C1E806 		shr	rax, 6	# ivtmp.341,
 4924              	# sieve_extend.c:426:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 426:sieve_extend.c **** 
 4925              		.loc 1 426 39 view .LVU1701
 4926 1cce 488D3CF5 		lea	rdi, 0[0+rsi*8]	# _4,
 4926      00000000 
 4927              	.LVL178:
 4928              	# sieve_extend.c:421:     const counter_t destination_stop_word = wordindex(destination_stop);
 421:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 4929              		.loc 1 421 21 view .LVU1702
 4930 1cd6 48C1EB06 		shr	rbx, 6	# tmp298,
 4931              	.LVL179:
 422:sieve_extend.c ****     counter_t source_word = wordindex(source_start);
 4932              		.loc 1 422 5 is_stmt 1 view .LVU1703
 423:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4933              		.loc 1 423 5 view .LVU1704
 4934              	# sieve_extend.c:426:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 426:sieve_extend.c **** 
 4935              		.loc 1 426 39 is_stmt 0 view .LVU1705
 4936 1cda 4D8D743D 		lea	r14, 0[r13+rdi]	# _5,
 4936      00
 4937              	# sieve_extend.c:423:     counter_t source_word = wordindex(source_start);
 423:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 4938              		.loc 1 423 15 view .LVU1706
 4939 1cdf 48897424 		mov	QWORD PTR 8[rsp], rsi	# %sfp, source_word
 4939      08
 4940              	.LVL180:
 424:sieve_extend.c ****     
 4941              		.loc 1 424 5 is_stmt 1 view .LVU1707
 426:sieve_extend.c **** 
 4942              		.loc 1 426 5 view .LVU1708
 4943              	# sieve_extend.c:426:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 426:sieve_extend.c **** 
 4944              		.loc 1 426 56 is_stmt 0 view .LVU1709
 4945 1ce4 89CE     		mov	esi, ecx	# tmp183, copy_start
 4946              	.LVL181:
 4947              	# sieve_extend.c:428:     while (copy_word + size <= destination_stop_word) {
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 4948              		.loc 1 428 22 view .LVU1710
GAS LISTING /tmp/ccfflXEb.s 			page 141


 4949 1ce6 498D0C04 		lea	rcx, [r12+rax]	# ivtmp.341,
 4950              	.LVL182:
 4951              	# sieve_extend.c:426:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 426:sieve_extend.c **** 
 4952              		.loc 1 426 56 view .LVU1711
 4953 1cea F7D6     		not	esi	# tmp183
 4954              	# sieve_extend.c:426:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 426:sieve_extend.c **** 
 4955              		.loc 1 426 39 view .LVU1712
 4956 1cec 48893C24 		mov	QWORD PTR [rsp], rdi	# %sfp, _4
 4957              	# sieve_extend.c:426:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 426:sieve_extend.c **** 
 4958              		.loc 1 426 56 view .LVU1713
 4959 1cf0 48C7C2FF 		mov	rdx, -1	# tmp186,
 4959      FFFFFF
 4960              	.LVL183:
 426:sieve_extend.c **** 
 4961              		.loc 1 426 56 view .LVU1714
 4962 1cf7 C462CBF7 		shrx	r8, rdx, rsi	# tmp185, tmp186, tmp183
 4962      C2
 4963              	# sieve_extend.c:426:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 426:sieve_extend.c **** 
 4964              		.loc 1 426 53 view .LVU1715
 4965 1cfc C442B8F2 		andn	r9, r8, QWORD PTR [r14]	# tmp189, tmp185, *_5
 4965      0E
 4966              	# sieve_extend.c:426:     bitstorage[copy_word] = bitstorage[source_word] & ~chopmask(copy_start);
 426:sieve_extend.c **** 
 4967              		.loc 1 426 27 view .LVU1716
 4968 1d01 4D894CC5 		mov	QWORD PTR 0[r13+rax*8], r9	# *_13, tmp189
 4968      00
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 4969              		.loc 1 428 5 is_stmt 1 view .LVU1717
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 4970              		.loc 1 428 11 view .LVU1718
 4971 1d06 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.341
 4972 1d09 0F827101 		jb	.L384	#,
 4972      0000
 4973 1d0f 4C8D14C5 		lea	r10, 0[0+rax*8]	# _12,
 4973      00000000 
 4974 1d17 488D04CD 		lea	rax, 0[0+rcx*8]	# tmp191,
 4974      00000000 
 4975              	.LVL184:
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 4976              		.loc 1 428 11 is_stmt 0 view .LVU1719
 4977 1d1f 4D01EA   		add	r10, r13	# tmp190, bitstorage
 4978              	# sieve_extend.c:429:         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)s
 429:sieve_extend.c ****         copy_word += size;
 4979              		.loc 1 429 9 view .LVU1720
 4980 1d22 4E8D3CE5 		lea	r15, 0[0+r12*8]	# _15,
 4980      00000000 
 4981 1d2a 4929C2   		sub	r10, rax	# tmp190, tmp191
 4982 1d2d 4C895424 		mov	QWORD PTR 24[rsp], r10	# %sfp, tmp190
 4982      18
 4983              	.LVL185:
 4984              	.L385:
 429:sieve_extend.c ****         copy_word += size;
 4985              		.loc 1 429 9 is_stmt 1 view .LVU1721
GAS LISTING /tmp/ccfflXEb.s 			page 142


 4986              	.LBB338:
 4987              	.LBI338:
 4988              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 4989              		.loc 2 31 1 view .LVU1722
 4990              	.LBB339:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 4991              		.loc 2 34 3 view .LVU1723
 4992              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 4993              		.loc 2 34 10 is_stmt 0 view .LVU1724
 4994 1d32 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 4994      18
 4995 1d37 4C89FA   		mov	rdx, r15	#, _15
 4996 1d3a 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.341
 4996      10
 4997 1d3f 4C89F6   		mov	rsi, r14	#, _5
 4998 1d42 498D3CCB 		lea	rdi, [r11+rcx*8]	# tmp193,
 4999 1d46 E8000000 		call	memcpy@PLT	#
 4999      00
 5000              	.LVL186:
 5001              		.loc 2 34 10 view .LVU1725
 5002              	.LBE339:
 5003              	.LBE338:
 430:sieve_extend.c ****     }
 5004              		.loc 1 430 9 is_stmt 1 view .LVU1726
GAS LISTING /tmp/ccfflXEb.s 			page 143


 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5005              		.loc 1 428 11 view .LVU1727
 5006 1d4b 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.341, %sfp
 5006      10
 5007 1d50 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.341,
 5008 1d54 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.341
 5009 1d57 0F822301 		jb	.L384	#,
 5009      0000
 429:sieve_extend.c ****         copy_word += size;
 5010              		.loc 1 429 9 view .LVU1728
 5011              	.LVL187:
 5012              	.LBB347:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5013              		.loc 2 31 1 view .LVU1729
 5014              	.LBB340:
 5015              		.loc 2 34 3 view .LVU1730
 5016              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5017              		.loc 2 34 10 is_stmt 0 view .LVU1731
 5018 1d5d 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5018      18
 5019 1d62 4C89F6   		mov	rsi, r14	#, _5
 5020 1d65 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.341
 5020      10
 5021              	.LVL188:
 5022              		.loc 2 34 10 view .LVU1732
 5023 1d6a 4C89FA   		mov	rdx, r15	#, _15
 5024 1d6d 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp276,
 5025 1d71 E8000000 		call	memcpy@PLT	#
 5025      00
 5026              	.LVL189:
 5027              		.loc 2 34 10 view .LVU1733
 5028              	.LBE340:
 5029              	.LBE347:
 430:sieve_extend.c ****     }
 5030              		.loc 1 430 9 is_stmt 1 view .LVU1734
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5031              		.loc 1 428 11 view .LVU1735
 5032 1d76 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.341, %sfp
 5032      10
 5033 1d7b 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.341,
 5034 1d7f 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.341
 5035 1d82 0F82F800 		jb	.L384	#,
 5035      0000
 429:sieve_extend.c ****         copy_word += size;
 5036              		.loc 1 429 9 view .LVU1736
 5037              	.LVL190:
 5038              	.LBB348:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5039              		.loc 2 31 1 view .LVU1737
 5040              	.LBB341:
 5041              		.loc 2 34 3 view .LVU1738
 5042              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5043              		.loc 2 34 10 is_stmt 0 view .LVU1739
 5044 1d88 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5044      18
 5045 1d8d 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.341
 5045      10
GAS LISTING /tmp/ccfflXEb.s 			page 144


 5046 1d92 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp279,
 5047 1d96 4C89FA   		mov	rdx, r15	#, _15
 5048 1d99 4C89F6   		mov	rsi, r14	#, _5
 5049 1d9c E8000000 		call	memcpy@PLT	#
 5049      00
 5050              	.LVL191:
 5051              		.loc 2 34 10 view .LVU1740
 5052              	.LBE341:
 5053              	.LBE348:
 430:sieve_extend.c ****     }
 5054              		.loc 1 430 9 is_stmt 1 view .LVU1741
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5055              		.loc 1 428 11 view .LVU1742
 5056 1da1 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.341, %sfp
 5056      10
 5057 1da6 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.341,
 5058 1daa 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.341
 5059 1dad 0F82CD00 		jb	.L384	#,
 5059      0000
 429:sieve_extend.c ****         copy_word += size;
 5060              		.loc 1 429 9 view .LVU1743
 5061              	.LVL192:
 5062              	.LBB349:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5063              		.loc 2 31 1 view .LVU1744
 5064              	.LBB342:
 5065              		.loc 2 34 3 view .LVU1745
 5066              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5067              		.loc 2 34 10 is_stmt 0 view .LVU1746
 5068 1db3 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5068      18
 5069 1db8 4C89FA   		mov	rdx, r15	#, _15
 5070 1dbb 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.341
 5070      10
 5071 1dc0 4C89F6   		mov	rsi, r14	#, _5
 5072 1dc3 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp282,
 5073 1dc7 E8000000 		call	memcpy@PLT	#
 5073      00
 5074              	.LVL193:
 5075              		.loc 2 34 10 view .LVU1747
 5076              	.LBE342:
 5077              	.LBE349:
 430:sieve_extend.c ****     }
 5078              		.loc 1 430 9 is_stmt 1 view .LVU1748
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5079              		.loc 1 428 11 view .LVU1749
 5080 1dcc 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.341, %sfp
 5080      10
 5081 1dd1 4E8D1420 		lea	r10, [rax+r12]	# ivtmp.341,
 5082 1dd5 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.341
 5083 1dd8 0F82A200 		jb	.L384	#,
 5083      0000
 429:sieve_extend.c ****         copy_word += size;
 5084              		.loc 1 429 9 view .LVU1750
 5085              	.LVL194:
 5086              	.LBB350:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
GAS LISTING /tmp/ccfflXEb.s 			page 145


 5087              		.loc 2 31 1 view .LVU1751
 5088              	.LBB343:
 5089              		.loc 2 34 3 view .LVU1752
 5090              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5091              		.loc 2 34 10 is_stmt 0 view .LVU1753
 5092 1dde 4C8B5C24 		mov	r11, QWORD PTR 24[rsp]	# _189, %sfp
 5092      18
 5093 1de3 4C89FA   		mov	rdx, r15	#, _15
 5094 1de6 4C895424 		mov	QWORD PTR 16[rsp], r10	# %sfp, ivtmp.341
 5094      10
 5095 1deb 4C89F6   		mov	rsi, r14	#, _5
 5096 1dee 4B8D3CD3 		lea	rdi, [r11+r10*8]	# tmp285,
 5097 1df2 E8000000 		call	memcpy@PLT	#
 5097      00
 5098              	.LVL195:
 5099              		.loc 2 34 10 view .LVU1754
 5100              	.LBE343:
 5101              	.LBE350:
 430:sieve_extend.c ****     }
 5102              		.loc 1 430 9 is_stmt 1 view .LVU1755
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5103              		.loc 1 428 11 view .LVU1756
 5104 1df7 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.341, %sfp
 5104      10
 5105 1dfc 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.341,
 5106 1e00 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.341
 5107 1e03 727B     		jb	.L384	#,
 429:sieve_extend.c ****         copy_word += size;
 5108              		.loc 1 429 9 view .LVU1757
 5109              	.LVL196:
 5110              	.LBB351:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5111              		.loc 2 31 1 view .LVU1758
 5112              	.LBB344:
 5113              		.loc 2 34 3 view .LVU1759
 5114              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5115              		.loc 2 34 10 is_stmt 0 view .LVU1760
 5116 1e05 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# _189, %sfp
 5116      18
 5117 1e0a 4C89F6   		mov	rsi, r14	#, _5
 5118 1e0d 48894C24 		mov	QWORD PTR 16[rsp], rcx	# %sfp, ivtmp.341
 5118      10
 5119 1e12 4C89FA   		mov	rdx, r15	#, _15
 5120 1e15 488D3CCF 		lea	rdi, [rdi+rcx*8]	# tmp288,
 5121 1e19 E8000000 		call	memcpy@PLT	#
 5121      00
 5122              	.LVL197:
 5123              		.loc 2 34 10 view .LVU1761
 5124              	.LBE344:
 5125              	.LBE351:
 430:sieve_extend.c ****     }
 5126              		.loc 1 430 9 is_stmt 1 view .LVU1762
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5127              		.loc 1 428 11 view .LVU1763
 5128 1e1e 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.341, %sfp
 5128      10
 5129 1e23 4A8D3420 		lea	rsi, [rax+r12]	# ivtmp.341,
GAS LISTING /tmp/ccfflXEb.s 			page 146


 5130 1e27 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.341
 5131 1e2a 7254     		jb	.L384	#,
 429:sieve_extend.c ****         copy_word += size;
 5132              		.loc 1 429 9 view .LVU1764
 5133              	.LVL198:
 5134              	.LBB352:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5135              		.loc 2 31 1 view .LVU1765
 5136              	.LBB345:
 5137              		.loc 2 34 3 view .LVU1766
 5138              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5139              		.loc 2 34 10 is_stmt 0 view .LVU1767
 5140 1e2c 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# _189, %sfp
 5140      18
 5141 1e31 48897424 		mov	QWORD PTR 16[rsp], rsi	# %sfp, ivtmp.341
 5141      10
 5142 1e36 488D3CF2 		lea	rdi, [rdx+rsi*8]	# tmp291,
 5143 1e3a 4C89FA   		mov	rdx, r15	#, _15
 5144 1e3d 4C89F6   		mov	rsi, r14	#, _5
 5145 1e40 E8000000 		call	memcpy@PLT	#
 5145      00
 5146              	.LVL199:
 5147              		.loc 2 34 10 view .LVU1768
 5148              	.LBE345:
 5149              	.LBE352:
 430:sieve_extend.c ****     }
 5150              		.loc 1 430 9 is_stmt 1 view .LVU1769
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5151              		.loc 1 428 11 view .LVU1770
 5152 1e45 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.341, %sfp
 5152      10
 5153 1e4a 4E8D0420 		lea	r8, [rax+r12]	# ivtmp.341,
 5154 1e4e 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.341
 5155 1e51 722D     		jb	.L384	#,
 429:sieve_extend.c ****         copy_word += size;
 5156              		.loc 1 429 9 view .LVU1771
 5157              	.LVL200:
 5158              	.LBB353:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5159              		.loc 2 31 1 view .LVU1772
 5160              	.LBB346:
 5161              		.loc 2 34 3 view .LVU1773
 5162              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 5163              		.loc 2 34 10 is_stmt 0 view .LVU1774
 5164 1e53 4C8B4C24 		mov	r9, QWORD PTR 24[rsp]	# _189, %sfp
 5164      18
 5165 1e58 4C89FA   		mov	rdx, r15	#, _15
 5166 1e5b 4C894424 		mov	QWORD PTR 16[rsp], r8	# %sfp, ivtmp.341
 5166      10
 5167 1e60 4C89F6   		mov	rsi, r14	#, _5
 5168 1e63 4B8D3CC1 		lea	rdi, [r9+r8*8]	# tmp294,
 5169 1e67 E8000000 		call	memcpy@PLT	#
 5169      00
 5170              	.LVL201:
 5171              		.loc 2 34 10 view .LVU1775
 5172              	.LBE346:
 5173              	.LBE353:
GAS LISTING /tmp/ccfflXEb.s 			page 147


 430:sieve_extend.c ****     }
 5174              		.loc 1 430 9 is_stmt 1 view .LVU1776
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5175              		.loc 1 428 11 view .LVU1777
 5176 1e6c 488B4424 		mov	rax, QWORD PTR 16[rsp]	# ivtmp.341, %sfp
 5176      10
 5177              	.LVL202:
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5178              		.loc 1 428 11 is_stmt 0 view .LVU1778
 5179 1e71 4A8D0C20 		lea	rcx, [rax+r12]	# ivtmp.341,
 5180              	.LVL203:
 428:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word], (uintmax_t)size*sizeof(bitword_t) 
 5181              		.loc 1 428 11 view .LVU1779
 5182 1e75 4839CB   		cmp	rbx, rcx	# destination_stop_word, ivtmp.341
 5183 1e78 0F83B4FE 		jnb	.L385	#,
 5183      FFFF
 5184              	.LVL204:
 5185 1e7e 6690     		.p2align 4
 5186              		.p2align 3
 5187              	.L384:
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5188              		.loc 1 433 10 is_stmt 1 view .LVU1780
 5189 1e80 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.341
 5190 1e83 0F864902 		jbe	.L495	#,
 5190      0000
 5191 1e89 4C8B1424 		mov	r10, QWORD PTR [rsp]	# _4, %sfp
 5192 1e8d 4C8D24C5 		lea	r12, 0[0+rax*8]	# _41,
 5192      00000000 
 5193              	.LVL205:
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5194              		.loc 1 433 10 is_stmt 0 view .LVU1781
 5195 1e95 4D8D7C24 		lea	r15, 32[r12]	# tmp199,
 5195      20
 5196 1e9a 498D7A20 		lea	rdi, 32[r10]	# tmp202,
 5197 1e9e 4D39FA   		cmp	r10, r15	# _4, tmp199
 5198 1ea1 410F9DC3 		setge	r11b	#, tmp201
 5199 1ea5 4939FC   		cmp	r12, rdi	# _41, tmp202
 5200 1ea8 400F9DC6 		setge	sil	#, tmp204
 5201 1eac 4108F3   		or	r11b, sil	# tmp201, tmp204
 5202 1eaf 0F844B02 		je	.L387	#,
 5202      0000
 5203 1eb5 488D53FF 		lea	rdx, -1[rbx]	# tmp206,
 5204 1eb9 4829C2   		sub	rdx, rax	# tmp207, ivtmp.341
 5205 1ebc 4883FA05 		cmp	rdx, 5	# tmp207,
 5206 1ec0 0F863A02 		jbe	.L387	#,
 5206      0000
 5207 1ec6 4D89F7   		mov	r15, r14	# tmp210, _5
 5208 1ec9 49C1EF03 		shr	r15, 3	# tmp210,
 5209 1ecd 49F7DF   		neg	r15	# tmp211
 5210 1ed0 4183E703 		and	r15d, 3	# prolog_loop_niters.309,
 5211 1ed4 0F842E03 		je	.L394	#,
 5211      0000
 434:sieve_extend.c ****         source_word++;
 5212              		.loc 1 434 9 is_stmt 1 view .LVU1782
 5213              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5214              		.loc 1 434 43 is_stmt 0 view .LVU1783
GAS LISTING /tmp/ccfflXEb.s 			page 148


 5215 1eda 4D8B06   		mov	r8, QWORD PTR [r14]	# _150, *_5
 5216 1edd 4983FF01 		cmp	r15, 1	# prolog_loop_niters.309,
 5217              	# sieve_extend.c:435:         source_word++;
 435:sieve_extend.c ****         copy_word++;
 5218              		.loc 1 435 20 view .LVU1784
 5219 1ee1 4C8B4C24 		mov	r9, QWORD PTR 8[rsp]	# source_word, %sfp
 5219      08
 5220              	# sieve_extend.c:436:         copy_word++;
 436:sieve_extend.c ****     }
 5221              		.loc 1 436 18 view .LVU1785
 5222 1ee6 4C8D7001 		lea	r14, 1[rax]	# copy_word,
 5223              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5224              		.loc 1 434 31 view .LVU1786
 5225 1eea 4F894425 		mov	QWORD PTR 0[r13+r12], r8	# *_149, _150
 5225      00
 435:sieve_extend.c ****         copy_word++;
 5226              		.loc 1 435 9 is_stmt 1 view .LVU1787
 5227              	# sieve_extend.c:435:         source_word++;
 435:sieve_extend.c ****         copy_word++;
 5228              		.loc 1 435 20 is_stmt 0 view .LVU1788
 5229 1eef 4D8D6101 		lea	r12, 1[r9]	# source_word,
 5230              	.LVL206:
 436:sieve_extend.c ****     }
 5231              		.loc 1 436 9 is_stmt 1 view .LVU1789
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5232              		.loc 1 433 10 view .LVU1790
 5233 1ef3 742A     		je	.L388	#,
 434:sieve_extend.c ****         source_word++;
 5234              		.loc 1 434 9 view .LVU1791
 5235              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5236              		.loc 1 434 43 is_stmt 0 view .LVU1792
 5237 1ef5 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _163, *_160
 5237      00
 5238 1efa 4983FF03 		cmp	r15, 3	# prolog_loop_niters.309,
 5239              	# sieve_extend.c:435:         source_word++;
 435:sieve_extend.c ****         copy_word++;
 5240              		.loc 1 435 20 view .LVU1793
 5241 1efe 4D8D6102 		lea	r12, 2[r9]	# source_word,
 5242              	.LVL207:
 5243              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5244              		.loc 1 434 31 view .LVU1794
 5245 1f02 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_162, _163
 5245      00
 435:sieve_extend.c ****         copy_word++;
 5246              		.loc 1 435 9 is_stmt 1 view .LVU1795
 5247              	.LVL208:
 436:sieve_extend.c ****     }
 5248              		.loc 1 436 9 view .LVU1796
 5249              	# sieve_extend.c:436:         copy_word++;
 436:sieve_extend.c ****     }
 5250              		.loc 1 436 18 is_stmt 0 view .LVU1797
 5251 1f07 4C8D7002 		lea	r14, 2[rax]	# copy_word,
 5252              	.LVL209:
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccfflXEb.s 			page 149


 5253              		.loc 1 433 10 is_stmt 1 view .LVU1798
 5254 1f0b 7512     		jne	.L388	#,
 434:sieve_extend.c ****         source_word++;
 5255              		.loc 1 434 9 view .LVU1799
 5256              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5257              		.loc 1 434 43 is_stmt 0 view .LVU1800
 5258 1f0d 4F8B54E5 		mov	r10, QWORD PTR 0[r13+r12*8]	# _89, *_86
 5258      00
 5259              	# sieve_extend.c:435:         source_word++;
 435:sieve_extend.c ****         copy_word++;
 5260              		.loc 1 435 20 view .LVU1801
 5261 1f12 4D8D6103 		lea	r12, 3[r9]	# source_word,
 5262              	.LVL210:
 5263              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5264              		.loc 1 434 31 view .LVU1802
 5265 1f16 4F8954F5 		mov	QWORD PTR 0[r13+r14*8], r10	# *_88, _89
 5265      00
 435:sieve_extend.c ****         copy_word++;
 5266              		.loc 1 435 9 is_stmt 1 view .LVU1803
 5267              	.LVL211:
 436:sieve_extend.c ****     }
 5268              		.loc 1 436 9 view .LVU1804
 5269              	# sieve_extend.c:436:         copy_word++;
 436:sieve_extend.c ****     }
 5270              		.loc 1 436 18 is_stmt 0 view .LVU1805
 5271 1f1b 4C8D7003 		lea	r14, 3[rax]	# copy_word,
 5272              	.LVL212:
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5273              		.loc 1 433 10 is_stmt 1 view .LVU1806
 5274              	.L388:
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5275              		.loc 1 433 10 is_stmt 0 view .LVU1807
 5276 1f1f 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5276      08
 5277 1f24 4989DB   		mov	r11, rbx	# tmp212, destination_stop_word
 5278 1f27 4D29FB   		sub	r11, r15	# tmp212, prolog_loop_niters.309
 5279 1f2a 4929C3   		sub	r11, rax	# niters.310, ivtmp.341
 5280 1f2d 4C01F8   		add	rax, r15	# tmp215, prolog_loop_niters.309
 5281 1f30 4D89D8   		mov	r8, r11	# bnd.311, niters.310
 5282 1f33 4C01FF   		add	rdi, r15	# source_word, prolog_loop_niters.309
 5283 1f36 49C1E802 		shr	r8, 2	# bnd.311,
 5284 1f3a 4D8D7CC5 		lea	r15, 0[r13+rax*8]	# vectp.319,
 5284      00
 5285 1f3f 49C1E005 		sal	r8, 5	# _182,
 5286              	# sieve_extend.c:423:     counter_t source_word = wordindex(source_start);
 423:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5287              		.loc 1 423 15 view .LVU1808
 5288 1f43 31C0     		xor	eax, eax	# ivtmp.332
 5289 1f45 498D50E0 		lea	rdx, -32[r8]	# tmp228,
 5290 1f49 498D74FD 		lea	rsi, 0[r13+rdi*8]	# vectp.316,
 5290      00
 5291 1f4e 48C1EA05 		shr	rdx, 5	# tmp226,
 5292 1f52 4883C201 		add	rdx, 1	# tmp229,
 5293 1f56 83E207   		and	edx, 7	# tmp230,
 5294 1f59 0F849500 		je	.L390	#,
GAS LISTING /tmp/ccfflXEb.s 			page 150


 5294      0000
 5295 1f5f 4883FA01 		cmp	rdx, 1	# tmp230,
 5296 1f63 7477     		je	.L454	#,
 5297 1f65 4883FA02 		cmp	rdx, 2	# tmp230,
 5298 1f69 7462     		je	.L455	#,
 5299 1f6b 4883FA03 		cmp	rdx, 3	# tmp230,
 5300 1f6f 744D     		je	.L456	#,
 5301 1f71 4883FA04 		cmp	rdx, 4	# tmp230,
 5302 1f75 7438     		je	.L457	#,
 5303 1f77 4883FA05 		cmp	rdx, 5	# tmp230,
 5304 1f7b 7423     		je	.L458	#,
 5305 1f7d 4883FA06 		cmp	rdx, 6	# tmp230,
 5306 1f81 740E     		je	.L459	#,
 434:sieve_extend.c ****         source_word++;
 5307              		.loc 1 434 9 is_stmt 1 view .LVU1809
 5308              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5309              		.loc 1 434 31 is_stmt 0 view .LVU1810
 5310 1f83 C5FD6F0E 		vmovdqa	ymm1, YMMWORD PTR [rsi]	# tmp330, MEM[base: vectp.316_119, index: ivtmp.332_180, offset: 0
 5311 1f87 B8200000 		mov	eax, 32	# ivtmp.332,
 5311      00
 5312 1f8c C4C17E7F 		vmovdqu	YMMWORD PTR [r15], ymm1	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B], tmp3
 5312      0F
 435:sieve_extend.c ****         copy_word++;
 5313              		.loc 1 435 9 is_stmt 1 view .LVU1811
 436:sieve_extend.c ****     }
 5314              		.loc 1 436 9 view .LVU1812
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5315              		.loc 1 433 10 view .LVU1813
 5316              	.L459:
 434:sieve_extend.c ****         source_word++;
 5317              		.loc 1 434 9 view .LVU1814
 5318              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5319              		.loc 1 434 31 is_stmt 0 view .LVU1815
 5320 1f91 C5FD6F3C 		vmovdqa	ymm7, YMMWORD PTR [rsi+rax]	# tmp331, MEM[base: vectp.316_119, index: ivtmp.332_180, offse
 5320      06
 5321 1f96 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm7	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B], 
 5321      3C07
 435:sieve_extend.c ****         copy_word++;
 5322              		.loc 1 435 9 is_stmt 1 view .LVU1816
 436:sieve_extend.c ****     }
 5323              		.loc 1 436 9 view .LVU1817
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5324              		.loc 1 433 10 view .LVU1818
 5325 1f9c 4883C020 		add	rax, 32	# ivtmp.332,
 5326              	.L458:
 434:sieve_extend.c ****         source_word++;
 5327              		.loc 1 434 9 view .LVU1819
 5328              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5329              		.loc 1 434 31 is_stmt 0 view .LVU1820
 5330 1fa0 C5FD6F34 		vmovdqa	ymm6, YMMWORD PTR [rsi+rax]	# tmp332, MEM[base: vectp.316_119, index: ivtmp.332_180, offse
 5330      06
 5331 1fa5 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm6	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B], 
 5331      3407
 435:sieve_extend.c ****         copy_word++;
GAS LISTING /tmp/ccfflXEb.s 			page 151


 5332              		.loc 1 435 9 is_stmt 1 view .LVU1821
 436:sieve_extend.c ****     }
 5333              		.loc 1 436 9 view .LVU1822
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5334              		.loc 1 433 10 view .LVU1823
 5335 1fab 4883C020 		add	rax, 32	# ivtmp.332,
 5336              	.L457:
 434:sieve_extend.c ****         source_word++;
 5337              		.loc 1 434 9 view .LVU1824
 5338              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5339              		.loc 1 434 31 is_stmt 0 view .LVU1825
 5340 1faf C5FD6F2C 		vmovdqa	ymm5, YMMWORD PTR [rsi+rax]	# tmp333, MEM[base: vectp.316_119, index: ivtmp.332_180, offse
 5340      06
 5341 1fb4 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm5	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B], 
 5341      2C07
 435:sieve_extend.c ****         copy_word++;
 5342              		.loc 1 435 9 is_stmt 1 view .LVU1826
 436:sieve_extend.c ****     }
 5343              		.loc 1 436 9 view .LVU1827
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5344              		.loc 1 433 10 view .LVU1828
 5345 1fba 4883C020 		add	rax, 32	# ivtmp.332,
 5346              	.L456:
 434:sieve_extend.c ****         source_word++;
 5347              		.loc 1 434 9 view .LVU1829
 5348              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5349              		.loc 1 434 31 is_stmt 0 view .LVU1830
 5350 1fbe C5FD6F24 		vmovdqa	ymm4, YMMWORD PTR [rsi+rax]	# tmp334, MEM[base: vectp.316_119, index: ivtmp.332_180, offse
 5350      06
 5351 1fc3 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm4	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B], 
 5351      2407
 435:sieve_extend.c ****         copy_word++;
 5352              		.loc 1 435 9 is_stmt 1 view .LVU1831
 436:sieve_extend.c ****     }
 5353              		.loc 1 436 9 view .LVU1832
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5354              		.loc 1 433 10 view .LVU1833
 5355 1fc9 4883C020 		add	rax, 32	# ivtmp.332,
 5356              	.L455:
 434:sieve_extend.c ****         source_word++;
 5357              		.loc 1 434 9 view .LVU1834
 5358              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5359              		.loc 1 434 31 is_stmt 0 view .LVU1835
 5360 1fcd C5FD6F04 		vmovdqa	ymm0, YMMWORD PTR [rsi+rax]	# tmp335, MEM[base: vectp.316_119, index: ivtmp.332_180, offse
 5360      06
 5361 1fd2 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm0	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B], 
 5361      0407
 435:sieve_extend.c ****         copy_word++;
 5362              		.loc 1 435 9 is_stmt 1 view .LVU1836
 436:sieve_extend.c ****     }
 5363              		.loc 1 436 9 view .LVU1837
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5364              		.loc 1 433 10 view .LVU1838
 5365 1fd8 4883C020 		add	rax, 32	# ivtmp.332,
GAS LISTING /tmp/ccfflXEb.s 			page 152


 5366              	.L454:
 434:sieve_extend.c ****         source_word++;
 5367              		.loc 1 434 9 view .LVU1839
 5368              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5369              		.loc 1 434 31 is_stmt 0 view .LVU1840
 5370 1fdc C5FD6F14 		vmovdqa	ymm2, YMMWORD PTR [rsi+rax]	# tmp336, MEM[base: vectp.316_119, index: ivtmp.332_180, offse
 5370      06
 5371 1fe1 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm2	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B], 
 5371      1407
 435:sieve_extend.c ****         copy_word++;
 5372              		.loc 1 435 9 is_stmt 1 view .LVU1841
 436:sieve_extend.c ****     }
 5373              		.loc 1 436 9 view .LVU1842
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5374              		.loc 1 433 10 view .LVU1843
 5375 1fe7 4883C020 		add	rax, 32	# ivtmp.332,
 5376 1feb 4C39C0   		cmp	rax, r8	# ivtmp.332, _182
 5377 1fee 0F848D00 		je	.L491	#,
 5377      0000
 5378              	.L390:
 434:sieve_extend.c ****         source_word++;
 5379              		.loc 1 434 9 view .LVU1844
 5380              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5381              		.loc 1 434 31 is_stmt 0 view .LVU1845
 5382 1ff4 C5FD6F1C 		vmovdqa	ymm3, YMMWORD PTR [rsi+rax]	# tmp319, MEM[base: vectp.316_119, index: ivtmp.332_180, offse
 5382      06
 5383 1ff9 C4C17E7F 		vmovdqu	YMMWORD PTR [r15+rax], ymm3	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B], 
 5383      1C07
 435:sieve_extend.c ****         copy_word++;
 5384              		.loc 1 435 9 is_stmt 1 view .LVU1846
 436:sieve_extend.c ****     }
 5385              		.loc 1 436 9 view .LVU1847
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5386              		.loc 1 433 10 view .LVU1848
 434:sieve_extend.c ****         source_word++;
 5387              		.loc 1 434 9 view .LVU1849
 5388              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5389              		.loc 1 434 31 is_stmt 0 view .LVU1850
 5390 1fff C57D6F44 		vmovdqa	ymm8, YMMWORD PTR 32[rsi+rax]	# tmp320, MEM[base: vectp.316_119, index: ivtmp.332_180, off
 5390      0620
 5391 2005 C4417E7F 		vmovdqu	YMMWORD PTR 32[r15+rax], ymm8	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B]
 5391      440720
 435:sieve_extend.c ****         copy_word++;
 5392              		.loc 1 435 9 is_stmt 1 view .LVU1851
 436:sieve_extend.c ****     }
 5393              		.loc 1 436 9 view .LVU1852
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5394              		.loc 1 433 10 view .LVU1853
 434:sieve_extend.c ****         source_word++;
 5395              		.loc 1 434 9 view .LVU1854
 5396              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5397              		.loc 1 434 31 is_stmt 0 view .LVU1855
 5398 200c C57D6F4C 		vmovdqa	ymm9, YMMWORD PTR 64[rsi+rax]	# tmp321, MEM[base: vectp.316_119, index: ivtmp.332_180, off
GAS LISTING /tmp/ccfflXEb.s 			page 153


 5398      0640
 5399 2012 C4417E7F 		vmovdqu	YMMWORD PTR 64[r15+rax], ymm9	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B]
 5399      4C0740
 435:sieve_extend.c ****         copy_word++;
 5400              		.loc 1 435 9 is_stmt 1 view .LVU1856
 436:sieve_extend.c ****     }
 5401              		.loc 1 436 9 view .LVU1857
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5402              		.loc 1 433 10 view .LVU1858
 434:sieve_extend.c ****         source_word++;
 5403              		.loc 1 434 9 view .LVU1859
 5404              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5405              		.loc 1 434 31 is_stmt 0 view .LVU1860
 5406 2019 C57D6F54 		vmovdqa	ymm10, YMMWORD PTR 96[rsi+rax]	# tmp322, MEM[base: vectp.316_119, index: ivtmp.332_180, of
 5406      0660
 5407 201f C4417E7F 		vmovdqu	YMMWORD PTR 96[r15+rax], ymm10	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0B
 5407      540760
 435:sieve_extend.c ****         copy_word++;
 5408              		.loc 1 435 9 is_stmt 1 view .LVU1861
 436:sieve_extend.c ****     }
 5409              		.loc 1 436 9 view .LVU1862
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5410              		.loc 1 433 10 view .LVU1863
 434:sieve_extend.c ****         source_word++;
 5411              		.loc 1 434 9 view .LVU1864
 5412              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5413              		.loc 1 434 31 is_stmt 0 view .LVU1865
 5414 2026 C57D6F9C 		vmovdqa	ymm11, YMMWORD PTR 128[rsi+rax]	# tmp323, MEM[base: vectp.316_119, index: ivtmp.332_180, o
 5414      06800000 
 5414      00
 5415 202f C4417E7F 		vmovdqu	YMMWORD PTR 128[r15+rax], ymm11	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0
 5415      9C078000 
 5415      0000
 435:sieve_extend.c ****         copy_word++;
 5416              		.loc 1 435 9 is_stmt 1 view .LVU1866
 436:sieve_extend.c ****     }
 5417              		.loc 1 436 9 view .LVU1867
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5418              		.loc 1 433 10 view .LVU1868
 434:sieve_extend.c ****         source_word++;
 5419              		.loc 1 434 9 view .LVU1869
 5420              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5421              		.loc 1 434 31 is_stmt 0 view .LVU1870
 5422 2039 C57D6FA4 		vmovdqa	ymm12, YMMWORD PTR 160[rsi+rax]	# tmp324, MEM[base: vectp.316_119, index: ivtmp.332_180, o
 5422      06A00000 
 5422      00
 5423 2042 C4417E7F 		vmovdqu	YMMWORD PTR 160[r15+rax], ymm12	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0
 5423      A407A000 
 5423      0000
 435:sieve_extend.c ****         copy_word++;
 5424              		.loc 1 435 9 is_stmt 1 view .LVU1871
 436:sieve_extend.c ****     }
 5425              		.loc 1 436 9 view .LVU1872
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccfflXEb.s 			page 154


 5426              		.loc 1 433 10 view .LVU1873
 434:sieve_extend.c ****         source_word++;
 5427              		.loc 1 434 9 view .LVU1874
 5428              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5429              		.loc 1 434 31 is_stmt 0 view .LVU1875
 5430 204c C57D6FAC 		vmovdqa	ymm13, YMMWORD PTR 192[rsi+rax]	# tmp325, MEM[base: vectp.316_119, index: ivtmp.332_180, o
 5430      06C00000 
 5430      00
 5431 2055 C4417E7F 		vmovdqu	YMMWORD PTR 192[r15+rax], ymm13	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0
 5431      AC07C000 
 5431      0000
 435:sieve_extend.c ****         copy_word++;
 5432              		.loc 1 435 9 is_stmt 1 view .LVU1876
 436:sieve_extend.c ****     }
 5433              		.loc 1 436 9 view .LVU1877
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5434              		.loc 1 433 10 view .LVU1878
 434:sieve_extend.c ****         source_word++;
 5435              		.loc 1 434 9 view .LVU1879
 5436              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5437              		.loc 1 434 31 is_stmt 0 view .LVU1880
 5438 205f C57D6FB4 		vmovdqa	ymm14, YMMWORD PTR 224[rsi+rax]	# tmp326, MEM[base: vectp.316_119, index: ivtmp.332_180, o
 5438      06E00000 
 5438      00
 5439 2068 C4417E7F 		vmovdqu	YMMWORD PTR 224[r15+rax], ymm14	# MEM[base: vectp.319_125, index: ivtmp.332_180, offset: 0
 5439      B407E000 
 5439      0000
 435:sieve_extend.c ****         copy_word++;
 5440              		.loc 1 435 9 is_stmt 1 view .LVU1881
 436:sieve_extend.c ****     }
 5441              		.loc 1 436 9 view .LVU1882
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5442              		.loc 1 433 10 view .LVU1883
 5443 2072 48050001 		add	rax, 256	# ivtmp.332,
 5443      0000
 5444 2078 4C39C0   		cmp	rax, r8	# ivtmp.332, _182
 5445 207b 0F8573FF 		jne	.L390	#,
 5445      FFFF
 5446              	.L491:
 5447 2081 4D89D9   		mov	r9, r11	# niters_vector_mult_vf.312, niters.310
 5448 2084 4983E1FC 		and	r9, -4	# niters_vector_mult_vf.312,
 5449 2088 4D01CC   		add	r12, r9	# tmp.313, niters_vector_mult_vf.312
 5450 208b 4D01CE   		add	r14, r9	# tmp.314, niters_vector_mult_vf.312
 5451 208e 4D39CB   		cmp	r11, r9	# niters.310, niters_vector_mult_vf.312
 5452 2091 7455     		je	.L494	#,
 5453              	.LVL213:
 434:sieve_extend.c ****         source_word++;
 5454              		.loc 1 434 9 view .LVU1884
 5455              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5456              		.loc 1 434 43 is_stmt 0 view .LVU1885
 5457 2093 4B8B4CE5 		mov	rcx, QWORD PTR 0[r13+r12*8]	# _37, *_21
 5457      00
 5458              	# sieve_extend.c:436:         copy_word++;
 436:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 155


 5459              		.loc 1 436 18 view .LVU1886
 5460 2098 4D8D5601 		lea	r10, 1[r14]	# copy_word,
 5461              	# sieve_extend.c:435:         source_word++;
 435:sieve_extend.c ****         copy_word++;
 5462              		.loc 1 435 20 view .LVU1887
 5463 209c 4983C401 		add	r12, 1	# source_word,
 5464              	.LVL214:
 5465              	# sieve_extend.c:433:    while (copy_word < destination_stop_word) {
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5466              		.loc 1 433 10 view .LVU1888
 5467 20a0 4C39D3   		cmp	rbx, r10	# destination_stop_word, copy_word
 5468              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5469              		.loc 1 434 31 view .LVU1889
 5470 20a3 4B894CF5 		mov	QWORD PTR 0[r13+r14*8], rcx	# *_23, _37
 5470      00
 435:sieve_extend.c ****         copy_word++;
 5471              		.loc 1 435 9 is_stmt 1 view .LVU1890
 5472              	.LVL215:
 436:sieve_extend.c ****     }
 5473              		.loc 1 436 9 view .LVU1891
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5474              		.loc 1 433 10 view .LVU1892
 5475 20a8 763E     		jbe	.L494	#,
 434:sieve_extend.c ****         source_word++;
 5476              		.loc 1 434 9 view .LVU1893
 5477              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5478              		.loc 1 434 43 is_stmt 0 view .LVU1894
 5479 20aa 4E8D1CE5 		lea	r11, 0[0+r12*8]	# _134,
 5479      00000000 
 5480              	# sieve_extend.c:436:         copy_word++;
 436:sieve_extend.c ****     }
 5481              		.loc 1 436 18 view .LVU1895
 5482 20b2 4983C602 		add	r14, 2	# copy_word,
 5483              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5484              		.loc 1 434 43 view .LVU1896
 5485 20b6 4F8B64E5 		mov	r12, QWORD PTR 0[r13+r12*8]	# _138, *_135
 5485      00
 5486              	# sieve_extend.c:433:    while (copy_word < destination_stop_word) {
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5487              		.loc 1 433 10 view .LVU1897
 5488 20bb 4C39F3   		cmp	rbx, r14	# destination_stop_word, copy_word
 5489              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5490              		.loc 1 434 31 view .LVU1898
 5491 20be 4F8964D5 		mov	QWORD PTR 0[r13+r10*8], r12	# *_137, _138
 5491      00
 435:sieve_extend.c ****         copy_word++;
 5492              		.loc 1 435 9 is_stmt 1 view .LVU1899
 436:sieve_extend.c ****     }
 5493              		.loc 1 436 9 view .LVU1900
 5494              	.LVL216:
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5495              		.loc 1 433 10 view .LVU1901
 5496 20c3 7623     		jbe	.L494	#,
GAS LISTING /tmp/ccfflXEb.s 			page 156


 434:sieve_extend.c ****         source_word++;
 5497              		.loc 1 434 9 view .LVU1902
 5498              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5499              		.loc 1 434 43 is_stmt 0 view .LVU1903
 5500 20c5 4B8B5C1D 		mov	rbx, QWORD PTR 8[r13+r11]	# _109, *_106
 5500      08
 5501              	.LVL217:
 5502              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5503              		.loc 1 434 31 view .LVU1904
 5504 20ca 4B895CF5 		mov	QWORD PTR 0[r13+r14*8], rbx	# *_108, _109
 5504      00
 435:sieve_extend.c ****         copy_word++;
 5505              		.loc 1 435 9 is_stmt 1 view .LVU1905
 436:sieve_extend.c ****     }
 5506              		.loc 1 436 9 view .LVU1906
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5507              		.loc 1 433 10 view .LVU1907
 5508 20cf C5F877   		vzeroupper
 5509              	.LVL218:
 5510              	.L495:
 5511              	# sieve_extend.c:439: }
 439:sieve_extend.c **** 
 5512              		.loc 1 439 1 is_stmt 0 view .LVU1908
 5513 20d2 488D65D8 		lea	rsp, -40[rbp]	#,
 5514 20d6 5B       		pop	rbx	#
 5515 20d7 415C     		pop	r12	#
 5516 20d9 415D     		pop	r13	#
 5517 20db 415E     		pop	r14	#
 5518 20dd 415F     		pop	r15	#
 5519 20df 5D       		pop	rbp	#
 5520              		.cfi_remember_state
 5521              		.cfi_def_cfa 7, 8
 5522 20e0 C3       		ret	
 5523              	.LVL219:
 5524              		.p2align 4,,7
 5525 20e1 0F1F8000 		.p2align 3
 5525      000000
 5526              	.L494:
 5527              		.cfi_restore_state
 439:sieve_extend.c **** 
 5528              		.loc 1 439 1 view .LVU1909
 5529 20e8 C5F877   		vzeroupper
 5530 20eb 488D65D8 		lea	rsp, -40[rbp]	#,
 5531 20ef 5B       		pop	rbx	#
 5532              	.LVL220:
 439:sieve_extend.c **** 
 5533              		.loc 1 439 1 view .LVU1910
 5534 20f0 415C     		pop	r12	#
 5535 20f2 415D     		pop	r13	#
 5536              	.LVL221:
 439:sieve_extend.c **** 
 5537              		.loc 1 439 1 view .LVU1911
 5538 20f4 415E     		pop	r14	#
 5539 20f6 415F     		pop	r15	#
 5540 20f8 5D       		pop	rbp	#
GAS LISTING /tmp/ccfflXEb.s 			page 157


 5541              		.cfi_remember_state
 5542              		.cfi_def_cfa 7, 8
 5543 20f9 C3       		ret	
 5544              	.LVL222:
 5545 20fa 660F1F44 		.p2align 4,,7
 5545      0000
 5546              		.p2align 3
 5547              	.L387:
 5548              		.cfi_restore_state
 5549              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5550              		.loc 1 434 43 view .LVU1912
 5551 2100 488B7C24 		mov	rdi, QWORD PTR 8[rsp]	# source_word, %sfp
 5551      08
 5552 2105 4F8D7425 		lea	r14, 0[r13+r12]	# ivtmp.327,
 5552      00
 5553 210a 4D8D6CDD 		lea	r13, 0[r13+rbx*8]	# _179,
 5553      00
 5554              	.LVL223:
 434:sieve_extend.c ****         source_word++;
 5555              		.loc 1 434 43 view .LVU1913
 5556 210f 4C89EE   		mov	rsi, r13	# tmp221, _179
 5557 2112 4C29F6   		sub	rsi, r14	# tmp221, ivtmp.327
 5558 2115 4829C7   		sub	rdi, rax	# source_word, ivtmp.341
 5559 2118 4883EE08 		sub	rsi, 8	# tmp222,
 5560 211c 48C1EE03 		shr	rsi, 3	# tmp220,
 5561 2120 4883C601 		add	rsi, 1	# tmp223,
 5562 2124 83E607   		and	esi, 7	# tmp224,
 5563 2127 0F848100 		je	.L392	#,
 5563      0000
 5564 212d 4883FE01 		cmp	rsi, 1	# tmp224,
 5565 2131 7466     		je	.L460	#,
 5566 2133 4883FE02 		cmp	rsi, 2	# tmp224,
 5567 2137 7454     		je	.L461	#,
 5568 2139 4883FE03 		cmp	rsi, 3	# tmp224,
 5569 213d 7442     		je	.L462	#,
 5570 213f 4883FE04 		cmp	rsi, 4	# tmp224,
 5571 2143 7430     		je	.L463	#,
 5572 2145 4883FE05 		cmp	rsi, 5	# tmp224,
 5573 2149 741E     		je	.L464	#,
 5574 214b 4883FE06 		cmp	rsi, 6	# tmp224,
 5575 214f 740C     		je	.L465	#,
 5576              	.LVL224:
 434:sieve_extend.c ****         source_word++;
 5577              		.loc 1 434 9 is_stmt 1 view .LVU1914
 5578              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5579              		.loc 1 434 43 is_stmt 0 view .LVU1915
 5580 2151 4D8B3CFE 		mov	r15, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5581 2155 4983C608 		add	r14, 8	# ivtmp.327,
 5582              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5583              		.loc 1 434 31 view .LVU1916
 5584 2159 4D897EF8 		mov	QWORD PTR -8[r14], r15	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5585              		.loc 1 435 9 is_stmt 1 view .LVU1917
 436:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 158


 5586              		.loc 1 436 9 view .LVU1918
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5587              		.loc 1 433 10 view .LVU1919
 5588              	.L465:
 434:sieve_extend.c ****         source_word++;
 5589              		.loc 1 434 9 view .LVU1920
 5590              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5591              		.loc 1 434 43 is_stmt 0 view .LVU1921
 5592 215d 4D8B04FE 		mov	r8, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5593 2161 4983C608 		add	r14, 8	# ivtmp.327,
 5594              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5595              		.loc 1 434 31 view .LVU1922
 5596 2165 4D8946F8 		mov	QWORD PTR -8[r14], r8	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5597              		.loc 1 435 9 is_stmt 1 view .LVU1923
 436:sieve_extend.c ****     }
 5598              		.loc 1 436 9 view .LVU1924
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5599              		.loc 1 433 10 view .LVU1925
 5600              	.L464:
 434:sieve_extend.c ****         source_word++;
 5601              		.loc 1 434 9 view .LVU1926
 5602              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5603              		.loc 1 434 43 is_stmt 0 view .LVU1927
 5604 2169 498B14FE 		mov	rdx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5605 216d 4983C608 		add	r14, 8	# ivtmp.327,
 5606              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5607              		.loc 1 434 31 view .LVU1928
 5608 2171 498956F8 		mov	QWORD PTR -8[r14], rdx	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5609              		.loc 1 435 9 is_stmt 1 view .LVU1929
 436:sieve_extend.c ****     }
 5610              		.loc 1 436 9 view .LVU1930
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5611              		.loc 1 433 10 view .LVU1931
 5612              	.L463:
 434:sieve_extend.c ****         source_word++;
 5613              		.loc 1 434 9 view .LVU1932
 5614              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5615              		.loc 1 434 43 is_stmt 0 view .LVU1933
 5616 2175 498B04FE 		mov	rax, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5617 2179 4983C608 		add	r14, 8	# ivtmp.327,
 5618              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5619              		.loc 1 434 31 view .LVU1934
 5620 217d 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5621              		.loc 1 435 9 is_stmt 1 view .LVU1935
 436:sieve_extend.c ****     }
 5622              		.loc 1 436 9 view .LVU1936
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5623              		.loc 1 433 10 view .LVU1937
GAS LISTING /tmp/ccfflXEb.s 			page 159


 5624              	.L462:
 434:sieve_extend.c ****         source_word++;
 5625              		.loc 1 434 9 view .LVU1938
 5626              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5627              		.loc 1 434 43 is_stmt 0 view .LVU1939
 5628 2181 4D8B0CFE 		mov	r9, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5629 2185 4983C608 		add	r14, 8	# ivtmp.327,
 5630              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5631              		.loc 1 434 31 view .LVU1940
 5632 2189 4D894EF8 		mov	QWORD PTR -8[r14], r9	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5633              		.loc 1 435 9 is_stmt 1 view .LVU1941
 436:sieve_extend.c ****     }
 5634              		.loc 1 436 9 view .LVU1942
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5635              		.loc 1 433 10 view .LVU1943
 5636              	.L461:
 434:sieve_extend.c ****         source_word++;
 5637              		.loc 1 434 9 view .LVU1944
 5638              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5639              		.loc 1 434 43 is_stmt 0 view .LVU1945
 5640 218d 498B0CFE 		mov	rcx, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5641 2191 4983C608 		add	r14, 8	# ivtmp.327,
 5642              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5643              		.loc 1 434 31 view .LVU1946
 5644 2195 49894EF8 		mov	QWORD PTR -8[r14], rcx	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5645              		.loc 1 435 9 is_stmt 1 view .LVU1947
 436:sieve_extend.c ****     }
 5646              		.loc 1 436 9 view .LVU1948
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5647              		.loc 1 433 10 view .LVU1949
 5648              	.L460:
 434:sieve_extend.c ****         source_word++;
 5649              		.loc 1 434 9 view .LVU1950
 5650              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5651              		.loc 1 434 43 is_stmt 0 view .LVU1951
 5652 2199 4D8B14FE 		mov	r10, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5653 219d 4983C608 		add	r14, 8	# ivtmp.327,
 5654              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5655              		.loc 1 434 31 view .LVU1952
 5656 21a1 4D8956F8 		mov	QWORD PTR -8[r14], r10	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5657              		.loc 1 435 9 is_stmt 1 view .LVU1953
 436:sieve_extend.c ****     }
 5658              		.loc 1 436 9 view .LVU1954
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5659              		.loc 1 433 10 view .LVU1955
 5660 21a5 4D39EE   		cmp	r14, r13	# ivtmp.327, _179
 5661 21a8 0F8424FF 		je	.L495	#,
 5661      FFFF
GAS LISTING /tmp/ccfflXEb.s 			page 160


 5662              	.LVL225:
 5663              	.L392:
 434:sieve_extend.c ****         source_word++;
 5664              		.loc 1 434 9 view .LVU1956
 5665              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5666              		.loc 1 434 43 is_stmt 0 view .LVU1957
 5667 21ae 4D8B1CFE 		mov	r11, QWORD PTR [r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5668              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5669              		.loc 1 434 31 view .LVU1958
 5670 21b2 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5671              		.loc 1 435 9 is_stmt 1 view .LVU1959
 436:sieve_extend.c ****     }
 5672              		.loc 1 436 9 view .LVU1960
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5673              		.loc 1 433 10 view .LVU1961
 434:sieve_extend.c ****         source_word++;
 5674              		.loc 1 434 9 view .LVU1962
 5675              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5676              		.loc 1 434 43 is_stmt 0 view .LVU1963
 5677 21b5 4D8B64FE 		mov	r12, QWORD PTR 8[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5677      08
 5678              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5679              		.loc 1 434 31 view .LVU1964
 5680 21ba 4D896608 		mov	QWORD PTR 8[r14], r12	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5681              		.loc 1 435 9 is_stmt 1 view .LVU1965
 436:sieve_extend.c ****     }
 5682              		.loc 1 436 9 view .LVU1966
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5683              		.loc 1 433 10 view .LVU1967
 434:sieve_extend.c ****         source_word++;
 5684              		.loc 1 434 9 view .LVU1968
 5685              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5686              		.loc 1 434 43 is_stmt 0 view .LVU1969
 5687 21be 498B5CFE 		mov	rbx, QWORD PTR 16[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5687      10
 5688              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5689              		.loc 1 434 31 view .LVU1970
 5690 21c3 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5691              		.loc 1 435 9 is_stmt 1 view .LVU1971
 436:sieve_extend.c ****     }
 5692              		.loc 1 436 9 view .LVU1972
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5693              		.loc 1 433 10 view .LVU1973
 434:sieve_extend.c ****         source_word++;
 5694              		.loc 1 434 9 view .LVU1974
 5695              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5696              		.loc 1 434 43 is_stmt 0 view .LVU1975
GAS LISTING /tmp/ccfflXEb.s 			page 161


 5697 21c7 498B74FE 		mov	rsi, QWORD PTR 24[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5697      18
 5698              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5699              		.loc 1 434 31 view .LVU1976
 5700 21cc 49897618 		mov	QWORD PTR 24[r14], rsi	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5701              		.loc 1 435 9 is_stmt 1 view .LVU1977
 436:sieve_extend.c ****     }
 5702              		.loc 1 436 9 view .LVU1978
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5703              		.loc 1 433 10 view .LVU1979
 434:sieve_extend.c ****         source_word++;
 5704              		.loc 1 434 9 view .LVU1980
 5705              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5706              		.loc 1 434 43 is_stmt 0 view .LVU1981
 5707 21d0 4D8B7CFE 		mov	r15, QWORD PTR 32[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5707      20
 5708              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5709              		.loc 1 434 31 view .LVU1982
 5710 21d5 4D897E20 		mov	QWORD PTR 32[r14], r15	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5711              		.loc 1 435 9 is_stmt 1 view .LVU1983
 436:sieve_extend.c ****     }
 5712              		.loc 1 436 9 view .LVU1984
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5713              		.loc 1 433 10 view .LVU1985
 434:sieve_extend.c ****         source_word++;
 5714              		.loc 1 434 9 view .LVU1986
 5715              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5716              		.loc 1 434 43 is_stmt 0 view .LVU1987
 5717 21d9 4D8B44FE 		mov	r8, QWORD PTR 40[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5717      28
 5718              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5719              		.loc 1 434 31 view .LVU1988
 5720 21de 4D894628 		mov	QWORD PTR 40[r14], r8	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5721              		.loc 1 435 9 is_stmt 1 view .LVU1989
 436:sieve_extend.c ****     }
 5722              		.loc 1 436 9 view .LVU1990
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5723              		.loc 1 433 10 view .LVU1991
 434:sieve_extend.c ****         source_word++;
 5724              		.loc 1 434 9 view .LVU1992
 5725              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5726              		.loc 1 434 43 is_stmt 0 view .LVU1993
 5727 21e2 498B54FE 		mov	rdx, QWORD PTR 48[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5727      30
 5728              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5729              		.loc 1 434 31 view .LVU1994
 5730 21e7 49895630 		mov	QWORD PTR 48[r14], rdx	# MEM[base: _174, offset: 0B], _70
GAS LISTING /tmp/ccfflXEb.s 			page 162


 435:sieve_extend.c ****         copy_word++;
 5731              		.loc 1 435 9 is_stmt 1 view .LVU1995
 436:sieve_extend.c ****     }
 5732              		.loc 1 436 9 view .LVU1996
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5733              		.loc 1 433 10 view .LVU1997
 434:sieve_extend.c ****         source_word++;
 5734              		.loc 1 434 9 view .LVU1998
 5735              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5736              		.loc 1 434 43 is_stmt 0 view .LVU1999
 5737 21eb 498B44FE 		mov	rax, QWORD PTR 56[r14+rdi*8]	# _70, MEM[base: _174, index: _175, step: 8, offset: 0B]
 5737      38
 5738 21f0 4983C640 		add	r14, 64	# ivtmp.327,
 5739              	# sieve_extend.c:434:         bitstorage[copy_word] = bitstorage[source_word];
 434:sieve_extend.c ****         source_word++;
 5740              		.loc 1 434 31 view .LVU2000
 5741 21f4 498946F8 		mov	QWORD PTR -8[r14], rax	# MEM[base: _174, offset: 0B], _70
 435:sieve_extend.c ****         copy_word++;
 5742              		.loc 1 435 9 is_stmt 1 view .LVU2001
 436:sieve_extend.c ****     }
 5743              		.loc 1 436 9 view .LVU2002
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5744              		.loc 1 433 10 view .LVU2003
 5745 21f8 4D39EE   		cmp	r14, r13	# ivtmp.327, _179
 5746 21fb 75B1     		jne	.L392	#,
 5747 21fd E9D0FEFF 		jmp	.L495	#
 5747      FF
 5748              	.LVL226:
 5749              		.p2align 4,,7
 5750 2202 660F1F44 		.p2align 3
 5750      0000
 5751              	.L394:
 5752              	# sieve_extend.c:423:     counter_t source_word = wordindex(source_start);
 423:sieve_extend.c ****     counter_t copy_word = wordindex(copy_start);
 5753              		.loc 1 423 15 is_stmt 0 view .LVU2004
 5754 2208 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# source_word, %sfp
 5754      08
 5755              	# sieve_extend.c:433:    while (copy_word < destination_stop_word) {
 433:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 5756              		.loc 1 433 10 view .LVU2005
 5757 220d 4989C6   		mov	r14, rax	# copy_word, ivtmp.341
 5758 2210 E90AFDFF 		jmp	.L388	#
 5758      FF
 5759              		.cfi_endproc
 5760              	.LFE67:
 5762 2215 66662E0F 		.p2align 4
 5762      1F840000 
 5762      000000
 5764              	extendSieve_shiftleft:
 5765              	.LVL227:
 5766              	.LFB72:
 639:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5767              		.loc 1 639 144 is_stmt 1 view -0
 5768              		.cfi_startproc
 640:sieve_extend.c **** 
 5769              		.loc 1 640 5 view .LVU2007
GAS LISTING /tmp/ccfflXEb.s 			page 163


 642:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5770              		.loc 1 642 5 view .LVU2008
 5771              	# sieve_extend.c:639: static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t sour
 639:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5772              		.loc 1 639 144 is_stmt 0 view .LVU2009
 5773 2220 55       		push	rbp	#
 5774              		.cfi_def_cfa_offset 16
 5775              		.cfi_offset 6, -16
 5776              	# sieve_extend.c:642:     const counter_t destination_stop_word = wordindex(destination_stop);
 642:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5777              		.loc 1 642 21 view .LVU2010
 5778 2221 48C1E906 		shr	rcx, 6	# tmp1104,
 5779              	.LVL228:
 5780              	# sieve_extend.c:643:     const counter_t copy_start = source_start + size;
 643:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5781              		.loc 1 643 21 view .LVU2011
 5782 2225 4C8D0416 		lea	r8, [rsi+rdx]	# copy_start,
 5783              	# sieve_extend.c:639: static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t sour
 639:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5784              		.loc 1 639 144 view .LVU2012
 5785 2229 4889E5   		mov	rbp, rsp	#,
 5786              		.cfi_def_cfa_register 6
 5787 222c 4989D2   		mov	r10, rdx	# size, tmp1103
 5788 222f 4157     		push	r15	#
 5789              	# sieve_extend.c:647:     register counter_t copy_word = wordindex(copy_start);
 647:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 5790              		.loc 1 647 24 view .LVU2013
 5791 2231 4D89C3   		mov	r11, r8	# copy_word, copy_start
 5792              	# sieve_extend.c:639: static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t sour
 639:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5793              		.loc 1 639 144 view .LVU2014
 5794 2234 4156     		push	r14	#
 5795              	# sieve_extend.c:647:     register counter_t copy_word = wordindex(copy_start);
 647:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 5796              		.loc 1 647 24 view .LVU2015
 5797 2236 49C1EB06 		shr	r11, 6	# copy_word,
 5798              		.cfi_offset 15, -24
 5799              		.cfi_offset 14, -32
 5800              	# sieve_extend.c:642:     const counter_t destination_stop_word = wordindex(destination_stop);
 642:sieve_extend.c ****     const counter_t copy_start = source_start + size;
 5801              		.loc 1 642 21 view .LVU2016
 5802 223a 4989CE   		mov	r14, rcx	# destination_stop_word, tmp1104
 5803              	# sieve_extend.c:639: static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t sour
 639:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5804              		.loc 1 639 144 view .LVU2017
 5805 223d 4155     		push	r13	#
 5806 223f 4154     		push	r12	#
 5807 2241 53       		push	rbx	#
 5808              		.cfi_offset 13, -40
 5809              		.cfi_offset 12, -48
 5810              		.cfi_offset 3, -56
 5811 2242 4889FB   		mov	rbx, rdi	# bitstorage, tmp1101
 5812 2245 4883E4E0 		and	rsp, -32	#,
 5813 2249 488D6424 		lea	rsp, -96[rsp]	#,
 5813      A0
 5814              	# sieve_extend.c:642:     const counter_t destination_stop_word = wordindex(destination_stop);
 642:sieve_extend.c ****     const counter_t copy_start = source_start + size;
GAS LISTING /tmp/ccfflXEb.s 			page 164


 5815              		.loc 1 642 21 view .LVU2018
 5816 224e 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, destination_stop_word
 5816      58
 5817              	.LVL229:
 643:sieve_extend.c ****     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_calc(copy_start);
 5818              		.loc 1 643 5 is_stmt 1 view .LVU2019
 644:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5819              		.loc 1 644 5 view .LVU2020
 5820              	# sieve_extend.c:644:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 644:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5821              		.loc 1 644 39 is_stmt 0 view .LVU2021
 5822 2253 4889F1   		mov	rcx, rsi	# _4, source_start
 5823              	.LVL230:
 5824              	# sieve_extend.c:646:     register counter_t source_word = wordindex(source_start);
 646:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5825              		.loc 1 646 24 view .LVU2022
 5826 2256 48C1EE06 		shr	rsi, 6	# source_start,
 5827              	.LVL231:
 5828              	# sieve_extend.c:644:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 644:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5829              		.loc 1 644 39 view .LVU2023
 5830 225a 83E13F   		and	ecx, 63	# _4,
 5831              	.LVL232:
 5832              	# sieve_extend.c:639: static void extendSieve_shiftleft(bitword_t* bitstorage, const counter_t sour
 639:sieve_extend.c ****     debug printf("Extending sieve size %ju in %ju bit range (%ju-%ju) using shiftleft (%ju copies)\
 5833              		.loc 1 639 144 view .LVU2024
 5834 225d 48895424 		mov	QWORD PTR 24[rsp], rdx	# %sfp, size
 5834      18
 5835              	# sieve_extend.c:646:     register counter_t source_word = wordindex(source_start);
 646:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5836              		.loc 1 646 24 view .LVU2025
 5837 2262 4989F1   		mov	r9, rsi	# source_word, source_start
 5838              	# sieve_extend.c:644:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 644:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5839              		.loc 1 644 69 view .LVU2026
 5840 2265 4C89C2   		mov	rdx, r8	# _5, copy_start
 5841              	.LVL233:
 5842              	# sieve_extend.c:644:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 644:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5843              		.loc 1 644 31 view .LVU2027
 5844 2268 4989CF   		mov	r15, rcx	# shift, _4
 5845              	# sieve_extend.c:649:                              | (bitstorage[source_word+1] << shift_flipped))
 649:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5846              		.loc 1 649 43 view .LVU2028
 5847 226b 4D8D6101 		lea	r12, 1[r9]	# tmp.368,
 5848              	# sieve_extend.c:644:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 644:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5849              		.loc 1 644 69 view .LVU2029
 5850 226f 83E23F   		and	edx, 63	# _5,
 5851              	.LVL234:
 645:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5852              		.loc 1 645 5 is_stmt 1 view .LVU2030
 646:sieve_extend.c ****     register counter_t copy_word = wordindex(copy_start);
 5853              		.loc 1 646 5 view .LVU2031
 647:sieve_extend.c ****     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 5854              		.loc 1 647 5 view .LVU2032
 648:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
GAS LISTING /tmp/ccfflXEb.s 			page 165


 5855              		.loc 1 648 5 view .LVU2033
 5856              	# sieve_extend.c:644:     register const bitshift_t shift = bitindex_calc(source_start) - bitindex_
 644:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5857              		.loc 1 644 31 is_stmt 0 view .LVU2034
 5858 2272 4929D7   		sub	r15, rdx	# shift, _5
 5859              	.LVL235:
 5860              	# sieve_extend.c:655:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 655:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitstorage, aligned_copy_word, shift
 5861              		.loc 1 655 41 view .LVU2035
 5862 2275 4F8D1414 		lea	r10, [r12+r10]	# tmp563,
 5863              	.LVL236:
 5864              	# sieve_extend.c:648:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 648:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 5865              		.loc 1 648 27 view .LVU2036
 5866 2279 4A8D34DD 		lea	rsi, 0[0+r11*8]	# _6,
 5866      00000000 
 5867              	# sieve_extend.c:645:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 645:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5868              		.loc 1 645 31 view .LVU2037
 5869 2281 4829CA   		sub	rdx, rcx	# tmp550, _4
 5870              	.LVL237:
 5871              	# sieve_extend.c:648:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 648:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 5872              		.loc 1 648 42 view .LVU2038
 5873 2284 4A8D04CD 		lea	rax, 0[0+r9*8]	# _9,
 5873      00000000 
 5874              	# sieve_extend.c:645:     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 645:sieve_extend.c ****     register counter_t source_word = wordindex(source_start);
 5875              		.loc 1 645 31 view .LVU2039
 5876 228c 4883C240 		add	rdx, 64	# shift_flipped,
 5877              	.LVL238:
 5878              	# sieve_extend.c:650:                              & ~chopmask(copy_start); // because this is the 
 650:sieve_extend.c **** 
 5879              		.loc 1 650 33 view .LVU2040
 5880 2290 41F7D0   		not	r8d	# tmp557
 5881              	.LVL239:
 5882              	# sieve_extend.c:649:                              | (bitstorage[source_word+1] << shift_flipped))
 649:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5883              		.loc 1 649 59 view .LVU2041
 5884 2293 C462E9F7 		shlx	r13, QWORD PTR 8[rdi+rax], rdx	# tmp552, *_16, shift_flipped
 5884      6C0708
 5885              	# sieve_extend.c:648:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 648:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 5886              		.loc 1 648 56 view .LVU2042
 5887 229a 4A8B3CCF 		mov	rdi, QWORD PTR [rdi+r9*8]	# *_10, *_10
 5888              	.LVL240:
 5889              	# sieve_extend.c:650:                              & ~chopmask(copy_start); // because this is the 
 650:sieve_extend.c **** 
 5890              		.loc 1 650 33 view .LVU2043
 5891 229e 48C7C1FF 		mov	rcx, -1	# tmp560,
 5891      FFFFFF
 5892              	# sieve_extend.c:648:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 648:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 5893              		.loc 1 648 56 view .LVU2044
 5894 22a5 C46283F7 		shrx	r9, rdi, r15	# tmp554, *_10, shift
 5894      CF
 5895              	# sieve_extend.c:650:                              & ~chopmask(copy_start); // because this is the 
GAS LISTING /tmp/ccfflXEb.s 			page 166


 650:sieve_extend.c **** 
 5896              		.loc 1 650 33 view .LVU2045
 5897 22aa C462BBF7 		shrx	r8, rcx, r8	# tmp559, tmp560, tmp557
 5897      C1
 5898              	# sieve_extend.c:648:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 648:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 5899              		.loc 1 648 56 view .LVU2046
 5900 22af 44897C24 		mov	DWORD PTR 72[rsp], r15d	# %sfp, shift
 5900      48
 5901              	# sieve_extend.c:649:                              | (bitstorage[source_word+1] << shift_flipped))
 649:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5902              		.loc 1 649 30 view .LVU2047
 5903 22b4 4D09E9   		or	r9, r13	# tmp556, tmp552
 5904              	# sieve_extend.c:650:                              & ~chopmask(copy_start); // because this is the 
 650:sieve_extend.c **** 
 5905              		.loc 1 650 30 view .LVU2048
 5906 22b7 C442B8F2 		andn	r13, r8, r9	# tmp562, tmp559, tmp556
 5906      E9
 5907              	# sieve_extend.c:648:     bitstorage[copy_word] |= ((bitstorage[source_word] >> shift)
 648:sieve_extend.c ****                              | (bitstorage[source_word+1] << shift_flipped))
 5908              		.loc 1 648 27 view .LVU2049
 5909 22bc 4C092C33 		or	QWORD PTR [rbx+rsi], r13	# *_7, tmp562
 652:sieve_extend.c ****     source_word++;
 5910              		.loc 1 652 5 is_stmt 1 view .LVU2050
 5911              	# sieve_extend.c:655:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 655:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitstorage, aligned_copy_word, shift
 5912              		.loc 1 655 21 is_stmt 0 view .LVU2051
 5913 22c0 4D39F2   		cmp	r10, r14	# tmp563, destination_stop_word
 5914              	.LBB359:
 5915              	.LBB360:
 5916              	# sieve_extend.c:554:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 554:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5917              		.loc 1 554 91 view .LVU2052
 5918 22c3 41B90200 		mov	r9d, 2	# tmp564,
 5918      0000
 5919              	.LBE360:
 5920              	.LBE359:
 5921              	# sieve_extend.c:649:                              | (bitstorage[source_word+1] << shift_flipped))
 649:sieve_extend.c ****                              & ~chopmask(copy_start); // because this is the first word, dont copy 
 5922              		.loc 1 649 59 view .LVU2053
 5923 22c9 89542440 		mov	DWORD PTR 64[rsp], edx	# %sfp, shift_flipped
 5924              	# sieve_extend.c:652:     copy_word++;
 652:sieve_extend.c ****     source_word++;
 5925              		.loc 1 652 14 view .LVU2054
 5926 22cd 4D8D6B01 		lea	r13, 1[r11]	# tmp.369,
 5927              	.LVL241:
 653:sieve_extend.c **** 
 5928              		.loc 1 653 5 is_stmt 1 view .LVU2055
 655:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitstorage, aligned_copy_word, shift
 5929              		.loc 1 655 5 view .LVU2056
 5930              	# sieve_extend.c:655:     const counter_t aligned_copy_word = min(source_word + size, destination_s
 655:sieve_extend.c ****     const counter_t distance  = extendSieve_shiftleft_unrolled(bitstorage, aligned_copy_word, shift
 5931              		.loc 1 655 21 is_stmt 0 view .LVU2057
 5932 22d1 4D0F47D6 		cmova	r10, r14	# tmp563,, tmp563, destination_stop_word
 5933 22d5 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, aligned_copy_word
 5933      50
 5934              	.LVL242:
GAS LISTING /tmp/ccfflXEb.s 			page 167


 656:sieve_extend.c ****     source_word += distance;
 5935              		.loc 1 656 5 is_stmt 1 view .LVU2058
 5936              	.LBB385:
 5937              	.LBI359:
 553:sieve_extend.c ****     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_copy_word - 2) : 0; // s
 5938              		.loc 1 553 25 view .LVU2059
 5939              	.LBB382:
 554:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5940              		.loc 1 554 5 view .LVU2060
 5941              	# sieve_extend.c:554:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 554:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5942              		.loc 1 554 91 is_stmt 0 view .LVU2061
 5943 22da 4983FA02 		cmp	r10, 2	# aligned_copy_word,
 5944 22de 4D0F43CA 		cmovnb	r9, r10	# aligned_copy_word,, _86
 5945              	# sieve_extend.c:554:     const counter_t fast_loop_stop_word = (aligned_copy_word>2) ? (aligned_co
 554:sieve_extend.c ****     register const bitshift_t shift_flipped = WORD_SIZE_bitshift-shift;
 5946              		.loc 1 554 21 view .LVU2062
 5947 22e2 498D79FE 		lea	rdi, -2[r9]	# fast_loop_stop_word,
 5948 22e6 48897C24 		mov	QWORD PTR 48[rsp], rdi	# %sfp, fast_loop_stop_word
 5948      30
 5949              	.LVL243:
 555:sieve_extend.c ****     counter_t distance = 0;
 5950              		.loc 1 555 5 is_stmt 1 view .LVU2063
 556:sieve_extend.c ****     while (copy_word < fast_loop_stop_word) {
 5951              		.loc 1 556 5 view .LVU2064
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 5952              		.loc 1 557 5 view .LVU2065
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 5953              		.loc 1 557 11 view .LVU2066
 5954 22eb 4939FD   		cmp	r13, rdi	# tmp.369, fast_loop_stop_word
 5955 22ee 0F83A004 		jnb	.L498	#,
 5955      0000
 5956 22f4 4D29D9   		sub	r9, r11	# tmp565, copy_word
 5957 22f7 4C8D5040 		lea	r10, 64[rax]	# tmp567,
 5958              	.LVL244:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 5959              		.loc 1 557 11 is_stmt 0 view .LVU2067
 5960 22fb 4C8D4610 		lea	r8, 16[rsi]	# tmp568,
 5961 22ff 498D49FC 		lea	rcx, -4[r9]	# _282,
 5962 2303 4C8D7648 		lea	r14, 72[rsi]	# tmp571,
 5963              	.LVL245:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 5964              		.loc 1 557 11 view .LVU2068
 5965 2307 4D39C2   		cmp	r10, r8	# tmp567, tmp568
 5966 230a 48894C24 		mov	QWORD PTR 56[rsp], rcx	# %sfp, _282
 5966      38
 5967 230f 488D4808 		lea	rcx, 8[rax]	# tmp787,
 5968 2313 410F9EC1 		setle	r9b	#, tmp570
 5969 2317 4939CE   		cmp	r14, rcx	# tmp571, tmp787
 5970 231a 400F9EC7 		setle	dil	#, tmp574
 5971              	.LVL246:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 5972              		.loc 1 557 11 view .LVU2069
 5973 231e 4109F9   		or	r9d, edi	# tmp575, tmp574
 5974 2321 488D7850 		lea	rdi, 80[rax]	# tmp576,
 5975 2325 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp576
 5975      28
GAS LISTING /tmp/ccfflXEb.s 			page 168


 5976 232a 4C39C7   		cmp	rdi, r8	# tmp576, tmp568
 5977 232d 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 5977      27
 5978 2332 4883C010 		add	rax, 16	# tmp581,
 5979 2336 4939C6   		cmp	r14, rax	# tmp571, tmp581
 5980 2339 400F9EC7 		setle	dil	#, tmp583
 5981 233d 400A7C24 		or	dil, BYTE PTR 39[rsp]	# tmp584, %sfp
 5981      27
 5982 2342 4421CF   		and	edi, r9d	# tmp585, tmp575
 5983 2345 48837C24 		cmp	QWORD PTR 56[rsp], 11	# %sfp,
 5983      380B
 5984 234b 410F97C1 		seta	r9b	#, tmp587
 5985 234f 4421CF   		and	edi, r9d	# tmp588, tmp587
 5986 2352 4C8D4E08 		lea	r9, 8[rsi]	# tmp590,
 5987 2356 4D39CA   		cmp	r10, r9	# tmp567, tmp590
 5988 2359 410F9EC2 		setle	r10b	#, tmp592
 5989 235d 4883C640 		add	rsi, 64	# tmp593,
 5990 2361 4839CE   		cmp	rsi, rcx	# tmp593, tmp787
 5991 2364 0F9E4424 		setle	BYTE PTR 39[rsp]	#, %sfp
 5991      27
 5992 2369 440A5424 		or	r10b, BYTE PTR 39[rsp]	# tmp597, %sfp
 5992      27
 5993 236e 4421D7   		and	edi, r10d	# tmp598, tmp597
 5994 2371 4C394C24 		cmp	QWORD PTR 40[rsp], r9	# %sfp, tmp590
 5994      28
 5995 2376 410F9EC2 		setle	r10b	#, tmp602
 5996 237a 4839C6   		cmp	rsi, rax	# tmp593, tmp581
 5997 237d 0F9E4424 		setle	BYTE PTR 40[rsp]	#, %sfp
 5997      28
 5998 2382 440A5424 		or	r10b, BYTE PTR 40[rsp]	# tmp607, %sfp
 5998      28
 5999 2387 4484D7   		test	dil, r10b	# tmp598, tmp607
 6000 238a 0F84E80C 		je	.L499	#,
 6000      0000
 6001 2390 4D39CE   		cmp	r14, r9	# tmp571, tmp590
 6002 2393 410F9EC6 		setle	r14b	#, tmp612
 6003 2397 4C39C6   		cmp	rsi, r8	# tmp593, tmp568
 6004 239a 400F9EC6 		setle	sil	#, tmp616
 6005 239e 4108F6   		or	r14b, sil	# tmp612, tmp616
 6006 23a1 0F84D10C 		je	.L499	#,
 6006      0000
 6007 23a7 4801D9   		add	rcx, rbx	# vectp.390, bitstorage
 6008 23aa 4801D8   		add	rax, rbx	# vectp.394, bitstorage
 6009              	.LBB361:
 6010              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6011              		.loc 1 559 19 view .LVU2070
 6012 23ad C5FE6F08 		vmovdqu	ymm1, YMMWORD PTR [rax]	# MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0B], MEM[
 6013 23b1 C4C1796E 		vmovd	xmm3, r15d	# _12,
 6013      DF
 6014 23b6 C5FE6F40 		vmovdqu	ymm0, YMMWORD PTR 32[rax]	# MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 32B], M
 6014      20
 6015 23bb C5F96EE2 		vmovd	xmm4, edx	# _18,
 6016              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6017              		.loc 1 558 19 view .LVU2071
 6018 23bf C5FE6F39 		vmovdqu	ymm7, YMMWORD PTR [rcx]	# tmp1186, MEM[base: vectp.390_440, index: ivtmp.445_748, offset: 
GAS LISTING /tmp/ccfflXEb.s 			page 169


 6019              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6020              		.loc 1 559 19 view .LVU2072
 6021 23c3 C5F56CE8 		vpunpcklqdq	ymm5, ymm1, ymm0	# tmp624, MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0B],
 6022 23c7 C5756DF0 		vpunpckhqdq	ymm14, ymm1, ymm0	# tmp642, MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0B]
 6023              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6024              		.loc 1 558 19 view .LVU2073
 6025 23cb C5C56C51 		vpunpcklqdq	ymm2, ymm7, YMMWORD PTR 32[rcx]	# tmp628, tmp1186, MEM[base: vectp.390_440, index: ivt
 6025      20
 6026 23d0 4C8B7424 		mov	r14, QWORD PTR 56[rsp]	# _282, %sfp
 6026      38
 6027              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6028              		.loc 1 559 19 view .LVU2074
 6029 23d5 C463FD00 		vpermq	ymm8, ymm5, 216	# vect_perm_even_457, tmp624,
 6029      C5D8
 6030              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6031              		.loc 1 558 19 view .LVU2075
 6032 23db C4E3FD00 		vpermq	ymm6, ymm2, 216	# tmp627, tmp628,
 6032      F2D8
 6033              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6034              		.loc 1 559 19 view .LVU2076
 6035 23e1 C443FD00 		vpermq	ymm15, ymm14, 216	# tmp641, tmp642,
 6035      FED8
 6036              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6037              		.loc 1 560 65 view .LVU2077
 6038 23e7 C53DF3D4 		vpsllq	ymm10, ymm8, xmm4	# vect__100.398, vect_perm_even_457, _18
 6039              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6040              		.loc 1 560 44 view .LVU2078
 6041 23eb C54DD3CB 		vpsrlq	ymm9, ymm6, xmm3	# vect__98.397, tmp627, _12
 6042              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6043              		.loc 1 562 44 view .LVU2079
 6044 23ef C5BDD3C3 		vpsrlq	ymm0, ymm8, xmm3	# vect__109.400, vect_perm_even_457, _12
 6045              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6046              		.loc 1 562 65 view .LVU2080
 6047 23f3 C585F3CC 		vpsllq	ymm1, ymm15, xmm4	# vect__110.401, tmp641, _18
 6048 23f7 49C1EE03 		shr	r14, 3	# _282,
 6049              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6050              		.loc 1 560 54 view .LVU2081
 6051 23fb C44135EB 		vpor	ymm11, ymm9, ymm10	# vect__104.399, vect__98.397, vect__100.398
 6051      DA
 6052              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6053              		.loc 1 562 54 view .LVU2082
 6054 2400 C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__114.402, vect__110.401, vect__109.400
 6055 2404 4D8D56FF 		lea	r10, -1[r14]	# tmp809,
 6056              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6057              		.loc 1 560 33 view .LVU2083
GAS LISTING /tmp/ccfflXEb.s 			page 170


 6058 2408 C4437D39 		vextracti128	xmm13, ymm11, 0x1	# tmp638, vect__104.399
 6058      DD01
 6059 240e 4183E201 		and	r10d, 1	# tmp811,
 6060              	.LVL247:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6061              		.loc 1 558 9 is_stmt 1 view .LVU2084
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6062              		.loc 1 559 9 view .LVU2085
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6063              		.loc 1 560 9 view .LVU2086
 6064              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6065              		.loc 1 562 33 is_stmt 0 view .LVU2087
 6066 2412 C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp652, vect__114.402
 6066      EF01
 6067 2418 4983FE01 		cmp	r14, 1	# bnd.383,
 6068              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6069              		.loc 1 560 33 view .LVU2088
 6070 241c C42179D6 		vmovq	QWORD PTR [rbx+r9], xmm11	# MEM[base: _463, index: ivtmp.445_748, offset: 0B], tmp634
 6070      1C0B
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6071              		.loc 1 560 33 view .LVU2089
 6072 2422 4E8D1C0B 		lea	r11, [rbx+r9]	# _463,
 6073 2426 C423F916 		vpextrq	QWORD PTR 16[rbx+r9], xmm11, 1	# MEM[base: _463, index: ivtmp.445_748, offset: 16B], tmp63
 6073      5C0B1001 
 6074 242e 4A8D3C03 		lea	rdi, [rbx+r8]	# _483,
 6075 2432 C42179D6 		vmovq	QWORD PTR 32[rbx+r9], xmm13	# MEM[base: _463, index: ivtmp.445_748, offset: 32B], tmp638
 6075      6C0B20
 6076 2439 C423F916 		vpextrq	QWORD PTR 48[rbx+r9], xmm13, 1	# MEM[base: _463, index: ivtmp.445_748, offset: 48B], tmp63
 6076      6C0B3001 
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6077              		.loc 1 561 9 is_stmt 1 view .LVU2090
 6078              	.LVL248:
 562:sieve_extend.c ****         copy_word += 2;
 6079              		.loc 1 562 9 view .LVU2091
 6080 2441 41B90100 		mov	r9d, 1	# ivtmp.443,
 6080      0000
 6081              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6082              		.loc 1 562 33 is_stmt 0 view .LVU2092
 6083 2447 C4A179D6 		vmovq	QWORD PTR [rbx+r8], xmm5	# MEM[base: _483, index: ivtmp.445_748, offset: 0B], tmp648
 6083      2C03
 562:sieve_extend.c ****         copy_word += 2;
 6084              		.loc 1 562 33 view .LVU2093
 6085 244d C4A3F916 		vpextrq	QWORD PTR 16[rbx+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.445_748, offset: 16B], tmp648
 6085      6C031001 
 6086 2455 C4A179D6 		vmovq	QWORD PTR 32[rbx+r8], xmm7	# MEM[base: _483, index: ivtmp.445_748, offset: 32B], tmp652
 6086      7C0320
 6087 245c C4A3F916 		vpextrq	QWORD PTR 48[rbx+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.445_748, offset: 48B], tmp652
 6087      7C033001 
 563:sieve_extend.c ****         source_word += 2;
 6088              		.loc 1 563 9 is_stmt 1 view .LVU2094
 564:sieve_extend.c ****         distance += 2;
 6089              		.loc 1 564 9 view .LVU2095
 565:sieve_extend.c ****     }
 6090              		.loc 1 565 9 view .LVU2096
GAS LISTING /tmp/ccfflXEb.s 			page 171


 565:sieve_extend.c ****     }
 6091              		.loc 1 565 9 is_stmt 0 view .LVU2097
 6092              	.LBE361:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6093              		.loc 1 557 11 is_stmt 1 view .LVU2098
 6094 2464 41B84000 		mov	r8d, 64	# ivtmp.445,
 6094      0000
 6095 246a 0F86EC01 		jbe	.L644	#,
 6095      0000
 6096 2470 4D85D2   		test	r10, r10	# tmp811
 6097 2473 0F84A700 		je	.L500	#,
 6097      0000
 6098              	.LBB362:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6099              		.loc 1 558 9 view .LVU2099
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6100              		.loc 1 559 9 view .LVU2100
 6101              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6102              		.loc 1 559 19 is_stmt 0 view .LVU2101
 6103 2479 C57E6F48 		vmovdqu	ymm9, YMMWORD PTR 64[rax]	# MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0B], ME
 6103      40
 6104 247e 4983FE02 		cmp	r14, 2	# bnd.383,
 6105 2482 C57E6F50 		vmovdqu	ymm10, YMMWORD PTR 96[rax]	# MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 32B], 
 6105      60
 6106 2487 41B90200 		mov	r9d, 2	# ivtmp.443,
 6106      0000
 6107              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6108              		.loc 1 558 19 view .LVU2102
 6109 248d C5FE6F71 		vmovdqu	ymm6, YMMWORD PTR 64[rcx]	# tmp1287, MEM[base: vectp.390_440, index: ivtmp.445_748, offset
 6109      40
 6110              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6111              		.loc 1 559 19 view .LVU2103
 6112 2492 C4C1356C 		vpunpcklqdq	ymm2, ymm9, ymm10	# tmp1075, MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0B
 6112      D2
 6113 2497 C441356D 		vpunpckhqdq	ymm8, ymm9, ymm10	# tmp1090, MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0B
 6113      C2
 6114              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6115              		.loc 1 558 19 view .LVU2104
 6116 249c C54D6C61 		vpunpcklqdq	ymm12, ymm6, YMMWORD PTR 96[rcx]	# tmp1079, tmp1287, MEM[base: vectp.390_440, index: i
 6116      60
 6117              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6118              		.loc 1 559 19 view .LVU2105
 6119 24a1 C463FD00 		vpermq	ymm11, ymm2, 216	# vect_perm_even_457, tmp1075,
 6119      DAD8
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6120              		.loc 1 560 9 is_stmt 1 view .LVU2106
 6121              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6122              		.loc 1 558 19 is_stmt 0 view .LVU2107
 6123 24a7 C443FD00 		vpermq	ymm13, ymm12, 216	# tmp1080, tmp1079,
 6123      ECD8
 6124              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
GAS LISTING /tmp/ccfflXEb.s 			page 172


 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6125              		.loc 1 559 19 view .LVU2108
 6126 24ad C4C3FD00 		vpermq	ymm7, ymm8, 216	# tmp1091, tmp1090,
 6126      F8D8
 6127 24b3 41B88000 		mov	r8d, 128	# ivtmp.445,
 6127      0000
 6128              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6129              		.loc 1 560 44 view .LVU2109
 6130 24b9 C515D3F3 		vpsrlq	ymm14, ymm13, xmm3	# vect__98.397, tmp1080, _12
 6131              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6132              		.loc 1 560 65 view .LVU2110
 6133 24bd C525F3FC 		vpsllq	ymm15, ymm11, xmm4	# vect__100.398, vect_perm_even_457, _18
 6134              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6135              		.loc 1 562 44 view .LVU2111
 6136 24c1 C525D3D3 		vpsrlq	ymm10, ymm11, xmm3	# vect__109.400, vect_perm_even_457, _12
 6137              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6138              		.loc 1 562 65 view .LVU2112
 6139 24c5 C545F3CC 		vpsllq	ymm9, ymm7, xmm4	# vect__110.401, tmp1091, _18
 6140              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6141              		.loc 1 560 54 view .LVU2113
 6142 24c9 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__104.399, vect__98.397, vect__100.398
 6142      CF
 6143              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6144              		.loc 1 562 54 view .LVU2114
 6145 24ce C4C135EB 		vpor	ymm2, ymm9, ymm10	# vect__114.402, vect__110.401, vect__109.400
 6145      D2
 6146              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6147              		.loc 1 560 33 view .LVU2115
 6148 24d3 C4E37D39 		vextracti128	xmm5, ymm1, 0x1	# tmp1087, vect__104.399
 6148      CD01
 6149              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6150              		.loc 1 562 33 view .LVU2116
 6151 24d9 C4E37D39 		vextracti128	xmm6, ymm2, 0x1	# tmp1098, vect__114.402
 6151      D601
 6152              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6153              		.loc 1 560 33 view .LVU2117
 6154 24df C4C179D6 		vmovq	QWORD PTR 64[r11], xmm1	# MEM[base: _463, index: ivtmp.445_748, offset: 0B], tmp1084
 6154      4B40
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6155              		.loc 1 560 33 view .LVU2118
 6156 24e5 C4C3F916 		vpextrq	QWORD PTR 80[r11], xmm1, 1	# MEM[base: _463, index: ivtmp.445_748, offset: 16B], tmp1084
 6156      4B5001
 6157 24ec C4C179D6 		vmovq	QWORD PTR 96[r11], xmm5	# MEM[base: _463, index: ivtmp.445_748, offset: 32B], tmp1087
 6157      6B60
 6158 24f2 C4C3F916 		vpextrq	QWORD PTR 112[r11], xmm5, 1	# MEM[base: _463, index: ivtmp.445_748, offset: 48B], tmp1087
 6158      6B7001
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6159              		.loc 1 561 9 is_stmt 1 view .LVU2119
GAS LISTING /tmp/ccfflXEb.s 			page 173


 562:sieve_extend.c ****         copy_word += 2;
 6160              		.loc 1 562 9 view .LVU2120
 6161              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6162              		.loc 1 562 33 is_stmt 0 view .LVU2121
 6163 24f9 C5F9D657 		vmovq	QWORD PTR 64[rdi], xmm2	# MEM[base: _483, index: ivtmp.445_748, offset: 0B], tmp1095
 6163      40
 562:sieve_extend.c ****         copy_word += 2;
 6164              		.loc 1 562 33 view .LVU2122
 6165 24fe C4E3F916 		vpextrq	QWORD PTR 80[rdi], xmm2, 1	# MEM[base: _483, index: ivtmp.445_748, offset: 16B], tmp1095
 6165      575001
 6166 2505 C5F9D677 		vmovq	QWORD PTR 96[rdi], xmm6	# MEM[base: _483, index: ivtmp.445_748, offset: 32B], tmp1098
 6166      60
 6167 250a C4E3F916 		vpextrq	QWORD PTR 112[rdi], xmm6, 1	# MEM[base: _483, index: ivtmp.445_748, offset: 48B], tmp1098
 6167      777001
 563:sieve_extend.c ****         source_word += 2;
 6168              		.loc 1 563 9 is_stmt 1 view .LVU2123
 564:sieve_extend.c ****         distance += 2;
 6169              		.loc 1 564 9 view .LVU2124
 565:sieve_extend.c ****     }
 6170              		.loc 1 565 9 view .LVU2125
 565:sieve_extend.c ****     }
 6171              		.loc 1 565 9 is_stmt 0 view .LVU2126
 6172              	.LBE362:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6173              		.loc 1 557 11 is_stmt 1 view .LVU2127
 6174 2511 0F864501 		jbe	.L644	#,
 6174      0000
 6175 2517 660F1F84 		.p2align 4
 6175      00000000 
 6175      00
 6176              		.p2align 3
 6177              	.L500:
 6178              	.LBB363:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6179              		.loc 1 558 9 view .LVU2128
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6180              		.loc 1 559 9 view .LVU2129
 6181              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6182              		.loc 1 559 19 is_stmt 0 view .LVU2130
 6183 2520 C4217E6F 		vmovdqu	ymm12, YMMWORD PTR [rax+r8]	# MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0B], 
 6183      2400
 6184 2526 4983C102 		add	r9, 2	# ivtmp.443,
 6185 252a C4217E6F 		vmovdqu	ymm13, YMMWORD PTR 32[rax+r8]	# MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 32B
 6185      6C0020
 6186              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6187              		.loc 1 558 19 view .LVU2131
 6188 2531 C4A17E6F 		vmovdqu	ymm1, YMMWORD PTR [rcx+r8]	# tmp1187, MEM[base: vectp.390_440, index: ivtmp.445_748, offse
 6188      0C01
 6189              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6190              		.loc 1 559 19 view .LVU2132
 6191 2537 C4411D6C 		vpunpcklqdq	ymm14, ymm12, ymm13	# tmp818, MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0
 6191      F5
 6192 253c C4411D6D 		vpunpckhqdq	ymm11, ymm12, ymm13	# tmp833, MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0
GAS LISTING /tmp/ccfflXEb.s 			page 174


 6192      DD
 6193              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6194              		.loc 1 558 19 view .LVU2133
 6195 2541 C4A1756C 		vpunpcklqdq	ymm0, ymm1, YMMWORD PTR 32[rcx+r8]	# tmp822, tmp1187, MEM[base: vectp.390_440, index: 
 6195      440120
 6196              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6197              		.loc 1 559 19 view .LVU2134
 6198 2548 C443FD00 		vpermq	ymm15, ymm14, 216	# vect_perm_even_457, tmp818,
 6198      FED8
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6199              		.loc 1 560 9 is_stmt 1 view .LVU2135
 6200              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6201              		.loc 1 558 19 is_stmt 0 view .LVU2136
 6202 254e C4E3FD00 		vpermq	ymm5, ymm0, 216	# tmp823, tmp822,
 6202      E8D8
 6203              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6204              		.loc 1 559 19 view .LVU2137
 6205 2554 C4C3FD00 		vpermq	ymm6, ymm11, 216	# tmp834, tmp833,
 6205      F3D8
 6206              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6207              		.loc 1 560 44 view .LVU2138
 6208 255a C555D3C3 		vpsrlq	ymm8, ymm5, xmm3	# vect__98.397, tmp823, _12
 6209              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6210              		.loc 1 560 65 view .LVU2139
 6211 255e C585F3FC 		vpsllq	ymm7, ymm15, xmm4	# vect__100.398, vect_perm_even_457, _18
 6212              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6213              		.loc 1 562 44 view .LVU2140
 6214 2562 C505D3EB 		vpsrlq	ymm13, ymm15, xmm3	# vect__109.400, vect_perm_even_457, _12
 6215              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6216              		.loc 1 562 65 view .LVU2141
 6217 2566 C54DF3E4 		vpsllq	ymm12, ymm6, xmm4	# vect__110.401, tmp834, _18
 6218              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6219              		.loc 1 560 54 view .LVU2142
 6220 256a C53DEBCF 		vpor	ymm9, ymm8, ymm7	# vect__104.399, vect__98.397, vect__100.398
 6221              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6222              		.loc 1 562 54 view .LVU2143
 6223 256e C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__114.402, vect__110.401, vect__109.400
 6223      F5
 6224              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6225              		.loc 1 560 33 view .LVU2144
 6226 2573 C4637D39 		vextracti128	xmm2, ymm9, 0x1	# tmp830, vect__104.399
 6226      CA01
 6227              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6228              		.loc 1 562 33 view .LVU2145
 6229 2579 C4637D39 		vextracti128	xmm1, ymm14, 0x1	# tmp841, vect__114.402
GAS LISTING /tmp/ccfflXEb.s 			page 175


 6229      F101
 6230              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6231              		.loc 1 560 33 view .LVU2146
 6232 257f C40179D6 		vmovq	QWORD PTR [r11+r8], xmm9	# MEM[base: _463, index: ivtmp.445_748, offset: 0B], tmp827
 6232      0C03
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6233              		.loc 1 560 33 view .LVU2147
 6234 2585 C403F916 		vpextrq	QWORD PTR 16[r11+r8], xmm9, 1	# MEM[base: _463, index: ivtmp.445_748, offset: 16B], tmp827
 6234      4C031001 
 6235 258d C48179D6 		vmovq	QWORD PTR 32[r11+r8], xmm2	# MEM[base: _463, index: ivtmp.445_748, offset: 32B], tmp830
 6235      540320
 6236 2594 C483F916 		vpextrq	QWORD PTR 48[r11+r8], xmm2, 1	# MEM[base: _463, index: ivtmp.445_748, offset: 48B], tmp830
 6236      54033001 
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6237              		.loc 1 561 9 is_stmt 1 view .LVU2148
 562:sieve_extend.c ****         copy_word += 2;
 6238              		.loc 1 562 9 view .LVU2149
 6239              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6240              		.loc 1 562 33 is_stmt 0 view .LVU2150
 6241 259c C42179D6 		vmovq	QWORD PTR [rdi+r8], xmm14	# MEM[base: _483, index: ivtmp.445_748, offset: 0B], tmp838
 6241      3407
 562:sieve_extend.c ****         copy_word += 2;
 6242              		.loc 1 562 33 view .LVU2151
 6243 25a2 C423F916 		vpextrq	QWORD PTR 16[rdi+r8], xmm14, 1	# MEM[base: _483, index: ivtmp.445_748, offset: 16B], tmp83
 6243      74071001 
 6244 25aa C4A179D6 		vmovq	QWORD PTR 32[rdi+r8], xmm1	# MEM[base: _483, index: ivtmp.445_748, offset: 32B], tmp841
 6244      4C0720
 6245 25b1 C4A3F916 		vpextrq	QWORD PTR 48[rdi+r8], xmm1, 1	# MEM[base: _483, index: ivtmp.445_748, offset: 48B], tmp841
 6245      4C073001 
 563:sieve_extend.c ****         source_word += 2;
 6246              		.loc 1 563 9 is_stmt 1 view .LVU2152
 564:sieve_extend.c ****         distance += 2;
 6247              		.loc 1 564 9 view .LVU2153
 565:sieve_extend.c ****     }
 6248              		.loc 1 565 9 view .LVU2154
 565:sieve_extend.c ****     }
 6249              		.loc 1 565 9 is_stmt 0 view .LVU2155
 6250              	.LBE363:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6251              		.loc 1 557 11 is_stmt 1 view .LVU2156
 6252              	.LBB364:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6253              		.loc 1 558 9 view .LVU2157
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6254              		.loc 1 559 9 view .LVU2158
 6255              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6256              		.loc 1 559 19 is_stmt 0 view .LVU2159
 6257 25b9 C4217E6F 		vmovdqu	ymm8, YMMWORD PTR 64[rax+r8]	# MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0B],
 6257      440040
 6258 25c0 C4A17E6F 		vmovdqu	ymm0, YMMWORD PTR 96[rax+r8]	# MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 32B]
 6258      440060
 6259              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6260              		.loc 1 558 19 view .LVU2160
GAS LISTING /tmp/ccfflXEb.s 			page 176


 6261 25c7 C4A17E6F 		vmovdqu	ymm7, YMMWORD PTR 64[rcx+r8]	# tmp1188, MEM[base: vectp.390_440, index: ivtmp.445_748, off
 6261      7C0140
 6262              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6263              		.loc 1 559 19 view .LVU2161
 6264 25ce C5BD6CE8 		vpunpcklqdq	ymm5, ymm8, ymm0	# tmp848, MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0B],
 6265 25d2 C53D6DF8 		vpunpckhqdq	ymm15, ymm8, ymm0	# tmp863, MEM[base: vectp.394_449, index: ivtmp.445_748, offset: 0B]
 6266              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6267              		.loc 1 558 19 view .LVU2162
 6268 25d6 C421456C 		vpunpcklqdq	ymm10, ymm7, YMMWORD PTR 96[rcx+r8]	# tmp852, tmp1188, MEM[base: vectp.390_440, index:
 6268      540160
 6269              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6270              		.loc 1 559 19 view .LVU2163
 6271 25dd C463FD00 		vpermq	ymm9, ymm5, 216	# vect_perm_even_457, tmp848,
 6271      CDD8
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6272              		.loc 1 560 9 is_stmt 1 view .LVU2164
 6273              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6274              		.loc 1 558 19 is_stmt 0 view .LVU2165
 6275 25e3 C4C3FD00 		vpermq	ymm2, ymm10, 216	# tmp853, tmp852,
 6275      D2D8
 6276              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6277              		.loc 1 559 19 view .LVU2166
 6278 25e9 C4C3FD00 		vpermq	ymm1, ymm15, 216	# tmp864, tmp863,
 6278      CFD8
 6279              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6280              		.loc 1 560 44 view .LVU2167
 6281 25ef C56DD3DB 		vpsrlq	ymm11, ymm2, xmm3	# vect__98.397, tmp853, _12
 6282              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6283              		.loc 1 560 65 view .LVU2168
 6284 25f3 C5B5F3F4 		vpsllq	ymm6, ymm9, xmm4	# vect__100.398, vect_perm_even_457, _18
 6285              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6286              		.loc 1 562 44 view .LVU2169
 6287 25f7 C5B5D3C3 		vpsrlq	ymm0, ymm9, xmm3	# vect__109.400, vect_perm_even_457, _12
 6288              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6289              		.loc 1 562 65 view .LVU2170
 6290 25fb C575F3C4 		vpsllq	ymm8, ymm1, xmm4	# vect__110.401, tmp864, _18
 6291              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6292              		.loc 1 560 54 view .LVU2171
 6293 25ff C525EBE6 		vpor	ymm12, ymm11, ymm6	# vect__104.399, vect__98.397, vect__100.398
 6294              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6295              		.loc 1 562 54 view .LVU2172
 6296 2603 C5BDEBE8 		vpor	ymm5, ymm8, ymm0	# vect__114.402, vect__110.401, vect__109.400
 6297              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6298              		.loc 1 560 33 view .LVU2173
 6299 2607 C4437D39 		vextracti128	xmm14, ymm12, 0x1	# tmp860, vect__104.399
GAS LISTING /tmp/ccfflXEb.s 			page 177


 6299      E601
 6300              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6301              		.loc 1 562 33 view .LVU2174
 6302 260d C4E37D39 		vextracti128	xmm7, ymm5, 0x1	# tmp871, vect__114.402
 6302      EF01
 6303              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6304              		.loc 1 560 33 view .LVU2175
 6305 2613 C40179D6 		vmovq	QWORD PTR 64[r11+r8], xmm12	# MEM[base: _463, index: ivtmp.445_748, offset: 0B], tmp857
 6305      640340
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6306              		.loc 1 560 33 view .LVU2176
 6307 261a C403F916 		vpextrq	QWORD PTR 80[r11+r8], xmm12, 1	# MEM[base: _463, index: ivtmp.445_748, offset: 16B], tmp85
 6307      64035001 
 6308 2622 C40179D6 		vmovq	QWORD PTR 96[r11+r8], xmm14	# MEM[base: _463, index: ivtmp.445_748, offset: 32B], tmp860
 6308      740360
 6309 2629 C403F916 		vpextrq	QWORD PTR 112[r11+r8], xmm14, 1	# MEM[base: _463, index: ivtmp.445_748, offset: 48B], tmp8
 6309      74037001 
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6310              		.loc 1 561 9 is_stmt 1 view .LVU2177
 562:sieve_extend.c ****         copy_word += 2;
 6311              		.loc 1 562 9 view .LVU2178
 6312              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6313              		.loc 1 562 33 is_stmt 0 view .LVU2179
 6314 2631 C4A179D6 		vmovq	QWORD PTR 64[rdi+r8], xmm5	# MEM[base: _483, index: ivtmp.445_748, offset: 0B], tmp868
 6314      6C0740
 562:sieve_extend.c ****         copy_word += 2;
 6315              		.loc 1 562 33 view .LVU2180
 6316 2638 C4A3F916 		vpextrq	QWORD PTR 80[rdi+r8], xmm5, 1	# MEM[base: _483, index: ivtmp.445_748, offset: 16B], tmp868
 6316      6C075001 
 6317 2640 C4A179D6 		vmovq	QWORD PTR 96[rdi+r8], xmm7	# MEM[base: _483, index: ivtmp.445_748, offset: 32B], tmp871
 6317      7C0760
 6318 2647 C4A3F916 		vpextrq	QWORD PTR 112[rdi+r8], xmm7, 1	# MEM[base: _483, index: ivtmp.445_748, offset: 48B], tmp87
 6318      7C077001 
 563:sieve_extend.c ****         source_word += 2;
 6319              		.loc 1 563 9 is_stmt 1 view .LVU2181
 564:sieve_extend.c ****         distance += 2;
 6320              		.loc 1 564 9 view .LVU2182
 565:sieve_extend.c ****     }
 6321              		.loc 1 565 9 view .LVU2183
 565:sieve_extend.c ****     }
 6322              		.loc 1 565 9 is_stmt 0 view .LVU2184
 6323              	.LBE364:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6324              		.loc 1 557 11 is_stmt 1 view .LVU2185
 6325 264f 4983E880 		sub	r8, -128	# ivtmp.445,
 6326 2653 4D39CE   		cmp	r14, r9	# bnd.383, ivtmp.443
 6327 2656 0F87C4FE 		ja	.L500	#,
 6327      FFFF
 6328              	.L644:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6329              		.loc 1 557 11 is_stmt 0 view .LVU2186
 6330 265c 49C1E603 		sal	r14, 3	# _433,
 6331 2660 4B8D0C34 		lea	rcx, [r12+r14]	# tmp.385,
 6332 2664 4B8D4435 		lea	rax, 0[r13+r14]	# tmp.386,
GAS LISTING /tmp/ccfflXEb.s 			page 178


 6332      00
 6333              	.LVL249:
 6334              	.LBB365:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6335              		.loc 1 558 9 is_stmt 1 view .LVU2187
 6336              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6337              		.loc 1 558 39 is_stmt 0 view .LVU2188
 6338 2669 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _639,
 6338      00000000 
 6339              	.LVL250:
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6340              		.loc 1 559 9 is_stmt 1 view .LVU2189
 6341              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6342              		.loc 1 560 44 is_stmt 0 view .LVU2190
 6343 2671 C4E283F7 		shrx	rsi, QWORD PTR [rbx+rcx*8], r15	# tmp656, *_640, shift
 6343      34CB
 6344              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6345              		.loc 1 559 19 view .LVU2191
 6346 2677 4A8B7C1B 		mov	rdi, QWORD PTR 8[rbx+r11]	# source1, *_644
 6346      08
 6347              	.LVL251:
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6348              		.loc 1 560 9 is_stmt 1 view .LVU2192
 6349              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6350              		.loc 1 560 65 is_stmt 0 view .LVU2193
 6351 267c C462E9F7 		shlx	r10, rdi, rdx	# tmp658, source1, shift_flipped
 6351      D7
 6352              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6353              		.loc 1 560 54 view .LVU2194
 6354 2681 4C09D6   		or	rsi, r10	# tmp659, tmp658
 6355              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6356              		.loc 1 562 44 view .LVU2195
 6357 2684 C4E283F7 		shrx	rdi, rdi, r15	# tmp662, source1, shift
 6357      FF
 6358              	.LVL252:
 6359              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6360              		.loc 1 560 54 view .LVU2196
 6361 2689 488934C3 		mov	QWORD PTR [rbx+rax*8], rsi	# *_649, tmp659
 6362              	.LVL253:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6363              		.loc 1 561 9 is_stmt 1 view .LVU2197
 6364              	# sieve_extend.c:561:         bitword_t source2 = bitstorage[source_word+2];
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6365              		.loc 1 561 39 is_stmt 0 view .LVU2198
 6366 268d 4C8D4902 		lea	r9, 2[rcx]	# _652,
 6367              	.LVL254:
 562:sieve_extend.c ****         copy_word += 2;
 6368              		.loc 1 562 9 is_stmt 1 view .LVU2199
 6369              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
GAS LISTING /tmp/ccfflXEb.s 			page 179


 6370              		.loc 1 562 65 is_stmt 0 view .LVU2200
 6371 2691 4E8B441B 		mov	r8, QWORD PTR 16[rbx+r11]	# *_654, *_654
 6371      10
 6372 2696 C442E9F7 		shlx	r11, r8, rdx	# tmp660, *_654, shift_flipped
 6372      D8
 6373              	.LVL255:
 6374              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6375              		.loc 1 562 54 view .LVU2201
 6376 269b 4C09DF   		or	rdi, r11	# tmp663, tmp660
 6377              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 6378              		.loc 1 563 19 view .LVU2202
 6379 269e 4C8D4002 		lea	r8, 2[rax]	# copy_word,
 6380              	.LVL256:
 563:sieve_extend.c ****         source_word += 2;
 6381              		.loc 1 563 19 view .LVU2203
 6382              	.LBE365:
 6383              	# sieve_extend.c:557:     while (copy_word < fast_loop_stop_word) {
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6384              		.loc 1 557 11 view .LVU2204
 6385 26a2 4C8B5C24 		mov	r11, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 6385      30
 6386              	.LBB366:
 6387              	# sieve_extend.c:565:         distance += 2;
 565:sieve_extend.c ****     }
 6388              		.loc 1 565 18 view .LVU2205
 6389 26a7 4D8D5602 		lea	r10, 2[r14]	# distance,
 6390              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6391              		.loc 1 562 54 view .LVU2206
 6392 26ab 48897CC3 		mov	QWORD PTR 8[rbx+rax*8], rdi	# *_660, tmp663
 6392      08
 6393              	.LVL257:
 563:sieve_extend.c ****         source_word += 2;
 6394              		.loc 1 563 9 is_stmt 1 view .LVU2207
 564:sieve_extend.c ****         distance += 2;
 6395              		.loc 1 564 9 view .LVU2208
 565:sieve_extend.c ****     }
 6396              		.loc 1 565 9 view .LVU2209
 565:sieve_extend.c ****     }
 6397              		.loc 1 565 9 is_stmt 0 view .LVU2210
 6398              	.LBE366:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6399              		.loc 1 557 11 is_stmt 1 view .LVU2211
 6400 26b0 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6401 26b3 0F86D500 		jbe	.L503	#,
 6401      0000
 6402              	.LBB367:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6403              		.loc 1 558 9 view .LVU2212
 6404              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6405              		.loc 1 560 44 is_stmt 0 view .LVU2213
 6406 26b9 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_670, *_670
 6407              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
GAS LISTING /tmp/ccfflXEb.s 			page 180


 6408              		.loc 1 558 39 view .LVU2214
 6409 26bd 4E8D14CD 		lea	r10, 0[0+r9*8]	# _669,
 6409      00000000 
 6410              	.LVL258:
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6411              		.loc 1 559 9 is_stmt 1 view .LVU2215
 6412              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6413              		.loc 1 559 19 is_stmt 0 view .LVU2216
 6414 26c5 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_674
 6414      08
 6415              	.LVL259:
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6416              		.loc 1 560 9 is_stmt 1 view .LVU2217
 6417              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6418              		.loc 1 560 44 is_stmt 0 view .LVU2218
 6419 26ca C4E283F7 		shrx	rsi, rsi, r15	# tmp664, *_670, shift
 6419      F6
 6420              	.LVL260:
 6421              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6422              		.loc 1 560 65 view .LVU2219
 6423 26cf C462E9F7 		shlx	r9, rdi, rdx	# tmp666, source1, shift_flipped
 6423      CF
 6424              	.LVL261:
 6425              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6426              		.loc 1 560 54 view .LVU2220
 6427 26d4 4C09CE   		or	rsi, r9	# tmp667, tmp666
 6428 26d7 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_679, tmp667
 6429              	.LVL262:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6430              		.loc 1 561 9 is_stmt 1 view .LVU2221
 6431              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6432              		.loc 1 562 44 is_stmt 0 view .LVU2222
 6433 26db C4E283F7 		shrx	rdi, rdi, r15	# tmp670, source1, shift
 6433      FF
 6434              	.LVL263:
 6435              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6436              		.loc 1 562 65 view .LVU2223
 6437 26e0 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_684, *_684
 6437      10
 6438 26e5 C4C2E9F7 		shlx	rsi, r10, rdx	# tmp668, *_684, shift_flipped
 6438      F2
 6439              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6440              		.loc 1 562 54 view .LVU2224
 6441 26ea 4809F7   		or	rdi, rsi	# tmp671, tmp668
 6442              	# sieve_extend.c:561:         bitword_t source2 = bitstorage[source_word+2];
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6443              		.loc 1 561 39 view .LVU2225
 6444 26ed 4C8D4904 		lea	r9, 4[rcx]	# _682,
 562:sieve_extend.c ****         copy_word += 2;
 6445              		.loc 1 562 9 is_stmt 1 view .LVU2226
GAS LISTING /tmp/ccfflXEb.s 			page 181


 6446              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6447              		.loc 1 562 54 is_stmt 0 view .LVU2227
 6448 26f1 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_690, tmp671
 6448      08
 563:sieve_extend.c ****         source_word += 2;
 6449              		.loc 1 563 9 is_stmt 1 view .LVU2228
 6450              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 6451              		.loc 1 563 19 is_stmt 0 view .LVU2229
 6452 26f6 4C8D4004 		lea	r8, 4[rax]	# copy_word,
 6453              	.LVL264:
 564:sieve_extend.c ****         distance += 2;
 6454              		.loc 1 564 9 is_stmt 1 view .LVU2230
 565:sieve_extend.c ****     }
 6455              		.loc 1 565 9 view .LVU2231
 565:sieve_extend.c ****     }
 6456              		.loc 1 565 9 is_stmt 0 view .LVU2232
 6457              	.LBE367:
 6458              	# sieve_extend.c:557:     while (copy_word < fast_loop_stop_word) {
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6459              		.loc 1 557 11 view .LVU2233
 6460 26fa 4D39C3   		cmp	r11, r8	# fast_loop_stop_word, copy_word
 6461              	.LBB368:
 6462              	# sieve_extend.c:565:         distance += 2;
 565:sieve_extend.c ****     }
 6463              		.loc 1 565 18 view .LVU2234
 6464 26fd 4D8D5604 		lea	r10, 4[r14]	# distance,
 6465              	.LVL265:
 565:sieve_extend.c ****     }
 6466              		.loc 1 565 18 view .LVU2235
 6467              	.LBE368:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6468              		.loc 1 557 11 is_stmt 1 view .LVU2236
 6469 2701 0F868700 		jbe	.L503	#,
 6469      0000
 6470              	.LBB369:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6471              		.loc 1 558 9 view .LVU2237
 6472              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6473              		.loc 1 558 39 is_stmt 0 view .LVU2238
 6474 2707 4E8D14CD 		lea	r10, 0[0+r9*8]	# _699,
 6474      00000000 
 6475              	.LVL266:
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6476              		.loc 1 559 9 is_stmt 1 view .LVU2239
 6477              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 6478              		.loc 1 563 19 is_stmt 0 view .LVU2240
 6479 270f 4883C006 		add	rax, 6	# copy_word,
 6480              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6481              		.loc 1 559 19 view .LVU2241
 6482 2713 4A8B7C13 		mov	rdi, QWORD PTR 8[rbx+r10]	# source1, *_704
 6482      08
 6483              	.LVL267:
GAS LISTING /tmp/ccfflXEb.s 			page 182


 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6484              		.loc 1 560 9 is_stmt 1 view .LVU2242
 6485              	# sieve_extend.c:561:         bitword_t source2 = bitstorage[source_word+2];
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6486              		.loc 1 561 39 is_stmt 0 view .LVU2243
 6487 2718 4883C106 		add	rcx, 6	# _712,
 6488              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6489              		.loc 1 560 44 view .LVU2244
 6490 271c 4E8B0CCB 		mov	r9, QWORD PTR [rbx+r9*8]	# *_700, *_700
 6491              	.LVL268:
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6492              		.loc 1 560 44 view .LVU2245
 6493 2720 C4C283F7 		shrx	rsi, r9, r15	# tmp672, *_700, shift
 6493      F1
 6494              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6495              		.loc 1 560 65 view .LVU2246
 6496 2725 C462E9F7 		shlx	r9, rdi, rdx	# tmp674, source1, shift_flipped
 6496      CF
 6497              	.LVL269:
 6498              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6499              		.loc 1 560 54 view .LVU2247
 6500 272a 4C09CE   		or	rsi, r9	# tmp675, tmp674
 6501 272d 4A8934C3 		mov	QWORD PTR [rbx+r8*8], rsi	# *_709, tmp675
 6502              	.LVL270:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6503              		.loc 1 561 9 is_stmt 1 view .LVU2248
 562:sieve_extend.c ****         copy_word += 2;
 6504              		.loc 1 562 9 view .LVU2249
 6505              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6506              		.loc 1 562 44 is_stmt 0 view .LVU2250
 6507 2731 C4E283F7 		shrx	rdi, rdi, r15	# tmp678, source1, shift
 6507      FF
 6508              	.LVL271:
 6509              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6510              		.loc 1 562 65 view .LVU2251
 6511 2736 4E8B5413 		mov	r10, QWORD PTR 16[rbx+r10]	# *_714, *_714
 6511      10
 6512              	.LVL272:
 562:sieve_extend.c ****         copy_word += 2;
 6513              		.loc 1 562 65 view .LVU2252
 6514 273b C4C2E9F7 		shlx	rsi, r10, rdx	# tmp676, *_714, shift_flipped
 6514      F2
 6515              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6516              		.loc 1 562 54 view .LVU2253
 6517 2740 4809F7   		or	rdi, rsi	# tmp679, tmp676
 6518              	.LBE369:
 6519              	# sieve_extend.c:557:     while (copy_word < fast_loop_stop_word) {
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6520              		.loc 1 557 11 view .LVU2254
 6521 2743 4939C3   		cmp	r11, rax	# fast_loop_stop_word, copy_word
 6522              	.LBB370:
GAS LISTING /tmp/ccfflXEb.s 			page 183


 6523              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6524              		.loc 1 562 54 view .LVU2255
 6525 2746 4A897CC3 		mov	QWORD PTR 8[rbx+r8*8], rdi	# *_720, tmp679
 6525      08
 563:sieve_extend.c ****         source_word += 2;
 6526              		.loc 1 563 9 is_stmt 1 view .LVU2256
 6527              	.LVL273:
 564:sieve_extend.c ****         distance += 2;
 6528              		.loc 1 564 9 view .LVU2257
 565:sieve_extend.c ****     }
 6529              		.loc 1 565 9 view .LVU2258
 6530              	# sieve_extend.c:565:         distance += 2;
 565:sieve_extend.c ****     }
 6531              		.loc 1 565 18 is_stmt 0 view .LVU2259
 6532 274b 4D8D5606 		lea	r10, 6[r14]	# distance,
 6533              	.LVL274:
 565:sieve_extend.c ****     }
 6534              		.loc 1 565 18 view .LVU2260
 6535              	.LBE370:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6536              		.loc 1 557 11 is_stmt 1 view .LVU2261
 6537 274f 763D     		jbe	.L503	#,
 6538              	.LBB371:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6539              		.loc 1 558 9 view .LVU2262
 6540              	# sieve_extend.c:558:         bitword_t source0 = bitstorage[source_word  ];
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 6541              		.loc 1 558 39 is_stmt 0 view .LVU2263
 6542 2751 4C8D1CCD 		lea	r11, 0[0+rcx*8]	# _402,
 6542      00000000 
 6543              	.LVL275:
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6544              		.loc 1 559 9 is_stmt 1 view .LVU2264
 6545              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 6546              		.loc 1 559 19 is_stmt 0 view .LVU2265
 6547 2759 4E8B4C1B 		mov	r9, QWORD PTR 8[rbx+r11]	# source1, *_407
 6547      08
 6548              	.LVL276:
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6549              		.loc 1 560 9 is_stmt 1 view .LVU2266
 6550              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6551              		.loc 1 560 65 is_stmt 0 view .LVU2267
 6552 275e C442E9F7 		shlx	r8, r9, rdx	# tmp682, source1, shift_flipped
 6552      C1
 6553              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6554              		.loc 1 560 44 view .LVU2268
 6555 2763 488B0CCB 		mov	rcx, QWORD PTR [rbx+rcx*8]	# *_403, *_403
 6556              	.LVL277:
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6557              		.loc 1 560 44 view .LVU2269
 6558 2767 C46283F7 		shrx	r10, rcx, r15	# tmp680, *_403, shift
 6558      D1
 6559              	.LVL278:
GAS LISTING /tmp/ccfflXEb.s 			page 184


 6560              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 6561              		.loc 1 560 54 view .LVU2270
 6562 276c 4D09C2   		or	r10, r8	# tmp683, tmp682
 6563 276f 4C8914C3 		mov	QWORD PTR [rbx+rax*8], r10	# *_412, tmp683
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 6564              		.loc 1 561 9 is_stmt 1 view .LVU2271
 6565              	.LVL279:
 562:sieve_extend.c ****         copy_word += 2;
 6566              		.loc 1 562 9 view .LVU2272
 6567              	# sieve_extend.c:565:         distance += 2;
 565:sieve_extend.c ****     }
 6568              		.loc 1 565 18 is_stmt 0 view .LVU2273
 6569 2773 4D8D5608 		lea	r10, 8[r14]	# distance,
 6570              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6571              		.loc 1 562 65 view .LVU2274
 6572 2777 4A8B741B 		mov	rsi, QWORD PTR 16[rbx+r11]	# *_417, *_417
 6572      10
 6573              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6574              		.loc 1 562 44 view .LVU2275
 6575 277c C44283F7 		shrx	r11, r9, r15	# tmp686, source1, shift
 6575      D9
 6576              	.LVL280:
 6577              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6578              		.loc 1 562 65 view .LVU2276
 6579 2781 C4E2E9F7 		shlx	rdi, rsi, rdx	# tmp684, *_417, shift_flipped
 6579      FE
 6580              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 6581              		.loc 1 562 54 view .LVU2277
 6582 2786 4909FB   		or	r11, rdi	# tmp687, tmp684
 6583 2789 4C895CC3 		mov	QWORD PTR 8[rbx+rax*8], r11	# *_423, tmp687
 6583      08
 563:sieve_extend.c ****         source_word += 2;
 6584              		.loc 1 563 9 is_stmt 1 view .LVU2278
 564:sieve_extend.c ****         distance += 2;
 6585              		.loc 1 564 9 view .LVU2279
 565:sieve_extend.c ****     }
 6586              		.loc 1 565 9 view .LVU2280
 6587              	.LVL281:
 565:sieve_extend.c ****     }
 6588              		.loc 1 565 9 is_stmt 0 view .LVU2281
 6589              	.LBE371:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6590              		.loc 1 557 11 is_stmt 1 view .LVU2282
 6591              	.L503:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 6592              		.loc 1 557 11 is_stmt 0 view .LVU2283
 6593 278e 4D01D4   		add	r12, r10	# tmp.368, distance
 6594 2791 4D01D5   		add	r13, r10	# tmp.369, distance
 6595              	.LVL282:
 6596              	.L498:
 567:sieve_extend.c **** }
 6597              		.loc 1 567 5 is_stmt 1 view .LVU2284
GAS LISTING /tmp/ccfflXEb.s 			page 185


 567:sieve_extend.c **** }
 6598              		.loc 1 567 5 is_stmt 0 view .LVU2285
 6599              	.LBE382:
 6600              	.LBE385:
 657:sieve_extend.c ****     copy_word += distance;
 6601              		.loc 1 657 5 is_stmt 1 view .LVU2286
 658:sieve_extend.c **** 
 6602              		.loc 1 658 5 view .LVU2287
 660:sieve_extend.c **** 
 6603              		.loc 1 660 6 view .LVU2288
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6604              		.loc 1 663 11 view .LVU2289
 6605              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6606              		.loc 1 663 5 is_stmt 0 view .LVU2290
 6607 2794 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 6607      50
 6608 2799 4D39EB   		cmp	r11, r13	# aligned_copy_word, tmp.369
 6609 279c 0F82BE0A 		jb	.L520	#,
 6609      0000
 6610 27a2 4E8D34E5 		lea	r14, 0[0+r12*8]	# _3,
 6610      00000000 
 6611 27aa 498D4B01 		lea	rcx, 1[r11]	# tmp.356,
 6612 27ae 4A8D3C33 		lea	rdi, [rbx+r14]	# vectp.363,
 6613 27b2 4989C8   		mov	r8, rcx	# niters.362, tmp.356
 6614 27b5 4889F8   		mov	rax, rdi	# tmp698, vectp.363
 6615 27b8 4D29EB   		sub	r11, r13	# tmp700, tmp.369
 6616 27bb 48C1E803 		shr	rax, 3	# tmp698,
 6617 27bf 4D29E8   		sub	r8, r13	# niters.362, tmp.369
 6618 27c2 48F7D8   		neg	rax	# tmp699
 6619 27c5 41B90500 		mov	r9d, 5	# tmp702,
 6619      0000
 6620 27cb 83E003   		and	eax, 3	# prolog_loop_niters.364,
 6621 27ce 488D7003 		lea	rsi, 3[rax]	# tmp701,
 6622 27d2 4883FE05 		cmp	rsi, 5	# tmp701,
 6623 27d6 490F42F1 		cmovb	rsi, r9	# tmp701,, tmp921, tmp702
 6624 27da 4939F3   		cmp	r11, rsi	# tmp700, tmp921
 6625 27dd 0F823F03 		jb	.L505	#,
 6625      0000
 6626 27e3 4885C0   		test	rax, rax	# prolog_loop_niters.364
 6627 27e6 0F844408 		je	.L521	#,
 6627      0000
 6628              	.LVL283:
 664:sieve_extend.c ****     }
 6629              		.loc 1 664 9 is_stmt 1 view .LVU2291
 6630              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6631              		.loc 1 664 100 is_stmt 0 view .LVU2292
 6632 27ec 4E8B5C33 		mov	r11, QWORD PTR 8[rbx+r14]	# *_607, *_607
 6632      08
 6633              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6634              		.loc 1 664 83 view .LVU2293
 6635 27f1 498D7424 		lea	rsi, 1[r12]	# tmp788,
 6635      01
 6636              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 186


 6637              		.loc 1 664 60 view .LVU2294
 6638 27f6 488B3F   		mov	rdi, QWORD PTR [rdi]	# MEM[(uint64_t *)vectp.363_27], MEM[(uint64_t *)vectp.363_27]
 6639              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6640              		.loc 1 664 100 view .LVU2295
 6641 27f9 C442E9F7 		shlx	r9, r11, rdx	# tmp703, *_607, shift_flipped
 6641      CB
 6642              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6643              		.loc 1 664 60 view .LVU2296
 6644 27fe C46283F7 		shrx	r14, rdi, r15	# tmp705, MEM[(uint64_t *)vectp.363_27], shift
 6644      F7
 6645              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6646              		.loc 1 664 70 view .LVU2297
 6647 2803 4D09F1   		or	r9, r14	# tmp707, tmp705
 6648 2806 4883F801 		cmp	rax, 1	# prolog_loop_niters.364,
 6649              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6650              		.loc 1 664 83 view .LVU2298
 6651 280a 4989F2   		mov	r10, rsi	# source_word, tmp788
 6652              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6653              		.loc 1 664 70 view .LVU2299
 6654 280d 4E890CEB 		mov	QWORD PTR [rbx+r13*8], r9	# *_611, tmp707
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6655              		.loc 1 663 43 is_stmt 1 view .LVU2300
 6656              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6657              		.loc 1 663 52 is_stmt 0 view .LVU2301
 6658 2811 4D8D7501 		lea	r14, 1[r13]	# copy_word,
 6659              	.LVL284:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6660              		.loc 1 663 11 is_stmt 1 view .LVU2302
 6661 2815 7456     		je	.L506	#,
 664:sieve_extend.c ****     }
 6662              		.loc 1 664 9 view .LVU2303
 6663              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6664              		.loc 1 664 44 is_stmt 0 view .LVU2304
 6665 2817 4C8D1CF5 		lea	r11, 0[0+rsi*8]	# _620,
 6665      00000000 
 6666              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6667              		.loc 1 664 100 view .LVU2305
 6668 281f C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r11], rdx	# tmp708, *_626, shift_flipped
 6668      4C1B08
 6669              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6670              		.loc 1 664 60 view .LVU2306
 6671 2826 4A8B3C1B 		mov	rdi, QWORD PTR [rbx+r11]	# *_621, *_621
 6672 282a C46283F7 		shrx	r11, rdi, r15	# tmp710, *_621, shift
 6672      DF
 6673              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6674              		.loc 1 664 70 view .LVU2307
 6675 282f 4D09D9   		or	r9, r11	# tmp712, tmp710
GAS LISTING /tmp/ccfflXEb.s 			page 187


 6676 2832 4883F803 		cmp	rax, 3	# prolog_loop_niters.364,
 6677 2836 4E890CF3 		mov	QWORD PTR [rbx+r14*8], r9	# *_630, tmp712
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6678              		.loc 1 663 43 is_stmt 1 view .LVU2308
 6679              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6680              		.loc 1 664 83 is_stmt 0 view .LVU2309
 6681 283a 4D8D5424 		lea	r10, 2[r12]	# source_word,
 6681      02
 6682              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6683              		.loc 1 663 52 view .LVU2310
 6684 283f 4D8D7502 		lea	r14, 2[r13]	# copy_word,
 6685              	.LVL285:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6686              		.loc 1 663 11 is_stmt 1 view .LVU2311
 6687 2843 7528     		jne	.L506	#,
 664:sieve_extend.c ****     }
 6688              		.loc 1 664 9 view .LVU2312
 6689              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6690              		.loc 1 664 44 is_stmt 0 view .LVU2313
 6691 2845 4E8D0CD5 		lea	r9, 0[0+r10*8]	# _205,
 6691      00000000 
 6692              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6693              		.loc 1 664 100 view .LVU2314
 6694 284d C4A2E9F7 		shlx	rdi, QWORD PTR 8[rbx+r9], rdx	# tmp713, *_211, shift_flipped
 6694      7C0B08
 6695              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6696              		.loc 1 664 60 view .LVU2315
 6697 2854 4E8B1C0B 		mov	r11, QWORD PTR [rbx+r9]	# *_206, *_206
 6698 2858 C44283F7 		shrx	r9, r11, r15	# tmp715, *_206, shift
 6698      CB
 6699              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6700              		.loc 1 664 70 view .LVU2316
 6701 285d 4C09CF   		or	rdi, r9	# tmp717, tmp715
 6702              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6703              		.loc 1 664 83 view .LVU2317
 6704 2860 4D8D5424 		lea	r10, 3[r12]	# source_word,
 6704      03
 6705              	.LVL286:
 6706              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6707              		.loc 1 664 70 view .LVU2318
 6708 2865 4A893CF3 		mov	QWORD PTR [rbx+r14*8], rdi	# *_215, tmp717
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6709              		.loc 1 663 43 is_stmt 1 view .LVU2319
 6710              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6711              		.loc 1 663 52 is_stmt 0 view .LVU2320
 6712 2869 4D8D7503 		lea	r14, 3[r13]	# copy_word,
 6713              	.LVL287:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
GAS LISTING /tmp/ccfflXEb.s 			page 188


 6714              		.loc 1 663 11 is_stmt 1 view .LVU2321
 6715              	.L506:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6716              		.loc 1 663 11 is_stmt 0 view .LVU2322
 6717 286d 4929C0   		sub	r8, rax	# niters.365, prolog_loop_niters.364
 6718 2870 4801C6   		add	rsi, rax	# tmp721, prolog_loop_niters.364
 6719 2873 4E8D2420 		lea	r12, [rax+r12]	# tmp718,
 6720 2877 4C01E8   		add	rax, r13	# tmp723, tmp.369
 6721 287a 4D89C5   		mov	r13, r8	# bnd.366, niters.365
 6722 287d 488D3CF3 		lea	rdi, [rbx+rsi*8]	# vectp.375,
 6723 2881 49C1ED02 		shr	r13, 2	# bnd.366,
 6724 2885 4C8D0CC3 		lea	r9, [rbx+rax*8]	# vectp.380,
 6725 2889 49C1E505 		sal	r13, 5	# _733,
 6726              	# sieve_extend.c:657:     source_word += distance;
 657:sieve_extend.c ****     copy_word += distance;
 6727              		.loc 1 657 17 view .LVU2323
 6728 288d 31C0     		xor	eax, eax	# ivtmp.421
 6729 288f 498D75E0 		lea	rsi, -32[r13]	# tmp799,
 6730 2893 4E8D1CE3 		lea	r11, [rbx+r12*8]	# vectp.371,
 6731 2897 C5796E54 		vmovd	xmm10, DWORD PTR 72[rsp]	# _12, %sfp
 6731      2448
 6732 289d 48C1EE05 		shr	rsi, 5	# tmp797,
 6733 28a1 C5796E5C 		vmovd	xmm11, DWORD PTR 64[rsp]	# _18, %sfp
 6733      2440
 6734 28a7 4883C601 		add	rsi, 1	# tmp800,
 6735 28ab 83E607   		and	esi, 7	# tmp801,
 6736 28ae 0F841201 		je	.L508	#,
 6736      0000
 6737 28b4 4883FE01 		cmp	rsi, 1	# tmp801,
 6738 28b8 0F84DB00 		je	.L601	#,
 6738      0000
 6739 28be 4883FE02 		cmp	rsi, 2	# tmp801,
 6740 28c2 0F84AE00 		je	.L602	#,
 6740      0000
 6741 28c8 4883FE03 		cmp	rsi, 3	# tmp801,
 6742 28cc 0F848000 		je	.L603	#,
 6742      0000
 6743 28d2 4883FE04 		cmp	rsi, 4	# tmp801,
 6744 28d6 7456     		je	.L604	#,
 6745 28d8 4883FE05 		cmp	rsi, 5	# tmp801,
 6746 28dc 742D     		je	.L605	#,
 6747 28de 4883FE06 		cmp	rsi, 6	# tmp801,
 6748 28e2 0F856807 		jne	.L673	#,
 6748      0000
 6749              	.L606:
 664:sieve_extend.c ****     }
 6750              		.loc 1 664 9 is_stmt 1 view .LVU2324
 6751              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6752              		.loc 1 664 60 is_stmt 0 view .LVU2325
 6753 28e8 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r11+rax]	# tmp1262, MEM[base: vectp.371_257, index: ivtmp.421_731, off
 6753      2C03
 6754              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6755              		.loc 1 664 100 view .LVU2326
 6756 28ee C57E6F3C 		vmovdqu	ymm15, YMMWORD PTR [rdi+rax]	# tmp1263, MEM[base: vectp.375_264, index: ivtmp.421_731, off
 6756      07
GAS LISTING /tmp/ccfflXEb.s 			page 189


 6757              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6758              		.loc 1 664 60 view .LVU2327
 6759 28f3 C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.373, tmp1262, _12
 6759      F2
 6760              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6761              		.loc 1 664 100 view .LVU2328
 6762 28f8 C4C105F3 		vpsllq	ymm1, ymm15, xmm11	# vect__43.377, tmp1263, _18
 6762      CB
 6763              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6764              		.loc 1 664 70 view .LVU2329
 6765 28fd C50DEBC1 		vpor	ymm8, ymm14, ymm1	# vect__46.378, vect__38.373, vect__43.377
 6766              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6767              		.loc 1 664 31 view .LVU2330
 6768 2901 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm8	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B], v
 6768      0401
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6769              		.loc 1 663 43 is_stmt 1 view .LVU2331
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6770              		.loc 1 663 11 view .LVU2332
 6771 2907 4883C020 		add	rax, 32	# ivtmp.421,
 6772              	.L605:
 664:sieve_extend.c ****     }
 6773              		.loc 1 664 9 view .LVU2333
 6774              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6775              		.loc 1 664 60 is_stmt 0 view .LVU2334
 6776 290b C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r11+rax]	# tmp1264, MEM[base: vectp.371_257, index: ivtmp.421_731, offs
 6776      0403
 6777              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6778              		.loc 1 664 100 view .LVU2335
 6779 2911 C57E6F0C 		vmovdqu	ymm9, YMMWORD PTR [rdi+rax]	# tmp1265, MEM[base: vectp.375_264, index: ivtmp.421_731, offs
 6779      07
 6780              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6781              		.loc 1 664 60 view .LVU2336
 6782 2916 C4C17DD3 		vpsrlq	ymm5, ymm0, xmm10	# vect__38.373, tmp1264, _12
 6782      EA
 6783              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6784              		.loc 1 664 100 view .LVU2337
 6785 291b C4C135F3 		vpsllq	ymm7, ymm9, xmm11	# vect__43.377, tmp1265, _18
 6785      FB
 6786              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6787              		.loc 1 664 70 view .LVU2338
 6788 2920 C5D5EBDF 		vpor	ymm3, ymm5, ymm7	# vect__46.378, vect__38.373, vect__43.377
 6789              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6790              		.loc 1 664 31 view .LVU2339
 6791 2924 C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm3	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B], v
 6791      1C01
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
GAS LISTING /tmp/ccfflXEb.s 			page 190


 6792              		.loc 1 663 43 is_stmt 1 view .LVU2340
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6793              		.loc 1 663 11 view .LVU2341
 6794 292a 4883C020 		add	rax, 32	# ivtmp.421,
 6795              	.L604:
 664:sieve_extend.c ****     }
 6796              		.loc 1 664 9 view .LVU2342
 6797              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6798              		.loc 1 664 60 is_stmt 0 view .LVU2343
 6799 292e C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR [r11+rax]	# tmp1266, MEM[base: vectp.371_257, index: ivtmp.421_731, offs
 6799      1403
 6800              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6801              		.loc 1 664 100 view .LVU2344
 6802 2934 C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1267, MEM[base: vectp.375_264, index: ivtmp.421_731, offs
 6802      07
 6803              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6804              		.loc 1 664 60 view .LVU2345
 6805 2939 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.373, tmp1266, _12
 6805      F2
 6806              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6807              		.loc 1 664 100 view .LVU2346
 6808 293e C4415DF3 		vpsllq	ymm12, ymm4, xmm11	# vect__43.377, tmp1267, _18
 6808      E3
 6809              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6810              		.loc 1 664 70 view .LVU2347
 6811 2943 C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.378, vect__38.373, vect__43.377
 6811      EC
 6812              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6813              		.loc 1 664 31 view .LVU2348
 6814 2948 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm13	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B], 
 6814      2C01
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6815              		.loc 1 663 43 is_stmt 1 view .LVU2349
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6816              		.loc 1 663 11 view .LVU2350
 6817 294e 4883C020 		add	rax, 32	# ivtmp.421,
 6818              	.L603:
 664:sieve_extend.c ****     }
 6819              		.loc 1 664 9 view .LVU2351
 6820              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6821              		.loc 1 664 60 is_stmt 0 view .LVU2352
 6822 2952 C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r11+rax]	# tmp1268, MEM[base: vectp.371_257, index: ivtmp.421_731, off
 6822      3403
 6823              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6824              		.loc 1 664 100 view .LVU2353
 6825 2958 C5FE6F0C 		vmovdqu	ymm1, YMMWORD PTR [rdi+rax]	# tmp1269, MEM[base: vectp.375_264, index: ivtmp.421_731, offs
 6825      07
 6826              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 191


 6827              		.loc 1 664 60 view .LVU2354
 6828 295d C4410DD3 		vpsrlq	ymm15, ymm14, xmm10	# vect__38.373, tmp1268, _12
 6828      FA
 6829              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6830              		.loc 1 664 100 view .LVU2355
 6831 2962 C44175F3 		vpsllq	ymm8, ymm1, xmm11	# vect__43.377, tmp1269, _18
 6831      C3
 6832              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6833              		.loc 1 664 70 view .LVU2356
 6834 2967 C4C105EB 		vpor	ymm0, ymm15, ymm8	# vect__46.378, vect__38.373, vect__43.377
 6834      C0
 6835              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6836              		.loc 1 664 31 view .LVU2357
 6837 296c C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm0	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B], v
 6837      0401
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6838              		.loc 1 663 43 is_stmt 1 view .LVU2358
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6839              		.loc 1 663 11 view .LVU2359
 6840 2972 4883C020 		add	rax, 32	# ivtmp.421,
 6841              	.L602:
 664:sieve_extend.c ****     }
 6842              		.loc 1 664 9 view .LVU2360
 6843              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6844              		.loc 1 664 60 is_stmt 0 view .LVU2361
 6845 2976 C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR [r11+rax]	# tmp1270, MEM[base: vectp.371_257, index: ivtmp.421_731, offs
 6845      2C03
 6846              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6847              		.loc 1 664 100 view .LVU2362
 6848 297c C5FE6F3C 		vmovdqu	ymm7, YMMWORD PTR [rdi+rax]	# tmp1271, MEM[base: vectp.375_264, index: ivtmp.421_731, offs
 6848      07
 6849              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6850              		.loc 1 664 60 view .LVU2363
 6851 2981 C44155D3 		vpsrlq	ymm9, ymm5, xmm10	# vect__38.373, tmp1270, _12
 6851      CA
 6852              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6853              		.loc 1 664 100 view .LVU2364
 6854 2986 C4C145F3 		vpsllq	ymm3, ymm7, xmm11	# vect__43.377, tmp1271, _18
 6854      DB
 6855              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6856              		.loc 1 664 70 view .LVU2365
 6857 298b C5B5EBD3 		vpor	ymm2, ymm9, ymm3	# vect__46.378, vect__38.373, vect__43.377
 6858              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6859              		.loc 1 664 31 view .LVU2366
 6860 298f C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm2	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B], v
 6860      1401
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6861              		.loc 1 663 43 is_stmt 1 view .LVU2367
GAS LISTING /tmp/ccfflXEb.s 			page 192


 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6862              		.loc 1 663 11 view .LVU2368
 6863 2995 4883C020 		add	rax, 32	# ivtmp.421,
 6864              	.L601:
 664:sieve_extend.c ****     }
 6865              		.loc 1 664 9 view .LVU2369
 6866              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6867              		.loc 1 664 60 is_stmt 0 view .LVU2370
 6868 2999 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR [r11+rax]	# tmp1272, MEM[base: vectp.371_257, index: ivtmp.421_731, offs
 6868      3403
 6869              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6870              		.loc 1 664 100 view .LVU2371
 6871 299f C5FE6F24 		vmovdqu	ymm4, YMMWORD PTR [rdi+rax]	# tmp1273, MEM[base: vectp.375_264, index: ivtmp.421_731, offs
 6871      07
 6872              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6873              		.loc 1 664 60 view .LVU2372
 6874 29a4 C4414DD3 		vpsrlq	ymm12, ymm6, xmm10	# vect__38.373, tmp1272, _12
 6874      E2
 6875              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6876              		.loc 1 664 100 view .LVU2373
 6877 29a9 C4415DF3 		vpsllq	ymm13, ymm4, xmm11	# vect__43.377, tmp1273, _18
 6877      EB
 6878              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6879              		.loc 1 664 70 view .LVU2374
 6880 29ae C4411DEB 		vpor	ymm14, ymm12, ymm13	# vect__46.378, vect__38.373, vect__43.377
 6880      F5
 6881              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6882              		.loc 1 664 31 view .LVU2375
 6883 29b3 C4417E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm14	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B], 
 6883      3401
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6884              		.loc 1 663 43 is_stmt 1 view .LVU2376
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6885              		.loc 1 663 11 view .LVU2377
 6886 29b9 4883C020 		add	rax, 32	# ivtmp.421,
 6887 29bd 4C39E8   		cmp	rax, r13	# ivtmp.421, _733
 6888 29c0 0F844401 		je	.L649	#,
 6888      0000
 6889              	.L508:
 664:sieve_extend.c ****     }
 6890              		.loc 1 664 9 discriminator 2 view .LVU2378
 6891              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6892              		.loc 1 664 60 is_stmt 0 discriminator 2 view .LVU2379
 6893 29c6 C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r11+rax]	# tmp1206, MEM[base: vectp.371_257, index: ivtmp.421_731, off
 6893      3C03
 6894              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6895              		.loc 1 664 100 discriminator 2 view .LVU2380
 6896 29cc C57E6F04 		vmovdqu	ymm8, YMMWORD PTR [rdi+rax]	# tmp1207, MEM[base: vectp.375_264, index: ivtmp.421_731, offs
 6896      07
GAS LISTING /tmp/ccfflXEb.s 			page 193


 6897              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6898              		.loc 1 664 60 discriminator 2 view .LVU2381
 6899 29d1 C4C105D3 		vpsrlq	ymm1, ymm15, xmm10	# vect__38.373, tmp1206, _12
 6899      CA
 6900              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6901              		.loc 1 664 100 discriminator 2 view .LVU2382
 6902 29d6 C4C13DF3 		vpsllq	ymm0, ymm8, xmm11	# vect__43.377, tmp1207, _18
 6902      C3
 6903              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6904              		.loc 1 664 70 discriminator 2 view .LVU2383
 6905 29db C5F5EBE8 		vpor	ymm5, ymm1, ymm0	# vect__46.378, vect__38.373, vect__43.377
 6906              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6907              		.loc 1 664 31 discriminator 2 view .LVU2384
 6908 29df C4C17E7F 		vmovdqu	YMMWORD PTR [r9+rax], ymm5	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B], v
 6908      2C01
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6909              		.loc 1 663 43 is_stmt 1 discriminator 2 view .LVU2385
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6910              		.loc 1 663 11 discriminator 2 view .LVU2386
 664:sieve_extend.c ****     }
 6911              		.loc 1 664 9 discriminator 2 view .LVU2387
 6912              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6913              		.loc 1 664 60 is_stmt 0 discriminator 2 view .LVU2388
 6914 29e5 C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 32[r11+rax]	# tmp1208, MEM[base: vectp.371_257, index: ivtmp.421_731, of
 6914      4C0320
 6915              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6916              		.loc 1 664 100 discriminator 2 view .LVU2389
 6917 29ec C5FE6F5C 		vmovdqu	ymm3, YMMWORD PTR 32[rdi+rax]	# tmp1209, MEM[base: vectp.375_264, index: ivtmp.421_731, of
 6917      0720
 6918              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6919              		.loc 1 664 60 discriminator 2 view .LVU2390
 6920 29f2 C4C135D3 		vpsrlq	ymm7, ymm9, xmm10	# vect__38.373, tmp1208, _12
 6920      FA
 6921              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6922              		.loc 1 664 100 discriminator 2 view .LVU2391
 6923 29f7 C4C165F3 		vpsllq	ymm2, ymm3, xmm11	# vect__43.377, tmp1209, _18
 6923      D3
 6924              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6925              		.loc 1 664 70 discriminator 2 view .LVU2392
 6926 29fc C5C5EBF2 		vpor	ymm6, ymm7, ymm2	# vect__46.378, vect__38.373, vect__43.377
 6927              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6928              		.loc 1 664 31 discriminator 2 view .LVU2393
 6929 2a00 C4C17E7F 		vmovdqu	YMMWORD PTR 32[r9+rax], ymm6	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B],
 6929      740120
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6930              		.loc 1 663 43 is_stmt 1 discriminator 2 view .LVU2394
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
GAS LISTING /tmp/ccfflXEb.s 			page 194


 6931              		.loc 1 663 11 discriminator 2 view .LVU2395
 664:sieve_extend.c ****     }
 6932              		.loc 1 664 9 discriminator 2 view .LVU2396
 6933              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6934              		.loc 1 664 60 is_stmt 0 discriminator 2 view .LVU2397
 6935 2a07 C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 64[r11+rax]	# tmp1210, MEM[base: vectp.371_257, index: ivtmp.421_731, o
 6935      640340
 6936              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6937              		.loc 1 664 100 discriminator 2 view .LVU2398
 6938 2a0e C5FE6F64 		vmovdqu	ymm4, YMMWORD PTR 64[rdi+rax]	# tmp1211, MEM[base: vectp.375_264, index: ivtmp.421_731, of
 6938      0740
 6939              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6940              		.loc 1 664 60 discriminator 2 view .LVU2399
 6941 2a14 C4411DD3 		vpsrlq	ymm13, ymm12, xmm10	# vect__38.373, tmp1210, _12
 6941      EA
 6942              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6943              		.loc 1 664 100 discriminator 2 view .LVU2400
 6944 2a19 C4415DF3 		vpsllq	ymm14, ymm4, xmm11	# vect__43.377, tmp1211, _18
 6944      F3
 6945              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6946              		.loc 1 664 70 discriminator 2 view .LVU2401
 6947 2a1e C44115EB 		vpor	ymm15, ymm13, ymm14	# vect__46.378, vect__38.373, vect__43.377
 6947      FE
 6948              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6949              		.loc 1 664 31 discriminator 2 view .LVU2402
 6950 2a23 C4417E7F 		vmovdqu	YMMWORD PTR 64[r9+rax], ymm15	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B]
 6950      7C0140
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6951              		.loc 1 663 43 is_stmt 1 discriminator 2 view .LVU2403
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6952              		.loc 1 663 11 discriminator 2 view .LVU2404
 664:sieve_extend.c ****     }
 6953              		.loc 1 664 9 discriminator 2 view .LVU2405
 6954              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6955              		.loc 1 664 60 is_stmt 0 discriminator 2 view .LVU2406
 6956 2a2a C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR 96[r11+rax]	# tmp1212, MEM[base: vectp.371_257, index: ivtmp.421_731, of
 6956      4C0360
 6957              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6958              		.loc 1 664 100 discriminator 2 view .LVU2407
 6959 2a31 C5FE6F44 		vmovdqu	ymm0, YMMWORD PTR 96[rdi+rax]	# tmp1213, MEM[base: vectp.375_264, index: ivtmp.421_731, of
 6959      0760
 6960              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6961              		.loc 1 664 60 discriminator 2 view .LVU2408
 6962 2a37 C44175D3 		vpsrlq	ymm8, ymm1, xmm10	# vect__38.373, tmp1212, _12
 6962      C2
 6963              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6964              		.loc 1 664 100 discriminator 2 view .LVU2409
GAS LISTING /tmp/ccfflXEb.s 			page 195


 6965 2a3c C4C17DF3 		vpsllq	ymm5, ymm0, xmm11	# vect__43.377, tmp1213, _18
 6965      EB
 6966              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6967              		.loc 1 664 70 discriminator 2 view .LVU2410
 6968 2a41 C53DEBCD 		vpor	ymm9, ymm8, ymm5	# vect__46.378, vect__38.373, vect__43.377
 6969              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6970              		.loc 1 664 31 discriminator 2 view .LVU2411
 6971 2a45 C4417E7F 		vmovdqu	YMMWORD PTR 96[r9+rax], ymm9	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B],
 6971      4C0160
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6972              		.loc 1 663 43 is_stmt 1 discriminator 2 view .LVU2412
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6973              		.loc 1 663 11 discriminator 2 view .LVU2413
 664:sieve_extend.c ****     }
 6974              		.loc 1 664 9 discriminator 2 view .LVU2414
 6975              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6976              		.loc 1 664 60 is_stmt 0 discriminator 2 view .LVU2415
 6977 2a4c C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 128[r11+rax]	# tmp1214, MEM[base: vectp.371_257, index: ivtmp.421_731, o
 6977      BC038000 
 6977      0000
 6978              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6979              		.loc 1 664 100 discriminator 2 view .LVU2416
 6980 2a56 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 128[rdi+rax]	# tmp1215, MEM[base: vectp.375_264, index: ivtmp.421_731, o
 6980      07800000 
 6980      00
 6981              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6982              		.loc 1 664 60 discriminator 2 view .LVU2417
 6983 2a5f C4C145D3 		vpsrlq	ymm2, ymm7, xmm10	# vect__38.373, tmp1214, _12
 6983      D2
 6984              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6985              		.loc 1 664 100 discriminator 2 view .LVU2418
 6986 2a64 C4C165F3 		vpsllq	ymm6, ymm3, xmm11	# vect__43.377, tmp1215, _18
 6986      F3
 6987              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6988              		.loc 1 664 70 discriminator 2 view .LVU2419
 6989 2a69 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.378, vect__38.373, vect__43.377
 6990              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 6991              		.loc 1 664 31 discriminator 2 view .LVU2420
 6992 2a6d C4417E7F 		vmovdqu	YMMWORD PTR 128[r9+rax], ymm12	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B
 6992      A4018000 
 6992      0000
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6993              		.loc 1 663 43 is_stmt 1 discriminator 2 view .LVU2421
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 6994              		.loc 1 663 11 discriminator 2 view .LVU2422
 664:sieve_extend.c ****     }
 6995              		.loc 1 664 9 discriminator 2 view .LVU2423
 6996              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 196


 6997              		.loc 1 664 60 is_stmt 0 discriminator 2 view .LVU2424
 6998 2a77 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR 160[r11+rax]	# tmp1216, MEM[base: vectp.371_257, index: ivtmp.421_731, 
 6998      AC03A000 
 6998      0000
 6999              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7000              		.loc 1 664 100 discriminator 2 view .LVU2425
 7001 2a81 C5FE6FA4 		vmovdqu	ymm4, YMMWORD PTR 160[rdi+rax]	# tmp1217, MEM[base: vectp.375_264, index: ivtmp.421_731, o
 7001      07A00000 
 7001      00
 7002              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7003              		.loc 1 664 60 discriminator 2 view .LVU2426
 7004 2a8a C44115D3 		vpsrlq	ymm14, ymm13, xmm10	# vect__38.373, tmp1216, _12
 7004      F2
 7005              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7006              		.loc 1 664 100 discriminator 2 view .LVU2427
 7007 2a8f C4415DF3 		vpsllq	ymm15, ymm4, xmm11	# vect__43.377, tmp1217, _18
 7007      FB
 7008              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7009              		.loc 1 664 70 discriminator 2 view .LVU2428
 7010 2a94 C4C10DEB 		vpor	ymm1, ymm14, ymm15	# vect__46.378, vect__38.373, vect__43.377
 7010      CF
 7011              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7012              		.loc 1 664 31 discriminator 2 view .LVU2429
 7013 2a99 C4C17E7F 		vmovdqu	YMMWORD PTR 160[r9+rax], ymm1	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B]
 7013      8C01A000 
 7013      0000
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7014              		.loc 1 663 43 is_stmt 1 discriminator 2 view .LVU2430
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7015              		.loc 1 663 11 discriminator 2 view .LVU2431
 664:sieve_extend.c ****     }
 7016              		.loc 1 664 9 discriminator 2 view .LVU2432
 7017              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7018              		.loc 1 664 60 is_stmt 0 discriminator 2 view .LVU2433
 7019 2aa3 C4417D6F 		vmovdqa	ymm8, YMMWORD PTR 192[r11+rax]	# tmp1218, MEM[base: vectp.371_257, index: ivtmp.421_731, o
 7019      8403C000 
 7019      0000
 7020              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7021              		.loc 1 664 100 discriminator 2 view .LVU2434
 7022 2aad C5FE6FAC 		vmovdqu	ymm5, YMMWORD PTR 192[rdi+rax]	# tmp1219, MEM[base: vectp.375_264, index: ivtmp.421_731, o
 7022      07C00000 
 7022      00
 7023              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7024              		.loc 1 664 60 discriminator 2 view .LVU2435
 7025 2ab6 C4C13DD3 		vpsrlq	ymm0, ymm8, xmm10	# vect__38.373, tmp1218, _12
 7025      C2
 7026              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7027              		.loc 1 664 100 discriminator 2 view .LVU2436
GAS LISTING /tmp/ccfflXEb.s 			page 197


 7028 2abb C44155F3 		vpsllq	ymm9, ymm5, xmm11	# vect__43.377, tmp1219, _18
 7028      CB
 7029              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7030              		.loc 1 664 70 discriminator 2 view .LVU2437
 7031 2ac0 C4C17DEB 		vpor	ymm7, ymm0, ymm9	# vect__46.378, vect__38.373, vect__43.377
 7031      F9
 7032              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7033              		.loc 1 664 31 discriminator 2 view .LVU2438
 7034 2ac5 C4C17E7F 		vmovdqu	YMMWORD PTR 192[r9+rax], ymm7	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B]
 7034      BC01C000 
 7034      0000
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7035              		.loc 1 663 43 is_stmt 1 discriminator 2 view .LVU2439
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7036              		.loc 1 663 11 discriminator 2 view .LVU2440
 664:sieve_extend.c ****     }
 7037              		.loc 1 664 9 discriminator 2 view .LVU2441
 7038              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7039              		.loc 1 664 60 is_stmt 0 discriminator 2 view .LVU2442
 7040 2acf C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 224[r11+rax]	# tmp1220, MEM[base: vectp.371_257, index: ivtmp.421_731, o
 7040      9403E000 
 7040      0000
 7041              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7042              		.loc 1 664 100 discriminator 2 view .LVU2443
 7043 2ad9 C5FE6F9C 		vmovdqu	ymm3, YMMWORD PTR 224[rdi+rax]	# tmp1221, MEM[base: vectp.375_264, index: ivtmp.421_731, o
 7043      07E00000 
 7043      00
 7044              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7045              		.loc 1 664 60 discriminator 2 view .LVU2444
 7046 2ae2 C4C16DD3 		vpsrlq	ymm6, ymm2, xmm10	# vect__38.373, tmp1220, _12
 7046      F2
 7047              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7048              		.loc 1 664 100 discriminator 2 view .LVU2445
 7049 2ae7 C44165F3 		vpsllq	ymm12, ymm3, xmm11	# vect__43.377, tmp1221, _18
 7049      E3
 7050              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7051              		.loc 1 664 70 discriminator 2 view .LVU2446
 7052 2aec C4414DEB 		vpor	ymm13, ymm6, ymm12	# vect__46.378, vect__38.373, vect__43.377
 7052      EC
 7053              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7054              		.loc 1 664 31 discriminator 2 view .LVU2447
 7055 2af1 C4417E7F 		vmovdqu	YMMWORD PTR 224[r9+rax], ymm13	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B
 7055      AC01E000 
 7055      0000
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7056              		.loc 1 663 43 is_stmt 1 discriminator 2 view .LVU2448
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7057              		.loc 1 663 11 discriminator 2 view .LVU2449
 7058 2afb 48050001 		add	rax, 256	# ivtmp.421,
GAS LISTING /tmp/ccfflXEb.s 			page 198


 7058      0000
 7059 2b01 4C39E8   		cmp	rax, r13	# ivtmp.421, _733
 7060 2b04 0F85BCFE 		jne	.L508	#,
 7060      FFFF
 7061              	.L649:
 7062 2b0a 4D89C3   		mov	r11, r8	# niters_vector_mult_vf.367, niters.365
 7063 2b0d 4983E3FC 		and	r11, -4	# niters_vector_mult_vf.367,
 7064 2b11 4D39D8   		cmp	r8, r11	# niters.365, niters_vector_mult_vf.367
 7065 2b14 4F8D241A 		lea	r12, [r10+r11]	# tmp.368,
 7066 2b18 4F8D2C1E 		lea	r13, [r14+r11]	# tmp.369,
 7067 2b1c 0F84DA00 		je	.L504	#,
 7067      0000
 7068              	.L505:
 7069              	.LVL288:
 664:sieve_extend.c ****     }
 7070              		.loc 1 664 9 view .LVU2450
 7071              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7072              		.loc 1 663 5 is_stmt 0 view .LVU2451
 7073 2b22 4C8B5C24 		mov	r11, QWORD PTR 80[rsp]	# aligned_copy_word, %sfp
 7073      50
 7074              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7075              		.loc 1 663 52 view .LVU2452
 7076 2b27 4D8D4D01 		lea	r9, 1[r13]	# copy_word,
 7077              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7078              		.loc 1 664 100 view .LVU2453
 7079 2b2b C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r12*8], rdx	# tmp733, *_521, shift_flipped
 7079      44E308
 7080              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7081              		.loc 1 664 60 view .LVU2454
 7082 2b32 C42283F7 		shrx	r14, QWORD PTR [rbx+r12*8], r15	# tmp735, *_516, shift
 7082      34E3
 7083              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7084              		.loc 1 664 70 view .LVU2455
 7085 2b38 4D09F0   		or	r8, r14	# tmp737, tmp735
 7086              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7087              		.loc 1 664 83 view .LVU2456
 7088 2b3b 4D8D5424 		lea	r10, 1[r12]	# _519,
 7088      01
 7089              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7090              		.loc 1 664 70 view .LVU2457
 7091 2b40 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_525, tmp737
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7092              		.loc 1 663 43 is_stmt 1 view .LVU2458
 7093              	.LVL289:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7094              		.loc 1 663 11 view .LVU2459
 7095              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7096              		.loc 1 663 5 is_stmt 0 view .LVU2460
 7097 2b44 4D39CB   		cmp	r11, r9	# aligned_copy_word, copy_word
GAS LISTING /tmp/ccfflXEb.s 			page 199


 7098 2b47 0F82AF00 		jb	.L504	#,
 7098      0000
 664:sieve_extend.c ****     }
 7099              		.loc 1 664 9 is_stmt 1 view .LVU2461
 7100              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7101              		.loc 1 664 60 is_stmt 0 view .LVU2462
 7102 2b4d 4A8B3CD3 		mov	rdi, QWORD PTR [rbx+r10*8]	# *_533, *_533
 7103              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7104              		.loc 1 664 100 view .LVU2463
 7105 2b51 C4A2E9F7 		shlx	rsi, QWORD PTR 8[rbx+r10*8], rdx	# tmp738, *_538, shift_flipped
 7105      74D308
 7106              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7107              		.loc 1 663 52 view .LVU2464
 7108 2b58 4D8D5502 		lea	r10, 2[r13]	# copy_word,
 7109              	.LVL290:
 7110              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7111              		.loc 1 664 60 view .LVU2465
 7112 2b5c C4E283F7 		shrx	rax, rdi, r15	# tmp740, *_533, shift
 7112      C7
 7113              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7114              		.loc 1 664 70 view .LVU2466
 7115 2b61 4809C6   		or	rsi, rax	# tmp742, tmp740
 7116              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7117              		.loc 1 663 5 view .LVU2467
 7118 2b64 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7119              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7120              		.loc 1 664 70 view .LVU2468
 7121 2b67 4A8934CB 		mov	QWORD PTR [rbx+r9*8], rsi	# *_542, tmp742
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7122              		.loc 1 663 43 is_stmt 1 view .LVU2469
 7123              	.LVL291:
 7124              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7125              		.loc 1 664 83 is_stmt 0 view .LVU2470
 7126 2b6b 4D8D4424 		lea	r8, 2[r12]	# _536,
 7126      02
 7127              	.LVL292:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7128              		.loc 1 663 11 is_stmt 1 view .LVU2471
 7129              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7130              		.loc 1 663 5 is_stmt 0 view .LVU2472
 7131 2b70 0F828600 		jb	.L504	#,
 7131      0000
 664:sieve_extend.c ****     }
 7132              		.loc 1 664 9 is_stmt 1 view .LVU2473
 7133              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7134              		.loc 1 664 100 is_stmt 0 view .LVU2474
 7135 2b76 C422E9F7 		shlx	r9, QWORD PTR 8[rbx+r8*8], rdx	# tmp743, *_555, shift_flipped
GAS LISTING /tmp/ccfflXEb.s 			page 200


 7135      4CC308
 7136              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7137              		.loc 1 664 60 view .LVU2475
 7138 2b7d 4E8B04C3 		mov	r8, QWORD PTR [rbx+r8*8]	# *_550, *_550
 7139              	.LVL293:
 664:sieve_extend.c ****     }
 7140              		.loc 1 664 60 view .LVU2476
 7141 2b81 C4C283F7 		shrx	rsi, r8, r15	# tmp745, *_550, shift
 7141      F0
 7142              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7143              		.loc 1 664 70 view .LVU2477
 7144 2b86 4909F1   		or	r9, rsi	# tmp747, tmp745
 7145 2b89 4E890CD3 		mov	QWORD PTR [rbx+r10*8], r9	# *_559, tmp747
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7146              		.loc 1 663 43 is_stmt 1 view .LVU2478
 7147              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7148              		.loc 1 663 52 is_stmt 0 view .LVU2479
 7149 2b8d 4D8D5503 		lea	r10, 3[r13]	# copy_word,
 7150              	.LVL294:
 7151              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7152              		.loc 1 663 5 view .LVU2480
 7153 2b91 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7154              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7155              		.loc 1 664 83 view .LVU2481
 7156 2b94 4D8D7424 		lea	r14, 3[r12]	# _553,
 7156      03
 7157              	.LVL295:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7158              		.loc 1 663 11 is_stmt 1 view .LVU2482
 7159              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7160              		.loc 1 663 5 is_stmt 0 view .LVU2483
 7161 2b99 7261     		jb	.L504	#,
 664:sieve_extend.c ****     }
 7162              		.loc 1 664 9 is_stmt 1 view .LVU2484
 7163              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7164              		.loc 1 664 100 is_stmt 0 view .LVU2485
 7165 2b9b C4A2E9F7 		shlx	rax, QWORD PTR 8[rbx+r14*8], rdx	# tmp748, *_572, shift_flipped
 7165      44F308
 7166              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7167              		.loc 1 664 60 view .LVU2486
 7168 2ba2 4A8B3CF3 		mov	rdi, QWORD PTR [rbx+r14*8]	# *_567, *_567
 7169 2ba6 C46283F7 		shrx	r14, rdi, r15	# tmp750, *_567, shift
 7169      F7
 7170              	.LVL296:
 7171              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7172              		.loc 1 664 70 view .LVU2487
 7173 2bab 4C09F0   		or	rax, r14	# tmp752, tmp750
 7174 2bae 4A8904D3 		mov	QWORD PTR [rbx+r10*8], rax	# *_576, tmp752
GAS LISTING /tmp/ccfflXEb.s 			page 201


 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7175              		.loc 1 663 43 is_stmt 1 view .LVU2488
 7176              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7177              		.loc 1 663 52 is_stmt 0 view .LVU2489
 7178 2bb2 4D8D5504 		lea	r10, 4[r13]	# copy_word,
 7179              	.LVL297:
 7180              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7181              		.loc 1 663 5 view .LVU2490
 7182 2bb6 4D39D3   		cmp	r11, r10	# aligned_copy_word, copy_word
 7183              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7184              		.loc 1 664 83 view .LVU2491
 7185 2bb9 4D8D4C24 		lea	r9, 4[r12]	# _570,
 7185      04
 7186              	.LVL298:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7187              		.loc 1 663 11 is_stmt 1 view .LVU2492
 7188              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7189              		.loc 1 663 5 is_stmt 0 view .LVU2493
 7190 2bbe 723C     		jb	.L504	#,
 664:sieve_extend.c ****     }
 7191              		.loc 1 664 9 is_stmt 1 view .LVU2494
 7192              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7193              		.loc 1 663 52 is_stmt 0 view .LVU2495
 7194 2bc0 4D8D6D05 		lea	r13, 5[r13]	# copy_word,
 7195              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7196              		.loc 1 664 100 view .LVU2496
 7197 2bc4 C422E9F7 		shlx	r8, QWORD PTR 8[rbx+r9*8], rdx	# tmp753, *_589, shift_flipped
 7197      44CB08
 7198              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7199              		.loc 1 664 60 view .LVU2497
 7200 2bcb 4A8B34CB 		mov	rsi, QWORD PTR [rbx+r9*8]	# *_584, *_584
 7201 2bcf C46283F7 		shrx	r9, rsi, r15	# tmp755, *_584, shift
 7201      CE
 7202              	.LVL299:
 7203              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7204              		.loc 1 664 70 view .LVU2498
 7205 2bd4 4D09C8   		or	r8, r9	# tmp757, tmp755
 7206              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7207              		.loc 1 663 5 view .LVU2499
 7208 2bd7 4D39EB   		cmp	r11, r13	# aligned_copy_word, copy_word
 7209              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7210              		.loc 1 664 70 view .LVU2500
 7211 2bda 4E8904D3 		mov	QWORD PTR [rbx+r10*8], r8	# *_593, tmp757
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7212              		.loc 1 663 43 is_stmt 1 view .LVU2501
 7213              	.LVL300:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
GAS LISTING /tmp/ccfflXEb.s 			page 202


 7214              		.loc 1 663 11 view .LVU2502
 7215              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7216              		.loc 1 664 83 is_stmt 0 view .LVU2503
 7217 2bde 4D8D6424 		lea	r12, 5[r12]	# _587,
 7217      05
 7218              	.LVL301:
 7219              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7220              		.loc 1 663 5 view .LVU2504
 7221 2be3 7217     		jb	.L504	#,
 664:sieve_extend.c ****     }
 7222              		.loc 1 664 9 is_stmt 1 view .LVU2505
 7223              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7224              		.loc 1 664 60 is_stmt 0 view .LVU2506
 7225 2be5 4E8B1CE3 		mov	r11, QWORD PTR [rbx+r12*8]	# *_232, *_232
 7226              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7227              		.loc 1 664 100 view .LVU2507
 7228 2be9 C4A2E9F7 		shlx	rdx, QWORD PTR 8[rbx+r12*8], rdx	# tmp758, *_237, shift_flipped
 7228      54E308
 7229              	.LVL302:
 7230              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7231              		.loc 1 664 60 view .LVU2508
 7232 2bf0 C44283F7 		shrx	r15, r11, r15	# tmp760, *_232, shift
 7232      FB
 7233              	.LVL303:
 7234              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7235              		.loc 1 664 70 view .LVU2509
 7236 2bf5 4C09FA   		or	rdx, r15	# tmp762, tmp760
 7237 2bf8 4A8914EB 		mov	QWORD PTR [rbx+r13*8], rdx	# *_241, tmp762
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7238              		.loc 1 663 43 is_stmt 1 view .LVU2510
 7239              	.LVL304:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7240              		.loc 1 663 11 view .LVU2511
 7241              	.L504:
 667:sieve_extend.c **** 
 7242              		.loc 1 667 5 view .LVU2512
 7243              	# sieve_extend.c:667:     if (copy_word >= destination_stop_word) return;
 667:sieve_extend.c **** 
 7244              		.loc 1 667 8 is_stmt 0 view .LVU2513
 7245 2bfc 4C8B5424 		mov	r10, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7245      58
 7246 2c01 4939CA   		cmp	r10, rcx	# destination_stop_word, tmp.356
 7247 2c04 0F860E04 		jbe	.L670	#,
 7247      0000
 669:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7248              		.loc 1 669 5 is_stmt 1 view .LVU2514
 7249              	# sieve_extend.c:669:     source_word = copy_word - size; // recalibrate
 669:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7250              		.loc 1 669 17 is_stmt 0 view .LVU2515
 7251 2c0a 488B7C24 		mov	rdi, QWORD PTR 24[rsp]	# size, %sfp
 7251      18
GAS LISTING /tmp/ccfflXEb.s 			page 203


 7252 2c0f 4989CC   		mov	r12, rcx	# tmp.355, tmp.356
 7253              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7254              		.loc 1 673 21 view .LVU2516
 7255 2c12 488D040F 		lea	rax, [rdi+rcx]	# ivtmp.416,
 7256              	# sieve_extend.c:669:     source_word = copy_word - size; // recalibrate
 669:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7257              		.loc 1 669 17 view .LVU2517
 7258 2c16 4929FC   		sub	r12, rdi	# tmp.355, size
 7259              	.LVL305:
 670:sieve_extend.c **** 
 7260              		.loc 1 670 5 is_stmt 1 view .LVU2518
 7261              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7262              		.loc 1 673 5 is_stmt 0 view .LVU2519
 7263 2c19 4939C2   		cmp	r10, rax	# destination_stop_word, ivtmp.416
 7264              	# sieve_extend.c:670:     const size_t memsize = (size_t)size*sizeof(bitword_t);
 670:sieve_extend.c **** 
 7265              		.loc 1 670 18 view .LVU2520
 7266 2c1c 4C8D34FD 		lea	r14, 0[0+rdi*8]	# memsize,
 7266      00000000 
 7267              	.LVL306:
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7268              		.loc 1 673 11 is_stmt 1 view .LVU2521
 7269              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7270              		.loc 1 673 5 is_stmt 0 view .LVU2522
 7271 2c24 0F826B01 		jb	.L511	#,
 7271      0000
 7272 2c2a 4C8D2CCB 		lea	r13, [rbx+rcx*8]	# tmp765,
 7273 2c2e 488D0CC5 		lea	rcx, 0[0+rax*8]	# tmp766,
 7273      00000000 
 7274              	.LVL307:
 7275              	# sieve_extend.c:674:         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 674:sieve_extend.c **** 
 7276              		.loc 1 674 40 view .LVU2523
 7277 2c36 4E8D3CE3 		lea	r15, [rbx+r12*8]	# _48,
 7278 2c3a 4929CD   		sub	r13, rcx	# _437, tmp766
 7279 2c3d 4C896424 		mov	QWORD PTR 72[rsp], r12	# %sfp, tmp.355
 7279      48
 7280 2c42 4989FC   		mov	r12, rdi	# size, size
 7281              	.LVL308:
 674:sieve_extend.c **** 
 7282              		.loc 1 674 40 view .LVU2524
 7283 2c45 48895C24 		mov	QWORD PTR 64[rsp], rbx	# %sfp, bitstorage
 7283      40
 7284 2c4a 4C89D3   		mov	rbx, r10	# destination_stop_word, destination_stop_word
 7285              	.LVL309:
 674:sieve_extend.c **** 
 7286              		.loc 1 674 40 view .LVU2525
 7287 2c4d C5F877   		vzeroupper
 7288              	.LVL310:
 7289              	.L512:
 674:sieve_extend.c **** 
 7290              		.loc 1 674 9 is_stmt 1 discriminator 2 view .LVU2526
 7291              	.LBB386:
 7292              	.LBI386:
GAS LISTING /tmp/ccfflXEb.s 			page 204


  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7293              		.loc 2 31 1 discriminator 2 view .LVU2527
 7294              	.LBB387:
 7295              		.loc 2 34 3 discriminator 2 view .LVU2528
 7296              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7297              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU2529
 7298 2c50 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp768,
 7298      00
 7299 2c55 4C89F2   		mov	rdx, r14	#, memsize
 7300 2c58 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.416
 7300      50
 7301 2c5d 4C89FE   		mov	rsi, r15	#, _48
 7302 2c60 E8000000 		call	memcpy@PLT	#
 7302      00
 7303              	.LVL311:
 7304              		.loc 2 34 10 discriminator 2 view .LVU2530
 7305              	.LBE387:
 7306              	.LBE386:
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7307              		.loc 1 673 54 is_stmt 1 discriminator 2 view .LVU2531
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7308              		.loc 1 673 11 discriminator 2 view .LVU2532
 7309 2c65 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.416, %sfp
 7309      50
 7310 2c6a 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.416,
 7311              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7312              		.loc 1 673 5 is_stmt 0 discriminator 2 view .LVU2533
 7313 2c6e 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.416
 7314 2c71 0F820901 		jb	.L658	#,
 7314      0000
 674:sieve_extend.c **** 
 7315              		.loc 1 674 9 is_stmt 1 view .LVU2534
 7316              	.LVL312:
 7317              	.LBB395:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7318              		.loc 2 31 1 view .LVU2535
 7319              	.LBB388:
 7320              		.loc 2 34 3 view .LVU2536
 7321              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7322              		.loc 2 34 10 is_stmt 0 view .LVU2537
 7323 2c77 498D7CC5 		lea	rdi, 0[r13+rax*8]	# tmp990,
 7323      00
 7324 2c7c 4C89F2   		mov	rdx, r14	#, memsize
 7325 2c7f 48894424 		mov	QWORD PTR 80[rsp], rax	# %sfp, ivtmp.416
 7325      50
 7326              	.LVL313:
 7327              		.loc 2 34 10 view .LVU2538
 7328 2c84 4C89FE   		mov	rsi, r15	#, _48
 7329 2c87 E8000000 		call	memcpy@PLT	#
 7329      00
 7330              	.LVL314:
 7331              		.loc 2 34 10 view .LVU2539
 7332              	.LBE388:
 7333              	.LBE395:
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7334              		.loc 1 673 54 is_stmt 1 view .LVU2540
GAS LISTING /tmp/ccfflXEb.s 			page 205


 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7335              		.loc 1 673 11 view .LVU2541
 7336 2c8c 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.416, %sfp
 7336      50
 7337 2c91 4E8D0421 		lea	r8, [rcx+r12]	# ivtmp.416,
 7338              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7339              		.loc 1 673 5 is_stmt 0 view .LVU2542
 7340 2c95 4C39C3   		cmp	rbx, r8	# destination_stop_word, ivtmp.416
 7341 2c98 0F82E200 		jb	.L658	#,
 7341      0000
 674:sieve_extend.c **** 
 7342              		.loc 1 674 9 is_stmt 1 view .LVU2543
 7343              	.LVL315:
 7344              	.LBB396:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7345              		.loc 2 31 1 view .LVU2544
 7346              	.LBB389:
 7347              		.loc 2 34 3 view .LVU2545
 7348              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7349              		.loc 2 34 10 is_stmt 0 view .LVU2546
 7350 2c9e 4C89FE   		mov	rsi, r15	#, _48
 7351 2ca1 4B8D7CC5 		lea	rdi, 0[r13+r8*8]	# tmp993,
 7351      00
 7352 2ca6 4C894424 		mov	QWORD PTR 80[rsp], r8	# %sfp, ivtmp.416
 7352      50
 7353 2cab 4C89F2   		mov	rdx, r14	#, memsize
 7354 2cae E8000000 		call	memcpy@PLT	#
 7354      00
 7355              	.LVL316:
 7356              		.loc 2 34 10 view .LVU2547
 7357              	.LBE389:
 7358              	.LBE396:
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7359              		.loc 1 673 54 is_stmt 1 view .LVU2548
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7360              		.loc 1 673 11 view .LVU2549
 7361 2cb3 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.416, %sfp
 7361      50
 7362 2cb8 4A8D3421 		lea	rsi, [rcx+r12]	# ivtmp.416,
 7363              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7364              		.loc 1 673 5 is_stmt 0 view .LVU2550
 7365 2cbc 4839F3   		cmp	rbx, rsi	# destination_stop_word, ivtmp.416
 7366 2cbf 0F82BB00 		jb	.L658	#,
 7366      0000
 674:sieve_extend.c **** 
 7367              		.loc 1 674 9 is_stmt 1 view .LVU2551
 7368              	.LVL317:
 7369              	.LBB397:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7370              		.loc 2 31 1 view .LVU2552
 7371              	.LBB390:
 7372              		.loc 2 34 3 view .LVU2553
 7373              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7374              		.loc 2 34 10 is_stmt 0 view .LVU2554
 7375 2cc5 498D7CF5 		lea	rdi, 0[r13+rsi*8]	# tmp996,
GAS LISTING /tmp/ccfflXEb.s 			page 206


 7375      00
 7376 2cca 4C89F2   		mov	rdx, r14	#, memsize
 7377 2ccd 48897424 		mov	QWORD PTR 80[rsp], rsi	# %sfp, ivtmp.416
 7377      50
 7378 2cd2 4C89FE   		mov	rsi, r15	#, _48
 7379 2cd5 E8000000 		call	memcpy@PLT	#
 7379      00
 7380              	.LVL318:
 7381              		.loc 2 34 10 view .LVU2555
 7382              	.LBE390:
 7383              	.LBE397:
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7384              		.loc 1 673 54 is_stmt 1 view .LVU2556
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7385              		.loc 1 673 11 view .LVU2557
 7386 2cda 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.416, %sfp
 7386      50
 7387 2cdf 4E8D0C21 		lea	r9, [rcx+r12]	# ivtmp.416,
 7388              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7389              		.loc 1 673 5 is_stmt 0 view .LVU2558
 7390 2ce3 4C39CB   		cmp	rbx, r9	# destination_stop_word, ivtmp.416
 7391 2ce6 0F829400 		jb	.L658	#,
 7391      0000
 674:sieve_extend.c **** 
 7392              		.loc 1 674 9 is_stmt 1 view .LVU2559
 7393              	.LVL319:
 7394              	.LBB398:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7395              		.loc 2 31 1 view .LVU2560
 7396              	.LBB391:
 7397              		.loc 2 34 3 view .LVU2561
 7398              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7399              		.loc 2 34 10 is_stmt 0 view .LVU2562
 7400 2cec 4C89F2   		mov	rdx, r14	#, memsize
 7401 2cef 4B8D7CCD 		lea	rdi, 0[r13+r9*8]	# tmp999,
 7401      00
 7402 2cf4 4C894C24 		mov	QWORD PTR 80[rsp], r9	# %sfp, ivtmp.416
 7402      50
 7403 2cf9 4C89FE   		mov	rsi, r15	#, _48
 7404 2cfc E8000000 		call	memcpy@PLT	#
 7404      00
 7405              	.LVL320:
 7406              		.loc 2 34 10 view .LVU2563
 7407              	.LBE391:
 7408              	.LBE398:
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7409              		.loc 1 673 54 is_stmt 1 view .LVU2564
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7410              		.loc 1 673 11 view .LVU2565
 7411 2d01 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.416, %sfp
 7411      50
 7412 2d06 4A8D1421 		lea	rdx, [rcx+r12]	# ivtmp.416,
 7413              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7414              		.loc 1 673 5 is_stmt 0 view .LVU2566
 7415 2d0a 4839D3   		cmp	rbx, rdx	# destination_stop_word, ivtmp.416
GAS LISTING /tmp/ccfflXEb.s 			page 207


 7416 2d0d 7271     		jb	.L658	#,
 674:sieve_extend.c **** 
 7417              		.loc 1 674 9 is_stmt 1 view .LVU2567
 7418              	.LVL321:
 7419              	.LBB399:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7420              		.loc 2 31 1 view .LVU2568
 7421              	.LBB392:
 7422              		.loc 2 34 3 view .LVU2569
 7423              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7424              		.loc 2 34 10 is_stmt 0 view .LVU2570
 7425 2d0f 498D7CD5 		lea	rdi, 0[r13+rdx*8]	# tmp1002,
 7425      00
 7426 2d14 4C89FE   		mov	rsi, r15	#, _48
 7427 2d17 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, ivtmp.416
 7427      50
 7428 2d1c 4C89F2   		mov	rdx, r14	#, memsize
 7429 2d1f E8000000 		call	memcpy@PLT	#
 7429      00
 7430              	.LVL322:
 7431              		.loc 2 34 10 view .LVU2571
 7432              	.LBE392:
 7433              	.LBE399:
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7434              		.loc 1 673 54 is_stmt 1 view .LVU2572
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7435              		.loc 1 673 11 view .LVU2573
 7436 2d24 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.416, %sfp
 7436      50
 7437 2d29 4E8D1C21 		lea	r11, [rcx+r12]	# ivtmp.416,
 7438              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7439              		.loc 1 673 5 is_stmt 0 view .LVU2574
 7440 2d2d 4C39DB   		cmp	rbx, r11	# destination_stop_word, ivtmp.416
 7441 2d30 724E     		jb	.L658	#,
 674:sieve_extend.c **** 
 7442              		.loc 1 674 9 is_stmt 1 view .LVU2575
 7443              	.LVL323:
 7444              	.LBB400:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7445              		.loc 2 31 1 view .LVU2576
 7446              	.LBB393:
 7447              		.loc 2 34 3 view .LVU2577
 7448              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7449              		.loc 2 34 10 is_stmt 0 view .LVU2578
 7450 2d32 4B8D7CDD 		lea	rdi, 0[r13+r11*8]	# tmp1005,
 7450      00
 7451 2d37 4C89F2   		mov	rdx, r14	#, memsize
 7452 2d3a 4C895C24 		mov	QWORD PTR 80[rsp], r11	# %sfp, ivtmp.416
 7452      50
 7453 2d3f 4C89FE   		mov	rsi, r15	#, _48
 7454 2d42 E8000000 		call	memcpy@PLT	#
 7454      00
 7455              	.LVL324:
 7456              		.loc 2 34 10 view .LVU2579
 7457              	.LBE393:
 7458              	.LBE400:
GAS LISTING /tmp/ccfflXEb.s 			page 208


 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7459              		.loc 1 673 54 is_stmt 1 view .LVU2580
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7460              		.loc 1 673 11 view .LVU2581
 7461 2d47 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.416, %sfp
 7461      50
 7462 2d4c 4E8D1421 		lea	r10, [rcx+r12]	# ivtmp.416,
 7463              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7464              		.loc 1 673 5 is_stmt 0 view .LVU2582
 7465 2d50 4C39D3   		cmp	rbx, r10	# destination_stop_word, ivtmp.416
 7466 2d53 722B     		jb	.L658	#,
 674:sieve_extend.c **** 
 7467              		.loc 1 674 9 is_stmt 1 view .LVU2583
 7468              	.LVL325:
 7469              	.LBB401:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 7470              		.loc 2 31 1 view .LVU2584
 7471              	.LBB394:
 7472              		.loc 2 34 3 view .LVU2585
 7473              	# /usr/include/x86_64-linux-gnu/bits/string_fortified.h:34:   return __builtin___memcpy_chk (__dest
 7474              		.loc 2 34 10 is_stmt 0 view .LVU2586
 7475 2d55 4B8D7CD5 		lea	rdi, 0[r13+r10*8]	# tmp1008,
 7475      00
 7476 2d5a 4C89F2   		mov	rdx, r14	#, memsize
 7477 2d5d 4C895424 		mov	QWORD PTR 80[rsp], r10	# %sfp, ivtmp.416
 7477      50
 7478 2d62 4C89FE   		mov	rsi, r15	#, _48
 7479 2d65 E8000000 		call	memcpy@PLT	#
 7479      00
 7480              	.LVL326:
 7481              		.loc 2 34 10 view .LVU2587
 7482              	.LBE394:
 7483              	.LBE401:
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7484              		.loc 1 673 54 is_stmt 1 view .LVU2588
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7485              		.loc 1 673 11 view .LVU2589
 7486 2d6a 488B4C24 		mov	rcx, QWORD PTR 80[rsp]	# ivtmp.416, %sfp
 7486      50
 7487              	.LVL327:
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7488              		.loc 1 673 11 is_stmt 0 view .LVU2590
 7489 2d6f 4A8D0421 		lea	rax, [rcx+r12]	# ivtmp.416,
 7490              	.LVL328:
 7491              	# sieve_extend.c:673:     for (;copy_word + size <= destination_stop_word; copy_word += size) 
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7492              		.loc 1 673 5 view .LVU2591
 7493 2d73 4839C3   		cmp	rbx, rax	# destination_stop_word, ivtmp.416
 7494 2d76 0F83D4FE 		jnb	.L512	#,
 7494      FFFF
 7495              	.LVL329:
 7496 2d7c 0F1F4000 		.p2align 4
 7497              		.p2align 3
 7498              	.L658:
 673:sieve_extend.c ****         memcpy(&bitstorage[copy_word], &bitstorage[source_word],memsize );
 7499              		.loc 1 673 5 view .LVU2592
GAS LISTING /tmp/ccfflXEb.s 			page 209


 7500 2d80 4C8B6424 		mov	r12, QWORD PTR 72[rsp]	# tmp.355, %sfp
 7500      48
 7501              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7502              		.loc 1 677 5 view .LVU2593
 7503 2d85 48394C24 		cmp	QWORD PTR 88[rsp], rcx	# %sfp, tmp.356
 7503      58
 7504 2d8a 488B5C24 		mov	rbx, QWORD PTR 64[rsp]	# bitstorage, %sfp
 7504      40
 7505              	.LVL330:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7506              		.loc 1 677 11 is_stmt 1 view .LVU2594
 7507              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7508              		.loc 1 677 5 is_stmt 0 view .LVU2595
 7509 2d8f 0F827402 		jb	.L671	#,
 7509      0000
 7510              	.LVL331:
 7511              	.L511:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7512              		.loc 1 677 5 view .LVU2596
 7513 2d95 4A8D3CE3 		lea	rdi, [rbx+r12*8]	# vectp.350,
 7514 2d99 41B80500 		mov	r8d, 5	# tmp778,
 7514      0000
 7515 2d9f 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7515      58
 7516              	.LVL332:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7517              		.loc 1 677 5 view .LVU2597
 7518 2da4 4989FD   		mov	r13, rdi	# tmp775, vectp.350
 7519 2da7 49C1ED03 		shr	r13, 3	# tmp775,
 7520 2dab 49F7DD   		neg	r13	# tmp776
 7521 2dae 4183E503 		and	r13d, 3	# prolog_loop_niters.351,
 7522 2db2 4D8D7E01 		lea	r15, 1[r14]	# _49,
 7523 2db6 498D7503 		lea	rsi, 3[r13]	# tmp777,
 7524 2dba 4883FE05 		cmp	rsi, 5	# tmp777,
 7525 2dbe 490F42F0 		cmovb	rsi, r8	# tmp777,, tmp967, tmp778
 7526 2dc2 4929CE   		sub	r14, rcx	# tmp779, tmp.356
 7527 2dc5 4C39F6   		cmp	rsi, r14	# tmp967, tmp779
 7528 2dc8 0F87BA01 		ja	.L514	#,
 7528      0000
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7529              		.loc 1 677 5 view .LVU2598
 7530 2dce 4D85ED   		test	r13, r13	# prolog_loop_niters.351
 7531 2dd1 0F846902 		je	.L522	#,
 7531      0000
 678:sieve_extend.c **** 
 7532              		.loc 1 678 9 is_stmt 1 view .LVU2599
 7533              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7534              		.loc 1 678 43 is_stmt 0 view .LVU2600
 7535 2dd7 488B17   		mov	rdx, QWORD PTR [rdi]	# _80, MEM[(uint64_t *)vectp.350_198]
 7536 2dda 4983FD01 		cmp	r13, 1	# prolog_loop_niters.351,
 7537              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7538              		.loc 1 677 57 view .LVU2601
 7539 2dde 4C8D5901 		lea	r11, 1[rcx]	# copy_word,
GAS LISTING /tmp/ccfflXEb.s 			page 210


 7540              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7541              		.loc 1 677 71 view .LVU2602
 7542 2de2 4D8D7424 		lea	r14, 1[r12]	# source_word,
 7542      01
 7543              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7544              		.loc 1 678 31 view .LVU2603
 7545 2de7 488914CB 		mov	QWORD PTR [rbx+rcx*8], rdx	# *_56, _80
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7546              		.loc 1 677 48 is_stmt 1 view .LVU2604
 7547              	.LVL333:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7548              		.loc 1 677 11 view .LVU2605
 7549 2deb 7428     		je	.L515	#,
 678:sieve_extend.c **** 
 7550              		.loc 1 678 9 view .LVU2606
 7551              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7552              		.loc 1 678 43 is_stmt 0 view .LVU2607
 7553 2ded 4E8B14F3 		mov	r10, QWORD PTR [rbx+r14*8]	# _507, *_504
 7554 2df1 4983FD03 		cmp	r13, 3	# prolog_loop_niters.351,
 7555              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7556              		.loc 1 677 71 view .LVU2608
 7557 2df5 4D8D7424 		lea	r14, 2[r12]	# source_word,
 7557      02
 7558              	.LVL334:
 7559              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7560              		.loc 1 678 31 view .LVU2609
 7561 2dfa 4E8914DB 		mov	QWORD PTR [rbx+r11*8], r10	# *_506, _507
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7562              		.loc 1 677 48 is_stmt 1 view .LVU2610
 7563              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7564              		.loc 1 677 57 is_stmt 0 view .LVU2611
 7565 2dfe 4C8D5902 		lea	r11, 2[rcx]	# copy_word,
 7566              	.LVL335:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7567              		.loc 1 677 11 is_stmt 1 view .LVU2612
 7568 2e02 7511     		jne	.L515	#,
 678:sieve_extend.c **** 
 7569              		.loc 1 678 9 view .LVU2613
 7570              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7571              		.loc 1 678 43 is_stmt 0 view .LVU2614
 7572 2e04 4A8B04F3 		mov	rax, QWORD PTR [rbx+r14*8]	# _179, *_182
 7573              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7574              		.loc 1 677 71 view .LVU2615
 7575 2e08 4D8D7424 		lea	r14, 3[r12]	# source_word,
 7575      03
 7576              	.LVL336:
 7577              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7578              		.loc 1 678 31 view .LVU2616
GAS LISTING /tmp/ccfflXEb.s 			page 211


 7579 2e0d 4A8904DB 		mov	QWORD PTR [rbx+r11*8], rax	# *_180, _179
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7580              		.loc 1 677 48 is_stmt 1 view .LVU2617
 7581              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7582              		.loc 1 677 57 is_stmt 0 view .LVU2618
 7583 2e11 4C8D5903 		lea	r11, 3[rcx]	# copy_word,
 7584              	.LVL337:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7585              		.loc 1 677 11 is_stmt 1 view .LVU2619
 7586              	.L515:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7587              		.loc 1 677 11 is_stmt 0 view .LVU2620
 7588 2e15 4D29EF   		sub	r15, r13	# tmp780, prolog_loop_niters.351
 7589 2e18 4D01EC   		add	r12, r13	# tmp781, prolog_loop_niters.351
 7590 2e1b 4929CF   		sub	r15, rcx	# niters.352, tmp.356
 7591 2e1e 4C01E9   		add	rcx, r13	# tmp783, prolog_loop_niters.351
 7592 2e21 4C89FF   		mov	rdi, r15	# bnd.353, niters.352
 7593              	# sieve_extend.c:669:     source_word = copy_word - size; // recalibrate
 669:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7594              		.loc 1 669 17 view .LVU2621
 7595 2e24 31F6     		xor	esi, esi	# ivtmp.408
 7596 2e26 48C1EF02 		shr	rdi, 2	# bnd.353,
 7597 2e2a 4E8D24E3 		lea	r12, [rbx+r12*8]	# vectp.358,
 7598 2e2e 48C1E705 		sal	rdi, 5	# _635,
 7599 2e32 488D0CCB 		lea	rcx, [rbx+rcx*8]	# vectp.361,
 7600 2e36 4C8D6FE0 		lea	r13, -32[rdi]	# tmp793,
 7601 2e3a 49C1ED05 		shr	r13, 5	# tmp791,
 7602 2e3e 4983C501 		add	r13, 1	# tmp794,
 7603 2e42 4183E507 		and	r13d, 7	# tmp795,
 7604 2e46 0F849600 		je	.L517	#,
 7604      0000
 7605 2e4c 4983FD01 		cmp	r13, 1	# tmp795,
 7606 2e50 7478     		je	.L608	#,
 7607 2e52 4983FD02 		cmp	r13, 2	# tmp795,
 7608 2e56 7463     		je	.L609	#,
 7609 2e58 4983FD03 		cmp	r13, 3	# tmp795,
 7610 2e5c 744E     		je	.L610	#,
 7611 2e5e 4983FD04 		cmp	r13, 4	# tmp795,
 7612 2e62 7439     		je	.L611	#,
 7613 2e64 4983FD05 		cmp	r13, 5	# tmp795,
 7614 2e68 7424     		je	.L612	#,
 7615 2e6a 4983FD06 		cmp	r13, 6	# tmp795,
 7616 2e6e 740F     		je	.L613	#,
 7617              	.LVL338:
 678:sieve_extend.c **** 
 7618              		.loc 1 678 9 is_stmt 1 view .LVU2622
 7619              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7620              		.loc 1 678 31 is_stmt 0 view .LVU2623
 7621 2e70 C4417D6F 		vmovdqa	ymm10, YMMWORD PTR [r12]	# tmp1253, MEM[base: vectp.358_120, index: ivtmp.408_513, offset:
 7621      1424
 7622 2e76 BE200000 		mov	esi, 32	# ivtmp.408,
 7622      00
 7623 2e7b C57E7F11 		vmovdqu	YMMWORD PTR [rcx], ymm10	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B], tmp1
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7624              		.loc 1 677 48 is_stmt 1 view .LVU2624
GAS LISTING /tmp/ccfflXEb.s 			page 212


 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7625              		.loc 1 677 11 view .LVU2625
 7626              	.L613:
 678:sieve_extend.c **** 
 7627              		.loc 1 678 9 view .LVU2626
 7628              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7629              		.loc 1 678 31 is_stmt 0 view .LVU2627
 7630 2e7f C4417D6F 		vmovdqa	ymm11, YMMWORD PTR [r12+rsi]	# tmp1254, MEM[base: vectp.358_120, index: ivtmp.408_513, off
 7630      1C34
 7631 2e85 C57E7F1C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm11	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B], 
 7631      31
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7632              		.loc 1 677 48 is_stmt 1 view .LVU2628
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7633              		.loc 1 677 11 view .LVU2629
 7634 2e8a 4883C620 		add	rsi, 32	# ivtmp.408,
 7635              	.L612:
 678:sieve_extend.c **** 
 7636              		.loc 1 678 9 view .LVU2630
 7637              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7638              		.loc 1 678 31 is_stmt 0 view .LVU2631
 7639 2e8e C4417D6F 		vmovdqa	ymm14, YMMWORD PTR [r12+rsi]	# tmp1255, MEM[base: vectp.358_120, index: ivtmp.408_513, off
 7639      3434
 7640 2e94 C57E7F34 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm14	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B], 
 7640      31
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7641              		.loc 1 677 48 is_stmt 1 view .LVU2632
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7642              		.loc 1 677 11 view .LVU2633
 7643 2e99 4883C620 		add	rsi, 32	# ivtmp.408,
 7644              	.L611:
 678:sieve_extend.c **** 
 7645              		.loc 1 678 9 view .LVU2634
 7646              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7647              		.loc 1 678 31 is_stmt 0 view .LVU2635
 7648 2e9d C4C17D6F 		vmovdqa	ymm4, YMMWORD PTR [r12+rsi]	# tmp1256, MEM[base: vectp.358_120, index: ivtmp.408_513, offs
 7648      2434
 7649 2ea3 C5FE7F24 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm4	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B], t
 7649      31
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7650              		.loc 1 677 48 is_stmt 1 view .LVU2636
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7651              		.loc 1 677 11 view .LVU2637
 7652 2ea8 4883C620 		add	rsi, 32	# ivtmp.408,
 7653              	.L610:
 678:sieve_extend.c **** 
 7654              		.loc 1 678 9 view .LVU2638
 7655              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7656              		.loc 1 678 31 is_stmt 0 view .LVU2639
 7657 2eac C4417D6F 		vmovdqa	ymm15, YMMWORD PTR [r12+rsi]	# tmp1257, MEM[base: vectp.358_120, index: ivtmp.408_513, off
 7657      3C34
 7658 2eb2 C57E7F3C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm15	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B], 
 7658      31
GAS LISTING /tmp/ccfflXEb.s 			page 213


 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7659              		.loc 1 677 48 is_stmt 1 view .LVU2640
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7660              		.loc 1 677 11 view .LVU2641
 7661 2eb7 4883C620 		add	rsi, 32	# ivtmp.408,
 7662              	.L609:
 678:sieve_extend.c **** 
 7663              		.loc 1 678 9 view .LVU2642
 7664              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7665              		.loc 1 678 31 is_stmt 0 view .LVU2643
 7666 2ebb C4C17D6F 		vmovdqa	ymm1, YMMWORD PTR [r12+rsi]	# tmp1258, MEM[base: vectp.358_120, index: ivtmp.408_513, offs
 7666      0C34
 7667 2ec1 C5FE7F0C 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm1	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B], t
 7667      31
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7668              		.loc 1 677 48 is_stmt 1 view .LVU2644
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7669              		.loc 1 677 11 view .LVU2645
 7670 2ec6 4883C620 		add	rsi, 32	# ivtmp.408,
 7671              	.L608:
 678:sieve_extend.c **** 
 7672              		.loc 1 678 9 view .LVU2646
 7673              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7674              		.loc 1 678 31 is_stmt 0 view .LVU2647
 7675 2eca C4417D6F 		vmovdqa	ymm8, YMMWORD PTR [r12+rsi]	# tmp1259, MEM[base: vectp.358_120, index: ivtmp.408_513, offs
 7675      0434
 7676 2ed0 C57E7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm8	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B], t
 7676      31
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7677              		.loc 1 677 48 is_stmt 1 view .LVU2648
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7678              		.loc 1 677 11 view .LVU2649
 7679 2ed5 4883C620 		add	rsi, 32	# ivtmp.408,
 7680 2ed9 4839FE   		cmp	rsi, rdi	# ivtmp.408, _635
 7681 2edc 0F848E00 		je	.L647	#,
 7681      0000
 7682              	.L517:
 678:sieve_extend.c **** 
 7683              		.loc 1 678 9 discriminator 2 view .LVU2650
 7684              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7685              		.loc 1 678 31 is_stmt 0 discriminator 2 view .LVU2651
 7686 2ee2 C4C17D6F 		vmovdqa	ymm0, YMMWORD PTR [r12+rsi]	# tmp1239, MEM[base: vectp.358_120, index: ivtmp.408_513, offs
 7686      0434
 7687 2ee8 C5FE7F04 		vmovdqu	YMMWORD PTR [rcx+rsi], ymm0	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B], t
 7687      31
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7688              		.loc 1 677 48 is_stmt 1 discriminator 2 view .LVU2652
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7689              		.loc 1 677 11 discriminator 2 view .LVU2653
 678:sieve_extend.c **** 
 7690              		.loc 1 678 9 discriminator 2 view .LVU2654
 7691              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7692              		.loc 1 678 31 is_stmt 0 discriminator 2 view .LVU2655
GAS LISTING /tmp/ccfflXEb.s 			page 214


 7693 2eed C4C17D6F 		vmovdqa	ymm5, YMMWORD PTR 32[r12+rsi]	# tmp1240, MEM[base: vectp.358_120, index: ivtmp.408_513, of
 7693      6C3420
 7694 2ef4 C5FE7F6C 		vmovdqu	YMMWORD PTR 32[rcx+rsi], ymm5	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B],
 7694      3120
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7695              		.loc 1 677 48 is_stmt 1 discriminator 2 view .LVU2656
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7696              		.loc 1 677 11 discriminator 2 view .LVU2657
 678:sieve_extend.c **** 
 7697              		.loc 1 678 9 discriminator 2 view .LVU2658
 7698              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7699              		.loc 1 678 31 is_stmt 0 discriminator 2 view .LVU2659
 7700 2efa C4417D6F 		vmovdqa	ymm9, YMMWORD PTR 64[r12+rsi]	# tmp1241, MEM[base: vectp.358_120, index: ivtmp.408_513, of
 7700      4C3440
 7701 2f01 C57E7F4C 		vmovdqu	YMMWORD PTR 64[rcx+rsi], ymm9	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B],
 7701      3140
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7702              		.loc 1 677 48 is_stmt 1 discriminator 2 view .LVU2660
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7703              		.loc 1 677 11 discriminator 2 view .LVU2661
 678:sieve_extend.c **** 
 7704              		.loc 1 678 9 discriminator 2 view .LVU2662
 7705              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7706              		.loc 1 678 31 is_stmt 0 discriminator 2 view .LVU2663
 7707 2f07 C4C17D6F 		vmovdqa	ymm7, YMMWORD PTR 96[r12+rsi]	# tmp1242, MEM[base: vectp.358_120, index: ivtmp.408_513, of
 7707      7C3460
 7708 2f0e C5FE7F7C 		vmovdqu	YMMWORD PTR 96[rcx+rsi], ymm7	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B],
 7708      3160
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7709              		.loc 1 677 48 is_stmt 1 discriminator 2 view .LVU2664
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7710              		.loc 1 677 11 discriminator 2 view .LVU2665
 678:sieve_extend.c **** 
 7711              		.loc 1 678 9 discriminator 2 view .LVU2666
 7712              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7713              		.loc 1 678 31 is_stmt 0 discriminator 2 view .LVU2667
 7714 2f14 C4C17D6F 		vmovdqa	ymm2, YMMWORD PTR 128[r12+rsi]	# tmp1243, MEM[base: vectp.358_120, index: ivtmp.408_513, o
 7714      94348000 
 7714      0000
 7715 2f1e C5FE7F94 		vmovdqu	YMMWORD PTR 128[rcx+rsi], ymm2	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B]
 7715      31800000 
 7715      00
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7716              		.loc 1 677 48 is_stmt 1 discriminator 2 view .LVU2668
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7717              		.loc 1 677 11 discriminator 2 view .LVU2669
 678:sieve_extend.c **** 
 7718              		.loc 1 678 9 discriminator 2 view .LVU2670
 7719              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7720              		.loc 1 678 31 is_stmt 0 discriminator 2 view .LVU2671
 7721 2f27 C4C17D6F 		vmovdqa	ymm6, YMMWORD PTR 160[r12+rsi]	# tmp1244, MEM[base: vectp.358_120, index: ivtmp.408_513, o
 7721      B434A000 
 7721      0000
GAS LISTING /tmp/ccfflXEb.s 			page 215


 7722 2f31 C5FE7FB4 		vmovdqu	YMMWORD PTR 160[rcx+rsi], ymm6	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B]
 7722      31A00000 
 7722      00
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7723              		.loc 1 677 48 is_stmt 1 discriminator 2 view .LVU2672
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7724              		.loc 1 677 11 discriminator 2 view .LVU2673
 678:sieve_extend.c **** 
 7725              		.loc 1 678 9 discriminator 2 view .LVU2674
 7726              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7727              		.loc 1 678 31 is_stmt 0 discriminator 2 view .LVU2675
 7728 2f3a C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR 192[r12+rsi]	# tmp1245, MEM[base: vectp.358_120, index: ivtmp.408_513, o
 7728      9C34C000 
 7728      0000
 7729 2f44 C5FE7F9C 		vmovdqu	YMMWORD PTR 192[rcx+rsi], ymm3	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B]
 7729      31C00000 
 7729      00
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7730              		.loc 1 677 48 is_stmt 1 discriminator 2 view .LVU2676
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7731              		.loc 1 677 11 discriminator 2 view .LVU2677
 678:sieve_extend.c **** 
 7732              		.loc 1 678 9 discriminator 2 view .LVU2678
 7733              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7734              		.loc 1 678 31 is_stmt 0 discriminator 2 view .LVU2679
 7735 2f4d C4417D6F 		vmovdqa	ymm12, YMMWORD PTR 224[r12+rsi]	# tmp1246, MEM[base: vectp.358_120, index: ivtmp.408_513, 
 7735      A434E000 
 7735      0000
 7736 2f57 C57E7FA4 		vmovdqu	YMMWORD PTR 224[rcx+rsi], ymm12	# MEM[base: vectp.361_97, index: ivtmp.408_513, offset: 0B
 7736      31E00000 
 7736      00
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7737              		.loc 1 677 48 is_stmt 1 discriminator 2 view .LVU2680
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7738              		.loc 1 677 11 discriminator 2 view .LVU2681
 7739 2f60 4881C600 		add	rsi, 256	# ivtmp.408,
 7739      010000
 7740 2f67 4839FE   		cmp	rsi, rdi	# ivtmp.408, _635
 7741 2f6a 0F8572FF 		jne	.L517	#,
 7741      FFFF
 7742              	.L647:
 7743 2f70 4D89F8   		mov	r8, r15	# niters_vector_mult_vf.354, niters.352
 7744 2f73 4983E0FC 		and	r8, -4	# niters_vector_mult_vf.354,
 7745 2f77 4D39F8   		cmp	r8, r15	# niters_vector_mult_vf.354, niters.352
 7746 2f7a 4F8D2430 		lea	r12, [r8+r14]	# tmp.355,
 7747 2f7e 4B8D0C18 		lea	rcx, [r8+r11]	# tmp.356,
 7748 2f82 0F849000 		je	.L670	#,
 7748      0000
 7749              	.L514:
 7750              	.LVL339:
 678:sieve_extend.c **** 
 7751              		.loc 1 678 9 view .LVU2682
 7752              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7753              		.loc 1 677 5 is_stmt 0 view .LVU2683
GAS LISTING /tmp/ccfflXEb.s 			page 216


 7754 2f88 4C8B7424 		mov	r14, QWORD PTR 88[rsp]	# destination_stop_word, %sfp
 7754      58
 7755              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7756              		.loc 1 677 57 view .LVU2684
 7757 2f8d 4C8D4901 		lea	r9, 1[rcx]	# copy_word,
 7758              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7759              		.loc 1 678 43 view .LVU2685
 7760 2f91 4E8B3CE3 		mov	r15, QWORD PTR [rbx+r12*8]	# _90, *_141
 7761              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7762              		.loc 1 677 71 view .LVU2686
 7763 2f95 4D8D5C24 		lea	r11, 1[r12]	# source_word,
 7763      01
 7764              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7765              		.loc 1 677 5 view .LVU2687
 7766 2f9a 4D39CE   		cmp	r14, r9	# destination_stop_word, copy_word
 7767              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7768              		.loc 1 678 31 view .LVU2688
 7769 2f9d 4C893CCB 		mov	QWORD PTR [rbx+rcx*8], r15	# *_439, _90
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7770              		.loc 1 677 48 is_stmt 1 view .LVU2689
 7771              	.LVL340:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7772              		.loc 1 677 11 view .LVU2690
 7773              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7774              		.loc 1 677 5 is_stmt 0 view .LVU2691
 7775 2fa1 7275     		jb	.L670	#,
 678:sieve_extend.c **** 
 7776              		.loc 1 678 9 is_stmt 1 view .LVU2692
 7777              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7778              		.loc 1 678 43 is_stmt 0 view .LVU2693
 7779 2fa3 4A8B14DB 		mov	rdx, QWORD PTR [rbx+r11*8]	# _103, *_98
 7780              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7781              		.loc 1 677 57 view .LVU2694
 7782 2fa7 4C8D5102 		lea	r10, 2[rcx]	# copy_word,
 7783              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7784              		.loc 1 677 5 view .LVU2695
 7785 2fab 4D39D6   		cmp	r14, r10	# destination_stop_word, copy_word
 7786              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7787              		.loc 1 677 71 view .LVU2696
 7788 2fae 498D4424 		lea	rax, 2[r12]	# source_word,
 7788      02
 7789              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7790              		.loc 1 678 31 view .LVU2697
 7791 2fb3 4A8914CB 		mov	QWORD PTR [rbx+r9*8], rdx	# *_102, _103
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7792              		.loc 1 677 48 is_stmt 1 view .LVU2698
GAS LISTING /tmp/ccfflXEb.s 			page 217


 7793              	.LVL341:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7794              		.loc 1 677 11 view .LVU2699
 7795              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7796              		.loc 1 677 5 is_stmt 0 view .LVU2700
 7797 2fb7 725F     		jb	.L670	#,
 678:sieve_extend.c **** 
 7798              		.loc 1 678 9 is_stmt 1 view .LVU2701
 7799              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7800              		.loc 1 678 43 is_stmt 0 view .LVU2702
 7801 2fb9 488B3CC3 		mov	rdi, QWORD PTR [rbx+rax*8]	# _113, *_110
 7802              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7803              		.loc 1 677 57 view .LVU2703
 7804 2fbd 4C8D6903 		lea	r13, 3[rcx]	# copy_word,
 7805              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7806              		.loc 1 677 5 view .LVU2704
 7807 2fc1 4D39EE   		cmp	r14, r13	# destination_stop_word, copy_word
 7808              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7809              		.loc 1 677 71 view .LVU2705
 7810 2fc4 498D7424 		lea	rsi, 3[r12]	# source_word,
 7810      03
 7811              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7812              		.loc 1 678 31 view .LVU2706
 7813 2fc9 4A893CD3 		mov	QWORD PTR [rbx+r10*8], rdi	# *_112, _113
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7814              		.loc 1 677 48 is_stmt 1 view .LVU2707
 7815              	.LVL342:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7816              		.loc 1 677 11 view .LVU2708
 7817              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7818              		.loc 1 677 5 is_stmt 0 view .LVU2709
 7819 2fcd 7249     		jb	.L670	#,
 678:sieve_extend.c **** 
 7820              		.loc 1 678 9 is_stmt 1 view .LVU2710
 7821              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7822              		.loc 1 678 43 is_stmt 0 view .LVU2711
 7823 2fcf 4C8B04F3 		mov	r8, QWORD PTR [rbx+rsi*8]	# _35, *_501
 7824              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7825              		.loc 1 677 57 view .LVU2712
 7826 2fd3 4C8D7904 		lea	r15, 4[rcx]	# copy_word,
 7827              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7828              		.loc 1 677 71 view .LVU2713
 7829 2fd7 4983C404 		add	r12, 4	# source_word,
 7830              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7831              		.loc 1 677 5 view .LVU2714
 7832 2fdb 4D39F7   		cmp	r15, r14	# copy_word, destination_stop_word
GAS LISTING /tmp/ccfflXEb.s 			page 218


 7833              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7834              		.loc 1 678 31 view .LVU2715
 7835 2fde 4E8904EB 		mov	QWORD PTR [rbx+r13*8], r8	# *_132, _35
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7836              		.loc 1 677 48 is_stmt 1 view .LVU2716
 7837              	.LVL343:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7838              		.loc 1 677 11 view .LVU2717
 7839              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7840              		.loc 1 677 5 is_stmt 0 view .LVU2718
 7841 2fe2 7734     		ja	.L670	#,
 678:sieve_extend.c **** 
 7842              		.loc 1 678 9 is_stmt 1 view .LVU2719
 7843              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7844              		.loc 1 678 43 is_stmt 0 view .LVU2720
 7845 2fe4 4E8D0CE5 		lea	r9, 0[0+r12*8]	# _42,
 7845      00000000 
 7846              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7847              		.loc 1 677 57 view .LVU2721
 7848 2fec 4883C105 		add	rcx, 5	# copy_word,
 7849              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7850              		.loc 1 678 43 view .LVU2722
 7851 2ff0 4E8B24E3 		mov	r12, QWORD PTR [rbx+r12*8]	# _46, *_43
 7852              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7853              		.loc 1 677 5 view .LVU2723
 7854 2ff4 4939CE   		cmp	r14, rcx	# destination_stop_word, copy_word
 7855              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7856              		.loc 1 678 31 view .LVU2724
 7857 2ff7 4E8924FB 		mov	QWORD PTR [rbx+r15*8], r12	# *_45, _46
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7858              		.loc 1 677 48 is_stmt 1 view .LVU2725
 7859              	.LVL344:
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7860              		.loc 1 677 11 view .LVU2726
 7861              	# sieve_extend.c:677:     for (;copy_word <= destination_stop_word;  copy_word++,source_word++)
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7862              		.loc 1 677 5 is_stmt 0 view .LVU2727
 7863 2ffb 721B     		jb	.L670	#,
 678:sieve_extend.c **** 
 7864              		.loc 1 678 9 is_stmt 1 view .LVU2728
 7865              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7866              		.loc 1 678 43 is_stmt 0 view .LVU2729
 7867 2ffd 4E8B5C0B 		mov	r11, QWORD PTR 8[rbx+r9]	# _158, *_161
 7867      08
 7868              	# sieve_extend.c:678:         bitstorage[copy_word] = bitstorage[source_word];
 678:sieve_extend.c **** 
 7869              		.loc 1 678 31 view .LVU2730
 7870 3002 4C891CCB 		mov	QWORD PTR [rbx+rcx*8], r11	# *_159, _158
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
GAS LISTING /tmp/ccfflXEb.s 			page 219


 7871              		.loc 1 677 48 is_stmt 1 view .LVU2731
 677:sieve_extend.c ****         bitstorage[copy_word] = bitstorage[source_word];
 7872              		.loc 1 677 11 view .LVU2732
 7873 3006 C5F877   		vzeroupper
 7874              	.L671:
 7875              	# sieve_extend.c:681:  }
 681:sieve_extend.c **** 
 7876              		.loc 1 681 2 is_stmt 0 view .LVU2733
 7877 3009 488D65D8 		lea	rsp, -40[rbp]	#,
 7878              	.LVL345:
 681:sieve_extend.c **** 
 7879              		.loc 1 681 2 view .LVU2734
 7880 300d 5B       		pop	rbx	#
 7881 300e 415C     		pop	r12	#
 7882 3010 415D     		pop	r13	#
 7883 3012 415E     		pop	r14	#
 7884 3014 415F     		pop	r15	#
 7885 3016 5D       		pop	rbp	#
 7886              		.cfi_remember_state
 7887              		.cfi_def_cfa 7, 8
 7888              	.LVL346:
 681:sieve_extend.c **** 
 7889              		.loc 1 681 2 view .LVU2735
 7890 3017 C3       		ret	
 7891              	.LVL347:
 7892              		.p2align 4,,7
 7893              		.p2align 3
 7894              	.L670:
 7895              		.cfi_restore_state
 681:sieve_extend.c **** 
 7896              		.loc 1 681 2 view .LVU2736
 7897 3018 C5F877   		vzeroupper
 7898 301b 488D65D8 		lea	rsp, -40[rbp]	#,
 7899              	.LVL348:
 681:sieve_extend.c **** 
 7900              		.loc 1 681 2 view .LVU2737
 7901 301f 5B       		pop	rbx	#
 7902 3020 415C     		pop	r12	#
 7903 3022 415D     		pop	r13	#
 7904 3024 415E     		pop	r14	#
 7905 3026 415F     		pop	r15	#
 7906 3028 5D       		pop	rbp	#
 7907              		.cfi_remember_state
 7908              		.cfi_def_cfa 7, 8
 7909              	.LVL349:
 681:sieve_extend.c **** 
 7910              		.loc 1 681 2 view .LVU2738
 7911 3029 C3       		ret	
 7912              	.LVL350:
 7913 302a 660F1F44 		.p2align 4,,7
 7913      0000
 7914              		.p2align 3
 7915              	.L521:
 7916              		.cfi_restore_state
 7917              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7918              		.loc 1 663 5 view .LVU2739
GAS LISTING /tmp/ccfflXEb.s 			page 220


 7919 3030 4D89EE   		mov	r14, r13	# copy_word, tmp.369
 7920              	# sieve_extend.c:657:     source_word += distance;
 657:sieve_extend.c ****     copy_word += distance;
 7921              		.loc 1 657 17 view .LVU2740
 7922 3033 4D89E2   		mov	r10, r12	# source_word, tmp.368
 7923 3036 498D7424 		lea	rsi, 1[r12]	# tmp788,
 7923      01
 7924 303b E92DF8FF 		jmp	.L506	#
 7924      FF
 7925              	.LVL351:
 7926              		.p2align 4,,7
 7927              		.p2align 3
 7928              	.L522:
 7929              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7930              		.loc 1 663 5 view .LVU2741
 7931 3040 4989CB   		mov	r11, rcx	# copy_word, tmp.356
 7932              	# sieve_extend.c:669:     source_word = copy_word - size; // recalibrate
 669:sieve_extend.c ****     const size_t memsize = (size_t)size*sizeof(bitword_t);
 7933              		.loc 1 669 17 view .LVU2742
 7934 3043 4D89E6   		mov	r14, r12	# source_word, tmp.355
 7935 3046 E9CAFDFF 		jmp	.L515	#
 7935      FF
 7936              	.LVL352:
 7937 304b 0F1F4400 		.p2align 4,,7
 7937      00
 7938              		.p2align 3
 7939              	.L673:
 664:sieve_extend.c ****     }
 7940              		.loc 1 664 9 is_stmt 1 view .LVU2743
 7941              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7942              		.loc 1 664 60 is_stmt 0 view .LVU2744
 7943 3050 C4C17D6F 		vmovdqa	ymm3, YMMWORD PTR [r11]	# tmp1260, MEM[base: vectp.371_257, index: ivtmp.421_731, offset: 
 7943      1B
 7944 3055 B8200000 		mov	eax, 32	# ivtmp.421,
 7944      00
 7945              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7946              		.loc 1 664 100 view .LVU2745
 7947 305a C5FE6F27 		vmovdqu	ymm4, YMMWORD PTR [rdi]	# tmp1261, MEM[base: vectp.375_264, index: ivtmp.421_731, offset: 
 7948              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7949              		.loc 1 664 60 view .LVU2746
 7950 305e C4C165D3 		vpsrlq	ymm2, ymm3, xmm10	# vect__38.373, tmp1260, _12
 7950      D2
 7951              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7952              		.loc 1 664 100 view .LVU2747
 7953 3063 C4C15DF3 		vpsllq	ymm6, ymm4, xmm11	# vect__43.377, tmp1261, _18
 7953      F3
 7954              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
 7955              		.loc 1 664 70 view .LVU2748
 7956 3068 C56DEBE6 		vpor	ymm12, ymm2, ymm6	# vect__46.378, vect__38.373, vect__43.377
 7957              	# sieve_extend.c:664:         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitst
 664:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 221


 7958              		.loc 1 664 31 view .LVU2749
 7959 306c C4417E7F 		vmovdqu	YMMWORD PTR [r9], ymm12	# MEM[base: vectp.380_273, index: ivtmp.421_731, offset: 0B], vect
 7959      21
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7960              		.loc 1 663 43 is_stmt 1 view .LVU2750
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7961              		.loc 1 663 11 view .LVU2751
 7962 3071 E972F8FF 		jmp	.L606	#
 7962      FF
 7963              	.LVL353:
 7964              		.p2align 4,,7
 7965 3076 6690     		.p2align 3
 7966              	.L499:
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 7967              		.loc 1 663 11 is_stmt 0 view .LVU2752
 7968 3078 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# fast_loop_stop_word, %sfp
 7968      30
 7969 307d 4D89E8   		mov	r8, r13	# tmp804, tmp.369
 7970 3080 49F7D0   		not	r8	# tmp804
 7971 3083 4801D9   		add	rcx, rbx	# ivtmp.436, bitstorage
 7972              	.LBB402:
 7973              	.LBB383:
 7974              	.LBB372:
 7975              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 7976              		.loc 1 560 44 view .LVU2753
 7977 3086 4489F8   		mov	eax, r15d	# tmp1194, _12
 7978              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 7979              		.loc 1 560 65 view .LVU2754
 7980 3089 89D7     		mov	edi, edx	# tmp1195, _18
 7981 308b 4D01F0   		add	r8, r14	# tmp805, fast_loop_stop_word
 7982              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 7983              		.loc 1 560 44 view .LVU2755
 7984 308e C4E2FBF7 		shrx	rax, QWORD PTR [rcx], rax	# tmp689, MEM[base: _743, offset: 0B], tmp1194
 7984      01
 7985              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 7986              		.loc 1 559 19 view .LVU2756
 7987 3093 488B7108 		mov	rsi, QWORD PTR 8[rcx]	# source1, MEM[base: _743, offset: 8B]
 7988              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 7989              		.loc 1 560 65 view .LVU2757
 7990 3097 C4E2C1F7 		shlx	rdi, rsi, rdi	# tmp691, source1, tmp1195
 7990      FE
 7991 309c 49D1E8   		shr	r8	# tmp803
 7992              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 7993              		.loc 1 560 54 view .LVU2758
 7994 309f 4809F8   		or	rax, rdi	# tmp692, tmp691
 7995              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 7996              		.loc 1 563 19 view .LVU2759
 7997 30a2 498D7D02 		lea	rdi, 2[r13]	# copy_word,
 7998              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
GAS LISTING /tmp/ccfflXEb.s 			page 222


 7999              		.loc 1 560 65 view .LVU2760
 8000 30a6 4189D2   		mov	r10d, edx	# _18, shift_flipped
 8001 30a9 49F7D3   		not	r11	# tmp790
 8002 30ac 4183E003 		and	r8d, 3	# tmp806,
 8003              	.LVL354:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8004              		.loc 1 558 9 is_stmt 1 view .LVU2761
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8005              		.loc 1 559 9 view .LVU2762
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8006              		.loc 1 560 9 view .LVU2763
 8007              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8008              		.loc 1 560 54 is_stmt 0 view .LVU2764
 8009 30b0 4A8904EB 		mov	QWORD PTR [rbx+r13*8], rax	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8010              	.LVL355:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8011              		.loc 1 561 9 is_stmt 1 view .LVU2765
 562:sieve_extend.c ****         copy_word += 2;
 8012              		.loc 1 562 9 view .LVU2766
 8013              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8014              		.loc 1 560 44 is_stmt 0 view .LVU2767
 8015 30b4 4589F9   		mov	r9d, r15d	# _12, shift
 8016              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8017              		.loc 1 562 65 view .LVU2768
 8018 30b7 C4E2A9F7 		shlx	rax, QWORD PTR 16[rcx], r10	# tmp693, MEM[base: _743, offset: 16B], tmp1196
 8018      4110
 8019              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8020              		.loc 1 562 44 view .LVU2769
 8021 30bd C4E2B3F7 		shrx	rsi, rsi, r9	# tmp695, source1, tmp1197
 8021      F6
 8022              	.LVL356:
 8023              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8024              		.loc 1 562 54 view .LVU2770
 8025 30c2 4809C6   		or	rsi, rax	# tmp696, tmp693
 8026              	.LBE372:
 8027              	# sieve_extend.c:557:     while (copy_word < fast_loop_stop_word) {
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8028              		.loc 1 557 11 view .LVU2771
 8029 30c5 4939FE   		cmp	r14, rdi	# fast_loop_stop_word, copy_word
 8030 30c8 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8031 30cc 488D4110 		lea	rax, 16[rcx]	# ivtmp.436,
 8032              	.LBB373:
 8033              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8034              		.loc 1 562 54 view .LVU2772
 8035 30d0 4A8974EB 		mov	QWORD PTR 8[rbx+r13*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 8035      08
 8036              	.LVL357:
 563:sieve_extend.c ****         source_word += 2;
 8037              		.loc 1 563 9 is_stmt 1 view .LVU2773
 564:sieve_extend.c ****         distance += 2;
 8038              		.loc 1 564 9 view .LVU2774
GAS LISTING /tmp/ccfflXEb.s 			page 223


 565:sieve_extend.c ****     }
 8039              		.loc 1 565 9 view .LVU2775
 565:sieve_extend.c ****     }
 8040              		.loc 1 565 9 is_stmt 0 view .LVU2776
 8041              	.LBE373:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8042              		.loc 1 557 11 is_stmt 1 view .LVU2777
 8043 30d5 0F86B3F6 		jbe	.L503	#,
 8043      FFFF
 8044 30db 4D85C0   		test	r8, r8	# tmp806
 8045 30de 0F849700 		je	.L661	#,
 8045      0000
 8046 30e4 4983F801 		cmp	r8, 1	# tmp806,
 8047 30e8 7446     		je	.L620	#,
 8048 30ea 4983F802 		cmp	r8, 2	# tmp806,
 8049 30ee 0F857401 		jne	.L674	#,
 8049      0000
 8050              	.LVL358:
 8051              	.L621:
 8052              	.LBB374:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8053              		.loc 1 558 9 view .LVU2778
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8054              		.loc 1 559 9 view .LVU2779
 8055              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8056              		.loc 1 559 19 is_stmt 0 view .LVU2780
 8057 30f4 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8058              		.loc 1 560 9 is_stmt 1 view .LVU2781
 8059              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8060              		.loc 1 560 44 is_stmt 0 view .LVU2782
 8061 30f8 4489F9   		mov	ecx, r15d	# tmp1278, _12
 8062              	.LVL359:
 8063              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8064              		.loc 1 560 65 view .LVU2783
 8065 30fb 4189D0   		mov	r8d, edx	# tmp1279, _18
 8066              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8067              		.loc 1 560 44 view .LVU2784
 8068 30fe C4E2F3F7 		shrx	rcx, QWORD PTR [rax], rcx	# tmp1056, MEM[base: _743, offset: 0B], tmp1278
 8068      08
 8069              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8070              		.loc 1 560 65 view .LVU2785
 8071 3103 C462B9F7 		shlx	r9, rsi, r8	# tmp1057, source1, tmp1279
 8071      CE
 8072              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8073              		.loc 1 560 54 view .LVU2786
 8074 3108 4C09C9   		or	rcx, r9	# tmp1058, tmp1057
 8075              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8076              		.loc 1 560 44 view .LVU2787
 8077 310b 4589FA   		mov	r10d, r15d	# _12, shift
GAS LISTING /tmp/ccfflXEb.s 			page 224


 8078              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8079              		.loc 1 560 65 view .LVU2788
 8080 310e 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8081              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8082              		.loc 1 560 54 view .LVU2789
 8083 3111 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8084              	.LVL360:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8085              		.loc 1 561 9 is_stmt 1 view .LVU2790
 562:sieve_extend.c ****         copy_word += 2;
 8086              		.loc 1 562 9 view .LVU2791
 8087              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8088              		.loc 1 562 44 is_stmt 0 view .LVU2792
 8089 3115 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1061, source1, tmp1281
 8089      F6
 8090              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8091              		.loc 1 562 65 view .LVU2793
 8092 311a C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1060, MEM[base: _743, offset: 16B], tmp1280
 8092      4810
 8093              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8094              		.loc 1 562 54 view .LVU2794
 8095 3120 4809CE   		or	rsi, rcx	# tmp1062, tmp1060
 8096 3123 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 8096      08
 8097              	.LVL361:
 563:sieve_extend.c ****         source_word += 2;
 8098              		.loc 1 563 9 is_stmt 1 view .LVU2795
 8099 3128 4883C010 		add	rax, 16	# ivtmp.436,
 8100              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 8101              		.loc 1 563 19 is_stmt 0 view .LVU2796
 8102 312c 4883C702 		add	rdi, 2	# copy_word,
 564:sieve_extend.c ****         distance += 2;
 8103              		.loc 1 564 9 is_stmt 1 view .LVU2797
 565:sieve_extend.c ****     }
 8104              		.loc 1 565 9 view .LVU2798
 565:sieve_extend.c ****     }
 8105              		.loc 1 565 9 is_stmt 0 view .LVU2799
 8106              	.LBE374:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8107              		.loc 1 557 11 is_stmt 1 view .LVU2800
 8108              	.LVL362:
 8109              	.L620:
 8110              	.LBB375:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8111              		.loc 1 558 9 view .LVU2801
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8112              		.loc 1 559 9 view .LVU2802
 8113              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8114              		.loc 1 559 19 is_stmt 0 view .LVU2803
 8115 3130 488B7008 		mov	rsi, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
GAS LISTING /tmp/ccfflXEb.s 			page 225


 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8116              		.loc 1 560 9 is_stmt 1 view .LVU2804
 8117              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8118              		.loc 1 560 44 is_stmt 0 view .LVU2805
 8119 3134 4589F8   		mov	r8d, r15d	# tmp1282, _12
 8120              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8121              		.loc 1 560 65 view .LVU2806
 8122 3137 4189D1   		mov	r9d, edx	# tmp1283, _18
 8123              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8124              		.loc 1 560 44 view .LVU2807
 8125 313a C4E2BBF7 		shrx	rcx, QWORD PTR [rax], r8	# tmp1066, MEM[base: _743, offset: 0B], tmp1282
 8125      08
 8126              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8127              		.loc 1 560 65 view .LVU2808
 8128 313f C462B1F7 		shlx	r8, rsi, r9	# tmp1067, source1, tmp1283
 8128      C6
 8129              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8130              		.loc 1 560 54 view .LVU2809
 8131 3144 4C09C1   		or	rcx, r8	# tmp1068, tmp1067
 8132              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8133              		.loc 1 560 44 view .LVU2810
 8134 3147 4589FA   		mov	r10d, r15d	# _12, shift
 8135              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8136              		.loc 1 560 65 view .LVU2811
 8137 314a 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8138              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8139              		.loc 1 560 54 view .LVU2812
 8140 314d 48890CFB 		mov	QWORD PTR [rbx+rdi*8], rcx	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8141              	.LVL363:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8142              		.loc 1 561 9 is_stmt 1 view .LVU2813
 562:sieve_extend.c ****         copy_word += 2;
 8143              		.loc 1 562 9 view .LVU2814
 8144              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8145              		.loc 1 562 44 is_stmt 0 view .LVU2815
 8146 3151 C4E2ABF7 		shrx	rsi, rsi, r10	# tmp1071, source1, tmp1285
 8146      F6
 8147              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8148              		.loc 1 562 65 view .LVU2816
 8149 3156 C4E289F7 		shlx	rcx, QWORD PTR 16[rax], r14	# tmp1070, MEM[base: _743, offset: 16B], tmp1284
 8149      4810
 8150              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8151              		.loc 1 562 54 view .LVU2817
 8152 315c 4809CE   		or	rsi, rcx	# tmp1072, tmp1070
 8153 315f 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 8153      08
GAS LISTING /tmp/ccfflXEb.s 			page 226


 8154              	.LVL364:
 563:sieve_extend.c ****         source_word += 2;
 8155              		.loc 1 563 9 is_stmt 1 view .LVU2818
 8156              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 8157              		.loc 1 563 19 is_stmt 0 view .LVU2819
 8158 3164 4883C702 		add	rdi, 2	# copy_word,
 564:sieve_extend.c ****         distance += 2;
 8159              		.loc 1 564 9 is_stmt 1 view .LVU2820
 565:sieve_extend.c ****     }
 8160              		.loc 1 565 9 view .LVU2821
 8161 3168 4883C010 		add	rax, 16	# ivtmp.436,
 8162              	.LBE375:
 8163              	# sieve_extend.c:557:     while (copy_word < fast_loop_stop_word) {
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8164              		.loc 1 557 11 is_stmt 0 view .LVU2822
 8165 316c 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8165      30
 8166 3171 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8167              		.loc 1 557 11 is_stmt 1 view .LVU2823
 8168 3175 0F8613F6 		jbe	.L503	#,
 8168      FFFF
 8169              	.LVL365:
 8170              	.L661:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8171              		.loc 1 557 11 is_stmt 0 view .LVU2824
 8172 317b 4489F9   		mov	ecx, r15d	# _12, shift
 8173 317e 4189D0   		mov	r8d, edx	# _18, shift_flipped
 8174 3181 4C896424 		mov	QWORD PTR 56[rsp], r12	# %sfp, tmp.368
 8174      38
 8175              	.LVL366:
 8176              	.L502:
 8177              	.LBB376:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8178              		.loc 1 558 9 is_stmt 1 view .LVU2825
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8179              		.loc 1 559 9 view .LVU2826
 8180              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8181              		.loc 1 559 19 is_stmt 0 view .LVU2827
 8182 3186 4C8B6008 		mov	r12, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8183              		.loc 1 560 9 is_stmt 1 view .LVU2828
 8184              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8185              		.loc 1 560 44 is_stmt 0 view .LVU2829
 8186 318a C462F3F7 		shrx	r9, QWORD PTR [rax], rcx	# tmp878, MEM[base: _743, offset: 0B], _12
 8186      08
 8187              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8188              		.loc 1 560 65 view .LVU2830
 8189 318f C442B9F7 		shlx	r14, r12, r8	# tmp879, source1, _18
 8189      F4
 8190              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8191              		.loc 1 560 54 view .LVU2831
GAS LISTING /tmp/ccfflXEb.s 			page 227


 8192 3194 4D09F1   		or	r9, r14	# tmp880, tmp879
 8193              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8194              		.loc 1 562 44 view .LVU2832
 8195 3197 C442F3F7 		shrx	r10, r12, rcx	# tmp883, source1, _12
 8195      D4
 8196              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8197              		.loc 1 560 54 view .LVU2833
 8198 319c 4C890CFB 		mov	QWORD PTR [rbx+rdi*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset:
 8199              	.LVL367:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8200              		.loc 1 561 9 is_stmt 1 view .LVU2834
 562:sieve_extend.c ****         copy_word += 2;
 8201              		.loc 1 562 9 view .LVU2835
 8202              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8203              		.loc 1 562 65 is_stmt 0 view .LVU2836
 8204 31a0 C4E2B9F7 		shlx	rsi, QWORD PTR 16[rax], r8	# tmp882, MEM[base: _743, offset: 16B], _18
 8204      7010
 8205              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8206              		.loc 1 562 54 view .LVU2837
 8207 31a6 4C09D6   		or	rsi, r10	# tmp884, tmp883
 8208 31a9 488974FB 		mov	QWORD PTR 8[rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 8208      08
 8209              	.LVL368:
 563:sieve_extend.c ****         source_word += 2;
 8210              		.loc 1 563 9 is_stmt 1 view .LVU2838
 8211              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 8212              		.loc 1 563 19 is_stmt 0 view .LVU2839
 8213 31ae 4C8D6702 		lea	r12, 2[rdi]	# tmp807,
 564:sieve_extend.c ****         distance += 2;
 8214              		.loc 1 564 9 is_stmt 1 view .LVU2840
 565:sieve_extend.c ****     }
 8215              		.loc 1 565 9 view .LVU2841
 565:sieve_extend.c ****     }
 8216              		.loc 1 565 9 is_stmt 0 view .LVU2842
 8217              	.LBE376:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8218              		.loc 1 557 11 is_stmt 1 view .LVU2843
 8219              	.LBB377:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8220              		.loc 1 558 9 view .LVU2844
 8221              	.LVL369:
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8222              		.loc 1 559 9 view .LVU2845
 8223              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8224              		.loc 1 559 19 is_stmt 0 view .LVU2846
 8225 31b2 4C8B4818 		mov	r9, QWORD PTR 24[rax]	# source1, MEM[base: _743, offset: 8B]
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8226              		.loc 1 560 9 is_stmt 1 view .LVU2847
 8227              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8228              		.loc 1 560 44 is_stmt 0 view .LVU2848
GAS LISTING /tmp/ccfflXEb.s 			page 228


 8229 31b6 C4E2F3F7 		shrx	rsi, QWORD PTR 16[rax], rcx	# tmp890, MEM[base: _743, offset: 0B], _12
 8229      7010
 8230              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8231              		.loc 1 560 65 view .LVU2849
 8232 31bc C442B9F7 		shlx	r14, r9, r8	# tmp891, source1, _18
 8232      F1
 8233              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8234              		.loc 1 560 54 view .LVU2850
 8235 31c1 4C09F6   		or	rsi, r14	# tmp892, tmp891
 8236 31c4 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8237              	.LVL370:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8238              		.loc 1 561 9 is_stmt 1 view .LVU2851
 562:sieve_extend.c ****         copy_word += 2;
 8239              		.loc 1 562 9 view .LVU2852
 8240              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8241              		.loc 1 562 44 is_stmt 0 view .LVU2853
 8242 31c8 C442F3F7 		shrx	r9, r9, rcx	# tmp895, source1, _12
 8242      C9
 8243              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8244              		.loc 1 562 65 view .LVU2854
 8245 31cd 4C8B5020 		mov	r10, QWORD PTR 32[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8246 31d1 C4C2B9F7 		shlx	rsi, r10, r8	# tmp894, MEM[base: _743, offset: 16B], _18
 8246      F2
 8247              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8248              		.loc 1 562 54 view .LVU2855
 8249 31d6 4909F1   		or	r9, rsi	# tmp896, tmp894
 8250 31d9 4883C040 		add	rax, 64	# ivtmp.436,
 8251 31dd 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8251      08
 8252              	.LVL371:
 563:sieve_extend.c ****         source_word += 2;
 8253              		.loc 1 563 9 is_stmt 1 view .LVU2856
 8254              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 8255              		.loc 1 563 19 is_stmt 0 view .LVU2857
 8256 31e2 4C8D6704 		lea	r12, 4[rdi]	# copy_word,
 564:sieve_extend.c ****         distance += 2;
 8257              		.loc 1 564 9 is_stmt 1 view .LVU2858
 565:sieve_extend.c ****     }
 8258              		.loc 1 565 9 view .LVU2859
 565:sieve_extend.c ****     }
 8259              		.loc 1 565 9 is_stmt 0 view .LVU2860
 8260              	.LBE377:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8261              		.loc 1 557 11 is_stmt 1 view .LVU2861
 8262              	.LBB378:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8263              		.loc 1 558 9 view .LVU2862
 8264              	.LVL372:
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8265              		.loc 1 559 9 view .LVU2863
GAS LISTING /tmp/ccfflXEb.s 			page 229


 8266              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8267              		.loc 1 559 19 is_stmt 0 view .LVU2864
 8268 31e6 4C8B50E8 		mov	r10, QWORD PTR -24[rax]	# source1, MEM[base: _743, offset: 8B]
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8269              		.loc 1 560 9 is_stmt 1 view .LVU2865
 8270              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8271              		.loc 1 560 44 is_stmt 0 view .LVU2866
 8272 31ea C4E2F3F7 		shrx	rsi, QWORD PTR -32[rax], rcx	# tmp902, MEM[base: _743, offset: 0B], _12
 8272      70E0
 8273              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8274              		.loc 1 560 65 view .LVU2867
 8275 31f0 C442B9F7 		shlx	r14, r10, r8	# tmp903, source1, _18
 8275      F2
 8276              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8277              		.loc 1 560 54 view .LVU2868
 8278 31f5 4C09F6   		or	rsi, r14	# tmp904, tmp903
 8279 31f8 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8280              	.LVL373:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8281              		.loc 1 561 9 is_stmt 1 view .LVU2869
 562:sieve_extend.c ****         copy_word += 2;
 8282              		.loc 1 562 9 view .LVU2870
 8283              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8284              		.loc 1 562 44 is_stmt 0 view .LVU2871
 8285 31fc C442F3F7 		shrx	r10, r10, rcx	# tmp907, source1, _12
 8285      D2
 8286              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8287              		.loc 1 562 65 view .LVU2872
 8288 3201 4C8B48F0 		mov	r9, QWORD PTR -16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8289 3205 C4C2B9F7 		shlx	rsi, r9, r8	# tmp906, MEM[base: _743, offset: 16B], _18
 8289      F1
 8290              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8291              		.loc 1 562 54 view .LVU2873
 8292 320a 4909F2   		or	r10, rsi	# tmp908, tmp906
 8293 320d 4E8954E3 		mov	QWORD PTR 8[rbx+r12*8], r10	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offse
 8293      08
 8294              	.LVL374:
 563:sieve_extend.c ****         source_word += 2;
 8295              		.loc 1 563 9 is_stmt 1 view .LVU2874
 8296              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 8297              		.loc 1 563 19 is_stmt 0 view .LVU2875
 8298 3212 4C8D6706 		lea	r12, 6[rdi]	# copy_word,
 564:sieve_extend.c ****         distance += 2;
 8299              		.loc 1 564 9 is_stmt 1 view .LVU2876
 565:sieve_extend.c ****     }
 8300              		.loc 1 565 9 view .LVU2877
 565:sieve_extend.c ****     }
 8301              		.loc 1 565 9 is_stmt 0 view .LVU2878
 8302              	.LBE378:
GAS LISTING /tmp/ccfflXEb.s 			page 230


 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8303              		.loc 1 557 11 is_stmt 1 view .LVU2879
 8304              	.LBB379:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8305              		.loc 1 558 9 view .LVU2880
 8306              	.LVL375:
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8307              		.loc 1 559 9 view .LVU2881
 8308              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8309              		.loc 1 559 19 is_stmt 0 view .LVU2882
 8310 3216 4C8B48F8 		mov	r9, QWORD PTR -8[rax]	# source1, MEM[base: _743, offset: 8B]
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8311              		.loc 1 560 9 is_stmt 1 view .LVU2883
 8312              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8313              		.loc 1 560 44 is_stmt 0 view .LVU2884
 8314 321a C4E2F3F7 		shrx	rsi, QWORD PTR -16[rax], rcx	# tmp914, MEM[base: _743, offset: 0B], _12
 8314      70F0
 8315              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8316              		.loc 1 560 65 view .LVU2885
 8317 3220 C442B9F7 		shlx	r14, r9, r8	# tmp915, source1, _18
 8317      F1
 8318              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8319              		.loc 1 560 54 view .LVU2886
 8320 3225 4C09F6   		or	rsi, r14	# tmp916, tmp915
 8321 3228 4A8934E3 		mov	QWORD PTR [rbx+r12*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8322              	.LVL376:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8323              		.loc 1 561 9 is_stmt 1 view .LVU2887
 562:sieve_extend.c ****         copy_word += 2;
 8324              		.loc 1 562 9 view .LVU2888
 8325              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 8326              		.loc 1 563 19 is_stmt 0 view .LVU2889
 8327 322c 4883C708 		add	rdi, 8	# copy_word,
 8328              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8329              		.loc 1 562 44 view .LVU2890
 8330 3230 C442F3F7 		shrx	r9, r9, rcx	# tmp919, source1, _12
 8330      C9
 8331              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8332              		.loc 1 562 65 view .LVU2891
 8333 3235 4C8B10   		mov	r10, QWORD PTR [rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8334 3238 C4C2B9F7 		shlx	rsi, r10, r8	# tmp918, MEM[base: _743, offset: 16B], _18
 8334      F2
 8335              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8336              		.loc 1 562 54 view .LVU2892
 8337 323d 4909F1   		or	r9, rsi	# tmp920, tmp918
 8338              	.LBE379:
 8339              	# sieve_extend.c:557:     while (copy_word < fast_loop_stop_word) {
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8340              		.loc 1 557 11 view .LVU2893
GAS LISTING /tmp/ccfflXEb.s 			page 231


 8341 3240 48397C24 		cmp	QWORD PTR 48[rsp], rdi	# %sfp, copy_word
 8341      30
 8342 3245 4D8D143B 		lea	r10, [r11+rdi]	# distance,
 8343              	.LBB380:
 8344              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8345              		.loc 1 562 54 view .LVU2894
 8346 3249 4E894CE3 		mov	QWORD PTR 8[rbx+r12*8], r9	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8346      08
 8347              	.LVL377:
 563:sieve_extend.c ****         source_word += 2;
 8348              		.loc 1 563 9 is_stmt 1 view .LVU2895
 564:sieve_extend.c ****         distance += 2;
 8349              		.loc 1 564 9 view .LVU2896
 565:sieve_extend.c ****     }
 8350              		.loc 1 565 9 view .LVU2897
 565:sieve_extend.c ****     }
 8351              		.loc 1 565 9 is_stmt 0 view .LVU2898
 8352              	.LBE380:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8353              		.loc 1 557 11 is_stmt 1 view .LVU2899
 8354 324e 0F8732FF 		ja	.L502	#,
 8354      FFFF
 8355 3254 4C8B6424 		mov	r12, QWORD PTR 56[rsp]	# tmp.368, %sfp
 8355      38
 8356 3259 E930F5FF 		jmp	.L503	#
 8356      FF
 8357              	.LVL378:
 8358 325e 6690     		.p2align 4,,7
 8359              		.p2align 3
 8360              	.L520:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8361              		.loc 1 557 11 is_stmt 0 view .LVU2900
 8362              	.LBE383:
 8363              	.LBE402:
 8364              	# sieve_extend.c:663:     for (;copy_word <= aligned_copy_word; copy_word++,source_word++) {
 663:sieve_extend.c ****         bitstorage[copy_word] = (bitstorage[source_word  ] >> shift) | (bitstorage[source_word+1 ] 
 8365              		.loc 1 663 5 view .LVU2901
 8366 3260 4C89E9   		mov	rcx, r13	# tmp.356, tmp.369
 8367 3263 E994F9FF 		jmp	.L504	#
 8367      FF
 8368              	.LVL379:
 8369              	.L674:
 8370              	.LBB403:
 8371              	.LBB384:
 8372              	.LBB381:
 558:sieve_extend.c ****         bitword_t source1 = bitstorage[source_word+1];
 8373              		.loc 1 558 9 is_stmt 1 view .LVU2902
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8374              		.loc 1 559 9 view .LVU2903
 8375              	# sieve_extend.c:559:         bitword_t source1 = bitstorage[source_word+1];
 559:sieve_extend.c ****         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flipped);
 8376              		.loc 1 559 19 is_stmt 0 view .LVU2904
 8377 3268 4C8B4808 		mov	r9, QWORD PTR 8[rax]	# source1, MEM[base: _743, offset: 8B]
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8378              		.loc 1 560 9 is_stmt 1 view .LVU2905
 8379              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
GAS LISTING /tmp/ccfflXEb.s 			page 232


 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8380              		.loc 1 560 44 is_stmt 0 view .LVU2906
 8381 326c 4589F8   		mov	r8d, r15d	# tmp1274, _12
 8382 326f C4E2BBF7 		shrx	rsi, QWORD PTR [rax], r8	# tmp1046, MEM[base: _743, offset: 0B], tmp1274
 8382      30
 8383              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8384              		.loc 1 560 65 view .LVU2907
 8385 3274 4189D0   		mov	r8d, edx	# tmp1275, _18
 8386 3277 C442B9F7 		shlx	r8, r9, r8	# tmp1047, source1, tmp1275
 8386      C1
 8387              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8388              		.loc 1 560 54 view .LVU2908
 8389 327c 4C09C6   		or	rsi, r8	# tmp1048, tmp1047
 8390 327f 488934FB 		mov	QWORD PTR [rbx+rdi*8], rsi	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8391              	.LVL380:
 561:sieve_extend.c ****         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flipped);
 8392              		.loc 1 561 9 is_stmt 1 view .LVU2909
 562:sieve_extend.c ****         copy_word += 2;
 8393              		.loc 1 562 9 view .LVU2910
 8394              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8395              		.loc 1 560 44 is_stmt 0 view .LVU2911
 8396 3283 4589FA   		mov	r10d, r15d	# _12, shift
 8397              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8398              		.loc 1 562 65 view .LVU2912
 8399 3286 488B4010 		mov	rax, QWORD PTR 16[rax]	# MEM[base: _743, offset: 16B], MEM[base: _743, offset: 16B]
 8400              	# sieve_extend.c:560:         bitstorage[copy_word  ] = (source0 >> shift) | (source1 << shift_flip
 560:sieve_extend.c ****         bitword_t source2 = bitstorage[source_word+2];
 8401              		.loc 1 560 65 view .LVU2913
 8402 328a 4189D6   		mov	r14d, edx	# _18, shift_flipped
 8403              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8404              		.loc 1 562 44 view .LVU2914
 8405 328d C442ABF7 		shrx	r9, r9, r10	# tmp1051, source1, tmp1277
 8405      C9
 8406              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8407              		.loc 1 562 65 view .LVU2915
 8408 3292 C46289F7 		shlx	r8, rax, r14	# tmp1050, MEM[base: _743, offset: 16B], tmp1276
 8408      C0
 8409              	# sieve_extend.c:562:         bitstorage[copy_word+1] = (source1 >> shift) | (source2 << shift_flip
 562:sieve_extend.c ****         copy_word += 2;
 8410              		.loc 1 562 54 view .LVU2916
 8411 3297 4D09C8   		or	r8, r9	# tmp1052, tmp1051
 8412 329a 488D4120 		lea	rax, 32[rcx]	# ivtmp.436,
 8413 329e 4C8944FB 		mov	QWORD PTR 8[rbx+rdi*8], r8	# MEM[base: bitstorage_67(D), index: copy_word_362, step: 8, offset
 8413      08
 8414              	.LVL381:
 563:sieve_extend.c ****         source_word += 2;
 8415              		.loc 1 563 9 is_stmt 1 view .LVU2917
 8416              	# sieve_extend.c:563:         copy_word += 2;
 563:sieve_extend.c ****         source_word += 2;
 8417              		.loc 1 563 19 is_stmt 0 view .LVU2918
 8418 32a3 498D7D04 		lea	rdi, 4[r13]	# copy_word,
GAS LISTING /tmp/ccfflXEb.s 			page 233


 564:sieve_extend.c ****         distance += 2;
 8419              		.loc 1 564 9 is_stmt 1 view .LVU2919
 565:sieve_extend.c ****     }
 8420              		.loc 1 565 9 view .LVU2920
 565:sieve_extend.c ****     }
 8421              		.loc 1 565 9 is_stmt 0 view .LVU2921
 8422              	.LBE381:
 557:sieve_extend.c ****         bitword_t source0 = bitstorage[source_word  ];
 8423              		.loc 1 557 11 is_stmt 1 view .LVU2922
 8424 32a7 E948FEFF 		jmp	.L621	#
 8424      FF
 8425              	.LBE384:
 8426              	.LBE403:
 8427              		.cfi_endproc
 8428              	.LFE72:
 8430              		.section	.rodata.str1.1,"aMS",@progbits,1
 8431              	.LC4:
 8432 0000 25336A75 		.string	"%3ju "
 8432      2000
 8433              	.LC5:
 8434 0006 0A466F75 		.string	"\nFound %ju primes until %ju\n"
 8434      6E642025 
 8434      6A752070 
 8434      72696D65 
 8434      7320756E 
 8435              		.text
 8436 32ac 0F1F4000 		.p2align 4
 8438              	show_primes.isra.0:
 8439              	.LVL382:
 8440              	.LFB97:
 809:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8441              		.loc 1 809 13 view -0
 8442              		.cfi_startproc
 8443              	.LBB404:
 811:sieve_extend.c ****         primeCount++;
 8444              		.loc 1 811 30 view .LVU2924
 8445              	.LBE404:
 8446              	# sieve_extend.c:809: static void show_primes(struct sieve_t *sieve, counter_t maxFactor) {
 809:sieve_extend.c ****     counter_t primeCount = 1;    // We already have 2
 8447              		.loc 1 809 13 is_stmt 0 view .LVU2925
 8448 32b0 4157     		push	r15	#
 8449              		.cfi_def_cfa_offset 16
 8450              		.cfi_offset 15, -16
 8451 32b2 4156     		push	r14	#
 8452              		.cfi_def_cfa_offset 24
 8453              		.cfi_offset 14, -24
 8454 32b4 4155     		push	r13	#
 8455              		.cfi_def_cfa_offset 32
 8456              		.cfi_offset 13, -32
 8457 32b6 4154     		push	r12	#
 8458              		.cfi_def_cfa_offset 40
 8459              		.cfi_offset 12, -40
 8460 32b8 4989F4   		mov	r12, rsi	# ISRA.73, tmp168
 8461 32bb 55       		push	rbp	#
 8462              		.cfi_def_cfa_offset 48
 8463              		.cfi_offset 6, -48
 8464 32bc 53       		push	rbx	#
GAS LISTING /tmp/ccfflXEb.s 			page 234


 8465              		.cfi_def_cfa_offset 56
 8466              		.cfi_offset 3, -56
 8467 32bd 488D6424 		lea	rsp, -8[rsp]	#,
 8467      F8
 8468              		.cfi_def_cfa_offset 64
 8469              	.LBB421:
 8470              	# sieve_extend.c:811:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 811:sieve_extend.c ****         primeCount++;
 8471              		.loc 1 811 44 view .LVU2926
 8472 32c2 488B36   		mov	rsi, QWORD PTR [rsi]	# prephitmp_86, *ISRA.73_32(D)
 8473              	# sieve_extend.c:811:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 811:sieve_extend.c ****         primeCount++;
 8474              		.loc 1 811 5 view .LVU2927
 8475 32c5 4883FE01 		cmp	rsi, 1	# prephitmp_86,
 8476 32c9 0F867501 		jbe	.L682	#,
 8476      0000
 8477              	# sieve_extend.c:813:         if (factor < maxFactor/2) {
 813:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8478              		.loc 1 813 31 view .LVU2928
 8479 32cf 48D1EA   		shr	rdx	# maxFactor
 8480              	.LVL383:
 813:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8481              		.loc 1 813 31 view .LVU2929
 8482 32d2 4989FD   		mov	r13, rdi	# ISRA.72, tmp167
 8483              	# sieve_extend.c:811:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 811:sieve_extend.c ****         primeCount++;
 8484              		.loc 1 811 20 view .LVU2930
 8485 32d5 BB010000 		mov	ebx, 1	# factor,
 8485      00
 8486              	# sieve_extend.c:813:         if (factor < maxFactor/2) {
 813:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8487              		.loc 1 813 31 view .LVU2931
 8488 32da 4889D5   		mov	rbp, rdx	# _4, maxFactor
 8489              	.LBE421:
 8490              	# sieve_extend.c:810:     counter_t primeCount = 1;    // We already have 2
 810:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 8491              		.loc 1 810 15 view .LVU2932
 8492 32dd 41BF0100 		mov	r15d, 1	# primeCount,
 8492      0000
 8493              	.LBB422:
 8494              	.LBB405:
 8495              	.LBB406:
 8496              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8497              		.file 3 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
GAS LISTING /tmp/ccfflXEb.s 			page 235


  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
GAS LISTING /tmp/ccfflXEb.s 			page 236


  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 8498              		.loc 3 107 10 view .LVU2933
 8499 32e3 49BECDCC 		movabs	r14, -3689348814741910323	# tmp136,
 8499      CCCCCCCC 
 8499      CCCC
 8500              	.LVL384:
 8501 32ed 0F1F00   		.p2align 4
 8502              		.p2align 3
 8503              	.L681:
 8504              		.loc 3 107 10 view .LVU2934
 8505              	.LBE406:
 8506              	.LBE405:
 812:sieve_extend.c ****         if (factor < maxFactor/2) {
 8507              		.loc 1 812 9 is_stmt 1 view .LVU2935
 8508              	# sieve_extend.c:812:         primeCount++;
 812:sieve_extend.c ****         if (factor < maxFactor/2) {
 8509              		.loc 1 812 19 is_stmt 0 view .LVU2936
 8510 32f0 4983C701 		add	r15, 1	# primeCount,
 8511              	.LVL385:
 813:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8512              		.loc 1 813 9 is_stmt 1 view .LVU2937
GAS LISTING /tmp/ccfflXEb.s 			page 237


 8513              	# sieve_extend.c:813:         if (factor < maxFactor/2) {
 813:sieve_extend.c ****             printf("%3ju ",(uintmax_t)factor*2+1);
 8514              		.loc 1 813 12 is_stmt 0 view .LVU2938
 8515 32f4 4839DD   		cmp	rbp, rbx	# _4, factor
 8516 32f7 0F87FB00 		ja	.L705	#,
 8516      0000
 8517              	.L677:
 811:sieve_extend.c ****         primeCount++;
 8518              		.loc 1 811 52 is_stmt 1 view .LVU2939
 8519              	.LVL386:
 8520              	# sieve_extend.c:811:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 811:sieve_extend.c ****         primeCount++;
 8521              		.loc 1 811 61 is_stmt 0 view .LVU2940
 8522 32fd 4D8B4500 		mov	r8, QWORD PTR 0[r13]	# _11, *ISRA.72_33(D)
 8523 3301 4883C301 		add	rbx, 1	# factor,
 8524              	.LVL387:
 8525              	.L704:
 8526              	.LBB411:
 8527              	.LBI411:
 118:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 8528              		.loc 1 118 25 is_stmt 1 view .LVU2941
 8529              	.LBB412:
 119:sieve_extend.c ****     return index;
 8530              		.loc 1 119 5 view .LVU2942
 119:sieve_extend.c ****     return index;
 8531              		.loc 1 119 11 view .LVU2943
 8532              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8533              		.loc 1 119 23 is_stmt 0 view .LVU2944
 8534 3305 4889D9   		mov	rcx, rbx	# tmp124, factor
 8535 3308 48C1E906 		shr	rcx, 6	# tmp124,
 8536              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8537              		.loc 1 119 12 view .LVU2945
 8538 330c 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_39,* _11
 8539              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8540              		.loc 1 119 11 view .LVU2946
 8541 3310 490FA3D9 		bt	r9, rbx	# *_39, factor
 8542 3314 0F83A600 		jnc	.L679	#,
 8542      0000
 119:sieve_extend.c ****     return index;
 8543              		.loc 1 119 60 is_stmt 1 view .LVU2947
 8544              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8545              		.loc 1 119 65 is_stmt 0 view .LVU2948
 8546 331a 4C8D5301 		lea	r10, 1[rbx]	# tmp138,
 8547              	.LVL388:
 8548              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8549              		.loc 1 119 23 view .LVU2949
 8550 331e 4D89D3   		mov	r11, r10	# tmp129, factor
 8551              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8552              		.loc 1 119 65 view .LVU2950
 8553 3321 4C89D3   		mov	rbx, r10	# factor, tmp138
 119:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccfflXEb.s 			page 238


 8554              		.loc 1 119 11 is_stmt 1 view .LVU2951
 8555              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8556              		.loc 1 119 23 is_stmt 0 view .LVU2952
 8557 3324 49C1EB06 		shr	r11, 6	# tmp129,
 8558              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8559              		.loc 1 119 12 view .LVU2953
 8560 3328 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8561              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8562              		.loc 1 119 11 view .LVU2954
 8563 332c 4C0FA3D0 		bt	rax, r10	# *_16, factor
 8564 3330 0F838A00 		jnc	.L679	#,
 8564      0000
 119:sieve_extend.c ****     return index;
 8565              		.loc 1 119 60 is_stmt 1 view .LVU2955
 8566              	.LVL389:
 8567              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8568              		.loc 1 119 65 is_stmt 0 view .LVU2956
 8569 3336 4883C301 		add	rbx, 1	# factor,
 8570              	.LVL390:
 119:sieve_extend.c ****     return index;
 8571              		.loc 1 119 11 is_stmt 1 view .LVU2957
 8572              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8573              		.loc 1 119 23 is_stmt 0 view .LVU2958
 8574 333a 4889DA   		mov	rdx, rbx	# tmp139, factor
 8575 333d 48C1EA06 		shr	rdx, 6	# tmp139,
 8576              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8577              		.loc 1 119 12 view .LVU2959
 8578 3341 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8579              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8580              		.loc 1 119 11 view .LVU2960
 8581 3345 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8582 3349 7375     		jnc	.L679	#,
 119:sieve_extend.c ****     return index;
 8583              		.loc 1 119 60 is_stmt 1 view .LVU2961
 8584              	.LVL391:
 8585              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8586              		.loc 1 119 65 is_stmt 0 view .LVU2962
 8587 334b 498D5A02 		lea	rbx, 2[r10]	# factor,
 8588              	.LVL392:
 119:sieve_extend.c ****     return index;
 8589              		.loc 1 119 11 is_stmt 1 view .LVU2963
 8590              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8591              		.loc 1 119 23 is_stmt 0 view .LVU2964
 8592 334f 4889D9   		mov	rcx, rbx	# tmp143, factor
 8593 3352 48C1E906 		shr	rcx, 6	# tmp143,
 8594              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8595              		.loc 1 119 12 view .LVU2965
GAS LISTING /tmp/ccfflXEb.s 			page 239


 8596 3356 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8597              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8598              		.loc 1 119 11 view .LVU2966
 8599 335a 490FA3D9 		bt	r9, rbx	# *_16, factor
 8600 335e 7360     		jnc	.L679	#,
 119:sieve_extend.c ****     return index;
 8601              		.loc 1 119 60 is_stmt 1 view .LVU2967
 8602              	.LVL393:
 8603              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8604              		.loc 1 119 65 is_stmt 0 view .LVU2968
 8605 3360 498D5A03 		lea	rbx, 3[r10]	# factor,
 8606              	.LVL394:
 119:sieve_extend.c ****     return index;
 8607              		.loc 1 119 11 is_stmt 1 view .LVU2969
 8608              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8609              		.loc 1 119 23 is_stmt 0 view .LVU2970
 8610 3364 4989DB   		mov	r11, rbx	# tmp147, factor
 8611 3367 49C1EB06 		shr	r11, 6	# tmp147,
 8612              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8613              		.loc 1 119 12 view .LVU2971
 8614 336b 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8615              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8616              		.loc 1 119 11 view .LVU2972
 8617 336f 480FA3D8 		bt	rax, rbx	# *_16, factor
 8618 3373 734B     		jnc	.L679	#,
 119:sieve_extend.c ****     return index;
 8619              		.loc 1 119 60 is_stmt 1 view .LVU2973
 8620              	.LVL395:
 8621              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8622              		.loc 1 119 65 is_stmt 0 view .LVU2974
 8623 3375 498D5A04 		lea	rbx, 4[r10]	# factor,
 8624              	.LVL396:
 119:sieve_extend.c ****     return index;
 8625              		.loc 1 119 11 is_stmt 1 view .LVU2975
 8626              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8627              		.loc 1 119 23 is_stmt 0 view .LVU2976
 8628 3379 4889DA   		mov	rdx, rbx	# tmp151, factor
 8629 337c 48C1EA06 		shr	rdx, 6	# tmp151,
 8630              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8631              		.loc 1 119 12 view .LVU2977
 8632 3380 498B3CD0 		mov	rdi, QWORD PTR [r8+rdx*8]	# *_16, *_16
 8633              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8634              		.loc 1 119 11 view .LVU2978
 8635 3384 480FA3DF 		bt	rdi, rbx	# *_16, factor
 8636 3388 7336     		jnc	.L679	#,
 119:sieve_extend.c ****     return index;
 8637              		.loc 1 119 60 is_stmt 1 view .LVU2979
 8638              	.LVL397:
GAS LISTING /tmp/ccfflXEb.s 			page 240


 8639              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8640              		.loc 1 119 65 is_stmt 0 view .LVU2980
 8641 338a 498D5A05 		lea	rbx, 5[r10]	# factor,
 8642              	.LVL398:
 119:sieve_extend.c ****     return index;
 8643              		.loc 1 119 11 is_stmt 1 view .LVU2981
 8644              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8645              		.loc 1 119 23 is_stmt 0 view .LVU2982
 8646 338e 4889D9   		mov	rcx, rbx	# tmp155, factor
 8647 3391 48C1E906 		shr	rcx, 6	# tmp155,
 8648              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8649              		.loc 1 119 12 view .LVU2983
 8650 3395 4D8B0CC8 		mov	r9, QWORD PTR [r8+rcx*8]	# *_16, *_16
 8651              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8652              		.loc 1 119 11 view .LVU2984
 8653 3399 490FA3D9 		bt	r9, rbx	# *_16, factor
 8654 339d 7321     		jnc	.L679	#,
 119:sieve_extend.c ****     return index;
 8655              		.loc 1 119 60 is_stmt 1 view .LVU2985
 8656              	.LVL399:
 8657              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8658              		.loc 1 119 65 is_stmt 0 view .LVU2986
 8659 339f 498D5A06 		lea	rbx, 6[r10]	# factor,
 8660              	.LVL400:
 119:sieve_extend.c ****     return index;
 8661              		.loc 1 119 11 is_stmt 1 view .LVU2987
 8662              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8663              		.loc 1 119 23 is_stmt 0 view .LVU2988
 8664 33a3 4989DB   		mov	r11, rbx	# tmp159, factor
 8665 33a6 49C1EB06 		shr	r11, 6	# tmp159,
 8666              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8667              		.loc 1 119 12 view .LVU2989
 8668 33aa 4B8B04D8 		mov	rax, QWORD PTR [r8+r11*8]	# *_16, *_16
 8669              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8670              		.loc 1 119 11 view .LVU2990
 8671 33ae 480FA3D8 		bt	rax, rbx	# *_16, factor
 8672 33b2 730C     		jnc	.L679	#,
 119:sieve_extend.c ****     return index;
 8673              		.loc 1 119 60 is_stmt 1 view .LVU2991
 8674              	.LVL401:
 8675              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 8676              		.loc 1 119 65 is_stmt 0 view .LVU2992
 8677 33b4 498D5A07 		lea	rbx, 7[r10]	# factor,
 8678              	.LVL402:
 119:sieve_extend.c ****     return index;
 8679              		.loc 1 119 11 is_stmt 1 view .LVU2993
 8680 33b8 E948FFFF 		jmp	.L704	#
 8680      FF
GAS LISTING /tmp/ccfflXEb.s 			page 241


 8681 33bd 0F1F00   		.p2align 4,,7
 8682              		.p2align 3
 8683              	.L679:
 8684              	.LVL403:
 119:sieve_extend.c ****     return index;
 8685              		.loc 1 119 11 is_stmt 0 view .LVU2994
 8686              	.LBE412:
 8687              	.LBE411:
 811:sieve_extend.c ****         primeCount++;
 8688              		.loc 1 811 30 is_stmt 1 view .LVU2995
 8689              	# sieve_extend.c:811:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 811:sieve_extend.c ****         primeCount++;
 8690              		.loc 1 811 5 is_stmt 0 view .LVU2996
 8691 33c0 4839F3   		cmp	rbx, rsi	# factor, prephitmp_86
 8692 33c3 0F8227FF 		jb	.L681	#,
 8692      FFFF
 8693              	.LVL404:
 8694              	.L676:
 811:sieve_extend.c ****         primeCount++;
 8695              		.loc 1 811 5 view .LVU2997
 8696              	.LBE422:
 818:sieve_extend.c **** }
 8697              		.loc 1 818 5 is_stmt 1 view .LVU2998
 8698              	.LBB423:
 8699              	.LBI423:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8700              		.loc 3 105 1 view .LVU2999
 8701              	.LBB424:
 8702              		.loc 3 107 3 view .LVU3000
 8703              	.LBE424:
 8704              	.LBE423:
 8705              	# sieve_extend.c:819: }
 819:sieve_extend.c **** 
 8706              		.loc 1 819 1 is_stmt 0 view .LVU3001
 8707 33c9 488D6424 		lea	rsp, 8[rsp]	#,
 8707      08
 8708              		.cfi_remember_state
 8709              		.cfi_def_cfa_offset 56
 8710              	.LBB428:
 8711              	.LBB425:
 8712              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8713              		.loc 3 107 10 view .LVU3002
 8714 33ce 4C89FA   		mov	rdx, r15	#, primeCount
 8715              	.LBE425:
 8716              	.LBE428:
 8717              	# sieve_extend.c:819: }
 819:sieve_extend.c **** 
 8718              		.loc 1 819 1 view .LVU3003
 8719 33d1 5B       		pop	rbx	#
 8720              		.cfi_def_cfa_offset 48
 8721              	# sieve_extend.c:818:     printf("\nFound %ju primes until %ju\n",(uintmax_t)primeCount, (uintmax_t
 818:sieve_extend.c **** }
 8722              		.loc 1 818 5 view .LVU3004
 8723 33d2 488D4C36 		lea	rcx, 1[rsi+rsi]	# tmp135,
 8723      01
 8724              	.LBB429:
 8725              	.LBB426:
GAS LISTING /tmp/ccfflXEb.s 			page 242


 8726              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8727              		.loc 3 107 10 view .LVU3005
 8728 33d7 BF010000 		mov	edi, 1	#,
 8728      00
 8729 33dc 31C0     		xor	eax, eax	#
 8730 33de 488D3500 		lea	rsi, .LC5[rip]	#,
 8730      000000
 8731              	.LBE426:
 8732              	.LBE429:
 8733              	# sieve_extend.c:819: }
 819:sieve_extend.c **** 
 8734              		.loc 1 819 1 view .LVU3006
 8735 33e5 5D       		pop	rbp	#
 8736              		.cfi_def_cfa_offset 40
 8737 33e6 415C     		pop	r12	#
 8738              		.cfi_def_cfa_offset 32
 8739 33e8 415D     		pop	r13	#
 8740              		.cfi_def_cfa_offset 24
 8741 33ea 415E     		pop	r14	#
 8742              		.cfi_def_cfa_offset 16
 8743 33ec 415F     		pop	r15	#
 8744              		.cfi_def_cfa_offset 8
 8745              	.LBB430:
 8746              	.LBB427:
 8747              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8748              		.loc 3 107 10 view .LVU3007
 8749 33ee E9000000 		jmp	__printf_chk@PLT	#
 8749      00
 8750              	.LVL405:
 8751              		.p2align 4,,7
 8752 33f3 0F1F4400 		.p2align 3
 8752      00
 8753              	.L705:
 8754              		.cfi_restore_state
 8755              		.loc 3 107 10 view .LVU3008
 8756              	.LBE427:
 8757              	.LBE430:
 8758              	.LBB431:
 814:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8759              		.loc 1 814 13 is_stmt 1 view .LVU3009
 8760              	.LBB413:
 8761              	.LBI405:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8762              		.loc 3 105 1 view .LVU3010
 8763              	.LBB407:
 8764              		.loc 3 107 3 view .LVU3011
 8765              	.LBE407:
 8766              	.LBE413:
 8767              	# sieve_extend.c:814:             printf("%3ju ",(uintmax_t)factor*2+1);
 814:sieve_extend.c ****             if (primeCount % 10 == 0) printf("\n");
 8768              		.loc 1 814 13 is_stmt 0 view .LVU3012
 8769 33f8 488D541B 		lea	rdx, 1[rbx+rbx]	# tmp111,
 8769      01
 8770              	.LBB414:
 8771              	.LBB408:
 8772              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8773              		.loc 3 107 10 view .LVU3013
GAS LISTING /tmp/ccfflXEb.s 			page 243


 8774 33fd BF010000 		mov	edi, 1	#,
 8774      00
 8775 3402 31C0     		xor	eax, eax	#
 8776 3404 488D3500 		lea	rsi, .LC4[rip]	#,
 8776      000000
 8777 340b E8000000 		call	__printf_chk@PLT	#
 8777      00
 8778              	.LVL406:
 8779              		.loc 3 107 10 view .LVU3014
 8780              	.LBE408:
 8781              	.LBE414:
 815:sieve_extend.c ****         }
 8782              		.loc 1 815 13 is_stmt 1 view .LVU3015
 8783              	.LBB415:
 8784              	.LBB409:
 8785              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8786              		.loc 3 107 10 is_stmt 0 view .LVU3016
 8787 3410 4C89F8   		mov	rax, r15	# tmp120, primeCount
 8788              	.LBE409:
 8789              	.LBE415:
 8790              	# sieve_extend.c:815:             if (primeCount % 10 == 0) printf("\n");
 815:sieve_extend.c ****         }
 8791              		.loc 1 815 16 view .LVU3017
 8792 3413 48BF9999 		movabs	rdi, 1844674407370955161	# tmp172,
 8792      99999999 
 8792      9919
 8793              	.LBB416:
 8794              	.LBB410:
 8795              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8796              		.loc 3 107 10 view .LVU3018
 8797 341d 490FAFC6 		imul	rax, r14	# tmp120, tmp136
 8798 3421 C4E3FBF0 		rorx	rdx, rax, 1	# tmp122, tmp120,
 8798      D001
 8799              	.LBE410:
 8800              	.LBE416:
 8801              	# sieve_extend.c:815:             if (primeCount % 10 == 0) printf("\n");
 815:sieve_extend.c ****         }
 8802              		.loc 1 815 16 view .LVU3019
 8803 3427 4839FA   		cmp	rdx, rdi	# tmp122, tmp172
 8804 342a 760C     		jbe	.L678	#,
 8805              	.L703:
 8806 342c 498B3424 		mov	rsi, QWORD PTR [r12]	# prephitmp_86, *ISRA.73_32(D)
 8807              	.LBB417:
 8808              	.LBB418:
 8809              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8810              		.loc 3 107 10 view .LVU3020
 8811 3430 E9C8FEFF 		jmp	.L677	#
 8811      FF
 8812              		.p2align 4,,7
 8813 3435 0F1F00   		.p2align 3
 8814              	.L678:
 8815              	.LBE418:
 8816              	.LBE417:
 815:sieve_extend.c ****         }
 8817              		.loc 1 815 39 is_stmt 1 view .LVU3021
 8818              	.LVL407:
 8819              	.LBB420:
GAS LISTING /tmp/ccfflXEb.s 			page 244


 8820              	.LBI417:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 8821              		.loc 3 105 1 view .LVU3022
 8822              	.LBB419:
 8823              		.loc 3 107 3 view .LVU3023
 8824              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 8825              		.loc 3 107 10 is_stmt 0 view .LVU3024
 8826 3438 BF0A0000 		mov	edi, 10	#,
 8826      00
 8827 343d E8000000 		call	putchar@PLT	#
 8827      00
 8828              	.LVL408:
 8829 3442 EBE8     		jmp	.L703	#
 8830              	.LVL409:
 8831              	.L682:
 8832              		.loc 3 107 10 view .LVU3025
 8833              	.LBE419:
 8834              	.LBE420:
 8835              	.LBE431:
 8836              	# sieve_extend.c:810:     counter_t primeCount = 1;    // We already have 2
 810:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 8837              		.loc 1 810 15 view .LVU3026
 8838 3444 41BF0100 		mov	r15d, 1	# primeCount,
 8838      0000
 8839 344a E97AFFFF 		jmp	.L676	#
 8839      FF
 8840              		.cfi_endproc
 8841              	.LFE97:
 8843 344f 90       		.p2align 4
 8845              	sieve_shake:
 8846              	.LVL410:
 8847              	.LFB76:
 768:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8848              		.loc 1 768 88 is_stmt 1 view -0
 8849              		.cfi_startproc
 769:sieve_extend.c ****     bitword_t* bitstorage = sieve->bitstorage;
 8850              		.loc 1 769 5 view .LVU3028
 8851              	# sieve_extend.c:768: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 768:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8852              		.loc 1 768 88 is_stmt 0 view .LVU3029
 8853 3450 4157     		push	r15	#
 8854              		.cfi_def_cfa_offset 16
 8855              		.cfi_offset 15, -16
 8856 3452 4156     		push	r14	#
 8857              		.cfi_def_cfa_offset 24
 8858              		.cfi_offset 14, -24
 8859 3454 4155     		push	r13	#
 8860              		.cfi_def_cfa_offset 32
 8861              		.cfi_offset 13, -32
 8862 3456 4154     		push	r12	#
 8863              		.cfi_def_cfa_offset 40
 8864              		.cfi_offset 12, -40
 8865 3458 55       		push	rbp	#
 8866              		.cfi_def_cfa_offset 48
 8867              		.cfi_offset 6, -48
 8868 3459 53       		push	rbx	#
 8869              		.cfi_def_cfa_offset 56
GAS LISTING /tmp/ccfflXEb.s 			page 245


 8870              		.cfi_offset 3, -56
 8871 345a 4889FB   		mov	rbx, rdi	# maxints, tmp743
 8872              	.LVL411:
 8873              	.LBB476:
 8874              	.LBI476:
 104:sieve_extend.c ****     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 8875              		.loc 1 104 24 is_stmt 1 view .LVU3030
 8876              	.LBB477:
 105:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 8877              		.loc 1 105 5 view .LVU3031
 8878              	# sieve_extend.c:105:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 105:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 8879              		.loc 1 105 29 is_stmt 0 view .LVU3032
 8880 345d BF080000 		mov	edi, 8	#,
 8880      00
 8881              	.LVL412:
 105:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 8882              		.loc 1 105 29 view .LVU3033
 8883              	.LBE477:
 8884              	.LBE476:
 8885              	# sieve_extend.c:768: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 768:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8886              		.loc 1 768 88 view .LVU3034
 8887 3462 488D6424 		lea	rsp, -88[rsp]	#,
 8887      A8
 8888              		.cfi_def_cfa_offset 144
 8889              	.LBB481:
 8890              	.LBB478:
 8891              	# sieve_extend.c:106:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8892              		.loc 1 106 86 view .LVU3035
 8893 3467 4989DE   		mov	r14, rbx	# _2, maxints
 8894 346a 49D1EE   		shr	r14	# _2
 8895              	.LBE478:
 8896              	.LBE481:
 8897              	# sieve_extend.c:768: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 768:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 8898              		.loc 1 768 88 view .LVU3036
 8899 346d 48897424 		mov	QWORD PTR 40[rsp], rsi	# %sfp, tmp744
 8899      28
 8900              	.LBB482:
 8901              	.LBB479:
 8902              	# sieve_extend.c:105:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 105:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 8903              		.loc 1 105 29 view .LVU3037
 8904 3472 BE180000 		mov	esi, 24	#,
 8904      00
 8905              	.LVL413:
 105:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 8906              		.loc 1 105 29 view .LVU3038
 8907 3477 E8000000 		call	aligned_alloc@PLT	#
 8907      00
 8908              	.LVL414:
 8909              	# sieve_extend.c:106:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8910              		.loc 1 106 86 view .LVU3039
 8911 347c 498DB600 		lea	rsi, 1024[r14]	# tmp373,
GAS LISTING /tmp/ccfflXEb.s 			page 246


 8911      040000
 8912              	# sieve_extend.c:106:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8913              		.loc 1 106 25 view .LVU3040
 8914 3483 BF800000 		mov	edi, 128	#,
 8914      00
 8915              	# sieve_extend.c:105:     struct sieve_t *sieve = aligned_alloc(8, sizeof(struct sieve_t));
 105:sieve_extend.c ****     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, (size_t)ceiling(1+((si
 8916              		.loc 1 105 29 view .LVU3041
 8917 3488 48894424 		mov	QWORD PTR 32[rsp], rax	# %sfp, <retval>
 8917      20
 8918 348d 4889C5   		mov	rbp, rax	# <retval>, tmp745
 8919              	.LVL415:
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8920              		.loc 1 106 5 is_stmt 1 view .LVU3042
 8921              	# sieve_extend.c:106:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8922              		.loc 1 106 78 is_stmt 0 view .LVU3043
 8923 3490 48C1EE0A 		shr	rsi, 10	# tmp374,
 8924              	# sieve_extend.c:106:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8925              		.loc 1 106 25 view .LVU3044
 8926 3494 48C1E607 		sal	rsi, 7	# tmp375,
 8927              	# sieve_extend.c:106:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8928              		.loc 1 106 86 view .LVU3045
 8929 3498 4C893424 		mov	QWORD PTR [rsp], r14	# %sfp, _2
 8930              	# sieve_extend.c:106:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8931              		.loc 1 106 25 view .LVU3046
 8932 349c E8000000 		call	aligned_alloc@PLT	#
 8932      00
 8933              	.LVL416:
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8934              		.loc 1 106 25 view .LVU3047
 8935              	.LBE479:
 8936              	.LBE482:
 8937              	.LBB483:
 8938              	.LBB484:
 8939              	# sieve_extend.c:739:     for (;range_stop < block_stop;) {
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 8940              		.loc 1 739 5 view .LVU3048
 8941 34a1 4D85F6   		test	r14, r14	# _2
 8942              	.LBE484:
 8943              	.LBE483:
 8944              	.LBB554:
 8945              	.LBB480:
 8946              	# sieve_extend.c:106:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8947              		.loc 1 106 25 view .LVU3049
 8948 34a4 4989C7   		mov	r15, rax	# _102, tmp746
 8949              	# sieve_extend.c:106:     sieve->bitstorage = aligned_alloc((size_t)anticiped_cache_line_bytesize, 
 106:sieve_extend.c ****     sieve->bits     = size >> 1;
 8950              		.loc 1 106 23 view .LVU3050
 8951 34a7 48894500 		mov	QWORD PTR 0[rbp], rax	# sieve_97->bitstorage, _102
 107:sieve_extend.c ****     sieve->size     = size;
 8952              		.loc 1 107 5 is_stmt 1 view .LVU3051
GAS LISTING /tmp/ccfflXEb.s 			page 247


 8953              	# sieve_extend.c:107:     sieve->bits     = size >> 1;
 107:sieve_extend.c ****     sieve->size     = size;
 8954              		.loc 1 107 21 is_stmt 0 view .LVU3052
 8955 34ab 4C897508 		mov	QWORD PTR 8[rbp], r14	# sieve_97->bits, _2
 108:sieve_extend.c ****     return sieve;
 8956              		.loc 1 108 5 is_stmt 1 view .LVU3053
 8957              	# sieve_extend.c:108:     sieve->size     = size;
 108:sieve_extend.c ****     return sieve;
 8958              		.loc 1 108 21 is_stmt 0 view .LVU3054
 8959 34af 48895D10 		mov	QWORD PTR 16[rbp], rbx	# sieve_97->size, maxints
 109:sieve_extend.c **** }
 8960              		.loc 1 109 5 is_stmt 1 view .LVU3055
 8961              	.LVL417:
 109:sieve_extend.c **** }
 8962              		.loc 1 109 5 is_stmt 0 view .LVU3056
 8963              	.LBE480:
 8964              	.LBE554:
 770:sieve_extend.c **** 
 8965              		.loc 1 770 5 is_stmt 1 view .LVU3057
 772:sieve_extend.c **** 
 8966              		.loc 1 772 5 view .LVU3058
 775:sieve_extend.c ****     extendSieve(bitstorage, block.pattern_start, block.pattern_size, sieve->bits);
 8967              		.loc 1 775 5 view .LVU3059
 8968              	.LBB555:
 8969              	.LBI483:
 729:sieve_extend.c ****     bitword_t* bitstorage      = sieve->bitstorage;
 8970              		.loc 1 729 21 view .LVU3060
 8971              	.LBB549:
 730:sieve_extend.c ****     register counter_t prime   = 0;
 8972              		.loc 1 730 5 view .LVU3061
 731:sieve_extend.c ****     counter_t patternsize_bits = 1;
 8973              		.loc 1 731 5 view .LVU3062
 732:sieve_extend.c ****     counter_t pattern_start    = 0;
 8974              		.loc 1 732 5 view .LVU3063
 733:sieve_extend.c ****     counter_t range_stop       = block_start;
 8975              		.loc 1 733 5 view .LVU3064
 734:sieve_extend.c ****     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 };
 8976              		.loc 1 734 5 view .LVU3065
 735:sieve_extend.c **** 
 8977              		.loc 1 735 5 view .LVU3066
 737:sieve_extend.c ****     
 8978              		.loc 1 737 5 view .LVU3067
 8979              	# sieve_extend.c:737:     sieve->bitstorage[wordindex(block_start)] = SAFE_ZERO; // only the first 
 737:sieve_extend.c ****     
 8980              		.loc 1 737 47 is_stmt 0 view .LVU3068
 8981 34b3 48C70000 		mov	QWORD PTR [rax], 0	# MEM[(uint64_t *)_102],
 8981      000000
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 8982              		.loc 1 739 5 is_stmt 1 view .LVU3069
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 8983              		.loc 1 739 11 view .LVU3070
 8984              	# sieve_extend.c:739:     for (;range_stop < block_stop;) {
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 8985              		.loc 1 739 5 is_stmt 0 view .LVU3071
 8986 34ba 0F84BA10 		je	.L1066	#,
 8986      0000
 8987              	.LBB485:
GAS LISTING /tmp/ccfflXEb.s 			page 248


 8988              	# sieve_extend.c:740:         prime = searchBitFalse(bitstorage, prime+1);
 740:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 8989              		.loc 1 740 17 view .LVU3072
 8990 34c0 48C74424 		mov	QWORD PTR 8[rsp], 1	# %sfp,
 8990      08010000 
 8990      00
 8991              	.LBE485:
 8992              	# sieve_extend.c:735:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 735:sieve_extend.c **** 
 8993              		.loc 1 735 18 view .LVU3073
 8994 34c9 31C0     		xor	eax, eax	# block$pattern_size
 8995              	.LVL418:
 735:sieve_extend.c **** 
 8996              		.loc 1 735 18 view .LVU3074
 8997 34cb 31D2     		xor	edx, edx	# block$pattern_start
 8998              	# sieve_extend.c:732:     counter_t patternsize_bits = 1;
 732:sieve_extend.c ****     counter_t pattern_start    = 0;
 8999              		.loc 1 732 15 view .LVU3075
 9000 34cd 41BD0100 		mov	r13d, 1	# patternsize_bits,
 9000      0000
 9001              	# sieve_extend.c:733:     counter_t pattern_start    = 0;
 733:sieve_extend.c ****     counter_t range_stop       = block_start;
 9002              		.loc 1 733 15 view .LVU3076
 9003 34d3 48C74424 		mov	QWORD PTR 16[rsp], 0	# %sfp,
 9003      10000000 
 9003      00
 9004              	# sieve_extend.c:731:     register counter_t prime   = 0;
 731:sieve_extend.c ****     counter_t patternsize_bits = 1;
 9005              		.loc 1 731 24 view .LVU3077
 9006 34dc 31C9     		xor	ecx, ecx	# prime
 9007 34de 488B7424 		mov	rsi, QWORD PTR 8[rsp]	# index, %sfp
 9007      08
 9008              	.LVL419:
 9009 34e3 66662E0F 		.p2align 4
 9009      1F840000 
 9009      00000066 
 9009      90
 9010              		.p2align 3
 9011              	.L707:
 9012              	.LBB543:
 9013              	.LBB486:
 9014              	.LBB487:
 120:sieve_extend.c **** }
 9015              		.loc 1 120 5 is_stmt 1 view .LVU3078
 120:sieve_extend.c **** }
 9016              		.loc 1 120 5 is_stmt 0 view .LVU3079
 9017              	.LBE487:
 9018              	.LBE486:
 741:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9019              		.loc 1 741 9 is_stmt 1 view .LVU3080
 9020              	# sieve_extend.c:741:         counter_t start = prime * prime * 2 + prime * 2;
 741:sieve_extend.c ****         if unlikely(start > block_stop) break;
 9021              		.loc 1 741 45 is_stmt 0 view .LVU3081
 9022 34f0 488D5E01 		lea	rbx, 1[rsi]	# index,
 9023 34f4 4C8D2436 		lea	r12, [rsi+rsi]	# _433,
 9024              	# sieve_extend.c:741:         counter_t start = prime * prime * 2 + prime * 2;
 741:sieve_extend.c ****         if unlikely(start > block_stop) break;
GAS LISTING /tmp/ccfflXEb.s 			page 249


 9025              		.loc 1 741 19 view .LVU3082
 9026 34f8 4889DD   		mov	rbp, rbx	# index, index
 9027 34fb 490FAFEC 		imul	rbp, r12	# index, _433
 9028              	.LVL420:
 742:sieve_extend.c **** 
 9029              		.loc 1 742 9 is_stmt 1 view .LVU3083
 9030              	# sieve_extend.c:742:         if unlikely(start > block_stop) break;
 742:sieve_extend.c **** 
 9031              		.loc 1 742 12 is_stmt 0 view .LVU3084
 9032 34ff 483B2C24 		cmp	rbp, QWORD PTR [rsp]	# index, %sfp
 9033 3503 0F87C10A 		ja	.L777	#,
 9033      0000
 744:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9034              		.loc 1 744 9 is_stmt 1 view .LVU3085
 9035              	# sieve_extend.c:744:         const counter_t step  = prime * 2 + 1;
 744:sieve_extend.c ****         if (block_start >= (prime + 1)) start = block_start + prime + prime - ((block_start + prime
 9036              		.loc 1 744 25 is_stmt 0 view .LVU3086
 9037 3509 4983C401 		add	r12, 1	# step,
 9038              	.LVL421:
 745:sieve_extend.c **** 
 9039              		.loc 1 745 9 is_stmt 1 view .LVU3087
 9040              	# sieve_extend.c:745:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 745:sieve_extend.c **** 
 9041              		.loc 1 745 12 is_stmt 0 view .LVU3088
 9042 350d 4885DB   		test	rbx, rbx	# index
 9043 3510 7516     		jne	.L712	#,
 745:sieve_extend.c **** 
 9044              		.loc 1 745 41 is_stmt 1 view .LVU3089
 9045              	# sieve_extend.c:745:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 745:sieve_extend.c **** 
 9046              		.loc 1 745 102 is_stmt 0 view .LVU3090
 9047 3512 48C7C0FF 		mov	rax, -1	# tmp390,
 9047      FFFFFF
 9048 3519 31D2     		xor	edx, edx	# tmp389
 9049 351b 49F7F4   		div	r12	# step
 9050              	# sieve_extend.c:745:         if (block_start >= (prime + 1)) start = block_start + prime + prime -
 745:sieve_extend.c **** 
 9051              		.loc 1 745 47 view .LVU3091
 9052 351e 48C7C5FE 		mov	rbp, -2	# tmp391,
 9052      FFFFFF
 9053              	.LVL422:
 745:sieve_extend.c **** 
 9054              		.loc 1 745 47 view .LVU3092
 9055 3525 4829D5   		sub	rbp, rdx	# index, tmp389
 9056              	.LVL423:
 9057              	.L712:
 747:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9058              		.loc 1 747 9 is_stmt 1 view .LVU3093
 9059              	# sieve_extend.c:747:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 747:sieve_extend.c ****         block.pattern_size = patternsize_bits;
 9060              		.loc 1 747 53 is_stmt 0 view .LVU3094
 9061 3528 4C89EF   		mov	rdi, r13	# _69, patternsize_bits
 9062 352b 490FAFFC 		imul	rdi, r12	# _69, step
 9063 352f 48897C24 		mov	QWORD PTR 24[rsp], rdi	# %sfp, _69
 9063      18
 9064              	# sieve_extend.c:747:         range_stop = block_start + patternsize_bits * step * 2;  // range is 
 747:sieve_extend.c ****         block.pattern_size = patternsize_bits;
GAS LISTING /tmp/ccfflXEb.s 			page 250


 9065              		.loc 1 747 60 view .LVU3095
 9066 3534 4C8D343F 		lea	r14, [rdi+rdi]	# _70,
 9067              	.LVL424:
 748:sieve_extend.c ****         block.pattern_start = pattern_start;
 9068              		.loc 1 748 9 is_stmt 1 view .LVU3096
 749:sieve_extend.c ****         if unlikely(range_stop > block_stop) break;//return block; //range_stop = block_stop;
 9069              		.loc 1 749 9 view .LVU3097
 750:sieve_extend.c **** 
 9070              		.loc 1 750 9 view .LVU3098
 9071              	# sieve_extend.c:750:         if unlikely(range_stop > block_stop) break;//return block; //range_st
 750:sieve_extend.c **** 
 9072              		.loc 1 750 12 is_stmt 0 view .LVU3099
 9073 3538 4C3B3424 		cmp	r14, QWORD PTR [rsp]	# _70, %sfp
 9074 353c 0F870310 		ja	.L990	#,
 9074      0000
 752:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9075              		.loc 1 752 9 is_stmt 1 view .LVU3100
 9076              	# sieve_extend.c:752:         if likely(patternsize_bits>1) {
 752:sieve_extend.c ****             pattern_start = block_start | patternsize_bits;
 9077              		.loc 1 752 12 is_stmt 0 view .LVU3101
 9078 3542 4983FD01 		cmp	r13, 1	# patternsize_bits,
 9079 3546 0F860310 		jbe	.L778	#,
 9079      0000
 753:sieve_extend.c ****             extendSieve(bitstorage, pattern_start, patternsize_bits, range_stop);
 9080              		.loc 1 753 13 is_stmt 1 view .LVU3102
 9081              	.LVL425:
 754:sieve_extend.c ****         }
 9082              		.loc 1 754 13 view .LVU3103
 9083              	.LBB489:
 9084              	.LBI489:
 683:sieve_extend.c ****     if (size < WORD_SIZE_counter) return extendSieve_smallSize (bitstorage, source_start, size, des
 9085              		.loc 1 683 20 view .LVU3104
 9086              	.LBB490:
 684:sieve_extend.c **** 
 9087              		.loc 1 684 5 view .LVU3105
 9088              	# sieve_extend.c:684:     if (size < WORD_SIZE_counter) return extendSieve_smallSize (bitstorage, s
 684:sieve_extend.c **** 
 9089              		.loc 1 684 8 is_stmt 0 view .LVU3106
 9090 354c 4983FD3F 		cmp	r13, 63	# patternsize_bits,
 9091 3550 0F867C07 		jbe	.L1067	#,
 9091      0000
 686:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9092              		.loc 1 686 5 is_stmt 1 view .LVU3107
 9093              	# sieve_extend.c:686:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 686:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9094              		.loc 1 686 35 is_stmt 0 view .LVU3108
 9095 3556 4F8D4C2D 		lea	r9, [r13+r13]	# tmp392,
 9095      00
 9096              	# sieve_extend.c:687:     const bitshift_t source_bit = bitindex_calc(source_start);
 687:sieve_extend.c **** 
 9097              		.loc 1 687 22 view .LVU3109
 9098 355b 4D89EA   		mov	r10, r13	# source_bit, patternsize_bits
 9099              	# sieve_extend.c:686:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 686:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 9100              		.loc 1 686 22 view .LVU3110
 9101 355e 4183E13F 		and	r9d, 63	# copy_bit,
 9102              	.LVL426:
GAS LISTING /tmp/ccfflXEb.s 			page 251


 687:sieve_extend.c **** 
 9103              		.loc 1 687 5 is_stmt 1 view .LVU3111
 9104              	# sieve_extend.c:687:     const bitshift_t source_bit = bitindex_calc(source_start);
 687:sieve_extend.c **** 
 9105              		.loc 1 687 22 is_stmt 0 view .LVU3112
 9106 3562 4183E23F 		and	r10d, 63	# source_bit,
 9107              	.LVL427:
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 9108              		.loc 1 689 5 is_stmt 1 view .LVU3113
 9109              	# sieve_extend.c:689:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 9110              		.loc 1 689 13 is_stmt 0 view .LVU3114
 9111 3566 4D39D1   		cmp	r9, r10	# copy_bit, source_bit
 9112              	# sieve_extend.c:689:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 9113              		.loc 1 689 37 view .LVU3115
 9114 3569 4C89F1   		mov	rcx, r14	#, _70
 9115 356c 4C89EA   		mov	rdx, r13	#, patternsize_bits
 9116 356f 4C89EE   		mov	rsi, r13	#, patternsize_bits
 9117 3572 4C89FF   		mov	rdi, r15	#, _102
 9118              	# sieve_extend.c:689:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 9119              		.loc 1 689 13 view .LVU3116
 9120 3575 0F823506 		jb	.L1068	#,
 9120      0000
 9121              	.LVL428:
 690:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 9122              		.loc 1 690 10 is_stmt 1 view .LVU3117
 9123              	# sieve_extend.c:690:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, 
 690:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 9124              		.loc 1 690 13 is_stmt 0 view .LVU3118
 9125 357b 0F861F06 		jbe	.L716	#,
 9125      0000
 690:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 9126              		.loc 1 690 37 is_stmt 1 view .LVU3119
 9127 3581 E85AD1FF 		call	extendSieve_shiftright_ivdep	#
 9127      FF
 9128              	.LVL429:
 690:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 9129              		.loc 1 690 37 is_stmt 0 view .LVU3120
 9130 3586 4C896C24 		mov	QWORD PTR 48[rsp], r13	# %sfp, patternsize_bits
 9130      30
 9131              	.LVL430:
 9132              	.L713:
 690:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 9133              		.loc 1 690 37 view .LVU3121
 9134              	.LBE490:
 9135              	.LBE489:
 756:sieve_extend.c **** 
 9136              		.loc 1 756 9 is_stmt 1 view .LVU3122
 758:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitstorage, start, step, rang
 9137              		.loc 1 758 9 view .LVU3123
 9138              	# sieve_extend.c:758:         if      (step < SMALLSTEP_FASTER)      setBitsTrue_smallStep (bitstor
 758:sieve_extend.c ****         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitstorage, start, step, rang
 9139              		.loc 1 758 17 is_stmt 0 view .LVU3124
 9140 358b 4C3B2500 		cmp	r12, QWORD PTR global_SMALLSTEP_FASTER[rip]	# step, global_SMALLSTEP_FASTER
 9140      000000
GAS LISTING /tmp/ccfflXEb.s 			page 252


 9141 3592 0F824803 		jb	.L1069	#,
 9141      0000
 759:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitstorage, start, step, ra
 9142              		.loc 1 759 14 is_stmt 1 view .LVU3125
 9143              	# sieve_extend.c:759:         else if (step < MEDIUMSTEP_FASTER)     setBitsTrue_mediumStep(bitstor
 759:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitstorage, start, step, ra
 9144              		.loc 1 759 17 is_stmt 0 view .LVU3126
 9145 3598 4C3B2500 		cmp	r12, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	# step, global_MEDIUMSTEP_FASTER
 9145      000000
 9146 359f 0F821B06 		jb	.L1070	#,
 9146      0000
 9147              	.LVL431:
 9148              	.L721:
 760:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitstorage, start, step, range_sto
 9149              		.loc 1 760 9 is_stmt 1 view .LVU3127
 9150              	# sieve_extend.c:760:         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitst
 760:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitstorage, start, step, range_sto
 9151              		.loc 1 760 12 is_stmt 0 view .LVU3128
 9152 35a5 4C3B2500 		cmp	r12, QWORD PTR global_VECTORSTEP_FASTER[rip]	# step, global_VECTORSTEP_FASTER
 9152      000000
 9153 35ac 0F830601 		jnb	.L740	#,
 9153      0000
 760:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitstorage, start, step, range_sto
 9154              		.loc 1 760 43 is_stmt 1 view .LVU3129
 9155 35b2 4C89F1   		mov	rcx, r14	#, _70
 9156 35b5 4C89E2   		mov	rdx, r12	#, step
 9157 35b8 4889EE   		mov	rsi, rbp	#, index
 9158 35bb 4C89FF   		mov	rdi, r15	#, _102
 9159 35be E8DDDCFF 		call	setBitsTrue_largeRange_vector	#
 9159      FF
 9160              	.LVL432:
 9161              	.L741:
 760:sieve_extend.c ****         else                              setBitsTrue_largeRange(bitstorage, start, step, range_sto
 9162              		.loc 1 760 43 is_stmt 0 view .LVU3130
 9163              	.LBE543:
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9164              		.loc 1 739 11 is_stmt 1 view .LVU3131
 9165              	# sieve_extend.c:739:     for (;range_stop < block_stop;) {
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9166              		.loc 1 739 5 is_stmt 0 view .LVU3132
 9167 35c3 4C3B3424 		cmp	r14, QWORD PTR [rsp]	# _70, %sfp
 9168 35c7 0F83EE02 		jnb	.L1071	#,
 9168      0000
 9169              	.LVL433:
 9170              	.L750:
 9171              	.LBB544:
 740:sieve_extend.c ****         counter_t start = prime * prime * 2 + prime * 2;
 9172              		.loc 1 740 9 is_stmt 1 view .LVU3133
 9173              	.LBB493:
 9174              	.LBI486:
 118:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 9175              		.loc 1 118 25 view .LVU3134
 9176              	.LBB488:
 119:sieve_extend.c ****     return index;
 9177              		.loc 1 119 5 view .LVU3135
 119:sieve_extend.c ****     return index;
 9178              		.loc 1 119 11 view .LVU3136
GAS LISTING /tmp/ccfflXEb.s 			page 253


 9179              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9180              		.loc 1 119 23 is_stmt 0 view .LVU3137
 9181 35cd 4989DC   		mov	r12, rbx	# tmp377, index
 9182 35d0 49C1EC06 		shr	r12, 6	# tmp377,
 9183              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9184              		.loc 1 119 12 view .LVU3138
 9185 35d4 4B8B2CE7 		mov	rbp, QWORD PTR [r15+r12*8]	# *_534,* _102
 9186              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9187              		.loc 1 119 11 view .LVU3139
 9188 35d8 480FA3DD 		bt	rbp, rbx	# *_534, index
 9189 35dc 0F83A600 		jnc	.L709	#,
 9189      0000
 119:sieve_extend.c ****     return index;
 9190              		.loc 1 119 60 is_stmt 1 view .LVU3140
 9191              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9192              		.loc 1 119 65 is_stmt 0 view .LVU3141
 9193 35e2 4C8D7301 		lea	r14, 1[rbx]	# tmp540,
 9194              	.LVL434:
 9195              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9196              		.loc 1 119 23 view .LVU3142
 9197 35e6 4D89F2   		mov	r10, r14	# tmp382, index
 9198              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9199              		.loc 1 119 65 view .LVU3143
 9200 35e9 4C89F3   		mov	rbx, r14	# index, tmp540
 119:sieve_extend.c ****     return index;
 9201              		.loc 1 119 11 is_stmt 1 view .LVU3144
 9202              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9203              		.loc 1 119 23 is_stmt 0 view .LVU3145
 9204 35ec 49C1EA06 		shr	r10, 6	# tmp382,
 9205              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9206              		.loc 1 119 12 view .LVU3146
 9207 35f0 4B8B3CD7 		mov	rdi, QWORD PTR [r15+r10*8]	# *_50, *_50
 9208              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9209              		.loc 1 119 11 view .LVU3147
 9210 35f4 4C0FA3F7 		bt	rdi, r14	# *_50, index
 9211 35f8 0F838A00 		jnc	.L709	#,
 9211      0000
 119:sieve_extend.c ****     return index;
 9212              		.loc 1 119 60 is_stmt 1 view .LVU3148
 9213              	.LVL435:
 9214              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9215              		.loc 1 119 65 is_stmt 0 view .LVU3149
 9216 35fe 4883C301 		add	rbx, 1	# index,
 9217              	.LVL436:
 119:sieve_extend.c ****     return index;
 9218              		.loc 1 119 11 is_stmt 1 view .LVU3150
 9219              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccfflXEb.s 			page 254


 119:sieve_extend.c ****     return index;
 9220              		.loc 1 119 23 is_stmt 0 view .LVU3151
 9221 3602 4889DA   		mov	rdx, rbx	# tmp641, index
 9222 3605 48C1EA06 		shr	rdx, 6	# tmp641,
 9223              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9224              		.loc 1 119 12 view .LVU3152
 9225 3609 4D8B04D7 		mov	r8, QWORD PTR [r15+rdx*8]	# *_50, *_50
 9226              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9227              		.loc 1 119 11 view .LVU3153
 9228 360d 490FA3D8 		bt	r8, rbx	# *_50, index
 9229 3611 7375     		jnc	.L709	#,
 119:sieve_extend.c ****     return index;
 9230              		.loc 1 119 60 is_stmt 1 view .LVU3154
 9231              	.LVL437:
 9232              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9233              		.loc 1 119 65 is_stmt 0 view .LVU3155
 9234 3613 498D5E02 		lea	rbx, 2[r14]	# index,
 9235              	.LVL438:
 119:sieve_extend.c ****     return index;
 9236              		.loc 1 119 11 is_stmt 1 view .LVU3156
 9237              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9238              		.loc 1 119 23 is_stmt 0 view .LVU3157
 9239 3617 4989D9   		mov	r9, rbx	# tmp645, index
 9240 361a 49C1E906 		shr	r9, 6	# tmp645,
 9241              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9242              		.loc 1 119 12 view .LVU3158
 9243 361e 4F8B1CCF 		mov	r11, QWORD PTR [r15+r9*8]	# *_50, *_50
 9244              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9245              		.loc 1 119 11 view .LVU3159
 9246 3622 490FA3DB 		bt	r11, rbx	# *_50, index
 9247 3626 7360     		jnc	.L709	#,
 119:sieve_extend.c ****     return index;
 9248              		.loc 1 119 60 is_stmt 1 view .LVU3160
 9249              	.LVL439:
 9250              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9251              		.loc 1 119 65 is_stmt 0 view .LVU3161
 9252 3628 498D5E03 		lea	rbx, 3[r14]	# index,
 9253              	.LVL440:
 119:sieve_extend.c ****     return index;
 9254              		.loc 1 119 11 is_stmt 1 view .LVU3162
 9255              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9256              		.loc 1 119 23 is_stmt 0 view .LVU3163
 9257 362c 4889D9   		mov	rcx, rbx	# tmp649, index
 9258 362f 48C1E906 		shr	rcx, 6	# tmp649,
 9259              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9260              		.loc 1 119 12 view .LVU3164
 9261 3633 498B04CF 		mov	rax, QWORD PTR [r15+rcx*8]	# *_50, *_50
 9262              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccfflXEb.s 			page 255


 119:sieve_extend.c ****     return index;
 9263              		.loc 1 119 11 view .LVU3165
 9264 3637 480FA3D8 		bt	rax, rbx	# *_50, index
 9265 363b 734B     		jnc	.L709	#,
 119:sieve_extend.c ****     return index;
 9266              		.loc 1 119 60 is_stmt 1 view .LVU3166
 9267              	.LVL441:
 9268              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9269              		.loc 1 119 65 is_stmt 0 view .LVU3167
 9270 363d 498D5E04 		lea	rbx, 4[r14]	# index,
 9271              	.LVL442:
 119:sieve_extend.c ****     return index;
 9272              		.loc 1 119 11 is_stmt 1 view .LVU3168
 9273              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9274              		.loc 1 119 23 is_stmt 0 view .LVU3169
 9275 3641 4889DE   		mov	rsi, rbx	# tmp653, index
 9276 3644 48C1EE06 		shr	rsi, 6	# tmp653,
 9277              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9278              		.loc 1 119 12 view .LVU3170
 9279 3648 4D8B24F7 		mov	r12, QWORD PTR [r15+rsi*8]	# *_50, *_50
 9280              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9281              		.loc 1 119 11 view .LVU3171
 9282 364c 490FA3DC 		bt	r12, rbx	# *_50, index
 9283 3650 7336     		jnc	.L709	#,
 119:sieve_extend.c ****     return index;
 9284              		.loc 1 119 60 is_stmt 1 view .LVU3172
 9285              	.LVL443:
 9286              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9287              		.loc 1 119 65 is_stmt 0 view .LVU3173
 9288 3652 498D5E05 		lea	rbx, 5[r14]	# index,
 9289              	.LVL444:
 119:sieve_extend.c ****     return index;
 9290              		.loc 1 119 11 is_stmt 1 view .LVU3174
 9291              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9292              		.loc 1 119 23 is_stmt 0 view .LVU3175
 9293 3656 4889DD   		mov	rbp, rbx	# tmp657, index
 9294 3659 48C1ED06 		shr	rbp, 6	# tmp657,
 9295              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9296              		.loc 1 119 12 view .LVU3176
 9297 365d 4D8B14EF 		mov	r10, QWORD PTR [r15+rbp*8]	# *_50, *_50
 9298              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9299              		.loc 1 119 11 view .LVU3177
 9300 3661 490FA3DA 		bt	r10, rbx	# *_50, index
 9301 3665 7321     		jnc	.L709	#,
 119:sieve_extend.c ****     return index;
 9302              		.loc 1 119 60 is_stmt 1 view .LVU3178
 9303              	.LVL445:
 9304              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccfflXEb.s 			page 256


 9305              		.loc 1 119 65 is_stmt 0 view .LVU3179
 9306 3667 498D5E06 		lea	rbx, 6[r14]	# index,
 9307              	.LVL446:
 119:sieve_extend.c ****     return index;
 9308              		.loc 1 119 11 is_stmt 1 view .LVU3180
 9309              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9310              		.loc 1 119 23 is_stmt 0 view .LVU3181
 9311 366b 4889DF   		mov	rdi, rbx	# tmp661, index
 9312 366e 48C1EF06 		shr	rdi, 6	# tmp661,
 9313              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9314              		.loc 1 119 12 view .LVU3182
 9315 3672 498B14FF 		mov	rdx, QWORD PTR [r15+rdi*8]	# *_50, *_50
 9316              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9317              		.loc 1 119 11 view .LVU3183
 9318 3676 480FA3DA 		bt	rdx, rbx	# *_50, index
 9319 367a 730C     		jnc	.L709	#,
 119:sieve_extend.c ****     return index;
 9320              		.loc 1 119 60 is_stmt 1 view .LVU3184
 9321              	.LVL447:
 9322              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 9323              		.loc 1 119 65 is_stmt 0 view .LVU3185
 9324 367c 498D5E07 		lea	rbx, 7[r14]	# index,
 9325              	.LVL448:
 119:sieve_extend.c ****     return index;
 9326              		.loc 1 119 11 is_stmt 1 view .LVU3186
 9327 3680 E948FFFF 		jmp	.L750	#
 9327      FF
 9328              	.LVL449:
 9329              		.p2align 4,,7
 9330 3685 0F1F00   		.p2align 3
 9331              	.L709:
 119:sieve_extend.c ****     return index;
 9332              		.loc 1 119 11 is_stmt 0 view .LVU3187
 9333              	.LBE488:
 9334              	.LBE493:
 9335              	.LBE544:
 9336              	.LBE549:
 9337              	.LBE555:
 9338              	# sieve_extend.c:768: static struct sieve_t* sieve_shake(const counter_t maxints, const counter_t b
 768:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9339              		.loc 1 768 88 view .LVU3188
 9340 3688 4C8B7424 		mov	r14, QWORD PTR 48[rsp]	# pattern_start, %sfp
 9340      30
 9341 368d 4C89E8   		mov	rax, r13	# block$pattern_size, patternsize_bits
 9342 3690 488B5424 		mov	rdx, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 9342      10
 9343 3695 4889DE   		mov	rsi, rbx	# index, index
 9344 3698 488B4C24 		mov	rcx, QWORD PTR 8[rsp]	# prime, %sfp
 9344      08
 9345 369d 4C8B6C24 		mov	r13, QWORD PTR 24[rsp]	# patternsize_bits, %sfp
 9345      18
 9346              	.LVL450:
 768:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
GAS LISTING /tmp/ccfflXEb.s 			page 257


 9347              		.loc 1 768 88 view .LVU3189
 9348 36a2 4C897424 		mov	QWORD PTR 16[rsp], r14	# %sfp, pattern_start
 9348      10
 9349              	.LVL451:
 768:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9350              		.loc 1 768 88 view .LVU3190
 9351 36a7 48895C24 		mov	QWORD PTR 8[rsp], rbx	# %sfp, index
 9351      08
 9352              	.LVL452:
 768:sieve_extend.c ****     struct sieve_t *sieve = sieve_create(maxints);
 9353              		.loc 1 768 88 view .LVU3191
 9354 36ac E93FFEFF 		jmp	.L707	#
 9354      FF
 9355              	.LVL453:
 9356              		.p2align 4,,7
 9357 36b1 0F1F8000 		.p2align 3
 9357      000000
 9358              	.L740:
 9359              	.LBB556:
 9360              	.LBB550:
 9361              	.LBB545:
 761:sieve_extend.c ****         block.prime = prime;
 9362              		.loc 1 761 43 is_stmt 1 view .LVU3192
 9363              	.LBB494:
 9364              	.LBI494:
 299:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 9365              		.loc 1 299 20 view .LVU3193
 9366              	.LBB495:
 300:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 9367              		.loc 1 300 5 view .LVU3194
 301:sieve_extend.c **** 
 9368              		.loc 1 301 5 view .LVU3195
 9369              	# sieve_extend.c:301:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 301:sieve_extend.c **** 
 9370              		.loc 1 301 74 is_stmt 0 view .LVU3196
 9371 36b8 4D89E2   		mov	r10, r12	# tmp449, step
 9372 36bb 49C1E206 		sal	r10, 6	# tmp449,
 9373              	# sieve_extend.c:301:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 301:sieve_extend.c **** 
 9374              		.loc 1 301 21 view .LVU3197
 9375 36bf 4901EA   		add	r10, rbp	# range_stop_unique, index
 9376              	.LVL454:
 9377              	.LBB496:
 305:sieve_extend.c ****         #if __APPLE__
 9378              		.loc 1 305 10 is_stmt 1 view .LVU3198
 305:sieve_extend.c ****         #if __APPLE__
 9379              		.loc 1 305 50 view .LVU3199
 9380              	# sieve_extend.c:305:     for (register counter_t index = range_start; index < range_stop_unique; i
 305:sieve_extend.c ****         #if __APPLE__
 9381              		.loc 1 305 5 is_stmt 0 view .LVU3200
 9382 36c2 4C39D5   		cmp	rbp, r10	# index, range_stop_unique
 9383 36c5 0F83F8FE 		jnb	.L741	#,
 9383      FFFF
 9384              	.LBB497:
 9385              	.LBB498:
 9386              	# sieve_extend.c:169:    const counter_t range_stop_word = wordindex(range_stop);
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
GAS LISTING /tmp/ccfflXEb.s 			page 258


 9387              		.loc 1 169 20 view .LVU3201
 9388 36cb 4D89F3   		mov	r11, r14	# range_stop_word, _70
 9389              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 9390              		.loc 1 171 112 view .LVU3202
 9391 36ce 4B8D3CA4 		lea	rdi, [r12+r12*4]	# tmp452,
 9392              	# sieve_extend.c:169:    const counter_t range_stop_word = wordindex(range_stop);
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 9393              		.loc 1 169 20 view .LVU3203
 9394 36d2 49C1EB06 		shr	r11, 6	# range_stop_word,
 9395              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9396              		.loc 1 189 29 view .LVU3204
 9397 36d6 4589F1   		mov	r9d, r14d	# tmp454, _70
 9398              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 9399              		.loc 1 171 135 view .LVU3205
 9400 36d9 4C89D9   		mov	rcx, r11	# tmp458, range_stop_word
 9401              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9402              		.loc 1 189 29 view .LVU3206
 9403 36dc 41F7D1   		not	r9d	# tmp454
 9404              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 9405              		.loc 1 171 135 view .LVU3207
 9406 36df 4829F9   		sub	rcx, rdi	# tmp458, tmp452
 9407              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 9408              		.loc 1 171 53 view .LVU3208
 9409 36e2 4939FB   		cmp	r11, rdi	# range_stop_word, tmp452
 9410              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9411              		.loc 1 189 29 view .LVU3209
 9412 36e5 48C7C6FF 		mov	rsi, -1	# tmp1001,
 9412      FFFFFF
 9413              	# sieve_extend.c:183:    register const bitword_t* __restrict range_stop_ptr = &bitstorage[(range_s
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9414              		.loc 1 183 41 view .LVU3210
 9415 36ec 4F8D04DF 		lea	r8, [r15+r11*8]	# range_stop_ptr,
 9416              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9417              		.loc 1 189 29 view .LVU3211
 9418 36f0 C4E2B3F7 		shrx	rax, rsi, r9	# _291, tmp1001, tmp454
 9418      C6
 9419 36f5 4D89E3   		mov	r11, r12	# _800, step
 9420              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 9421              		.loc 1 171 53 view .LVU3212
 9422 36f8 4D8D0CCF 		lea	r9, [r15+rcx*8]	# tmp460,
 9423              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9424              		.loc 1 176 44 view .LVU3213
 9425 36fc 4A8D14E5 		lea	rdx, 0[0+r12*8]	# _259,
 9425      00000000 
 9426              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9427              		.loc 1 189 29 view .LVU3214
GAS LISTING /tmp/ccfflXEb.s 			page 259


 9428 3704 48894424 		mov	QWORD PTR 56[rsp], rax	# %sfp, _291
 9428      38
 9429              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 9430              		.loc 1 171 53 view .LVU3215
 9431 3709 4D0F46CF 		cmovbe	r9, r15	# _102,, fast_loop_ptr
 9432 370d 48C1E703 		sal	rdi, 3	# tmp464,
 9433 3711 49C1E304 		sal	r11, 4	# _800,
 9434              	.LVL455:
 9435 3715 66662E0F 		.p2align 4
 9435      1F840000 
 9435      000000
 9436              		.p2align 3
 9437              	.L748:
 171:sieve_extend.c **** 
 9438              		.loc 1 171 53 view .LVU3216
 9439              	.LBE498:
 9440              	.LBE497:
 309:sieve_extend.c ****         #endif
 9441              		.loc 1 309 13 is_stmt 1 view .LVU3217
 9442 3720 4889E8   		mov	rax, rbp	# tmp467, index
 9443 3723 BE010000 		mov	esi, 1	# tmp1004,
 9443      00
 9444 3728 48C1E806 		shr	rax, 6	# tmp467,
 9445 372c C4E2D1F7 		shlx	rcx, rsi, rbp	# _244, tmp1004, index
 9445      CE
 9446              	.LVL456:
 9447              	.LBB501:
 9448              	.LBI497:
 168:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 9449              		.loc 1 168 20 view .LVU3218
 9450              	.LBB499:
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 9451              		.loc 1 169 4 view .LVU3219
 170:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 9452              		.loc 1 170 4 view .LVU3220
 9453              	# sieve_extend.c:170:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 170:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 9454              		.loc 1 170 78 is_stmt 0 view .LVU3221
 9455 3731 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 9456              	.LVL457:
 171:sieve_extend.c **** 
 9457              		.loc 1 171 4 is_stmt 1 view .LVU3222
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9458              		.loc 1 175 10 view .LVU3223
 9459 3735 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 9460 3738 0F830201 		jnb	.L743	#,
 9460      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9461              		.loc 1 175 10 is_stmt 0 view .LVU3224
 9462 373e 4A8D3418 		lea	rsi, [rax+r11]	# ivtmp.544,
 9463              	.L744:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9464              		.loc 1 176 8 is_stmt 1 view .LVU3225
 9465              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9466              		.loc 1 176 19 is_stmt 0 view .LVU3226
GAS LISTING /tmp/ccfflXEb.s 			page 260


 9467 3742 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _244
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9468              		.loc 1 176 35 is_stmt 1 view .LVU3227
 9469              	.LVL458:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9470              		.loc 1 177 8 view .LVU3228
 9471              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9472              		.loc 1 177 19 is_stmt 0 view .LVU3229
 9473 3745 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _259, offset: 0B], _244
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9474              		.loc 1 177 35 is_stmt 1 view .LVU3230
 9475              	.LVL459:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9476              		.loc 1 178 8 view .LVU3231
 9477              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9478              		.loc 1 178 19 is_stmt 0 view .LVU3232
 9479 3749 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _794, offset: 0B], _244
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9480              		.loc 1 178 35 is_stmt 1 view .LVU3233
 9481              	.LVL460:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9482              		.loc 1 179 8 view .LVU3234
 9483              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9484              		.loc 1 179 19 is_stmt 0 view .LVU3235
 9485 374c 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _794, index: _259, offset: 0B], _244
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9486              		.loc 1 179 35 is_stmt 1 view .LVU3236
 9487              	.LVL461:
 180:sieve_extend.c ****    }
 9488              		.loc 1 180 8 view .LVU3237
 9489 3750 4801FE   		add	rsi, rdi	# ivtmp.544, tmp464
 9490              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 9491              		.loc 1 180 19 is_stmt 0 view .LVU3238
 9492 3753 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _259, step: 4, offset: 0B], _244
 180:sieve_extend.c ****    }
 9493              		.loc 1 180 35 is_stmt 1 view .LVU3239
 9494 3757 4801F8   		add	rax, rdi	# index_ptr, tmp464
 9495              	.LVL462:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9496              		.loc 1 175 10 view .LVU3240
 9497 375a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9498 375d 0F86DD00 		jbe	.L743	#,
 9498      0000
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9499              		.loc 1 176 8 view .LVU3241
 9500              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9501              		.loc 1 176 19 is_stmt 0 view .LVU3242
 9502 3763 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _244
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9503              		.loc 1 176 35 is_stmt 1 view .LVU3243
 9504              	.LVL463:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 261


 9505              		.loc 1 177 8 view .LVU3244
 9506              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9507              		.loc 1 177 19 is_stmt 0 view .LVU3245
 9508 3766 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _259, offset: 0B], _244
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9509              		.loc 1 177 35 is_stmt 1 view .LVU3246
 9510              	.LVL464:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9511              		.loc 1 178 8 view .LVU3247
 9512              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9513              		.loc 1 178 19 is_stmt 0 view .LVU3248
 9514 376a 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _794, offset: 0B], _244
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9515              		.loc 1 178 35 is_stmt 1 view .LVU3249
 9516              	.LVL465:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9517              		.loc 1 179 8 view .LVU3250
 9518              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9519              		.loc 1 179 19 is_stmt 0 view .LVU3251
 9520 376d 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _794, index: _259, offset: 0B], _244
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9521              		.loc 1 179 35 is_stmt 1 view .LVU3252
 9522              	.LVL466:
 180:sieve_extend.c ****    }
 9523              		.loc 1 180 8 view .LVU3253
 9524 3771 4801FE   		add	rsi, rdi	# ivtmp.544, tmp464
 9525              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 9526              		.loc 1 180 19 is_stmt 0 view .LVU3254
 9527 3774 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _259, step: 4, offset: 0B], _244
 180:sieve_extend.c ****    }
 9528              		.loc 1 180 35 is_stmt 1 view .LVU3255
 9529 3778 4801F8   		add	rax, rdi	# index_ptr, tmp464
 9530              	.LVL467:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9531              		.loc 1 175 10 view .LVU3256
 9532 377b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9533 377e 0F86BC00 		jbe	.L743	#,
 9533      0000
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9534              		.loc 1 176 8 view .LVU3257
 9535              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9536              		.loc 1 176 19 is_stmt 0 view .LVU3258
 9537 3784 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _244
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9538              		.loc 1 176 35 is_stmt 1 view .LVU3259
 9539              	.LVL468:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9540              		.loc 1 177 8 view .LVU3260
 9541              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9542              		.loc 1 177 19 is_stmt 0 view .LVU3261
 9543 3787 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _259, offset: 0B], _244
GAS LISTING /tmp/ccfflXEb.s 			page 262


 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9544              		.loc 1 177 35 is_stmt 1 view .LVU3262
 9545              	.LVL469:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9546              		.loc 1 178 8 view .LVU3263
 9547              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9548              		.loc 1 178 19 is_stmt 0 view .LVU3264
 9549 378b 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _794, offset: 0B], _244
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9550              		.loc 1 178 35 is_stmt 1 view .LVU3265
 9551              	.LVL470:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9552              		.loc 1 179 8 view .LVU3266
 9553              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9554              		.loc 1 179 19 is_stmt 0 view .LVU3267
 9555 378e 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _794, index: _259, offset: 0B], _244
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9556              		.loc 1 179 35 is_stmt 1 view .LVU3268
 9557              	.LVL471:
 180:sieve_extend.c ****    }
 9558              		.loc 1 180 8 view .LVU3269
 9559 3792 4801FE   		add	rsi, rdi	# ivtmp.544, tmp464
 9560              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 9561              		.loc 1 180 19 is_stmt 0 view .LVU3270
 9562 3795 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _259, step: 4, offset: 0B], _244
 180:sieve_extend.c ****    }
 9563              		.loc 1 180 35 is_stmt 1 view .LVU3271
 9564 3799 4801F8   		add	rax, rdi	# index_ptr, tmp464
 9565              	.LVL472:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9566              		.loc 1 175 10 view .LVU3272
 9567 379c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9568 379f 0F869B00 		jbe	.L743	#,
 9568      0000
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9569              		.loc 1 176 8 view .LVU3273
 9570              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9571              		.loc 1 176 19 is_stmt 0 view .LVU3274
 9572 37a5 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _244
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9573              		.loc 1 176 35 is_stmt 1 view .LVU3275
 9574              	.LVL473:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9575              		.loc 1 177 8 view .LVU3276
 9576              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9577              		.loc 1 177 19 is_stmt 0 view .LVU3277
 9578 37a8 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _259, offset: 0B], _244
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9579              		.loc 1 177 35 is_stmt 1 view .LVU3278
 9580              	.LVL474:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9581              		.loc 1 178 8 view .LVU3279
GAS LISTING /tmp/ccfflXEb.s 			page 263


 9582              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9583              		.loc 1 178 19 is_stmt 0 view .LVU3280
 9584 37ac 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _794, offset: 0B], _244
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9585              		.loc 1 178 35 is_stmt 1 view .LVU3281
 9586              	.LVL475:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9587              		.loc 1 179 8 view .LVU3282
 9588              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9589              		.loc 1 179 19 is_stmt 0 view .LVU3283
 9590 37af 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _794, index: _259, offset: 0B], _244
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9591              		.loc 1 179 35 is_stmt 1 view .LVU3284
 9592              	.LVL476:
 180:sieve_extend.c ****    }
 9593              		.loc 1 180 8 view .LVU3285
 9594 37b3 4801FE   		add	rsi, rdi	# ivtmp.544, tmp464
 9595              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 9596              		.loc 1 180 19 is_stmt 0 view .LVU3286
 9597 37b6 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _259, step: 4, offset: 0B], _244
 180:sieve_extend.c ****    }
 9598              		.loc 1 180 35 is_stmt 1 view .LVU3287
 9599 37ba 4801F8   		add	rax, rdi	# index_ptr, tmp464
 9600              	.LVL477:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9601              		.loc 1 175 10 view .LVU3288
 9602 37bd 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9603 37c0 767E     		jbe	.L743	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9604              		.loc 1 176 8 view .LVU3289
 9605              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9606              		.loc 1 176 19 is_stmt 0 view .LVU3290
 9607 37c2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _244
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9608              		.loc 1 176 35 is_stmt 1 view .LVU3291
 9609              	.LVL478:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9610              		.loc 1 177 8 view .LVU3292
 9611              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9612              		.loc 1 177 19 is_stmt 0 view .LVU3293
 9613 37c5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _259, offset: 0B], _244
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9614              		.loc 1 177 35 is_stmt 1 view .LVU3294
 9615              	.LVL479:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9616              		.loc 1 178 8 view .LVU3295
 9617              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9618              		.loc 1 178 19 is_stmt 0 view .LVU3296
 9619 37c9 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _794, offset: 0B], _244
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9620              		.loc 1 178 35 is_stmt 1 view .LVU3297
GAS LISTING /tmp/ccfflXEb.s 			page 264


 9621              	.LVL480:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9622              		.loc 1 179 8 view .LVU3298
 9623              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9624              		.loc 1 179 19 is_stmt 0 view .LVU3299
 9625 37cc 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _794, index: _259, offset: 0B], _244
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9626              		.loc 1 179 35 is_stmt 1 view .LVU3300
 9627              	.LVL481:
 180:sieve_extend.c ****    }
 9628              		.loc 1 180 8 view .LVU3301
 9629 37d0 4801FE   		add	rsi, rdi	# ivtmp.544, tmp464
 9630              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 9631              		.loc 1 180 19 is_stmt 0 view .LVU3302
 9632 37d3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _259, step: 4, offset: 0B], _244
 180:sieve_extend.c ****    }
 9633              		.loc 1 180 35 is_stmt 1 view .LVU3303
 9634 37d7 4801F8   		add	rax, rdi	# index_ptr, tmp464
 9635              	.LVL482:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9636              		.loc 1 175 10 view .LVU3304
 9637 37da 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9638 37dd 7661     		jbe	.L743	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9639              		.loc 1 176 8 view .LVU3305
 9640              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9641              		.loc 1 176 19 is_stmt 0 view .LVU3306
 9642 37df 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _244
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9643              		.loc 1 176 35 is_stmt 1 view .LVU3307
 9644              	.LVL483:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9645              		.loc 1 177 8 view .LVU3308
 9646              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9647              		.loc 1 177 19 is_stmt 0 view .LVU3309
 9648 37e2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _259, offset: 0B], _244
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9649              		.loc 1 177 35 is_stmt 1 view .LVU3310
 9650              	.LVL484:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9651              		.loc 1 178 8 view .LVU3311
 9652              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9653              		.loc 1 178 19 is_stmt 0 view .LVU3312
 9654 37e6 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _794, offset: 0B], _244
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9655              		.loc 1 178 35 is_stmt 1 view .LVU3313
 9656              	.LVL485:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9657              		.loc 1 179 8 view .LVU3314
 9658              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9659              		.loc 1 179 19 is_stmt 0 view .LVU3315
GAS LISTING /tmp/ccfflXEb.s 			page 265


 9660 37e9 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _794, index: _259, offset: 0B], _244
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9661              		.loc 1 179 35 is_stmt 1 view .LVU3316
 9662              	.LVL486:
 180:sieve_extend.c ****    }
 9663              		.loc 1 180 8 view .LVU3317
 9664 37ed 4801FE   		add	rsi, rdi	# ivtmp.544, tmp464
 9665              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 9666              		.loc 1 180 19 is_stmt 0 view .LVU3318
 9667 37f0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _259, step: 4, offset: 0B], _244
 180:sieve_extend.c ****    }
 9668              		.loc 1 180 35 is_stmt 1 view .LVU3319
 9669 37f4 4801F8   		add	rax, rdi	# index_ptr, tmp464
 9670              	.LVL487:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9671              		.loc 1 175 10 view .LVU3320
 9672 37f7 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9673 37fa 7644     		jbe	.L743	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9674              		.loc 1 176 8 view .LVU3321
 9675              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9676              		.loc 1 176 19 is_stmt 0 view .LVU3322
 9677 37fc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _244
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9678              		.loc 1 176 35 is_stmt 1 view .LVU3323
 9679              	.LVL488:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9680              		.loc 1 177 8 view .LVU3324
 9681              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9682              		.loc 1 177 19 is_stmt 0 view .LVU3325
 9683 37ff 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _259, offset: 0B], _244
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9684              		.loc 1 177 35 is_stmt 1 view .LVU3326
 9685              	.LVL489:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9686              		.loc 1 178 8 view .LVU3327
 9687              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9688              		.loc 1 178 19 is_stmt 0 view .LVU3328
 9689 3803 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _794, offset: 0B], _244
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9690              		.loc 1 178 35 is_stmt 1 view .LVU3329
 9691              	.LVL490:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9692              		.loc 1 179 8 view .LVU3330
 9693              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9694              		.loc 1 179 19 is_stmt 0 view .LVU3331
 9695 3806 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _794, index: _259, offset: 0B], _244
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9696              		.loc 1 179 35 is_stmt 1 view .LVU3332
 9697              	.LVL491:
 180:sieve_extend.c ****    }
 9698              		.loc 1 180 8 view .LVU3333
GAS LISTING /tmp/ccfflXEb.s 			page 266


 9699 380a 4801FE   		add	rsi, rdi	# ivtmp.544, tmp464
 9700              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 9701              		.loc 1 180 19 is_stmt 0 view .LVU3334
 9702 380d 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _259, step: 4, offset: 0B], _244
 180:sieve_extend.c ****    }
 9703              		.loc 1 180 35 is_stmt 1 view .LVU3335
 9704 3811 4801F8   		add	rax, rdi	# index_ptr, tmp464
 9705              	.LVL492:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9706              		.loc 1 175 10 view .LVU3336
 9707 3814 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9708 3817 7627     		jbe	.L743	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9709              		.loc 1 176 8 view .LVU3337
 9710              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9711              		.loc 1 176 19 is_stmt 0 view .LVU3338
 9712 3819 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_516, offset: 0B], _244
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9713              		.loc 1 176 35 is_stmt 1 view .LVU3339
 9714              	.LVL493:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9715              		.loc 1 177 8 view .LVU3340
 9716              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9717              		.loc 1 177 19 is_stmt 0 view .LVU3341
 9718 381c 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_516, index: _259, offset: 0B], _244
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9719              		.loc 1 177 35 is_stmt 1 view .LVU3342
 9720              	.LVL494:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9721              		.loc 1 178 8 view .LVU3343
 9722              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9723              		.loc 1 178 19 is_stmt 0 view .LVU3344
 9724 3820 48090E   		or	QWORD PTR [rsi], rcx	# MEM[base: _794, offset: 0B], _244
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9725              		.loc 1 178 35 is_stmt 1 view .LVU3345
 9726              	.LVL495:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9727              		.loc 1 179 8 view .LVU3346
 9728              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9729              		.loc 1 179 19 is_stmt 0 view .LVU3347
 9730 3823 48090C16 		or	QWORD PTR [rsi+rdx], rcx	# MEM[base: _794, index: _259, offset: 0B], _244
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9731              		.loc 1 179 35 is_stmt 1 view .LVU3348
 9732              	.LVL496:
 180:sieve_extend.c ****    }
 9733              		.loc 1 180 8 view .LVU3349
 9734 3827 4801FE   		add	rsi, rdi	# ivtmp.544, tmp464
 9735              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 9736              		.loc 1 180 19 is_stmt 0 view .LVU3350
 9737 382a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_516, index: _259, step: 4, offset: 0B], _244
 180:sieve_extend.c ****    }
GAS LISTING /tmp/ccfflXEb.s 			page 267


 9738              		.loc 1 180 35 is_stmt 1 view .LVU3351
 9739 382e 4801F8   		add	rax, rdi	# index_ptr, tmp464
 9740              	.LVL497:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 9741              		.loc 1 175 10 view .LVU3352
 9742 3831 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 9743 3834 0F8708FF 		ja	.L744	#,
 9743      FFFF
 9744 383a 660F1F44 		.p2align 4
 9744      0000
 9745              		.p2align 3
 9746              	.L743:
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 9747              		.loc 1 183 4 view .LVU3353
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9748              		.loc 1 184 4 view .LVU3354
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9749              		.loc 1 184 10 view .LVU3355
 9750 3840 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9751 3843 765B     		jbe	.L745	#,
 9752              	.L746:
 185:sieve_extend.c ****    }
 9753              		.loc 1 185 8 view .LVU3356
 9754              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9755              		.loc 1 185 19 is_stmt 0 view .LVU3357
 9756 3845 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_312, offset: 0B], _244
 185:sieve_extend.c ****    }
 9757              		.loc 1 185 34 is_stmt 1 view .LVU3358
 9758              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9759              		.loc 1 185 43 is_stmt 0 view .LVU3359
 9760 3848 4801D0   		add	rax, rdx	# index_ptr, _259
 9761              	.LVL498:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9762              		.loc 1 184 10 is_stmt 1 view .LVU3360
 9763 384b 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9764 384e 7650     		jbe	.L745	#,
 185:sieve_extend.c ****    }
 9765              		.loc 1 185 8 view .LVU3361
 9766              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9767              		.loc 1 185 19 is_stmt 0 view .LVU3362
 9768 3850 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_312, offset: 0B], _244
 185:sieve_extend.c ****    }
 9769              		.loc 1 185 34 is_stmt 1 view .LVU3363
 9770              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9771              		.loc 1 185 43 is_stmt 0 view .LVU3364
 9772 3853 4801D0   		add	rax, rdx	# index_ptr, _259
 9773              	.LVL499:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9774              		.loc 1 184 10 is_stmt 1 view .LVU3365
 9775 3856 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9776 3859 7645     		jbe	.L745	#,
 185:sieve_extend.c ****    }
 9777              		.loc 1 185 8 view .LVU3366
GAS LISTING /tmp/ccfflXEb.s 			page 268


 9778              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9779              		.loc 1 185 19 is_stmt 0 view .LVU3367
 9780 385b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_312, offset: 0B], _244
 185:sieve_extend.c ****    }
 9781              		.loc 1 185 34 is_stmt 1 view .LVU3368
 9782              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9783              		.loc 1 185 43 is_stmt 0 view .LVU3369
 9784 385e 4801D0   		add	rax, rdx	# index_ptr, _259
 9785              	.LVL500:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9786              		.loc 1 184 10 is_stmt 1 view .LVU3370
 9787 3861 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9788 3864 763A     		jbe	.L745	#,
 185:sieve_extend.c ****    }
 9789              		.loc 1 185 8 view .LVU3371
 9790              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9791              		.loc 1 185 19 is_stmt 0 view .LVU3372
 9792 3866 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_312, offset: 0B], _244
 185:sieve_extend.c ****    }
 9793              		.loc 1 185 34 is_stmt 1 view .LVU3373
 9794              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9795              		.loc 1 185 43 is_stmt 0 view .LVU3374
 9796 3869 4801D0   		add	rax, rdx	# index_ptr, _259
 9797              	.LVL501:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9798              		.loc 1 184 10 is_stmt 1 view .LVU3375
 9799 386c 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9800 386f 762F     		jbe	.L745	#,
 185:sieve_extend.c ****    }
 9801              		.loc 1 185 8 view .LVU3376
 9802              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9803              		.loc 1 185 19 is_stmt 0 view .LVU3377
 9804 3871 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_312, offset: 0B], _244
 185:sieve_extend.c ****    }
 9805              		.loc 1 185 34 is_stmt 1 view .LVU3378
 9806              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9807              		.loc 1 185 43 is_stmt 0 view .LVU3379
 9808 3874 4801D0   		add	rax, rdx	# index_ptr, _259
 9809              	.LVL502:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9810              		.loc 1 184 10 is_stmt 1 view .LVU3380
 9811 3877 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9812 387a 7624     		jbe	.L745	#,
 185:sieve_extend.c ****    }
 9813              		.loc 1 185 8 view .LVU3381
 9814              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9815              		.loc 1 185 19 is_stmt 0 view .LVU3382
 9816 387c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_312, offset: 0B], _244
 185:sieve_extend.c ****    }
 9817              		.loc 1 185 34 is_stmt 1 view .LVU3383
GAS LISTING /tmp/ccfflXEb.s 			page 269


 9818              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9819              		.loc 1 185 43 is_stmt 0 view .LVU3384
 9820 387f 4801D0   		add	rax, rdx	# index_ptr, _259
 9821              	.LVL503:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9822              		.loc 1 184 10 is_stmt 1 view .LVU3385
 9823 3882 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9824 3885 7619     		jbe	.L745	#,
 185:sieve_extend.c ****    }
 9825              		.loc 1 185 8 view .LVU3386
 9826              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9827              		.loc 1 185 19 is_stmt 0 view .LVU3387
 9828 3887 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_312, offset: 0B], _244
 185:sieve_extend.c ****    }
 9829              		.loc 1 185 34 is_stmt 1 view .LVU3388
 9830              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9831              		.loc 1 185 43 is_stmt 0 view .LVU3389
 9832 388a 4801D0   		add	rax, rdx	# index_ptr, _259
 9833              	.LVL504:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9834              		.loc 1 184 10 is_stmt 1 view .LVU3390
 9835 388d 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9836 3890 760E     		jbe	.L745	#,
 185:sieve_extend.c ****    }
 9837              		.loc 1 185 8 view .LVU3391
 9838              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9839              		.loc 1 185 19 is_stmt 0 view .LVU3392
 9840 3892 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_312, offset: 0B], _244
 185:sieve_extend.c ****    }
 9841              		.loc 1 185 34 is_stmt 1 view .LVU3393
 9842              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 9843              		.loc 1 185 43 is_stmt 0 view .LVU3394
 9844 3895 4801D0   		add	rax, rdx	# index_ptr, _259
 9845              	.LVL505:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 9846              		.loc 1 184 10 is_stmt 1 view .LVU3395
 9847 3898 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9848 389b 77A8     		ja	.L746	#,
 9849 389d 0F1F00   		.p2align 4
 9850              		.p2align 3
 9851              	.L745:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9852              		.loc 1 188 4 view .LVU3396
 9853              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9854              		.loc 1 188 7 is_stmt 0 view .LVU3397
 9855 38a0 4939C0   		cmp	r8, rax	# range_stop_ptr, index_ptr
 9856 38a3 742B     		je	.L1072	#,
 9857              	.LVL506:
 9858              	.L747:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 9859              		.loc 1 188 7 view .LVU3398
GAS LISTING /tmp/ccfflXEb.s 			page 270


 9860              	.LBE499:
 9861              	.LBE501:
 305:sieve_extend.c ****         #if __APPLE__
 9862              		.loc 1 305 77 is_stmt 1 view .LVU3399
 9863              	# sieve_extend.c:305:     for (register counter_t index = range_start; index < range_stop_unique; i
 305:sieve_extend.c ****         #if __APPLE__
 9864              		.loc 1 305 83 is_stmt 0 view .LVU3400
 9865 38a5 4C01E5   		add	rbp, r12	# index, step
 9866              	.LVL507:
 305:sieve_extend.c ****         #if __APPLE__
 9867              		.loc 1 305 50 is_stmt 1 view .LVU3401
 9868              	# sieve_extend.c:305:     for (register counter_t index = range_start; index < range_stop_unique; i
 305:sieve_extend.c ****         #if __APPLE__
 9869              		.loc 1 305 5 is_stmt 0 view .LVU3402
 9870 38a8 4939EA   		cmp	r10, rbp	# range_stop_unique, index
 9871 38ab 0F876FFE 		ja	.L748	#,
 9871      FFFF
 9872              	.LVL508:
 305:sieve_extend.c ****         #if __APPLE__
 9873              		.loc 1 305 5 view .LVU3403
 9874              	.LBE496:
 9875              	.LBE495:
 9876              	.LBE494:
 9877              	.LBE545:
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9878              		.loc 1 739 11 is_stmt 1 view .LVU3404
 9879              	# sieve_extend.c:739:     for (;range_stop < block_stop;) {
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9880              		.loc 1 739 5 is_stmt 0 view .LVU3405
 9881 38b1 4C3B3424 		cmp	r14, QWORD PTR [rsp]	# _70, %sfp
 9882 38b5 0F8212FD 		jb	.L750	#,
 9882      FFFF
 9883              	.L1071:
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9884              		.loc 1 739 5 view .LVU3406
 9885 38bb 488B5C24 		mov	rbx, QWORD PTR 8[rsp]	# index, %sfp
 9885      08
 9886 38c0 48895C24 		mov	QWORD PTR 48[rsp], rbx	# %sfp, index
 9886      30
 9887              	.LVL509:
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 9888              		.loc 1 739 5 view .LVU3407
 9889 38c5 4889D9   		mov	rcx, rbx	# prime, index
 9890 38c8 E90A0700 		jmp	.L711	#
 9890      00
 9891              	.LVL510:
 9892 38cd 0F1F00   		.p2align 4,,7
 9893              		.p2align 3
 9894              	.L1072:
 9895              	.LBB546:
 9896              	.LBB505:
 9897              	.LBB504:
 9898              	.LBB503:
 9899              	.LBB502:
 9900              	.LBB500:
 189:sieve_extend.c ****    }
 9901              		.loc 1 189 7 is_stmt 1 view .LVU3408
GAS LISTING /tmp/ccfflXEb.s 			page 271


 9902              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9903              		.loc 1 189 27 is_stmt 0 view .LVU3409
 9904 38d0 48234C24 		and	rcx, QWORD PTR 56[rsp]	# tmp469, %sfp
 9904      38
 9905              	.LVL511:
 9906              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 9907              		.loc 1 189 18 view .LVU3410
 9908 38d5 490908   		or	QWORD PTR [r8], rcx	# *index_ptr_301, tmp469
 9909 38d8 EBCB     		jmp	.L747	#
 9910              	.LVL512:
 9911 38da 660F1F44 		.p2align 4,,7
 9911      0000
 9912              		.p2align 3
 9913              	.L1069:
 189:sieve_extend.c ****    }
 9914              		.loc 1 189 18 view .LVU3411
 9915              	.LBE500:
 9916              	.LBE502:
 9917              	.LBE503:
 9918              	.LBE504:
 9919              	.LBE505:
 9920              	.LBB506:
 9921              	.LBB507:
 9922              	.LBB508:
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9923              		.loc 1 199 41 is_stmt 1 view .LVU3412
 9924              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9925              		.loc 1 199 5 is_stmt 0 view .LVU3413
 9926 38e0 4983FC40 		cmp	r12, 64	# step,
 9927 38e4 0F87CC0C 		ja	.L779	#,
 9927      0000
 9928 38ea 4D89E0   		mov	r8, r12	# patternsize, step
 9929              	.LBE508:
 9930              	# sieve_extend.c:198: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 198:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 9931              		.loc 1 198 21 view .LVU3414
 9932 38ed B9010000 		mov	ecx, 1	# pattern,
 9932      00
 9933              	.LVL513:
 9934              	.L719:
 9935              	.LBB509:
 200:sieve_extend.c **** 
 9936              		.loc 1 200 9 is_stmt 1 view .LVU3415
 9937              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9938              		.loc 1 199 88 is_stmt 0 view .LVU3416
 9939 38f2 4F8D1400 		lea	r10, [r8+r8]	# patternsize,
 9940              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 9941              		.loc 1 200 29 view .LVU3417
 9942 38f6 C462B9F7 		shlx	r9, rcx, r8	# _109, pattern, patternsize
 9942      C9
 9943              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
GAS LISTING /tmp/ccfflXEb.s 			page 272


 9944              		.loc 1 200 17 view .LVU3418
 9945 38fb 4C09C9   		or	rcx, r9	# pattern, _109
 9946              	.LVL514:
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9947              		.loc 1 199 76 is_stmt 1 view .LVU3419
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9948              		.loc 1 199 41 view .LVU3420
 9949              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9950              		.loc 1 199 5 is_stmt 0 view .LVU3421
 9951 38fe 4983FA40 		cmp	r10, 64	# patternsize,
 9952 3902 0F87A800 		ja	.L718	#,
 9952      0000
 200:sieve_extend.c **** 
 9953              		.loc 1 200 9 is_stmt 1 view .LVU3422
 9954              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9955              		.loc 1 199 88 is_stmt 0 view .LVU3423
 9956 3908 4A8D1485 		lea	rdx, 0[0+r8*4]	# patternsize,
 9956      00000000 
 9957              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 9958              		.loc 1 200 29 view .LVU3424
 9959 3910 C462A9F7 		shlx	r11, rcx, r10	# _109, pattern, patternsize
 9959      D9
 9960              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 9961              		.loc 1 200 17 view .LVU3425
 9962 3915 4C09D9   		or	rcx, r11	# pattern, _109
 9963              	.LVL515:
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9964              		.loc 1 199 76 is_stmt 1 view .LVU3426
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9965              		.loc 1 199 41 view .LVU3427
 9966              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9967              		.loc 1 199 5 is_stmt 0 view .LVU3428
 9968 3918 4883FA40 		cmp	rdx, 64	# patternsize,
 9969 391c 0F878E00 		ja	.L718	#,
 9969      0000
 200:sieve_extend.c **** 
 9970              		.loc 1 200 9 is_stmt 1 view .LVU3429
 9971              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9972              		.loc 1 199 88 is_stmt 0 view .LVU3430
 9973 3922 4A8D34C5 		lea	rsi, 0[0+r8*8]	# patternsize,
 9973      00000000 
 9974              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 9975              		.loc 1 200 29 view .LVU3431
 9976 392a C4E2E9F7 		shlx	rax, rcx, rdx	# _109, pattern, patternsize
 9976      C1
 9977              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 9978              		.loc 1 200 17 view .LVU3432
 9979 392f 4809C1   		or	rcx, rax	# pattern, _109
 9980              	.LVL516:
GAS LISTING /tmp/ccfflXEb.s 			page 273


 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9981              		.loc 1 199 76 is_stmt 1 view .LVU3433
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9982              		.loc 1 199 41 view .LVU3434
 9983              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9984              		.loc 1 199 5 is_stmt 0 view .LVU3435
 9985 3932 4883FE40 		cmp	rsi, 64	# patternsize,
 9986 3936 7778     		ja	.L718	#,
 200:sieve_extend.c **** 
 9987              		.loc 1 200 9 is_stmt 1 view .LVU3436
 9988              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9989              		.loc 1 199 88 is_stmt 0 view .LVU3437
 9990 3938 4D89C1   		mov	r9, r8	# patternsize, patternsize
 9991              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 9992              		.loc 1 200 29 view .LVU3438
 9993 393b C4E2C9F7 		shlx	rdi, rcx, rsi	# _109, pattern, patternsize
 9993      F9
 9994              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 9995              		.loc 1 199 88 view .LVU3439
 9996 3940 49C1E104 		sal	r9, 4	# patternsize,
 9997              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 9998              		.loc 1 200 17 view .LVU3440
 9999 3944 4809F9   		or	rcx, rdi	# pattern, _109
 10000              	.LVL517:
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10001              		.loc 1 199 76 is_stmt 1 view .LVU3441
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10002              		.loc 1 199 41 view .LVU3442
 10003              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10004              		.loc 1 199 5 is_stmt 0 view .LVU3443
 10005 3947 4983F940 		cmp	r9, 64	# patternsize,
 10006 394b 7763     		ja	.L718	#,
 200:sieve_extend.c **** 
 10007              		.loc 1 200 9 is_stmt 1 view .LVU3444
 10008              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10009              		.loc 1 199 88 is_stmt 0 view .LVU3445
 10010 394d 4D89C3   		mov	r11, r8	# patternsize, patternsize
 10011              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 10012              		.loc 1 200 29 view .LVU3446
 10013 3950 C462B1F7 		shlx	r10, rcx, r9	# _109, pattern, patternsize
 10013      D1
 10014              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10015              		.loc 1 199 88 view .LVU3447
 10016 3955 49C1E305 		sal	r11, 5	# patternsize,
 10017              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 10018              		.loc 1 200 17 view .LVU3448
 10019 3959 4C09D1   		or	rcx, r10	# pattern, _109
GAS LISTING /tmp/ccfflXEb.s 			page 274


 10020              	.LVL518:
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10021              		.loc 1 199 76 is_stmt 1 view .LVU3449
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10022              		.loc 1 199 41 view .LVU3450
 10023              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10024              		.loc 1 199 5 is_stmt 0 view .LVU3451
 10025 395c 4983FB40 		cmp	r11, 64	# patternsize,
 10026 3960 774E     		ja	.L718	#,
 200:sieve_extend.c **** 
 10027              		.loc 1 200 9 is_stmt 1 view .LVU3452
 10028              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10029              		.loc 1 199 88 is_stmt 0 view .LVU3453
 10030 3962 4C89C0   		mov	rax, r8	# patternsize, patternsize
 10031              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 10032              		.loc 1 200 29 view .LVU3454
 10033 3965 C4E2A1F7 		shlx	rdx, rcx, r11	# _109, pattern, patternsize
 10033      D1
 10034              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10035              		.loc 1 199 88 view .LVU3455
 10036 396a 48C1E006 		sal	rax, 6	# patternsize,
 10037              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 10038              		.loc 1 200 17 view .LVU3456
 10039 396e 4809D1   		or	rcx, rdx	# pattern, _109
 10040              	.LVL519:
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10041              		.loc 1 199 76 is_stmt 1 view .LVU3457
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10042              		.loc 1 199 41 view .LVU3458
 10043              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10044              		.loc 1 199 5 is_stmt 0 view .LVU3459
 10045 3971 4883F840 		cmp	rax, 64	# patternsize,
 10046 3975 7739     		ja	.L718	#,
 200:sieve_extend.c **** 
 10047              		.loc 1 200 9 is_stmt 1 view .LVU3460
 10048              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10049              		.loc 1 199 88 is_stmt 0 view .LVU3461
 10050 3977 4C89C7   		mov	rdi, r8	# patternsize, patternsize
 10051              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 10052              		.loc 1 200 29 view .LVU3462
 10053 397a C4E2F9F7 		shlx	rsi, rcx, rax	# _109, pattern, patternsize
 10053      F1
 10054              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10055              		.loc 1 199 88 view .LVU3463
 10056 397f 48C1E707 		sal	rdi, 7	# patternsize,
 10057              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 10058              		.loc 1 200 17 view .LVU3464
GAS LISTING /tmp/ccfflXEb.s 			page 275


 10059 3983 4809F1   		or	rcx, rsi	# pattern, _109
 10060              	.LVL520:
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10061              		.loc 1 199 76 is_stmt 1 view .LVU3465
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10062              		.loc 1 199 41 view .LVU3466
 10063              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10064              		.loc 1 199 5 is_stmt 0 view .LVU3467
 10065 3986 4883FF40 		cmp	rdi, 64	# patternsize,
 10066 398a 7724     		ja	.L718	#,
 200:sieve_extend.c **** 
 10067              		.loc 1 200 9 is_stmt 1 view .LVU3468
 10068              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10069              		.loc 1 199 88 is_stmt 0 view .LVU3469
 10070 398c 49C1E008 		sal	r8, 8	# patternsize,
 10071              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 10072              		.loc 1 200 29 view .LVU3470
 10073 3990 C462C1F7 		shlx	r9, rcx, rdi	# _109, pattern, patternsize
 10073      C9
 10074              	# sieve_extend.c:200:         pattern |= (pattern << patternsize);
 200:sieve_extend.c **** 
 10075              		.loc 1 200 17 view .LVU3471
 10076 3995 4C09C9   		or	rcx, r9	# pattern, _109
 10077              	.LVL521:
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10078              		.loc 1 199 76 is_stmt 1 view .LVU3472
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10079              		.loc 1 199 41 view .LVU3473
 10080              	# sieve_extend.c:199:     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; pa
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10081              		.loc 1 199 5 is_stmt 0 view .LVU3474
 10082 3998 4983F840 		cmp	r8, 64	# patternsize,
 10083 399c 0F8650FF 		jbe	.L719	#,
 10083      FFFF
 10084              	.LVL522:
 10085 39a2 66662E0F 		.p2align 4
 10085      1F840000 
 10085      0000000F 
 10085      1F00
 10086              		.p2align 3
 10087              	.L718:
 199:sieve_extend.c ****         pattern |= (pattern << patternsize);
 10088              		.loc 1 199 5 view .LVU3475
 10089              	.LBE509:
 203:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10090              		.loc 1 203 5 is_stmt 1 view .LVU3476
 10091              	# sieve_extend.c:203:     const counter_t range_stop_word = wordindex(range_stop);
 203:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10092              		.loc 1 203 21 is_stmt 0 view .LVU3477
 10093 39b0 4D89F2   		mov	r10, r14	# range_stop_word, _70
 10094              	# sieve_extend.c:204:     register counter_t range_start_word = wordindex(range_start);
 204:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10095              		.loc 1 204 24 view .LVU3478
 10096 39b3 4889EF   		mov	rdi, rbp	# range_start_word, index
GAS LISTING /tmp/ccfflXEb.s 			page 276


 10097 39b6 48C1EF06 		shr	rdi, 6	# range_start_word,
 10098 39ba 4489F2   		mov	edx, r14d	# tmp395, _70
 10099              	# sieve_extend.c:203:     const counter_t range_stop_word = wordindex(range_stop);
 203:sieve_extend.c ****     register counter_t range_start_word = wordindex(range_start);
 10100              		.loc 1 203 21 view .LVU3479
 10101 39bd 49C1EA06 		shr	r10, 6	# range_stop_word,
 10102              	.LVL523:
 204:sieve_extend.c ****      if (range_start_word >= range_stop_word) { // shortcut
 10103              		.loc 1 204 5 is_stmt 1 view .LVU3480
 205:sieve_extend.c ****        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10104              		.loc 1 205 6 view .LVU3481
 10105 39c1 4D8D1CFF 		lea	r11, [r15+rdi*8]	# _742,
 10106              	# sieve_extend.c:205:      if (range_start_word >= range_stop_word) { // shortcut
 205:sieve_extend.c ****        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10107              		.loc 1 205 9 is_stmt 0 view .LVU3482
 10108 39c5 4939FA   		cmp	r10, rdi	# range_stop_word, range_start_word
 10109 39c8 F7D2     		not	edx	# tmp395
 10110 39ca 4D8B03   		mov	r8, QWORD PTR [r11]	# pretmp_743, MEM[(uint64_t *)_742]
 10111 39cd 48C7C0FF 		mov	rax, -1	# tmp967,
 10111      FFFFFF
 10112              	# sieve_extend.c:206:        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & c
 206:sieve_extend.c ****        return;
 10113              		.loc 1 206 49 view .LVU3483
 10114 39d4 C462D1F7 		shlx	r9, rcx, rbp	# tmp398, pattern, index
 10114      C9
 10115 39d9 C4E2EBF7 		shrx	rsi, rax, rdx	# _749, tmp967, tmp395
 10115      F0
 10116 39de 48897424 		mov	QWORD PTR 56[rsp], rsi	# %sfp, _749
 10116      38
 10117              	# sieve_extend.c:205:      if (range_start_word >= range_stop_word) { // shortcut
 205:sieve_extend.c ****        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & chopmask(range_stop);
 10118              		.loc 1 205 9 view .LVU3484
 10119 39e3 0F864C0B 		jbe	.L1073	#,
 10119      0000
 210:sieve_extend.c **** 
 10120              		.loc 1 210 5 is_stmt 1 view .LVU3485
 10121              	# sieve_extend.c:210:     bitstorage[range_start_word] |= (pattern << bitindex(range_start));
 210:sieve_extend.c **** 
 10122              		.loc 1 210 34 is_stmt 0 view .LVU3486
 10123 39e9 4D09C1   		or	r9, r8	# tmp402, pretmp_743
 10124              	# sieve_extend.c:214:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 214:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10125              		.loc 1 214 80 view .LVU3487
 10126 39ec 41B84000 		mov	r8d, 64	# tmp403,
 10126      0000
 10127 39f2 31D2     		xor	edx, edx	# tmp404
 10128 39f4 4C89C0   		mov	rax, r8	# tmp405, tmp403
 10129 39f7 49F7F4   		div	r12	# step
 10130              	# sieve_extend.c:210:     bitstorage[range_start_word] |= (pattern << bitindex(range_start));
 210:sieve_extend.c **** 
 10131              		.loc 1 210 34 view .LVU3488
 10132 39fa 4D890B   		mov	QWORD PTR [r11], r9	# MEM[(uint64_t *)_742], tmp402
 214:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10133              		.loc 1 214 4 is_stmt 1 view .LVU3489
 10134              	# sieve_extend.c:216:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 216:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10135              		.loc 1 216 33 is_stmt 0 view .LVU3490
GAS LISTING /tmp/ccfflXEb.s 			page 277


 10136 39fd 4889E8   		mov	rax, rbp	# tmp407, index
 10137              	# sieve_extend.c:215:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 215:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10138              		.loc 1 215 24 view .LVU3491
 10139 3a00 4D89E1   		mov	r9, r12	# pattern_shift, step
 10140              	# sieve_extend.c:216:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 216:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10141              		.loc 1 216 33 view .LVU3492
 10142 3a03 83E03F   		and	eax, 63	# tmp407,
 10143              	# sieve_extend.c:214:    register bitshift_t pattern_size = WORD_SIZE_bitshift - (WORD_SIZE_bitshif
 214:sieve_extend.c ****    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 10144              		.loc 1 214 24 view .LVU3493
 10145 3a06 4929D0   		sub	r8, rdx	# pattern_size, tmp404
 10146              	.LVL524:
 215:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10147              		.loc 1 215 4 is_stmt 1 view .LVU3494
 10148              	# sieve_extend.c:215:    register bitshift_t pattern_shift = step - (WORD_SIZE_bitshift % step);
 215:sieve_extend.c ****    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 10149              		.loc 1 215 24 is_stmt 0 view .LVU3495
 10150 3a09 4929D1   		sub	r9, rdx	# pattern_shift, tmp404
 10151              	.LVL525:
 216:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10152              		.loc 1 216 4 is_stmt 1 view .LVU3496
 10153              	# sieve_extend.c:216:    register bitshift_t shift = (bitindex_calc(range_start))%step ;
 216:sieve_extend.c ****    counter_t loop_range = range_stop_word - range_start_word;
 10154              		.loc 1 216 24 is_stmt 0 view .LVU3497
 10155 3a0c 31D2     		xor	edx, edx	# tmp408
 10156 3a0e 49F7F4   		div	r12	# step
 10157              	.LVL526:
 217:sieve_extend.c ****    #pragma GCC ivdep
 10158              		.loc 1 217 4 is_stmt 1 view .LVU3498
 10159              	.LBB510:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10160              		.loc 1 219 9 view .LVU3499
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10161              		.loc 1 219 24 view .LVU3500
 10162              	# sieve_extend.c:219:    for (counter_t i=1; i <= loop_range; ++i) {
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10163              		.loc 1 219 4 is_stmt 0 view .LVU3501
 10164 3a11 4939FA   		cmp	r10, rdi	# range_stop_word, range_start_word
 10165 3a14 0F847401 		je	.L724	#,
 10165      0000
 10166 3a1a 4B8D04D7 		lea	rax, [r15+r10*8]	# _771,
 10167 3a1e 498D3411 		lea	rsi, [r9+rdx]	# ivtmp.558,
 10168 3a22 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, _771
 10168      40
 10169 3a27 4C29D8   		sub	rax, r11	# tmp542, ivtmp.560
 10170 3a2a 4883E808 		sub	rax, 8	# tmp543,
 10171 3a2e 4C89DF   		mov	rdi, r11	# ivtmp.560, _742
 10172              	.LVL527:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10173              		.loc 1 219 4 view .LVU3502
 10174 3a31 48C1E803 		shr	rax, 3	# tmp541,
 10175 3a35 4883C001 		add	rax, 1	# tmp544,
 10176 3a39 83E003   		and	eax, 3	# tmp545,
 10177 3a3c 0F849A00 		je	.L1034	#,
 10177      0000
GAS LISTING /tmp/ccfflXEb.s 			page 278


 10178 3a42 4883F801 		cmp	rax, 1	# tmp545,
 10179 3a46 7461     		je	.L898	#,
 10180 3a48 4883F802 		cmp	rax, 2	# tmp545,
 10181 3a4c 7433     		je	.L899	#,
 10182              	.LVL528:
 10183              	.LBB511:
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10184              		.loc 1 220 9 is_stmt 1 view .LVU3503
 221:sieve_extend.c ****    }
 10185              		.loc 1 221 8 view .LVU3504
 10186              	# sieve_extend.c:220:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10187              		.loc 1 220 20 is_stmt 0 view .LVU3505
 10188 3a4e 4889F0   		mov	rax, rsi	# tmp676, ivtmp.558
 10189 3a51 31D2     		xor	edx, edx	# totalshift
 10190              	.LVL529:
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10191              		.loc 1 220 20 view .LVU3506
 10192 3a53 49F7F4   		div	r12	# step
 10193 3a56 4883C708 		add	rdi, 8	# ivtmp.560,
 10194 3a5a 4C01CE   		add	rsi, r9	# ivtmp.558, pattern_shift
 10195              	.LVL530:
 10196              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10197              		.loc 1 221 93 view .LVU3507
 10198 3a5d C4E2E9F7 		shlx	rax, rcx, rdx	# tmp677, pattern, totalshift
 10198      C1
 10199              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10200              		.loc 1 221 39 view .LVU3508
 10201 3a62 490B4308 		or	rax, QWORD PTR 8[r11]	# tmp677, MEM[base: _776, offset: 8B]
 10202 3a66 48894424 		mov	QWORD PTR 72[rsp], rax	# %sfp, tmp677
 10202      48
 10203              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10204              		.loc 1 221 68 view .LVU3509
 10205 3a6b 4489C0   		mov	eax, r8d	# tmp679, _751
 10206 3a6e 29D0     		sub	eax, edx	# tmp679, totalshift
 10207              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10208              		.loc 1 221 52 view .LVU3510
 10209 3a70 C4E2FBF7 		shrx	rdx, rcx, rax	# tmp680, pattern, tmp679
 10209      D1
 10210              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10211              		.loc 1 221 39 view .LVU3511
 10212 3a75 488B4424 		mov	rax, QWORD PTR 72[rsp]	# tmp678, %sfp
 10212      48
 10213 3a7a 4809D0   		or	rax, rdx	# tmp678, tmp680
 10214 3a7d 49894308 		mov	QWORD PTR 8[r11], rax	# MEM[base: _776, offset: 8B], tmp681
 10215              	.LBE511:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10216              		.loc 1 219 41 is_stmt 1 view .LVU3512
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10217              		.loc 1 219 24 view .LVU3513
 10218              	.LVL531:
 10219              	.L899:
GAS LISTING /tmp/ccfflXEb.s 			page 279


 10220              	.LBB512:
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10221              		.loc 1 220 9 view .LVU3514
 221:sieve_extend.c ****    }
 10222              		.loc 1 221 8 view .LVU3515
 10223              	# sieve_extend.c:220:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10224              		.loc 1 220 20 is_stmt 0 view .LVU3516
 10225 3a81 4889F0   		mov	rax, rsi	# tmp683, ivtmp.558
 10226 3a84 31D2     		xor	edx, edx	# totalshift
 10227 3a86 49F7F4   		div	r12	# step
 10228              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10229              		.loc 1 221 68 view .LVU3517
 10230 3a89 4589C3   		mov	r11d, r8d	# tmp686, _751
 10231 3a8c 4C01CE   		add	rsi, r9	# ivtmp.558, pattern_shift
 10232 3a8f 4883C708 		add	rdi, 8	# ivtmp.560,
 10233              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10234              		.loc 1 221 93 view .LVU3518
 10235 3a93 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp684, pattern, totalshift
 10235      C1
 10236              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10237              		.loc 1 221 39 view .LVU3519
 10238 3a98 480B07   		or	rax, QWORD PTR [rdi]	# tmp685, MEM[base: _776, offset: 8B]
 10239              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10240              		.loc 1 221 68 view .LVU3520
 10241 3a9b 4129D3   		sub	r11d, edx	# tmp686, totalshift
 10242              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10243              		.loc 1 221 52 view .LVU3521
 10244 3a9e C4E2A3F7 		shrx	rdx, rcx, r11	# tmp687, pattern, tmp686
 10244      D1
 10245              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10246              		.loc 1 221 39 view .LVU3522
 10247 3aa3 4809D0   		or	rax, rdx	# tmp688, tmp687
 10248 3aa6 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _776, offset: 8B], tmp688
 10249              	.LBE512:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10250              		.loc 1 219 41 is_stmt 1 view .LVU3523
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10251              		.loc 1 219 24 view .LVU3524
 10252              	.L898:
 10253              	.LBB513:
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10254              		.loc 1 220 9 view .LVU3525
 221:sieve_extend.c ****    }
 10255              		.loc 1 221 8 view .LVU3526
 10256              	# sieve_extend.c:220:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10257              		.loc 1 220 20 is_stmt 0 view .LVU3527
 10258 3aa9 4889F0   		mov	rax, rsi	# tmp690, ivtmp.558
 10259 3aac 31D2     		xor	edx, edx	# totalshift
 10260 3aae 49F7F4   		div	r12	# step
GAS LISTING /tmp/ccfflXEb.s 			page 280


 10261              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10262              		.loc 1 221 68 view .LVU3528
 10263 3ab1 4589C3   		mov	r11d, r8d	# tmp693, _751
 10264 3ab4 4883C708 		add	rdi, 8	# ivtmp.560,
 10265 3ab8 4C01CE   		add	rsi, r9	# ivtmp.558, pattern_shift
 10266              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10267              		.loc 1 221 93 view .LVU3529
 10268 3abb C4E2E9F7 		shlx	rax, rcx, rdx	# tmp691, pattern, totalshift
 10268      C1
 10269              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10270              		.loc 1 221 39 view .LVU3530
 10271 3ac0 480B07   		or	rax, QWORD PTR [rdi]	# tmp692, MEM[base: _776, offset: 8B]
 10272              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10273              		.loc 1 221 68 view .LVU3531
 10274 3ac3 4129D3   		sub	r11d, edx	# tmp693, totalshift
 10275              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10276              		.loc 1 221 52 view .LVU3532
 10277 3ac6 C4E2A3F7 		shrx	rdx, rcx, r11	# tmp694, pattern, tmp693
 10277      D1
 10278              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10279              		.loc 1 221 39 view .LVU3533
 10280 3acb 4809D0   		or	rax, rdx	# tmp695, tmp694
 10281 3ace 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _776, offset: 8B], tmp695
 10282              	.LBE513:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10283              		.loc 1 219 41 is_stmt 1 view .LVU3534
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10284              		.loc 1 219 24 view .LVU3535
 10285              	# sieve_extend.c:219:    for (counter_t i=1; i <= loop_range; ++i) {
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10286              		.loc 1 219 4 is_stmt 0 view .LVU3536
 10287 3ad1 48397C24 		cmp	QWORD PTR 64[rsp], rdi	# %sfp, ivtmp.560
 10287      40
 10288 3ad6 0F84B200 		je	.L724	#,
 10288      0000
 10289              	.L1034:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10290              		.loc 1 219 4 view .LVU3537
 10291 3adc 4C895424 		mov	QWORD PTR 72[rsp], r10	# %sfp, range_stop_word
 10291      48
 10292 3ae1 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# _771, %sfp
 10292      40
 10293              	.LVL532:
 10294              	.L723:
 10295              	.LBB514:
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10296              		.loc 1 220 9 is_stmt 1 view .LVU3538
 221:sieve_extend.c ****    }
 10297              		.loc 1 221 8 view .LVU3539
 10298              	# sieve_extend.c:220:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
GAS LISTING /tmp/ccfflXEb.s 			page 281


 10299              		.loc 1 220 20 is_stmt 0 view .LVU3540
 10300 3ae6 4889F0   		mov	rax, rsi	# tmp415, ivtmp.558
 10301 3ae9 31D2     		xor	edx, edx	# totalshift
 10302 3aeb 49F7F4   		div	r12	# step
 10303              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10304              		.loc 1 221 68 view .LVU3541
 10305 3aee 4589C2   		mov	r10d, r8d	# tmp418, _751
 10306 3af1 4C01CE   		add	rsi, r9	# ivtmp.558, pattern_shift
 10307 3af4 4883C720 		add	rdi, 32	# ivtmp.560,
 10308              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10309              		.loc 1 221 93 view .LVU3542
 10310 3af8 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp416, pattern, totalshift
 10310      C1
 10311              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10312              		.loc 1 221 39 view .LVU3543
 10313 3afd 480B47E8 		or	rax, QWORD PTR -24[rdi]	# tmp417, MEM[base: _776, offset: 8B]
 10314              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10315              		.loc 1 221 68 view .LVU3544
 10316 3b01 4129D2   		sub	r10d, edx	# tmp418, totalshift
 10317              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10318              		.loc 1 221 52 view .LVU3545
 10319 3b04 C4E2ABF7 		shrx	rdx, rcx, r10	# tmp419, pattern, tmp418
 10319      D1
 10320              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10321              		.loc 1 221 68 view .LVU3546
 10322 3b09 4589C2   		mov	r10d, r8d	# tmp554, _751
 10323              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10324              		.loc 1 221 39 view .LVU3547
 10325 3b0c 4809D0   		or	rax, rdx	# tmp420, tmp419
 10326              	# sieve_extend.c:220:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10327              		.loc 1 220 20 view .LVU3548
 10328 3b0f 31D2     		xor	edx, edx	# totalshift
 10329              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10330              		.loc 1 221 39 view .LVU3549
 10331 3b11 488947E8 		mov	QWORD PTR -24[rdi], rax	# MEM[base: _776, offset: 8B], tmp420
 10332              	.LBE514:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10333              		.loc 1 219 41 is_stmt 1 view .LVU3550
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10334              		.loc 1 219 24 view .LVU3551
 10335              	.LBB515:
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10336              		.loc 1 220 9 view .LVU3552
 221:sieve_extend.c ****    }
 10337              		.loc 1 221 8 view .LVU3553
 10338              	# sieve_extend.c:220:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10339              		.loc 1 220 20 is_stmt 0 view .LVU3554
GAS LISTING /tmp/ccfflXEb.s 			page 282


 10340 3b15 4889F0   		mov	rax, rsi	# tmp551, ivtmp.558
 10341 3b18 49F7F4   		div	r12	# step
 10342 3b1b 4C01CE   		add	rsi, r9	# ivtmp.558, pattern_shift
 10343              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10344              		.loc 1 221 93 view .LVU3555
 10345 3b1e C4E2E9F7 		shlx	rax, rcx, rdx	# tmp552, pattern, totalshift
 10345      C1
 10346              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10347              		.loc 1 221 39 view .LVU3556
 10348 3b23 480B47F0 		or	rax, QWORD PTR -16[rdi]	# tmp553, MEM[base: _776, offset: 8B]
 10349              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10350              		.loc 1 221 68 view .LVU3557
 10351 3b27 4129D2   		sub	r10d, edx	# tmp554, totalshift
 10352              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10353              		.loc 1 221 52 view .LVU3558
 10354 3b2a C4E2ABF7 		shrx	rdx, rcx, r10	# tmp555, pattern, tmp554
 10354      D1
 10355              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10356              		.loc 1 221 68 view .LVU3559
 10357 3b2f 4589C2   		mov	r10d, r8d	# tmp563, _751
 10358              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10359              		.loc 1 221 39 view .LVU3560
 10360 3b32 4809D0   		or	rax, rdx	# tmp556, tmp555
 10361              	# sieve_extend.c:220:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10362              		.loc 1 220 20 view .LVU3561
 10363 3b35 31D2     		xor	edx, edx	# totalshift
 10364              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10365              		.loc 1 221 39 view .LVU3562
 10366 3b37 488947F0 		mov	QWORD PTR -16[rdi], rax	# MEM[base: _776, offset: 8B], tmp556
 10367              	.LBE515:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10368              		.loc 1 219 41 is_stmt 1 view .LVU3563
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10369              		.loc 1 219 24 view .LVU3564
 10370              	.LBB516:
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10371              		.loc 1 220 9 view .LVU3565
 221:sieve_extend.c ****    }
 10372              		.loc 1 221 8 view .LVU3566
 10373              	# sieve_extend.c:220:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10374              		.loc 1 220 20 is_stmt 0 view .LVU3567
 10375 3b3b 4889F0   		mov	rax, rsi	# tmp560, ivtmp.558
 10376 3b3e 49F7F4   		div	r12	# step
 10377 3b41 4C01CE   		add	rsi, r9	# ivtmp.558, pattern_shift
 10378              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10379              		.loc 1 221 93 view .LVU3568
 10380 3b44 C4E2E9F7 		shlx	rax, rcx, rdx	# tmp561, pattern, totalshift
GAS LISTING /tmp/ccfflXEb.s 			page 283


 10380      C1
 10381              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10382              		.loc 1 221 39 view .LVU3569
 10383 3b49 480B47F8 		or	rax, QWORD PTR -8[rdi]	# tmp562, MEM[base: _776, offset: 8B]
 10384              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10385              		.loc 1 221 68 view .LVU3570
 10386 3b4d 4129D2   		sub	r10d, edx	# tmp563, totalshift
 10387              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10388              		.loc 1 221 52 view .LVU3571
 10389 3b50 C4E2ABF7 		shrx	rdx, rcx, r10	# tmp564, pattern, tmp563
 10389      D1
 10390              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10391              		.loc 1 221 68 view .LVU3572
 10392 3b55 4589C2   		mov	r10d, r8d	# tmp572, _751
 10393              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10394              		.loc 1 221 39 view .LVU3573
 10395 3b58 4809D0   		or	rax, rdx	# tmp565, tmp564
 10396              	# sieve_extend.c:220:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10397              		.loc 1 220 20 view .LVU3574
 10398 3b5b 31D2     		xor	edx, edx	# totalshift
 10399              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10400              		.loc 1 221 39 view .LVU3575
 10401 3b5d 488947F8 		mov	QWORD PTR -8[rdi], rax	# MEM[base: _776, offset: 8B], tmp565
 10402              	.LBE516:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10403              		.loc 1 219 41 is_stmt 1 view .LVU3576
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10404              		.loc 1 219 24 view .LVU3577
 10405              	.LBB517:
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10406              		.loc 1 220 9 view .LVU3578
 221:sieve_extend.c ****    }
 10407              		.loc 1 221 8 view .LVU3579
 10408              	# sieve_extend.c:220:         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 220:sieve_extend.c ****        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshift)) | (pattern << (tot
 10409              		.loc 1 220 20 is_stmt 0 view .LVU3580
 10410 3b61 4889F0   		mov	rax, rsi	# tmp569, ivtmp.558
 10411 3b64 49F7F4   		div	r12	# step
 10412 3b67 4C01CE   		add	rsi, r9	# ivtmp.558, pattern_shift
 10413              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10414              		.loc 1 221 93 view .LVU3581
 10415 3b6a C4E2E9F7 		shlx	rax, rcx, rdx	# tmp570, pattern, totalshift
 10415      C1
 10416              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10417              		.loc 1 221 39 view .LVU3582
 10418 3b6f 480B07   		or	rax, QWORD PTR [rdi]	# tmp571, MEM[base: _776, offset: 8B]
 10419              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
GAS LISTING /tmp/ccfflXEb.s 			page 284


 10420              		.loc 1 221 68 view .LVU3583
 10421 3b72 4129D2   		sub	r10d, edx	# tmp572, totalshift
 10422              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10423              		.loc 1 221 52 view .LVU3584
 10424 3b75 C4E2ABF7 		shrx	rdx, rcx, r10	# tmp573, pattern, tmp572
 10424      D1
 10425              	# sieve_extend.c:221:        bitstorage[range_start_word+i] |=  (pattern >> (pattern_size-totalshif
 221:sieve_extend.c ****    }
 10426              		.loc 1 221 39 view .LVU3585
 10427 3b7a 4809D0   		or	rax, rdx	# tmp574, tmp573
 10428 3b7d 488907   		mov	QWORD PTR [rdi], rax	# MEM[base: _776, offset: 8B], tmp574
 10429              	.LBE517:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10430              		.loc 1 219 41 is_stmt 1 view .LVU3586
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10431              		.loc 1 219 24 view .LVU3587
 10432              	# sieve_extend.c:219:    for (counter_t i=1; i <= loop_range; ++i) {
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10433              		.loc 1 219 4 is_stmt 0 view .LVU3588
 10434 3b80 4939FB   		cmp	r11, rdi	# _771, ivtmp.560
 10435 3b83 0F855DFF 		jne	.L723	#,
 10435      FFFF
 10436 3b89 4C8B5424 		mov	r10, QWORD PTR 72[rsp]	# range_stop_word, %sfp
 10436      48
 10437              	.LVL533:
 10438              	.L724:
 219:sieve_extend.c ****         bitshift_t totalshift = (shift+i*pattern_shift) % step;
 10439              		.loc 1 219 4 view .LVU3589
 10440              	.LBE510:
 223:sieve_extend.c **** }
 10441              		.loc 1 223 4 is_stmt 1 view .LVU3590
 10442              	# sieve_extend.c:223:    bitstorage[range_stop_word] &= chopmask(range_stop);
 223:sieve_extend.c **** }
 10443              		.loc 1 223 32 is_stmt 0 view .LVU3591
 10444 3b8e 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	# _749, %sfp
 10444      38
 10445 3b93 4B210CD7 		and	QWORD PTR [r15+r10*8], rcx	# *_155, _749
 10446 3b97 E909FAFF 		jmp	.L721	#
 10446      FF
 10447              	.LVL534:
 10448 3b9c 0F1F4000 		.p2align 4,,7
 10449              		.p2align 3
 10450              	.L716:
 223:sieve_extend.c **** }
 10451              		.loc 1 223 32 view .LVU3592
 10452              	.LBE507:
 10453              	.LBE506:
 10454              	.LBB520:
 10455              	.LBB491:
 691:sieve_extend.c **** }
 10456              		.loc 1 691 37 is_stmt 1 view .LVU3593
 10457 3ba0 E8FBE0FF 		call	extendSieve_aligned	#
 10457      FF
 10458              	.LVL535:
 691:sieve_extend.c **** }
 10459              		.loc 1 691 37 is_stmt 0 view .LVU3594
GAS LISTING /tmp/ccfflXEb.s 			page 285


 10460 3ba5 4C896C24 		mov	QWORD PTR 48[rsp], r13	# %sfp, patternsize_bits
 10460      30
 10461 3baa E9DCF9FF 		jmp	.L713	#
 10461      FF
 10462              	.LVL536:
 10463 3baf 90       		.p2align 4,,7
 10464              		.p2align 3
 10465              	.L1068:
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 10466              		.loc 1 689 37 is_stmt 1 view .LVU3595
 10467 3bb0 E86BE6FF 		call	extendSieve_shiftleft	#
 10467      FF
 10468              	.LVL537:
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 10469              		.loc 1 689 37 is_stmt 0 view .LVU3596
 10470 3bb5 4C896C24 		mov	QWORD PTR 48[rsp], r13	# %sfp, patternsize_bits
 10470      30
 10471 3bba E9CCF9FF 		jmp	.L713	#
 10471      FF
 10472              	.LVL538:
 10473 3bbf 90       		.p2align 4,,7
 10474              		.p2align 3
 10475              	.L1070:
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 10476              		.loc 1 689 37 view .LVU3597
 10477              	.LBE491:
 10478              	.LBE520:
 759:sieve_extend.c ****         if (step < VECTORSTEP_FASTER)     setBitsTrue_largeRange_vector(bitstorage, start, step, ra
 10479              		.loc 1 759 48 is_stmt 1 view .LVU3598
 10480              	.LBB521:
 10481              	.LBI521:
 230:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 10482              		.loc 1 230 14 view .LVU3599
 10483              	.LBB522:
 231:sieve_extend.c **** 
 10484              		.loc 1 231 5 view .LVU3600
 10485              	# sieve_extend.c:231:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 231:sieve_extend.c **** 
 10486              		.loc 1 231 74 is_stmt 0 view .LVU3601
 10487 3bc0 4C89E7   		mov	rdi, r12	# tmp421, step
 10488 3bc3 48C1E706 		sal	rdi, 6	# tmp421,
 10489 3bc7 4801EF   		add	rdi, rbp	# tmp421, index
 10490 3bca 0F92C1   		setc	cl	#, _142
 10491              	# sieve_extend.c:233:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 233:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 10492              		.loc 1 233 8 view .LVU3602
 10493 3bcd 4939FE   		cmp	r14, rdi	# _70, tmp422
 10494 3bd0 4889FE   		mov	rsi, rdi	# tmp422, tmp422
 10495 3bd3 0FB6C1   		movzx	eax, cl	# _142, _142
 10496              	.LVL539:
 233:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 10497              		.loc 1 233 5 is_stmt 1 view .LVU3603
 10498              	# sieve_extend.c:233:     if (range_stop_unique > range_stop) { // the range will not repeat itself
 233:sieve_extend.c ****         debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using mediumstep-unique (%ju
 10499              		.loc 1 233 8 is_stmt 0 view .LVU3604
 10500 3bd6 0F831101 		jnb	.L1074	#,
 10500      0000
GAS LISTING /tmp/ccfflXEb.s 			page 286


 10501              	.LVL540:
 10502              	.LBB523:
 237:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10503              		.loc 1 237 54 is_stmt 1 view .LVU3605
 10504              	# sieve_extend.c:237:         for (register counter_t index = range_start; index <= range_stop;) {
 237:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10505              		.loc 1 237 9 is_stmt 0 view .LVU3606
 10506 3bdc 4939EE   		cmp	r14, rbp	# _70, index
 10507 3bdf 0F82C0F9 		jb	.L721	#,
 10507      FFFF
 10508 3be5 4989E8   		mov	r8, rbp	# index, index
 10509              	.LBB524:
 10510              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10511              		.loc 1 242 25 view .LVU3607
 10512 3be8 41B90100 		mov	r9d, 1	# tmp425,
 10512      0000
 10513              	.LVL541:
 10514 3bee 6690     		.p2align 4
 10515              		.p2align 3
 10516              	.L732:
 238:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10517              		.loc 1 238 13 is_stmt 1 view .LVU3608
 10518              	# sieve_extend.c:238:             register counter_t index_word = wordindex(index);
 238:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10519              		.loc 1 238 32 is_stmt 0 view .LVU3609
 10520 3bf0 4C89C1   		mov	rcx, r8	# index_word, index
 10521              	# sieve_extend.c:239:             register bitword_t mask = SAFE_ZERO;
 239:sieve_extend.c ****             #pragma GCC ivdep
 10522              		.loc 1 239 32 view .LVU3610
 10523 3bf3 4531D2   		xor	r10d, r10d	# mask
 10524              	# sieve_extend.c:238:             register counter_t index_word = wordindex(index);
 238:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10525              		.loc 1 238 32 view .LVU3611
 10526 3bf6 48C1E906 		shr	rcx, 6	# index_word,
 10527              	.LVL542:
 239:sieve_extend.c ****             #pragma GCC ivdep
 10528              		.loc 1 239 13 is_stmt 1 view .LVU3612
 10529              	.L731:
 242:sieve_extend.c ****                 index += step;
 10530              		.loc 1 242 17 view .LVU3613
 10531              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10532              		.loc 1 242 25 is_stmt 0 view .LVU3614
 10533 3bfa C4C2B9F7 		shlx	rdi, r9, r8	# tmp424, tmp425, index
 10533      F9
 10534              	# sieve_extend.c:243:                 index += step;
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10535              		.loc 1 243 23 view .LVU3615
 10536 3bff 4D01E0   		add	r8, r12	# index, step
 10537              	.LVL543:
 10538              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10539              		.loc 1 244 36 view .LVU3616
 10540 3c02 4D89C3   		mov	r11, r8	# tmp426, index
 10541              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccfflXEb.s 			page 287


 10542              		.loc 1 242 22 view .LVU3617
 10543 3c05 4909FA   		or	r10, rdi	# mask, tmp424
 10544              	.LVL544:
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10545              		.loc 1 243 17 is_stmt 1 view .LVU3618
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10546              		.loc 1 244 21 view .LVU3619
 10547              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10548              		.loc 1 244 36 is_stmt 0 view .LVU3620
 10549 3c08 49C1EB06 		shr	r11, 6	# tmp426,
 10550              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10551              		.loc 1 244 13 view .LVU3621
 10552 3c0c 4C39D9   		cmp	rcx, r11	# index_word, tmp426
 10553 3c0f 0F85AB00 		jne	.L988	#,
 10553      0000
 242:sieve_extend.c ****                 index += step;
 10554              		.loc 1 242 17 is_stmt 1 view .LVU3622
 10555              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10556              		.loc 1 242 25 is_stmt 0 view .LVU3623
 10557 3c15 C4C2B9F7 		shlx	rdx, r9, r8	# tmp709, tmp425, index
 10557      D1
 10558              	# sieve_extend.c:243:                 index += step;
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10559              		.loc 1 243 23 view .LVU3624
 10560 3c1a 4D01E0   		add	r8, r12	# index, step
 10561              	.LVL545:
 10562              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10563              		.loc 1 244 36 view .LVU3625
 10564 3c1d 4C89C0   		mov	rax, r8	# tmp710, index
 10565              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10566              		.loc 1 242 22 view .LVU3626
 10567 3c20 4909D2   		or	r10, rdx	# mask, tmp709
 10568              	.LVL546:
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10569              		.loc 1 243 17 is_stmt 1 view .LVU3627
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10570              		.loc 1 244 21 view .LVU3628
 10571              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10572              		.loc 1 244 36 is_stmt 0 view .LVU3629
 10573 3c23 48C1E806 		shr	rax, 6	# tmp710,
 10574              	.LVL547:
 10575              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10576              		.loc 1 244 13 view .LVU3630
 10577 3c27 4839C1   		cmp	rcx, rax	# index_word, tmp710
 10578 3c2a 0F859000 		jne	.L988	#,
 10578      0000
 242:sieve_extend.c ****                 index += step;
 10579              		.loc 1 242 17 is_stmt 1 view .LVU3631
 10580              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccfflXEb.s 			page 288


 10581              		.loc 1 242 25 is_stmt 0 view .LVU3632
 10582 3c30 C4C2B9F7 		shlx	rsi, r9, r8	# tmp711, tmp425, index
 10582      F1
 10583              	# sieve_extend.c:243:                 index += step;
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10584              		.loc 1 243 23 view .LVU3633
 10585 3c35 4D01E0   		add	r8, r12	# index, step
 10586              	.LVL548:
 10587              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10588              		.loc 1 244 36 view .LVU3634
 10589 3c38 4C89C7   		mov	rdi, r8	# tmp712, index
 10590              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10591              		.loc 1 242 22 view .LVU3635
 10592 3c3b 4909F2   		or	r10, rsi	# mask, tmp711
 10593              	.LVL549:
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10594              		.loc 1 243 17 is_stmt 1 view .LVU3636
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10595              		.loc 1 244 21 view .LVU3637
 10596              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10597              		.loc 1 244 36 is_stmt 0 view .LVU3638
 10598 3c3e 48C1EF06 		shr	rdi, 6	# tmp712,
 10599              	.LVL550:
 10600              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10601              		.loc 1 244 13 view .LVU3639
 10602 3c42 4839F9   		cmp	rcx, rdi	# index_word, tmp712
 10603 3c45 7579     		jne	.L988	#,
 242:sieve_extend.c ****                 index += step;
 10604              		.loc 1 242 17 is_stmt 1 view .LVU3640
 10605              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10606              		.loc 1 242 25 is_stmt 0 view .LVU3641
 10607 3c47 C442B9F7 		shlx	r11, r9, r8	# tmp713, tmp425, index
 10607      D9
 10608              	# sieve_extend.c:243:                 index += step;
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10609              		.loc 1 243 23 view .LVU3642
 10610 3c4c 4D01E0   		add	r8, r12	# index, step
 10611              	.LVL551:
 10612              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10613              		.loc 1 244 36 view .LVU3643
 10614 3c4f 4C89C2   		mov	rdx, r8	# tmp714, index
 10615              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10616              		.loc 1 242 22 view .LVU3644
 10617 3c52 4D09DA   		or	r10, r11	# mask, tmp713
 10618              	.LVL552:
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10619              		.loc 1 243 17 is_stmt 1 view .LVU3645
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10620              		.loc 1 244 21 view .LVU3646
 10621              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccfflXEb.s 			page 289


 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10622              		.loc 1 244 36 is_stmt 0 view .LVU3647
 10623 3c55 48C1EA06 		shr	rdx, 6	# tmp714,
 10624              	.LVL553:
 10625              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10626              		.loc 1 244 13 view .LVU3648
 10627 3c59 4839D1   		cmp	rcx, rdx	# index_word, tmp714
 10628 3c5c 7562     		jne	.L988	#,
 242:sieve_extend.c ****                 index += step;
 10629              		.loc 1 242 17 is_stmt 1 view .LVU3649
 10630              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10631              		.loc 1 242 25 is_stmt 0 view .LVU3650
 10632 3c5e C4C2B9F7 		shlx	rax, r9, r8	# tmp715, tmp425, index
 10632      C1
 10633              	# sieve_extend.c:243:                 index += step;
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10634              		.loc 1 243 23 view .LVU3651
 10635 3c63 4D01E0   		add	r8, r12	# index, step
 10636              	.LVL554:
 10637              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10638              		.loc 1 244 36 view .LVU3652
 10639 3c66 4C89C6   		mov	rsi, r8	# tmp716, index
 10640              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10641              		.loc 1 242 22 view .LVU3653
 10642 3c69 4909C2   		or	r10, rax	# mask, tmp715
 10643              	.LVL555:
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10644              		.loc 1 243 17 is_stmt 1 view .LVU3654
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10645              		.loc 1 244 21 view .LVU3655
 10646              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10647              		.loc 1 244 36 is_stmt 0 view .LVU3656
 10648 3c6c 48C1EE06 		shr	rsi, 6	# tmp716,
 10649              	.LVL556:
 10650              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10651              		.loc 1 244 13 view .LVU3657
 10652 3c70 4839F1   		cmp	rcx, rsi	# index_word, tmp716
 10653 3c73 754B     		jne	.L988	#,
 242:sieve_extend.c ****                 index += step;
 10654              		.loc 1 242 17 is_stmt 1 view .LVU3658
 10655              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10656              		.loc 1 242 25 is_stmt 0 view .LVU3659
 10657 3c75 C4C2B9F7 		shlx	rdi, r9, r8	# tmp717, tmp425, index
 10657      F9
 10658              	# sieve_extend.c:243:                 index += step;
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10659              		.loc 1 243 23 view .LVU3660
 10660 3c7a 4D01E0   		add	r8, r12	# index, step
 10661              	.LVL557:
 10662              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
GAS LISTING /tmp/ccfflXEb.s 			page 290


 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10663              		.loc 1 244 36 view .LVU3661
 10664 3c7d 4D89C3   		mov	r11, r8	# tmp718, index
 10665              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10666              		.loc 1 242 22 view .LVU3662
 10667 3c80 4909FA   		or	r10, rdi	# mask, tmp717
 10668              	.LVL558:
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10669              		.loc 1 243 17 is_stmt 1 view .LVU3663
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10670              		.loc 1 244 21 view .LVU3664
 10671              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10672              		.loc 1 244 36 is_stmt 0 view .LVU3665
 10673 3c83 49C1EB06 		shr	r11, 6	# tmp718,
 10674              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10675              		.loc 1 244 13 view .LVU3666
 10676 3c87 4C39D9   		cmp	rcx, r11	# index_word, tmp718
 10677 3c8a 7534     		jne	.L988	#,
 242:sieve_extend.c ****                 index += step;
 10678              		.loc 1 242 17 is_stmt 1 view .LVU3667
 10679              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10680              		.loc 1 242 25 is_stmt 0 view .LVU3668
 10681 3c8c C4C2B9F7 		shlx	rdx, r9, r8	# tmp719, tmp425, index
 10681      D1
 10682              	# sieve_extend.c:243:                 index += step;
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10683              		.loc 1 243 23 view .LVU3669
 10684 3c91 4D01E0   		add	r8, r12	# index, step
 10685              	.LVL559:
 10686              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10687              		.loc 1 244 36 view .LVU3670
 10688 3c94 4C89C0   		mov	rax, r8	# tmp720, index
 10689              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10690              		.loc 1 242 22 view .LVU3671
 10691 3c97 4909D2   		or	r10, rdx	# mask, tmp719
 10692              	.LVL560:
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10693              		.loc 1 243 17 is_stmt 1 view .LVU3672
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10694              		.loc 1 244 21 view .LVU3673
 10695              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10696              		.loc 1 244 36 is_stmt 0 view .LVU3674
 10697 3c9a 48C1E806 		shr	rax, 6	# tmp720,
 10698              	.LVL561:
 10699              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10700              		.loc 1 244 13 view .LVU3675
 10701 3c9e 4839C1   		cmp	rcx, rax	# index_word, tmp720
 10702 3ca1 751D     		jne	.L988	#,
 242:sieve_extend.c ****                 index += step;
GAS LISTING /tmp/ccfflXEb.s 			page 291


 10703              		.loc 1 242 17 is_stmt 1 view .LVU3676
 10704              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10705              		.loc 1 242 25 is_stmt 0 view .LVU3677
 10706 3ca3 C4C2B9F7 		shlx	rsi, r9, r8	# tmp721, tmp425, index
 10706      F1
 10707              	# sieve_extend.c:243:                 index += step;
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10708              		.loc 1 243 23 view .LVU3678
 10709 3ca8 4D01E0   		add	r8, r12	# index, step
 10710              	.LVL562:
 10711              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10712              		.loc 1 244 36 view .LVU3679
 10713 3cab 4C89C7   		mov	rdi, r8	# tmp722, index
 10714              	# sieve_extend.c:242:                 mask |= markmask(index);
 242:sieve_extend.c ****                 index += step;
 10715              		.loc 1 242 22 view .LVU3680
 10716 3cae 4909F2   		or	r10, rsi	# mask, tmp721
 10717              	.LVL563:
 243:sieve_extend.c ****             } while (index_word == wordindex(index));
 10718              		.loc 1 243 17 is_stmt 1 view .LVU3681
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10719              		.loc 1 244 21 view .LVU3682
 10720              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10721              		.loc 1 244 36 is_stmt 0 view .LVU3683
 10722 3cb1 48C1EF06 		shr	rdi, 6	# tmp722,
 10723              	.LVL564:
 10724              	# sieve_extend.c:244:             } while (index_word == wordindex(index));
 244:sieve_extend.c ****             // for (; index_word == wordindex(index);  index += step) 
 10725              		.loc 1 244 13 view .LVU3684
 10726 3cb5 4839F9   		cmp	rcx, rdi	# index_word, tmp722
 10727 3cb8 0F843CFF 		je	.L731	#,
 10727      FFFF
 10728 3cbe 6690     		.p2align 4
 10729              		.p2align 3
 10730              	.L988:
 247:sieve_extend.c ****         }
 10731              		.loc 1 247 13 is_stmt 1 view .LVU3685
 10732              	# sieve_extend.c:247:             bitstorage[index_word] |= mask;
 247:sieve_extend.c ****         }
 10733              		.loc 1 247 36 is_stmt 0 view .LVU3686
 10734 3cc0 4D0914CF 		or	QWORD PTR [r15+rcx*8], r10	# *_174, mask
 247:sieve_extend.c ****         }
 10735              		.loc 1 247 36 view .LVU3687
 10736              	.LBE524:
 237:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10737              		.loc 1 237 54 is_stmt 1 view .LVU3688
 10738              	# sieve_extend.c:237:         for (register counter_t index = range_start; index <= range_stop;) {
 237:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10739              		.loc 1 237 9 is_stmt 0 view .LVU3689
 10740 3cc4 4D39C6   		cmp	r14, r8	# _70, index
 10741 3cc7 0F8323FF 		jnb	.L732	#,
 10741      FFFF
 237:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10742              		.loc 1 237 9 view .LVU3690
GAS LISTING /tmp/ccfflXEb.s 			page 292


 10743 3ccd E9D3F8FF 		jmp	.L721	#
 10743      FF
 10744              	.LVL565:
 10745              	.L1067:
 237:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10746              		.loc 1 237 9 view .LVU3691
 10747              	.LBE523:
 10748              	.LBE522:
 10749              	.LBE521:
 10750              	.LBB539:
 10751              	.LBB492:
 684:sieve_extend.c **** 
 10752              		.loc 1 684 35 is_stmt 1 view .LVU3692
 10753              	# sieve_extend.c:684:     if (size < WORD_SIZE_counter) return extendSieve_smallSize (bitstorage, s
 684:sieve_extend.c **** 
 10754              		.loc 1 684 42 is_stmt 0 view .LVU3693
 10755 3cd2 4C89F1   		mov	rcx, r14	#, _70
 10756 3cd5 4C89EA   		mov	rdx, r13	#, patternsize_bits
 10757 3cd8 4C89EE   		mov	rsi, r13	#, patternsize_bits
 10758 3cdb 4C89FF   		mov	rdi, r15	#, _102
 10759 3cde E81DC3FF 		call	extendSieve_smallSize	#
 10759      FF
 10760              	.LVL566:
 10761 3ce3 4C896C24 		mov	QWORD PTR 48[rsp], r13	# %sfp, patternsize_bits
 10761      30
 10762 3ce8 E99EF8FF 		jmp	.L713	#
 10762      FF
 10763              	.LVL567:
 10764              	.L1074:
 684:sieve_extend.c **** 
 10765              		.loc 1 684 42 view .LVU3694
 10766              	.LBE492:
 10767              	.LBE539:
 10768              	.LBB540:
 10769              	.LBB538:
 10770              	.LBB525:
 254:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10771              		.loc 1 254 54 is_stmt 1 view .LVU3695
 10772              	# sieve_extend.c:254:         for (register counter_t index = range_start; index <= range_stop_uniq
 254:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 10773              		.loc 1 254 9 is_stmt 0 view .LVU3696
 10774 3ced 4885C0   		test	rax, rax	# _142
 10775 3cf0 0F85AFF8 		jne	.L721	#,
 10775      FFFF
 10776              	.LBB526:
 10777              	.LBB527:
 10778              	.LBB528:
 10779              	# sieve_extend.c:169:    const counter_t range_stop_word = wordindex(range_stop);
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 10780              		.loc 1 169 20 view .LVU3697
 10781 3cf6 4D89F3   		mov	r11, r14	# range_stop_word, _70
 10782              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 10783              		.loc 1 171 112 view .LVU3698
 10784 3cf9 4F8D04A4 		lea	r8, [r12+r12*4]	# tmp430,
 10785              	# sieve_extend.c:169:    const counter_t range_stop_word = wordindex(range_stop);
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
GAS LISTING /tmp/ccfflXEb.s 			page 293


 10786              		.loc 1 169 20 view .LVU3699
 10787 3cfd 49C1EB06 		shr	r11, 6	# range_stop_word,
 10788              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 10789              		.loc 1 189 29 view .LVU3700
 10790 3d01 4489F2   		mov	edx, r14d	# tmp432, _70
 10791              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 10792              		.loc 1 171 135 view .LVU3701
 10793 3d04 4C89D8   		mov	rax, r11	# tmp436, range_stop_word
 10794              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 10795              		.loc 1 189 29 view .LVU3702
 10796 3d07 F7D2     		not	edx	# tmp432
 10797              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 10798              		.loc 1 171 135 view .LVU3703
 10799 3d09 4C29C0   		sub	rax, r8	# tmp436, tmp430
 10800 3d0c 4D39C3   		cmp	r11, r8	# range_stop_word, tmp430
 10801              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 10802              		.loc 1 189 29 view .LVU3704
 10803 3d0f 49C7C2FF 		mov	r10, -1	# tmp991,
 10803      FFFFFF
 10804 3d16 C4C2EBF7 		shrx	rdi, r10, rdx	# _235, tmp991, tmp432
 10804      FA
 10805 3d1b 4D8D14C7 		lea	r10, [r15+rax*8]	# tmp438,
 10806 3d1f 4C89E2   		mov	rdx, r12	# _765, step
 10807 3d22 4D0F46D7 		cmovbe	r10, r15	# _102,, fast_loop_ptr
 10808              	# sieve_extend.c:183:    register const bitword_t* __restrict range_stop_ptr = &bitstorage[(range_s
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 10809              		.loc 1 183 41 view .LVU3705
 10810 3d26 4F8D0CDF 		lea	r9, [r15+r11*8]	# range_stop_ptr,
 10811 3d2a 48C1E204 		sal	rdx, 4	# _765,
 10812              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 10813              		.loc 1 176 44 view .LVU3706
 10814 3d2e 4A8D0CE5 		lea	rcx, 0[0+r12*8]	# _203,
 10814      00000000 
 10815              	.LBE528:
 10816              	.LBE527:
 10817              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10818              		.loc 1 259 25 view .LVU3707
 10819 3d36 4C896C24 		mov	QWORD PTR 64[rsp], r13	# %sfp, patternsize_bits
 10819      40
 10820 3d3b 41BB0100 		mov	r11d, 1	# tmp445,
 10820      0000
 10821 3d41 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, index
 10821      48
 10822 3d46 4989D5   		mov	r13, rdx	# _765, _765
 10823              	.LVL568:
 10824              	.LBB533:
 10825              	.LBB529:
 10826              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 10827              		.loc 1 189 29 view .LVU3708
GAS LISTING /tmp/ccfflXEb.s 			page 294


 10828 3d49 48897C24 		mov	QWORD PTR 56[rsp], rdi	# %sfp, _235
 10828      38
 10829              	.LBE529:
 10830              	.LBE533:
 10831              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10832              		.loc 1 259 25 view .LVU3709
 10833 3d4e 4889F3   		mov	rbx, rsi	# tmp422, tmp422
 10834 3d51 49C1E003 		sal	r8, 3	# tmp442,
 10835              	.LBB534:
 10836              	.LBB530:
 10837              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 10838              		.loc 1 189 29 view .LVU3710
 10839 3d55 4889EF   		mov	rdi, rbp	# index, index
 10840              	.LVL569:
 10841 3d58 0F1F8400 		.p2align 4
 10841      00000000 
 10842              		.p2align 3
 10843              	.L739:
 189:sieve_extend.c ****    }
 10844              		.loc 1 189 29 view .LVU3711
 10845              	.LBE530:
 10846              	.LBE534:
 255:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10847              		.loc 1 255 13 is_stmt 1 view .LVU3712
 10848              	# sieve_extend.c:255:             register counter_t index_word = wordindex(index);
 255:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10849              		.loc 1 255 32 is_stmt 0 view .LVU3713
 10850 3d60 4889F8   		mov	rax, rdi	# index_word, index
 10851              	# sieve_extend.c:256:             register bitword_t mask = SAFE_ZERO;
 256:sieve_extend.c ****             #pragma GCC ivdep
 10852              		.loc 1 256 32 view .LVU3714
 10853 3d63 31D2     		xor	edx, edx	# mask
 10854              	# sieve_extend.c:255:             register counter_t index_word = wordindex(index);
 255:sieve_extend.c ****             register bitword_t mask = SAFE_ZERO;
 10855              		.loc 1 255 32 view .LVU3715
 10856 3d65 48C1E806 		shr	rax, 6	# index_word,
 10857              	.LVL570:
 256:sieve_extend.c ****             #pragma GCC ivdep
 10858              		.loc 1 256 13 is_stmt 1 view .LVU3716
 10859              	.L733:
 259:sieve_extend.c ****                 index += step;
 10860              		.loc 1 259 17 view .LVU3717
 10861              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10862              		.loc 1 259 25 is_stmt 0 view .LVU3718
 10863 3d69 C4C2C1F7 		shlx	rsi, r11, rdi	# tmp444, tmp445, index
 10863      F3
 10864              	# sieve_extend.c:260:                 index += step;
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10865              		.loc 1 260 23 view .LVU3719
 10866 3d6e 4C01E7   		add	rdi, r12	# index, step
 10867              	.LVL571:
 10868              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10869              		.loc 1 259 22 view .LVU3720
GAS LISTING /tmp/ccfflXEb.s 			page 295


 10870 3d71 4809F2   		or	rdx, rsi	# mask, tmp444
 10871              	.LVL572:
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10872              		.loc 1 260 17 is_stmt 1 view .LVU3721
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10873              		.loc 1 261 21 view .LVU3722
 10874              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10875              		.loc 1 261 36 is_stmt 0 view .LVU3723
 10876 3d74 4889FE   		mov	rsi, rdi	# tmp446, index
 10877 3d77 48C1EE06 		shr	rsi, 6	# tmp446,
 10878              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10879              		.loc 1 261 13 view .LVU3724
 10880 3d7b 4839F0   		cmp	rax, rsi	# index_word, tmp446
 10881 3d7e 0F85AC00 		jne	.L989	#,
 10881      0000
 259:sieve_extend.c ****                 index += step;
 10882              		.loc 1 259 17 is_stmt 1 view .LVU3725
 10883              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10884              		.loc 1 259 25 is_stmt 0 view .LVU3726
 10885 3d84 C4C2C1F7 		shlx	rsi, r11, rdi	# tmp729, tmp445, index
 10885      F3
 10886              	# sieve_extend.c:260:                 index += step;
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10887              		.loc 1 260 23 view .LVU3727
 10888 3d89 4C01E7   		add	rdi, r12	# index, step
 10889              	.LVL573:
 10890              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10891              		.loc 1 259 22 view .LVU3728
 10892 3d8c 4809F2   		or	rdx, rsi	# mask, tmp729
 10893              	.LVL574:
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10894              		.loc 1 260 17 is_stmt 1 view .LVU3729
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10895              		.loc 1 261 21 view .LVU3730
 10896              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10897              		.loc 1 261 36 is_stmt 0 view .LVU3731
 10898 3d8f 4889FE   		mov	rsi, rdi	# tmp730, index
 10899 3d92 48C1EE06 		shr	rsi, 6	# tmp730,
 10900              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10901              		.loc 1 261 13 view .LVU3732
 10902 3d96 4839F0   		cmp	rax, rsi	# index_word, tmp730
 10903 3d99 0F859100 		jne	.L989	#,
 10903      0000
 259:sieve_extend.c ****                 index += step;
 10904              		.loc 1 259 17 is_stmt 1 view .LVU3733
 10905              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10906              		.loc 1 259 25 is_stmt 0 view .LVU3734
 10907 3d9f C4C2C1F7 		shlx	rsi, r11, rdi	# tmp731, tmp445, index
 10907      F3
 10908              	# sieve_extend.c:260:                 index += step;
GAS LISTING /tmp/ccfflXEb.s 			page 296


 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10909              		.loc 1 260 23 view .LVU3735
 10910 3da4 4C01E7   		add	rdi, r12	# index, step
 10911              	.LVL575:
 10912              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10913              		.loc 1 259 22 view .LVU3736
 10914 3da7 4809F2   		or	rdx, rsi	# mask, tmp731
 10915              	.LVL576:
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10916              		.loc 1 260 17 is_stmt 1 view .LVU3737
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10917              		.loc 1 261 21 view .LVU3738
 10918              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10919              		.loc 1 261 36 is_stmt 0 view .LVU3739
 10920 3daa 4889FE   		mov	rsi, rdi	# tmp732, index
 10921 3dad 48C1EE06 		shr	rsi, 6	# tmp732,
 10922              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10923              		.loc 1 261 13 view .LVU3740
 10924 3db1 4839F0   		cmp	rax, rsi	# index_word, tmp732
 10925 3db4 757A     		jne	.L989	#,
 259:sieve_extend.c ****                 index += step;
 10926              		.loc 1 259 17 is_stmt 1 view .LVU3741
 10927              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10928              		.loc 1 259 25 is_stmt 0 view .LVU3742
 10929 3db6 C4C2C1F7 		shlx	rsi, r11, rdi	# tmp733, tmp445, index
 10929      F3
 10930              	# sieve_extend.c:260:                 index += step;
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10931              		.loc 1 260 23 view .LVU3743
 10932 3dbb 4C01E7   		add	rdi, r12	# index, step
 10933              	.LVL577:
 10934              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10935              		.loc 1 259 22 view .LVU3744
 10936 3dbe 4809F2   		or	rdx, rsi	# mask, tmp733
 10937              	.LVL578:
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10938              		.loc 1 260 17 is_stmt 1 view .LVU3745
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10939              		.loc 1 261 21 view .LVU3746
 10940              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10941              		.loc 1 261 36 is_stmt 0 view .LVU3747
 10942 3dc1 4889FE   		mov	rsi, rdi	# tmp734, index
 10943 3dc4 48C1EE06 		shr	rsi, 6	# tmp734,
 10944              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10945              		.loc 1 261 13 view .LVU3748
 10946 3dc8 4839F0   		cmp	rax, rsi	# index_word, tmp734
 10947 3dcb 7563     		jne	.L989	#,
 259:sieve_extend.c ****                 index += step;
 10948              		.loc 1 259 17 is_stmt 1 view .LVU3749
 10949              	# sieve_extend.c:259:                 mask |= markmask(index);
GAS LISTING /tmp/ccfflXEb.s 			page 297


 259:sieve_extend.c ****                 index += step;
 10950              		.loc 1 259 25 is_stmt 0 view .LVU3750
 10951 3dcd C4C2C1F7 		shlx	rsi, r11, rdi	# tmp735, tmp445, index
 10951      F3
 10952              	# sieve_extend.c:260:                 index += step;
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10953              		.loc 1 260 23 view .LVU3751
 10954 3dd2 4C01E7   		add	rdi, r12	# index, step
 10955              	.LVL579:
 10956              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10957              		.loc 1 259 22 view .LVU3752
 10958 3dd5 4809F2   		or	rdx, rsi	# mask, tmp735
 10959              	.LVL580:
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10960              		.loc 1 260 17 is_stmt 1 view .LVU3753
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10961              		.loc 1 261 21 view .LVU3754
 10962              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10963              		.loc 1 261 36 is_stmt 0 view .LVU3755
 10964 3dd8 4889FE   		mov	rsi, rdi	# tmp736, index
 10965 3ddb 48C1EE06 		shr	rsi, 6	# tmp736,
 10966              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10967              		.loc 1 261 13 view .LVU3756
 10968 3ddf 4839F0   		cmp	rax, rsi	# index_word, tmp736
 10969 3de2 754C     		jne	.L989	#,
 259:sieve_extend.c ****                 index += step;
 10970              		.loc 1 259 17 is_stmt 1 view .LVU3757
 10971              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10972              		.loc 1 259 25 is_stmt 0 view .LVU3758
 10973 3de4 C4C2C1F7 		shlx	rsi, r11, rdi	# tmp737, tmp445, index
 10973      F3
 10974              	# sieve_extend.c:260:                 index += step;
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10975              		.loc 1 260 23 view .LVU3759
 10976 3de9 4C01E7   		add	rdi, r12	# index, step
 10977              	.LVL581:
 10978              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10979              		.loc 1 259 22 view .LVU3760
 10980 3dec 4809F2   		or	rdx, rsi	# mask, tmp737
 10981              	.LVL582:
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10982              		.loc 1 260 17 is_stmt 1 view .LVU3761
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10983              		.loc 1 261 21 view .LVU3762
 10984              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10985              		.loc 1 261 36 is_stmt 0 view .LVU3763
 10986 3def 4889FE   		mov	rsi, rdi	# tmp738, index
 10987 3df2 48C1EE06 		shr	rsi, 6	# tmp738,
 10988              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 10989              		.loc 1 261 13 view .LVU3764
GAS LISTING /tmp/ccfflXEb.s 			page 298


 10990 3df6 4839F0   		cmp	rax, rsi	# index_word, tmp738
 10991 3df9 7535     		jne	.L989	#,
 259:sieve_extend.c ****                 index += step;
 10992              		.loc 1 259 17 is_stmt 1 view .LVU3765
 10993              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 10994              		.loc 1 259 25 is_stmt 0 view .LVU3766
 10995 3dfb C4C2C1F7 		shlx	rsi, r11, rdi	# tmp739, tmp445, index
 10995      F3
 10996              	# sieve_extend.c:260:                 index += step;
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 10997              		.loc 1 260 23 view .LVU3767
 10998 3e00 4C01E7   		add	rdi, r12	# index, step
 10999              	.LVL583:
 11000              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 11001              		.loc 1 259 22 view .LVU3768
 11002 3e03 4809F2   		or	rdx, rsi	# mask, tmp739
 11003              	.LVL584:
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 11004              		.loc 1 260 17 is_stmt 1 view .LVU3769
 261:sieve_extend.c ****             // #pragma GCC ivdep
 11005              		.loc 1 261 21 view .LVU3770
 11006              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 11007              		.loc 1 261 36 is_stmt 0 view .LVU3771
 11008 3e06 4889FE   		mov	rsi, rdi	# tmp740, index
 11009 3e09 48C1EE06 		shr	rsi, 6	# tmp740,
 11010              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 11011              		.loc 1 261 13 view .LVU3772
 11012 3e0d 4839F0   		cmp	rax, rsi	# index_word, tmp740
 11013 3e10 751E     		jne	.L989	#,
 259:sieve_extend.c ****                 index += step;
 11014              		.loc 1 259 17 is_stmt 1 view .LVU3773
 11015              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 11016              		.loc 1 259 25 is_stmt 0 view .LVU3774
 11017 3e12 C4C2C1F7 		shlx	rsi, r11, rdi	# tmp741, tmp445, index
 11017      F3
 11018              	# sieve_extend.c:260:                 index += step;
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 11019              		.loc 1 260 23 view .LVU3775
 11020 3e17 4C01E7   		add	rdi, r12	# index, step
 11021              	.LVL585:
 11022              	# sieve_extend.c:259:                 mask |= markmask(index);
 259:sieve_extend.c ****                 index += step;
 11023              		.loc 1 259 22 view .LVU3776
 11024 3e1a 4809F2   		or	rdx, rsi	# mask, tmp741
 11025              	.LVL586:
 260:sieve_extend.c ****             } while (index_word == wordindex(index));
 11026              		.loc 1 260 17 is_stmt 1 view .LVU3777
 261:sieve_extend.c ****             // #pragma GCC ivdep
 11027              		.loc 1 261 21 view .LVU3778
 11028              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 11029              		.loc 1 261 36 is_stmt 0 view .LVU3779
GAS LISTING /tmp/ccfflXEb.s 			page 299


 11030 3e1d 4889FE   		mov	rsi, rdi	# tmp742, index
 11031 3e20 48C1EE06 		shr	rsi, 6	# tmp742,
 11032              	# sieve_extend.c:261:             } while (index_word == wordindex(index));
 261:sieve_extend.c ****             // #pragma GCC ivdep
 11033              		.loc 1 261 13 view .LVU3780
 11034 3e24 4839F0   		cmp	rax, rsi	# index_word, tmp742
 11035 3e27 0F843CFF 		je	.L733	#,
 11035      FFFF
 11036 3e2d 0F1F00   		.p2align 4
 11037              		.p2align 3
 11038              	.L989:
 268:sieve_extend.c ****             #endif
 11039              		.loc 1 268 16 is_stmt 1 view .LVU3781
 11040              	.LVL587:
 11041              	.LBB535:
 11042              	.LBI527:
 168:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 11043              		.loc 1 168 20 view .LVU3782
 11044              	.LBB531:
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11045              		.loc 1 169 4 view .LVU3783
 170:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 11046              		.loc 1 170 4 view .LVU3784
 11047              	# sieve_extend.c:170:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 170:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 11048              		.loc 1 170 78 is_stmt 0 view .LVU3785
 11049 3e30 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 11050              	.LVL588:
 171:sieve_extend.c **** 
 11051              		.loc 1 171 4 is_stmt 1 view .LVU3786
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11052              		.loc 1 175 10 view .LVU3787
 11053 3e34 4C39D0   		cmp	rax, r10	# index_ptr, fast_loop_ptr
 11054 3e37 0F830301 		jnb	.L734	#,
 11054      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11055              		.loc 1 175 10 is_stmt 0 view .LVU3788
 11056 3e3d 4A8D3428 		lea	rsi, [rax+r13]	# ivtmp.579,
 11057              	.L735:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11058              		.loc 1 176 8 is_stmt 1 view .LVU3789
 11059              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11060              		.loc 1 176 19 is_stmt 0 view .LVU3790
 11061 3e41 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_521, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11062              		.loc 1 176 35 is_stmt 1 view .LVU3791
 11063              	.LVL589:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11064              		.loc 1 177 8 view .LVU3792
 11065              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11066              		.loc 1 177 19 is_stmt 0 view .LVU3793
 11067 3e44 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_521, index: _203, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11068              		.loc 1 177 35 is_stmt 1 view .LVU3794
 11069              	.LVL590:
GAS LISTING /tmp/ccfflXEb.s 			page 300


 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11070              		.loc 1 178 8 view .LVU3795
 11071              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11072              		.loc 1 178 19 is_stmt 0 view .LVU3796
 11073 3e48 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _758, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11074              		.loc 1 178 35 is_stmt 1 view .LVU3797
 11075              	.LVL591:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11076              		.loc 1 179 8 view .LVU3798
 11077              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11078              		.loc 1 179 19 is_stmt 0 view .LVU3799
 11079 3e4b 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _758, index: _203, offset: 0B], mask
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11080              		.loc 1 179 35 is_stmt 1 view .LVU3800
 11081              	.LVL592:
 180:sieve_extend.c ****    }
 11082              		.loc 1 180 8 view .LVU3801
 11083 3e4f 4C01C6   		add	rsi, r8	# ivtmp.579, tmp442
 11084              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 11085              		.loc 1 180 19 is_stmt 0 view .LVU3802
 11086 3e52 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_521, index: _203, step: 4, offset: 0B], mask
 180:sieve_extend.c ****    }
 11087              		.loc 1 180 35 is_stmt 1 view .LVU3803
 11088 3e56 4C01C0   		add	rax, r8	# index_ptr, tmp442
 11089              	.LVL593:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11090              		.loc 1 175 10 view .LVU3804
 11091 3e59 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11092 3e5c 0F86DE00 		jbe	.L734	#,
 11092      0000
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11093              		.loc 1 176 8 view .LVU3805
 11094              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11095              		.loc 1 176 19 is_stmt 0 view .LVU3806
 11096 3e62 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_521, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11097              		.loc 1 176 35 is_stmt 1 view .LVU3807
 11098              	.LVL594:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11099              		.loc 1 177 8 view .LVU3808
 11100              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11101              		.loc 1 177 19 is_stmt 0 view .LVU3809
 11102 3e65 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_521, index: _203, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11103              		.loc 1 177 35 is_stmt 1 view .LVU3810
 11104              	.LVL595:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11105              		.loc 1 178 8 view .LVU3811
 11106              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11107              		.loc 1 178 19 is_stmt 0 view .LVU3812
GAS LISTING /tmp/ccfflXEb.s 			page 301


 11108 3e69 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _758, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11109              		.loc 1 178 35 is_stmt 1 view .LVU3813
 11110              	.LVL596:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11111              		.loc 1 179 8 view .LVU3814
 11112              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11113              		.loc 1 179 19 is_stmt 0 view .LVU3815
 11114 3e6c 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _758, index: _203, offset: 0B], mask
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11115              		.loc 1 179 35 is_stmt 1 view .LVU3816
 11116              	.LVL597:
 180:sieve_extend.c ****    }
 11117              		.loc 1 180 8 view .LVU3817
 11118 3e70 4C01C6   		add	rsi, r8	# ivtmp.579, tmp442
 11119              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 11120              		.loc 1 180 19 is_stmt 0 view .LVU3818
 11121 3e73 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_521, index: _203, step: 4, offset: 0B], mask
 180:sieve_extend.c ****    }
 11122              		.loc 1 180 35 is_stmt 1 view .LVU3819
 11123 3e77 4C01C0   		add	rax, r8	# index_ptr, tmp442
 11124              	.LVL598:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11125              		.loc 1 175 10 view .LVU3820
 11126 3e7a 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11127 3e7d 0F86BD00 		jbe	.L734	#,
 11127      0000
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11128              		.loc 1 176 8 view .LVU3821
 11129              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11130              		.loc 1 176 19 is_stmt 0 view .LVU3822
 11131 3e83 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_521, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11132              		.loc 1 176 35 is_stmt 1 view .LVU3823
 11133              	.LVL599:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11134              		.loc 1 177 8 view .LVU3824
 11135              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11136              		.loc 1 177 19 is_stmt 0 view .LVU3825
 11137 3e86 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_521, index: _203, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11138              		.loc 1 177 35 is_stmt 1 view .LVU3826
 11139              	.LVL600:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11140              		.loc 1 178 8 view .LVU3827
 11141              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11142              		.loc 1 178 19 is_stmt 0 view .LVU3828
 11143 3e8a 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _758, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11144              		.loc 1 178 35 is_stmt 1 view .LVU3829
 11145              	.LVL601:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 302


 11146              		.loc 1 179 8 view .LVU3830
 11147              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11148              		.loc 1 179 19 is_stmt 0 view .LVU3831
 11149 3e8d 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _758, index: _203, offset: 0B], mask
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11150              		.loc 1 179 35 is_stmt 1 view .LVU3832
 11151              	.LVL602:
 180:sieve_extend.c ****    }
 11152              		.loc 1 180 8 view .LVU3833
 11153 3e91 4C01C6   		add	rsi, r8	# ivtmp.579, tmp442
 11154              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 11155              		.loc 1 180 19 is_stmt 0 view .LVU3834
 11156 3e94 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_521, index: _203, step: 4, offset: 0B], mask
 180:sieve_extend.c ****    }
 11157              		.loc 1 180 35 is_stmt 1 view .LVU3835
 11158 3e98 4C01C0   		add	rax, r8	# index_ptr, tmp442
 11159              	.LVL603:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11160              		.loc 1 175 10 view .LVU3836
 11161 3e9b 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11162 3e9e 0F869C00 		jbe	.L734	#,
 11162      0000
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11163              		.loc 1 176 8 view .LVU3837
 11164              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11165              		.loc 1 176 19 is_stmt 0 view .LVU3838
 11166 3ea4 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_521, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11167              		.loc 1 176 35 is_stmt 1 view .LVU3839
 11168              	.LVL604:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11169              		.loc 1 177 8 view .LVU3840
 11170              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11171              		.loc 1 177 19 is_stmt 0 view .LVU3841
 11172 3ea7 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_521, index: _203, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11173              		.loc 1 177 35 is_stmt 1 view .LVU3842
 11174              	.LVL605:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11175              		.loc 1 178 8 view .LVU3843
 11176              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11177              		.loc 1 178 19 is_stmt 0 view .LVU3844
 11178 3eab 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _758, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11179              		.loc 1 178 35 is_stmt 1 view .LVU3845
 11180              	.LVL606:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11181              		.loc 1 179 8 view .LVU3846
 11182              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11183              		.loc 1 179 19 is_stmt 0 view .LVU3847
 11184 3eae 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _758, index: _203, offset: 0B], mask
GAS LISTING /tmp/ccfflXEb.s 			page 303


 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11185              		.loc 1 179 35 is_stmt 1 view .LVU3848
 11186              	.LVL607:
 180:sieve_extend.c ****    }
 11187              		.loc 1 180 8 view .LVU3849
 11188 3eb2 4C01C6   		add	rsi, r8	# ivtmp.579, tmp442
 11189              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 11190              		.loc 1 180 19 is_stmt 0 view .LVU3850
 11191 3eb5 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_521, index: _203, step: 4, offset: 0B], mask
 180:sieve_extend.c ****    }
 11192              		.loc 1 180 35 is_stmt 1 view .LVU3851
 11193 3eb9 4C01C0   		add	rax, r8	# index_ptr, tmp442
 11194              	.LVL608:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11195              		.loc 1 175 10 view .LVU3852
 11196 3ebc 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11197 3ebf 767F     		jbe	.L734	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11198              		.loc 1 176 8 view .LVU3853
 11199              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11200              		.loc 1 176 19 is_stmt 0 view .LVU3854
 11201 3ec1 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_521, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11202              		.loc 1 176 35 is_stmt 1 view .LVU3855
 11203              	.LVL609:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11204              		.loc 1 177 8 view .LVU3856
 11205              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11206              		.loc 1 177 19 is_stmt 0 view .LVU3857
 11207 3ec4 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_521, index: _203, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11208              		.loc 1 177 35 is_stmt 1 view .LVU3858
 11209              	.LVL610:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11210              		.loc 1 178 8 view .LVU3859
 11211              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11212              		.loc 1 178 19 is_stmt 0 view .LVU3860
 11213 3ec8 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _758, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11214              		.loc 1 178 35 is_stmt 1 view .LVU3861
 11215              	.LVL611:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11216              		.loc 1 179 8 view .LVU3862
 11217              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11218              		.loc 1 179 19 is_stmt 0 view .LVU3863
 11219 3ecb 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _758, index: _203, offset: 0B], mask
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11220              		.loc 1 179 35 is_stmt 1 view .LVU3864
 11221              	.LVL612:
 180:sieve_extend.c ****    }
 11222              		.loc 1 180 8 view .LVU3865
 11223 3ecf 4C01C6   		add	rsi, r8	# ivtmp.579, tmp442
GAS LISTING /tmp/ccfflXEb.s 			page 304


 11224              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 11225              		.loc 1 180 19 is_stmt 0 view .LVU3866
 11226 3ed2 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_521, index: _203, step: 4, offset: 0B], mask
 180:sieve_extend.c ****    }
 11227              		.loc 1 180 35 is_stmt 1 view .LVU3867
 11228 3ed6 4C01C0   		add	rax, r8	# index_ptr, tmp442
 11229              	.LVL613:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11230              		.loc 1 175 10 view .LVU3868
 11231 3ed9 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11232 3edc 7662     		jbe	.L734	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11233              		.loc 1 176 8 view .LVU3869
 11234              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11235              		.loc 1 176 19 is_stmt 0 view .LVU3870
 11236 3ede 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_521, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11237              		.loc 1 176 35 is_stmt 1 view .LVU3871
 11238              	.LVL614:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11239              		.loc 1 177 8 view .LVU3872
 11240              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11241              		.loc 1 177 19 is_stmt 0 view .LVU3873
 11242 3ee1 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_521, index: _203, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11243              		.loc 1 177 35 is_stmt 1 view .LVU3874
 11244              	.LVL615:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11245              		.loc 1 178 8 view .LVU3875
 11246              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11247              		.loc 1 178 19 is_stmt 0 view .LVU3876
 11248 3ee5 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _758, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11249              		.loc 1 178 35 is_stmt 1 view .LVU3877
 11250              	.LVL616:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11251              		.loc 1 179 8 view .LVU3878
 11252              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11253              		.loc 1 179 19 is_stmt 0 view .LVU3879
 11254 3ee8 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _758, index: _203, offset: 0B], mask
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11255              		.loc 1 179 35 is_stmt 1 view .LVU3880
 11256              	.LVL617:
 180:sieve_extend.c ****    }
 11257              		.loc 1 180 8 view .LVU3881
 11258 3eec 4C01C6   		add	rsi, r8	# ivtmp.579, tmp442
 11259              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 11260              		.loc 1 180 19 is_stmt 0 view .LVU3882
 11261 3eef 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_521, index: _203, step: 4, offset: 0B], mask
 180:sieve_extend.c ****    }
 11262              		.loc 1 180 35 is_stmt 1 view .LVU3883
GAS LISTING /tmp/ccfflXEb.s 			page 305


 11263 3ef3 4C01C0   		add	rax, r8	# index_ptr, tmp442
 11264              	.LVL618:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11265              		.loc 1 175 10 view .LVU3884
 11266 3ef6 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11267 3ef9 7645     		jbe	.L734	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11268              		.loc 1 176 8 view .LVU3885
 11269              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11270              		.loc 1 176 19 is_stmt 0 view .LVU3886
 11271 3efb 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_521, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11272              		.loc 1 176 35 is_stmt 1 view .LVU3887
 11273              	.LVL619:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11274              		.loc 1 177 8 view .LVU3888
 11275              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11276              		.loc 1 177 19 is_stmt 0 view .LVU3889
 11277 3efe 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_521, index: _203, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11278              		.loc 1 177 35 is_stmt 1 view .LVU3890
 11279              	.LVL620:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11280              		.loc 1 178 8 view .LVU3891
 11281              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11282              		.loc 1 178 19 is_stmt 0 view .LVU3892
 11283 3f02 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _758, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11284              		.loc 1 178 35 is_stmt 1 view .LVU3893
 11285              	.LVL621:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11286              		.loc 1 179 8 view .LVU3894
 11287              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11288              		.loc 1 179 19 is_stmt 0 view .LVU3895
 11289 3f05 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _758, index: _203, offset: 0B], mask
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11290              		.loc 1 179 35 is_stmt 1 view .LVU3896
 11291              	.LVL622:
 180:sieve_extend.c ****    }
 11292              		.loc 1 180 8 view .LVU3897
 11293 3f09 4C01C6   		add	rsi, r8	# ivtmp.579, tmp442
 11294              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 11295              		.loc 1 180 19 is_stmt 0 view .LVU3898
 11296 3f0c 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_521, index: _203, step: 4, offset: 0B], mask
 180:sieve_extend.c ****    }
 11297              		.loc 1 180 35 is_stmt 1 view .LVU3899
 11298 3f10 4C01C0   		add	rax, r8	# index_ptr, tmp442
 11299              	.LVL623:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11300              		.loc 1 175 10 view .LVU3900
 11301 3f13 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11302 3f16 7628     		jbe	.L734	#,
GAS LISTING /tmp/ccfflXEb.s 			page 306


 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11303              		.loc 1 176 8 view .LVU3901
 11304              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11305              		.loc 1 176 19 is_stmt 0 view .LVU3902
 11306 3f18 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_521, offset: 0B], mask
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11307              		.loc 1 176 35 is_stmt 1 view .LVU3903
 11308              	.LVL624:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11309              		.loc 1 177 8 view .LVU3904
 11310              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11311              		.loc 1 177 19 is_stmt 0 view .LVU3905
 11312 3f1b 48091408 		or	QWORD PTR [rax+rcx], rdx	# MEM[base: index_ptr_521, index: _203, offset: 0B], mask
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11313              		.loc 1 177 35 is_stmt 1 view .LVU3906
 11314              	.LVL625:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11315              		.loc 1 178 8 view .LVU3907
 11316              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11317              		.loc 1 178 19 is_stmt 0 view .LVU3908
 11318 3f1f 480916   		or	QWORD PTR [rsi], rdx	# MEM[base: _758, offset: 0B], mask
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11319              		.loc 1 178 35 is_stmt 1 view .LVU3909
 11320              	.LVL626:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11321              		.loc 1 179 8 view .LVU3910
 11322              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11323              		.loc 1 179 19 is_stmt 0 view .LVU3911
 11324 3f22 4809140E 		or	QWORD PTR [rsi+rcx], rdx	# MEM[base: _758, index: _203, offset: 0B], mask
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11325              		.loc 1 179 35 is_stmt 1 view .LVU3912
 11326              	.LVL627:
 180:sieve_extend.c ****    }
 11327              		.loc 1 180 8 view .LVU3913
 11328 3f26 4C01C6   		add	rsi, r8	# ivtmp.579, tmp442
 11329              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 11330              		.loc 1 180 19 is_stmt 0 view .LVU3914
 11331 3f29 48091488 		or	QWORD PTR [rax+rcx*4], rdx	# MEM[base: index_ptr_521, index: _203, step: 4, offset: 0B], mask
 180:sieve_extend.c ****    }
 11332              		.loc 1 180 35 is_stmt 1 view .LVU3915
 11333 3f2d 4C01C0   		add	rax, r8	# index_ptr, tmp442
 11334              	.LVL628:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11335              		.loc 1 175 10 view .LVU3916
 11336 3f30 4939C2   		cmp	r10, rax	# fast_loop_ptr, index_ptr
 11337 3f33 0F8708FF 		ja	.L735	#,
 11337      FFFF
 11338 3f39 0F1F8000 		.p2align 4
 11338      000000
 11339              		.p2align 3
 11340              	.L734:
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
GAS LISTING /tmp/ccfflXEb.s 			page 307


 11341              		.loc 1 183 4 view .LVU3917
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11342              		.loc 1 184 4 view .LVU3918
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11343              		.loc 1 184 10 view .LVU3919
 11344 3f40 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11345 3f43 765B     		jbe	.L736	#,
 11346              	.L737:
 185:sieve_extend.c ****    }
 11347              		.loc 1 185 8 view .LVU3920
 11348              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11349              		.loc 1 185 19 is_stmt 0 view .LVU3921
 11350 3f45 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 185:sieve_extend.c ****    }
 11351              		.loc 1 185 34 is_stmt 1 view .LVU3922
 11352              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11353              		.loc 1 185 43 is_stmt 0 view .LVU3923
 11354 3f48 4801C8   		add	rax, rcx	# index_ptr, _203
 11355              	.LVL629:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11356              		.loc 1 184 10 is_stmt 1 view .LVU3924
 11357 3f4b 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11358 3f4e 7650     		jbe	.L736	#,
 185:sieve_extend.c ****    }
 11359              		.loc 1 185 8 view .LVU3925
 11360              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11361              		.loc 1 185 19 is_stmt 0 view .LVU3926
 11362 3f50 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 185:sieve_extend.c ****    }
 11363              		.loc 1 185 34 is_stmt 1 view .LVU3927
 11364              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11365              		.loc 1 185 43 is_stmt 0 view .LVU3928
 11366 3f53 4801C8   		add	rax, rcx	# index_ptr, _203
 11367              	.LVL630:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11368              		.loc 1 184 10 is_stmt 1 view .LVU3929
 11369 3f56 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11370 3f59 7645     		jbe	.L736	#,
 185:sieve_extend.c ****    }
 11371              		.loc 1 185 8 view .LVU3930
 11372              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11373              		.loc 1 185 19 is_stmt 0 view .LVU3931
 11374 3f5b 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 185:sieve_extend.c ****    }
 11375              		.loc 1 185 34 is_stmt 1 view .LVU3932
 11376              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11377              		.loc 1 185 43 is_stmt 0 view .LVU3933
 11378 3f5e 4801C8   		add	rax, rcx	# index_ptr, _203
 11379              	.LVL631:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11380              		.loc 1 184 10 is_stmt 1 view .LVU3934
GAS LISTING /tmp/ccfflXEb.s 			page 308


 11381 3f61 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11382 3f64 763A     		jbe	.L736	#,
 185:sieve_extend.c ****    }
 11383              		.loc 1 185 8 view .LVU3935
 11384              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11385              		.loc 1 185 19 is_stmt 0 view .LVU3936
 11386 3f66 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 185:sieve_extend.c ****    }
 11387              		.loc 1 185 34 is_stmt 1 view .LVU3937
 11388              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11389              		.loc 1 185 43 is_stmt 0 view .LVU3938
 11390 3f69 4801C8   		add	rax, rcx	# index_ptr, _203
 11391              	.LVL632:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11392              		.loc 1 184 10 is_stmt 1 view .LVU3939
 11393 3f6c 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11394 3f6f 762F     		jbe	.L736	#,
 185:sieve_extend.c ****    }
 11395              		.loc 1 185 8 view .LVU3940
 11396              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11397              		.loc 1 185 19 is_stmt 0 view .LVU3941
 11398 3f71 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 185:sieve_extend.c ****    }
 11399              		.loc 1 185 34 is_stmt 1 view .LVU3942
 11400              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11401              		.loc 1 185 43 is_stmt 0 view .LVU3943
 11402 3f74 4801C8   		add	rax, rcx	# index_ptr, _203
 11403              	.LVL633:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11404              		.loc 1 184 10 is_stmt 1 view .LVU3944
 11405 3f77 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11406 3f7a 7624     		jbe	.L736	#,
 185:sieve_extend.c ****    }
 11407              		.loc 1 185 8 view .LVU3945
 11408              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11409              		.loc 1 185 19 is_stmt 0 view .LVU3946
 11410 3f7c 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 185:sieve_extend.c ****    }
 11411              		.loc 1 185 34 is_stmt 1 view .LVU3947
 11412              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11413              		.loc 1 185 43 is_stmt 0 view .LVU3948
 11414 3f7f 4801C8   		add	rax, rcx	# index_ptr, _203
 11415              	.LVL634:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11416              		.loc 1 184 10 is_stmt 1 view .LVU3949
 11417 3f82 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11418 3f85 7619     		jbe	.L736	#,
 185:sieve_extend.c ****    }
 11419              		.loc 1 185 8 view .LVU3950
 11420              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
GAS LISTING /tmp/ccfflXEb.s 			page 309


 11421              		.loc 1 185 19 is_stmt 0 view .LVU3951
 11422 3f87 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 185:sieve_extend.c ****    }
 11423              		.loc 1 185 34 is_stmt 1 view .LVU3952
 11424              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11425              		.loc 1 185 43 is_stmt 0 view .LVU3953
 11426 3f8a 4801C8   		add	rax, rcx	# index_ptr, _203
 11427              	.LVL635:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11428              		.loc 1 184 10 is_stmt 1 view .LVU3954
 11429 3f8d 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11430 3f90 760E     		jbe	.L736	#,
 185:sieve_extend.c ****    }
 11431              		.loc 1 185 8 view .LVU3955
 11432              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11433              		.loc 1 185 19 is_stmt 0 view .LVU3956
 11434 3f92 480910   		or	QWORD PTR [rax], rdx	# MEM[base: index_ptr_518, offset: 0B], mask
 185:sieve_extend.c ****    }
 11435              		.loc 1 185 34 is_stmt 1 view .LVU3957
 11436              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 11437              		.loc 1 185 43 is_stmt 0 view .LVU3958
 11438 3f95 4801C8   		add	rax, rcx	# index_ptr, _203
 11439              	.LVL636:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 11440              		.loc 1 184 10 is_stmt 1 view .LVU3959
 11441 3f98 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11442 3f9b 77A8     		ja	.L737	#,
 11443 3f9d 0F1F00   		.p2align 4
 11444              		.p2align 3
 11445              	.L736:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11446              		.loc 1 188 4 view .LVU3960
 11447              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11448              		.loc 1 188 7 is_stmt 0 view .LVU3961
 11449 3fa0 4939C1   		cmp	r9, rax	# range_stop_ptr, index_ptr
 11450 3fa3 741B     		je	.L1075	#,
 11451              	.LVL637:
 11452              	.L738:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 11453              		.loc 1 188 7 view .LVU3962
 11454              	.LBE531:
 11455              	.LBE535:
 11456              	.LBE526:
 254:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11457              		.loc 1 254 54 is_stmt 1 view .LVU3963
 11458              	# sieve_extend.c:254:         for (register counter_t index = range_start; index <= range_stop_uniq
 254:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11459              		.loc 1 254 9 is_stmt 0 view .LVU3964
 11460 3fa5 4839FB   		cmp	rbx, rdi	# tmp422, index
 11461 3fa8 0F83B2FD 		jnb	.L739	#,
 11461      FFFF
 254:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11462              		.loc 1 254 9 view .LVU3965
GAS LISTING /tmp/ccfflXEb.s 			page 310


 11463 3fae 4C8B6C24 		mov	r13, QWORD PTR 64[rsp]	# patternsize_bits, %sfp
 11463      40
 11464 3fb3 488B5C24 		mov	rbx, QWORD PTR 72[rsp]	# index, %sfp
 11464      48
 11465              	.LVL638:
 254:sieve_extend.c ****             register counter_t index_word = wordindex(index);
 11466              		.loc 1 254 9 view .LVU3966
 11467 3fb8 E9E8F5FF 		jmp	.L721	#
 11467      FF
 11468              	.LVL639:
 11469 3fbd 0F1F00   		.p2align 4,,7
 11470              		.p2align 3
 11471              	.L1075:
 11472              	.LBB537:
 11473              	.LBB536:
 11474              	.LBB532:
 189:sieve_extend.c ****    }
 11475              		.loc 1 189 7 is_stmt 1 view .LVU3967
 11476              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 11477              		.loc 1 189 27 is_stmt 0 view .LVU3968
 11478 3fc0 48235424 		and	rdx, QWORD PTR 56[rsp]	# tmp448, %sfp
 11478      38
 11479              	.LVL640:
 11480              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 11481              		.loc 1 189 18 view .LVU3969
 11482 3fc5 490911   		or	QWORD PTR [r9], rdx	# *index_ptr_517, tmp448
 11483 3fc8 EBDB     		jmp	.L738	#
 11484              	.LVL641:
 11485              	.L777:
 189:sieve_extend.c ****    }
 11486              		.loc 1 189 18 view .LVU3970
 11487 3fca 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, prime
 11487      30
 11488              	.LBE532:
 11489              	.LBE536:
 11490              	.LBE537:
 11491              	.LBE525:
 11492              	.LBE538:
 11493              	.LBE540:
 11494              	.LBE546:
 11495 3fcf 4989C5   		mov	r13, rax	# patternsize_bits, block$pattern_size
 11496 3fd2 48895424 		mov	QWORD PTR 16[rsp], rdx	# %sfp, block$pattern_start
 11496      10
 11497              	.LVL642:
 11498              	.L711:
 765:sieve_extend.c **** }
 11499              		.loc 1 765 5 is_stmt 1 view .LVU3971
 765:sieve_extend.c **** }
 11500              		.loc 1 765 5 is_stmt 0 view .LVU3972
 11501              	.LBE550:
 11502              	.LBE556:
 776:sieve_extend.c ****     counter_t startprime = block.prime;
 11503              		.loc 1 776 5 is_stmt 1 view .LVU3973
 11504 3fd7 4C8B4424 		mov	r8, QWORD PTR 32[rsp]	# <retval>, %sfp
 11504      20
GAS LISTING /tmp/ccfflXEb.s 			page 311


 11505 3fdc 4889CB   		mov	rbx, rcx	# tmp472, prime
 11506 3fdf 48C1EB06 		shr	rbx, 6	# tmp472,
 11507              	.LBB557:
 11508              	.LBB558:
 11509              	# sieve_extend.c:684:     if (size < WORD_SIZE_counter) return extendSieve_smallSize (bitstorage, s
 684:sieve_extend.c **** 
 11510              		.loc 1 684 8 is_stmt 0 view .LVU3974
 11511 3fe3 4983FD3F 		cmp	r13, 63	# patternsize_bits,
 11512 3fe7 4D8D24DF 		lea	r12, [r15+rbx*8]	# _832,
 11513 3feb 41BB0100 		mov	r11d, 1	# tmp471,
 11513      0000
 11514              	.LBE558:
 11515              	.LBE557:
 11516              	# sieve_extend.c:776:     extendSieve(bitstorage, block.pattern_start, block.pattern_size, sieve->b
 776:sieve_extend.c ****     counter_t startprime = block.prime;
 11517              		.loc 1 776 5 view .LVU3975
 11518 3ff1 4D8B4808 		mov	r9, QWORD PTR 8[r8]	# _2, sieve_97->bits
 11519 3ff5 89C8     		mov	eax, ecx	# tmp1012, prime
 11520 3ff7 4C896424 		mov	QWORD PTR 64[rsp], r12	# %sfp, _832
 11520      40
 11521 3ffc C4C2F9F7 		shlx	rsi, r11, rax	# _829, tmp471, tmp1012
 11521      F3
 11522 4001 48897424 		mov	QWORD PTR 56[rsp], rsi	# %sfp, _829
 11522      38
 11523 4006 4C890C24 		mov	QWORD PTR [rsp], r9	# %sfp, _2
 11524              	.LVL643:
 11525              	.LBB562:
 11526              	.LBI557:
 683:sieve_extend.c ****     if (size < WORD_SIZE_counter) return extendSieve_smallSize (bitstorage, source_start, size, des
 11527              		.loc 1 683 20 is_stmt 1 view .LVU3976
 11528              	.LBB559:
 684:sieve_extend.c **** 
 11529              		.loc 1 684 5 view .LVU3977
 11530              	# sieve_extend.c:684:     if (size < WORD_SIZE_counter) return extendSieve_smallSize (bitstorage, s
 684:sieve_extend.c **** 
 11531              		.loc 1 684 8 is_stmt 0 view .LVU3978
 11532 400a 0F868D05 		jbe	.L708	#,
 11532      0000
 686:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11533              		.loc 1 686 5 is_stmt 1 view .LVU3979
 11534              	# sieve_extend.c:686:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 686:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11535              		.loc 1 686 35 is_stmt 0 view .LVU3980
 11536 4010 488B5424 		mov	rdx, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 11536      10
 11537              	# sieve_extend.c:689:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 11538              		.loc 1 689 37 view .LVU3981
 11539 4015 4C89FF   		mov	rdi, r15	#, _102
 11540 4018 488B0C24 		mov	rcx, QWORD PTR [rsp]	#, %sfp
 11541 401c 488B7424 		mov	rsi, QWORD PTR 16[rsp]	#, %sfp
 11541      10
 11542              	# sieve_extend.c:686:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 686:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11543              		.loc 1 686 35 view .LVU3982
 11544 4021 498D6C15 		lea	rbp, 0[r13+rdx]	# tmp474,
 11544      00
GAS LISTING /tmp/ccfflXEb.s 			page 312


 11545              	# sieve_extend.c:687:     const bitshift_t source_bit = bitindex_calc(source_start);
 687:sieve_extend.c **** 
 11546              		.loc 1 687 22 view .LVU3983
 11547 4026 83E23F   		and	edx, 63	# source_bit,
 11548              	# sieve_extend.c:686:     const bitshift_t copy_bit   = bitindex_calc(source_start + size);
 686:sieve_extend.c ****     const bitshift_t source_bit = bitindex_calc(source_start);
 11549              		.loc 1 686 22 view .LVU3984
 11550 4029 83E53F   		and	ebp, 63	# copy_bit,
 11551              	.LVL644:
 687:sieve_extend.c **** 
 11552              		.loc 1 687 5 is_stmt 1 view .LVU3985
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 11553              		.loc 1 689 5 view .LVU3986
 11554              	# sieve_extend.c:689:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 11555              		.loc 1 689 13 is_stmt 0 view .LVU3987
 11556 402c 4839D5   		cmp	rbp, rdx	# copy_bit, source_bit
 11557              	# sieve_extend.c:689:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 11558              		.loc 1 689 37 view .LVU3988
 11559 402f 4C89EA   		mov	rdx, r13	#, patternsize_bits
 11560              	.LVL645:
 11561              	# sieve_extend.c:689:     if      (source_bit > copy_bit) extendSieve_shiftleft (bitstorage, source
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 11562              		.loc 1 689 13 view .LVU3989
 11563 4032 0F823005 		jb	.L1076	#,
 11563      0000
 11564              	.LVL646:
 690:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 11565              		.loc 1 690 10 is_stmt 1 view .LVU3990
 11566              	# sieve_extend.c:690:     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, 
 690:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 11567              		.loc 1 690 13 is_stmt 0 view .LVU3991
 11568 4038 0F862005 		jbe	.L754	#,
 11568      0000
 690:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 11569              		.loc 1 690 37 is_stmt 1 view .LVU3992
 11570 403e E89DC6FF 		call	extendSieve_shiftright_ivdep	#
 11570      FF
 11571              	.LVL647:
 11572              	.L752:
 690:sieve_extend.c ****     else                            extendSieve_aligned   (bitstorage, source_start, size, destinat
 11573              		.loc 1 690 37 is_stmt 0 view .LVU3993
 11574              	.LBE559:
 11575              	.LBE562:
 777:sieve_extend.c **** 
 11576              		.loc 1 777 5 is_stmt 1 view .LVU3994
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11577              		.loc 1 780 5 view .LVU3995
 11578              	.LBB563:
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11579              		.loc 1 780 10 view .LVU3996
 11580              	# sieve_extend.c:780:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11581              		.loc 1 780 38 is_stmt 0 view .LVU3997
 11582 4043 4C8B5C24 		mov	r11, QWORD PTR 40[rsp]	# blocksize, %sfp
 11582      28
GAS LISTING /tmp/ccfflXEb.s 			page 313


 11583              	# sieve_extend.c:780:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11584              		.loc 1 780 83 view .LVU3998
 11585 4048 488B7C24 		mov	rdi, QWORD PTR 32[rsp]	# <retval>, %sfp
 11585      20
 11586              	# sieve_extend.c:780:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11587              		.loc 1 780 20 view .LVU3999
 11588 404d 48C74424 		mov	QWORD PTR 8[rsp], 0	# %sfp,
 11588      08000000 
 11588      00
 11589              	# sieve_extend.c:780:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11590              		.loc 1 780 38 view .LVU4000
 11591 4056 4983EB01 		sub	r11, 1	# block_stop,
 11592              	.LVL648:
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11593              		.loc 1 780 63 is_stmt 1 view .LVU4001
 11594              	# sieve_extend.c:780:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 11595              		.loc 1 780 83 is_stmt 0 view .LVU4002
 11596 405a 488B5708 		mov	rdx, QWORD PTR 8[rdi]	# _8, sieve_97->bits
 11597              	.LVL649:
 11598 405e 6690     		.p2align 4
 11599              		.p2align 3
 11600              	.L758:
 11601              	.LBB564:
 781:sieve_extend.c ****         counter_t prime = searchBitFalse(bitstorage, startprime);
 11602              		.loc 1 781 9 is_stmt 1 view .LVU4003
 11603              	.LBB565:
 11604              	.LBB566:
 11605              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11606              		.loc 1 119 11 is_stmt 0 view .LVU4004
 11607 4060 4C8B7424 		mov	r14, QWORD PTR 64[rsp]	# _832, %sfp
 11607      40
 11608 4065 4C39DA   		cmp	rdx, r11	# _8, block_stop
 11609 4068 488B4C24 		mov	rcx, QWORD PTR 56[rsp]	# _829, %sfp
 11609      38
 11610 406d 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# index, %sfp
 11610      30
 11611 4072 4C0F46DA 		cmovbe	r11, rdx	# _8,, block_stop
 11612              	.LVL650:
 119:sieve_extend.c ****     return index;
 11613              		.loc 1 119 11 view .LVU4005
 11614 4076 4C891C24 		mov	QWORD PTR [rsp], r11	# %sfp, block_stop
 11615              	.LVL651:
 119:sieve_extend.c ****     return index;
 11616              		.loc 1 119 11 view .LVU4006
 11617              	.LBE566:
 11618              	.LBE565:
 782:sieve_extend.c ****         sieve_block_stripe(bitstorage, block_start, block_stop, prime);
 11619              		.loc 1 782 9 is_stmt 1 view .LVU4007
 11620              	.LBB568:
 11621              	.LBI565:
 118:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 11622              		.loc 1 118 25 view .LVU4008
GAS LISTING /tmp/ccfflXEb.s 			page 314


 11623              	.LBB567:
 119:sieve_extend.c ****     return index;
 11624              		.loc 1 119 5 view .LVU4009
 119:sieve_extend.c ****     return index;
 11625              		.loc 1 119 11 view .LVU4010
 11626 407a 49850E   		test	QWORD PTR [r14], rcx	# MEM[(uint64_t *)prephitmp_837], _829
 11627 407d 0F84BD00 		je	.L755	#,
 11627      0000
 11628              	.LVL652:
 11629              	.L756:
 119:sieve_extend.c ****     return index;
 11630              		.loc 1 119 60 view .LVU4011
 11631              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11632              		.loc 1 119 65 is_stmt 0 view .LVU4012
 11633 4083 4D8D6801 		lea	r13, 1[r8]	# tmp539,
 11634              	.LVL653:
 11635              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11636              		.loc 1 119 23 view .LVU4013
 11637 4087 4D89E9   		mov	r9, r13	# tmp476, index
 11638              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11639              		.loc 1 119 65 view .LVU4014
 11640 408a 4D89E8   		mov	r8, r13	# index, tmp539
 119:sieve_extend.c ****     return index;
 11641              		.loc 1 119 11 is_stmt 1 view .LVU4015
 11642              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11643              		.loc 1 119 23 is_stmt 0 view .LVU4016
 11644 408d 49C1E906 		shr	r9, 6	# tmp476,
 11645              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11646              		.loc 1 119 12 view .LVU4017
 11647 4091 4F8B1CCF 		mov	r11, QWORD PTR [r15+r9*8]	# *_32, *_32
 11648              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11649              		.loc 1 119 11 view .LVU4018
 11650 4095 4D0FA3EB 		bt	r11, r13	# *_32, index
 11651 4099 0F83A100 		jnc	.L755	#,
 11651      0000
 119:sieve_extend.c ****     return index;
 11652              		.loc 1 119 60 is_stmt 1 view .LVU4019
 11653              	.LVL654:
 11654              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11655              		.loc 1 119 65 is_stmt 0 view .LVU4020
 11656 409f 4983C001 		add	r8, 1	# index,
 11657              	.LVL655:
 119:sieve_extend.c ****     return index;
 11658              		.loc 1 119 11 is_stmt 1 view .LVU4021
 11659              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11660              		.loc 1 119 23 is_stmt 0 view .LVU4022
 11661 40a3 4C89C0   		mov	rax, r8	# tmp613, index
 11662 40a6 48C1E806 		shr	rax, 6	# tmp613,
 11663              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
GAS LISTING /tmp/ccfflXEb.s 			page 315


 119:sieve_extend.c ****     return index;
 11664              		.loc 1 119 12 view .LVU4023
 11665 40aa 498B34C7 		mov	rsi, QWORD PTR [r15+rax*8]	# *_32, *_32
 11666              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11667              		.loc 1 119 11 view .LVU4024
 11668 40ae 4C0FA3C6 		bt	rsi, r8	# *_32, index
 11669 40b2 0F838800 		jnc	.L755	#,
 11669      0000
 119:sieve_extend.c ****     return index;
 11670              		.loc 1 119 60 is_stmt 1 view .LVU4025
 11671              	.LVL656:
 11672              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11673              		.loc 1 119 65 is_stmt 0 view .LVU4026
 11674 40b8 4D8D4502 		lea	r8, 2[r13]	# index,
 11675              	.LVL657:
 119:sieve_extend.c ****     return index;
 11676              		.loc 1 119 11 is_stmt 1 view .LVU4027
 11677              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11678              		.loc 1 119 23 is_stmt 0 view .LVU4028
 11679 40bc 4C89C3   		mov	rbx, r8	# tmp617, index
 11680 40bf 48C1EB06 		shr	rbx, 6	# tmp617,
 11681              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11682              		.loc 1 119 12 view .LVU4029
 11683 40c3 4D8B24DF 		mov	r12, QWORD PTR [r15+rbx*8]	# *_32, *_32
 11684              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11685              		.loc 1 119 11 view .LVU4030
 11686 40c7 4D0FA3C4 		bt	r12, r8	# *_32, index
 11687 40cb 7373     		jnc	.L755	#,
 119:sieve_extend.c ****     return index;
 11688              		.loc 1 119 60 is_stmt 1 view .LVU4031
 11689              	.LVL658:
 11690              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11691              		.loc 1 119 65 is_stmt 0 view .LVU4032
 11692 40cd 4D8D4503 		lea	r8, 3[r13]	# index,
 11693              	.LVL659:
 119:sieve_extend.c ****     return index;
 11694              		.loc 1 119 11 is_stmt 1 view .LVU4033
 11695              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11696              		.loc 1 119 23 is_stmt 0 view .LVU4034
 11697 40d1 4C89C5   		mov	rbp, r8	# tmp621, index
 11698 40d4 48C1ED06 		shr	rbp, 6	# tmp621,
 11699              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11700              		.loc 1 119 12 view .LVU4035
 11701 40d8 4D8B14EF 		mov	r10, QWORD PTR [r15+rbp*8]	# *_32, *_32
 11702              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11703              		.loc 1 119 11 view .LVU4036
 11704 40dc 4D0FA3C2 		bt	r10, r8	# *_32, index
 11705 40e0 735E     		jnc	.L755	#,
GAS LISTING /tmp/ccfflXEb.s 			page 316


 119:sieve_extend.c ****     return index;
 11706              		.loc 1 119 60 is_stmt 1 view .LVU4037
 11707              	.LVL660:
 11708              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11709              		.loc 1 119 65 is_stmt 0 view .LVU4038
 11710 40e2 4D8D4504 		lea	r8, 4[r13]	# index,
 11711              	.LVL661:
 119:sieve_extend.c ****     return index;
 11712              		.loc 1 119 11 is_stmt 1 view .LVU4039
 11713              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11714              		.loc 1 119 23 is_stmt 0 view .LVU4040
 11715 40e6 4C89C7   		mov	rdi, r8	# tmp625, index
 11716 40e9 48C1EF06 		shr	rdi, 6	# tmp625,
 11717              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11718              		.loc 1 119 12 view .LVU4041
 11719 40ed 4D8B34FF 		mov	r14, QWORD PTR [r15+rdi*8]	# *_32, *_32
 11720              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11721              		.loc 1 119 11 view .LVU4042
 11722 40f1 4D0FA3C6 		bt	r14, r8	# *_32, index
 11723 40f5 7349     		jnc	.L755	#,
 119:sieve_extend.c ****     return index;
 11724              		.loc 1 119 60 is_stmt 1 view .LVU4043
 11725              	.LVL662:
 11726              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11727              		.loc 1 119 65 is_stmt 0 view .LVU4044
 11728 40f7 4D8D4505 		lea	r8, 5[r13]	# index,
 11729              	.LVL663:
 119:sieve_extend.c ****     return index;
 11730              		.loc 1 119 11 is_stmt 1 view .LVU4045
 11731              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11732              		.loc 1 119 23 is_stmt 0 view .LVU4046
 11733 40fb 4C89C1   		mov	rcx, r8	# tmp629, index
 11734 40fe 48C1E906 		shr	rcx, 6	# tmp629,
 11735              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11736              		.loc 1 119 12 view .LVU4047
 11737 4102 4D8B0CCF 		mov	r9, QWORD PTR [r15+rcx*8]	# *_32, *_32
 11738              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11739              		.loc 1 119 11 view .LVU4048
 11740 4106 4D0FA3C1 		bt	r9, r8	# *_32, index
 11741 410a 7334     		jnc	.L755	#,
 119:sieve_extend.c ****     return index;
 11742              		.loc 1 119 60 is_stmt 1 view .LVU4049
 11743              	.LVL664:
 11744              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11745              		.loc 1 119 65 is_stmt 0 view .LVU4050
 11746 410c 4D8D4506 		lea	r8, 6[r13]	# index,
 11747              	.LVL665:
 119:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccfflXEb.s 			page 317


 11748              		.loc 1 119 11 is_stmt 1 view .LVU4051
 11749              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11750              		.loc 1 119 23 is_stmt 0 view .LVU4052
 11751 4110 4D89C3   		mov	r11, r8	# tmp633, index
 11752 4113 49C1EB06 		shr	r11, 6	# tmp633,
 11753              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11754              		.loc 1 119 12 view .LVU4053
 11755 4117 4B8B04DF 		mov	rax, QWORD PTR [r15+r11*8]	# *_32, *_32
 11756              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11757              		.loc 1 119 11 view .LVU4054
 11758 411b 4C0FA3C0 		bt	rax, r8	# *_32, index
 11759 411f 731F     		jnc	.L755	#,
 119:sieve_extend.c ****     return index;
 11760              		.loc 1 119 60 is_stmt 1 view .LVU4055
 11761              	.LVL666:
 11762              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11763              		.loc 1 119 65 is_stmt 0 view .LVU4056
 11764 4121 4D8D4507 		lea	r8, 7[r13]	# index,
 11765              	.LVL667:
 119:sieve_extend.c ****     return index;
 11766              		.loc 1 119 11 is_stmt 1 view .LVU4057
 11767              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11768              		.loc 1 119 23 is_stmt 0 view .LVU4058
 11769 4125 4D89C5   		mov	r13, r8	# tmp637, index
 11770 4128 49C1ED06 		shr	r13, 6	# tmp637,
 11771              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11772              		.loc 1 119 12 view .LVU4059
 11773 412c 4B8B34EF 		mov	rsi, QWORD PTR [r15+r13*8]	# *_32, *_32
 11774              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 11775              		.loc 1 119 11 view .LVU4060
 11776 4130 4C0FA3C6 		bt	rsi, r8	# *_32, index
 11777 4134 0F8249FF 		jc	.L756	#,
 11777      FFFF
 11778              	.LVL668:
 11779 413a 660F1F44 		.p2align 4
 11779      0000
 11780              		.p2align 3
 11781              	.L755:
 120:sieve_extend.c **** }
 11782              		.loc 1 120 5 is_stmt 1 view .LVU4061
 120:sieve_extend.c **** }
 11783              		.loc 1 120 5 is_stmt 0 view .LVU4062
 11784              	.LBE567:
 11785              	.LBE568:
 783:sieve_extend.c ****     } 
 11786              		.loc 1 783 9 is_stmt 1 view .LVU4063
 11787              	.LBB569:
 11788              	.LBI569:
 694:sieve_extend.c ****     counter_t prime = prime_start;
 11789              		.loc 1 694 13 view .LVU4064
GAS LISTING /tmp/ccfflXEb.s 			page 318


 11790              	.LBB570:
 695:sieve_extend.c ****     counter_t start = 0;
 11791              		.loc 1 695 5 view .LVU4065
 696:sieve_extend.c ****     counter_t step  = prime * 2 + 1;
 11792              		.loc 1 696 5 view .LVU4066
 697:sieve_extend.c **** 
 11793              		.loc 1 697 5 view .LVU4067
 11794              	# sieve_extend.c:697:     counter_t step  = prime * 2 + 1;
 697:sieve_extend.c **** 
 11795              		.loc 1 697 15 is_stmt 0 view .LVU4068
 11796 4140 4F8D5400 		lea	r10, 1[r8+r8]	# step,
 11796      01
 11797              	.LVL669:
 699:sieve_extend.c ****     
 11798              		.loc 1 699 5 is_stmt 1 view .LVU4069
 701:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11799              		.loc 1 701 5 view .LVU4070
 701:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11800              		.loc 1 701 11 view .LVU4071
 11801              	# sieve_extend.c:701:     while (prime*step <= block_stop) {
 701:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11802              		.loc 1 701 17 is_stmt 0 view .LVU4072
 11803 4145 4C89C3   		mov	rbx, r8	# tmp482, index
 11804 4148 490FAFDA 		imul	rbx, r10	# tmp482, step
 11805              	# sieve_extend.c:701:     while (prime*step <= block_stop) {
 701:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 11806              		.loc 1 701 11 view .LVU4073
 11807 414c 48391C24 		cmp	QWORD PTR [rsp], rbx	# %sfp, tmp482
 11808 4150 0F828402 		jb	.L775	#,
 11808      0000
 11809              	.LBB571:
 11810              	.LBB572:
 11811              	.LBB573:
 11812              	.LBB574:
 11813              	.LBB575:
 11814              	# sieve_extend.c:169:    const counter_t range_stop_word = wordindex(range_stop);
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11815              		.loc 1 169 20 view .LVU4074
 11816 4156 488B1424 		mov	rdx, QWORD PTR [rsp]	# block_stop, %sfp
 11817              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 11818              		.loc 1 189 29 view .LVU4075
 11819 415a 48C7C5FF 		mov	rbp, -1	# tmp1034,
 11819      FFFFFF
 11820              	# sieve_extend.c:169:    const counter_t range_stop_word = wordindex(range_stop);
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11821              		.loc 1 169 20 view .LVU4076
 11822 4161 4989D4   		mov	r12, rdx	# range_stop_word, block_stop
 11823              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 11824              		.loc 1 189 29 view .LVU4077
 11825 4164 F7D2     		not	edx	# tmp484
 11826              	# sieve_extend.c:169:    const counter_t range_stop_word = wordindex(range_stop);
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11827              		.loc 1 169 20 view .LVU4078
 11828 4166 49C1EC06 		shr	r12, 6	# range_stop_word,
 11829              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
GAS LISTING /tmp/ccfflXEb.s 			page 319


 189:sieve_extend.c ****    }
 11830              		.loc 1 189 29 view .LVU4079
 11831 416a C4E2EBF7 		shrx	rdi, rbp, rdx	# _407, tmp1034, tmp484
 11831      FD
 11832              	# sieve_extend.c:169:    const counter_t range_stop_word = wordindex(range_stop);
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11833              		.loc 1 169 20 view .LVU4080
 11834 416f 4C896424 		mov	QWORD PTR 24[rsp], r12	# %sfp, range_stop_word
 11834      18
 11835              	# sieve_extend.c:183:    register const bitword_t* __restrict range_stop_ptr = &bitstorage[(range_s
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 11836              		.loc 1 183 41 view .LVU4081
 11837 4174 4B8D1CE7 		lea	rbx, [r15+r12*8]	# range_stop_ptr,
 11838              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 11839              		.loc 1 189 29 view .LVU4082
 11840 4178 48897C24 		mov	QWORD PTR 16[rsp], rdi	# %sfp, _407
 11840      10
 11841              	.LVL670:
 11842 417d 0F1F00   		.p2align 4
 11843              		.p2align 3
 11844              	.L774:
 189:sieve_extend.c ****    }
 11845              		.loc 1 189 29 view .LVU4083
 11846              	.LBE575:
 11847              	.LBE574:
 11848              	.LBE573:
 11849              	.LBE572:
 11850              	.LBE571:
 702:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 11851              		.loc 1 702 9 is_stmt 1 view .LVU4084
 11852              	# sieve_extend.c:702:         if likely(block_start >= (prime + 1)) 
 702:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 11853              		.loc 1 702 12 is_stmt 0 view .LVU4085
 11854 4180 488B4424 		mov	rax, QWORD PTR 8[rsp]	# block_start, %sfp
 11854      08
 11855 4185 498D6801 		lea	rbp, 1[r8]	# _298,
 11856 4189 4839E8   		cmp	rax, rbp	# block_start, _298
 11857 418c 0F829603 		jb	.L760	#,
 11857      0000
 703:sieve_extend.c ****         else 
 11858              		.loc 1 703 13 is_stmt 1 view .LVU4086
 11859              	# sieve_extend.c:703:             start = block_start + prime + prime - ((block_start + prime) % st
 703:sieve_extend.c ****         else 
 11860              		.loc 1 703 33 is_stmt 0 view .LVU4087
 11861 4192 4C01C0   		add	rax, r8	# _302, index
 11862              	# sieve_extend.c:703:             start = block_start + prime + prime - ((block_start + prime) % st
 703:sieve_extend.c ****         else 
 11863              		.loc 1 703 74 view .LVU4088
 11864 4195 31D2     		xor	edx, edx	# tmp489
 11865              	# sieve_extend.c:703:             start = block_start + prime + prime - ((block_start + prime) % st
 703:sieve_extend.c ****         else 
 11866              		.loc 1 703 41 view .LVU4089
 11867 4197 4A8D3400 		lea	rsi, [rax+r8]	# tmp487,
 11868              	# sieve_extend.c:703:             start = block_start + prime + prime - ((block_start + prime) % st
 703:sieve_extend.c ****         else 
 11869              		.loc 1 703 74 view .LVU4090
GAS LISTING /tmp/ccfflXEb.s 			page 320


 11870 419b 49F7F2   		div	r10	# step
 11871              	# sieve_extend.c:703:             start = block_start + prime + prime - ((block_start + prime) % st
 703:sieve_extend.c ****         else 
 11872              		.loc 1 703 19 view .LVU4091
 11873 419e 4829D6   		sub	rsi, rdx	# index, tmp489
 11874              	.LVL671:
 11875              	.L761:
 707:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 11876              		.loc 1 707 9 is_stmt 1 view .LVU4092
 11877 41a1 4989ED   		mov	r13, rbp	# tmp492, _298
 11878 41a4 49C1ED06 		shr	r13, 6	# tmp492,
 11879 41a8 49C1E503 		sal	r13, 3	# _783,
 11880              	# sieve_extend.c:707:         if unlikely(step < VECTORSTEP_FASTER) {
 707:sieve_extend.c ****             setBitsTrue_largeRange_vector(bitstorage, start, step, block_stop);
 11881              		.loc 1 707 12 is_stmt 0 view .LVU4093
 11882 41ac 4C391500 		cmp	QWORD PTR global_VECTORSTEP_FASTER[rip], r10	# global_VECTORSTEP_FASTER, step
 11882      000000
 11883 41b3 4F8D242F 		lea	r12, [r15+r13]	# _784,
 11884 41b7 0F877B02 		ja	.L1077	#,
 11884      0000
 712:sieve_extend.c ****             prime = searchBitFalse_longRange(bitstorage, prime+1 );
 11885              		.loc 1 712 13 is_stmt 1 view .LVU4094
 11886              	.LVL672:
 11887              	.LBB586:
 11888              	.LBI571:
 299:sieve_extend.c ****     debug printf("Setting bits step %ju in %ju bit range (%ju-%ju) using largerange (%ju occurances
 11889              		.loc 1 299 20 view .LVU4095
 11890              	.LBB584:
 300:sieve_extend.c ****     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * step;
 11891              		.loc 1 300 5 view .LVU4096
 301:sieve_extend.c **** 
 11892              		.loc 1 301 5 view .LVU4097
 11893              	# sieve_extend.c:301:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 301:sieve_extend.c **** 
 11894              		.loc 1 301 74 is_stmt 0 view .LVU4098
 11895 41bd 4D89D3   		mov	r11, r10	# tmp502, step
 11896 41c0 49C1E306 		sal	r11, 6	# tmp502,
 11897              	# sieve_extend.c:301:     const counter_t range_stop_unique =  range_start + WORD_SIZE_counter * st
 301:sieve_extend.c **** 
 11898              		.loc 1 301 21 view .LVU4099
 11899 41c4 4901F3   		add	r11, rsi	# range_stop_unique, index
 11900              	.LVL673:
 11901              	.LBB582:
 305:sieve_extend.c ****         #if __APPLE__
 11902              		.loc 1 305 10 is_stmt 1 view .LVU4100
 305:sieve_extend.c ****         #if __APPLE__
 11903              		.loc 1 305 50 view .LVU4101
 11904              	# sieve_extend.c:305:     for (register counter_t index = range_start; index < range_stop_unique; i
 305:sieve_extend.c ****         #if __APPLE__
 11905              		.loc 1 305 5 is_stmt 0 view .LVU4102
 11906 41c7 4C39DE   		cmp	rsi, r11	# index, range_stop_unique
 11907 41ca 0F83C501 		jnb	.L773	#,
 11907      0000
 11908              	.LBB579:
 11909              	.LBB576:
 11910              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
GAS LISTING /tmp/ccfflXEb.s 			page 321


 11911              		.loc 1 171 135 view .LVU4103
 11912 41d0 4C8B7424 		mov	r14, QWORD PTR 24[rsp]	# range_stop_word, %sfp
 11912      18
 11913              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 11914              		.loc 1 171 112 view .LVU4104
 11915 41d5 4F8D0492 		lea	r8, [r10+r10*4]	# tmp511,
 11916              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11917              		.loc 1 176 44 view .LVU4105
 11918 41d9 4A8D14D5 		lea	rdx, 0[0+r10*8]	# _375,
 11918      00000000 
 11919              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 11920              		.loc 1 171 135 view .LVU4106
 11921 41e1 4C89F1   		mov	rcx, r14	# tmp513, range_stop_word
 11922 41e4 4C29C1   		sub	rcx, r8	# tmp513, tmp511
 11923              	# sieve_extend.c:171:    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(
 171:sieve_extend.c **** 
 11924              		.loc 1 171 53 view .LVU4107
 11925 41e7 4D39C6   		cmp	r14, r8	# range_stop_word, tmp511
 11926 41ea 4D8D0CCF 		lea	r9, [r15+rcx*8]	# tmp515,
 11927 41ee 4D89D6   		mov	r14, r10	# _351, step
 11928 41f1 4D0F46CF 		cmovbe	r9, r15	# _102,, fast_loop_ptr
 11929 41f5 49C1E003 		sal	r8, 3	# tmp519,
 11930 41f9 49C1E604 		sal	r14, 4	# _351,
 11931              	.LVL674:
 11932 41fd 0F1F00   		.p2align 4
 11933              		.p2align 3
 11934              	.L772:
 171:sieve_extend.c **** 
 11935              		.loc 1 171 53 view .LVU4108
 11936              	.LBE576:
 11937              	.LBE579:
 309:sieve_extend.c ****         #endif
 11938              		.loc 1 309 13 is_stmt 1 view .LVU4109
 11939 4200 4889F0   		mov	rax, rsi	# tmp522, index
 11940 4203 BF010000 		mov	edi, 1	# tmp1044,
 11940      00
 11941 4208 48C1E806 		shr	rax, 6	# tmp522,
 11942 420c C4E2C9F7 		shlx	rcx, rdi, rsi	# _360, tmp1044, index
 11942      CF
 11943              	.LVL675:
 11944              	.LBB580:
 11945              	.LBI574:
 168:sieve_extend.c ****    const counter_t range_stop_word = wordindex(range_stop);
 11946              		.loc 1 168 20 view .LVU4110
 11947              	.LBB577:
 169:sieve_extend.c ****    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(&bitstorage[index_word
 11948              		.loc 1 169 4 view .LVU4111
 170:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 11949              		.loc 1 170 4 view .LVU4112
 11950              	# sieve_extend.c:170:    register bitword_t* __restrict index_ptr      =  __builtin_assume_aligned(
 170:sieve_extend.c ****    register bitword_t* __restrict fast_loop_ptr  =  __builtin_assume_aligned(&bitstorage[((range_st
 11951              		.loc 1 170 78 is_stmt 0 view .LVU4113
 11952 4211 498D04C7 		lea	rax, [r15+rax*8]	# index_ptr,
 11953              	.LVL676:
GAS LISTING /tmp/ccfflXEb.s 			page 322


 171:sieve_extend.c **** 
 11954              		.loc 1 171 4 is_stmt 1 view .LVU4114
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11955              		.loc 1 175 10 view .LVU4115
 11956 4215 4C39C8   		cmp	rax, r9	# index_ptr, fast_loop_ptr
 11957 4218 0F830201 		jnb	.L767	#,
 11957      0000
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11958              		.loc 1 175 10 is_stmt 0 view .LVU4116
 11959 421e 4A8D3C30 		lea	rdi, [rax+r14]	# ivtmp.507,
 11960              	.L768:
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11961              		.loc 1 176 8 is_stmt 1 view .LVU4117
 11962              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11963              		.loc 1 176 19 is_stmt 0 view .LVU4118
 11964 4222 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_500, offset: 0B], _360
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11965              		.loc 1 176 35 is_stmt 1 view .LVU4119
 11966              	.LVL677:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11967              		.loc 1 177 8 view .LVU4120
 11968              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11969              		.loc 1 177 19 is_stmt 0 view .LVU4121
 11970 4225 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_500, index: _375, offset: 0B], _360
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11971              		.loc 1 177 35 is_stmt 1 view .LVU4122
 11972              	.LVL678:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11973              		.loc 1 178 8 view .LVU4123
 11974              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11975              		.loc 1 178 19 is_stmt 0 view .LVU4124
 11976 4229 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _812, offset: 0B], _360
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11977              		.loc 1 178 35 is_stmt 1 view .LVU4125
 11978              	.LVL679:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11979              		.loc 1 179 8 view .LVU4126
 11980              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11981              		.loc 1 179 19 is_stmt 0 view .LVU4127
 11982 422c 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _812, index: _375, offset: 0B], _360
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11983              		.loc 1 179 35 is_stmt 1 view .LVU4128
 11984              	.LVL680:
 180:sieve_extend.c ****    }
 11985              		.loc 1 180 8 view .LVU4129
 11986 4230 4C01C7   		add	rdi, r8	# ivtmp.507, tmp519
 11987              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 11988              		.loc 1 180 19 is_stmt 0 view .LVU4130
 11989 4233 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_500, index: _375, step: 4, offset: 0B], _360
 180:sieve_extend.c ****    }
 11990              		.loc 1 180 35 is_stmt 1 view .LVU4131
 11991 4237 4C01C0   		add	rax, r8	# index_ptr, tmp519
GAS LISTING /tmp/ccfflXEb.s 			page 323


 11992              	.LVL681:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11993              		.loc 1 175 10 view .LVU4132
 11994 423a 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 11995 423d 0F86DD00 		jbe	.L767	#,
 11995      0000
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11996              		.loc 1 176 8 view .LVU4133
 11997              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 11998              		.loc 1 176 19 is_stmt 0 view .LVU4134
 11999 4243 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_500, offset: 0B], _360
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12000              		.loc 1 176 35 is_stmt 1 view .LVU4135
 12001              	.LVL682:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12002              		.loc 1 177 8 view .LVU4136
 12003              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12004              		.loc 1 177 19 is_stmt 0 view .LVU4137
 12005 4246 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_500, index: _375, offset: 0B], _360
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12006              		.loc 1 177 35 is_stmt 1 view .LVU4138
 12007              	.LVL683:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12008              		.loc 1 178 8 view .LVU4139
 12009              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12010              		.loc 1 178 19 is_stmt 0 view .LVU4140
 12011 424a 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _812, offset: 0B], _360
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12012              		.loc 1 178 35 is_stmt 1 view .LVU4141
 12013              	.LVL684:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12014              		.loc 1 179 8 view .LVU4142
 12015              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12016              		.loc 1 179 19 is_stmt 0 view .LVU4143
 12017 424d 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _812, index: _375, offset: 0B], _360
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12018              		.loc 1 179 35 is_stmt 1 view .LVU4144
 12019              	.LVL685:
 180:sieve_extend.c ****    }
 12020              		.loc 1 180 8 view .LVU4145
 12021 4251 4C01C7   		add	rdi, r8	# ivtmp.507, tmp519
 12022              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 12023              		.loc 1 180 19 is_stmt 0 view .LVU4146
 12024 4254 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_500, index: _375, step: 4, offset: 0B], _360
 180:sieve_extend.c ****    }
 12025              		.loc 1 180 35 is_stmt 1 view .LVU4147
 12026 4258 4C01C0   		add	rax, r8	# index_ptr, tmp519
 12027              	.LVL686:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12028              		.loc 1 175 10 view .LVU4148
 12029 425b 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12030 425e 0F86BC00 		jbe	.L767	#,
GAS LISTING /tmp/ccfflXEb.s 			page 324


 12030      0000
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12031              		.loc 1 176 8 view .LVU4149
 12032              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12033              		.loc 1 176 19 is_stmt 0 view .LVU4150
 12034 4264 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_500, offset: 0B], _360
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12035              		.loc 1 176 35 is_stmt 1 view .LVU4151
 12036              	.LVL687:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12037              		.loc 1 177 8 view .LVU4152
 12038              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12039              		.loc 1 177 19 is_stmt 0 view .LVU4153
 12040 4267 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_500, index: _375, offset: 0B], _360
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12041              		.loc 1 177 35 is_stmt 1 view .LVU4154
 12042              	.LVL688:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12043              		.loc 1 178 8 view .LVU4155
 12044              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12045              		.loc 1 178 19 is_stmt 0 view .LVU4156
 12046 426b 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _812, offset: 0B], _360
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12047              		.loc 1 178 35 is_stmt 1 view .LVU4157
 12048              	.LVL689:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12049              		.loc 1 179 8 view .LVU4158
 12050              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12051              		.loc 1 179 19 is_stmt 0 view .LVU4159
 12052 426e 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _812, index: _375, offset: 0B], _360
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12053              		.loc 1 179 35 is_stmt 1 view .LVU4160
 12054              	.LVL690:
 180:sieve_extend.c ****    }
 12055              		.loc 1 180 8 view .LVU4161
 12056 4272 4C01C7   		add	rdi, r8	# ivtmp.507, tmp519
 12057              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 12058              		.loc 1 180 19 is_stmt 0 view .LVU4162
 12059 4275 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_500, index: _375, step: 4, offset: 0B], _360
 180:sieve_extend.c ****    }
 12060              		.loc 1 180 35 is_stmt 1 view .LVU4163
 12061 4279 4C01C0   		add	rax, r8	# index_ptr, tmp519
 12062              	.LVL691:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12063              		.loc 1 175 10 view .LVU4164
 12064 427c 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12065 427f 0F869B00 		jbe	.L767	#,
 12065      0000
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12066              		.loc 1 176 8 view .LVU4165
 12067              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 325


 12068              		.loc 1 176 19 is_stmt 0 view .LVU4166
 12069 4285 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_500, offset: 0B], _360
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12070              		.loc 1 176 35 is_stmt 1 view .LVU4167
 12071              	.LVL692:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12072              		.loc 1 177 8 view .LVU4168
 12073              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12074              		.loc 1 177 19 is_stmt 0 view .LVU4169
 12075 4288 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_500, index: _375, offset: 0B], _360
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12076              		.loc 1 177 35 is_stmt 1 view .LVU4170
 12077              	.LVL693:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12078              		.loc 1 178 8 view .LVU4171
 12079              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12080              		.loc 1 178 19 is_stmt 0 view .LVU4172
 12081 428c 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _812, offset: 0B], _360
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12082              		.loc 1 178 35 is_stmt 1 view .LVU4173
 12083              	.LVL694:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12084              		.loc 1 179 8 view .LVU4174
 12085              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12086              		.loc 1 179 19 is_stmt 0 view .LVU4175
 12087 428f 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _812, index: _375, offset: 0B], _360
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12088              		.loc 1 179 35 is_stmt 1 view .LVU4176
 12089              	.LVL695:
 180:sieve_extend.c ****    }
 12090              		.loc 1 180 8 view .LVU4177
 12091 4293 4C01C7   		add	rdi, r8	# ivtmp.507, tmp519
 12092              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 12093              		.loc 1 180 19 is_stmt 0 view .LVU4178
 12094 4296 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_500, index: _375, step: 4, offset: 0B], _360
 180:sieve_extend.c ****    }
 12095              		.loc 1 180 35 is_stmt 1 view .LVU4179
 12096 429a 4C01C0   		add	rax, r8	# index_ptr, tmp519
 12097              	.LVL696:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12098              		.loc 1 175 10 view .LVU4180
 12099 429d 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12100 42a0 767E     		jbe	.L767	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12101              		.loc 1 176 8 view .LVU4181
 12102              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12103              		.loc 1 176 19 is_stmt 0 view .LVU4182
 12104 42a2 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_500, offset: 0B], _360
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12105              		.loc 1 176 35 is_stmt 1 view .LVU4183
 12106              	.LVL697:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 326


 12107              		.loc 1 177 8 view .LVU4184
 12108              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12109              		.loc 1 177 19 is_stmt 0 view .LVU4185
 12110 42a5 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_500, index: _375, offset: 0B], _360
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12111              		.loc 1 177 35 is_stmt 1 view .LVU4186
 12112              	.LVL698:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12113              		.loc 1 178 8 view .LVU4187
 12114              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12115              		.loc 1 178 19 is_stmt 0 view .LVU4188
 12116 42a9 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _812, offset: 0B], _360
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12117              		.loc 1 178 35 is_stmt 1 view .LVU4189
 12118              	.LVL699:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12119              		.loc 1 179 8 view .LVU4190
 12120              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12121              		.loc 1 179 19 is_stmt 0 view .LVU4191
 12122 42ac 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _812, index: _375, offset: 0B], _360
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12123              		.loc 1 179 35 is_stmt 1 view .LVU4192
 12124              	.LVL700:
 180:sieve_extend.c ****    }
 12125              		.loc 1 180 8 view .LVU4193
 12126 42b0 4C01C7   		add	rdi, r8	# ivtmp.507, tmp519
 12127              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 12128              		.loc 1 180 19 is_stmt 0 view .LVU4194
 12129 42b3 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_500, index: _375, step: 4, offset: 0B], _360
 180:sieve_extend.c ****    }
 12130              		.loc 1 180 35 is_stmt 1 view .LVU4195
 12131 42b7 4C01C0   		add	rax, r8	# index_ptr, tmp519
 12132              	.LVL701:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12133              		.loc 1 175 10 view .LVU4196
 12134 42ba 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12135 42bd 7661     		jbe	.L767	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12136              		.loc 1 176 8 view .LVU4197
 12137              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12138              		.loc 1 176 19 is_stmt 0 view .LVU4198
 12139 42bf 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_500, offset: 0B], _360
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12140              		.loc 1 176 35 is_stmt 1 view .LVU4199
 12141              	.LVL702:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12142              		.loc 1 177 8 view .LVU4200
 12143              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12144              		.loc 1 177 19 is_stmt 0 view .LVU4201
 12145 42c2 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_500, index: _375, offset: 0B], _360
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 327


 12146              		.loc 1 177 35 is_stmt 1 view .LVU4202
 12147              	.LVL703:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12148              		.loc 1 178 8 view .LVU4203
 12149              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12150              		.loc 1 178 19 is_stmt 0 view .LVU4204
 12151 42c6 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _812, offset: 0B], _360
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12152              		.loc 1 178 35 is_stmt 1 view .LVU4205
 12153              	.LVL704:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12154              		.loc 1 179 8 view .LVU4206
 12155              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12156              		.loc 1 179 19 is_stmt 0 view .LVU4207
 12157 42c9 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _812, index: _375, offset: 0B], _360
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12158              		.loc 1 179 35 is_stmt 1 view .LVU4208
 12159              	.LVL705:
 180:sieve_extend.c ****    }
 12160              		.loc 1 180 8 view .LVU4209
 12161 42cd 4C01C7   		add	rdi, r8	# ivtmp.507, tmp519
 12162              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 12163              		.loc 1 180 19 is_stmt 0 view .LVU4210
 12164 42d0 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_500, index: _375, step: 4, offset: 0B], _360
 180:sieve_extend.c ****    }
 12165              		.loc 1 180 35 is_stmt 1 view .LVU4211
 12166 42d4 4C01C0   		add	rax, r8	# index_ptr, tmp519
 12167              	.LVL706:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12168              		.loc 1 175 10 view .LVU4212
 12169 42d7 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12170 42da 7644     		jbe	.L767	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12171              		.loc 1 176 8 view .LVU4213
 12172              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12173              		.loc 1 176 19 is_stmt 0 view .LVU4214
 12174 42dc 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_500, offset: 0B], _360
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12175              		.loc 1 176 35 is_stmt 1 view .LVU4215
 12176              	.LVL707:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12177              		.loc 1 177 8 view .LVU4216
 12178              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12179              		.loc 1 177 19 is_stmt 0 view .LVU4217
 12180 42df 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_500, index: _375, offset: 0B], _360
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12181              		.loc 1 177 35 is_stmt 1 view .LVU4218
 12182              	.LVL708:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12183              		.loc 1 178 8 view .LVU4219
 12184              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 328


 12185              		.loc 1 178 19 is_stmt 0 view .LVU4220
 12186 42e3 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _812, offset: 0B], _360
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12187              		.loc 1 178 35 is_stmt 1 view .LVU4221
 12188              	.LVL709:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12189              		.loc 1 179 8 view .LVU4222
 12190              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12191              		.loc 1 179 19 is_stmt 0 view .LVU4223
 12192 42e6 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _812, index: _375, offset: 0B], _360
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12193              		.loc 1 179 35 is_stmt 1 view .LVU4224
 12194              	.LVL710:
 180:sieve_extend.c ****    }
 12195              		.loc 1 180 8 view .LVU4225
 12196 42ea 4C01C7   		add	rdi, r8	# ivtmp.507, tmp519
 12197              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 12198              		.loc 1 180 19 is_stmt 0 view .LVU4226
 12199 42ed 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_500, index: _375, step: 4, offset: 0B], _360
 180:sieve_extend.c ****    }
 12200              		.loc 1 180 35 is_stmt 1 view .LVU4227
 12201 42f1 4C01C0   		add	rax, r8	# index_ptr, tmp519
 12202              	.LVL711:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12203              		.loc 1 175 10 view .LVU4228
 12204 42f4 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12205 42f7 7627     		jbe	.L767	#,
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12206              		.loc 1 176 8 view .LVU4229
 12207              	# sieve_extend.c:176:        *index_ptr |= mask;        index_ptr+=step;
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12208              		.loc 1 176 19 is_stmt 0 view .LVU4230
 12209 42f9 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_500, offset: 0B], _360
 176:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12210              		.loc 1 176 35 is_stmt 1 view .LVU4231
 12211              	.LVL712:
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12212              		.loc 1 177 8 view .LVU4232
 12213              	# sieve_extend.c:177:        *index_ptr |= mask;        index_ptr+=step;
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12214              		.loc 1 177 19 is_stmt 0 view .LVU4233
 12215 42fc 48090C10 		or	QWORD PTR [rax+rdx], rcx	# MEM[base: index_ptr_500, index: _375, offset: 0B], _360
 177:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12216              		.loc 1 177 35 is_stmt 1 view .LVU4234
 12217              	.LVL713:
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12218              		.loc 1 178 8 view .LVU4235
 12219              	# sieve_extend.c:178:        *index_ptr |= mask;        index_ptr+=step;
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12220              		.loc 1 178 19 is_stmt 0 view .LVU4236
 12221 4300 48090F   		or	QWORD PTR [rdi], rcx	# MEM[base: _812, offset: 0B], _360
 178:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12222              		.loc 1 178 35 is_stmt 1 view .LVU4237
 12223              	.LVL714:
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 329


 12224              		.loc 1 179 8 view .LVU4238
 12225              	# sieve_extend.c:179:        *index_ptr |= mask;        index_ptr+=step;
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12226              		.loc 1 179 19 is_stmt 0 view .LVU4239
 12227 4303 48090C17 		or	QWORD PTR [rdi+rdx], rcx	# MEM[base: _812, index: _375, offset: 0B], _360
 179:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12228              		.loc 1 179 35 is_stmt 1 view .LVU4240
 12229              	.LVL715:
 180:sieve_extend.c ****    }
 12230              		.loc 1 180 8 view .LVU4241
 12231 4307 4C01C7   		add	rdi, r8	# ivtmp.507, tmp519
 12232              	# sieve_extend.c:180:        *index_ptr |= mask;        index_ptr+=step;
 180:sieve_extend.c ****    }
 12233              		.loc 1 180 19 is_stmt 0 view .LVU4242
 12234 430a 48090C90 		or	QWORD PTR [rax+rdx*4], rcx	# MEM[base: index_ptr_500, index: _375, step: 4, offset: 0B], _360
 180:sieve_extend.c ****    }
 12235              		.loc 1 180 35 is_stmt 1 view .LVU4243
 12236 430e 4C01C0   		add	rax, r8	# index_ptr, tmp519
 12237              	.LVL716:
 175:sieve_extend.c ****        *index_ptr |= mask;        index_ptr+=step;
 12238              		.loc 1 175 10 view .LVU4244
 12239 4311 4939C1   		cmp	r9, rax	# fast_loop_ptr, index_ptr
 12240 4314 0F8708FF 		ja	.L768	#,
 12240      FFFF
 12241 431a 660F1F44 		.p2align 4
 12241      0000
 12242              		.p2align 3
 12243              	.L767:
 183:sieve_extend.c ****    while likely(index_ptr < range_stop_ptr) {
 12244              		.loc 1 183 4 view .LVU4245
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12245              		.loc 1 184 4 view .LVU4246
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12246              		.loc 1 184 10 view .LVU4247
 12247 4320 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12248 4323 765B     		jbe	.L769	#,
 12249              	.L770:
 185:sieve_extend.c ****    }
 12250              		.loc 1 185 8 view .LVU4248
 12251              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12252              		.loc 1 185 19 is_stmt 0 view .LVU4249
 12253 4325 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _360
 185:sieve_extend.c ****    }
 12254              		.loc 1 185 34 is_stmt 1 view .LVU4250
 12255              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12256              		.loc 1 185 43 is_stmt 0 view .LVU4251
 12257 4328 4801D0   		add	rax, rdx	# index_ptr, _375
 12258              	.LVL717:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12259              		.loc 1 184 10 is_stmt 1 view .LVU4252
 12260 432b 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12261 432e 7650     		jbe	.L769	#,
 185:sieve_extend.c ****    }
 12262              		.loc 1 185 8 view .LVU4253
 12263              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 330


 185:sieve_extend.c ****    }
 12264              		.loc 1 185 19 is_stmt 0 view .LVU4254
 12265 4330 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _360
 185:sieve_extend.c ****    }
 12266              		.loc 1 185 34 is_stmt 1 view .LVU4255
 12267              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12268              		.loc 1 185 43 is_stmt 0 view .LVU4256
 12269 4333 4801D0   		add	rax, rdx	# index_ptr, _375
 12270              	.LVL718:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12271              		.loc 1 184 10 is_stmt 1 view .LVU4257
 12272 4336 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12273 4339 7645     		jbe	.L769	#,
 185:sieve_extend.c ****    }
 12274              		.loc 1 185 8 view .LVU4258
 12275              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12276              		.loc 1 185 19 is_stmt 0 view .LVU4259
 12277 433b 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _360
 185:sieve_extend.c ****    }
 12278              		.loc 1 185 34 is_stmt 1 view .LVU4260
 12279              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12280              		.loc 1 185 43 is_stmt 0 view .LVU4261
 12281 433e 4801D0   		add	rax, rdx	# index_ptr, _375
 12282              	.LVL719:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12283              		.loc 1 184 10 is_stmt 1 view .LVU4262
 12284 4341 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12285 4344 763A     		jbe	.L769	#,
 185:sieve_extend.c ****    }
 12286              		.loc 1 185 8 view .LVU4263
 12287              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12288              		.loc 1 185 19 is_stmt 0 view .LVU4264
 12289 4346 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _360
 185:sieve_extend.c ****    }
 12290              		.loc 1 185 34 is_stmt 1 view .LVU4265
 12291              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12292              		.loc 1 185 43 is_stmt 0 view .LVU4266
 12293 4349 4801D0   		add	rax, rdx	# index_ptr, _375
 12294              	.LVL720:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12295              		.loc 1 184 10 is_stmt 1 view .LVU4267
 12296 434c 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12297 434f 762F     		jbe	.L769	#,
 185:sieve_extend.c ****    }
 12298              		.loc 1 185 8 view .LVU4268
 12299              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12300              		.loc 1 185 19 is_stmt 0 view .LVU4269
 12301 4351 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _360
 185:sieve_extend.c ****    }
 12302              		.loc 1 185 34 is_stmt 1 view .LVU4270
 12303              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
GAS LISTING /tmp/ccfflXEb.s 			page 331


 185:sieve_extend.c ****    }
 12304              		.loc 1 185 43 is_stmt 0 view .LVU4271
 12305 4354 4801D0   		add	rax, rdx	# index_ptr, _375
 12306              	.LVL721:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12307              		.loc 1 184 10 is_stmt 1 view .LVU4272
 12308 4357 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12309 435a 7624     		jbe	.L769	#,
 185:sieve_extend.c ****    }
 12310              		.loc 1 185 8 view .LVU4273
 12311              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12312              		.loc 1 185 19 is_stmt 0 view .LVU4274
 12313 435c 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _360
 185:sieve_extend.c ****    }
 12314              		.loc 1 185 34 is_stmt 1 view .LVU4275
 12315              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12316              		.loc 1 185 43 is_stmt 0 view .LVU4276
 12317 435f 4801D0   		add	rax, rdx	# index_ptr, _375
 12318              	.LVL722:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12319              		.loc 1 184 10 is_stmt 1 view .LVU4277
 12320 4362 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12321 4365 7619     		jbe	.L769	#,
 185:sieve_extend.c ****    }
 12322              		.loc 1 185 8 view .LVU4278
 12323              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12324              		.loc 1 185 19 is_stmt 0 view .LVU4279
 12325 4367 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _360
 185:sieve_extend.c ****    }
 12326              		.loc 1 185 34 is_stmt 1 view .LVU4280
 12327              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12328              		.loc 1 185 43 is_stmt 0 view .LVU4281
 12329 436a 4801D0   		add	rax, rdx	# index_ptr, _375
 12330              	.LVL723:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12331              		.loc 1 184 10 is_stmt 1 view .LVU4282
 12332 436d 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12333 4370 760E     		jbe	.L769	#,
 185:sieve_extend.c ****    }
 12334              		.loc 1 185 8 view .LVU4283
 12335              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12336              		.loc 1 185 19 is_stmt 0 view .LVU4284
 12337 4372 480908   		or	QWORD PTR [rax], rcx	# MEM[base: index_ptr_504, offset: 0B], _360
 185:sieve_extend.c ****    }
 12338              		.loc 1 185 34 is_stmt 1 view .LVU4285
 12339              	# sieve_extend.c:185:        *index_ptr |= mask;       index_ptr+=step;
 185:sieve_extend.c ****    }
 12340              		.loc 1 185 43 is_stmt 0 view .LVU4286
 12341 4375 4801D0   		add	rax, rdx	# index_ptr, _375
 12342              	.LVL724:
 184:sieve_extend.c ****        *index_ptr |= mask;       index_ptr+=step;
 12343              		.loc 1 184 10 is_stmt 1 view .LVU4287
GAS LISTING /tmp/ccfflXEb.s 			page 332


 12344 4378 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12345 437b 77A8     		ja	.L770	#,
 12346 437d 0F1F00   		.p2align 4
 12347              		.p2align 3
 12348              	.L769:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12349              		.loc 1 188 4 view .LVU4288
 12350              	# sieve_extend.c:188:    if (index_ptr == range_stop_ptr) { // index_ptr could also end above range
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12351              		.loc 1 188 7 is_stmt 0 view .LVU4289
 12352 4380 4839C3   		cmp	rbx, rax	# range_stop_ptr, index_ptr
 12353 4383 0F848700 		je	.L1078	#,
 12353      0000
 12354              	.LVL725:
 12355              	.L771:
 188:sieve_extend.c ****       *index_ptr |= (mask & chopmask(range_stop));
 12356              		.loc 1 188 7 view .LVU4290
 12357              	.LBE577:
 12358              	.LBE580:
 305:sieve_extend.c ****         #if __APPLE__
 12359              		.loc 1 305 77 is_stmt 1 view .LVU4291
 12360              	# sieve_extend.c:305:     for (register counter_t index = range_start; index < range_stop_unique; i
 305:sieve_extend.c ****         #if __APPLE__
 12361              		.loc 1 305 83 is_stmt 0 view .LVU4292
 12362 4389 4C01D6   		add	rsi, r10	# index, step
 12363              	.LVL726:
 305:sieve_extend.c ****         #if __APPLE__
 12364              		.loc 1 305 50 is_stmt 1 view .LVU4293
 12365              	# sieve_extend.c:305:     for (register counter_t index = range_start; index < range_stop_unique; i
 305:sieve_extend.c ****         #if __APPLE__
 12366              		.loc 1 305 5 is_stmt 0 view .LVU4294
 12367 438c 4939F3   		cmp	r11, rsi	# range_stop_unique, index
 12368 438f 0F876BFE 		ja	.L772	#,
 12368      FFFF
 12369              	.L773:
 12370              	.LVL727:
 305:sieve_extend.c ****         #if __APPLE__
 12371              		.loc 1 305 5 view .LVU4295
 12372              	.LBE582:
 12373              	.LBE584:
 12374              	.LBE586:
 713:sieve_extend.c ****         }
 12375              		.loc 1 713 13 is_stmt 1 view .LVU4296
 12376              	.LBB587:
 12377              	.LBI587:
 124:sieve_extend.c ****    const bitshift_t index_bit  = bitindex_calc(index);
 12378              		.loc 1 124 25 view .LVU4297
 12379              	.LBB588:
 125:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 12380              		.loc 1 125 4 view .LVU4298
 12381              	# sieve_extend.c:127:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 127:sieve_extend.c ****    index += distance;
 12382              		.loc 1 127 90 is_stmt 0 view .LVU4299
 12383 4395 498B3424 		mov	rsi, QWORD PTR [r12]	# MEM[(uint64_t *)_784], MEM[(uint64_t *)_784]
 12384              	# sieve_extend.c:125:    const bitshift_t index_bit  = bitindex_calc(index);
 125:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 12385              		.loc 1 125 21 view .LVU4300
GAS LISTING /tmp/ccfflXEb.s 			page 333


 12386 4399 4989EA   		mov	r10, rbp	# index_bit, _298
 12387              	.LVL728:
 125:sieve_extend.c ****    register counter_t index_word = wordindex(index);
 12388              		.loc 1 125 21 view .LVU4301
 12389 439c 4183E23F 		and	r10d, 63	# index_bit,
 12390              	.LVL729:
 126:sieve_extend.c ****    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[index_word] >> index_b
 12391              		.loc 1 126 4 is_stmt 1 view .LVU4302
 127:sieve_extend.c ****    index += distance;
 12392              		.loc 1 127 4 view .LVU4303
 12393              	# sieve_extend.c:127:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 127:sieve_extend.c ****    index += distance;
 12394              		.loc 1 127 90 is_stmt 0 view .LVU4304
 12395 43a0 C462ABF7 		shrx	r12, rsi, r10	# tmp504, MEM[(uint64_t *)_784], index_bit
 12395      E6
 12396              	# sieve_extend.c:127:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 127:sieve_extend.c ****    index += distance;
 12397              		.loc 1 127 65 view .LVU4305
 12398 43a5 49F7D4   		not	r12	# tmp506
 12399              	# sieve_extend.c:127:    register bitshift_t distance = (bitshift_t) __builtin_ctzll( ~(bitstorage[
 127:sieve_extend.c ****    index += distance;
 12400              		.loc 1 127 24 view .LVU4306
 12401 43a8 F34D0FBC 		tzcnt	r11, r12	# distance, tmp506
 12401      DC
 12402              	.LVL730:
 128:sieve_extend.c ****    distance += index_bit;
 12403              		.loc 1 128 4 is_stmt 1 view .LVU4307
 12404              	# sieve_extend.c:128:    index += distance;
 128:sieve_extend.c ****    distance += index_bit;
 12405              		.loc 1 128 10 is_stmt 0 view .LVU4308
 12406 43ad 4E8D441D 		lea	r8, 0[rbp+r11]	# index,
 12406      00
 12407              	.LVL731:
 129:sieve_extend.c **** 
 12408              		.loc 1 129 4 is_stmt 1 view .LVU4309
 131:sieve_extend.c ****        index_word++;
 12409              		.loc 1 131 4 view .LVU4310
 131:sieve_extend.c ****        index_word++;
 12410              		.loc 1 131 10 view .LVU4311
 12411              	# sieve_extend.c:129:    distance += index_bit;
 129:sieve_extend.c **** 
 12412              		.loc 1 129 13 is_stmt 0 view .LVU4312
 12413 43b2 4D01D3   		add	r11, r10	# distance, index_bit
 12414              	.LVL732:
 12415              	# sieve_extend.c:131:    while unlikely(distance == WORD_SIZE_bitshift) { // to prevent a bug from 
 131:sieve_extend.c ****        index_word++;
 12416              		.loc 1 131 10 view .LVU4313
 12417 43b5 4983FB40 		cmp	r11, 64	# distance,
 12418 43b9 7465     		je	.L1079	#,
 12419              	.LVL733:
 12420              	.L763:
 131:sieve_extend.c ****        index_word++;
 12421              		.loc 1 131 10 view .LVU4314
 12422              	.LBE588:
 12423              	.LBE587:
 716:sieve_extend.c ****     }
 12424              		.loc 1 716 9 is_stmt 1 view .LVU4315
GAS LISTING /tmp/ccfflXEb.s 			page 334


 12425              	# sieve_extend.c:716:         step  = prime * 2 + 1;
 716:sieve_extend.c ****     }
 12426              		.loc 1 716 15 is_stmt 0 view .LVU4316
 12427 43bb 4F8D5400 		lea	r10, 1[r8+r8]	# step,
 12427      01
 12428              	.LVL734:
 701:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 12429              		.loc 1 701 11 is_stmt 1 view .LVU4317
 12430              	# sieve_extend.c:701:     while (prime*step <= block_stop) {
 701:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 12431              		.loc 1 701 17 is_stmt 0 view .LVU4318
 12432 43c0 4C89C6   		mov	rsi, r8	# tmp530, index
 12433 43c3 490FAFF2 		imul	rsi, r10	# tmp530, step
 12434              	# sieve_extend.c:701:     while (prime*step <= block_stop) {
 701:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 12435              		.loc 1 701 11 view .LVU4319
 12436 43c7 48393424 		cmp	QWORD PTR [rsp], rsi	# %sfp, tmp530
 12437 43cb 0F83AFFD 		jnb	.L774	#,
 12437      FFFF
 12438 43d1 488B5C24 		mov	rbx, QWORD PTR 32[rsp]	# <retval>, %sfp
 12438      20
 12439 43d6 488B5308 		mov	rdx, QWORD PTR 8[rbx]	# _8, sieve_97->bits
 12440              	.L775:
 12441              	.LVL735:
 701:sieve_extend.c ****         if likely(block_start >= (prime + 1)) 
 12442              		.loc 1 701 11 view .LVU4320
 12443              	.LBE570:
 12444              	.LBE569:
 12445              	.LBE564:
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12446              		.loc 1 780 91 is_stmt 1 view .LVU4321
 12447              	# sieve_extend.c:780:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12448              		.loc 1 780 103 is_stmt 0 view .LVU4322
 12449 43da 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# blocksize, %sfp
 12449      28
 12450              	# sieve_extend.c:780:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12451              		.loc 1 780 128 view .LVU4323
 12452 43df 4C8B1C24 		mov	r11, QWORD PTR [rsp]	# block_stop, %sfp
 12453              	# sieve_extend.c:780:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12454              		.loc 1 780 103 view .LVU4324
 12455 43e3 4C014424 		add	QWORD PTR 8[rsp], r8	# %sfp, blocksize
 12455      08
 12456              	.LVL736:
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12457              		.loc 1 780 103 view .LVU4325
 12458 43e8 4C8B6424 		mov	r12, QWORD PTR 8[rsp]	# block_start, %sfp
 12458      08
 12459              	.LVL737:
 12460              	# sieve_extend.c:780:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12461              		.loc 1 780 128 view .LVU4326
 12462 43ed 4D01C3   		add	r11, r8	# block_stop, blocksize
 12463              	.LVL738:
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
GAS LISTING /tmp/ccfflXEb.s 			page 335


 12464              		.loc 1 780 63 is_stmt 1 view .LVU4327
 12465              	# sieve_extend.c:780:     for (counter_t block_start = 0,  block_stop = blocksize-1;block_start <= 
 780:sieve_extend.c ****         if unlikely(block_stop > sieve->bits) block_stop = sieve->bits;
 12466              		.loc 1 780 5 is_stmt 0 view .LVU4328
 12467 43f0 4C39E2   		cmp	rdx, r12	# _8, block_start
 12468 43f3 0F8367FC 		jnb	.L758	#,
 12468      FFFF
 12469              	.LBE563:
 12470              	# sieve_extend.c:787: }
 787:sieve_extend.c **** 
 12471              		.loc 1 787 1 view .LVU4329
 12472 43f9 488B4424 		mov	rax, QWORD PTR 32[rsp]	#, %sfp
 12472      20
 12473 43fe 488D6424 		lea	rsp, 88[rsp]	#,
 12473      58
 12474              		.cfi_remember_state
 12475              		.cfi_def_cfa_offset 56
 12476 4403 5B       		pop	rbx	#
 12477              		.cfi_def_cfa_offset 48
 12478 4404 5D       		pop	rbp	#
 12479              		.cfi_def_cfa_offset 40
 12480 4405 415C     		pop	r12	#
 12481              		.cfi_def_cfa_offset 32
 12482              	.LVL739:
 787:sieve_extend.c **** 
 12483              		.loc 1 787 1 view .LVU4330
 12484 4407 415D     		pop	r13	#
 12485              		.cfi_def_cfa_offset 24
 12486 4409 415E     		pop	r14	#
 12487              		.cfi_def_cfa_offset 16
 12488 440b 415F     		pop	r15	#
 12489              		.cfi_def_cfa_offset 8
 12490              	.LVL740:
 787:sieve_extend.c **** 
 12491              		.loc 1 787 1 view .LVU4331
 12492 440d C3       		ret	
 12493              	.LVL741:
 12494 440e 6690     		.p2align 4,,7
 12495              		.p2align 3
 12496              	.L1078:
 12497              		.cfi_restore_state
 12498              	.LBB599:
 12499              	.LBB598:
 12500              	.LBB597:
 12501              	.LBB596:
 12502              	.LBB590:
 12503              	.LBB585:
 12504              	.LBB583:
 12505              	.LBB581:
 12506              	.LBB578:
 189:sieve_extend.c ****    }
 12507              		.loc 1 189 7 is_stmt 1 view .LVU4332
 12508              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 12509              		.loc 1 189 27 is_stmt 0 view .LVU4333
 12510 4410 48234C24 		and	rcx, QWORD PTR 16[rsp]	# tmp524, %sfp
 12510      10
GAS LISTING /tmp/ccfflXEb.s 			page 336


 12511              	.LVL742:
 12512              	# sieve_extend.c:189:       *index_ptr |= (mask & chopmask(range_stop));
 189:sieve_extend.c ****    }
 12513              		.loc 1 189 18 view .LVU4334
 12514 4415 48090B   		or	QWORD PTR [rbx], rcx	# *index_ptr_503, tmp524
 12515 4418 E96CFFFF 		jmp	.L771	#
 12515      FF
 12516              	.LVL743:
 12517 441d 0F1F00   		.p2align 4,,7
 12518              		.p2align 3
 12519              	.L1079:
 189:sieve_extend.c ****    }
 12520              		.loc 1 189 18 view .LVU4335
 12521              	.LBE578:
 12522              	.LBE581:
 12523              	.LBE583:
 12524              	.LBE585:
 12525              	.LBE590:
 12526              	.LBB591:
 12527              	.LBB589:
 132:sieve_extend.c ****        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 12528              		.loc 1 132 8 is_stmt 1 view .LVU4336
 133:sieve_extend.c ****        index += distance;
 12529              		.loc 1 133 8 view .LVU4337
 12530              	# sieve_extend.c:133:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 133:sieve_extend.c ****        index += distance;
 12531              		.loc 1 133 48 is_stmt 0 view .LVU4338
 12532 4420 4B8B6C2F 		mov	rbp, QWORD PTR 8[r15+r13]	# *_343, *_343
 12532      08
 12533              	.LVL744:
 133:sieve_extend.c ****        index += distance;
 12534              		.loc 1 133 48 view .LVU4339
 12535 4425 48F7D5   		not	rbp	# tmp525
 12536              	.LVL745:
 134:sieve_extend.c ****    }
 12537              		.loc 1 134 8 is_stmt 1 view .LVU4340
 12538              	# sieve_extend.c:133:        distance = (bitshift_t) __builtin_ctzll(~(bitstorage[index_word]));
 133:sieve_extend.c ****        index += distance;
 12539              		.loc 1 133 17 is_stmt 0 view .LVU4341
 12540 4428 F34C0FBC 		tzcnt	r13, rbp	# distance, tmp525
 12540      ED
 12541              	.LVL746:
 12542              	# sieve_extend.c:134:        index += distance;
 134:sieve_extend.c ****    }
 12543              		.loc 1 134 14 view .LVU4342
 12544 442d 4D01E8   		add	r8, r13	# index, distance
 12545              	.LVL747:
 131:sieve_extend.c ****        index_word++;
 12546              		.loc 1 131 10 is_stmt 1 view .LVU4343
 12547 4430 EB89     		jmp	.L763	#
 12548              	.LVL748:
 12549              		.p2align 4,,7
 12550 4432 660F1F44 		.p2align 3
 12550      0000
 12551              	.L1077:
 131:sieve_extend.c ****        index_word++;
 12552              		.loc 1 131 10 is_stmt 0 view .LVU4344
GAS LISTING /tmp/ccfflXEb.s 			page 337


 12553              	.LBE589:
 12554              	.LBE591:
 708:sieve_extend.c ****             prime = searchBitFalse(bitstorage, prime+1 );
 12555              		.loc 1 708 13 is_stmt 1 view .LVU4345
 12556 4438 488B0C24 		mov	rcx, QWORD PTR [rsp]	#, %sfp
 12557 443c 4C89D2   		mov	rdx, r10	#, step
 12558 443f 4C89FF   		mov	rdi, r15	#, _102
 12559 4442 E859CEFF 		call	setBitsTrue_largeRange_vector	#
 12559      FF
 12560              	.LVL749:
 709:sieve_extend.c ****         }
 12561              		.loc 1 709 13 view .LVU4346
 12562              	.LBB592:
 12563              	.LBI592:
 118:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 12564              		.loc 1 118 25 view .LVU4347
 12565              	.LBB593:
 119:sieve_extend.c ****     return index;
 12566              		.loc 1 119 5 view .LVU4348
 119:sieve_extend.c ****     return index;
 12567              		.loc 1 119 11 view .LVU4349
 12568              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12569              		.loc 1 119 12 is_stmt 0 view .LVU4350
 12570 4447 498B1424 		mov	rdx, QWORD PTR [r12]	# MEM[(uint64_t *)_784], MEM[(uint64_t *)_784]
 12571              	.LBE593:
 12572              	.LBE592:
 12573              	# sieve_extend.c:702:         if likely(block_start >= (prime + 1)) 
 702:sieve_extend.c ****             start = block_start + prime + prime - ((block_start + prime) % step);
 12574              		.loc 1 702 12 view .LVU4351
 12575 444b 4989E8   		mov	r8, rbp	# index, _298
 12576              	.LBB595:
 12577              	.LBB594:
 12578              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12579              		.loc 1 119 11 view .LVU4352
 12580 444e 480FA3EA 		bt	rdx, rbp	# MEM[(uint64_t *)_784], _298
 12581 4452 0F8363FF 		jnc	.L763	#,
 12581      FFFF
 12582              	.LVL750:
 12583              	.L764:
 119:sieve_extend.c ****     return index;
 12584              		.loc 1 119 60 is_stmt 1 view .LVU4353
 12585              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12586              		.loc 1 119 65 is_stmt 0 view .LVU4354
 12587 4458 4D8D4801 		lea	r9, 1[r8]	# tmp538,
 12588              	.LVL751:
 12589              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12590              		.loc 1 119 23 view .LVU4355
 12591 445c 4D89CE   		mov	r14, r9	# tmp497, index
 12592              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12593              		.loc 1 119 65 view .LVU4356
 12594 445f 4D89C8   		mov	r8, r9	# index, tmp538
 119:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccfflXEb.s 			page 338


 12595              		.loc 1 119 11 is_stmt 1 view .LVU4357
 12596              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12597              		.loc 1 119 23 is_stmt 0 view .LVU4358
 12598 4462 49C1EE06 		shr	r14, 6	# tmp497,
 12599              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12600              		.loc 1 119 12 view .LVU4359
 12601 4466 4B8B0CF7 		mov	rcx, QWORD PTR [r15+r14*8]	# *_318, *_318
 12602              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12603              		.loc 1 119 11 view .LVU4360
 12604 446a 4C0FA3C9 		bt	rcx, r9	# *_318, index
 12605 446e 0F8347FF 		jnc	.L763	#,
 12605      FFFF
 119:sieve_extend.c ****     return index;
 12606              		.loc 1 119 60 is_stmt 1 view .LVU4361
 12607              	.LVL752:
 12608              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12609              		.loc 1 119 65 is_stmt 0 view .LVU4362
 12610 4474 4983C001 		add	r8, 1	# index,
 12611              	.LVL753:
 119:sieve_extend.c ****     return index;
 12612              		.loc 1 119 11 is_stmt 1 view .LVU4363
 12613              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12614              		.loc 1 119 23 is_stmt 0 view .LVU4364
 12615 4478 4C89C0   		mov	rax, r8	# tmp579, index
 12616 447b 48C1E806 		shr	rax, 6	# tmp579,
 12617              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12618              		.loc 1 119 12 view .LVU4365
 12619 447f 498B3CC7 		mov	rdi, QWORD PTR [r15+rax*8]	# *_318, *_318
 12620              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12621              		.loc 1 119 11 view .LVU4366
 12622 4483 4C0FA3C7 		bt	rdi, r8	# *_318, index
 12623 4487 0F832EFF 		jnc	.L763	#,
 12623      FFFF
 119:sieve_extend.c ****     return index;
 12624              		.loc 1 119 60 is_stmt 1 view .LVU4367
 12625              	.LVL754:
 12626              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12627              		.loc 1 119 65 is_stmt 0 view .LVU4368
 12628 448d 4D8D4102 		lea	r8, 2[r9]	# index,
 12629              	.LVL755:
 119:sieve_extend.c ****     return index;
 12630              		.loc 1 119 11 is_stmt 1 view .LVU4369
 12631              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12632              		.loc 1 119 23 is_stmt 0 view .LVU4370
 12633 4491 4D89C2   		mov	r10, r8	# tmp583, index
 12634 4494 49C1EA06 		shr	r10, 6	# tmp583,
 12635              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccfflXEb.s 			page 339


 12636              		.loc 1 119 12 view .LVU4371
 12637 4498 4B8B34D7 		mov	rsi, QWORD PTR [r15+r10*8]	# *_318, *_318
 12638              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12639              		.loc 1 119 11 view .LVU4372
 12640 449c 4C0FA3C6 		bt	rsi, r8	# *_318, index
 12641 44a0 0F8315FF 		jnc	.L763	#,
 12641      FFFF
 119:sieve_extend.c ****     return index;
 12642              		.loc 1 119 60 is_stmt 1 view .LVU4373
 12643              	.LVL756:
 12644              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12645              		.loc 1 119 65 is_stmt 0 view .LVU4374
 12646 44a6 4D8D4103 		lea	r8, 3[r9]	# index,
 12647              	.LVL757:
 119:sieve_extend.c ****     return index;
 12648              		.loc 1 119 11 is_stmt 1 view .LVU4375
 12649              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12650              		.loc 1 119 23 is_stmt 0 view .LVU4376
 12651 44aa 4D89C4   		mov	r12, r8	# tmp587, index
 12652 44ad 49C1EC06 		shr	r12, 6	# tmp587,
 12653              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12654              		.loc 1 119 12 view .LVU4377
 12655 44b1 4F8B1CE7 		mov	r11, QWORD PTR [r15+r12*8]	# *_318, *_318
 12656              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12657              		.loc 1 119 11 view .LVU4378
 12658 44b5 4D0FA3C3 		bt	r11, r8	# *_318, index
 12659 44b9 0F83FCFE 		jnc	.L763	#,
 12659      FFFF
 119:sieve_extend.c ****     return index;
 12660              		.loc 1 119 60 is_stmt 1 view .LVU4379
 12661              	.LVL758:
 12662              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12663              		.loc 1 119 65 is_stmt 0 view .LVU4380
 12664 44bf 4D8D4104 		lea	r8, 4[r9]	# index,
 12665              	.LVL759:
 119:sieve_extend.c ****     return index;
 12666              		.loc 1 119 11 is_stmt 1 view .LVU4381
 12667              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12668              		.loc 1 119 23 is_stmt 0 view .LVU4382
 12669 44c3 4C89C5   		mov	rbp, r8	# tmp591, index
 12670 44c6 48C1ED06 		shr	rbp, 6	# tmp591,
 12671              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12672              		.loc 1 119 12 view .LVU4383
 12673 44ca 4D8B2CEF 		mov	r13, QWORD PTR [r15+rbp*8]	# *_318, *_318
 12674              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12675              		.loc 1 119 11 view .LVU4384
 12676 44ce 4D0FA3C5 		bt	r13, r8	# *_318, index
 12677 44d2 0F83E3FE 		jnc	.L763	#,
GAS LISTING /tmp/ccfflXEb.s 			page 340


 12677      FFFF
 119:sieve_extend.c ****     return index;
 12678              		.loc 1 119 60 is_stmt 1 view .LVU4385
 12679              	.LVL760:
 12680              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12681              		.loc 1 119 65 is_stmt 0 view .LVU4386
 12682 44d8 4D8D4105 		lea	r8, 5[r9]	# index,
 12683              	.LVL761:
 119:sieve_extend.c ****     return index;
 12684              		.loc 1 119 11 is_stmt 1 view .LVU4387
 12685              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12686              		.loc 1 119 23 is_stmt 0 view .LVU4388
 12687 44dc 4C89C2   		mov	rdx, r8	# tmp595, index
 12688 44df 48C1EA06 		shr	rdx, 6	# tmp595,
 12689              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12690              		.loc 1 119 12 view .LVU4389
 12691 44e3 4D8B34D7 		mov	r14, QWORD PTR [r15+rdx*8]	# *_318, *_318
 12692              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12693              		.loc 1 119 11 view .LVU4390
 12694 44e7 4D0FA3C6 		bt	r14, r8	# *_318, index
 12695 44eb 0F83CAFE 		jnc	.L763	#,
 12695      FFFF
 119:sieve_extend.c ****     return index;
 12696              		.loc 1 119 60 is_stmt 1 view .LVU4391
 12697              	.LVL762:
 12698              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12699              		.loc 1 119 65 is_stmt 0 view .LVU4392
 12700 44f1 4D8D4106 		lea	r8, 6[r9]	# index,
 12701              	.LVL763:
 119:sieve_extend.c ****     return index;
 12702              		.loc 1 119 11 is_stmt 1 view .LVU4393
 12703              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12704              		.loc 1 119 23 is_stmt 0 view .LVU4394
 12705 44f5 4C89C1   		mov	rcx, r8	# tmp599, index
 12706 44f8 48C1E906 		shr	rcx, 6	# tmp599,
 12707              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12708              		.loc 1 119 12 view .LVU4395
 12709 44fc 498B04CF 		mov	rax, QWORD PTR [r15+rcx*8]	# *_318, *_318
 12710              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12711              		.loc 1 119 11 view .LVU4396
 12712 4500 4C0FA3C0 		bt	rax, r8	# *_318, index
 12713 4504 0F83B1FE 		jnc	.L763	#,
 12713      FFFF
 119:sieve_extend.c ****     return index;
 12714              		.loc 1 119 60 is_stmt 1 view .LVU4397
 12715              	.LVL764:
 12716              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12717              		.loc 1 119 65 is_stmt 0 view .LVU4398
GAS LISTING /tmp/ccfflXEb.s 			page 341


 12718 450a 4D8D4107 		lea	r8, 7[r9]	# index,
 12719              	.LVL765:
 119:sieve_extend.c ****     return index;
 12720              		.loc 1 119 11 is_stmt 1 view .LVU4399
 12721              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12722              		.loc 1 119 23 is_stmt 0 view .LVU4400
 12723 450e 4D89C1   		mov	r9, r8	# tmp603, index
 12724 4511 49C1E906 		shr	r9, 6	# tmp603,
 12725              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12726              		.loc 1 119 12 view .LVU4401
 12727 4515 4B8B3CCF 		mov	rdi, QWORD PTR [r15+r9*8]	# *_318, *_318
 12728              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 12729              		.loc 1 119 11 view .LVU4402
 12730 4519 4C0FA3C7 		bt	rdi, r8	# *_318, index
 12731 451d 0F8235FF 		jc	.L764	#,
 12731      FFFF
 12732 4523 E993FEFF 		jmp	.L763	#
 12732      FF
 12733              	.LVL766:
 12734              		.p2align 4,,7
 12735              		.p2align 3
 12736              	.L760:
 119:sieve_extend.c ****     return index;
 12737              		.loc 1 119 11 view .LVU4403
 12738              	.LBE594:
 12739              	.LBE595:
 705:sieve_extend.c **** 
 12740              		.loc 1 705 13 is_stmt 1 view .LVU4404
 12741              	# sieve_extend.c:705:             start = prime * prime * 2 + prime * 2;
 705:sieve_extend.c **** 
 12742              		.loc 1 705 19 is_stmt 0 view .LVU4405
 12743 4528 4C0FAFC5 		imul	r8, rbp	# tmp491, _298
 12744 452c 4B8D3400 		lea	rsi, [r8+r8]	# index,
 12745              	.LVL767:
 705:sieve_extend.c **** 
 12746              		.loc 1 705 19 view .LVU4406
 12747 4530 E96CFCFF 		jmp	.L761	#
 12747      FF
 12748              	.LVL768:
 12749              	.L1073:
 705:sieve_extend.c **** 
 12750              		.loc 1 705 19 view .LVU4407
 12751              	.LBE596:
 12752              	.LBE597:
 12753              	.LBE598:
 12754              	.LBE599:
 12755              	.LBB600:
 12756              	.LBB551:
 12757              	.LBB547:
 12758              	.LBB541:
 12759              	.LBB518:
 206:sieve_extend.c ****        return;
 12760              		.loc 1 206 8 is_stmt 1 view .LVU4408
 12761              	# sieve_extend.c:206:        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & c
GAS LISTING /tmp/ccfflXEb.s 			page 342


 206:sieve_extend.c ****        return;
 12762              		.loc 1 206 75 is_stmt 0 view .LVU4409
 12763 4535 4C234C24 		and	r9, QWORD PTR 56[rsp]	# tmp399, %sfp
 12763      38
 12764              	# sieve_extend.c:206:        bitstorage[range_start_word] |= (pattern << bitindex(range_start)) & c
 206:sieve_extend.c ****        return;
 12765              		.loc 1 206 37 view .LVU4410
 12766 453a 4D09C1   		or	r9, r8	# tmp400, pretmp_743
 12767 453d 4D890B   		mov	QWORD PTR [r11], r9	# MEM[(uint64_t *)_742], tmp400
 207:sieve_extend.c ****     }
 12768              		.loc 1 207 8 is_stmt 1 view .LVU4411
 12769 4540 E960F0FF 		jmp	.L721	#
 12769      FF
 12770              	.LVL769:
 12771              	.L990:
 207:sieve_extend.c ****     }
 12772              		.loc 1 207 8 is_stmt 0 view .LVU4412
 12773 4545 48894C24 		mov	QWORD PTR 48[rsp], rcx	# %sfp, prime
 12773      30
 12774 454a E988FAFF 		jmp	.L711	#
 12774      FF
 12775              	.L778:
 12776              	.LBE518:
 12777              	.LBE541:
 12778 454f 4C8B4424 		mov	r8, QWORD PTR 16[rsp]	# block$pattern_start, %sfp
 12778      10
 12779 4554 4C894424 		mov	QWORD PTR 48[rsp], r8	# %sfp, block$pattern_start
 12779      30
 12780 4559 E92DF0FF 		jmp	.L713	#
 12780      FF
 12781              	.LVL770:
 12782              	.L754:
 207:sieve_extend.c ****     }
 12783              		.loc 1 207 8 view .LVU4413
 12784              	.LBE547:
 12785              	.LBE551:
 12786              	.LBE600:
 12787              	.LBB601:
 12788              	.LBB560:
 691:sieve_extend.c **** }
 12789              		.loc 1 691 37 is_stmt 1 view .LVU4414
 12790 455e E83DD7FF 		call	extendSieve_aligned	#
 12790      FF
 12791              	.LVL771:
 691:sieve_extend.c **** }
 12792              		.loc 1 691 37 is_stmt 0 view .LVU4415
 12793 4563 E9DBFAFF 		jmp	.L752	#
 12793      FF
 12794              	.LVL772:
 12795              	.L1076:
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 12796              		.loc 1 689 37 is_stmt 1 view .LVU4416
 12797 4568 0F1F8400 		.p2align 4,,8
 12797      00000000 
 12798 4570 E8ABDCFF 		call	extendSieve_shiftleft	#
 12798      FF
 12799              	.LVL773:
GAS LISTING /tmp/ccfflXEb.s 			page 343


 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 12800              		.loc 1 689 37 is_stmt 0 view .LVU4417
 12801              		.p2align 4,,8
 12802 4575 E9C9FAFF 		jmp	.L752	#
 12802      FF
 12803              	.LVL774:
 12804              	.L1066:
 689:sieve_extend.c ****     else if (source_bit < copy_bit) extendSieve_shiftright_ivdep(bitstorage, source_start, size, de
 12805              		.loc 1 689 37 view .LVU4418
 12806              	.LBE560:
 12807              	.LBE601:
 12808              	.LBB602:
 12809              	.LBB552:
 12810              	# sieve_extend.c:739:     for (;range_stop < block_stop;) {
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 12811              		.loc 1 739 5 view .LVU4419
 12812 457a 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, _102
 12812      40
 12813              	# sieve_extend.c:735:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 735:sieve_extend.c **** 
 12814              		.loc 1 735 18 view .LVU4420
 12815 457f 4531ED   		xor	r13d, r13d	# patternsize_bits
 12816              	# sieve_extend.c:731:     register counter_t prime   = 0;
 731:sieve_extend.c ****     counter_t patternsize_bits = 1;
 12817              		.loc 1 731 24 view .LVU4421
 12818 4582 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 12818      30000000 
 12818      00
 12819              	# sieve_extend.c:735:     struct block block = { .prime = 0, .pattern_start = 0, .pattern_size = 0 
 735:sieve_extend.c **** 
 12820              		.loc 1 735 18 view .LVU4422
 12821 458b 48C74424 		mov	QWORD PTR 16[rsp], 0	# %sfp,
 12821      10000000 
 12821      00
 12822              	# sieve_extend.c:739:     for (;range_stop < block_stop;) {
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 12823              		.loc 1 739 5 view .LVU4423
 12824 4594 48C74424 		mov	QWORD PTR 56[rsp], 1	# %sfp,
 12824      38010000 
 12824      00
 12825              	.LVL775:
 12826              	.L708:
 739:sieve_extend.c ****         prime = searchBitFalse(bitstorage, prime+1);
 12827              		.loc 1 739 5 view .LVU4424
 12828              	.LBE552:
 12829              	.LBE602:
 12830              	.LBB603:
 12831              	.LBB561:
 684:sieve_extend.c **** 
 12832              		.loc 1 684 35 is_stmt 1 view .LVU4425
 12833              	# sieve_extend.c:684:     if (size < WORD_SIZE_counter) return extendSieve_smallSize (bitstorage, s
 684:sieve_extend.c **** 
 12834              		.loc 1 684 42 is_stmt 0 view .LVU4426
 12835 459d 488B0C24 		mov	rcx, QWORD PTR [rsp]	#, %sfp
 12836 45a1 4C89EA   		mov	rdx, r13	#, patternsize_bits
 12837 45a4 488B7424 		mov	rsi, QWORD PTR 16[rsp]	#, %sfp
 12837      10
GAS LISTING /tmp/ccfflXEb.s 			page 344


 12838 45a9 4C89FF   		mov	rdi, r15	#, _102
 12839 45ac E84FBAFF 		call	extendSieve_smallSize	#
 12839      FF
 12840              	.LVL776:
 12841 45b1 E98DFAFF 		jmp	.L752	#
 12841      FF
 12842              	.LVL777:
 12843              	.L779:
 684:sieve_extend.c **** 
 12844              		.loc 1 684 42 view .LVU4427
 12845              	.LBE561:
 12846              	.LBE603:
 12847              	.LBB604:
 12848              	.LBB553:
 12849              	.LBB548:
 12850              	.LBB542:
 12851              	.LBB519:
 12852              	# sieve_extend.c:198: 	register bitword_t pattern = BITWORD_SHIFTBIT;
 198:sieve_extend.c ****     for (bitshift_t patternsize = step; patternsize <= WORD_SIZE_bitshift; patternsize += patternsi
 12853              		.loc 1 198 21 view .LVU4428
 12854 45b6 B9010000 		mov	ecx, 1	# pattern,
 12854      00
 12855 45bb E9F0F3FF 		jmp	.L718	#
 12855      FF
 12856              	.LBE519:
 12857              	.LBE542:
 12858              	.LBE548:
 12859              	.LBE553:
 12860              	.LBE604:
 12861              		.cfi_endproc
 12862              	.LFE76:
 12864              		.p2align 4
 12866              	tune_benchmark:
 12867              	.LVL778:
 12868              	.LFB84:
 913:sieve_extend.c **** 
 914:sieve_extend.c **** static void tune_benchmark(tuning_result_type* tuning_result, counter_t tuning_result_index) {
 12869              		.loc 1 914 94 is_stmt 1 view -0
 12870              		.cfi_startproc
 12871              		.loc 1 914 94 is_stmt 0 view .LVU4430
 12872 45c0 4154     		push	r12	#
 12873              		.cfi_def_cfa_offset 16
 12874              		.cfi_offset 12, -16
 12875 45c2 4989F8   		mov	r8, rdi	# tmp149, tuning_result
 12876              	# sieve_extend.c:920:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 915:sieve_extend.c ****     counter_t passes = 0;
 916:sieve_extend.c ****     double elapsed_time = 0;
 917:sieve_extend.c ****     struct timespec start_time,end_time;
 918:sieve_extend.c ****     struct sieve_t *sieve;
 919:sieve_extend.c **** 
 920:sieve_extend.c ****     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_faster;
 12877              		.loc 1 920 44 view .LVU4431
 12878 45c5 488D3C76 		lea	rdi, [rsi+rsi*2]	# tmp114,
 12879              	.LVL779:
 12880              	# sieve_extend.c:914: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 914:sieve_extend.c ****     counter_t passes = 0;
 12881              		.loc 1 914 94 view .LVU4432
GAS LISTING /tmp/ccfflXEb.s 			page 345


 12882 45c9 55       		push	rbp	#
 12883              		.cfi_def_cfa_offset 24
 12884              		.cfi_offset 6, -24
 12885              	# sieve_extend.c:920:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 12886              		.loc 1 920 44 view .LVU4433
 12887 45ca 48C1E705 		sal	rdi, 5	# tmp115,
 12888              	# sieve_extend.c:915:     counter_t passes = 0;
 915:sieve_extend.c ****     counter_t passes = 0;
 12889              		.loc 1 915 15 view .LVU4434
 12890 45ce 4531E4   		xor	r12d, r12d	# passes
 12891              	# sieve_extend.c:914: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 914:sieve_extend.c ****     counter_t passes = 0;
 12892              		.loc 1 914 94 view .LVU4435
 12893 45d1 53       		push	rbx	#
 12894              		.cfi_def_cfa_offset 32
 12895              		.cfi_offset 3, -32
 12896              	# sieve_extend.c:920:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 12897              		.loc 1 920 44 view .LVU4436
 12898 45d2 498D1C38 		lea	rbx, [r8+rdi]	# _2,
 12899              	# sieve_extend.c:924:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 921:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 922:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 923:sieve_extend.c **** 
 924:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 12900              		.loc 1 924 5 view .LVU4437
 12901 45d6 BF010000 		mov	edi, 1	#,
 12901      00
 12902              	# sieve_extend.c:914: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 914:sieve_extend.c ****     counter_t passes = 0;
 12903              		.loc 1 914 94 view .LVU4438
 12904 45db 488D6424 		lea	rsp, -48[rsp]	#,
 12904      D0
 12905              		.cfi_def_cfa_offset 80
 12906              	# sieve_extend.c:921:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_
 921:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 12907              		.loc 1 921 30 view .LVU4439
 12908 45e0 488B5328 		mov	rdx, QWORD PTR 40[rbx]	# _2->mediumstep_faster, _2->mediumstep_faster
 12909              	# sieve_extend.c:924:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 12910              		.loc 1 924 5 view .LVU4440
 12911 45e4 4889E6   		mov	rsi, rsp	# tmp119,
 12912              	.LVL780:
 12913              	# sieve_extend.c:922:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_
 922:sieve_extend.c **** 
 12914              		.loc 1 922 30 view .LVU4441
 12915 45e7 488B4B30 		mov	rcx, QWORD PTR 48[rbx]	# _2->vectorstep_faster, _2->vectorstep_faster
 12916              	# sieve_extend.c:914: static void tune_benchmark(tuning_result_type* tuning_result, counter_t tunin
 914:sieve_extend.c ****     counter_t passes = 0;
 12917              		.loc 1 914 94 view .LVU4442
 12918 45eb 64488B04 		mov	rax, QWORD PTR fs:40	# tmp160, MEM[(<address-space-1> long unsigned int *)40B]
 12918      25280000 
 12918      00
 12919 45f4 48894424 		mov	QWORD PTR 40[rsp], rax	# D.7202, tmp160
 12919      28
 12920 45f9 31C0     		xor	eax, eax	# tmp160
 915:sieve_extend.c ****     double elapsed_time = 0;
 12921              		.loc 1 915 5 is_stmt 1 view .LVU4443
 12922              	.LVL781:
GAS LISTING /tmp/ccfflXEb.s 			page 346


 916:sieve_extend.c ****     struct timespec start_time,end_time;
 12923              		.loc 1 916 5 view .LVU4444
 917:sieve_extend.c ****     struct sieve_t *sieve;
 12924              		.loc 1 917 5 view .LVU4445
 918:sieve_extend.c **** 
 12925              		.loc 1 918 5 view .LVU4446
 920:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 12926              		.loc 1 920 5 view .LVU4447
 12927              	# sieve_extend.c:920:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 920:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 12928              		.loc 1 920 29 is_stmt 0 view .LVU4448
 12929 45fb 488B4320 		mov	rax, QWORD PTR 32[rbx]	# _2->smallstep_faster, _2->smallstep_faster
 12930              	# sieve_extend.c:921:     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_
 921:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 12931              		.loc 1 921 30 view .LVU4449
 12932 45ff 48891500 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rdx	# global_MEDIUMSTEP_FASTER, _2->mediumstep_faster
 12932      000000
 12933              	# sieve_extend.c:922:     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_
 922:sieve_extend.c **** 
 12934              		.loc 1 922 30 view .LVU4450
 12935 4606 48890D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rcx	# global_VECTORSTEP_FASTER, _2->vectorstep_faster
 12935      000000
 12936              	# sieve_extend.c:920:     global_SMALLSTEP_FASTER = tuning_result[tuning_result_index].smallstep_fa
 920:sieve_extend.c ****     global_MEDIUMSTEP_FASTER = tuning_result[tuning_result_index].mediumstep_faster;
 12937              		.loc 1 920 29 view .LVU4451
 12938 460d 48890500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], rax	# global_SMALLSTEP_FASTER, _2->smallstep_faster
 12938      000000
 921:sieve_extend.c ****     global_VECTORSTEP_FASTER = tuning_result[tuning_result_index].vectorstep_faster;
 12939              		.loc 1 921 5 is_stmt 1 view .LVU4452
 922:sieve_extend.c **** 
 12940              		.loc 1 922 5 view .LVU4453
 12941              		.loc 1 924 5 view .LVU4454
 12942 4614 E8000000 		call	clock_gettime@PLT	#
 12942      00
 12943              	.LVL782:
 925:sieve_extend.c ****     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration && passes < tuning_re
 12944              		.loc 1 925 5 view .LVU4455
 12945              		.loc 1 925 11 view .LVU4456
 12946 4619 C5D957E4 		vxorpd	xmm4, xmm4, xmm4	# elapsed_time
 12947 461d C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 12947      40
 12948 4622 C5FB103D 		vmovsd	xmm7, QWORD PTR .LC7[rip]	# _58,
 12948      00000000 
 12949 462a 7676     		jbe	.L1081	#,
 12950 462c E99E0000 		jmp	.L1082	#
 12950      00
 12951              	.LVL783:
 12952              		.p2align 4,,7
 12953 4631 0F1F8000 		.p2align 3
 12953      000000
 12954              	.L1085:
 926:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12955              		.loc 1 926 9 view .LVU4457
 12956              	# sieve_extend.c:926:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 12957              		.loc 1 926 17 is_stmt 0 view .LVU4458
 12958 4638 488B7308 		mov	rsi, QWORD PTR 8[rbx]	# _2->blocksize_bits, _2->blocksize_bits
 12959              	# sieve_extend.c:928:         passes++;
GAS LISTING /tmp/ccfflXEb.s 			page 347


 927:sieve_extend.c ****         sieve_delete(sieve);
 928:sieve_extend.c ****         passes++;
 12960              		.loc 1 928 15 view .LVU4459
 12961 463c 4983C401 		add	r12, 1	# passes,
 12962              	.LVL784:
 12963              	# sieve_extend.c:926:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 926:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12964              		.loc 1 926 17 view .LVU4460
 12965 4640 488B3B   		mov	rdi, QWORD PTR [rbx]	#, _2->maxints
 12966 4643 E808EEFF 		call	sieve_shake	#
 12966      FF
 12967              	.LVL785:
 12968              	.LBB605:
 12969              	.LBB606:
 12970              	# sieve_extend.c:113:     free(sieve->bitstorage);
 113:sieve_extend.c ****     free(sieve);
 12971              		.loc 1 113 5 view .LVU4461
 12972 4648 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_37->bitstorage
 12973              	.LBE606:
 12974              	.LBE605:
 12975              	# sieve_extend.c:926:         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tunin
 926:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 12976              		.loc 1 926 17 view .LVU4462
 12977 464b 4889C5   		mov	rbp, rax	# sieve, tmp151
 12978              	.LVL786:
 927:sieve_extend.c ****         sieve_delete(sieve);
 12979              		.loc 1 927 9 is_stmt 1 view .LVU4463
 12980              	.LBB608:
 12981              	.LBI605:
 112:sieve_extend.c ****     free(sieve->bitstorage);
 12982              		.loc 1 112 13 view .LVU4464
 12983              	.LBB607:
 113:sieve_extend.c ****     free(sieve);
 12984              		.loc 1 113 5 view .LVU4465
 12985 464e E8000000 		call	free@PLT	#
 12985      00
 12986              	.LVL787:
 114:sieve_extend.c **** }
 12987              		.loc 1 114 5 view .LVU4466
 12988 4653 4889EF   		mov	rdi, rbp	#, sieve
 12989 4656 E8000000 		call	free@PLT	#
 12989      00
 12990              	.LVL788:
 114:sieve_extend.c **** }
 12991              		.loc 1 114 5 is_stmt 0 view .LVU4467
 12992              	.LBE607:
 12993              	.LBE608:
 12994              		.loc 1 928 9 is_stmt 1 view .LVU4468
 929:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 12995              		.loc 1 929 9 view .LVU4469
 12996 465b 488D7424 		lea	rsi, 16[rsp]	# tmp122,
 12996      10
 12997 4660 BF010000 		mov	edi, 1	#,
 12997      00
 12998 4665 E8000000 		call	clock_gettime@PLT	#
 12998      00
 12999              	.LVL789:
GAS LISTING /tmp/ccfflXEb.s 			page 348


 930:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 13000              		.loc 1 930 9 view .LVU4470
 13001              	# sieve_extend.c:930:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 13002              		.loc 1 930 58 is_stmt 0 view .LVU4471
 13003 466a C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 24[rsp]	# tmp123, end_time.tv_nsec
 13003      442418
 13004              	# sieve_extend.c:930:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 13005              		.loc 1 930 64 view .LVU4472
 13006 4671 C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR [rsp]	# tmp124, start_time.tv_sec
 13006      0C24
 13007              	# sieve_extend.c:930:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 13008              		.loc 1 930 104 view .LVU4473
 13009 4677 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 8[rsp]	# tmp126, start_time.tv_nsec
 13009      5C2408
 13010              	# sieve_extend.c:930:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 13011              		.loc 1 930 40 view .LVU4474
 13012 467e C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 16[rsp]	# tmp127, end_time.tv_sec
 13012      542410
 13013 4685 C4E2F19B 		vfmsub132sd	xmm0, xmm1, QWORD PTR .LC8[rip]	# _60, tmp124,
 13013      05000000 
 13013      00
 13014 468e C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _61, tmp127,
 13014      1D000000 
 13014      00
 13015              	# sieve_extend.c:930:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.t
 13016              		.loc 1 930 22 view .LVU4475
 13017 4697 C5FB58E3 		vaddsd	xmm4, xmm0, xmm3	# elapsed_time, _60, _61
 13018              	.LVL790:
 925:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13019              		.loc 1 925 11 is_stmt 1 view .LVU4476
 13020 469b C5F92F63 		vcomisd	xmm4, QWORD PTR 64[rbx]	# elapsed_time, _2->sample_duration
 13020      40
 13021 46a0 7706     		ja	.L1096	#,
 13022              	.LVL791:
 13023              	.L1081:
 13024              	# sieve_extend.c:925:     while (elapsed_time <= tuning_result[tuning_result_index].sample_duration
 925:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13025              		.loc 1 925 79 is_stmt 0 discriminator 1 view .LVU4477
 13026 46a2 4C396338 		cmp	QWORD PTR 56[rbx], r12	# _2->sample_max, passes
 13027 46a6 7790     		ja	.L1085	#,
 13028              	.L1096:
 925:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13029              		.loc 1 925 79 discriminator 1 view .LVU4478
 13030 46a8 C4C1CB2A 		vcvtsi2sd	xmm6, xmm6, r12	# tmp133, passes
 13030      F4
 13031 46ad 4D85E4   		test	r12, r12	# passes
 13032 46b0 7919     		jns	.L1087	#,
 925:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13033              		.loc 1 925 79 discriminator 1 view .LVU4479
 13034 46b2 4C89E6   		mov	rsi, r12	# tmp135, passes
 13035 46b5 4D89E1   		mov	r9, r12	# tmp136, passes
 13036 46b8 48D1EE   		shr	rsi	# tmp135
 13037 46bb 4183E101 		and	r9d, 1	# tmp136,
 13038 46bf 4C09CE   		or	rsi, r9	# tmp148, tmp136
 13039 46c2 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, rsi	# tmp134, tmp148
 13039      EE
 13040 46c7 C5D358F5 		vaddsd	xmm6, xmm5, xmm5	# tmp133, tmp134, tmp134
GAS LISTING /tmp/ccfflXEb.s 			page 349


 13041              	.L1087:
 925:sieve_extend.c ****         sieve = sieve_shake(tuning_result[tuning_result_index].maxints, tuning_result[tuning_result
 13042              		.loc 1 925 79 discriminator 1 view .LVU4480
 13043 46cb C5CB5EFC 		vdivsd	xmm7, xmm6, xmm4	# _58, tmp133, elapsed_time
 13044              	.LVL792:
 13045              	.L1082:
 931:sieve_extend.c ****     }
 932:sieve_extend.c ****     tuning_result[tuning_result_index].passes = passes;
 13046              		.loc 1 932 5 is_stmt 1 view .LVU4481
 13047              	# sieve_extend.c:932:     tuning_result[tuning_result_index].passes = passes;
 13048              		.loc 1 932 47 is_stmt 0 view .LVU4482
 13049 46cf 4C896348 		mov	QWORD PTR 72[rbx], r12	# _2->passes, passes
 933:sieve_extend.c ****     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 13050              		.loc 1 933 5 is_stmt 1 view .LVU4483
 13051              	# sieve_extend.c:933:     tuning_result[tuning_result_index].elapsed_time = elapsed_time;
 13052              		.loc 1 933 53 is_stmt 0 view .LVU4484
 13053 46d3 C5FB1163 		vmovsd	QWORD PTR 80[rbx], xmm4	# _2->elapsed_time, elapsed_time
 13053      50
 934:sieve_extend.c ****     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 13054              		.loc 1 934 5 is_stmt 1 view .LVU4485
 13055              	# sieve_extend.c:934:     tuning_result[tuning_result_index].avg = passes/elapsed_time;
 13056              		.loc 1 934 44 is_stmt 0 view .LVU4486
 13057 46d8 C5FB117B 		vmovsd	QWORD PTR 88[rbx], xmm7	# _2->avg, _58
 13057      58
 13058              	# sieve_extend.c:935: }
 935:sieve_extend.c **** }
 13059              		.loc 1 935 1 view .LVU4487
 13060 46dd 488B4424 		mov	rax, QWORD PTR 40[rsp]	# tmp161, D.7202
 13060      28
 13061 46e2 64483304 		xor	rax, QWORD PTR fs:40	# tmp161, MEM[(<address-space-1> long unsigned int *)40B]
 13061      25280000 
 13061      00
 13062 46eb 750A     		jne	.L1097	#,
 13063 46ed 488D6424 		lea	rsp, 48[rsp]	#,
 13063      30
 13064              		.cfi_remember_state
 13065              		.cfi_def_cfa_offset 32
 13066 46f2 5B       		pop	rbx	#
 13067              		.cfi_def_cfa_offset 24
 13068 46f3 5D       		pop	rbp	#
 13069              		.cfi_def_cfa_offset 16
 13070 46f4 415C     		pop	r12	#
 13071              		.cfi_def_cfa_offset 8
 13072 46f6 C3       		ret	
 13073              	.L1097:
 13074              		.cfi_restore_state
 13075 46f7 E8000000 		call	__stack_chk_fail@PLT	#
 13075      00
 13076              	.LVL793:
 13077              		.cfi_endproc
 13078              	.LFE84:
 13080              		.section	.rodata.str1.8,"aMS",@progbits,1
 13081              		.align 8
 13082              	.LC9:
 13083 0000 52657375 		.string	"Result: Sievesize %ju is expected to have %ju primes. algorithm produced %ju primes\n"
 13083      6C743A20 
 13083      53696576 
GAS LISTING /tmp/ccfflXEb.s 			page 350


 13083      6573697A 
 13083      6520256A 
 13084 0055 000000   		.align 8
 13085              	.LC10:
 13086 0058 4E6F2076 		.string	"No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produced %j
 13086      616C6964 
 13086      20726573 
 13086      756C742E 
 13086      20536965 
 13087              		.section	.rodata.str1.1
 13088              	.LC11:
 13089 0023 44656570 		.string	"DeepAnalyzing"
 13089      416E616C 
 13089      797A696E 
 13089      6700
 13090              		.section	.rodata.str1.8
 13091 00bb 00000000 		.align 8
 13091      00
 13092              	.LC12:
 13093 00c0 4E756D62 		.string	"Number %ju (%ju) was marked prime, but %ju * %ju = %ju\n"
 13093      65722025 
 13093      6A752028 
 13093      256A7529 
 13093      20776173 
 13094              		.align 8
 13095              	.LC13:
 13096 00f8 4E756D62 		.string	"Number %ju (%ju) was marked non-prime, but no factors found. So it is prime\n"
 13096      65722025 
 13096      6A752028 
 13096      256A7529 
 13096      20776173 
 13097              		.text
 13098 46fc 0F1F4000 		.p2align 4
 13099              		.globl	validatePrimeCount
 13101              	validatePrimeCount:
 13102              	.LVL794:
 13103              	.LFB81:
 850:sieve_extend.c **** 
 13104              		.loc 1 850 72 is_stmt 1 view -0
 13105              		.cfi_startproc
 850:sieve_extend.c **** 
 13106              		.loc 1 850 72 is_stmt 0 view .LVU4489
 13107 4700 F30F1EFA 		endbr64	
 852:sieve_extend.c ****     counter_t valid_primes = 0;
 13108              		.loc 1 852 5 is_stmt 1 view .LVU4490
 13109              	# sieve_extend.c:850: int validatePrimeCount(struct sieve_t *sieve, int option_verboselevel) {
 850:sieve_extend.c **** 
 13110              		.loc 1 850 72 is_stmt 0 view .LVU4491
 13111 4704 4157     		push	r15	#
 13112              		.cfi_def_cfa_offset 16
 13113              		.cfi_offset 15, -16
 13114 4706 4156     		push	r14	#
 13115              		.cfi_def_cfa_offset 24
 13116              		.cfi_offset 14, -24
 13117 4708 4155     		push	r13	#
 13118              		.cfi_def_cfa_offset 32
 13119              		.cfi_offset 13, -32
GAS LISTING /tmp/ccfflXEb.s 			page 351


 13120 470a 4154     		push	r12	#
 13121              		.cfi_def_cfa_offset 40
 13122              		.cfi_offset 12, -40
 13123 470c 55       		push	rbp	#
 13124              		.cfi_def_cfa_offset 48
 13125              		.cfi_offset 6, -48
 13126 470d 4889FD   		mov	rbp, rdi	# sieve, tmp307
 13127 4710 53       		push	rbx	#
 13128              		.cfi_def_cfa_offset 56
 13129              		.cfi_offset 3, -56
 13130 4711 89F3     		mov	ebx, esi	# option_verboselevel, tmp308
 13131 4713 488D6424 		lea	rsp, -56[rsp]	#,
 13131      C8
 13132              		.cfi_def_cfa_offset 112
 13133              	# sieve_extend.c:852:     counter_t primecount = count_primes(sieve);
 852:sieve_extend.c ****     counter_t valid_primes = 0;
 13134              		.loc 1 852 28 view .LVU4492
 13135 4718 488B17   		mov	rdx, QWORD PTR [rdi]	# _24, MEM[(uint64_t * *)sieve_18(D)]
 13136 471b 488B7F08 		mov	rdi, QWORD PTR 8[rdi]	# _25, MEM[(long unsigned int *)sieve_18(D) + 8B]
 13137              	.LVL795:
 13138              	.LBB630:
 13139              	.LBI630:
 821:sieve_extend.c ****     counter_t primeCount = 1;
 13140              		.loc 1 821 18 is_stmt 1 view .LVU4493
 13141              	.LBB631:
 13142              	.LBB632:
 823:sieve_extend.c ****     return primeCount;
 13143              		.loc 1 823 30 view .LVU4494
 13144 471f 4C8B4D10 		mov	r9, QWORD PTR 16[rbp]	# pretmp_201, sieve_18(D)->size
 13145              	# sieve_extend.c:823:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 823:sieve_extend.c ****     return primeCount;
 13146              		.loc 1 823 5 is_stmt 0 view .LVU4495
 13147 4723 4883FF01 		cmp	rdi, 1	# _25,
 13148 4727 0F860B05 		jbe	.L1099	#,
 13148      0000
 13149              	# sieve_extend.c:823:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 823:sieve_extend.c ****     return primeCount;
 13150              		.loc 1 823 20 view .LVU4496
 13151 472d B8010000 		mov	eax, 1	# factor,
 13151      00
 13152              	.LBE632:
 13153              	# sieve_extend.c:822:     counter_t primeCount = 1;
 822:sieve_extend.c ****     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(sieve->bitstorage, facto
 13154              		.loc 1 822 15 view .LVU4497
 13155 4732 41B80100 		mov	r8d, 1	# primeCount,
 13155      0000
 13156              	.LVL796:
 13157 4738 0F1F8400 		.p2align 4
 13157      00000000 
 13158              		.p2align 3
 13159              	.L1102:
 13160              	.LBB635:
 823:sieve_extend.c ****     return primeCount;
 13161              		.loc 1 823 106 is_stmt 1 view .LVU4498
 13162              	# sieve_extend.c:823:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 823:sieve_extend.c ****     return primeCount;
 13163              		.loc 1 823 116 is_stmt 0 view .LVU4499
GAS LISTING /tmp/ccfflXEb.s 			page 352


 13164 4740 4983C001 		add	r8, 1	# primeCount,
 13165              	.LVL797:
 823:sieve_extend.c ****     return primeCount;
 13166              		.loc 1 823 52 is_stmt 1 view .LVU4500
 13167              	# sieve_extend.c:823:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 823:sieve_extend.c ****     return primeCount;
 13168              		.loc 1 823 61 is_stmt 0 view .LVU4501
 13169 4744 4883C001 		add	rax, 1	# factor,
 13170              	.LVL798:
 13171              	.L1246:
 13172              	.LBB633:
 13173              	.LBI633:
 118:sieve_extend.c ****     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 13174              		.loc 1 118 25 is_stmt 1 view .LVU4502
 13175              	.LBB634:
 119:sieve_extend.c ****     return index;
 13176              		.loc 1 119 5 view .LVU4503
 119:sieve_extend.c ****     return index;
 13177              		.loc 1 119 11 view .LVU4504
 13178              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13179              		.loc 1 119 23 is_stmt 0 view .LVU4505
 13180 4748 4889C1   		mov	rcx, rax	# tmp162, factor
 13181 474b 48C1E906 		shr	rcx, 6	# tmp162,
 13182              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13183              		.loc 1 119 12 view .LVU4506
 13184 474f 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_106,* _24
 13185              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13186              		.loc 1 119 11 view .LVU4507
 13187 4753 490FA3C3 		bt	r11, rax	# *_106, factor
 13188 4757 0F83A300 		jnc	.L1100	#,
 13188      0000
 119:sieve_extend.c ****     return index;
 13189              		.loc 1 119 60 is_stmt 1 view .LVU4508
 13190              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13191              		.loc 1 119 65 is_stmt 0 view .LVU4509
 13192 475d 4C8D6801 		lea	r13, 1[rax]	# tmp235,
 13193              	.LVL799:
 13194              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13195              		.loc 1 119 23 view .LVU4510
 13196 4761 4D89EE   		mov	r14, r13	# tmp167, factor
 13197              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13198              		.loc 1 119 65 view .LVU4511
 13199 4764 4C89E8   		mov	rax, r13	# factor, tmp235
 119:sieve_extend.c ****     return index;
 13200              		.loc 1 119 11 is_stmt 1 view .LVU4512
 13201              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13202              		.loc 1 119 23 is_stmt 0 view .LVU4513
 13203 4767 49C1EE06 		shr	r14, 6	# tmp167,
 13204              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccfflXEb.s 			page 353


 13205              		.loc 1 119 12 view .LVU4514
 13206 476b 4E8B3CF2 		mov	r15, QWORD PTR [rdx+r14*8]	# *_35, *_35
 13207              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13208              		.loc 1 119 11 view .LVU4515
 13209 476f 4D0FA3EF 		bt	r15, r13	# *_35, factor
 13210 4773 0F838700 		jnc	.L1100	#,
 13210      0000
 119:sieve_extend.c ****     return index;
 13211              		.loc 1 119 60 is_stmt 1 view .LVU4516
 13212              	.LVL800:
 13213              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13214              		.loc 1 119 65 is_stmt 0 view .LVU4517
 13215 4779 4883C001 		add	rax, 1	# factor,
 13216              	.LVL801:
 119:sieve_extend.c ****     return index;
 13217              		.loc 1 119 11 is_stmt 1 view .LVU4518
 13218              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13219              		.loc 1 119 23 is_stmt 0 view .LVU4519
 13220 477d 4989C4   		mov	r12, rax	# tmp279, factor
 13221 4780 49C1EC06 		shr	r12, 6	# tmp279,
 13222              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13223              		.loc 1 119 12 view .LVU4520
 13224 4784 4A8B34E2 		mov	rsi, QWORD PTR [rdx+r12*8]	# *_35, *_35
 13225              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13226              		.loc 1 119 11 view .LVU4521
 13227 4788 480FA3C6 		bt	rsi, rax	# *_35, factor
 13228 478c 7372     		jnc	.L1100	#,
 119:sieve_extend.c ****     return index;
 13229              		.loc 1 119 60 is_stmt 1 view .LVU4522
 13230              	.LVL802:
 13231              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13232              		.loc 1 119 65 is_stmt 0 view .LVU4523
 13233 478e 498D4502 		lea	rax, 2[r13]	# factor,
 13234              	.LVL803:
 119:sieve_extend.c ****     return index;
 13235              		.loc 1 119 11 is_stmt 1 view .LVU4524
 13236              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13237              		.loc 1 119 23 is_stmt 0 view .LVU4525
 13238 4792 4989C2   		mov	r10, rax	# tmp283, factor
 13239 4795 49C1EA06 		shr	r10, 6	# tmp283,
 13240              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13241              		.loc 1 119 12 view .LVU4526
 13242 4799 4A8B0CD2 		mov	rcx, QWORD PTR [rdx+r10*8]	# *_35, *_35
 13243              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13244              		.loc 1 119 11 view .LVU4527
 13245 479d 480FA3C1 		bt	rcx, rax	# *_35, factor
 13246 47a1 735D     		jnc	.L1100	#,
 119:sieve_extend.c ****     return index;
GAS LISTING /tmp/ccfflXEb.s 			page 354


 13247              		.loc 1 119 60 is_stmt 1 view .LVU4528
 13248              	.LVL804:
 13249              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13250              		.loc 1 119 65 is_stmt 0 view .LVU4529
 13251 47a3 498D4503 		lea	rax, 3[r13]	# factor,
 13252              	.LVL805:
 119:sieve_extend.c ****     return index;
 13253              		.loc 1 119 11 is_stmt 1 view .LVU4530
 13254              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13255              		.loc 1 119 23 is_stmt 0 view .LVU4531
 13256 47a7 4989C3   		mov	r11, rax	# tmp287, factor
 13257 47aa 49C1EB06 		shr	r11, 6	# tmp287,
 13258              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13259              		.loc 1 119 12 view .LVU4532
 13260 47ae 4E8B34DA 		mov	r14, QWORD PTR [rdx+r11*8]	# *_35, *_35
 13261              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13262              		.loc 1 119 11 view .LVU4533
 13263 47b2 490FA3C6 		bt	r14, rax	# *_35, factor
 13264 47b6 7348     		jnc	.L1100	#,
 119:sieve_extend.c ****     return index;
 13265              		.loc 1 119 60 is_stmt 1 view .LVU4534
 13266              	.LVL806:
 13267              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13268              		.loc 1 119 65 is_stmt 0 view .LVU4535
 13269 47b8 498D4504 		lea	rax, 4[r13]	# factor,
 13270              	.LVL807:
 119:sieve_extend.c ****     return index;
 13271              		.loc 1 119 11 is_stmt 1 view .LVU4536
 13272              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13273              		.loc 1 119 23 is_stmt 0 view .LVU4537
 13274 47bc 4989C7   		mov	r15, rax	# tmp291, factor
 13275 47bf 49C1EF06 		shr	r15, 6	# tmp291,
 13276              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13277              		.loc 1 119 12 view .LVU4538
 13278 47c3 4E8B24FA 		mov	r12, QWORD PTR [rdx+r15*8]	# *_35, *_35
 13279              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13280              		.loc 1 119 11 view .LVU4539
 13281 47c7 490FA3C4 		bt	r12, rax	# *_35, factor
 13282 47cb 7333     		jnc	.L1100	#,
 119:sieve_extend.c ****     return index;
 13283              		.loc 1 119 60 is_stmt 1 view .LVU4540
 13284              	.LVL808:
 13285              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13286              		.loc 1 119 65 is_stmt 0 view .LVU4541
 13287 47cd 498D4505 		lea	rax, 5[r13]	# factor,
 13288              	.LVL809:
 119:sieve_extend.c ****     return index;
 13289              		.loc 1 119 11 is_stmt 1 view .LVU4542
GAS LISTING /tmp/ccfflXEb.s 			page 355


 13290              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13291              		.loc 1 119 23 is_stmt 0 view .LVU4543
 13292 47d1 4889C6   		mov	rsi, rax	# tmp295, factor
 13293 47d4 48C1EE06 		shr	rsi, 6	# tmp295,
 13294              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13295              		.loc 1 119 12 view .LVU4544
 13296 47d8 4C8B14F2 		mov	r10, QWORD PTR [rdx+rsi*8]	# *_35, *_35
 13297              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13298              		.loc 1 119 11 view .LVU4545
 13299 47dc 490FA3C2 		bt	r10, rax	# *_35, factor
 13300 47e0 731E     		jnc	.L1100	#,
 119:sieve_extend.c ****     return index;
 13301              		.loc 1 119 60 is_stmt 1 view .LVU4546
 13302              	.LVL810:
 13303              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13304              		.loc 1 119 65 is_stmt 0 view .LVU4547
 13305 47e2 498D4506 		lea	rax, 6[r13]	# factor,
 13306              	.LVL811:
 119:sieve_extend.c ****     return index;
 13307              		.loc 1 119 11 is_stmt 1 view .LVU4548
 13308              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13309              		.loc 1 119 23 is_stmt 0 view .LVU4549
 13310 47e6 4889C1   		mov	rcx, rax	# tmp299, factor
 13311 47e9 48C1E906 		shr	rcx, 6	# tmp299,
 13312              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13313              		.loc 1 119 12 view .LVU4550
 13314 47ed 4C8B1CCA 		mov	r11, QWORD PTR [rdx+rcx*8]	# *_35, *_35
 13315              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13316              		.loc 1 119 11 view .LVU4551
 13317 47f1 490FA3C3 		bt	r11, rax	# *_35, factor
 13318 47f5 7309     		jnc	.L1100	#,
 119:sieve_extend.c ****     return index;
 13319              		.loc 1 119 60 is_stmt 1 view .LVU4552
 13320              	.LVL812:
 13321              	# sieve_extend.c:119:     while (bitstorage[wordindex(index)] & markmask(index)) index++;
 119:sieve_extend.c ****     return index;
 13322              		.loc 1 119 65 is_stmt 0 view .LVU4553
 13323 47f7 498D4507 		lea	rax, 7[r13]	# factor,
 13324              	.LVL813:
 119:sieve_extend.c ****     return index;
 13325              		.loc 1 119 11 is_stmt 1 view .LVU4554
 13326 47fb E948FFFF 		jmp	.L1246	#
 13326      FF
 13327              		.p2align 4,,7
 13328              		.p2align 3
 13329              	.L1100:
 13330              	.LVL814:
 119:sieve_extend.c ****     return index;
 13331              		.loc 1 119 11 is_stmt 0 view .LVU4555
 13332              	.LBE634:
GAS LISTING /tmp/ccfflXEb.s 			page 356


 13333              	.LBE633:
 823:sieve_extend.c ****     return primeCount;
 13334              		.loc 1 823 30 is_stmt 1 view .LVU4556
 13335              	# sieve_extend.c:823:     for (counter_t factor=1; factor < sieve->bits; factor = searchBitFalse(si
 823:sieve_extend.c ****     return primeCount;
 13336              		.loc 1 823 5 is_stmt 0 view .LVU4557
 13337 4800 4839C7   		cmp	rdi, rax	# _25, factor
 13338 4803 0F8737FF 		ja	.L1102	#,
 13338      FFFF
 823:sieve_extend.c ****     return primeCount;
 13339              		.loc 1 823 5 view .LVU4558
 13340              	.LBE635:
 824:sieve_extend.c **** }
 13341              		.loc 1 824 5 is_stmt 1 view .LVU4559
 13342              	.LVL815:
 824:sieve_extend.c **** }
 13343              		.loc 1 824 5 is_stmt 0 view .LVU4560
 13344              	.LBE631:
 13345              	.LBE630:
 853:sieve_extend.c ****     switch(sieve->size) {
 13346              		.loc 1 853 5 is_stmt 1 view .LVU4561
 854:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13347              		.loc 1 854 5 view .LVU4562
 13348 4809 83FB03   		cmp	ebx, 3	# option_verboselevel,
 13349 480c 0F9FC2   		setg	dl	#, tmp172
 13350 480f 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 13350      860100
 13351 4816 0F843406 		je	.L1103	#,
 13351      0000
 13352 481c 0F86D402 		jbe	.L1247	#,
 13352      0000
 13353 4822 4981F900 		cmp	r9, 100000000	# pretmp_201,
 13353      E1F505
 13354 4829 0F84E005 		je	.L1111	#,
 13354      0000
 13355 482f 90       		.p2align 4,,4
 13356 4830 0F863A03 		jbe	.L1248	#,
 13356      0000
 13357 4836 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 13357      CA9A3B
 13358 483d 0F85F105 		jne	.L1109	#,
 13358      0000
 13359 4843 4981F82E 		cmp	r8, 50847534	# primeCount,
 13359      DF0703
 13360              	# sieve_extend.c:863:         case 1000000000:    valid_primes = 50847534; break;
 863:sieve_extend.c ****         default:            valid_primes= 0;
 13361              		.loc 1 863 42 is_stmt 0 view .LVU4563
 13362 484a B92EDF07 		mov	ecx, 50847534	# valid_primes,
 13362      03
 13363 484f 410F94C5 		sete	r13b	#, tmp189
 13364 4853 4421EA   		and	edx, r13d	# _253, tmp189
 13365 4856 4981F82E 		cmp	r8, 50847534	# primeCount,
 13365      DF0703
 13366 485d 450FB6ED 		movzx	r13d, r13b	# <retval>, tmp189
 13367 4861 410F95C4 		setne	r12b	#, _135
 863:sieve_extend.c ****         default:            valid_primes= 0;
 13368              		.loc 1 863 29 is_stmt 1 view .LVU4564
GAS LISTING /tmp/ccfflXEb.s 			page 357


 13369              	.LVL816:
 863:sieve_extend.c ****         default:            valid_primes= 0;
 13370              		.loc 1 863 54 view .LVU4565
 13371 4865 66662E0F 		.p2align 4
 13371      1F840000 
 13371      000000
 13372              		.p2align 3
 13373              	.L1116:
 867:sieve_extend.c ****     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is expected to have %ju p
 13374              		.loc 1 867 5 view .LVU4566
 868:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13375              		.loc 1 868 5 view .LVU4567
 13376              	# sieve_extend.c:868:     if (valid  && option_verboselevel >= 4) printf("Result: Sievesize %ju is 
 868:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13377              		.loc 1 868 8 is_stmt 0 view .LVU4568
 13378 4870 84D2     		test	dl, dl	# _253
 13379 4872 0F841704 		je	.L1117	#,
 13379      0000
 868:sieve_extend.c ****     if (!valid && option_verboselevel >= 1) {
 13380              		.loc 1 868 45 is_stmt 1 discriminator 1 view .LVU4569
 13381              	.LVL817:
 13382              	.LBB637:
 13383              	.LBI637:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13384              		.loc 3 105 1 discriminator 1 view .LVU4570
 13385              	.LBB638:
 13386              		.loc 3 107 3 discriminator 1 view .LVU4571
 13387              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13388              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4572
 13389 4878 4C89CA   		mov	rdx, r9	#, pretmp_201
 13390 487b 488D3500 		lea	rsi, .LC9[rip]	#,
 13390      000000
 13391 4882 BF010000 		mov	edi, 1	#,
 13391      00
 13392 4887 31C0     		xor	eax, eax	#
 13393 4889 E8000000 		call	__printf_chk@PLT	#
 13393      00
 13394              	.LVL818:
 13395              		.loc 3 107 10 discriminator 1 view .LVU4573
 13396              	.LBE638:
 13397              	.LBE637:
 869:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 13398              		.loc 1 869 5 is_stmt 1 discriminator 1 view .LVU4574
 13399              	.L1118:
 873:sieve_extend.c ****     return (valid);
 13400              		.loc 1 873 5 view .LVU4575
 13401              	# sieve_extend.c:873:     if (!valid && option_verboselevel >= 2) deepAnalyzePrimes(sieve);
 873:sieve_extend.c ****     return (valid);
 13402              		.loc 1 873 8 is_stmt 0 view .LVU4576
 13403 488e 83FB01   		cmp	ebx, 1	# option_verboselevel,
 13404 4891 0F8E4C02 		jle	.L1098	#,
 13404      0000
 13405 4897 4584E4   		test	r12b, r12b	# _135
 13406 489a 0F844302 		je	.L1098	#,
 13406      0000
 13407              	.L1120:
 873:sieve_extend.c ****     return (valid);
GAS LISTING /tmp/ccfflXEb.s 			page 358


 13408              		.loc 1 873 45 is_stmt 1 discriminator 1 view .LVU4577
 13409              	.LBB639:
 13410              	.LBI639:
 827:sieve_extend.c ****     printf("DeepAnalyzing\n");
 13411              		.loc 1 827 13 discriminator 1 view .LVU4578
 13412              	.LVL819:
 13413              	.LBB640:
 828:sieve_extend.c ****     counter_t warn_prime = 0;
 13414              		.loc 1 828 5 discriminator 1 view .LVU4579
 13415              	.LBB641:
 13416              	.LBI641:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13417              		.loc 3 105 1 discriminator 1 view .LVU4580
 13418              	.LBB642:
 13419              		.loc 3 107 3 discriminator 1 view .LVU4581
 13420              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13421              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU4582
 13422 48a0 488D3D00 		lea	rdi, .LC11[rip]	#,
 13422      000000
 13423 48a7 E8000000 		call	puts@PLT	#
 13423      00
 13424              	.LVL820:
 13425              		.loc 3 107 10 discriminator 1 view .LVU4583
 13426              	.LBE642:
 13427              	.LBE641:
 829:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13428              		.loc 1 829 5 is_stmt 1 discriminator 1 view .LVU4584
 830:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13429              		.loc 1 830 5 discriminator 1 view .LVU4585
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13430              		.loc 1 831 5 discriminator 1 view .LVU4586
 13431              	.LBB643:
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13432              		.loc 1 831 10 discriminator 1 view .LVU4587
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13433              		.loc 1 831 31 discriminator 1 view .LVU4588
 13434              	# sieve_extend.c:831:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13435              		.loc 1 831 44 is_stmt 0 discriminator 1 view .LVU4589
 13436 48ac 488B7D08 		mov	rdi, QWORD PTR 8[rbp]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13437              	# sieve_extend.c:831:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13438              		.loc 1 831 5 discriminator 1 view .LVU4590
 13439 48b0 4883FF01 		cmp	rdi, 1	# _137,
 13440 48b4 0F862902 		jbe	.L1098	#,
 13440      0000
 13441              	.LBB644:
 13442              	.LBB645:
 13443              	.LBB646:
 13444              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13445              		.loc 3 107 10 view .LVU4591
 13446 48ba 44896C24 		mov	DWORD PTR 36[rsp], r13d	# %sfp, <retval>
 13446      24
 13447              	.LBE646:
 13448              	.LBE645:
 13449              	.LBE644:
 13450              	# sieve_extend.c:831:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
GAS LISTING /tmp/ccfflXEb.s 			page 359


 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13451              		.loc 1 831 5 view .LVU4592
 13452 48bf 41BE0200 		mov	r14d, 2	# ivtmp.623,
 13452      0000
 13453 48c5 41BC0300 		mov	r12d, 3	# ivtmp.621,
 13453      0000
 13454              	.LBE643:
 13455              	# sieve_extend.c:829:     counter_t warn_prime = 0;
 829:sieve_extend.c ****     counter_t warn_nonprime = 0;
 13456              		.loc 1 829 15 view .LVU4593
 13457 48cb 4531C0   		xor	r8d, r8d	# warn_prime
 13458              	# sieve_extend.c:830:     counter_t warn_nonprime = 0;
 830:sieve_extend.c ****     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 13459              		.loc 1 830 15 view .LVU4594
 13460 48ce 48C74424 		mov	QWORD PTR 24[rsp], 0	# %sfp,
 13460      18000000 
 13460      00
 13461              	.LBB665:
 13462              	# sieve_extend.c:831:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13463              		.loc 1 831 20 view .LVU4595
 13464 48d7 41BF0100 		mov	r15d, 1	# prime,
 13464      0000
 13465              	.LBB653:
 13466              	.LBB650:
 13467              	.LBB647:
 13468              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13469              		.loc 3 107 10 view .LVU4596
 13470 48dd 4989ED   		mov	r13, rbp	# sieve, sieve
 13471              	.LVL821:
 13472              		.p2align 4
 13473              		.p2align 3
 13474              	.L1129:
 13475              		.loc 3 107 10 view .LVU4597
 13476              	.LBE647:
 13477              	.LBE650:
 13478              	.LBE653:
 832:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13479              		.loc 1 832 9 is_stmt 1 view .LVU4598
 13480              	# sieve_extend.c:832:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 832:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13481              		.loc 1 832 31 is_stmt 0 view .LVU4599
 13482 48e0 498B6D00 		mov	rbp, QWORD PTR 0[r13]	# MEM[(uint64_t * *)sieve_18(D)], MEM[(uint64_t * *)sieve_18(D)]
 13483              	# sieve_extend.c:832:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 832:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13484              		.loc 1 832 32 view .LVU4600
 13485 48e4 4C89FB   		mov	rbx, r15	# tmp198, prime
 13486 48e7 48C1EB06 		shr	rbx, 6	# tmp198,
 13487              	# sieve_extend.c:832:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 832:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13488              		.loc 1 832 73 view .LVU4601
 13489 48eb 4C8B4CDD 		mov	r9, QWORD PTR 0[rbp+rbx*8]	# *_47, *_47
 13489      00
 13490 48f0 C4C283F7 		shrx	rcx, r9, r15	# tmp201, *_47, prime
 13490      C9
 13491              	# sieve_extend.c:832:         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) 
 832:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccfflXEb.s 			page 360


 13492              		.loc 1 832 12 view .LVU4602
 13493 48f5 83E101   		and	ecx, 1	# c,
 13494 48f8 0F84BA02 		je	.L1121	#,
 13494      0000
 13495              	.LVL822:
 13496              	.LBB654:
 13497              	.LBB655:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13498              		.loc 1 841 32 is_stmt 1 view .LVU4603
 13499              	.LBE655:
 13500              	# sieve_extend.c:840:             counter_t c_prime = 0;
 840:sieve_extend.c ****             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 13501              		.loc 1 840 23 is_stmt 0 view .LVU4604
 13502 48fe 31ED     		xor	ebp, ebp	# c_prime
 13503              	.LBB656:
 13504              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13505              		.loc 1 841 13 view .LVU4605
 13506 4900 4885FF   		test	rdi, rdi	# _137
 13507 4903 BE030000 		mov	esi, 3	# ivtmp.613,
 13507      00
 13508 4908 0F84E003 		je	.L1236	#,
 13508      0000
 13509 490e 4989FB   		mov	r11, rdi	# tmp231, _137
 13510 4911 4929CB   		sub	r11, rcx	# tmp231, c
 13511 4914 4183E303 		and	r11d, 3	# tmp231,
 13512 4918 4D89DA   		mov	r10, r11	# tmp232, tmp231
 13513 491b 0F84BF00 		je	.L1122	#,
 13513      0000
 13514              	.LVL823:
 842:sieve_extend.c ****             }
 13515              		.loc 1 842 17 is_stmt 1 view .LVU4606
 13516              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13517              		.loc 1 842 48 is_stmt 0 view .LVU4607
 13518 4921 488D0409 		lea	rax, [rcx+rcx]	# tmp239,
 13519 4925 4C39F0   		cmp	rax, r14	# tmp239, ivtmp.623
 13520 4928 7411     		je	.L1176	#,
 13521              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13522              		.loc 1 842 33 view .LVU4608
 13523 492a 31D2     		xor	edx, edx	# tmp241
 13524 492c 4C89E0   		mov	rax, r12	# tmp242, ivtmp.621
 13525 492f 48F7F6   		div	rsi	# ivtmp.613
 13526              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13527              		.loc 1 842 82 view .LVU4609
 13528 4932 31ED     		xor	ebp, ebp	# c_prime
 842:sieve_extend.c ****             }
 13529              		.loc 1 842 82 view .LVU4610
 13530 4934 4885D2   		test	rdx, rdx	# tmp241
 13531 4937 400F94C5 		sete	bpl	#, c_prime
 13532              	.LVL824:
 13533              	.L1176:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13534              		.loc 1 841 68 is_stmt 1 view .LVU4611
 13535              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccfflXEb.s 			page 361


 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13536              		.loc 1 841 69 is_stmt 0 view .LVU4612
 13537 493b 4883C101 		add	rcx, 1	# c,
 13538              	.LVL825:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13539              		.loc 1 841 32 is_stmt 1 view .LVU4613
 13540              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13541              		.loc 1 841 13 is_stmt 0 view .LVU4614
 13542 493f 4839F9   		cmp	rcx, rdi	# c, _137
 13543 4942 0F877801 		ja	.L1128	#,
 13543      0000
 13544              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13545              		.loc 1 841 51 view .LVU4615
 13546 4948 4989C9   		mov	r9, rcx	# tmp244, c
 13547 494b BE050000 		mov	esi, 5	# ivtmp.613,
 13547      00
 13548 4950 4C0FAFC9 		imul	r9, rcx	# tmp244, c
 13549              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13550              		.loc 1 841 47 view .LVU4616
 13551 4954 4D39E1   		cmp	r9, r12	# tmp244, ivtmp.621
 13552 4957 0F876301 		ja	.L1128	#,
 13552      0000
 13553 495d 4983FA01 		cmp	r10, 1	# tmp232,
 13554 4961 747D     		je	.L1122	#,
 13555 4963 4983FA02 		cmp	r10, 2	# tmp232,
 13556 4967 7438     		je	.L1207	#,
 842:sieve_extend.c ****             }
 13557              		.loc 1 842 17 is_stmt 1 view .LVU4617
 13558              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13559              		.loc 1 842 48 is_stmt 0 view .LVU4618
 13560 4969 488D1C09 		lea	rbx, [rcx+rcx]	# tmp245,
 13561 496d 4C39F3   		cmp	rbx, r14	# tmp245, ivtmp.623
 13562 4970 7417     		je	.L1178	#,
 13563              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13564              		.loc 1 842 33 view .LVU4619
 13565 4972 31D2     		xor	edx, edx	# tmp247
 13566 4974 4C89E0   		mov	rax, r12	# tmp248, ivtmp.621
 13567 4977 48F7F6   		div	rsi	# ivtmp.613
 13568              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13569              		.loc 1 842 20 view .LVU4620
 13570 497a 4885D2   		test	rdx, rdx	# tmp247
 13571 497d 410F94C3 		sete	r11b	#, tmp249
 13572              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13573              		.loc 1 842 82 view .LVU4621
 13574 4981 4180FB01 		cmp	r11b, 1	# tmp249,
 13575 4985 4883DDFF 		sbb	rbp, -1	# c_prime,
 13576              	.LVL826:
 13577              	.L1178:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13578              		.loc 1 841 68 is_stmt 1 view .LVU4622
GAS LISTING /tmp/ccfflXEb.s 			page 362


 13579              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13580              		.loc 1 841 69 is_stmt 0 view .LVU4623
 13581 4989 4883C101 		add	rcx, 1	# c,
 13582              	.LVL827:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13583              		.loc 1 841 32 is_stmt 1 view .LVU4624
 13584 498d 4883C602 		add	rsi, 2	# ivtmp.613,
 13585              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13586              		.loc 1 841 51 is_stmt 0 view .LVU4625
 13587 4991 4989CA   		mov	r10, rcx	# tmp250, c
 13588 4994 4C0FAFD1 		imul	r10, rcx	# tmp250, c
 13589              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13590              		.loc 1 841 47 view .LVU4626
 13591 4998 4D39E2   		cmp	r10, r12	# tmp250, ivtmp.621
 13592 499b 0F871F01 		ja	.L1128	#,
 13592      0000
 13593              	.L1207:
 842:sieve_extend.c ****             }
 13594              		.loc 1 842 17 is_stmt 1 view .LVU4627
 13595              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13596              		.loc 1 842 48 is_stmt 0 view .LVU4628
 13597 49a1 4C8D0C09 		lea	r9, [rcx+rcx]	# tmp251,
 13598 49a5 4D39F1   		cmp	r9, r14	# tmp251, ivtmp.623
 13599 49a8 7415     		je	.L1181	#,
 13600              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13601              		.loc 1 842 33 view .LVU4629
 13602 49aa 31D2     		xor	edx, edx	# tmp253
 13603 49ac 4C89E0   		mov	rax, r12	# tmp254, ivtmp.621
 13604 49af 48F7F6   		div	rsi	# ivtmp.613
 13605              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13606              		.loc 1 842 20 view .LVU4630
 13607 49b2 4885D2   		test	rdx, rdx	# tmp253
 13608 49b5 0F94C3   		sete	bl	#, tmp255
 13609              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13610              		.loc 1 842 82 view .LVU4631
 13611 49b8 80FB01   		cmp	bl, 1	# tmp255,
 13612 49bb 4883DDFF 		sbb	rbp, -1	# c_prime,
 13613              	.LVL828:
 13614              	.L1181:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13615              		.loc 1 841 68 is_stmt 1 view .LVU4632
 13616              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13617              		.loc 1 841 69 is_stmt 0 view .LVU4633
 13618 49bf 4883C101 		add	rcx, 1	# c,
 13619              	.LVL829:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13620              		.loc 1 841 32 is_stmt 1 view .LVU4634
 13621 49c3 4883C602 		add	rsi, 2	# ivtmp.613,
 13622              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
GAS LISTING /tmp/ccfflXEb.s 			page 363


 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13623              		.loc 1 841 51 is_stmt 0 view .LVU4635
 13624 49c7 4989CB   		mov	r11, rcx	# tmp256, c
 13625 49ca 4C0FAFD9 		imul	r11, rcx	# tmp256, c
 13626              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13627              		.loc 1 841 47 view .LVU4636
 13628 49ce 4D39E3   		cmp	r11, r12	# tmp256, ivtmp.621
 13629 49d1 0F87E900 		ja	.L1128	#,
 13629      0000
 13630              	.LVL830:
 13631 49d7 660F1F84 		.p2align 4
 13631      00000000 
 13631      00
 13632              		.p2align 3
 13633              	.L1122:
 842:sieve_extend.c ****             }
 13634              		.loc 1 842 17 is_stmt 1 view .LVU4637
 13635              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13636              		.loc 1 842 48 is_stmt 0 view .LVU4638
 13637 49e0 4C8D1409 		lea	r10, [rcx+rcx]	# tmp210,
 13638 49e4 4D39F2   		cmp	r10, r14	# tmp210, ivtmp.623
 13639 49e7 7417     		je	.L1127	#,
 13640              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13641              		.loc 1 842 33 view .LVU4639
 13642 49e9 31D2     		xor	edx, edx	# tmp214
 13643 49eb 4C89E0   		mov	rax, r12	# tmp215, ivtmp.621
 13644 49ee 48F7F6   		div	rsi	# ivtmp.613
 13645              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13646              		.loc 1 842 20 view .LVU4640
 13647 49f1 4885D2   		test	rdx, rdx	# tmp214
 13648 49f4 410F94C1 		sete	r9b	#, tmp217
 13649              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13650              		.loc 1 842 82 view .LVU4641
 13651 49f8 4180F901 		cmp	r9b, 1	# tmp217,
 13652 49fc 4883DDFF 		sbb	rbp, -1	# c_prime,
 13653              	.LVL831:
 13654              	.L1127:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13655              		.loc 1 841 68 is_stmt 1 view .LVU4642
 13656              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13657              		.loc 1 841 69 is_stmt 0 view .LVU4643
 13658 4a00 4883C101 		add	rcx, 1	# tmp234,
 13659              	.LVL832:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13660              		.loc 1 841 32 is_stmt 1 view .LVU4644
 13661              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13662              		.loc 1 841 13 is_stmt 0 view .LVU4645
 13663 4a04 4839F9   		cmp	rcx, rdi	# tmp234, _137
 13664 4a07 0F87B300 		ja	.L1128	#,
 13664      0000
GAS LISTING /tmp/ccfflXEb.s 			page 364


 13665              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13666              		.loc 1 841 51 view .LVU4646
 13667 4a0d 4889CB   		mov	rbx, rcx	# tmp218, tmp234
 13668 4a10 4883C602 		add	rsi, 2	# tmp233,
 13669 4a14 480FAFD9 		imul	rbx, rcx	# tmp218, tmp234
 13670              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13671              		.loc 1 841 47 view .LVU4647
 13672 4a18 4C39E3   		cmp	rbx, r12	# tmp218, ivtmp.621
 13673 4a1b 0F879F00 		ja	.L1128	#,
 13673      0000
 842:sieve_extend.c ****             }
 13674              		.loc 1 842 17 is_stmt 1 view .LVU4648
 13675              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13676              		.loc 1 842 48 is_stmt 0 view .LVU4649
 13677 4a21 4C8D1C09 		lea	r11, [rcx+rcx]	# tmp257,
 13678 4a25 4D39F3   		cmp	r11, r14	# tmp257, ivtmp.623
 13679 4a28 7417     		je	.L1185	#,
 13680              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13681              		.loc 1 842 33 view .LVU4650
 13682 4a2a 31D2     		xor	edx, edx	# tmp259
 13683 4a2c 4C89E0   		mov	rax, r12	# tmp260, ivtmp.621
 13684 4a2f 48F7F6   		div	rsi	# tmp233
 13685              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13686              		.loc 1 842 20 view .LVU4651
 13687 4a32 4885D2   		test	rdx, rdx	# tmp259
 13688 4a35 410F94C2 		sete	r10b	#, tmp261
 13689              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13690              		.loc 1 842 82 view .LVU4652
 13691 4a39 4180FA01 		cmp	r10b, 1	# tmp261,
 13692 4a3d 4883DDFF 		sbb	rbp, -1	# c_prime,
 13693              	.LVL833:
 13694              	.L1185:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13695              		.loc 1 841 68 is_stmt 1 view .LVU4653
 13696              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13697              		.loc 1 841 69 is_stmt 0 view .LVU4654
 13698 4a41 4C8D4901 		lea	r9, 1[rcx]	# c,
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13699              		.loc 1 841 32 is_stmt 1 view .LVU4655
 13700 4a45 488D5E02 		lea	rbx, 2[rsi]	# ivtmp.613,
 13701              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13702              		.loc 1 841 51 is_stmt 0 view .LVU4656
 13703 4a49 4D89CB   		mov	r11, r9	# tmp264, c
 13704 4a4c 4D0FAFD9 		imul	r11, r9	# tmp264, c
 13705              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13706              		.loc 1 841 47 view .LVU4657
 13707 4a50 4D39E3   		cmp	r11, r12	# tmp264, ivtmp.621
 13708 4a53 776B     		ja	.L1128	#,
GAS LISTING /tmp/ccfflXEb.s 			page 365


 842:sieve_extend.c ****             }
 13709              		.loc 1 842 17 is_stmt 1 view .LVU4658
 13710              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13711              		.loc 1 842 48 is_stmt 0 view .LVU4659
 13712 4a55 4D01C9   		add	r9, r9	# tmp265
 13713 4a58 4D39F1   		cmp	r9, r14	# tmp265, ivtmp.623
 13714 4a5b 7417     		je	.L1187	#,
 13715              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13716              		.loc 1 842 33 view .LVU4660
 13717 4a5d 31D2     		xor	edx, edx	# tmp267
 13718 4a5f 4C89E0   		mov	rax, r12	# tmp268, ivtmp.621
 13719 4a62 48F7F3   		div	rbx	# ivtmp.613
 13720              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13721              		.loc 1 842 20 view .LVU4661
 13722 4a65 4885D2   		test	rdx, rdx	# tmp267
 13723 4a68 410F94C2 		sete	r10b	#, tmp269
 13724              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13725              		.loc 1 842 82 view .LVU4662
 13726 4a6c 4180FA01 		cmp	r10b, 1	# tmp269,
 13727 4a70 4883DDFF 		sbb	rbp, -1	# c_prime,
 13728              	.LVL834:
 13729              	.L1187:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13730              		.loc 1 841 68 is_stmt 1 view .LVU4663
 13731              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13732              		.loc 1 841 69 is_stmt 0 view .LVU4664
 13733 4a74 4C8D4902 		lea	r9, 2[rcx]	# c,
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13734              		.loc 1 841 32 is_stmt 1 view .LVU4665
 13735 4a78 488D5E04 		lea	rbx, 4[rsi]	# ivtmp.613,
 13736              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13737              		.loc 1 841 51 is_stmt 0 view .LVU4666
 13738 4a7c 4D89CB   		mov	r11, r9	# tmp272, c
 13739 4a7f 4D0FAFD9 		imul	r11, r9	# tmp272, c
 13740              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13741              		.loc 1 841 47 view .LVU4667
 13742 4a83 4D39E3   		cmp	r11, r12	# tmp272, ivtmp.621
 13743 4a86 7738     		ja	.L1128	#,
 842:sieve_extend.c ****             }
 13744              		.loc 1 842 17 is_stmt 1 view .LVU4668
 13745              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13746              		.loc 1 842 48 is_stmt 0 view .LVU4669
 13747 4a88 4D01C9   		add	r9, r9	# tmp273
 13748 4a8b 4D39F1   		cmp	r9, r14	# tmp273, ivtmp.623
 13749 4a8e 7417     		je	.L1189	#,
 13750              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13751              		.loc 1 842 33 view .LVU4670
 13752 4a90 31D2     		xor	edx, edx	# tmp275
GAS LISTING /tmp/ccfflXEb.s 			page 366


 13753 4a92 4C89E0   		mov	rax, r12	# tmp276, ivtmp.621
 13754 4a95 48F7F3   		div	rbx	# ivtmp.613
 13755              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13756              		.loc 1 842 20 view .LVU4671
 13757 4a98 4885D2   		test	rdx, rdx	# tmp275
 13758 4a9b 410F94C2 		sete	r10b	#, tmp277
 13759              	# sieve_extend.c:842:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_p
 842:sieve_extend.c ****             }
 13760              		.loc 1 842 82 view .LVU4672
 13761 4a9f 4180FA01 		cmp	r10b, 1	# tmp277,
 13762 4aa3 4883DDFF 		sbb	rbp, -1	# c_prime,
 13763              	.LVL835:
 13764              	.L1189:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13765              		.loc 1 841 68 is_stmt 1 view .LVU4673
 13766              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13767              		.loc 1 841 69 is_stmt 0 view .LVU4674
 13768 4aa7 4883C103 		add	rcx, 3	# c,
 13769              	.LVL836:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13770              		.loc 1 841 32 is_stmt 1 view .LVU4675
 13771 4aab 4883C606 		add	rsi, 6	# ivtmp.613,
 13772              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13773              		.loc 1 841 51 is_stmt 0 view .LVU4676
 13774 4aaf 4989C9   		mov	r9, rcx	# tmp278, c
 13775 4ab2 4C0FAFC9 		imul	r9, rcx	# tmp278, c
 13776              	# sieve_extend.c:841:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13777              		.loc 1 841 47 view .LVU4677
 13778 4ab6 4D39E1   		cmp	r9, r12	# tmp278, ivtmp.621
 13779 4ab9 0F8621FF 		jbe	.L1122	#,
 13779      FFFF
 13780              	.LVL837:
 13781 4abf 90       		.p2align 4
 13782              		.p2align 3
 13783              	.L1128:
 841:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) c_prime++;
 13784              		.loc 1 841 47 view .LVU4678
 13785              	.LBE656:
 844:sieve_extend.c ****         }
 13786              		.loc 1 844 13 is_stmt 1 view .LVU4679
 13787              	# sieve_extend.c:844:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 844:sieve_extend.c ****         }
 13788              		.loc 1 844 16 is_stmt 0 view .LVU4680
 13789 4ac0 4885ED   		test	rbp, rbp	# c_prime
 13790 4ac3 0F840C02 		je	.L1249	#,
 13790      0000
 13791              	.LVL838:
 13792              	.L1125:
 844:sieve_extend.c ****         }
 13793              		.loc 1 844 16 view .LVU4681
 13794              	.LBE654:
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13795              		.loc 1 831 52 is_stmt 1 view .LVU4682
GAS LISTING /tmp/ccfflXEb.s 			page 367


 13796              	# sieve_extend.c:831:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13797              		.loc 1 831 57 is_stmt 0 view .LVU4683
 13798 4ac9 4983C701 		add	r15, 1	# prime,
 13799              	.LVL839:
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13800              		.loc 1 831 31 is_stmt 1 view .LVU4684
 13801 4acd 4983C402 		add	r12, 2	# ivtmp.621,
 13802 4ad1 4983C602 		add	r14, 2	# ivtmp.623,
 13803              	# sieve_extend.c:831:     for (counter_t prime = 1; prime < sieve->bits; prime++ ) {
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13804              		.loc 1 831 5 is_stmt 0 view .LVU4685
 13805 4ad5 4939FF   		cmp	r15, rdi	# prime, _137
 13806 4ad8 0F8202FE 		jb	.L1129	#,
 13806      FFFF
 13807              	.LVL840:
 13808              	.L1238:
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13809              		.loc 1 831 5 view .LVU4686
 13810 4ade 448B6C24 		mov	r13d, DWORD PTR 36[rsp]	# <retval>, %sfp
 13810      24
 13811              	.LVL841:
 13812              	.L1098:
 831:sieve_extend.c ****         if ((sieve->bitstorage[wordindex(prime)] & markmask_calc(prime))==0) { // is this a prime?
 13813              		.loc 1 831 5 view .LVU4687
 13814              	.LBE665:
 13815              	.LBE640:
 13816              	.LBE639:
 13817              	# sieve_extend.c:875: }
 875:sieve_extend.c **** 
 13818              		.loc 1 875 1 view .LVU4688
 13819 4ae3 488D6424 		lea	rsp, 56[rsp]	#,
 13819      38
 13820              		.cfi_remember_state
 13821              		.cfi_def_cfa_offset 56
 13822 4ae8 4489E8   		mov	eax, r13d	#, <retval>
 13823 4aeb 5B       		pop	rbx	#
 13824              		.cfi_def_cfa_offset 48
 13825 4aec 5D       		pop	rbp	#
 13826              		.cfi_def_cfa_offset 40
 13827 4aed 415C     		pop	r12	#
 13828              		.cfi_def_cfa_offset 32
 13829 4aef 415D     		pop	r13	#
 13830              		.cfi_def_cfa_offset 24
 13831 4af1 415E     		pop	r14	#
 13832              		.cfi_def_cfa_offset 16
 13833 4af3 415F     		pop	r15	#
 13834              		.cfi_def_cfa_offset 8
 13835 4af5 C3       		ret	
 13836              	.LVL842:
 13837              	.L1247:
 13838              		.cfi_restore_state
 13839              	# sieve_extend.c:854:     switch(sieve->size) {
 854:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13840              		.loc 1 854 5 view .LVU4689
 13841 4af6 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 13841      030000
GAS LISTING /tmp/ccfflXEb.s 			page 368


 13842 4afd 0F84E502 		je	.L1105	#,
 13842      0000
 13843 4b03 7633     		jbe	.L1250	#,
 13844 4b05 4981F910 		cmp	r9, 10000	# pretmp_201,
 13844      270000
 13845 4b0c 0F852203 		jne	.L1109	#,
 13845      0000
 13846 4b12 4981F8CD 		cmp	r8, 1229	# primeCount,
 13846      040000
 13847              	# sieve_extend.c:858:         case 10000:         valid_primes = 1229;     break;
 858:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13848              		.loc 1 858 42 view .LVU4690
 13849 4b19 B9CD0400 		mov	ecx, 1229	# valid_primes,
 13849      00
 13850 4b1e 400F94C6 		sete	sil	#, tmp179
 13851 4b22 21F2     		and	edx, esi	# _253, tmp179
 13852 4b24 4981F8CD 		cmp	r8, 1229	# primeCount,
 13852      040000
 13853 4b2b 440FB6EE 		movzx	r13d, sil	# <retval>, tmp179
 13854 4b2f 410F95C4 		setne	r12b	#, _135
 858:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13855              		.loc 1 858 29 is_stmt 1 view .LVU4691
 13856              	.LVL843:
 858:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13857              		.loc 1 858 54 view .LVU4692
 13858              	# sieve_extend.c:858:         case 10000:         valid_primes = 1229;     break;
 858:sieve_extend.c ****         case 100000:        valid_primes = 9592;     break;
 13859              		.loc 1 858 9 is_stmt 0 view .LVU4693
 13860 4b33 E938FDFF 		jmp	.L1116	#
 13860      FF
 13861              	.LVL844:
 13862              	.L1250:
 13863              	# sieve_extend.c:854:     switch(sieve->size) {
 854:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13864              		.loc 1 854 5 view .LVU4694
 13865 4b38 4983F90A 		cmp	r9, 10	# pretmp_201,
 13866 4b3c 0F841902 		je	.L1107	#,
 13866      0000
 13867 4b42 4983F964 		cmp	r9, 100	# pretmp_201,
 13868 4b46 0F85E802 		jne	.L1109	#,
 13868      0000
 13869 4b4c 4983F819 		cmp	r8, 25	# primeCount,
 13870 4b50 0F94C1   		sete	cl	#, tmp173
 13871 4b53 21CA     		and	edx, ecx	# _253, tmp173
 13872 4b55 4983F819 		cmp	r8, 25	# primeCount,
 13873 4b59 440FB6E9 		movzx	r13d, cl	# <retval>, tmp173
 13874 4b5d 410F95C4 		setne	r12b	#, _135
 13875              	# sieve_extend.c:856:         case 100:           valid_primes = 25;       break;
 856:sieve_extend.c ****         case 1000:          valid_primes = 168;      break;
 13876              		.loc 1 856 42 view .LVU4695
 13877 4b61 B9190000 		mov	ecx, 25	# valid_primes,
 13877      00
 13878 4b66 E905FDFF 		jmp	.L1116	#
 13878      FF
 13879 4b6b 0F1F4400 		.p2align 4,,7
 13879      00
 13880              		.p2align 3
GAS LISTING /tmp/ccfflXEb.s 			page 369


 13881              	.L1248:
 13882              	# sieve_extend.c:854:     switch(sieve->size) {
 854:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 13883              		.loc 1 854 5 view .LVU4696
 13884 4b70 4981F940 		cmp	r9, 1000000	# pretmp_201,
 13884      420F00
 13885 4b77 0F84B701 		je	.L1113	#,
 13885      0000
 13886 4b7d 4981F980 		cmp	r9, 10000000	# pretmp_201,
 13886      969800
 13887 4b84 0F85AA02 		jne	.L1109	#,
 13887      0000
 13888 4b8a 4981F803 		cmp	r8, 664579	# primeCount,
 13888      240A00
 13889              	# sieve_extend.c:861:         case 10000000:      valid_primes = 664579;   break;
 861:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13890              		.loc 1 861 42 view .LVU4697
 13891 4b91 B903240A 		mov	ecx, 664579	# valid_primes,
 13891      00
 13892 4b96 410F94C7 		sete	r15b	#, tmp185
 13893 4b9a 4421FA   		and	edx, r15d	# _253, tmp185
 13894 4b9d 4981F803 		cmp	r8, 664579	# primeCount,
 13894      240A00
 13895 4ba4 450FB6EF 		movzx	r13d, r15b	# <retval>, tmp185
 13896 4ba8 410F95C4 		setne	r12b	#, _135
 861:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13897              		.loc 1 861 29 is_stmt 1 view .LVU4698
 13898              	.LVL845:
 861:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13899              		.loc 1 861 54 view .LVU4699
 13900              	# sieve_extend.c:861:         case 10000000:      valid_primes = 664579;   break;
 861:sieve_extend.c ****         case 100000000:     valid_primes = 5761455;  break;
 13901              		.loc 1 861 9 is_stmt 0 view .LVU4700
 13902 4bac E9BFFCFF 		jmp	.L1116	#
 13902      FF
 13903              	.LVL846:
 13904              		.p2align 4,,7
 13905 4bb1 0F1F8000 		.p2align 3
 13905      000000
 13906              	.L1121:
 13907              	.LBB670:
 13908              	.LBB668:
 13909              	.LBB666:
 13910              	.LBB663:
 833:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13911              		.loc 1 833 32 is_stmt 1 view .LVU4701
 13912              	# sieve_extend.c:833:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 833:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13913              		.loc 1 833 13 is_stmt 0 view .LVU4702
 13914 4bb8 4885FF   		test	rdi, rdi	# _137
 13915 4bbb 0F841DFF 		je	.L1238	#,
 13915      FFFF
 13916              	# sieve_extend.c:833:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 833:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13917              		.loc 1 833 27 view .LVU4703
 13918 4bc1 BB010000 		mov	ebx, 1	# c,
 13918      00
GAS LISTING /tmp/ccfflXEb.s 			page 370


 13919 4bc6 EB20     		jmp	.L1126	#
 13920              	.LVL847:
 13921              		.p2align 4,,7
 13922              		.p2align 3
 13923              	.L1135:
 13924              	# sieve_extend.c:835:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 835:sieve_extend.c ****                 }
 13925              		.loc 1 835 35 view .LVU4704
 13926 4bc8 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 13927              	.LVL848:
 13928              	.L1124:
 833:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13929              		.loc 1 833 68 is_stmt 1 view .LVU4705
 13930              	# sieve_extend.c:833:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 833:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13931              		.loc 1 833 69 is_stmt 0 view .LVU4706
 13932 4bcb 4883C301 		add	rbx, 1	# c,
 13933              	.LVL849:
 833:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13934              		.loc 1 833 32 is_stmt 1 view .LVU4707
 13935              	# sieve_extend.c:833:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 833:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13936              		.loc 1 833 13 is_stmt 0 view .LVU4708
 13937 4bcf 4839FB   		cmp	rbx, rdi	# c, _137
 13938 4bd2 0F87F1FE 		ja	.L1125	#,
 13938      FFFF
 13939              	# sieve_extend.c:833:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 833:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13940              		.loc 1 833 51 view .LVU4709
 13941 4bd8 4989DB   		mov	r11, rbx	# tmp209, c
 13942 4bdb 4C0FAFDB 		imul	r11, rbx	# tmp209, c
 13943              	# sieve_extend.c:833:             for(counter_t c=1; c<=sieve->bits && c*c <= prime*2+1; c++) {
 833:sieve_extend.c ****                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 13944              		.loc 1 833 47 view .LVU4710
 13945 4bdf 4D39E3   		cmp	r11, r12	# tmp209, ivtmp.621
 13946 4be2 0F87E1FE 		ja	.L1125	#,
 13946      FFFF
 13947              	.LVL850:
 13948              	.L1126:
 834:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13949              		.loc 1 834 17 is_stmt 1 view .LVU4711
 13950 4be8 488D2C1B 		lea	rbp, [rbx+rbx]	# _218,
 13951 4bec 31D2     		xor	edx, edx	# tmp204
 13952 4bee 4C89E0   		mov	rax, r12	# tmp203, ivtmp.621
 13953              	# sieve_extend.c:834:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 834:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13954              		.loc 1 834 39 is_stmt 0 view .LVU4712
 13955 4bf1 488D7501 		lea	rsi, 1[rbp]	# _55,
 13956 4bf5 48F7F6   		div	rsi	# _55
 13957              	# sieve_extend.c:834:                 if ((prime*2+1) % (c*2+1) == 0 && (c*2+1) != (prime*2+1)) {
 834:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13958              		.loc 1 834 48 view .LVU4713
 13959 4bf8 4885D2   		test	rdx, rdx	# tmp204
 13960 4bfb 75CE     		jne	.L1124	#,
 834:sieve_extend.c ****                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marked prime, but %ju * %ju
 13961              		.loc 1 834 48 view .LVU4714
 13962 4bfd 4939EE   		cmp	r14, rbp	# ivtmp.623, _218
GAS LISTING /tmp/ccfflXEb.s 			page 371


 13963 4c00 74C9     		je	.L1124	#,
 835:sieve_extend.c ****                 }
 13964              		.loc 1 835 21 is_stmt 1 view .LVU4715
 13965              	# sieve_extend.c:835:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 835:sieve_extend.c ****                 }
 13966              		.loc 1 835 24 is_stmt 0 view .LVU4716
 13967 4c02 4983F81D 		cmp	r8, 29	# warn_prime,
 13968              	# sieve_extend.c:835:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 835:sieve_extend.c ****                 }
 13969              		.loc 1 835 35 view .LVU4717
 13970 4c06 498D6801 		lea	rbp, 1[r8]	# warn_prime,
 13971              	.LVL851:
 13972              	# sieve_extend.c:835:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 835:sieve_extend.c ****                 }
 13973              		.loc 1 835 24 view .LVU4718
 13974 4c0a 77BC     		ja	.L1135	#,
 835:sieve_extend.c ****                 }
 13975              		.loc 1 835 44 is_stmt 1 view .LVU4719
 13976              	.LVL852:
 13977              	.LBB651:
 13978              	.LBI645:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 13979              		.loc 3 105 1 view .LVU4720
 13980              	.LBB648:
 13981              		.loc 3 107 3 view .LVU4721
 13982              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 13983              		.loc 3 107 10 is_stmt 0 view .LVU4722
 13984 4c0c 4989F0   		mov	r8, rsi	#, _55
 13985 4c0f 4989C1   		mov	r9, rax	#, tmp203
 13986 4c12 BF010000 		mov	edi, 1	#,
 13986      00
 13987 4c17 4C89F9   		mov	rcx, r15	#, prime
 13988 4c1a 4C892424 		mov	QWORD PTR [rsp], r12	#, ivtmp.621
 13989 4c1e 4C89E2   		mov	rdx, r12	#, ivtmp.621
 13990 4c21 488D3500 		lea	rsi, .LC12[rip]	#,
 13990      000000
 13991 4c28 31C0     		xor	eax, eax	#
 13992 4c2a E8000000 		call	__printf_chk@PLT	#
 13992      00
 13993              	.LVL853:
 13994 4c2f 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 13995              	.LBE648:
 13996              	.LBE651:
 13997              	# sieve_extend.c:835:                     if (warn_prime++ < 30) printf("Number %ju (%ju) was marke
 835:sieve_extend.c ****                 }
 13998              		.loc 1 835 35 view .LVU4723
 13999 4c33 4989E8   		mov	r8, rbp	# warn_prime, warn_prime
 14000              	.LBB652:
 14001              	.LBB649:
 14002              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14003              		.loc 3 107 10 view .LVU4724
 14004 4c36 EB93     		jmp	.L1124	#
 14005              	.LVL854:
 14006              	.L1099:
 14007              		.loc 3 107 10 view .LVU4725
 14008              	.LBE649:
 14009              	.LBE652:
GAS LISTING /tmp/ccfflXEb.s 			page 372


 14010              	.LBE663:
 14011              	.LBE666:
 14012              	.LBE668:
 14013              	.LBE670:
 14014              	.LBB671:
 14015              	.LBB636:
 824:sieve_extend.c **** }
 14016              		.loc 1 824 5 is_stmt 1 view .LVU4726
 824:sieve_extend.c **** }
 14017              		.loc 1 824 5 is_stmt 0 view .LVU4727
 14018              	.LBE636:
 14019              	.LBE671:
 853:sieve_extend.c ****     switch(sieve->size) {
 14020              		.loc 1 853 5 is_stmt 1 view .LVU4728
 854:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14021              		.loc 1 854 5 view .LVU4729
 14022 4c38 4531ED   		xor	r13d, r13d	# <retval>
 14023 4c3b 4981F9A0 		cmp	r9, 100000	# pretmp_201,
 14023      860100
 14024 4c42 41BC0100 		mov	r12d, 1	# _135,
 14024      0000
 14025 4c48 41B80100 		mov	r8d, 1	# primeCount,
 14025      0000
 14026 4c4e 0F842202 		je	.L1138	#,
 14026      0000
 14027 4c54 0F872201 		ja	.L1130	#,
 14027      0000
 14028 4c5a 4983F964 		cmp	r9, 100	# pretmp_201,
 14029 4c5e B9190000 		mov	ecx, 25	# valid_primes,
 14029      00
 14030 4c63 742A     		je	.L1117	#,
 14031              		.p2align 4,,2
 14032 4c65 0F863F01 		jbe	.L1251	#,
 14032      0000
 14033 4c6b 4981F9E8 		cmp	r9, 1000	# pretmp_201,
 14033      030000
 14034              	# sieve_extend.c:857:         case 1000:          valid_primes = 168;      break;
 857:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14035              		.loc 1 857 42 is_stmt 0 view .LVU4730
 14036 4c72 B9A80000 		mov	ecx, 168	# valid_primes,
 14036      00
 14037              	# sieve_extend.c:854:     switch(sieve->size) {
 854:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14038              		.loc 1 854 5 view .LVU4731
 14039 4c77 7416     		je	.L1117	#,
 14040 4c79 4981F910 		cmp	r9, 10000	# pretmp_201,
 14040      270000
 14041 4c80 B9CD0400 		mov	ecx, 1229	# tmp223,
 14041      00
 14042 4c85 41BA0000 		mov	r10d, 0	# tmp224,
 14042      0000
 14043 4c8b 490F45CA 		cmovne	rcx, r10	# tmp223,, valid_primes, tmp224
 14044              	.LVL855:
 14045              	.L1117:
 869:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14046              		.loc 1 869 5 is_stmt 1 view .LVU4732
 14047              	# sieve_extend.c:869:     if (!valid && option_verboselevel >= 1) {
GAS LISTING /tmp/ccfflXEb.s 			page 373


 869:sieve_extend.c ****         printf("No valid result. Sievesize %ju was expected to have %ju primes, but algorithm produ
 14048              		.loc 1 869 8 is_stmt 0 view .LVU4733
 14049 4c8f 85DB     		test	ebx, ebx	# option_verboselevel
 14050 4c91 0F8EF7FB 		jle	.L1118	#,
 14050      FFFF
 14051 4c97 4584E4   		test	r12b, r12b	# _135
 14052 4c9a 0F84EEFB 		je	.L1118	#,
 14052      FFFF
 870:sieve_extend.c ****         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_show_primes_on_error);
 14053              		.loc 1 870 9 is_stmt 1 view .LVU4734
 14054              	.LVL856:
 14055              	.LBB672:
 14056              	.LBI672:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14057              		.loc 3 105 1 view .LVU4735
 14058              	.LBB673:
 14059              		.loc 3 107 3 view .LVU4736
 14060              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14061              		.loc 3 107 10 is_stmt 0 view .LVU4737
 14062 4ca0 31C0     		xor	eax, eax	#
 14063 4ca2 4C89CA   		mov	rdx, r9	#, pretmp_201
 14064 4ca5 488D3500 		lea	rsi, .LC10[rip]	#,
 14064      000000
 14065 4cac BF010000 		mov	edi, 1	#,
 14065      00
 14066 4cb1 E8000000 		call	__printf_chk@PLT	#
 14066      00
 14067              	.LVL857:
 14068              		.loc 3 107 10 view .LVU4738
 14069              	.LBE673:
 14070              	.LBE672:
 871:sieve_extend.c ****     }
 14071              		.loc 1 871 9 is_stmt 1 view .LVU4739
 14072              	# sieve_extend.c:871:         if (!valid && option_verboselevel >= 2) show_primes(sieve, default_sh
 871:sieve_extend.c ****     }
 14073              		.loc 1 871 12 is_stmt 0 view .LVU4740
 14074 4cb6 83FB01   		cmp	ebx, 1	# option_verboselevel,
 14075 4cb9 0F8424FE 		je	.L1098	#,
 14075      FFFF
 871:sieve_extend.c ****     }
 14076              		.loc 1 871 49 is_stmt 1 discriminator 1 view .LVU4741
 14077 4cbf 488D7508 		lea	rsi, 8[rbp]	# tmp195,
 14078 4cc3 BA640000 		mov	edx, 100	#,
 14078      00
 14079 4cc8 4889EF   		mov	rdi, rbp	#, sieve
 14080 4ccb E8E0E5FF 		call	show_primes.isra.0	#
 14080      FF
 14081              	.LVL858:
 873:sieve_extend.c ****     return (valid);
 14082              		.loc 1 873 5 discriminator 1 view .LVU4742
 14083 4cd0 E9CBFBFF 		jmp	.L1120	#
 14083      FF
 14084              	.LVL859:
 14085              	.L1249:
 14086              	.LBB674:
 14087              	.LBB669:
 14088              	.LBB667:
GAS LISTING /tmp/ccfflXEb.s 			page 374


 14089              	.LBB664:
 14090              	# sieve_extend.c:844:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 844:sieve_extend.c ****         }
 14091              		.loc 1 844 44 is_stmt 0 view .LVU4743
 14092 4cd5 488B4C24 		mov	rcx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 14092      18
 14093              	# sieve_extend.c:844:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 844:sieve_extend.c ****         }
 14094              		.loc 1 844 28 view .LVU4744
 14095 4cda 4883F91D 		cmp	rcx, 29	# warn_nonprime,
 14096              	# sieve_extend.c:844:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 844:sieve_extend.c ****         }
 14097              		.loc 1 844 44 view .LVU4745
 14098 4cde 488D5901 		lea	rbx, 1[rcx]	# warn_nonprime,
 14099              	.LVL860:
 14100              	# sieve_extend.c:844:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 844:sieve_extend.c ****         }
 14101              		.loc 1 844 28 view .LVU4746
 14102 4ce2 761D     		jbe	.L1133	#,
 14103              	# sieve_extend.c:844:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 844:sieve_extend.c ****         }
 14104              		.loc 1 844 44 view .LVU4747
 14105 4ce4 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 14105      18
 14106 4ce9 E9DBFDFF 		jmp	.L1125	#
 14106      FF
 14107              	.LVL861:
 14108              	.L1236:
 844:sieve_extend.c ****         }
 14109              		.loc 1 844 44 view .LVU4748
 14110 4cee 488B5424 		mov	rdx, QWORD PTR 24[rsp]	# warn_nonprime, %sfp
 14110      18
 14111              	# sieve_extend.c:844:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 844:sieve_extend.c ****         }
 14112              		.loc 1 844 28 view .LVU4749
 14113 4cf3 4883FA1D 		cmp	rdx, 29	# warn_nonprime,
 14114              	# sieve_extend.c:844:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 844:sieve_extend.c ****         }
 14115              		.loc 1 844 44 view .LVU4750
 14116 4cf7 488D5A01 		lea	rbx, 1[rdx]	# warn_nonprime,
 14117              	.LVL862:
 14118              	# sieve_extend.c:844:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
 844:sieve_extend.c ****         }
 14119              		.loc 1 844 28 view .LVU4751
 14120 4cfb 0F87DDFD 		ja	.L1238	#,
 14120      FFFF
 14121              	.LVL863:
 14122              	.L1133:
 14123              	.LBB657:
 14124              	.LBB658:
 14125              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14126              		.loc 3 107 10 view .LVU4752
 14127 4d01 BF010000 		mov	edi, 1	#,
 14127      00
 14128              	.LBE658:
 14129              	.LBE657:
 14130              	# sieve_extend.c:844:             if (c_prime==0 && warn_nonprime++ < 30) printf("Number %ju (%ju) 
GAS LISTING /tmp/ccfflXEb.s 			page 375


 844:sieve_extend.c ****         }
 14131              		.loc 1 844 53 view .LVU4753
 14132 4d06 4B8D543F 		lea	rdx, 1[r15+r15]	# tmp220,
 14132      01
 14133              	.LBB661:
 14134              	.LBB659:
 14135              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14136              		.loc 3 107 10 view .LVU4754
 14137 4d0b 4C89F9   		mov	rcx, r15	#, prime
 14138 4d0e 488D3500 		lea	rsi, .LC13[rip]	#,
 14138      000000
 14139 4d15 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, warn_prime
 14139      28
 14140              	.LBE659:
 14141              	.LBE661:
 844:sieve_extend.c ****         }
 14142              		.loc 1 844 53 is_stmt 1 view .LVU4755
 14143              	.LVL864:
 14144              	.LBB662:
 14145              	.LBI657:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14146              		.loc 3 105 1 view .LVU4756
 14147              	.LBB660:
 14148              		.loc 3 107 3 view .LVU4757
 14149              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14150              		.loc 3 107 10 is_stmt 0 view .LVU4758
 14151 4d1a 31C0     		xor	eax, eax	#
 14152 4d1c E8000000 		call	__printf_chk@PLT	#
 14152      00
 14153              	.LVL865:
 14154              		.loc 3 107 10 view .LVU4759
 14155 4d21 498B7D08 		mov	rdi, QWORD PTR 8[r13]	# _137, MEM[(uint64_t *)sieve_18(D) + 8B]
 14156 4d25 4C8B4424 		mov	r8, QWORD PTR 40[rsp]	# warn_prime, %sfp
 14156      28
 14157 4d2a 48895C24 		mov	QWORD PTR 24[rsp], rbx	# %sfp, warn_nonprime
 14157      18
 14158 4d2f E995FDFF 		jmp	.L1125	#
 14158      FF
 14159              	.LVL866:
 14160              	.L1113:
 14161              		.loc 3 107 10 view .LVU4760
 14162 4d34 4981F8A2 		cmp	r8, 78498	# primeCount,
 14162      320100
 14163              	.LBE660:
 14164              	.LBE662:
 14165              	.LBE664:
 14166              	.LBE667:
 14167              	.LBE669:
 14168              	.LBE674:
 14169              	# sieve_extend.c:860:         case 1000000:       valid_primes = 78498;    break;
 860:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14170              		.loc 1 860 42 view .LVU4761
 14171 4d3b B9A23201 		mov	ecx, 78498	# valid_primes,
 14171      00
 14172 4d40 410F94C6 		sete	r14b	#, tmp183
 14173 4d44 4421F2   		and	edx, r14d	# _253, tmp183
 14174 4d47 4981F8A2 		cmp	r8, 78498	# primeCount,
GAS LISTING /tmp/ccfflXEb.s 			page 376


 14174      320100
 14175 4d4e 450FB6EE 		movzx	r13d, r14b	# <retval>, tmp183
 14176 4d52 410F95C4 		setne	r12b	#, _135
 860:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14177              		.loc 1 860 29 is_stmt 1 view .LVU4762
 14178              	.LVL867:
 860:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14179              		.loc 1 860 54 view .LVU4763
 14180              	# sieve_extend.c:860:         case 1000000:       valid_primes = 78498;    break;
 860:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14181              		.loc 1 860 9 is_stmt 0 view .LVU4764
 14182 4d56 E915FBFF 		jmp	.L1116	#
 14182      FF
 14183              	.LVL868:
 14184              	.L1107:
 860:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14185              		.loc 1 860 9 view .LVU4765
 14186 4d5b 4983F804 		cmp	r8, 4	# primeCount,
 14187              	# sieve_extend.c:855:         case 10:            valid_primes = 4;        break;
 855:sieve_extend.c ****         case 100:           valid_primes = 25;       break;
 14188              		.loc 1 855 42 view .LVU4766
 14189 4d5f B9040000 		mov	ecx, 4	# valid_primes,
 14189      00
 14190 4d64 410F94C2 		sete	r10b	#, tmp175
 14191 4d68 4421D2   		and	edx, r10d	# _253, tmp175
 14192 4d6b 4983F804 		cmp	r8, 4	# primeCount,
 14193 4d6f 450FB6EA 		movzx	r13d, r10b	# <retval>, tmp175
 14194 4d73 410F95C4 		setne	r12b	#, _135
 14195 4d77 E9F4FAFF 		jmp	.L1116	#
 14195      FF
 14196              	.LVL869:
 14197              	.L1130:
 14198              	# sieve_extend.c:854:     switch(sieve->size) {
 854:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14199              		.loc 1 854 5 view .LVU4767
 14200 4d7c 4981F900 		cmp	r9, 100000000	# pretmp_201,
 14200      E1F505
 14201              	# sieve_extend.c:862:         case 100000000:     valid_primes = 5761455;  break;
 862:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14202              		.loc 1 862 42 view .LVU4768
 14203 4d83 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 14203      00
 14204              	# sieve_extend.c:854:     switch(sieve->size) {
 854:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14205              		.loc 1 854 5 view .LVU4769
 14206 4d88 0F8401FF 		je	.L1117	#,
 14206      FFFF
 14207 4d8e 762C     		jbe	.L1252	#,
 14208 4d90 4981F900 		cmp	r9, 1000000000	# pretmp_201,
 14208      CA9A3B
 14209 4d97 B92EDF07 		mov	ecx, 50847534	# tmp227,
 14209      03
 14210 4d9c B8000000 		mov	eax, 0	# tmp228,
 14210      00
 14211 4da1 480F45C8 		cmovne	rcx, rax	# tmp227,, valid_primes, tmp228
 14212 4da5 E9E5FEFF 		jmp	.L1117	#
 14212      FF
GAS LISTING /tmp/ccfflXEb.s 			page 377


 14213              	.L1251:
 14214 4daa 31C9     		xor	ecx, ecx	# valid_primes
 14215 4dac 4983F90A 		cmp	r9, 10	# pretmp_201,
 14216 4db0 0F94C1   		sete	cl	#, valid_primes
 14217 4db3 48C1E102 		sal	rcx, 2	# valid_primes,
 14218 4db7 E9D3FEFF 		jmp	.L1117	#
 14218      FF
 14219              	.L1252:
 14220 4dbc 4981F940 		cmp	r9, 1000000	# pretmp_201,
 14220      420F00
 14221              	# sieve_extend.c:860:         case 1000000:       valid_primes = 78498;    break;
 860:sieve_extend.c ****         case 10000000:      valid_primes = 664579;   break;
 14222              		.loc 1 860 42 view .LVU4770
 14223 4dc3 B9A23201 		mov	ecx, 78498	# valid_primes,
 14223      00
 14224              	# sieve_extend.c:854:     switch(sieve->size) {
 854:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14225              		.loc 1 854 5 view .LVU4771
 14226 4dc8 0F84C1FE 		je	.L1117	#,
 14226      FFFF
 14227 4dce 4981F980 		cmp	r9, 10000000	# pretmp_201,
 14227      969800
 14228 4dd5 B903240A 		mov	ecx, 664579	# tmp225,
 14228      00
 14229 4dda BE000000 		mov	esi, 0	# tmp226,
 14229      00
 14230 4ddf 480F45CE 		cmovne	rcx, rsi	# tmp225,, valid_primes, tmp226
 14231 4de3 E9A7FEFF 		jmp	.L1117	#
 14231      FF
 14232              	.LVL870:
 14233              	.L1105:
 854:sieve_extend.c ****         case 10:            valid_primes = 4;        break;
 14234              		.loc 1 854 5 view .LVU4772
 14235 4de8 4981F8A8 		cmp	r8, 168	# primeCount,
 14235      000000
 14236              	# sieve_extend.c:857:         case 1000:          valid_primes = 168;      break;
 857:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14237              		.loc 1 857 42 view .LVU4773
 14238 4def B9A80000 		mov	ecx, 168	# valid_primes,
 14238      00
 14239 4df4 410F94C4 		sete	r12b	#, tmp177
 14240 4df8 4421E2   		and	edx, r12d	# _253, tmp177
 14241 4dfb 4981F8A8 		cmp	r8, 168	# primeCount,
 14241      000000
 14242 4e02 450FB6EC 		movzx	r13d, r12b	# <retval>, tmp177
 14243 4e06 410F95C4 		setne	r12b	#, _135
 857:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14244              		.loc 1 857 29 is_stmt 1 view .LVU4774
 14245              	.LVL871:
 857:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14246              		.loc 1 857 54 view .LVU4775
 14247              	# sieve_extend.c:857:         case 1000:          valid_primes = 168;      break;
 857:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14248              		.loc 1 857 9 is_stmt 0 view .LVU4776
 14249 4e0a E961FAFF 		jmp	.L1116	#
 14249      FF
 14250              	.LVL872:
GAS LISTING /tmp/ccfflXEb.s 			page 378


 14251              	.L1111:
 857:sieve_extend.c ****         case 10000:         valid_primes = 1229;     break;
 14252              		.loc 1 857 9 view .LVU4777
 14253 4e0f 4981F8AF 		cmp	r8, 5761455	# primeCount,
 14253      E95700
 14254              	# sieve_extend.c:862:         case 100000000:     valid_primes = 5761455;  break;
 862:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14255              		.loc 1 862 42 view .LVU4778
 14256 4e16 B9AFE957 		mov	ecx, 5761455	# valid_primes,
 14256      00
 14257 4e1b 0F94C0   		sete	al	#, tmp187
 14258 4e1e 21C2     		and	edx, eax	# _253, tmp187
 14259 4e20 4981F8AF 		cmp	r8, 5761455	# primeCount,
 14259      E95700
 14260 4e27 440FB6E8 		movzx	r13d, al	# <retval>, tmp187
 14261 4e2b 410F95C4 		setne	r12b	#, _135
 862:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14262              		.loc 1 862 29 is_stmt 1 view .LVU4779
 14263              	.LVL873:
 862:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14264              		.loc 1 862 54 view .LVU4780
 14265              	# sieve_extend.c:862:         case 100000000:     valid_primes = 5761455;  break;
 862:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14266              		.loc 1 862 9 is_stmt 0 view .LVU4781
 14267 4e2f E93CFAFF 		jmp	.L1116	#
 14267      FF
 14268              	.LVL874:
 14269              	.L1109:
 862:sieve_extend.c ****         case 1000000000:    valid_primes = 50847534; break;
 14270              		.loc 1 862 9 view .LVU4782
 14271 4e34 4D85C0   		test	r8, r8	# primeCount
 14272 4e37 410F94C3 		sete	r11b	#, tmp191
 14273 4e3b 4421DA   		and	edx, r11d	# _253, tmp191
 14274 4e3e 4D85C0   		test	r8, r8	# primeCount
 14275 4e41 450FB6EB 		movzx	r13d, r11b	# <retval>, tmp191
 14276 4e45 410F95C4 		setne	r12b	#, _135
 864:sieve_extend.c ****     }
 14277              		.loc 1 864 29 is_stmt 1 view .LVU4783
 14278              	# sieve_extend.c:864:         default:            valid_primes= 0;
 864:sieve_extend.c ****     }
 14279              		.loc 1 864 41 is_stmt 0 view .LVU4784
 14280 4e49 31C9     		xor	ecx, ecx	# valid_primes
 14281 4e4b E920FAFF 		jmp	.L1116	#
 14281      FF
 14282              	.L1103:
 864:sieve_extend.c ****     }
 14283              		.loc 1 864 41 view .LVU4785
 14284 4e50 4981F878 		cmp	r8, 9592	# primeCount,
 14284      250000
 14285              	# sieve_extend.c:859:         case 100000:        valid_primes = 9592;     break;
 859:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14286              		.loc 1 859 42 view .LVU4786
 14287 4e57 B9782500 		mov	ecx, 9592	# valid_primes,
 14287      00
 14288 4e5c 400F94C7 		sete	dil	#, tmp181
 14289 4e60 21FA     		and	edx, edi	# _253, tmp181
 14290 4e62 4981F878 		cmp	r8, 9592	# primeCount,
GAS LISTING /tmp/ccfflXEb.s 			page 379


 14290      250000
 14291 4e69 440FB6EF 		movzx	r13d, dil	# <retval>, tmp181
 14292 4e6d 410F95C4 		setne	r12b	#, _135
 859:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14293              		.loc 1 859 29 is_stmt 1 view .LVU4787
 14294              	.LVL875:
 859:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14295              		.loc 1 859 54 view .LVU4788
 14296              	# sieve_extend.c:859:         case 100000:        valid_primes = 9592;     break;
 859:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14297              		.loc 1 859 9 is_stmt 0 view .LVU4789
 14298 4e71 E9FAF9FF 		jmp	.L1116	#
 14298      FF
 14299              	.LVL876:
 14300              	.L1138:
 14301              	# sieve_extend.c:859:         case 100000:        valid_primes = 9592;     break;
 859:sieve_extend.c ****         case 1000000:       valid_primes = 78498;    break;
 14302              		.loc 1 859 42 view .LVU4790
 14303 4e76 B9782500 		mov	ecx, 9592	# valid_primes,
 14303      00
 14304 4e7b E90FFEFF 		jmp	.L1117	#
 14304      FF
 14305              		.cfi_endproc
 14306              	.LFE81:
 14308              		.section	.rodata.str1.8
 14309 0145 000000   		.align 8
 14310              	.LC14:
 14311 0148 55736167 		.string	"Usage: %s [options] [maximum]\n"
 14311      653A2025 
 14311      73205B6F 
 14311      7074696F 
 14311      6E735D20 
 14312              		.section	.rodata.str1.1
 14313              	.LC15:
 14314 0031 4F707469 		.string	"Options:\n"
 14314      6F6E733A 
 14314      0A00
 14315              		.section	.rodata.str1.8
 14316 0167 00       		.align 8
 14317              	.LC16:
 14318 0168 20202D2D 		.string	"  --verbose <level>  Show more output to a certain level:\n"
 14318      76657262 
 14318      6F736520 
 14318      3C6C6576 
 14318      656C3E20 
 14319 01a3 00000000 		.align 8
 14319      00
 14320              	.LC17:
 14321 01a8 20202020 		.string	"                     1 - show phase progress\n"
 14321      20202020 
 14321      20202020 
 14321      20202020 
 14321      20202020 
 14322 01d6 0000     		.align 8
 14323              	.LC18:
 14324 01d8 20202020 		.string	"                     2 - show general progress within the phase\n"
 14324      20202020 
GAS LISTING /tmp/ccfflXEb.s 			page 380


 14324      20202020 
 14324      20202020 
 14324      20202020 
 14325 0219 00000000 		.align 8
 14325      000000
 14326              	.LC19:
 14327 0220 20202020 		.string	"                     3 - show actual work\n"
 14327      20202020 
 14327      20202020 
 14327      20202020 
 14327      20202020 
 14328 024b 00000000 		.align 8
 14328      00
 14329              	.LC20:
 14330 0250 20202D2D 		.string	"  --check            check the correctness of the algorithm\n"
 14330      63686563 
 14330      6B202020 
 14330      20202020 
 14330      20202020 
 14331 028d 000000   		.align 8
 14332              	.LC21:
 14333 0290 20202D2D 		.string	"  --show <maximum>   Show the primes found up to the maximum\n"
 14333      73686F77 
 14333      203C6D61 
 14333      78696D75 
 14333      6D3E2020 
 14334 02ce 0000     		.align 8
 14335              	.LC22:
 14336 02d0 20202D2D 		.string	"  --tune  <level>    find the best settings for the current os and hardware\n"
 14336      74756E65 
 14336      20203C6C 
 14336      6576656C 
 14336      3E202020 
 14337 031d 000000   		.align 8
 14338              	.LC23:
 14339 0320 20202020 		.string	"                     1 - fast tuning\n"
 14339      20202020 
 14339      20202020 
 14339      20202020 
 14339      20202020 
 14340 0346 0000     		.align 8
 14341              	.LC24:
 14342 0348 20202020 		.string	"                     2 - refined tuning\n"
 14342      20202020 
 14342      20202020 
 14342      20202020 
 14342      20202020 
 14343 0371 00000000 		.align 8
 14343      000000
 14344              	.LC25:
 14345 0378 20202020 		.string	"                     3 - maximum tuning (takes long)\n"
 14345      20202020 
 14345      20202020 
 14345      20202020 
 14345      20202020 
 14346              		.text
 14347              		.p2align 4
GAS LISTING /tmp/ccfflXEb.s 			page 381


 14348              		.globl	usage
 14350              	usage:
 14351              	.LVL877:
 14352              	.LFB82:
 877:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14353              		.loc 1 877 24 is_stmt 1 view -0
 14354              		.cfi_startproc
 877:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14355              		.loc 1 877 24 is_stmt 0 view .LVU4792
 14356 4e80 F30F1EFA 		endbr64	
 14357 4e84 50       		push	rax	#
 14358              		.cfi_def_cfa_offset 16
 14359 4e85 58       		pop	rax	#
 14360              		.cfi_def_cfa_offset 8
 878:sieve_extend.c ****     fprintf(stderr, "Options:\n");
 14361              		.loc 1 878 5 is_stmt 1 view .LVU4793
 14362              	.LVL878:
 14363              	.LBB675:
 14364              	.LBI675:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14365              		.loc 3 98 1 view .LVU4794
 14366              	.LBB676:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14367              		.loc 3 100 3 view .LVU4795
 14368              	.LBE676:
 14369              	.LBE675:
 14370              	# sieve_extend.c:877: void usage(char *name) {
 877:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14371              		.loc 1 877 24 is_stmt 0 view .LVU4796
 14372 4e86 488D6424 		lea	rsp, -8[rsp]	#,
 14372      F8
 14373              		.cfi_def_cfa_offset 16
 14374              	# sieve_extend.c:877: void usage(char *name) {
 877:sieve_extend.c ****     fprintf(stderr, "Usage: %s [options] [maximum]\n", name);
 14375              		.loc 1 877 24 view .LVU4797
 14376 4e8b 4889F9   		mov	rcx, rdi	# name, tmp107
 14377              	.LBB678:
 14378              	.LBB677:
 14379              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14380              		.loc 3 100 10 view .LVU4798
 14381 4e8e 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 14381      000000
 14382              	.LVL879:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14383              		.loc 3 100 10 view .LVU4799
 14384 4e95 488D1500 		lea	rdx, .LC14[rip]	#,
 14384      000000
 14385 4e9c BE010000 		mov	esi, 1	#,
 14385      00
 14386 4ea1 31C0     		xor	eax, eax	#
 14387 4ea3 E8000000 		call	__fprintf_chk@PLT	#
 14387      00
 14388              	.LVL880:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14389              		.loc 3 100 10 view .LVU4800
 14390              	.LBE677:
GAS LISTING /tmp/ccfflXEb.s 			page 382


 14391              	.LBE678:
 879:sieve_extend.c ****     fprintf(stderr, "  --verbose <level>  Show more output to a certain level:\n");
 14392              		.loc 1 879 5 is_stmt 1 view .LVU4801
 14393              	.LBB679:
 14394              	.LBI679:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14395              		.loc 3 98 1 view .LVU4802
 14396              	.LBB680:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14397              		.loc 3 100 3 view .LVU4803
 14398              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14399              		.loc 3 100 10 is_stmt 0 view .LVU4804
 14400 4ea8 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14400      000000
 14401 4eaf BA090000 		mov	edx, 9	#,
 14401      00
 14402 4eb4 BE010000 		mov	esi, 1	#,
 14402      00
 14403 4eb9 488D3D00 		lea	rdi, .LC15[rip]	#,
 14403      000000
 14404 4ec0 E8000000 		call	fwrite@PLT	#
 14404      00
 14405              	.LVL881:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14406              		.loc 3 100 10 view .LVU4805
 14407              	.LBE680:
 14408              	.LBE679:
 880:sieve_extend.c ****     fprintf(stderr, "                     1 - show phase progress\n");
 14409              		.loc 1 880 5 is_stmt 1 view .LVU4806
 14410              	.LBB681:
 14411              	.LBI681:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14412              		.loc 3 98 1 view .LVU4807
 14413              	.LBB682:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14414              		.loc 3 100 3 view .LVU4808
 14415              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14416              		.loc 3 100 10 is_stmt 0 view .LVU4809
 14417 4ec5 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14417      000000
 14418 4ecc BA3A0000 		mov	edx, 58	#,
 14418      00
 14419 4ed1 BE010000 		mov	esi, 1	#,
 14419      00
 14420 4ed6 488D3D00 		lea	rdi, .LC16[rip]	#,
 14420      000000
 14421 4edd E8000000 		call	fwrite@PLT	#
 14421      00
 14422              	.LVL882:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14423              		.loc 3 100 10 view .LVU4810
 14424              	.LBE682:
 14425              	.LBE681:
 881:sieve_extend.c ****     fprintf(stderr, "                     2 - show general progress within the phase\n");
 14426              		.loc 1 881 5 is_stmt 1 view .LVU4811
GAS LISTING /tmp/ccfflXEb.s 			page 383


 14427              	.LBB683:
 14428              	.LBI683:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14429              		.loc 3 98 1 view .LVU4812
 14430              	.LBB684:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14431              		.loc 3 100 3 view .LVU4813
 14432              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14433              		.loc 3 100 10 is_stmt 0 view .LVU4814
 14434 4ee2 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14434      000000
 14435 4ee9 BA2D0000 		mov	edx, 45	#,
 14435      00
 14436 4eee BE010000 		mov	esi, 1	#,
 14436      00
 14437 4ef3 488D3D00 		lea	rdi, .LC17[rip]	#,
 14437      000000
 14438 4efa E8000000 		call	fwrite@PLT	#
 14438      00
 14439              	.LVL883:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14440              		.loc 3 100 10 view .LVU4815
 14441              	.LBE684:
 14442              	.LBE683:
 882:sieve_extend.c ****     fprintf(stderr, "                     3 - show actual work\n");
 14443              		.loc 1 882 5 is_stmt 1 view .LVU4816
 14444              	.LBB685:
 14445              	.LBI685:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14446              		.loc 3 98 1 view .LVU4817
 14447              	.LBB686:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14448              		.loc 3 100 3 view .LVU4818
 14449              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14450              		.loc 3 100 10 is_stmt 0 view .LVU4819
 14451 4eff 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14451      000000
 14452 4f06 BA400000 		mov	edx, 64	#,
 14452      00
 14453 4f0b BE010000 		mov	esi, 1	#,
 14453      00
 14454 4f10 488D3D00 		lea	rdi, .LC18[rip]	#,
 14454      000000
 14455 4f17 E8000000 		call	fwrite@PLT	#
 14455      00
 14456              	.LVL884:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14457              		.loc 3 100 10 view .LVU4820
 14458              	.LBE686:
 14459              	.LBE685:
 883:sieve_extend.c ****     fprintf(stderr, "  --check            check the correctness of the algorithm\n");
 14460              		.loc 1 883 5 is_stmt 1 view .LVU4821
 14461              	.LBB687:
 14462              	.LBI687:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
GAS LISTING /tmp/ccfflXEb.s 			page 384


 14463              		.loc 3 98 1 view .LVU4822
 14464              	.LBB688:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14465              		.loc 3 100 3 view .LVU4823
 14466              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14467              		.loc 3 100 10 is_stmt 0 view .LVU4824
 14468 4f1c 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14468      000000
 14469 4f23 BA2A0000 		mov	edx, 42	#,
 14469      00
 14470 4f28 BE010000 		mov	esi, 1	#,
 14470      00
 14471 4f2d 488D3D00 		lea	rdi, .LC19[rip]	#,
 14471      000000
 14472 4f34 E8000000 		call	fwrite@PLT	#
 14472      00
 14473              	.LVL885:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14474              		.loc 3 100 10 view .LVU4825
 14475              	.LBE688:
 14476              	.LBE687:
 884:sieve_extend.c ****     fprintf(stderr, "  --show <maximum>   Show the primes found up to the maximum\n");
 14477              		.loc 1 884 5 is_stmt 1 view .LVU4826
 14478              	.LBB689:
 14479              	.LBI689:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14480              		.loc 3 98 1 view .LVU4827
 14481              	.LBB690:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14482              		.loc 3 100 3 view .LVU4828
 14483              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14484              		.loc 3 100 10 is_stmt 0 view .LVU4829
 14485 4f39 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14485      000000
 14486 4f40 BA3C0000 		mov	edx, 60	#,
 14486      00
 14487 4f45 BE010000 		mov	esi, 1	#,
 14487      00
 14488 4f4a 488D3D00 		lea	rdi, .LC20[rip]	#,
 14488      000000
 14489 4f51 E8000000 		call	fwrite@PLT	#
 14489      00
 14490              	.LVL886:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14491              		.loc 3 100 10 view .LVU4830
 14492              	.LBE690:
 14493              	.LBE689:
 885:sieve_extend.c ****     fprintf(stderr, "  --tune  <level>    find the best settings for the current os and hardware\n"
 14494              		.loc 1 885 5 is_stmt 1 view .LVU4831
 14495              	.LBB691:
 14496              	.LBI691:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14497              		.loc 3 98 1 view .LVU4832
 14498              	.LBB692:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccfflXEb.s 			page 385


 14499              		.loc 3 100 3 view .LVU4833
 14500              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14501              		.loc 3 100 10 is_stmt 0 view .LVU4834
 14502 4f56 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14502      000000
 14503 4f5d BA3D0000 		mov	edx, 61	#,
 14503      00
 14504 4f62 BE010000 		mov	esi, 1	#,
 14504      00
 14505 4f67 488D3D00 		lea	rdi, .LC21[rip]	#,
 14505      000000
 14506 4f6e E8000000 		call	fwrite@PLT	#
 14506      00
 14507              	.LVL887:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14508              		.loc 3 100 10 view .LVU4835
 14509              	.LBE692:
 14510              	.LBE691:
 886:sieve_extend.c ****     fprintf(stderr, "                     1 - fast tuning\n");
 14511              		.loc 1 886 5 is_stmt 1 view .LVU4836
 14512              	.LBB693:
 14513              	.LBI693:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14514              		.loc 3 98 1 view .LVU4837
 14515              	.LBB694:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14516              		.loc 3 100 3 view .LVU4838
 14517              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14518              		.loc 3 100 10 is_stmt 0 view .LVU4839
 14519 4f73 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14519      000000
 14520 4f7a BA4C0000 		mov	edx, 76	#,
 14520      00
 14521 4f7f BE010000 		mov	esi, 1	#,
 14521      00
 14522 4f84 488D3D00 		lea	rdi, .LC22[rip]	#,
 14522      000000
 14523 4f8b E8000000 		call	fwrite@PLT	#
 14523      00
 14524              	.LVL888:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14525              		.loc 3 100 10 view .LVU4840
 14526              	.LBE694:
 14527              	.LBE693:
 887:sieve_extend.c ****     fprintf(stderr, "                     2 - refined tuning\n");
 14528              		.loc 1 887 5 is_stmt 1 view .LVU4841
 14529              	.LBB695:
 14530              	.LBI695:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14531              		.loc 3 98 1 view .LVU4842
 14532              	.LBB696:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14533              		.loc 3 100 3 view .LVU4843
 14534              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccfflXEb.s 			page 386


 14535              		.loc 3 100 10 is_stmt 0 view .LVU4844
 14536 4f90 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14536      000000
 14537 4f97 BA250000 		mov	edx, 37	#,
 14537      00
 14538 4f9c BE010000 		mov	esi, 1	#,
 14538      00
 14539 4fa1 488D3D00 		lea	rdi, .LC23[rip]	#,
 14539      000000
 14540 4fa8 E8000000 		call	fwrite@PLT	#
 14540      00
 14541              	.LVL889:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14542              		.loc 3 100 10 view .LVU4845
 14543              	.LBE696:
 14544              	.LBE695:
 888:sieve_extend.c ****     fprintf(stderr, "                     3 - maximum tuning (takes long)\n");
 14545              		.loc 1 888 5 is_stmt 1 view .LVU4846
 14546              	.LBB697:
 14547              	.LBI697:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14548              		.loc 3 98 1 view .LVU4847
 14549              	.LBB698:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14550              		.loc 3 100 3 view .LVU4848
 14551              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14552              		.loc 3 100 10 is_stmt 0 view .LVU4849
 14553 4fad 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14553      000000
 14554 4fb4 BA280000 		mov	edx, 40	#,
 14554      00
 14555 4fb9 BE010000 		mov	esi, 1	#,
 14555      00
 14556 4fbe 488D3D00 		lea	rdi, .LC24[rip]	#,
 14556      000000
 14557 4fc5 E8000000 		call	fwrite@PLT	#
 14557      00
 14558              	.LVL890:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14559              		.loc 3 100 10 view .LVU4850
 14560              	.LBE698:
 14561              	.LBE697:
 889:sieve_extend.c ****     exit(1);
 14562              		.loc 1 889 5 is_stmt 1 view .LVU4851
 14563              	.LBB699:
 14564              	.LBI699:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14565              		.loc 3 98 1 view .LVU4852
 14566              	.LBB700:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14567              		.loc 3 100 3 view .LVU4853
 14568              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14569              		.loc 3 100 10 is_stmt 0 view .LVU4854
 14570 4fca 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 14570      000000
GAS LISTING /tmp/ccfflXEb.s 			page 387


 14571 4fd1 488D3D00 		lea	rdi, .LC25[rip]	#,
 14571      000000
 14572 4fd8 BA350000 		mov	edx, 53	#,
 14572      00
 14573 4fdd BE010000 		mov	esi, 1	#,
 14573      00
 14574 4fe2 E8000000 		call	fwrite@PLT	#
 14574      00
 14575              	.LVL891:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 14576              		.loc 3 100 10 view .LVU4855
 14577              	.LBE700:
 14578              	.LBE699:
 890:sieve_extend.c **** }
 14579              		.loc 1 890 5 is_stmt 1 view .LVU4856
 14580 4fe7 BF010000 		mov	edi, 1	#,
 14580      00
 14581 4fec E8000000 		call	exit@PLT	#
 14581      00
 14582              	.LVL892:
 14583              		.cfi_endproc
 14584              	.LFE82:
 14586              		.section	.rodata.str1.1
 14587              	.LC26:
 14588 003b 256400   		.string	"%d"
 14589              	.LC27:
 14590 003e 2C253033 		.string	",%03d"
 14590      6400
 14591              		.text
 14592 4ff1 66662E0F 		.p2align 4
 14592      1F840000 
 14592      0000000F 
 14592      1F4000
 14593              		.globl	printfcomma2
 14595              	printfcomma2:
 14596              	.LVL893:
 14597              	.LFB87:
 936:sieve_extend.c **** 
 937:sieve_extend.c **** static inline void tuning_result_print(tuning_result_type tuning_result) {
 938:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 939:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 940:sieve_extend.c ****                             (uintmax_t)tuning_result.smallstep_faster,(uintmax_t)tuning_result.medi
 941:sieve_extend.c ****                             (uintmax_t)tuning_result.passes, (uintmax_t) tuning_result.sample_max,
 942:sieve_extend.c ****                             tuning_result.elapsed_time, tuning_result.sample_duration, tuning_resul
 943:sieve_extend.c **** }
 944:sieve_extend.c **** 
 945:sieve_extend.c **** static tuning_result_type tune(int tune_level, counter_t maxints, int option_verboselevel) {
 946:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 947:sieve_extend.c **** 
 948:sieve_extend.c ****     double best_avg = 0;
 949:sieve_extend.c ****     best_blocksize_bits = 0;
 950:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 951:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 952:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 953:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 954:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 955:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
GAS LISTING /tmp/ccfflXEb.s 			page 388


 956:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 957:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 958:sieve_extend.c ****     double sample_duration = default_sample_duration;
 959:sieve_extend.c **** 
 960:sieve_extend.c ****     // determines the size of the resultset
 961:sieve_extend.c ****     switch (tune_level) {
 962:sieve_extend.c ****         case 1:
 963:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/4;
 964:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/4;
 965:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/2;
 966:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8*2;
 967:sieve_extend.c ****             sample_max = 8;
 968:sieve_extend.c ****             sample_duration = 0.1;
 969:sieve_extend.c ****             break;
 970:sieve_extend.c ****         case 2:
 971:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/8;
 972:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/8;
 973:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/4;
 974:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize*8;
 975:sieve_extend.c ****             sample_max = 8;
 976:sieve_extend.c ****             sample_duration = 0.2;
 977:sieve_extend.c ****             break;
 978:sieve_extend.c ****         case 3:
 979:sieve_extend.c ****             smallstep_faster_steps  = WORD_SIZE/16;
 980:sieve_extend.c ****             mediumstep_faster_steps = WORD_SIZE/16;
 981:sieve_extend.c ****             vectorstep_faster_steps = WORD_SIZE/16;
 982:sieve_extend.c ****             freebits_steps = anticiped_cache_line_bytesize/2;
 983:sieve_extend.c ****             sample_max = 8;
 984:sieve_extend.c ****             sample_duration = 0.2;
 985:sieve_extend.c ****             break;
 986:sieve_extend.c ****     }
 987:sieve_extend.c ****     
 988:sieve_extend.c ****     if (option_verboselevel >= 1) printf("Tuning..."); 
 989:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 990:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 991:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 992:sieve_extend.c ****     counter_t tuning_results=0;
 993:sieve_extend.c ****     counter_t tuning_result_index=0;
 994:sieve_extend.c ****     
 995:sieve_extend.c ****     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_counter/2; smallstep_faster 
 996:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 997:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 998:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 999:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
1000:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
1001:sieve_extend.c **** 
1002:sieve_extend.c ****                         // set variables
1003:sieve_extend.c ****                         tuning_results++;
1004:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
1005:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
1006:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
1007:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
1008:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
1009:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
1010:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
1011:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
1012:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
GAS LISTING /tmp/ccfflXEb.s 			page 389


1013:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
1014:sieve_extend.c **** 
1015:sieve_extend.c ****                         if ( tuning_result[tuning_result_index].avg > best_avg) {
1016:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
1017:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
1018:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
1019:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
1020:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
1021:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
1022:sieve_extend.c ****                         }
1023:sieve_extend.c ****                         if (option_verboselevel >= 3) { printf("...."); tuning_result_print(tuning_
1024:sieve_extend.c ****                         tuning_result_index++;
1025:sieve_extend.c ****                     }
1026:sieve_extend.c ****                 }
1027:sieve_extend.c ****             }
1028:sieve_extend.c ****         }
1029:sieve_extend.c ****     }
1030:sieve_extend.c ****     if (option_verboselevel >= 2) {
1031:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
1032:sieve_extend.c ****         printf("Best options\n");
1033:sieve_extend.c ****     }
1034:sieve_extend.c ****     counter_t step=0;
1035:sieve_extend.c ****     while (tuning_results>4) {
1036:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
1037:sieve_extend.c ****         step++;
1038:sieve_extend.c ****         if (option_verboselevel >= 2) {
1039:sieve_extend.c ****             tuning_result_index = 0;
1040:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
1041:sieve_extend.c ****             if (option_verboselevel >= 3) {
1042:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
1043:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
1044:sieve_extend.c ****                 }
1045:sieve_extend.c ****             }
1046:sieve_extend.c ****         }
1047:sieve_extend.c **** 
1048:sieve_extend.c ****         tuning_results = tuning_results / 2;
1049:sieve_extend.c **** 
1050:sieve_extend.c ****         for (counter_t i=0; i<tuning_results; i++) {
1051:sieve_extend.c ****             tune_benchmark(tuning_result, i);
1052:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
1053:sieve_extend.c ****         }
1054:sieve_extend.c ****         
1055:sieve_extend.c ****     }
1056:sieve_extend.c ****     tuning_result_type best_result = tuning_result[0];
1057:sieve_extend.c ****     if (option_verboselevel >= 1) {
1058:sieve_extend.c ****         tuning_result_index = 0;
1059:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
1060:sieve_extend.c ****     }
1061:sieve_extend.c **** 
1062:sieve_extend.c ****     free(tuning_result);
1063:sieve_extend.c ****     return best_result;
1064:sieve_extend.c **** }
1065:sieve_extend.c **** 
1066:sieve_extend.c **** void printfcomma2 (int n) {
 14598              		.loc 1 1066 27 view -0
 14599              		.cfi_startproc
 14600              		.loc 1 1066 27 is_stmt 0 view .LVU4858
GAS LISTING /tmp/ccfflXEb.s 			page 390


 14601 5000 F30F1EFA 		endbr64	
1067:sieve_extend.c ****     if (n < 1000) {
 14602              		.loc 1 1067 5 is_stmt 1 view .LVU4859
 14603              	# sieve_extend.c:1066: void printfcomma2 (int n) {
1066:sieve_extend.c ****     if (n < 1000) {
 14604              		.loc 1 1066 27 is_stmt 0 view .LVU4860
 14605 5004 4154     		push	r12	#
 14606              		.cfi_def_cfa_offset 16
 14607              		.cfi_offset 12, -16
 14608              	.LBB711:
 14609              	.LBB712:
 14610              	.LBB713:
 14611              	.LBB714:
 14612              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14613              		.loc 3 107 10 view .LVU4861
 14614 5006 89FA     		mov	edx, edi	#, n
 14615              	.LBE714:
 14616              	.LBE713:
 14617              	.LBE712:
 14618              	.LBE711:
 14619              	# sieve_extend.c:1066: void printfcomma2 (int n) {
1066:sieve_extend.c ****     if (n < 1000) {
 14620              		.loc 1 1066 27 view .LVU4862
 14621 5008 4189FC   		mov	r12d, edi	# n, tmp99
 14622 500b 53       		push	rbx	#
 14623              		.cfi_def_cfa_offset 24
 14624              		.cfi_offset 3, -24
 14625              	.LBB718:
 14626              	.LBB717:
 14627              	.LBB716:
 14628              	.LBB715:
 14629              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14630              		.loc 3 107 10 view .LVU4863
 14631 500c 488D3500 		lea	rsi, .LC26[rip]	#,
 14631      000000
 14632              	.LBE715:
 14633              	.LBE716:
 14634              	.LBE717:
 14635              	.LBE718:
 14636              	# sieve_extend.c:1066: void printfcomma2 (int n) {
1066:sieve_extend.c ****     if (n < 1000) {
 14637              		.loc 1 1066 27 view .LVU4864
 14638 5013 488D6424 		lea	rsp, -8[rsp]	#,
 14638      F8
 14639              		.cfi_def_cfa_offset 32
 14640              	# sieve_extend.c:1067:     if (n < 1000) {
 14641              		.loc 1 1067 8 view .LVU4865
 14642 5018 81FFE703 		cmp	edi, 999	# n,
 14642      0000
 14643 501e 7E2E     		jle	.L1258	#,
1068:sieve_extend.c ****         printf ("%d", n);
1069:sieve_extend.c ****         return;
1070:sieve_extend.c ****     }
1071:sieve_extend.c ****     printfcomma2 (n/1000);
 14644              		.loc 1 1071 5 is_stmt 1 view .LVU4866
 14645 5020 4863DF   		movsx	rbx, edi	# n, n
 14646 5023 89F8     		mov	eax, edi	# tmp90, n
GAS LISTING /tmp/ccfflXEb.s 			page 391


 14647 5025 4869DBD3 		imul	rbx, rbx, 274877907	# tmp87, n,
 14647      4D6210
 14648 502c C1F81F   		sar	eax, 31	# tmp90,
 14649 502f 48C1FB26 		sar	rbx, 38	# tmp89,
 14650 5033 29C3     		sub	ebx, eax	# tmp85, tmp90
 14651 5035 89DF     		mov	edi, ebx	#, tmp85
 14652              	.LVL894:
 14653              		.loc 1 1071 5 is_stmt 0 view .LVU4867
 14654 5037 E8000000 		call	printfcomma2	#
 14654      00
 14655              	.LVL895:
1072:sieve_extend.c ****     printf (",%03d", n%1000);
 14656              		.loc 1 1072 5 is_stmt 1 view .LVU4868
 14657              	.LBB719:
 14658              	.LBI719:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14659              		.loc 3 105 1 view .LVU4869
 14660              	.LBB720:
 14661              		.loc 3 107 3 view .LVU4870
 14662              	.LBE720:
 14663              	.LBE719:
 14664              	# sieve_extend.c:1072:     printf (",%03d", n%1000);
 14665              		.loc 1 1072 5 is_stmt 0 view .LVU4871
 14666 503c 69CBE803 		imul	ecx, ebx, 1000	# tmp97, tmp85,
 14666      0000
 14667 5042 4489E2   		mov	edx, r12d	# n, n
 14668              	.LBB725:
 14669              	.LBB721:
 14670              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14671              		.loc 3 107 10 view .LVU4872
 14672 5045 488D3500 		lea	rsi, .LC27[rip]	#,
 14672      000000
 14673              	.LBE721:
 14674              	.LBE725:
 14675              	# sieve_extend.c:1072:     printf (",%03d", n%1000);
 14676              		.loc 1 1072 5 view .LVU4873
 14677 504c 29CA     		sub	edx, ecx	# n, tmp97
 14678              	.LVL896:
 14679              	.L1258:
 14680              	# sieve_extend.c:1073: }
1073:sieve_extend.c **** }
 14681              		.loc 1 1073 1 view .LVU4874
 14682 504e 488D6424 		lea	rsp, 8[rsp]	#,
 14682      08
 14683              		.cfi_def_cfa_offset 24
 14684              	.LBB726:
 14685              	.LBB722:
 14686              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14687              		.loc 3 107 10 view .LVU4875
 14688 5053 BF010000 		mov	edi, 1	#,
 14688      00
 14689              	.LBE722:
 14690              	.LBE726:
 14691              	# sieve_extend.c:1073: }
 14692              		.loc 1 1073 1 view .LVU4876
 14693 5058 5B       		pop	rbx	#
 14694              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccfflXEb.s 			page 392


 14695              	.LBB727:
 14696              	.LBB723:
 14697              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14698              		.loc 3 107 10 view .LVU4877
 14699 5059 31C0     		xor	eax, eax	#
 14700              	.LBE723:
 14701              	.LBE727:
 14702              	# sieve_extend.c:1073: }
 14703              		.loc 1 1073 1 view .LVU4878
 14704 505b 415C     		pop	r12	#
 14705              		.cfi_def_cfa_offset 8
 14706              	.LVL897:
 14707              	.LBB728:
 14708              	.LBB724:
 14709              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14710              		.loc 3 107 10 view .LVU4879
 14711 505d E9000000 		jmp	__printf_chk@PLT	#
 14711      00
 14712              	.LVL898:
 14713              	.LBE724:
 14714              	.LBE728:
 14715              		.cfi_endproc
 14716              	.LFE87:
 14718 5062 66662E0F 		.p2align 4
 14718      1F840000 
 14718      0000000F 
 14718      1F00
 14719              		.globl	printfcomma
 14721              	printfcomma:
 14722              	.LVL899:
 14723              	.LFB88:
1074:sieve_extend.c **** 
1075:sieve_extend.c **** void printfcomma (int n) {
 14724              		.loc 1 1075 26 is_stmt 1 view -0
 14725              		.cfi_startproc
 14726              		.loc 1 1075 26 is_stmt 0 view .LVU4881
 14727 5070 F30F1EFA 		endbr64	
1076:sieve_extend.c ****     if (n < 0) {
 14728              		.loc 1 1076 5 is_stmt 1 view .LVU4882
 14729              	# sieve_extend.c:1075: void printfcomma (int n) {
1075:sieve_extend.c ****     if (n < 0) {
 14730              		.loc 1 1075 26 is_stmt 0 view .LVU4883
 14731 5074 4157     		push	r15	#
 14732              		.cfi_def_cfa_offset 16
 14733              		.cfi_offset 15, -16
 14734 5076 4156     		push	r14	#
 14735              		.cfi_def_cfa_offset 24
 14736              		.cfi_offset 14, -24
 14737 5078 4155     		push	r13	#
 14738              		.cfi_def_cfa_offset 32
 14739              		.cfi_offset 13, -32
 14740 507a 4154     		push	r12	#
 14741              		.cfi_def_cfa_offset 40
 14742              		.cfi_offset 12, -40
 14743 507c 4189FC   		mov	r12d, edi	# n, tmp159
 14744 507f 55       		push	rbp	#
 14745              		.cfi_def_cfa_offset 48
GAS LISTING /tmp/ccfflXEb.s 			page 393


 14746              		.cfi_offset 6, -48
 14747 5080 53       		push	rbx	#
 14748              		.cfi_def_cfa_offset 56
 14749              		.cfi_offset 3, -56
 14750 5081 488D6424 		lea	rsp, -8[rsp]	#,
 14750      F8
 14751              		.cfi_def_cfa_offset 64
 14752              	# sieve_extend.c:1076:     if (n < 0) {
 14753              		.loc 1 1076 8 view .LVU4884
 14754 5086 85FF     		test	edi, edi	# n
 14755 5088 0F880A01 		js	.L1268	#,
 14755      0000
 14756              	.LVL900:
 14757              	.L1260:
1077:sieve_extend.c ****         printf ("-");
1078:sieve_extend.c ****         n = -n;
1079:sieve_extend.c ****     }
1080:sieve_extend.c ****     printfcomma2 (n);
 14758              		.loc 1 1080 5 is_stmt 1 view .LVU4885
 14759              	.LBB781:
 14760              	.LBI781:
1066:sieve_extend.c ****     if (n < 1000) {
 14761              		.loc 1 1066 6 view .LVU4886
 14762              	.LBB782:
1067:sieve_extend.c ****         printf ("%d", n);
 14763              		.loc 1 1067 5 view .LVU4887
 14764              	# sieve_extend.c:1067:     if (n < 1000) {
1067:sieve_extend.c ****         printf ("%d", n);
 14765              		.loc 1 1067 8 is_stmt 0 view .LVU4888
 14766 508e 4181FCE7 		cmp	r12d, 999	# n,
 14766      030000
 14767              	.LBB783:
 14768              	.LBB784:
 14769              	.LBB785:
 14770              	.LBB786:
 14771              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14772              		.loc 3 107 10 view .LVU4889
 14773 5095 4489E2   		mov	edx, r12d	#, n
 14774 5098 488D3500 		lea	rsi, .LC26[rip]	#,
 14774      000000
 14775              	.LBE786:
 14776              	.LBE785:
 14777              	.LBE784:
 14778              	.LBE783:
 14779              	# sieve_extend.c:1067:     if (n < 1000) {
1067:sieve_extend.c ****         printf ("%d", n);
 14780              		.loc 1 1067 8 view .LVU4890
 14781 509f 0F8EBF00 		jle	.L1267	#,
 14781      0000
 14782              	.LVL901:
1071:sieve_extend.c ****     printf (",%03d", n%1000);
 14783              		.loc 1 1071 5 is_stmt 1 view .LVU4891
 14784 50a5 4489E3   		mov	ebx, r12d	# n, n
 14785 50a8 4C69EBD3 		imul	r13, rbx, 274877907	# tmp90, n,
 14785      4D6210
 14786 50af 49C1ED26 		shr	r13, 38	# _8,
 14787              	.LVL902:
GAS LISTING /tmp/ccfflXEb.s 			page 394


 14788              	.LBB787:
 14789              	.LBI787:
1066:sieve_extend.c ****     if (n < 1000) {
 14790              		.loc 1 1066 6 view .LVU4892
 14791              	.LBB788:
1067:sieve_extend.c ****         printf ("%d", n);
 14792              		.loc 1 1067 5 view .LVU4893
 14793              	# sieve_extend.c:1067:     if (n < 1000) {
1067:sieve_extend.c ****         printf ("%d", n);
 14794              		.loc 1 1067 8 is_stmt 0 view .LVU4894
 14795 50b3 4181FC3F 		cmp	r12d, 999999	# n,
 14795      420F00
 14796 50ba 0F8EC000 		jle	.L1269	#,
 14796      0000
1071:sieve_extend.c ****     printf (",%03d", n%1000);
 14797              		.loc 1 1071 5 is_stmt 1 view .LVU4895
 14798 50c0 4489ED   		mov	ebp, r13d	# _8, _8
 14799 50c3 4C69F5D3 		imul	r14, rbp, 274877907	# tmp98, _8,
 14799      4D6210
 14800 50ca 49C1EE26 		shr	r14, 38	# _10,
 14801              	.LVL903:
 14802              	.LBB789:
 14803              	.LBI789:
1066:sieve_extend.c ****     if (n < 1000) {
 14804              		.loc 1 1066 6 view .LVU4896
 14805              	.LBB790:
1067:sieve_extend.c ****         printf ("%d", n);
 14806              		.loc 1 1067 5 view .LVU4897
 14807              	# sieve_extend.c:1067:     if (n < 1000) {
1067:sieve_extend.c ****         printf ("%d", n);
 14808              		.loc 1 1067 8 is_stmt 0 view .LVU4898
 14809 50ce 4181FCFF 		cmp	r12d, 999999999	# n,
 14809      C99A3B
 14810 50d5 0F8ED500 		jle	.L1270	#,
 14810      0000
1071:sieve_extend.c ****     printf (",%03d", n%1000);
 14811              		.loc 1 1071 5 is_stmt 1 view .LVU4899
 14812              	.LVL904:
 14813              	.LBB791:
 14814              	.LBI791:
1066:sieve_extend.c ****     if (n < 1000) {
 14815              		.loc 1 1066 6 view .LVU4900
 14816              	.LBE791:
 14817              	.LBE790:
 14818              	.LBE789:
 14819              	.LBE788:
 14820              	.LBE787:
 14821              	.LBE782:
 14822              	.LBE781:
1067:sieve_extend.c ****         printf ("%d", n);
 14823              		.loc 1 1067 5 view .LVU4901
 14824              	.LBB857:
 14825              	.LBB852:
 14826              	.LBB839:
 14827              	.LBB836:
 14828              	.LBB824:
 14829              	.LBB822:
GAS LISTING /tmp/ccfflXEb.s 			page 395


 14830              	.LBB808:
 14831              	.LBB792:
 14832              	.LBI792:
1066:sieve_extend.c ****     if (n < 1000) {
 14833              		.loc 1 1066 6 view .LVU4902
 14834              	.LBB793:
1068:sieve_extend.c ****         return;
 14835              		.loc 1 1068 9 view .LVU4903
 14836              	.LBB794:
 14837              	.LBI794:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14838              		.loc 3 105 1 view .LVU4904
 14839              	.LBB795:
 14840              		.loc 3 107 3 view .LVU4905
 14841              	.LBE795:
 14842              	.LBE794:
 14843              	.LBE793:
 14844              	.LBE792:
 14845              	.LBE808:
 14846              	# sieve_extend.c:1071:     printfcomma2 (n/1000);
1071:sieve_extend.c ****     printf (",%03d", n%1000);
 14847              		.loc 1 1071 5 is_stmt 0 view .LVU4906
 14848 50db 4589F7   		mov	r15d, r14d	# _10, _10
 14849              	.LBB809:
 14850              	.LBB805:
 14851              	.LBB802:
 14852              	.LBB799:
 14853              	.LBB796:
 14854              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14855              		.loc 3 107 10 view .LVU4907
 14856 50de 488D3500 		lea	rsi, .LC26[rip]	#,
 14856      000000
 14857              	.LBE796:
 14858              	.LBE799:
 14859              	.LBE802:
 14860              	.LBE805:
 14861              	.LBE809:
 14862              	# sieve_extend.c:1071:     printfcomma2 (n/1000);
1071:sieve_extend.c ****     printf (",%03d", n%1000);
 14863              		.loc 1 1071 5 view .LVU4908
 14864 50e5 4D69FFD3 		imul	r15, r15, 274877907	# tmp107, _10,
 14864      4D6210
 14865              	.LBB810:
 14866              	.LBB806:
 14867              	.LBB803:
 14868              	.LBB800:
 14869              	.LBB797:
 14870              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14871              		.loc 3 107 10 view .LVU4909
 14872 50ec BF010000 		mov	edi, 1	#,
 14872      00
 14873 50f1 31C0     		xor	eax, eax	#
 14874              	.LBE797:
 14875              	.LBE800:
 14876              	.LBE803:
 14877              	.LBE806:
 14878              	.LBE810:
GAS LISTING /tmp/ccfflXEb.s 			page 396


 14879              	# sieve_extend.c:1071:     printfcomma2 (n/1000);
1071:sieve_extend.c ****     printf (",%03d", n%1000);
 14880              		.loc 1 1071 5 view .LVU4910
 14881 50f3 49C1EF26 		shr	r15, 38	# tmp105,
 14882              	.LBB811:
 14883              	.LBB807:
 14884              	.LBB804:
 14885              	.LBB801:
 14886              	.LBB798:
 14887              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14888              		.loc 3 107 10 view .LVU4911
 14889 50f7 4489FA   		mov	edx, r15d	#, tmp105
 14890              	.LVL905:
 14891              		.loc 3 107 10 view .LVU4912
 14892 50fa E8000000 		call	__printf_chk@PLT	#
 14892      00
 14893              	.LVL906:
 14894              		.loc 3 107 10 view .LVU4913
 14895              	.LBE798:
 14896              	.LBE801:
1069:sieve_extend.c ****     }
 14897              		.loc 1 1069 9 is_stmt 1 view .LVU4914
1069:sieve_extend.c ****     }
 14898              		.loc 1 1069 9 is_stmt 0 view .LVU4915
 14899              	.LBE804:
 14900              	.LBE807:
 14901              	.LBE811:
1072:sieve_extend.c **** }
 14902              		.loc 1 1072 5 is_stmt 1 view .LVU4916
 14903              	.LBB812:
 14904              	.LBI812:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14905              		.loc 3 105 1 view .LVU4917
 14906              	.LBB813:
 14907              		.loc 3 107 3 view .LVU4918
 14908              	.LBE813:
 14909              	.LBE812:
 14910              	# sieve_extend.c:1072:     printf (",%03d", n%1000);
1072:sieve_extend.c **** }
 14911              		.loc 1 1072 5 is_stmt 0 view .LVU4919
 14912 50ff 4169C7E8 		imul	eax, r15d, 1000	# tmp119, tmp105,
 14912      030000
 14913 5106 4489F2   		mov	edx, r14d	# _10, _10
 14914              	.LBB816:
 14915              	.LBB814:
 14916              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14917              		.loc 3 107 10 view .LVU4920
 14918 5109 488D3500 		lea	rsi, .LC27[rip]	#,
 14918      000000
 14919 5110 BF010000 		mov	edi, 1	#,
 14919      00
 14920              	.LBE814:
 14921              	.LBE816:
 14922              	# sieve_extend.c:1072:     printf (",%03d", n%1000);
1072:sieve_extend.c **** }
 14923              		.loc 1 1072 5 view .LVU4921
 14924 5115 29C2     		sub	edx, eax	# _10, tmp119
GAS LISTING /tmp/ccfflXEb.s 			page 397


 14925              	.LBB817:
 14926              	.LBB815:
 14927              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14928              		.loc 3 107 10 view .LVU4922
 14929 5117 31C0     		xor	eax, eax	#
 14930 5119 E8000000 		call	__printf_chk@PLT	#
 14930      00
 14931              	.LVL907:
 14932              	.L1265:
 14933              		.loc 3 107 10 view .LVU4923
 14934              	.LBE815:
 14935              	.LBE817:
 14936              	.LBE822:
 14937              	.LBE824:
1072:sieve_extend.c **** }
 14938              		.loc 1 1072 5 is_stmt 1 view .LVU4924
 14939              	.LBB825:
 14940              	.LBI825:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14941              		.loc 3 105 1 view .LVU4925
 14942              	.LBB826:
 14943              		.loc 3 107 3 view .LVU4926
 14944              	.LBE826:
 14945              	.LBE825:
 14946              	# sieve_extend.c:1072:     printf (",%03d", n%1000);
1072:sieve_extend.c **** }
 14947              		.loc 1 1072 5 is_stmt 0 view .LVU4927
 14948 511e 4869D5D3 		imul	rdx, rbp, 274877907	# tmp131, _8,
 14948      4D6210
 14949              	.LBB829:
 14950              	.LBB827:
 14951              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14952              		.loc 3 107 10 view .LVU4928
 14953 5125 488D3500 		lea	rsi, .LC27[rip]	#,
 14953      000000
 14954 512c BF010000 		mov	edi, 1	#,
 14954      00
 14955 5131 31C0     		xor	eax, eax	#
 14956              	.LBE827:
 14957              	.LBE829:
 14958              	# sieve_extend.c:1072:     printf (",%03d", n%1000);
1072:sieve_extend.c **** }
 14959              		.loc 1 1072 5 view .LVU4929
 14960 5133 48C1EA26 		shr	rdx, 38	# tmp129,
 14961 5137 69CAE803 		imul	ecx, edx, 1000	# tmp133, tmp129,
 14961      0000
 14962 513d 4489EA   		mov	edx, r13d	# _8, _8
 14963 5140 29CA     		sub	edx, ecx	# _8, tmp133
 14964              	.LBB830:
 14965              	.LBB828:
 14966              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14967              		.loc 3 107 10 view .LVU4930
 14968 5142 E8000000 		call	__printf_chk@PLT	#
 14968      00
 14969              	.LVL908:
 14970              	.L1263:
 14971              		.loc 3 107 10 view .LVU4931
GAS LISTING /tmp/ccfflXEb.s 			page 398


 14972              	.LBE828:
 14973              	.LBE830:
 14974              	.LBE836:
 14975              	.LBE839:
1072:sieve_extend.c **** }
 14976              		.loc 1 1072 5 is_stmt 1 view .LVU4932
 14977              	.LBB840:
 14978              	.LBI840:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 14979              		.loc 3 105 1 view .LVU4933
 14980              	.LBB841:
 14981              		.loc 3 107 3 view .LVU4934
 14982              	.LBE841:
 14983              	.LBE840:
 14984              	# sieve_extend.c:1072:     printf (",%03d", n%1000);
1072:sieve_extend.c **** }
 14985              		.loc 1 1072 5 is_stmt 0 view .LVU4935
 14986 5147 4869F3D3 		imul	rsi, rbx, 274877907	# tmp145, n,
 14986      4D6210
 14987 514e 4489E2   		mov	edx, r12d	# n, n
 14988 5151 48C1EE26 		shr	rsi, 38	# tmp143,
 14989 5155 69FEE803 		imul	edi, esi, 1000	# tmp147, tmp143,
 14989      0000
 14990              	.LBB846:
 14991              	.LBB842:
 14992              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 14993              		.loc 3 107 10 view .LVU4936
 14994 515b 488D3500 		lea	rsi, .LC27[rip]	#,
 14994      000000
 14995              	.LBE842:
 14996              	.LBE846:
 14997              	# sieve_extend.c:1072:     printf (",%03d", n%1000);
1072:sieve_extend.c **** }
 14998              		.loc 1 1072 5 view .LVU4937
 14999 5162 29FA     		sub	edx, edi	# n, tmp147
 15000              	.LVL909:
 15001              	.L1267:
1072:sieve_extend.c **** }
 15002              		.loc 1 1072 5 view .LVU4938
 15003              	.LBE852:
 15004              	.LBE857:
 15005              	# sieve_extend.c:1081: }
1081:sieve_extend.c **** }
 15006              		.loc 1 1081 1 view .LVU4939
 15007 5164 488D6424 		lea	rsp, 8[rsp]	#,
 15007      08
 15008              		.cfi_remember_state
 15009              		.cfi_def_cfa_offset 56
 15010              	.LBB858:
 15011              	.LBB853:
 15012              	.LBB847:
 15013              	.LBB843:
 15014              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15015              		.loc 3 107 10 view .LVU4940
 15016 5169 BF010000 		mov	edi, 1	#,
 15016      00
 15017              	.LBE843:
GAS LISTING /tmp/ccfflXEb.s 			page 399


 15018              	.LBE847:
 15019              	.LBE853:
 15020              	.LBE858:
 15021              	# sieve_extend.c:1081: }
 15022              		.loc 1 1081 1 view .LVU4941
 15023 516e 5B       		pop	rbx	#
 15024              		.cfi_def_cfa_offset 48
 15025              	.LBB859:
 15026              	.LBB854:
 15027              	.LBB848:
 15028              	.LBB844:
 15029              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15030              		.loc 3 107 10 view .LVU4942
 15031 516f 31C0     		xor	eax, eax	#
 15032              	.LBE844:
 15033              	.LBE848:
 15034              	.LBE854:
 15035              	.LBE859:
 15036              	# sieve_extend.c:1081: }
 15037              		.loc 1 1081 1 view .LVU4943
 15038 5171 5D       		pop	rbp	#
 15039              		.cfi_def_cfa_offset 40
 15040 5172 415C     		pop	r12	#
 15041              		.cfi_def_cfa_offset 32
 15042              	.LVL910:
 15043              		.loc 1 1081 1 view .LVU4944
 15044 5174 415D     		pop	r13	#
 15045              		.cfi_def_cfa_offset 24
 15046 5176 415E     		pop	r14	#
 15047              		.cfi_def_cfa_offset 16
 15048 5178 415F     		pop	r15	#
 15049              		.cfi_def_cfa_offset 8
 15050              	.LBB860:
 15051              	.LBB855:
 15052              	.LBB849:
 15053              	.LBB845:
 15054              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15055              		.loc 3 107 10 view .LVU4945
 15056 517a E9000000 		jmp	__printf_chk@PLT	#
 15056      00
 15057              	.LVL911:
 15058 517f 90       		.p2align 4,,7
 15059              		.p2align 3
 15060              	.L1269:
 15061              		.cfi_restore_state
 15062              		.loc 3 107 10 view .LVU4946
 15063              	.LBE845:
 15064              	.LBE849:
 15065              	.LBB850:
 15066              	.LBB837:
 15067              	.LBB831:
 15068              	.LBI831:
1066:sieve_extend.c ****     if (n < 1000) {
 15069              		.loc 1 1066 6 is_stmt 1 view .LVU4947
 15070              	.LBB832:
1068:sieve_extend.c ****         return;
 15071              		.loc 1 1068 9 view .LVU4948
GAS LISTING /tmp/ccfflXEb.s 			page 400


 15072              	.LBB833:
 15073              	.LBI833:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15074              		.loc 3 105 1 view .LVU4949
 15075              	.LBB834:
 15076              		.loc 3 107 3 view .LVU4950
 15077              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15078              		.loc 3 107 10 is_stmt 0 view .LVU4951
 15079 5180 4489EA   		mov	edx, r13d	#, _8
 15080              	.LVL912:
 15081              		.loc 3 107 10 view .LVU4952
 15082 5183 488D3500 		lea	rsi, .LC26[rip]	#,
 15082      000000
 15083 518a BF010000 		mov	edi, 1	#,
 15083      00
 15084 518f 31C0     		xor	eax, eax	#
 15085 5191 E8000000 		call	__printf_chk@PLT	#
 15085      00
 15086              	.LVL913:
 15087              		.loc 3 107 10 view .LVU4953
 15088              	.LBE834:
 15089              	.LBE833:
1069:sieve_extend.c ****     }
 15090              		.loc 1 1069 9 is_stmt 1 view .LVU4954
 15091 5196 EBAF     		jmp	.L1263	#
 15092              	.LVL914:
 15093              		.p2align 4,,7
 15094              		.p2align 3
 15095              	.L1268:
1069:sieve_extend.c ****     }
 15096              		.loc 1 1069 9 is_stmt 0 view .LVU4955
 15097              	.LBE832:
 15098              	.LBE831:
 15099              	.LBE837:
 15100              	.LBE850:
 15101              	.LBE855:
 15102              	.LBE860:
1077:sieve_extend.c ****         n = -n;
 15103              		.loc 1 1077 9 is_stmt 1 view .LVU4956
 15104              	.LBB861:
 15105              	.LBI861:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15106              		.loc 3 105 1 view .LVU4957
 15107              	.LBB862:
 15108              		.loc 3 107 3 view .LVU4958
 15109              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15110              		.loc 3 107 10 is_stmt 0 view .LVU4959
 15111 5198 BF2D0000 		mov	edi, 45	#,
 15111      00
 15112              	.LVL915:
 15113              		.loc 3 107 10 view .LVU4960
 15114              	.LBE862:
 15115              	.LBE861:
 15116              	# sieve_extend.c:1078:         n = -n;
1078:sieve_extend.c ****     }
 15117              		.loc 1 1078 11 view .LVU4961
 15118 519d 41F7DC   		neg	r12d	# n
GAS LISTING /tmp/ccfflXEb.s 			page 401


 15119              	.LVL916:
 15120              	.LBB864:
 15121              	.LBB863:
 15122              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15123              		.loc 3 107 10 view .LVU4962
 15124 51a0 E8000000 		call	putchar@PLT	#
 15124      00
 15125              	.LVL917:
 15126              		.loc 3 107 10 view .LVU4963
 15127              	.LBE863:
 15128              	.LBE864:
1078:sieve_extend.c ****     }
 15129              		.loc 1 1078 9 is_stmt 1 view .LVU4964
1078:sieve_extend.c ****     }
 15130              		.loc 1 1078 9 is_stmt 0 view .LVU4965
 15131 51a5 E9E4FEFF 		jmp	.L1260	#
 15131      FF
 15132              	.LVL918:
 15133 51aa 660F1F44 		.p2align 4,,7
 15133      0000
 15134              		.p2align 3
 15135              	.L1270:
 15136              	.LBB865:
 15137              	.LBB856:
 15138              	.LBB851:
 15139              	.LBB838:
 15140              	.LBB835:
 15141              	.LBB823:
 15142              	.LBB818:
 15143              	.LBI818:
1066:sieve_extend.c ****     if (n < 1000) {
 15144              		.loc 1 1066 6 is_stmt 1 view .LVU4966
 15145              	.LBB819:
1068:sieve_extend.c ****         return;
 15146              		.loc 1 1068 9 view .LVU4967
 15147              	.LBB820:
 15148              	.LBI820:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 15149              		.loc 3 105 1 view .LVU4968
 15150              	.LBB821:
 15151              		.loc 3 107 3 view .LVU4969
 15152              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 15153              		.loc 3 107 10 is_stmt 0 view .LVU4970
 15154 51b0 4489F2   		mov	edx, r14d	#, _10
 15155              	.LVL919:
 15156              		.loc 3 107 10 view .LVU4971
 15157 51b3 488D3500 		lea	rsi, .LC26[rip]	#,
 15157      000000
 15158 51ba BF010000 		mov	edi, 1	#,
 15158      00
 15159 51bf 31C0     		xor	eax, eax	#
 15160 51c1 E8000000 		call	__printf_chk@PLT	#
 15160      00
 15161              	.LVL920:
 15162              		.loc 3 107 10 view .LVU4972
 15163              	.LBE821:
 15164              	.LBE820:
GAS LISTING /tmp/ccfflXEb.s 			page 402


1069:sieve_extend.c ****     }
 15165              		.loc 1 1069 9 is_stmt 1 view .LVU4973
 15166 51c6 E953FFFF 		jmp	.L1265	#
 15166      FF
 15167              	.LBE819:
 15168              	.LBE818:
 15169              	.LBE823:
 15170              	.LBE835:
 15171              	.LBE838:
 15172              	.LBE851:
 15173              	.LBE856:
 15174              	.LBE865:
 15175              		.cfi_endproc
 15176              	.LFE88:
 15178 51cb 0F1F4400 		.p2align 4
 15178      00
 15179              		.globl	benchmark
 15181              	benchmark:
 15182              	.LVL921:
 15183              	.LFB89:
1082:sieve_extend.c **** 
1083:sieve_extend.c **** int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bitword_t* bitstorage, cou
 15184              		.loc 1 1083 113 view -0
 15185              		.cfi_startproc
 15186              		.loc 1 1083 113 is_stmt 0 view .LVU4975
 15187 51d0 F30F1EFA 		endbr64	
 15188 51d4 4157     		push	r15	#
 15189              		.cfi_def_cfa_offset 16
 15190              		.cfi_offset 15, -16
 15191 51d6 4156     		push	r14	#
 15192              		.cfi_def_cfa_offset 24
 15193              		.cfi_offset 14, -24
 15194 51d8 4155     		push	r13	#
 15195              		.cfi_def_cfa_offset 32
 15196              		.cfi_offset 13, -32
 15197 51da 4989D5   		mov	r13, rdx	# max, tmp138
 15198 51dd 4154     		push	r12	#
 15199              		.cfi_def_cfa_offset 40
 15200              		.cfi_offset 12, -40
 15201              	# sieve_extend.c:1085:     int passes = 0;
1084:sieve_extend.c ****     struct timespec start_time,end_time;
1085:sieve_extend.c ****     int passes = 0;
 15202              		.loc 1 1085 9 view .LVU4976
 15203 51df 4531E4   		xor	r12d, r12d	# <retval>
 15204              	# sieve_extend.c:1083: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1083:sieve_extend.c ****     struct timespec start_time,end_time;
 15205              		.loc 1 1083 113 view .LVU4977
 15206 51e2 55       		push	rbp	#
 15207              		.cfi_def_cfa_offset 48
 15208              		.cfi_offset 6, -48
 15209 51e3 4889F5   		mov	rbp, rsi	# bitstorage, tmp137
 15210 51e6 53       		push	rbx	#
 15211              		.cfi_def_cfa_offset 56
 15212              		.cfi_offset 3, -56
 15213 51e7 4889FB   		mov	rbx, rdi	# function, tmp136
 15214              	# sieve_extend.c:1087:     clock_gettime(CLOCK_MONOTONIC,&start_time);
1086:sieve_extend.c ****     double elapsed_time = 0;
GAS LISTING /tmp/ccfflXEb.s 			page 403


1087:sieve_extend.c ****     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15215              		.loc 1 1087 5 view .LVU4978
 15216 51ea BF010000 		mov	edi, 1	#,
 15216      00
 15217              	.LVL922:
 15218              	# sieve_extend.c:1083: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1083:sieve_extend.c ****     struct timespec start_time,end_time;
 15219              		.loc 1 1083 113 view .LVU4979
 15220 51ef 488D6424 		lea	rsp, -72[rsp]	#,
 15220      B8
 15221              		.cfi_def_cfa_offset 128
 15222              	# sieve_extend.c:1083: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1083:sieve_extend.c ****     struct timespec start_time,end_time;
 15223              		.loc 1 1083 113 view .LVU4980
 15224 51f4 C5FB1144 		vmovsd	QWORD PTR 8[rsp], xmm0	# %sfp, tmp135
 15224      2408
 15225              	# sieve_extend.c:1087:     clock_gettime(CLOCK_MONOTONIC,&start_time);
 15226              		.loc 1 1087 5 view .LVU4981
 15227 51fa 488D7424 		lea	rsi, 16[rsp]	# tmp99,
 15227      10
 15228              	.LVL923:
 15229              	# sieve_extend.c:1083: int benchmark(double max_time, void (*function)(bitword_t*, counter_t ), bit
1083:sieve_extend.c ****     struct timespec start_time,end_time;
 15230              		.loc 1 1083 113 view .LVU4982
 15231 51ff 64488B04 		mov	rax, QWORD PTR fs:40	# tmp139, MEM[(<address-space-1> long unsigned int *)40B]
 15231      25280000 
 15231      00
 15232 5208 48894424 		mov	QWORD PTR 56[rsp], rax	# D.7375, tmp139
 15232      38
 15233 520d 31C0     		xor	eax, eax	# tmp139
1084:sieve_extend.c ****     int passes = 0;
 15234              		.loc 1 1084 5 is_stmt 1 view .LVU4983
1085:sieve_extend.c ****     double elapsed_time = 0;
 15235              		.loc 1 1085 5 view .LVU4984
 15236              	.LVL924:
1086:sieve_extend.c ****     double elapsed_time = 0;
 15237              		.loc 1 1086 5 view .LVU4985
 15238              		.loc 1 1087 5 view .LVU4986
 15239 520f E8000000 		call	clock_gettime@PLT	#
 15239      00
 15240              	.LVL925:
1088:sieve_extend.c ****     while (elapsed_time <= max_time) {
 15241              		.loc 1 1088 5 view .LVU4987
 15242              		.loc 1 1088 11 view .LVU4988
 15243 5214 C5FB106C 		vmovsd	xmm5, QWORD PTR 8[rsp]	# max_time, %sfp
 15243      2408
 15244 521a C5F92F2D 		vcomisd	xmm5, QWORD PTR .LC6[rip]	# max_time,
 15244      00000000 
 15245 5222 0F827801 		jb	.L1271	#,
 15245      0000
 15246 5228 4C8D7424 		lea	r14, 32[rsp]	# tmp111,
 15246      20
 15247              	.LVL926:
 15248              	.L1274:
1089:sieve_extend.c ****         function(bitstorage, max);
 15249              		.loc 1 1089 9 view .LVU4989
 15250 522d 4C89EE   		mov	rsi, r13	#, max
GAS LISTING /tmp/ccfflXEb.s 			page 404


 15251 5230 4889EF   		mov	rdi, rbp	#, bitstorage
 15252 5233 FFD3     		call	rbx	# function
 15253              	.LVL927:
1090:sieve_extend.c ****         passes++;
 15254              		.loc 1 1090 9 view .LVU4990
 15255              	# sieve_extend.c:1091:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1091:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15256              		.loc 1 1091 9 is_stmt 0 view .LVU4991
 15257 5235 4C89F6   		mov	rsi, r14	#, tmp111
 15258 5238 BF010000 		mov	edi, 1	#,
 15258      00
 15259 523d E8000000 		call	clock_gettime@PLT	#
 15259      00
 15260              	.LVL928:
 15261              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
1092:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15262              		.loc 1 1092 58 view .LVU4992
 15263 5242 C4E1FB2A 		vcvtsi2sd	xmm0, xmm0, QWORD PTR 40[rsp]	# tmp102, end_time.tv_nsec
 15263      442428
 15264              	# sieve_extend.c:1090:         passes++;
1090:sieve_extend.c ****         passes++;
 15265              		.loc 1 1090 15 view .LVU4993
 15266 5249 458D7C24 		lea	r15d, 1[r12]	# tmp113,
 15266      01
 15267              	.LVL929:
 15268              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15269              		.loc 1 1092 64 view .LVU4994
 15270 524e C4E1F32A 		vcvtsi2sd	xmm1, xmm1, QWORD PTR 16[rsp]	# tmp103, start_time.tv_sec
 15270      4C2410
 15271              	# sieve_extend.c:1090:         passes++;
1090:sieve_extend.c ****         passes++;
 15272              		.loc 1 1090 15 view .LVU4995
 15273 5255 4589FC   		mov	r12d, r15d	# <retval>, tmp113
1091:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15274              		.loc 1 1091 9 is_stmt 1 view .LVU4996
 15275              		.loc 1 1092 9 view .LVU4997
 15276              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15277              		.loc 1 1092 104 is_stmt 0 view .LVU4998
 15278 5258 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 24[rsp]	# tmp105, start_time.tv_nsec
 15278      5C2418
 15279              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15280              		.loc 1 1092 40 view .LVU4999
 15281 525f C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 32[rsp]	# tmp106, end_time.tv_sec
 15281      542420
 15282              	# sieve_extend.c:1088:     while (elapsed_time <= max_time) {
1088:sieve_extend.c ****         function(bitstorage, max);
 15283              		.loc 1 1088 11 view .LVU5000
 15284 5266 C5FB1064 		vmovsd	xmm4, QWORD PTR 8[rsp]	# max_time, %sfp
 15284      2408
 15285 526c C4E2F9BB 		vfmsub231sd	xmm1, xmm0, QWORD PTR .LC8[rip]	# _30, tmp102,
 15285      0D000000 
 15285      00
 15286 5275 C4E2E99D 		vfnmadd132sd	xmm3, xmm2, QWORD PTR .LC8[rip]	# _19, tmp106,
 15286      1D000000 
 15286      00
 15287              	.LVL930:
1088:sieve_extend.c ****         function(bitstorage, max);
GAS LISTING /tmp/ccfflXEb.s 			page 405


 15288              		.loc 1 1088 11 is_stmt 1 view .LVU5001
 15289              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15290              		.loc 1 1092 22 is_stmt 0 view .LVU5002
 15291 527e C5E358F1 		vaddsd	xmm6, xmm3, xmm1	# elapsed_time, _19, _30
 15292              	# sieve_extend.c:1088:     while (elapsed_time <= max_time) {
1088:sieve_extend.c ****         function(bitstorage, max);
 15293              		.loc 1 1088 11 view .LVU5003
 15294 5282 C5F92FE6 		vcomisd	xmm4, xmm6	# max_time, elapsed_time
 15295 5286 0F821401 		jb	.L1271	#,
 15295      0000
 15296              	.LVL931:
1089:sieve_extend.c ****         passes++;
 15297              		.loc 1 1089 9 is_stmt 1 view .LVU5004
 15298 528c 4C89EE   		mov	rsi, r13	#, max
 15299 528f 4889EF   		mov	rdi, rbp	#, bitstorage
 15300 5292 FFD3     		call	rbx	# function
 15301              	.LVL932:
1090:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15302              		.loc 1 1090 9 view .LVU5005
 15303              	# sieve_extend.c:1091:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1091:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15304              		.loc 1 1091 9 is_stmt 0 view .LVU5006
 15305 5294 4C89F6   		mov	rsi, r14	#, tmp111
 15306 5297 BF010000 		mov	edi, 1	#,
 15306      00
 15307 529c E8000000 		call	clock_gettime@PLT	#
 15307      00
 15308              	.LVL933:
 15309              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15310              		.loc 1 1092 58 view .LVU5007
 15311 52a1 C4E1C32A 		vcvtsi2sd	xmm7, xmm7, QWORD PTR 40[rsp]	# tmp114, end_time.tv_nsec
 15311      7C2428
 15312              	# sieve_extend.c:1090:         passes++;
1090:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15313              		.loc 1 1090 15 view .LVU5008
 15314 52a8 4183C401 		add	r12d, 1	# <retval>,
 15315              	.LVL934:
1091:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15316              		.loc 1 1091 9 is_stmt 1 view .LVU5009
 15317              		.loc 1 1092 9 view .LVU5010
 15318              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15319              		.loc 1 1092 64 is_stmt 0 view .LVU5011
 15320 52ac C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 16[rsp]	# tmp115, start_time.tv_sec
 15320      442410
 15321              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15322              		.loc 1 1092 104 view .LVU5012
 15323 52b3 C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 24[rsp]	# tmp117, start_time.tv_nsec
 15323      4C2418
 15324              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15325              		.loc 1 1092 40 view .LVU5013
 15326 52ba C461AB2A 		vcvtsi2sd	xmm10, xmm10, QWORD PTR 32[rsp]	# tmp118, end_time.tv_sec
 15326      542420
 15327              	# sieve_extend.c:1088:     while (elapsed_time <= max_time) {
1088:sieve_extend.c ****         function(bitstorage, max);
 15328              		.loc 1 1088 11 view .LVU5014
 15329 52c1 C57B1064 		vmovsd	xmm12, QWORD PTR 8[rsp]	# max_time, %sfp
 15329      2408
GAS LISTING /tmp/ccfflXEb.s 			page 406


 15330 52c7 C462C1BB 		vfmsub231sd	xmm8, xmm7, QWORD PTR .LC8[rip]	# _30, tmp114,
 15330      05000000 
 15330      00
 15331 52d0 C462A99D 		vfnmadd132sd	xmm9, xmm10, QWORD PTR .LC8[rip]	# _19, tmp118,
 15331      0D000000 
 15331      00
 15332              	.LVL935:
1088:sieve_extend.c ****         function(bitstorage, max);
 15333              		.loc 1 1088 11 is_stmt 1 view .LVU5015
 15334              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15335              		.loc 1 1092 22 is_stmt 0 view .LVU5016
 15336 52d9 C4413358 		vaddsd	xmm11, xmm9, xmm8	# elapsed_time, _19, _30
 15336      D8
 15337              	# sieve_extend.c:1088:     while (elapsed_time <= max_time) {
1088:sieve_extend.c ****         function(bitstorage, max);
 15338              		.loc 1 1088 11 view .LVU5017
 15339 52de C441792F 		vcomisd	xmm12, xmm11	# max_time, elapsed_time
 15339      E3
 15340 52e3 0F82B700 		jb	.L1271	#,
 15340      0000
 15341              	.LVL936:
1089:sieve_extend.c ****         passes++;
 15342              		.loc 1 1089 9 is_stmt 1 view .LVU5018
 15343 52e9 4C89EE   		mov	rsi, r13	#, max
 15344 52ec 4889EF   		mov	rdi, rbp	#, bitstorage
 15345 52ef FFD3     		call	rbx	# function
 15346              	.LVL937:
1090:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15347              		.loc 1 1090 9 view .LVU5019
 15348              	# sieve_extend.c:1091:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1091:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15349              		.loc 1 1091 9 is_stmt 0 view .LVU5020
 15350 52f1 4C89F6   		mov	rsi, r14	#, tmp111
 15351 52f4 BF010000 		mov	edi, 1	#,
 15351      00
 15352 52f9 E8000000 		call	clock_gettime@PLT	#
 15352      00
 15353              	.LVL938:
 15354              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15355              		.loc 1 1092 58 view .LVU5021
 15356 52fe C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 40[rsp]	# tmp121, end_time.tv_nsec
 15356      6C2428
 15357              	# sieve_extend.c:1090:         passes++;
1090:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15358              		.loc 1 1090 15 view .LVU5022
 15359 5305 458D6702 		lea	r12d, 2[r15]	# <retval>,
 15360              	.LVL939:
1091:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15361              		.loc 1 1091 9 is_stmt 1 view .LVU5023
 15362              		.loc 1 1092 9 view .LVU5024
 15363              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15364              		.loc 1 1092 64 is_stmt 0 view .LVU5025
 15365 5309 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 16[rsp]	# tmp122, start_time.tv_sec
 15365      742410
 15366              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15367              		.loc 1 1092 104 view .LVU5026
 15368 5310 C461832A 		vcvtsi2sd	xmm15, xmm15, QWORD PTR 24[rsp]	# tmp124, start_time.tv_nsec
GAS LISTING /tmp/ccfflXEb.s 			page 407


 15368      7C2418
 15369              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15370              		.loc 1 1092 40 view .LVU5027
 15371 5317 C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 32[rsp]	# tmp125, end_time.tv_sec
 15371      6C2420
 15372              	# sieve_extend.c:1088:     while (elapsed_time <= max_time) {
1088:sieve_extend.c ****         function(bitstorage, max);
 15373              		.loc 1 1088 11 view .LVU5028
 15374 531e C5FB104C 		vmovsd	xmm1, QWORD PTR 8[rsp]	# max_time, %sfp
 15374      2408
 15375 5324 C46291BB 		vfmsub231sd	xmm14, xmm13, QWORD PTR .LC8[rip]	# _30, tmp121,
 15375      35000000 
 15375      00
 15376 532d C462D19D 		vfnmadd132sd	xmm15, xmm5, QWORD PTR .LC8[rip]	# _19, tmp125,
 15376      3D000000 
 15376      00
 15377              	.LVL940:
1088:sieve_extend.c ****         function(bitstorage, max);
 15378              		.loc 1 1088 11 is_stmt 1 view .LVU5029
 15379              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15380              		.loc 1 1092 22 is_stmt 0 view .LVU5030
 15381 5336 C4C10358 		vaddsd	xmm0, xmm15, xmm14	# elapsed_time, _19, _30
 15381      C6
 15382              	# sieve_extend.c:1088:     while (elapsed_time <= max_time) {
1088:sieve_extend.c ****         function(bitstorage, max);
 15383              		.loc 1 1088 11 view .LVU5031
 15384 533b C5F92FC8 		vcomisd	xmm1, xmm0	# max_time, elapsed_time
 15385 533f 725F     		jb	.L1271	#,
 15386              	.LVL941:
1089:sieve_extend.c ****         passes++;
 15387              		.loc 1 1089 9 is_stmt 1 view .LVU5032
 15388 5341 4C89EE   		mov	rsi, r13	#, max
 15389 5344 4889EF   		mov	rdi, rbp	#, bitstorage
 15390 5347 FFD3     		call	rbx	# function
 15391              	.LVL942:
1090:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15392              		.loc 1 1090 9 view .LVU5033
 15393              	# sieve_extend.c:1091:         clock_gettime(CLOCK_MONOTONIC,&end_time);
1091:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15394              		.loc 1 1091 9 is_stmt 0 view .LVU5034
 15395 5349 4C89F6   		mov	rsi, r14	#, tmp111
 15396 534c BF010000 		mov	edi, 1	#,
 15396      00
 15397 5351 E8000000 		call	clock_gettime@PLT	#
 15397      00
 15398              	.LVL943:
 15399              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15400              		.loc 1 1092 58 view .LVU5035
 15401 5356 C4E1E32A 		vcvtsi2sd	xmm3, xmm3, QWORD PTR 40[rsp]	# tmp128, end_time.tv_nsec
 15401      5C2428
 15402              	# sieve_extend.c:1090:         passes++;
1090:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&end_time);
 15403              		.loc 1 1090 15 view .LVU5036
 15404 535d 458D6703 		lea	r12d, 3[r15]	# <retval>,
 15405              	.LVL944:
1091:sieve_extend.c ****         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time.tv_
 15406              		.loc 1 1091 9 is_stmt 1 view .LVU5037
GAS LISTING /tmp/ccfflXEb.s 			page 408


 15407              		.loc 1 1092 9 view .LVU5038
 15408              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15409              		.loc 1 1092 64 is_stmt 0 view .LVU5039
 15410 5361 C4E1CB2A 		vcvtsi2sd	xmm6, xmm6, QWORD PTR 16[rsp]	# tmp129, start_time.tv_sec
 15410      742410
 15411              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15412              		.loc 1 1092 104 view .LVU5040
 15413 5368 C4E1DB2A 		vcvtsi2sd	xmm4, xmm4, QWORD PTR 24[rsp]	# tmp131, start_time.tv_nsec
 15413      642418
 15414              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15415              		.loc 1 1092 40 view .LVU5041
 15416 536f C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 32[rsp]	# tmp132, end_time.tv_sec
 15416      542420
 15417              	# sieve_extend.c:1088:     while (elapsed_time <= max_time) {
1088:sieve_extend.c ****         function(bitstorage, max);
 15418              		.loc 1 1088 11 view .LVU5042
 15419 5376 C57B1044 		vmovsd	xmm8, QWORD PTR 8[rsp]	# max_time, %sfp
 15419      2408
 15420 537c C4E2E1BB 		vfmsub231sd	xmm6, xmm3, QWORD PTR .LC8[rip]	# _30, tmp128,
 15420      35000000 
 15420      00
 15421 5385 C4E2E99D 		vfnmadd132sd	xmm4, xmm2, QWORD PTR .LC8[rip]	# _19, tmp132,
 15421      25000000 
 15421      00
 15422              	.LVL945:
1088:sieve_extend.c ****         function(bitstorage, max);
 15423              		.loc 1 1088 11 is_stmt 1 view .LVU5043
 15424              	# sieve_extend.c:1092:         elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.
 15425              		.loc 1 1092 22 is_stmt 0 view .LVU5044
 15426 538e C5DB58FE 		vaddsd	xmm7, xmm4, xmm6	# elapsed_time, _19, _30
 15427              	# sieve_extend.c:1088:     while (elapsed_time <= max_time) {
1088:sieve_extend.c ****         function(bitstorage, max);
 15428              		.loc 1 1088 11 view .LVU5045
 15429 5392 C5792FC7 		vcomisd	xmm8, xmm7	# max_time, elapsed_time
 15430 5396 0F8391FE 		jnb	.L1274	#,
 15430      FFFF
 15431              	.LVL946:
 15432 539c 0F1F4000 		.p2align 4
 15433              		.p2align 3
 15434              	.L1271:
 15435              	# sieve_extend.c:1095: }
1093:sieve_extend.c ****     }
1094:sieve_extend.c ****     return passes;
1095:sieve_extend.c **** }
 15436              		.loc 1 1095 1 view .LVU5046
 15437 53a0 488B4424 		mov	rax, QWORD PTR 56[rsp]	# tmp140, D.7375
 15437      38
 15438 53a5 64483304 		xor	rax, QWORD PTR fs:40	# tmp140, MEM[(<address-space-1> long unsigned int *)40B]
 15438      25280000 
 15438      00
 15439 53ae 7513     		jne	.L1287	#,
 15440 53b0 488D6424 		lea	rsp, 72[rsp]	#,
 15440      48
 15441              		.cfi_remember_state
 15442              		.cfi_def_cfa_offset 56
 15443 53b5 4489E0   		mov	eax, r12d	#, <retval>
 15444 53b8 5B       		pop	rbx	#
GAS LISTING /tmp/ccfflXEb.s 			page 409


 15445              		.cfi_def_cfa_offset 48
 15446              	.LVL947:
 15447              		.loc 1 1095 1 view .LVU5047
 15448 53b9 5D       		pop	rbp	#
 15449              		.cfi_def_cfa_offset 40
 15450              	.LVL948:
 15451              		.loc 1 1095 1 view .LVU5048
 15452 53ba 415C     		pop	r12	#
 15453              		.cfi_def_cfa_offset 32
 15454 53bc 415D     		pop	r13	#
 15455              		.cfi_def_cfa_offset 24
 15456              	.LVL949:
 15457              		.loc 1 1095 1 view .LVU5049
 15458 53be 415E     		pop	r14	#
 15459              		.cfi_def_cfa_offset 16
 15460 53c0 415F     		pop	r15	#
 15461              		.cfi_def_cfa_offset 8
 15462 53c2 C3       		ret	
 15463              	.LVL950:
 15464              	.L1287:
 15465              		.cfi_restore_state
 15466              		.loc 1 1095 1 view .LVU5050
 15467 53c3 E8000000 		call	__stack_chk_fail@PLT	#
 15467      00
 15468              	.LVL951:
 15469              		.cfi_endproc
 15470              	.LFE89:
 15472 53c8 0F1F8400 		.p2align 4
 15472      00000000 
 15473              		.globl	test
 15475              	test:
 15476              	.LVL952:
 15477              	.LFB90:
1096:sieve_extend.c **** 
1097:sieve_extend.c **** void test(bitword_t* __restrict bitstorage, counter_t max) {
 15478              		.loc 1 1097 60 is_stmt 1 view -0
 15479              		.cfi_startproc
 15480              		.loc 1 1097 60 is_stmt 0 view .LVU5052
 15481 53d0 F30F1EFA 		endbr64	
 15482              	.LBB867:
1098:sieve_extend.c ****     //#pragma GCC unroll 16
1099:sieve_extend.c ****     #pragma GCC ivdep 
1100:sieve_extend.c ****     for (counter_t x=0; x<max; x++) {
 15483              		.loc 1 1100 10 is_stmt 1 view .LVU5053
 15484              	.LVL953:
 15485              		.loc 1 1100 25 view .LVU5054
 15486              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
 15487              		.loc 1 1100 5 is_stmt 0 view .LVU5055
 15488 53d4 4885F6   		test	rsi, rsi	# max
 15489 53d7 0F846901 		je	.L1330	#,
 15489      0000
 15490 53dd 4889F1   		mov	rcx, rsi	# tmp97, max
 15491              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
 15492              		.loc 1 1100 20 view .LVU5056
 15493 53e0 31C0     		xor	eax, eax	# x
 15494 53e2 83E107   		and	ecx, 7	# tmp97,
 15495              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
GAS LISTING /tmp/ccfflXEb.s 			page 410


1101:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15496              		.loc 1 1101 36 view .LVU5057
 15497 53e5 BA010000 		mov	edx, 1	# tmp92,
 15497      00
 15498 53ea 0F84AD00 		je	.L1290	#,
 15498      0000
 15499 53f0 4883F901 		cmp	rcx, 1	# tmp97,
 15500 53f4 0F848600 		je	.L1315	#,
 15500      0000
 15501 53fa 4883F902 		cmp	rcx, 2	# tmp97,
 15502 53fe 746C     		je	.L1316	#,
 15503 5400 4883F903 		cmp	rcx, 3	# tmp97,
 15504 5404 7452     		je	.L1317	#,
 15505 5406 4883F904 		cmp	rcx, 4	# tmp97,
 15506 540a 7438     		je	.L1318	#,
 15507 540c 4883F905 		cmp	rcx, 5	# tmp97,
 15508 5410 741E     		je	.L1319	#,
 15509 5412 4883F906 		cmp	rcx, 6	# tmp97,
 15510 5416 0F852C01 		jne	.L1331	#,
 15510      0000
 15511              	.LVL954:
 15512              	.L1320:
 15513              		.loc 1 1101 9 is_stmt 1 view .LVU5058
 15514              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15515              		.loc 1 1101 20 is_stmt 0 view .LVU5059
 15516 541c 4989C1   		mov	r9, rax	# tmp122, x
 15517              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15518              		.loc 1 1101 36 view .LVU5060
 15519 541f C462F9F7 		shlx	r8, rdx, rax	# tmp123, tmp92, x
 15519      C2
 15520              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15521              		.loc 1 1101 20 view .LVU5061
 15522 5424 49C1E906 		shr	r9, 6	# tmp122,
 15523              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15524              		.loc 1 1100 33 view .LVU5062
 15525 5428 4883C001 		add	rax, 1	# x,
 15526              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15527              		.loc 1 1101 36 view .LVU5063
 15528 542c 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_4, tmp123
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15529              		.loc 1 1100 32 is_stmt 1 view .LVU5064
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15530              		.loc 1 1100 25 view .LVU5065
 15531              	.L1319:
 15532              		.loc 1 1101 9 view .LVU5066
 15533              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15534              		.loc 1 1101 20 is_stmt 0 view .LVU5067
 15535 5430 4989C2   		mov	r10, rax	# tmp124, x
 15536              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15537              		.loc 1 1101 36 view .LVU5068
 15538 5433 C462F9F7 		shlx	r11, rdx, rax	# tmp125, tmp92, x
 15538      DA
 15539              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15540              		.loc 1 1101 20 view .LVU5069
 15541 5438 49C1EA06 		shr	r10, 6	# tmp124,
 15542              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
GAS LISTING /tmp/ccfflXEb.s 			page 411


1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15543              		.loc 1 1100 33 view .LVU5070
 15544 543c 4883C001 		add	rax, 1	# x,
 15545              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15546              		.loc 1 1101 36 view .LVU5071
 15547 5440 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_4, tmp125
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15548              		.loc 1 1100 32 is_stmt 1 view .LVU5072
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15549              		.loc 1 1100 25 view .LVU5073
 15550              	.L1318:
 15551              		.loc 1 1101 9 view .LVU5074
 15552              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15553              		.loc 1 1101 20 is_stmt 0 view .LVU5075
 15554 5444 4889C1   		mov	rcx, rax	# tmp126, x
 15555              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15556              		.loc 1 1101 36 view .LVU5076
 15557 5447 C462F9F7 		shlx	r9, rdx, rax	# tmp127, tmp92, x
 15557      CA
 15558              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15559              		.loc 1 1101 20 view .LVU5077
 15560 544c 48C1E906 		shr	rcx, 6	# tmp126,
 15561              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15562              		.loc 1 1100 33 view .LVU5078
 15563 5450 4883C001 		add	rax, 1	# x,
 15564              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15565              		.loc 1 1101 36 view .LVU5079
 15566 5454 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# *_4, tmp127
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15567              		.loc 1 1100 32 is_stmt 1 view .LVU5080
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15568              		.loc 1 1100 25 view .LVU5081
 15569              	.L1317:
 15570              		.loc 1 1101 9 view .LVU5082
 15571              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15572              		.loc 1 1101 20 is_stmt 0 view .LVU5083
 15573 5458 4989C2   		mov	r10, rax	# tmp128, x
 15574              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15575              		.loc 1 1101 36 view .LVU5084
 15576 545b C462F9F7 		shlx	r8, rdx, rax	# tmp129, tmp92, x
 15576      C2
 15577              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15578              		.loc 1 1101 20 view .LVU5085
 15579 5460 49C1EA06 		shr	r10, 6	# tmp128,
 15580              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15581              		.loc 1 1100 33 view .LVU5086
 15582 5464 4883C001 		add	rax, 1	# x,
 15583              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15584              		.loc 1 1101 36 view .LVU5087
 15585 5468 4E8904D7 		mov	QWORD PTR [rdi+r10*8], r8	# *_4, tmp129
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15586              		.loc 1 1100 32 is_stmt 1 view .LVU5088
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15587              		.loc 1 1100 25 view .LVU5089
 15588              	.L1316:
GAS LISTING /tmp/ccfflXEb.s 			page 412


 15589              		.loc 1 1101 9 view .LVU5090
 15590              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15591              		.loc 1 1101 20 is_stmt 0 view .LVU5091
 15592 546c 4989C3   		mov	r11, rax	# tmp130, x
 15593              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15594              		.loc 1 1101 36 view .LVU5092
 15595 546f C4E2F9F7 		shlx	rcx, rdx, rax	# tmp131, tmp92, x
 15595      CA
 15596              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15597              		.loc 1 1101 20 view .LVU5093
 15598 5474 49C1EB06 		shr	r11, 6	# tmp130,
 15599              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15600              		.loc 1 1100 33 view .LVU5094
 15601 5478 4883C001 		add	rax, 1	# x,
 15602              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15603              		.loc 1 1101 36 view .LVU5095
 15604 547c 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_4, tmp131
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15605              		.loc 1 1100 32 is_stmt 1 view .LVU5096
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15606              		.loc 1 1100 25 view .LVU5097
 15607              	.L1315:
 15608              		.loc 1 1101 9 view .LVU5098
 15609              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15610              		.loc 1 1101 20 is_stmt 0 view .LVU5099
 15611 5480 4989C1   		mov	r9, rax	# tmp132, x
 15612              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15613              		.loc 1 1101 36 view .LVU5100
 15614 5483 C462F9F7 		shlx	r10, rdx, rax	# tmp133, tmp92, x
 15614      D2
 15615              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15616              		.loc 1 1101 20 view .LVU5101
 15617 5488 49C1E906 		shr	r9, 6	# tmp132,
 15618              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15619              		.loc 1 1100 33 view .LVU5102
 15620 548c 4883C001 		add	rax, 1	# x,
 15621              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15622              		.loc 1 1101 36 view .LVU5103
 15623 5490 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_4, tmp133
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15624              		.loc 1 1100 32 is_stmt 1 view .LVU5104
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15625              		.loc 1 1100 25 view .LVU5105
 15626              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15627              		.loc 1 1100 5 is_stmt 0 view .LVU5106
 15628 5494 4839C6   		cmp	rsi, rax	# max, x
 15629 5497 0F84BD00 		je	.L1332	#,
 15629      0000
 15630              	.L1290:
 15631              		.loc 1 1101 9 is_stmt 1 discriminator 3 view .LVU5107
 15632              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15633              		.loc 1 1100 33 is_stmt 0 discriminator 3 view .LVU5108
 15634 549d 488D4801 		lea	rcx, 1[rax]	# tmp98,
GAS LISTING /tmp/ccfflXEb.s 			page 413


 15635              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15636              		.loc 1 1101 20 discriminator 3 view .LVU5109
 15637 54a1 4989C3   		mov	r11, rax	# tmp90, x
 15638 54a4 49C1EB06 		shr	r11, 6	# tmp90,
 15639 54a8 4989C9   		mov	r9, rcx	# tmp100, tmp98
 15640 54ab 49C1E906 		shr	r9, 6	# tmp100,
 15641              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15642              		.loc 1 1101 36 discriminator 3 view .LVU5110
 15643 54af C462F9F7 		shlx	r8, rdx, rax	# tmp93, tmp92, x
 15643      C2
 15644 54b4 C462F1F7 		shlx	r10, rdx, rcx	# tmp101, tmp92, tmp98
 15644      D2
 15645 54b9 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_4, tmp93
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15646              		.loc 1 1100 32 is_stmt 1 discriminator 3 view .LVU5111
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15647              		.loc 1 1100 25 discriminator 3 view .LVU5112
 15648              		.loc 1 1101 9 discriminator 3 view .LVU5113
 15649              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15650              		.loc 1 1101 36 is_stmt 0 discriminator 3 view .LVU5114
 15651 54bd 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_4, tmp101
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15652              		.loc 1 1100 32 is_stmt 1 discriminator 3 view .LVU5115
 15653              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15654              		.loc 1 1100 33 is_stmt 0 discriminator 3 view .LVU5116
 15655 54c1 4C8D5802 		lea	r11, 2[rax]	# x,
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15656              		.loc 1 1100 25 is_stmt 1 discriminator 3 view .LVU5117
 15657              		.loc 1 1101 9 discriminator 3 view .LVU5118
 15658              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15659              		.loc 1 1100 33 is_stmt 0 discriminator 3 view .LVU5119
 15660 54c5 4C8D4803 		lea	r9, 3[rax]	# x,
 15661              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15662              		.loc 1 1101 20 discriminator 3 view .LVU5120
 15663 54c9 4D89D8   		mov	r8, r11	# tmp103, x
 15664 54cc 49C1E806 		shr	r8, 6	# tmp103,
 15665 54d0 4D89CA   		mov	r10, r9	# tmp106, x
 15666 54d3 49C1EA06 		shr	r10, 6	# tmp106,
 15667              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15668              		.loc 1 1101 36 discriminator 3 view .LVU5121
 15669 54d7 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp104, tmp92, x
 15669      CA
 15670 54dc C462B1F7 		shlx	r11, rdx, r9	# tmp107, tmp92, x
 15670      DA
 15671 54e1 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_4, tmp104
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15672              		.loc 1 1100 32 is_stmt 1 discriminator 3 view .LVU5122
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15673              		.loc 1 1100 25 discriminator 3 view .LVU5123
 15674              		.loc 1 1101 9 discriminator 3 view .LVU5124
 15675              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15676              		.loc 1 1101 36 is_stmt 0 discriminator 3 view .LVU5125
 15677 54e5 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_4, tmp107
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15678              		.loc 1 1100 32 is_stmt 1 discriminator 3 view .LVU5126
GAS LISTING /tmp/ccfflXEb.s 			page 414


 15679              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15680              		.loc 1 1100 33 is_stmt 0 discriminator 3 view .LVU5127
 15681 54e9 488D4804 		lea	rcx, 4[rax]	# x,
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15682              		.loc 1 1100 25 is_stmt 1 discriminator 3 view .LVU5128
 15683              		.loc 1 1101 9 discriminator 3 view .LVU5129
 15684              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15685              		.loc 1 1100 33 is_stmt 0 discriminator 3 view .LVU5130
 15686 54ed 4C8D5005 		lea	r10, 5[rax]	# x,
 15687              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15688              		.loc 1 1101 20 discriminator 3 view .LVU5131
 15689 54f1 4989C8   		mov	r8, rcx	# tmp109, x
 15690 54f4 49C1E806 		shr	r8, 6	# tmp109,
 15691 54f8 4D89D3   		mov	r11, r10	# tmp112, x
 15692 54fb 49C1EB06 		shr	r11, 6	# tmp112,
 15693              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15694              		.loc 1 1101 36 discriminator 3 view .LVU5132
 15695 54ff C462F1F7 		shlx	r9, rdx, rcx	# tmp110, tmp92, x
 15695      CA
 15696 5504 C4E2A9F7 		shlx	rcx, rdx, r10	# tmp113, tmp92, x
 15696      CA
 15697 5509 4E890CC7 		mov	QWORD PTR [rdi+r8*8], r9	# *_4, tmp110
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15698              		.loc 1 1100 32 is_stmt 1 discriminator 3 view .LVU5133
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15699              		.loc 1 1100 25 discriminator 3 view .LVU5134
 15700              		.loc 1 1101 9 discriminator 3 view .LVU5135
 15701              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15702              		.loc 1 1101 36 is_stmt 0 discriminator 3 view .LVU5136
 15703 550d 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_4, tmp113
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15704              		.loc 1 1100 32 is_stmt 1 discriminator 3 view .LVU5137
 15705              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15706              		.loc 1 1100 33 is_stmt 0 discriminator 3 view .LVU5138
 15707 5511 4C8D4806 		lea	r9, 6[rax]	# x,
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15708              		.loc 1 1100 25 is_stmt 1 discriminator 3 view .LVU5139
 15709              		.loc 1 1101 9 discriminator 3 view .LVU5140
 15710              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15711              		.loc 1 1100 33 is_stmt 0 discriminator 3 view .LVU5141
 15712 5515 4C8D5807 		lea	r11, 7[rax]	# x,
 15713              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15714              		.loc 1 1101 20 discriminator 3 view .LVU5142
 15715 5519 4D89C8   		mov	r8, r9	# tmp115, x
 15716              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15717              		.loc 1 1101 36 discriminator 3 view .LVU5143
 15718 551c C462B1F7 		shlx	r10, rdx, r9	# tmp116, tmp92, x
 15718      D2
 15719              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15720              		.loc 1 1100 33 discriminator 3 view .LVU5144
 15721 5521 4883C008 		add	rax, 8	# x,
 15722              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
GAS LISTING /tmp/ccfflXEb.s 			page 415


 15723              		.loc 1 1101 20 discriminator 3 view .LVU5145
 15724 5525 49C1E806 		shr	r8, 6	# tmp115,
 15725 5529 4D89D9   		mov	r9, r11	# tmp118, x
 15726 552c 49C1E906 		shr	r9, 6	# tmp118,
 15727              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15728              		.loc 1 1100 5 discriminator 3 view .LVU5146
 15729 5530 4839C6   		cmp	rsi, rax	# max, x
 15730              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15731              		.loc 1 1101 36 discriminator 3 view .LVU5147
 15732 5533 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp119, tmp92, x
 15732      CA
 15733 5538 4E8914C7 		mov	QWORD PTR [rdi+r8*8], r10	# *_4, tmp116
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15734              		.loc 1 1100 32 is_stmt 1 discriminator 3 view .LVU5148
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15735              		.loc 1 1100 25 discriminator 3 view .LVU5149
 15736              		.loc 1 1101 9 discriminator 3 view .LVU5150
 15737              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
 15738              		.loc 1 1101 36 is_stmt 0 discriminator 3 view .LVU5151
 15739 553c 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_4, tmp119
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15740              		.loc 1 1100 32 is_stmt 1 discriminator 3 view .LVU5152
 15741              	.LVL955:
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15742              		.loc 1 1100 25 discriminator 3 view .LVU5153
 15743              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15744              		.loc 1 1100 5 is_stmt 0 discriminator 3 view .LVU5154
 15745 5540 0F8557FF 		jne	.L1290	#,
 15745      FFFF
 15746              	.LVL956:
 15747              	.L1330:
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15748              		.loc 1 1100 5 discriminator 3 view .LVU5155
 15749              	.LBE867:
 15750              	# sieve_extend.c:1103: }
1102:sieve_extend.c ****     }
1103:sieve_extend.c **** }
 15751              		.loc 1 1103 1 view .LVU5156
 15752 5546 C3       		ret	
 15753              	.LVL957:
 15754              		.p2align 4,,7
 15755 5547 90       		.p2align 3
 15756              	.L1331:
 15757              	.LBB868:
1101:sieve_extend.c ****     }
 15758              		.loc 1 1101 9 is_stmt 1 view .LVU5157
 15759              	# sieve_extend.c:1101:         bitstorage[wordindex(x)] = markmask(x);
1101:sieve_extend.c ****     }
 15760              		.loc 1 1101 36 is_stmt 0 view .LVU5158
 15761 5548 48C704C7 		mov	QWORD PTR [rdi+rax*8], 1	# *_4,
 15761      01000000 
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15762              		.loc 1 1100 32 is_stmt 1 view .LVU5159
 15763              	.LVL958:
 15764              	# sieve_extend.c:1100:     for (counter_t x=0; x<max; x++) {
GAS LISTING /tmp/ccfflXEb.s 			page 416


1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15765              		.loc 1 1100 33 is_stmt 0 view .LVU5160
 15766 5550 B8010000 		mov	eax, 1	# x,
 15766      00
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15767              		.loc 1 1100 25 is_stmt 1 view .LVU5161
 15768 5555 E9C2FEFF 		jmp	.L1320	#
 15768      FF
 15769              	.L1332:
1100:sieve_extend.c ****         bitstorage[wordindex(x)] = markmask(x);
 15770              		.loc 1 1100 25 is_stmt 0 view .LVU5162
 15771 555a C3       		ret	
 15772              	.LBE868:
 15773              		.cfi_endproc
 15774              	.LFE90:
 15776 555b 0F1F4400 		.p2align 4
 15776      00
 15777              		.globl	test2
 15779              	test2:
 15780              	.LFB104:
 15781              		.cfi_startproc
 15782 5560 F30F1EFA 		endbr64	
 15783 5564 4885F6   		test	rsi, rsi	# max
 15784 5567 0F846901 		je	.L1375	#,
 15784      0000
 15785 556d 4889F1   		mov	rcx, rsi	# tmp97, max
 15786 5570 31C0     		xor	eax, eax	# x
 15787 5572 83E107   		and	ecx, 7	# tmp97,
 15788 5575 BA010000 		mov	edx, 1	# tmp92,
 15788      00
 15789 557a 0F84AD00 		je	.L1335	#,
 15789      0000
 15790 5580 4883F901 		cmp	rcx, 1	# tmp97,
 15791 5584 0F848600 		je	.L1360	#,
 15791      0000
 15792 558a 4883F902 		cmp	rcx, 2	# tmp97,
 15793 558e 746C     		je	.L1361	#,
 15794 5590 4883F903 		cmp	rcx, 3	# tmp97,
 15795 5594 7452     		je	.L1362	#,
 15796 5596 4883F904 		cmp	rcx, 4	# tmp97,
 15797 559a 7438     		je	.L1363	#,
 15798 559c 4883F905 		cmp	rcx, 5	# tmp97,
 15799 55a0 741E     		je	.L1364	#,
 15800 55a2 4883F906 		cmp	rcx, 6	# tmp97,
 15801 55a6 0F852C01 		jne	.L1376	#,
 15801      0000
 15802              	.L1365:
 15803 55ac 4989C1   		mov	r9, rax	# tmp122, x
 15804 55af C462F9F7 		shlx	r8, rdx, rax	# tmp123, tmp92, x
 15804      C2
 15805 55b4 49C1E906 		shr	r9, 6	# tmp122,
 15806 55b8 4883C001 		add	rax, 1	# x,
 15807 55bc 4E8904CF 		mov	QWORD PTR [rdi+r9*8], r8	# *_9, tmp123
 15808              	.L1364:
 15809 55c0 4989C2   		mov	r10, rax	# tmp124, x
 15810 55c3 C462F9F7 		shlx	r11, rdx, rax	# tmp125, tmp92, x
 15810      DA
GAS LISTING /tmp/ccfflXEb.s 			page 417


 15811 55c8 49C1EA06 		shr	r10, 6	# tmp124,
 15812 55cc 4883C001 		add	rax, 1	# x,
 15813 55d0 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_9, tmp125
 15814              	.L1363:
 15815 55d4 4889C1   		mov	rcx, rax	# tmp126, x
 15816 55d7 C462F9F7 		shlx	r9, rdx, rax	# tmp127, tmp92, x
 15816      CA
 15817 55dc 48C1E906 		shr	rcx, 6	# tmp126,
 15818 55e0 4883C001 		add	rax, 1	# x,
 15819 55e4 4C890CCF 		mov	QWORD PTR [rdi+rcx*8], r9	# *_9, tmp127
 15820              	.L1362:
 15821 55e8 4989C2   		mov	r10, rax	# tmp128, x
 15822 55eb C462F9F7 		shlx	r8, rdx, rax	# tmp129, tmp92, x
 15822      C2
 15823 55f0 49C1EA06 		shr	r10, 6	# tmp128,
 15824 55f4 4883C001 		add	rax, 1	# x,
 15825 55f8 4E8904D7 		mov	QWORD PTR [rdi+r10*8], r8	# *_9, tmp129
 15826              	.L1361:
 15827 55fc 4989C3   		mov	r11, rax	# tmp130, x
 15828 55ff C4E2F9F7 		shlx	rcx, rdx, rax	# tmp131, tmp92, x
 15828      CA
 15829 5604 49C1EB06 		shr	r11, 6	# tmp130,
 15830 5608 4883C001 		add	rax, 1	# x,
 15831 560c 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_9, tmp131
 15832              	.L1360:
 15833 5610 4989C1   		mov	r9, rax	# tmp132, x
 15834 5613 C462F9F7 		shlx	r10, rdx, rax	# tmp133, tmp92, x
 15834      D2
 15835 5618 49C1E906 		shr	r9, 6	# tmp132,
 15836 561c 4883C001 		add	rax, 1	# x,
 15837 5620 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_9, tmp133
 15838 5624 4839C6   		cmp	rsi, rax	# max, x
 15839 5627 0F84BD00 		je	.L1377	#,
 15839      0000
 15840              	.L1335:
 15841 562d 488D4801 		lea	rcx, 1[rax]	# tmp98,
 15842 5631 4989C3   		mov	r11, rax	# tmp90, x
 15843 5634 49C1EB06 		shr	r11, 6	# tmp90,
 15844 5638 4989C9   		mov	r9, rcx	# tmp100, tmp98
 15845 563b 49C1E906 		shr	r9, 6	# tmp100,
 15846 563f C462F9F7 		shlx	r8, rdx, rax	# tmp93, tmp92, x
 15846      C2
 15847 5644 C462F1F7 		shlx	r10, rdx, rcx	# tmp101, tmp92, tmp98
 15847      D2
 15848 5649 4E8904DF 		mov	QWORD PTR [rdi+r11*8], r8	# *_9, tmp93
 15849 564d 4E8914CF 		mov	QWORD PTR [rdi+r9*8], r10	# *_9, tmp101
 15850 5651 4C8D5802 		lea	r11, 2[rax]	# x,
 15851 5655 4C8D4803 		lea	r9, 3[rax]	# x,
 15852 5659 4D89D8   		mov	r8, r11	# tmp103, x
 15853 565c 49C1E806 		shr	r8, 6	# tmp103,
 15854 5660 4D89CA   		mov	r10, r9	# tmp106, x
 15855 5663 49C1EA06 		shr	r10, 6	# tmp106,
 15856 5667 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp104, tmp92, x
 15856      CA
 15857 566c C462B1F7 		shlx	r11, rdx, r9	# tmp107, tmp92, x
 15857      DA
 15858 5671 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_9, tmp104
GAS LISTING /tmp/ccfflXEb.s 			page 418


 15859 5675 4E891CD7 		mov	QWORD PTR [rdi+r10*8], r11	# *_9, tmp107
 15860 5679 488D4804 		lea	rcx, 4[rax]	# x,
 15861 567d 4C8D5005 		lea	r10, 5[rax]	# x,
 15862 5681 4989C8   		mov	r8, rcx	# tmp109, x
 15863 5684 49C1E806 		shr	r8, 6	# tmp109,
 15864 5688 4D89D3   		mov	r11, r10	# tmp112, x
 15865 568b 49C1EB06 		shr	r11, 6	# tmp112,
 15866 568f C462F1F7 		shlx	r9, rdx, rcx	# tmp110, tmp92, x
 15866      CA
 15867 5694 C4E2A9F7 		shlx	rcx, rdx, r10	# tmp113, tmp92, x
 15867      CA
 15868 5699 4E890CC7 		mov	QWORD PTR [rdi+r8*8], r9	# *_9, tmp110
 15869 569d 4A890CDF 		mov	QWORD PTR [rdi+r11*8], rcx	# *_9, tmp113
 15870 56a1 4C8D4806 		lea	r9, 6[rax]	# x,
 15871 56a5 4C8D5807 		lea	r11, 7[rax]	# x,
 15872 56a9 4D89C8   		mov	r8, r9	# tmp115, x
 15873 56ac C462B1F7 		shlx	r10, rdx, r9	# tmp116, tmp92, x
 15873      D2
 15874 56b1 4883C008 		add	rax, 8	# x,
 15875 56b5 49C1E806 		shr	r8, 6	# tmp115,
 15876 56b9 4D89D9   		mov	r9, r11	# tmp118, x
 15877 56bc 49C1E906 		shr	r9, 6	# tmp118,
 15878 56c0 4839C6   		cmp	rsi, rax	# max, x
 15879 56c3 C4E2A1F7 		shlx	rcx, rdx, r11	# tmp119, tmp92, x
 15879      CA
 15880 56c8 4E8914C7 		mov	QWORD PTR [rdi+r8*8], r10	# *_9, tmp116
 15881 56cc 4A890CCF 		mov	QWORD PTR [rdi+r9*8], rcx	# *_9, tmp119
 15882 56d0 0F8557FF 		jne	.L1335	#,
 15882      FFFF
 15883              	.L1375:
 15884 56d6 C3       		ret	
 15885              		.p2align 4,,7
 15886 56d7 90       		.p2align 3
 15887              	.L1376:
 15888 56d8 48C704C7 		mov	QWORD PTR [rdi+rax*8], 1	# *_9,
 15888      01000000 
 15889 56e0 B8010000 		mov	eax, 1	# x,
 15889      00
 15890 56e5 E9C2FEFF 		jmp	.L1365	#
 15890      FF
 15891              	.L1377:
 15892 56ea C3       		ret	
 15893              		.cfi_endproc
 15894              	.LFE104:
 15896 56eb 0F1F4400 		.p2align 4
 15896      00
 15897              		.globl	test3
 15899              	test3:
 15900              	.LVL959:
 15901              	.LFB92:
1104:sieve_extend.c **** 
1105:sieve_extend.c **** void test2(bitword_t* __restrict bitstorage, counter_t max) {
1106:sieve_extend.c ****     //#pragma GCC unroll 16
1107:sieve_extend.c ****     #pragma GCC ivdep 
1108:sieve_extend.c ****     for (counter_t x=0; x<max; x++) {
1109:sieve_extend.c ****         *(bitstorage+wordindex(x)) = markmask(x);
1110:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 419


1111:sieve_extend.c **** }
1112:sieve_extend.c **** 
1113:sieve_extend.c **** void test3(bitword_t* __restrict bitstorage, counter_t max) {
 15902              		.loc 1 1113 61 is_stmt 1 view -0
 15903              		.cfi_startproc
 15904              		.loc 1 1113 61 is_stmt 0 view .LVU5164
 15905 56f0 F30F1EFA 		endbr64	
1114:sieve_extend.c ****     for (register counter_t x=0; x<max; ) {
 15906              		.loc 1 1114 5 is_stmt 1 view .LVU5165
 15907              	.LBB869:
 15908              		.loc 1 1114 10 view .LVU5166
 15909              	.LVL960:
 15910              		.loc 1 1114 34 view .LVU5167
 15911              	# sieve_extend.c:1114:     for (register counter_t x=0; x<max; ) {
 15912              		.loc 1 1114 5 is_stmt 0 view .LVU5168
 15913 56f4 4885F6   		test	rsi, rsi	# max
 15914 56f7 0F840401 		je	.L1402	#,
 15914      0000
 15915              	# sieve_extend.c:1114:     for (register counter_t x=0; x<max; ) {
 15916              		.loc 1 1114 29 view .LVU5169
 15917 56fd 31C0     		xor	eax, eax	# x
 15918              	.LBB870:
 15919              	# sieve_extend.c:1120:             mask |= markmask(x);
1115:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
1116:sieve_extend.c ****         register counter_t index_word = wordstart(x);
1117:sieve_extend.c **** 
1118:sieve_extend.c ****         #pragma GCC ivdep
1119:sieve_extend.c ****         do {
1120:sieve_extend.c ****             mask |= markmask(x);
 15920              		.loc 1 1120 21 view .LVU5170
 15921 56ff 41BA0100 		mov	r10d, 1	# tmp95,
 15921      0000
 15922              	.LVL961:
 15923 5705 66662E0F 		.p2align 4
 15923      1F840000 
 15923      000000
 15924              		.p2align 3
 15925              	.L1381:
1115:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15926              		.loc 1 1115 9 is_stmt 1 view .LVU5171
1116:sieve_extend.c **** 
 15927              		.loc 1 1116 9 view .LVU5172
 15928              	# sieve_extend.c:1116:         register counter_t index_word = wordstart(x);
1116:sieve_extend.c **** 
 15929              		.loc 1 1116 28 is_stmt 0 view .LVU5173
 15930 5710 4989C0   		mov	r8, rax	# index_word, x
 15931              	# sieve_extend.c:1115:         register bitword_t mask = SAFE_ZERO;
1115:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 15932              		.loc 1 1115 28 view .LVU5174
 15933 5713 31C9     		xor	ecx, ecx	# mask
 15934              	# sieve_extend.c:1116:         register counter_t index_word = wordstart(x);
1116:sieve_extend.c **** 
 15935              		.loc 1 1116 28 view .LVU5175
 15936 5715 4983E0C0 		and	r8, -64	# index_word,
 15937              	.LVL962:
 15938              	.L1380:
 15939              		.loc 1 1120 13 is_stmt 1 discriminator 1 view .LVU5176
GAS LISTING /tmp/ccfflXEb.s 			page 420


 15940              	# sieve_extend.c:1121:             x++;
1121:sieve_extend.c ****             x++;
 15941              		.loc 1 1121 14 is_stmt 0 discriminator 1 view .LVU5177
 15942 5719 4C8D4801 		lea	r9, 1[rax]	# tmp98,
 15943              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 15944              		.loc 1 1120 21 discriminator 1 view .LVU5178
 15945 571d C4C2F9F7 		shlx	rdx, r10, rax	# tmp94, tmp95, x
 15945      D2
 15946              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
1122:sieve_extend.c ****         } while(wordstart(x)==index_word);
 15947              		.loc 1 1122 17 discriminator 1 view .LVU5179
 15948 5722 4D89CB   		mov	r11, r9	# tmp96, x
 15949              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 15950              		.loc 1 1120 18 discriminator 1 view .LVU5180
 15951 5725 4809D1   		or	rcx, rdx	# mask, tmp94
 15952              	.LVL963:
1121:sieve_extend.c ****             x++;
 15953              		.loc 1 1121 13 is_stmt 1 discriminator 1 view .LVU5181
 15954              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 15955              		.loc 1 1122 17 is_stmt 0 discriminator 1 view .LVU5182
 15956 5728 4983E3C0 		and	r11, -64	# tmp96,
 15957              	# sieve_extend.c:1121:             x++;
1121:sieve_extend.c ****             x++;
 15958              		.loc 1 1121 14 discriminator 1 view .LVU5183
 15959 572c 4C89C8   		mov	rax, r9	# x, tmp98
 15960              	.LVL964:
 15961              		.loc 1 1122 16 is_stmt 1 discriminator 1 view .LVU5184
 15962              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 15963              		.loc 1 1122 9 is_stmt 0 discriminator 1 view .LVU5185
 15964 572f 4D39C3   		cmp	r11, r8	# tmp96, index_word
 15965 5732 0F85B800 		jne	.L1401	#,
 15965      0000
1120:sieve_extend.c ****             x++;
 15966              		.loc 1 1120 13 is_stmt 1 view .LVU5186
 15967              	# sieve_extend.c:1121:             x++;
1121:sieve_extend.c ****             x++;
 15968              		.loc 1 1121 14 is_stmt 0 view .LVU5187
 15969 5738 4883C001 		add	rax, 1	# x,
 15970              	.LVL965:
 15971              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 15972              		.loc 1 1120 21 view .LVU5188
 15973 573c C4C2B1F7 		shlx	rdx, r10, r9	# tmp99, tmp95, x
 15973      D2
 15974              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 15975              		.loc 1 1122 17 view .LVU5189
 15976 5741 4989C3   		mov	r11, rax	# tmp100, x
 15977              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 15978              		.loc 1 1120 18 view .LVU5190
 15979 5744 4809D1   		or	rcx, rdx	# mask, tmp99
 15980              	.LVL966:
1121:sieve_extend.c ****             x++;
 15981              		.loc 1 1121 13 is_stmt 1 view .LVU5191
 15982              		.loc 1 1122 16 view .LVU5192
GAS LISTING /tmp/ccfflXEb.s 			page 421


 15983              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 15984              		.loc 1 1122 17 is_stmt 0 view .LVU5193
 15985 5747 4983E3C0 		and	r11, -64	# tmp100,
 15986              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 15987              		.loc 1 1122 9 view .LVU5194
 15988 574b 4D39C3   		cmp	r11, r8	# tmp100, index_word
 15989 574e 0F859C00 		jne	.L1401	#,
 15989      0000
1120:sieve_extend.c ****             x++;
 15990              		.loc 1 1120 13 is_stmt 1 view .LVU5195
 15991              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 15992              		.loc 1 1120 21 is_stmt 0 view .LVU5196
 15993 5754 C4C2F9F7 		shlx	rax, r10, rax	# tmp101, tmp95, x
 15993      C2
 15994              	.LVL967:
 15995              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 15996              		.loc 1 1120 18 view .LVU5197
 15997 5759 4809C1   		or	rcx, rax	# mask, tmp101
 15998              	.LVL968:
1121:sieve_extend.c ****             x++;
 15999              		.loc 1 1121 13 is_stmt 1 view .LVU5198
 16000              	# sieve_extend.c:1121:             x++;
1121:sieve_extend.c ****             x++;
 16001              		.loc 1 1121 14 is_stmt 0 view .LVU5199
 16002 575c 498D4102 		lea	rax, 2[r9]	# x,
 16003              	.LVL969:
 16004              		.loc 1 1122 16 is_stmt 1 view .LVU5200
 16005              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16006              		.loc 1 1122 17 is_stmt 0 view .LVU5201
 16007 5760 4889C2   		mov	rdx, rax	# tmp102, x
 16008 5763 4883E2C0 		and	rdx, -64	# tmp102,
 16009              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16010              		.loc 1 1122 9 view .LVU5202
 16011 5767 4C39C2   		cmp	rdx, r8	# tmp102, index_word
 16012 576a 0F858000 		jne	.L1401	#,
 16012      0000
1120:sieve_extend.c ****             x++;
 16013              		.loc 1 1120 13 is_stmt 1 view .LVU5203
 16014              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 16015              		.loc 1 1120 21 is_stmt 0 view .LVU5204
 16016 5770 C442F9F7 		shlx	r11, r10, rax	# tmp103, tmp95, x
 16016      DA
 16017              	# sieve_extend.c:1121:             x++;
1121:sieve_extend.c ****             x++;
 16018              		.loc 1 1121 14 view .LVU5205
 16019 5775 498D4103 		lea	rax, 3[r9]	# x,
 16020              	.LVL970:
 16021              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16022              		.loc 1 1122 17 view .LVU5206
 16023 5779 4889C2   		mov	rdx, rax	# tmp104, x
 16024              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 16025              		.loc 1 1120 18 view .LVU5207
 16026 577c 4C09D9   		or	rcx, r11	# mask, tmp103
GAS LISTING /tmp/ccfflXEb.s 			page 422


 16027              	.LVL971:
1121:sieve_extend.c ****             x++;
 16028              		.loc 1 1121 13 is_stmt 1 view .LVU5208
 16029              		.loc 1 1122 16 view .LVU5209
 16030              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16031              		.loc 1 1122 17 is_stmt 0 view .LVU5210
 16032 577f 4883E2C0 		and	rdx, -64	# tmp104,
 16033              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16034              		.loc 1 1122 9 view .LVU5211
 16035 5783 4C39C2   		cmp	rdx, r8	# tmp104, index_word
 16036 5786 7568     		jne	.L1401	#,
1120:sieve_extend.c ****             x++;
 16037              		.loc 1 1120 13 is_stmt 1 view .LVU5212
 16038              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 16039              		.loc 1 1120 21 is_stmt 0 view .LVU5213
 16040 5788 C4C2F9F7 		shlx	rax, r10, rax	# tmp105, tmp95, x
 16040      C2
 16041              	.LVL972:
 16042              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 16043              		.loc 1 1120 18 view .LVU5214
 16044 578d 4809C1   		or	rcx, rax	# mask, tmp105
 16045              	.LVL973:
1121:sieve_extend.c ****             x++;
 16046              		.loc 1 1121 13 is_stmt 1 view .LVU5215
 16047              	# sieve_extend.c:1121:             x++;
1121:sieve_extend.c ****             x++;
 16048              		.loc 1 1121 14 is_stmt 0 view .LVU5216
 16049 5790 498D4104 		lea	rax, 4[r9]	# x,
 16050              	.LVL974:
 16051              		.loc 1 1122 16 is_stmt 1 view .LVU5217
 16052              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16053              		.loc 1 1122 17 is_stmt 0 view .LVU5218
 16054 5794 4989C3   		mov	r11, rax	# tmp106, x
 16055 5797 4983E3C0 		and	r11, -64	# tmp106,
 16056              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16057              		.loc 1 1122 9 view .LVU5219
 16058 579b 4D39C3   		cmp	r11, r8	# tmp106, index_word
 16059 579e 7550     		jne	.L1401	#,
1120:sieve_extend.c ****             x++;
 16060              		.loc 1 1120 13 is_stmt 1 view .LVU5220
 16061              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 16062              		.loc 1 1120 21 is_stmt 0 view .LVU5221
 16063 57a0 C4C2F9F7 		shlx	rdx, r10, rax	# tmp107, tmp95, x
 16063      D2
 16064              	# sieve_extend.c:1121:             x++;
1121:sieve_extend.c ****             x++;
 16065              		.loc 1 1121 14 view .LVU5222
 16066 57a5 498D4105 		lea	rax, 5[r9]	# x,
 16067              	.LVL975:
 16068              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16069              		.loc 1 1122 17 view .LVU5223
 16070 57a9 4989C3   		mov	r11, rax	# tmp108, x
 16071              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
GAS LISTING /tmp/ccfflXEb.s 			page 423


 16072              		.loc 1 1120 18 view .LVU5224
 16073 57ac 4809D1   		or	rcx, rdx	# mask, tmp107
 16074              	.LVL976:
1121:sieve_extend.c ****             x++;
 16075              		.loc 1 1121 13 is_stmt 1 view .LVU5225
 16076              		.loc 1 1122 16 view .LVU5226
 16077              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16078              		.loc 1 1122 17 is_stmt 0 view .LVU5227
 16079 57af 4983E3C0 		and	r11, -64	# tmp108,
 16080              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16081              		.loc 1 1122 9 view .LVU5228
 16082 57b3 4D39C3   		cmp	r11, r8	# tmp108, index_word
 16083 57b6 7538     		jne	.L1401	#,
1120:sieve_extend.c ****             x++;
 16084              		.loc 1 1120 13 is_stmt 1 view .LVU5229
 16085              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 16086              		.loc 1 1120 21 is_stmt 0 view .LVU5230
 16087 57b8 C4C2F9F7 		shlx	rax, r10, rax	# tmp109, tmp95, x
 16087      C2
 16088              	.LVL977:
 16089              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 16090              		.loc 1 1120 18 view .LVU5231
 16091 57bd 4809C1   		or	rcx, rax	# mask, tmp109
 16092              	.LVL978:
1121:sieve_extend.c ****             x++;
 16093              		.loc 1 1121 13 is_stmt 1 view .LVU5232
 16094              	# sieve_extend.c:1121:             x++;
1121:sieve_extend.c ****             x++;
 16095              		.loc 1 1121 14 is_stmt 0 view .LVU5233
 16096 57c0 498D4106 		lea	rax, 6[r9]	# x,
 16097              	.LVL979:
 16098              		.loc 1 1122 16 is_stmt 1 view .LVU5234
 16099              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16100              		.loc 1 1122 17 is_stmt 0 view .LVU5235
 16101 57c4 4889C2   		mov	rdx, rax	# tmp110, x
 16102 57c7 4883E2C0 		and	rdx, -64	# tmp110,
 16103              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16104              		.loc 1 1122 9 view .LVU5236
 16105 57cb 4C39C2   		cmp	rdx, r8	# tmp110, index_word
 16106 57ce 7520     		jne	.L1401	#,
1120:sieve_extend.c ****             x++;
 16107              		.loc 1 1120 13 is_stmt 1 view .LVU5237
 16108              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 16109              		.loc 1 1120 21 is_stmt 0 view .LVU5238
 16110 57d0 C442F9F7 		shlx	r11, r10, rax	# tmp111, tmp95, x
 16110      DA
 16111              	# sieve_extend.c:1121:             x++;
1121:sieve_extend.c ****             x++;
 16112              		.loc 1 1121 14 view .LVU5239
 16113 57d5 498D4107 		lea	rax, 7[r9]	# x,
 16114              	.LVL980:
 16115              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16116              		.loc 1 1122 17 view .LVU5240
 16117 57d9 4989C1   		mov	r9, rax	# tmp112, x
GAS LISTING /tmp/ccfflXEb.s 			page 424


 16118              	.LVL981:
 16119              	# sieve_extend.c:1120:             mask |= markmask(x);
1120:sieve_extend.c ****             x++;
 16120              		.loc 1 1120 18 view .LVU5241
 16121 57dc 4C09D9   		or	rcx, r11	# mask, tmp111
 16122              	.LVL982:
1121:sieve_extend.c ****             x++;
 16123              		.loc 1 1121 13 is_stmt 1 view .LVU5242
 16124              		.loc 1 1122 16 view .LVU5243
 16125              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16126              		.loc 1 1122 17 is_stmt 0 view .LVU5244
 16127 57df 4983E1C0 		and	r9, -64	# tmp112,
 16128              	# sieve_extend.c:1122:         } while(wordstart(x)==index_word);
 16129              		.loc 1 1122 9 view .LVU5245
 16130 57e3 4D39C1   		cmp	r9, r8	# tmp112, index_word
 16131 57e6 0F842DFF 		je	.L1380	#,
 16131      FFFF
 16132 57ec 0F1F4000 		.p2align 4
 16133              		.p2align 3
 16134              	.L1401:
1123:sieve_extend.c ****         bitstorage[wordindex(index_word)] = mask;
 16135              		.loc 1 1123 9 is_stmt 1 view .LVU5246
 16136              	# sieve_extend.c:1123:         bitstorage[wordindex(index_word)] = mask;
 16137              		.loc 1 1123 20 is_stmt 0 view .LVU5247
 16138 57f0 49C1E806 		shr	r8, 6	# tmp97,
 16139              	.LVL983:
 16140              		.loc 1 1123 20 view .LVU5248
 16141              	.LBE870:
 16142              	# sieve_extend.c:1114:     for (register counter_t x=0; x<max; ) {
1114:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 16143              		.loc 1 1114 5 view .LVU5249
 16144 57f4 4839C6   		cmp	rsi, rax	# max, x
 16145              	.LBB871:
 16146              	# sieve_extend.c:1123:         bitstorage[wordindex(index_word)] = mask;
 16147              		.loc 1 1123 43 view .LVU5250
 16148 57f7 4A890CC7 		mov	QWORD PTR [rdi+r8*8], rcx	# *_6, mask
 16149              		.loc 1 1123 43 view .LVU5251
 16150              	.LBE871:
1114:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 16151              		.loc 1 1114 34 is_stmt 1 view .LVU5252
 16152              	# sieve_extend.c:1114:     for (register counter_t x=0; x<max; ) {
1114:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 16153              		.loc 1 1114 5 is_stmt 0 view .LVU5253
 16154 57fb 0F870FFF 		ja	.L1381	#,
 16154      FFFF
 16155              	.LVL984:
 16156              	.L1402:
1114:sieve_extend.c ****         register bitword_t mask = SAFE_ZERO;
 16157              		.loc 1 1114 5 view .LVU5254
 16158              	.LBE869:
 16159              	# sieve_extend.c:1125: }
1124:sieve_extend.c ****     }
1125:sieve_extend.c **** }
 16160              		.loc 1 1125 1 view .LVU5255
 16161 5801 C3       		ret	
 16162              		.cfi_endproc
 16163              	.LFE92:
GAS LISTING /tmp/ccfflXEb.s 			page 425


 16165 5802 66662E0F 		.p2align 4
 16165      1F840000 
 16165      0000000F 
 16165      1F00
 16166              		.globl	testshuffle_vector
 16168              	testshuffle_vector:
 16169              	.LVL985:
 16170              	.LFB93:
1126:sieve_extend.c **** 
1127:sieve_extend.c **** //void test4(bitword_t* __restrict bitstorage, counter_t max) {
1128:sieve_extend.c **** //    bitvector_t* bitvector = (bitvector_t*) bitstorage;
1129:sieve_extend.c **** //    for (register int x=0; x<max; ) {
1130:sieve_extend.c **** //        register bitvector_t mask = {};
1131:sieve_extend.c **** //        register counter_t index_vector = vectorstart(x);
1132:sieve_extend.c **** //        register counter_t index_word = wordindex(x);
1133:sieve_extend.c **** //        register word = wordindex(x);
1134:sieve_extend.c **** //        #pragma GCC ivdep
1135:sieve_extend.c **** //        do {
1136:sieve_extend.c **** //            mask[word[] |= markmask(x);
1137:sieve_extend.c **** //            x++;
1138:sieve_extend.c **** //            word =
1139:sieve_extend.c **** //        } while(wordstart(x)==index_word);
1140:sieve_extend.c **** //        bitvector[wordindex(index_word)] = mask;
1141:sieve_extend.c **** //    }
1142:sieve_extend.c **** //}
1143:sieve_extend.c **** 
1144:sieve_extend.c **** void testshuffle_vector(bitword_t* __restrict bitstorage, counter_t max) {
 16171              		.loc 1 1144 74 is_stmt 1 view -0
 16172              		.cfi_startproc
 16173              		.loc 1 1144 74 is_stmt 0 view .LVU5257
 16174 5810 F30F1EFA 		endbr64	
1145:sieve_extend.c ****     
1146:sieve_extend.c ****     bitword_t* bitstorage_word     = (bitword_t*)bitstorage;
 16175              		.loc 1 1146 5 is_stmt 1 view .LVU5258
 16176              	.LVL986:
1147:sieve_extend.c ****     bitvector_t* bitstorage_vector = (bitvector_t*)bitstorage;
 16177              		.loc 1 1147 5 view .LVU5259
1148:sieve_extend.c ****     
1149:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i < max; i+=20) {
 16178              		.loc 1 1149 5 view .LVU5260
 16179              	.LBB872:
 16180              		.loc 1 1149 10 view .LVU5261
 16181              		.loc 1 1149 25 view .LVU5262
 16182              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
 16183              		.loc 1 1149 5 is_stmt 0 view .LVU5263
 16184 5814 4883FE01 		cmp	rsi, 1	# max,
 16185 5818 0F86C300 		jbe	.L1404	#,
 16185      0000
 16186              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
1150:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16187              		.loc 1 1150 39 view .LVU5264
 16188 581e 48830F02 		or	QWORD PTR [rdi], 2	# *_3,
 16189              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16190              		.loc 1 1149 5 view .LVU5265
 16191 5822 4883FE15 		cmp	rsi, 21	# max,
 16192              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccfflXEb.s 			page 426


 16193              		.loc 1 1150 42 view .LVU5266
 16194 5826 B9010000 		mov	ecx, 1	# tmp134,
 16194      00
 16195              		.loc 1 1150 9 is_stmt 1 view .LVU5267
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16196              		.loc 1 1149 44 view .LVU5268
 16197              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16198              		.loc 1 1149 45 is_stmt 0 view .LVU5269
 16199 582b B8150000 		mov	eax, 21	# i,
 16199      00
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16200              		.loc 1 1149 25 is_stmt 1 view .LVU5270
 16201              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16202              		.loc 1 1149 5 is_stmt 0 view .LVU5271
 16203 5830 0F86AB00 		jbe	.L1404	#,
 16203      0000
 16204              	.L1405:
 16205              		.loc 1 1150 9 is_stmt 1 discriminator 3 view .LVU5272
 16206              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16207              		.loc 1 1150 39 is_stmt 0 discriminator 3 view .LVU5273
 16208 5836 4889C2   		mov	rdx, rax	# tmp169, i
 16209              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16210              		.loc 1 1149 45 discriminator 3 view .LVU5274
 16211 5839 4C8D4814 		lea	r9, 20[rax]	# tmp167,
 16212              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16213              		.loc 1 1150 39 discriminator 3 view .LVU5275
 16214 583d 48C1EA06 		shr	rdx, 6	# tmp169,
 16215              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16216              		.loc 1 1150 42 discriminator 3 view .LVU5276
 16217 5841 C462F9F7 		shlx	r8, rcx, rax	# tmp172, tmp134, i
 16217      C1
 16218              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16219              		.loc 1 1150 39 discriminator 3 view .LVU5277
 16220 5846 4C0904D7 		or	QWORD PTR [rdi+rdx*8], r8	# *_3, tmp172
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16221              		.loc 1 1149 44 is_stmt 1 discriminator 3 view .LVU5278
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16222              		.loc 1 1149 25 discriminator 3 view .LVU5279
 16223              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16224              		.loc 1 1149 5 is_stmt 0 discriminator 3 view .LVU5280
 16225 584a 4981F9FF 		cmp	r9, 511	# tmp167,
 16225      010000
 16226 5851 0F878A00 		ja	.L1404	#,
 16226      0000
 16227 5857 4C39CE   		cmp	rsi, r9	# max, tmp167
 16228 585a 0F868100 		jbe	.L1404	#,
 16228      0000
 16229              		.loc 1 1150 9 is_stmt 1 view .LVU5281
 16230              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16231              		.loc 1 1150 39 is_stmt 0 view .LVU5282
 16232 5860 4D89CA   		mov	r10, r9	# tmp210, tmp167
 16233              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccfflXEb.s 			page 427


 16234              		.loc 1 1149 45 view .LVU5283
 16235 5863 488D5028 		lea	rdx, 40[rax]	# i,
 16236              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16237              		.loc 1 1150 39 view .LVU5284
 16238 5867 49C1EA06 		shr	r10, 6	# tmp210,
 16239              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16240              		.loc 1 1150 42 view .LVU5285
 16241 586b C462B1F7 		shlx	r11, rcx, r9	# tmp213, tmp134, tmp167
 16241      D9
 16242              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16243              		.loc 1 1150 39 view .LVU5286
 16244 5870 4E091CD7 		or	QWORD PTR [rdi+r10*8], r11	# *_3, tmp213
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16245              		.loc 1 1149 44 is_stmt 1 view .LVU5287
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16246              		.loc 1 1149 25 view .LVU5288
 16247              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16248              		.loc 1 1149 5 is_stmt 0 view .LVU5289
 16249 5874 4839D6   		cmp	rsi, rdx	# max, i
 16250 5877 7668     		jbe	.L1404	#,
 16251              		.loc 1 1150 9 is_stmt 1 view .LVU5290
 16252              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16253              		.loc 1 1150 39 is_stmt 0 view .LVU5291
 16254 5879 4989D0   		mov	r8, rdx	# tmp217, i
 16255              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16256              		.loc 1 1149 45 view .LVU5292
 16257 587c 4C8D503C 		lea	r10, 60[rax]	# i,
 16258              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16259              		.loc 1 1150 39 view .LVU5293
 16260 5880 49C1E806 		shr	r8, 6	# tmp217,
 16261              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16262              		.loc 1 1150 42 view .LVU5294
 16263 5884 C462E9F7 		shlx	r9, rcx, rdx	# tmp220, tmp134, i
 16263      C9
 16264              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16265              		.loc 1 1150 39 view .LVU5295
 16266 5889 4E090CC7 		or	QWORD PTR [rdi+r8*8], r9	# *_3, tmp220
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16267              		.loc 1 1149 44 is_stmt 1 view .LVU5296
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16268              		.loc 1 1149 25 view .LVU5297
 16269              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16270              		.loc 1 1149 5 is_stmt 0 view .LVU5298
 16271 588d 4C39D6   		cmp	rsi, r10	# max, i
 16272 5890 764F     		jbe	.L1404	#,
 16273              		.loc 1 1150 9 is_stmt 1 view .LVU5299
 16274              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16275              		.loc 1 1150 39 is_stmt 0 view .LVU5300
 16276 5892 4D89D3   		mov	r11, r10	# tmp224, i
 16277              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16278              		.loc 1 1149 45 view .LVU5301
 16279 5895 4C8D4850 		lea	r9, 80[rax]	# i,
 16280              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccfflXEb.s 			page 428


 16281              		.loc 1 1150 39 view .LVU5302
 16282 5899 49C1EB06 		shr	r11, 6	# tmp224,
 16283              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16284              		.loc 1 1150 42 view .LVU5303
 16285 589d C4E2A9F7 		shlx	rdx, rcx, r10	# tmp227, tmp134, i
 16285      D1
 16286              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16287              		.loc 1 1150 39 view .LVU5304
 16288 58a2 4A0914DF 		or	QWORD PTR [rdi+r11*8], rdx	# *_3, tmp227
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16289              		.loc 1 1149 44 is_stmt 1 view .LVU5305
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16290              		.loc 1 1149 25 view .LVU5306
 16291              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16292              		.loc 1 1149 5 is_stmt 0 view .LVU5307
 16293 58a6 4C39CE   		cmp	rsi, r9	# max, i
 16294 58a9 7636     		jbe	.L1404	#,
 16295              		.loc 1 1150 9 is_stmt 1 view .LVU5308
 16296              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16297              		.loc 1 1150 39 is_stmt 0 view .LVU5309
 16298 58ab 4D89C8   		mov	r8, r9	# tmp231, i
 16299              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16300              		.loc 1 1149 45 view .LVU5310
 16301 58ae 4C8D5864 		lea	r11, 100[rax]	# i,
 16302              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16303              		.loc 1 1150 39 view .LVU5311
 16304 58b2 49C1E806 		shr	r8, 6	# tmp231,
 16305              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16306              		.loc 1 1150 42 view .LVU5312
 16307 58b6 C462B1F7 		shlx	r10, rcx, r9	# tmp234, tmp134, i
 16307      D1
 16308              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16309              		.loc 1 1150 39 view .LVU5313
 16310 58bb 4E0914C7 		or	QWORD PTR [rdi+r8*8], r10	# *_3, tmp234
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16311              		.loc 1 1149 44 is_stmt 1 view .LVU5314
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16312              		.loc 1 1149 25 view .LVU5315
 16313              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16314              		.loc 1 1149 5 is_stmt 0 view .LVU5316
 16315 58bf 4C39DE   		cmp	rsi, r11	# max, i
 16316 58c2 761D     		jbe	.L1404	#,
 16317              		.loc 1 1150 9 is_stmt 1 view .LVU5317
 16318              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16319              		.loc 1 1150 39 is_stmt 0 view .LVU5318
 16320 58c4 4D89D9   		mov	r9, r11	# tmp238, i
 16321              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16322              		.loc 1 1149 45 view .LVU5319
 16323 58c7 4883C078 		add	rax, 120	# i,
 16324              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16325              		.loc 1 1150 39 view .LVU5320
 16326 58cb 49C1E906 		shr	r9, 6	# tmp238,
 16327              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccfflXEb.s 			page 429


 16328              		.loc 1 1150 42 view .LVU5321
 16329 58cf C4E2A1F7 		shlx	rdx, rcx, r11	# tmp241, tmp134, i
 16329      D1
 16330              	# sieve_extend.c:1150:         bitstorage_word[wordindex(i)] |= markmask(i);
 16331              		.loc 1 1150 39 view .LVU5322
 16332 58d4 4A0914CF 		or	QWORD PTR [rdi+r9*8], rdx	# *_3, tmp241
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16333              		.loc 1 1149 44 is_stmt 1 view .LVU5323
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16334              		.loc 1 1149 25 view .LVU5324
 16335              	# sieve_extend.c:1149:     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16336              		.loc 1 1149 5 is_stmt 0 view .LVU5325
 16337 58d8 4839C6   		cmp	rsi, rax	# max, i
 16338 58db 0F8755FF 		ja	.L1405	#,
 16338      FFFF
 16339              	.LVL987:
 16340              	.L1404:
1149:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16341              		.loc 1 1149 5 view .LVU5326
 16342              	.LBE872:
1151:sieve_extend.c ****     }
1152:sieve_extend.c **** 
1153:sieve_extend.c ****     counter_t source_start = 66+64;
 16343              		.loc 1 1153 5 is_stmt 1 view .LVU5327
1154:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
 16344              		.loc 1 1154 5 view .LVU5328
1155:sieve_extend.c ****     bitstorage_word[wordindex(source_start)]  |= markmask_calc(source_start);
 16345              		.loc 1 1155 5 view .LVU5329
1156:sieve_extend.c ****     bitstorage_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
 16346              		.loc 1 1156 5 view .LVU5330
 16347              	# sieve_extend.c:1156:     bitstorage_word[wordindex(source_start+1)]  |= markmask_calc(source_star
 16348              		.loc 1 1156 49 is_stmt 0 view .LVU5331
 16349 58e1 48834F10 		or	QWORD PTR 16[rdi], 12	# MEM[(uint64_t *)bitstorage_29(D) + 16B],
 16349      0C
1157:sieve_extend.c **** 
1158:sieve_extend.c **** 
1159:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
 16350              		.loc 1 1159 5 is_stmt 1 view .LVU5332
 16351              	.LVL988:
1160:sieve_extend.c ****     counter_t delta_word   = 4-((wordindex(destination_start) - wordindex(source_start)) % 4);
 16352              		.loc 1 1160 5 view .LVU5333
1161:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
 16353              		.loc 1 1161 5 view .LVU5334
1162:sieve_extend.c ****     
1163:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
 16354              		.loc 1 1163 5 view .LVU5335
1164:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
 16355              		.loc 1 1164 5 view .LVU5336
1165:sieve_extend.c **** 
1166:sieve_extend.c **** //    if (delta_bit) ....
1167:sieve_extend.c **** 
1168:sieve_extend.c ****     const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
 16356              		.loc 1 1168 5 view .LVU5337
1169:sieve_extend.c ****     const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
 16357              		.loc 1 1169 5 view .LVU5338
1170:sieve_extend.c ****     const bitvector_t shift = { shift_bit, shift_bit, shift_bit, shift_bit };
GAS LISTING /tmp/ccfflXEb.s 			page 430


 16358              		.loc 1 1170 5 view .LVU5339
1171:sieve_extend.c ****     const bitvector_t shift_flipped = { shift_bit_flipped, shift_bit_flipped, shift_bit_flipped, sh
 16359              		.loc 1 1171 5 view .LVU5340
1172:sieve_extend.c **** 
1173:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++ ) {
 16360              		.loc 1 1173 5 view .LVU5341
 16361              	.LBB873:
 16362              		.loc 1 1173 10 view .LVU5342
 16363              		.loc 1 1173 37 view .LVU5343
 16364 58e6 488D7760 		lea	rsi, 96[rdi]	# ivtmp.696,
 16365              	.LVL989:
 16366              		.loc 1 1173 37 is_stmt 0 view .LVU5344
 16367 58ea C57D6F47 		vmovdqa	ymm8, YMMWORD PTR 32[rdi]	# D__lsm1.670, MEM[(bitvector_t *)bitstorage_29(D) + 32B]
 16367      20
 16368              	# sieve_extend.c:1173:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
 16369              		.loc 1 1173 20 view .LVU5345
 16370 58ef B8030000 		mov	eax, 3	# copy_vector,
 16370      00
 16371 58f4 C57D6F67 		vmovdqa	ymm12, YMMWORD PTR 64[rdi]	# D__lsm2.671, MEM[(bitvector_t *)bitstorage_29(D) + 64B]
 16371      40
 16372 58f9 C5FD6F27 		vmovdqa	ymm4, YMMWORD PTR [rdi]	# D__lsm0.669, MEM[(bitvector_t *)bitstorage_29(D)]
 16373              	.LVL990:
 16374              	.L1407:
 16375              	.LBB874:
1174:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16376              		.loc 1 1174 9 is_stmt 1 discriminator 3 view .LVU5346
1175:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 16377              		.loc 1 1175 9 discriminator 3 view .LVU5347
1176:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16378              		.loc 1 1176 9 discriminator 3 view .LVU5348
1177:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16379              		.loc 1 1177 9 discriminator 3 view .LVU5349
1178:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16380              		.loc 1 1178 9 discriminator 3 view .LVU5350
 16381              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16382              		.loc 1 1176 29 is_stmt 0 discriminator 3 view .LVU5351
 16383 58fd C4C35D46 		vperm2i128	ymm3, ymm4, ymm8, 33	# tmp140, D__lsm0.669, D__lsm1.670,
 16383      D821
 16384 5903 C4C33D46 		vperm2i128	ymm7, ymm8, ymm12, 33	# tmp146, D__lsm1.670, D__lsm2.671,
 16384      FC21
 16385 5909 C4E3650F 		vpalignr	ymm2, ymm3, ymm4, 8	# tmp141, tmp140, D__lsm0.669,
 16385      D408
 16386              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16387              		.loc 1 1177 21 discriminator 3 view .LVU5352
 16388 590f C5D573F3 		vpsllq	ymm5, ymm3, 10	# dest2, tmp140,
 16388      0A
 16389              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16390              		.loc 1 1176 21 discriminator 3 view .LVU5353
 16391 5914 C5DD73D2 		vpsrlq	ymm4, ymm2, 54	# dest1, tmp141,
 16391      36
 16392              	.LVL991:
 16393              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16394              		.loc 1 1178 48 discriminator 3 view .LVU5354
 16395 5919 C5DDEBF5 		vpor	ymm6, ymm4, ymm5	# D__lsm0.669, dest1, dest2
GAS LISTING /tmp/ccfflXEb.s 			page 431


 16396              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16397              		.loc 1 1177 21 discriminator 3 view .LVU5355
 16398 591d C5B573F7 		vpsllq	ymm9, ymm7, 10	# dest2, tmp146,
 16398      0A
 16399              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16400              		.loc 1 1176 29 discriminator 3 view .LVU5356
 16401 5922 C4C3450F 		vpalignr	ymm1, ymm7, ymm8, 8	# tmp147, tmp146, D__lsm1.670,
 16401      C808
 16402 5928 C4631D46 		vperm2i128	ymm11, ymm12, ymm6, 33	# tmp152, D__lsm2.671, D__lsm0.669,
 16402      DE21
 16403              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16404              		.loc 1 1176 21 discriminator 3 view .LVU5357
 16405 592e C5BD73D1 		vpsrlq	ymm8, ymm1, 54	# dest1, tmp147,
 16405      36
 16406              	.LVL992:
 16407              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16408              		.loc 1 1176 29 discriminator 3 view .LVU5358
 16409 5933 C4C3250F 		vpalignr	ymm0, ymm11, ymm12, 8	# tmp153, tmp152, D__lsm2.671,
 16409      C408
 16410              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16411              		.loc 1 1178 48 discriminator 3 view .LVU5359
 16412 5939 C4413DEB 		vpor	ymm10, ymm8, ymm9	# D__lsm1.670, dest1, dest2
 16412      D1
 16413              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16414              		.loc 1 1176 21 discriminator 3 view .LVU5360
 16415 593e C59D73D0 		vpsrlq	ymm12, ymm0, 54	# dest1, tmp153,
 16415      36
 16416              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16417              		.loc 1 1177 21 discriminator 3 view .LVU5361
 16418 5943 C4C11573 		vpsllq	ymm13, ymm11, 10	# dest2, tmp152,
 16418      F30A
 16419              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16420              		.loc 1 1176 29 discriminator 3 view .LVU5362
 16421 5949 C4434D46 		vperm2i128	ymm15, ymm6, ymm10, 33	# tmp181, D__lsm0.669, D__lsm1.670,
 16421      FA21
 16422              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16423              		.loc 1 1178 48 discriminator 3 view .LVU5363
 16424 594f C4411DEB 		vpor	ymm14, ymm12, ymm13	# D__lsm2.671, dest1, dest2
 16424      F5
 16425              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16426              		.loc 1 1177 21 discriminator 3 view .LVU5364
 16427 5954 C4C15D73 		vpsllq	ymm4, ymm15, 10	# dest2, tmp181,
 16427      F70A
 16428              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16429              		.loc 1 1178 40 discriminator 3 view .LVU5365
 16430 595a C5FD7F36 		vmovdqa	YMMWORD PTR [rsi], ymm6	# MEM[base: _134, offset: 0B], D__lsm0.669
 16431              	.LBE874:
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16432              		.loc 1 1173 54 is_stmt 1 discriminator 3 view .LVU5366
GAS LISTING /tmp/ccfflXEb.s 			page 432


1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16433              		.loc 1 1173 37 discriminator 3 view .LVU5367
 16434              	.LBB875:
1174:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 16435              		.loc 1 1174 9 discriminator 3 view .LVU5368
1175:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16436              		.loc 1 1175 9 discriminator 3 view .LVU5369
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16437              		.loc 1 1176 9 discriminator 3 view .LVU5370
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16438              		.loc 1 1177 9 discriminator 3 view .LVU5371
 16439              		.loc 1 1178 9 discriminator 3 view .LVU5372
 16440              	.LBE875:
 16441              	# sieve_extend.c:1173:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16442              		.loc 1 1173 65 is_stmt 0 discriminator 3 view .LVU5373
 16443 595e 4883C009 		add	rax, 9	# copy_vector,
 16444              	.LBB876:
 16445              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16446              		.loc 1 1176 29 discriminator 3 view .LVU5374
 16447 5962 C4E3050F 		vpalignr	ymm3, ymm15, ymm6, 8	# tmp182, tmp181, D__lsm0.669,
 16447      DE08
 16448 5968 C4C32D46 		vperm2i128	ymm6, ymm10, ymm14, 33	# tmp186, D__lsm1.670, D__lsm2.671,
 16448      F621
 16449              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16450              		.loc 1 1176 21 discriminator 3 view .LVU5375
 16451 596e C5ED73D3 		vpsrlq	ymm2, ymm3, 54	# dest1, tmp182,
 16451      36
 16452              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16453              		.loc 1 1176 29 discriminator 3 view .LVU5376
 16454 5973 C4C34D0F 		vpalignr	ymm7, ymm6, ymm10, 8	# tmp187, tmp186, D__lsm1.670,
 16454      FA08
 16455              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16456              		.loc 1 1178 48 discriminator 3 view .LVU5377
 16457 5979 C5EDEBEC 		vpor	ymm5, ymm2, ymm4	# D__lsm0.669, dest1, dest2
 16458              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16459              		.loc 1 1176 21 discriminator 3 view .LVU5378
 16460 597d C5F573D7 		vpsrlq	ymm1, ymm7, 54	# dest1, tmp187,
 16460      36
 16461              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16462              		.loc 1 1177 21 discriminator 3 view .LVU5379
 16463 5982 C5BD73F6 		vpsllq	ymm8, ymm6, 10	# dest2, tmp186,
 16463      0A
 16464 5987 488D8EC0 		lea	rcx, 192[rsi]	# ivtmp.696,
 16464      000000
 16465              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16466              		.loc 1 1178 40 discriminator 3 view .LVU5380
 16467 598e C57D7F56 		vmovdqa	YMMWORD PTR 32[rsi], ymm10	# MEM[base: _134, offset: 32B], D__lsm1.670
 16467      20
 16468              	.LBE876:
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16469              		.loc 1 1173 54 is_stmt 1 discriminator 3 view .LVU5381
GAS LISTING /tmp/ccfflXEb.s 			page 433


1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16470              		.loc 1 1173 37 discriminator 3 view .LVU5382
 16471              	.LBB877:
1174:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 16472              		.loc 1 1174 9 discriminator 3 view .LVU5383
1175:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16473              		.loc 1 1175 9 discriminator 3 view .LVU5384
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16474              		.loc 1 1176 9 discriminator 3 view .LVU5385
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16475              		.loc 1 1177 9 discriminator 3 view .LVU5386
 16476              		.loc 1 1178 9 discriminator 3 view .LVU5387
 16477              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16478              		.loc 1 1178 48 is_stmt 0 discriminator 3 view .LVU5388
 16479 5993 C44175EB 		vpor	ymm9, ymm1, ymm8	# D__lsm1.670, dest1, dest2
 16479      C8
 16480              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16481              		.loc 1 1176 29 discriminator 3 view .LVU5389
 16482 5998 C4630D46 		vperm2i128	ymm10, ymm14, ymm5, 33	# tmp191, D__lsm2.671, D__lsm0.669,
 16482      D521
 16483 599e 4881C620 		add	rsi, 288	# ivtmp.696,
 16483      010000
 16484              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16485              		.loc 1 1178 40 discriminator 3 view .LVU5390
 16486 59a5 C57D7FB6 		vmovdqa	YMMWORD PTR -224[rsi], ymm14	# MEM[base: _134, offset: 64B], D__lsm2.671
 16486      20FFFFFF 
 16487              	.LBE877:
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16488              		.loc 1 1173 54 is_stmt 1 discriminator 3 view .LVU5391
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16489              		.loc 1 1173 37 discriminator 3 view .LVU5392
 16490              	.LBB878:
1174:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 16491              		.loc 1 1174 9 discriminator 3 view .LVU5393
1175:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16492              		.loc 1 1175 9 discriminator 3 view .LVU5394
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16493              		.loc 1 1176 9 discriminator 3 view .LVU5395
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16494              		.loc 1 1177 9 discriminator 3 view .LVU5396
 16495              		.loc 1 1178 9 discriminator 3 view .LVU5397
 16496              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16497              		.loc 1 1177 21 is_stmt 0 discriminator 3 view .LVU5398
 16498 59ad C4C11D73 		vpsllq	ymm12, ymm10, 10	# dest2, tmp191,
 16498      F20A
 16499              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16500              		.loc 1 1176 29 discriminator 3 view .LVU5399
 16501 59b3 C4432D0F 		vpalignr	ymm11, ymm10, ymm14, 8	# tmp192, tmp191, D__lsm2.671,
 16501      DE08
 16502 59b9 C4435546 		vperm2i128	ymm14, ymm5, ymm9, 33	# tmp198, D__lsm0.669, D__lsm1.670,
 16502      F121
 16503              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16504              		.loc 1 1176 21 discriminator 3 view .LVU5400
GAS LISTING /tmp/ccfflXEb.s 			page 434


 16505 59bf C4C17D73 		vpsrlq	ymm0, ymm11, 54	# dest1, tmp192,
 16505      D336
 16506              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16507              		.loc 1 1176 29 discriminator 3 view .LVU5401
 16508 59c5 C4630D0F 		vpalignr	ymm15, ymm14, ymm5, 8	# tmp199, tmp198, D__lsm0.669,
 16508      FD08
 16509              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16510              		.loc 1 1178 48 discriminator 3 view .LVU5402
 16511 59cb C4417DEB 		vpor	ymm13, ymm0, ymm12	# D__lsm2.671, dest1, dest2
 16511      EC
 16512              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16513              		.loc 1 1176 21 discriminator 3 view .LVU5403
 16514 59d0 C4C16D73 		vpsrlq	ymm2, ymm15, 54	# dest1, tmp199,
 16514      D736
 16515              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16516              		.loc 1 1178 40 discriminator 3 view .LVU5404
 16517 59d6 C5FD7FAE 		vmovdqa	YMMWORD PTR -192[rsi], ymm5	# MEM[base: _134, offset: 0B], D__lsm0.669
 16517      40FFFFFF 
 16518              	.LBE878:
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16519              		.loc 1 1173 54 is_stmt 1 discriminator 3 view .LVU5405
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16520              		.loc 1 1173 37 discriminator 3 view .LVU5406
 16521              	.LBB879:
1174:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 16522              		.loc 1 1174 9 discriminator 3 view .LVU5407
1175:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16523              		.loc 1 1175 9 discriminator 3 view .LVU5408
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16524              		.loc 1 1176 9 discriminator 3 view .LVU5409
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16525              		.loc 1 1177 9 discriminator 3 view .LVU5410
 16526              		.loc 1 1178 9 discriminator 3 view .LVU5411
 16527              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16528              		.loc 1 1177 21 is_stmt 0 discriminator 3 view .LVU5412
 16529 59de C4C16573 		vpsllq	ymm3, ymm14, 10	# dest2, tmp198,
 16529      F60A
 16530              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16531              		.loc 1 1176 29 discriminator 3 view .LVU5413
 16532 59e4 C4C33546 		vperm2i128	ymm5, ymm9, ymm13, 33	# tmp202, D__lsm1.670, D__lsm2.671,
 16532      ED21
 16533              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16534              		.loc 1 1178 48 discriminator 3 view .LVU5414
 16535 59ea C5EDEBE3 		vpor	ymm4, ymm2, ymm3	# D__lsm0.669, dest1, dest2
 16536              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16537              		.loc 1 1178 40 discriminator 3 view .LVU5415
 16538 59ee C57D7F8E 		vmovdqa	YMMWORD PTR -160[rsi], ymm9	# MEM[base: _134, offset: 32B], D__lsm1.670
 16538      60FFFFFF 
 16539              	.LBE879:
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16540              		.loc 1 1173 54 is_stmt 1 discriminator 3 view .LVU5416
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16541              		.loc 1 1173 37 discriminator 3 view .LVU5417
GAS LISTING /tmp/ccfflXEb.s 			page 435


 16542              	.LBB880:
1174:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 16543              		.loc 1 1174 9 discriminator 3 view .LVU5418
1175:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16544              		.loc 1 1175 9 discriminator 3 view .LVU5419
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16545              		.loc 1 1176 9 discriminator 3 view .LVU5420
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16546              		.loc 1 1177 9 discriminator 3 view .LVU5421
 16547              		.loc 1 1178 9 discriminator 3 view .LVU5422
 16548              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16549              		.loc 1 1177 21 is_stmt 0 discriminator 3 view .LVU5423
 16550 59f6 C5F573F5 		vpsllq	ymm1, ymm5, 10	# dest2, tmp202,
 16550      0A
 16551              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16552              		.loc 1 1176 29 discriminator 3 view .LVU5424
 16553 59fb C4C3550F 		vpalignr	ymm6, ymm5, ymm9, 8	# tmp203, tmp202, D__lsm1.670,
 16553      F108
 16554 5a01 C4631546 		vperm2i128	ymm9, ymm13, ymm4, 33	# tmp206, D__lsm2.671, D__lsm0.669,
 16554      CC21
 16555              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16556              		.loc 1 1176 21 discriminator 3 view .LVU5425
 16557 5a07 C5C573D6 		vpsrlq	ymm7, ymm6, 54	# dest1, tmp203,
 16557      36
 16558              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16559              		.loc 1 1176 29 discriminator 3 view .LVU5426
 16560 5a0c C443350F 		vpalignr	ymm10, ymm9, ymm13, 8	# tmp207, tmp206, D__lsm2.671,
 16560      D508
 16561              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16562              		.loc 1 1177 21 discriminator 3 view .LVU5427
 16563 5a12 C4C17D73 		vpsllq	ymm0, ymm9, 10	# dest2, tmp206,
 16563      F10A
 16564              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16565              		.loc 1 1176 21 discriminator 3 view .LVU5428
 16566 5a18 C4C12573 		vpsrlq	ymm11, ymm10, 54	# dest1, tmp207,
 16566      D236
 16567              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16568              		.loc 1 1178 40 discriminator 3 view .LVU5429
 16569 5a1e C57D7F6E 		vmovdqa	YMMWORD PTR -128[rsi], ymm13	# MEM[base: _134, offset: 64B], D__lsm2.671
 16569      80
 16570              	.LBE880:
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16571              		.loc 1 1173 54 is_stmt 1 discriminator 3 view .LVU5430
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16572              		.loc 1 1173 37 discriminator 3 view .LVU5431
 16573              	.LBB881:
1174:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 16574              		.loc 1 1174 9 discriminator 3 view .LVU5432
1175:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16575              		.loc 1 1175 9 discriminator 3 view .LVU5433
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
GAS LISTING /tmp/ccfflXEb.s 			page 436


 16576              		.loc 1 1176 9 discriminator 3 view .LVU5434
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16577              		.loc 1 1177 9 discriminator 3 view .LVU5435
 16578              		.loc 1 1178 9 discriminator 3 view .LVU5436
 16579              	.LVL993:
 16580              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16581              		.loc 1 1178 48 is_stmt 0 discriminator 3 view .LVU5437
 16582 5a23 C545EBC1 		vpor	ymm8, ymm7, ymm1	# D__lsm1.670, dest1, dest2
 16583              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16584              		.loc 1 1178 40 discriminator 3 view .LVU5438
 16585 5a27 C5FD7F66 		vmovdqa	YMMWORD PTR -96[rsi], ymm4	# MEM[base: _134, offset: 0B], D__lsm0.669
 16585      A0
 16586              	.LBE881:
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16587              		.loc 1 1173 54 is_stmt 1 discriminator 3 view .LVU5439
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16588              		.loc 1 1173 37 discriminator 3 view .LVU5440
 16589              	.LBB882:
1174:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 16590              		.loc 1 1174 9 discriminator 3 view .LVU5441
 16591              	.LVL994:
1175:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16592              		.loc 1 1175 9 discriminator 3 view .LVU5442
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16593              		.loc 1 1176 9 discriminator 3 view .LVU5443
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16594              		.loc 1 1177 9 discriminator 3 view .LVU5444
 16595              		.loc 1 1178 9 discriminator 3 view .LVU5445
 16596              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16597              		.loc 1 1178 48 is_stmt 0 discriminator 3 view .LVU5446
 16598 5a2c C525EBE0 		vpor	ymm12, ymm11, ymm0	# D__lsm2.671, dest1, dest2
 16599              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16600              		.loc 1 1178 40 discriminator 3 view .LVU5447
 16601 5a30 C57D7F41 		vmovdqa	YMMWORD PTR 32[rcx], ymm8	# MEM[base: _134, offset: 32B], D__lsm1.670
 16601      20
 16602              	.LBE882:
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16603              		.loc 1 1173 54 is_stmt 1 discriminator 3 view .LVU5448
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16604              		.loc 1 1173 37 discriminator 3 view .LVU5449
 16605              	.LBB883:
1174:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 16606              		.loc 1 1174 9 discriminator 3 view .LVU5450
 16607              	.LVL995:
1175:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16608              		.loc 1 1175 9 discriminator 3 view .LVU5451
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16609              		.loc 1 1176 9 discriminator 3 view .LVU5452
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16610              		.loc 1 1177 9 discriminator 3 view .LVU5453
 16611              		.loc 1 1178 9 discriminator 3 view .LVU5454
 16612              		.loc 1 1178 9 is_stmt 0 discriminator 3 view .LVU5455
 16613 5a35 483D8F01 		cmp	rax, 399	# copy_vector,
 16613      0000
 16614              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16615              		.loc 1 1178 40 discriminator 3 view .LVU5456
 16616 5a3b C57D7F61 		vmovdqa	YMMWORD PTR 64[rcx], ymm12	# MEM[base: _134, offset: 64B], D__lsm2.671
GAS LISTING /tmp/ccfflXEb.s 			page 437


 16616      40
 16617              	.LBE883:
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16618              		.loc 1 1173 54 is_stmt 1 discriminator 3 view .LVU5457
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16619              		.loc 1 1173 37 discriminator 3 view .LVU5458
 16620 5a40 0F85B7FE 		jne	.L1407	#,
 16620      FFFF
 16621 5a46 4C8D8780 		lea	r8, 12672[rdi]	# ivtmp.681,
 16621      310000
 16622 5a4d 488DBFA0 		lea	rdi, 12704[rdi]	# _24,
 16622      310000
 16623              	.LVL996:
 16624 5a54 66662E0F 		.p2align 4
 16624      1F840000 
 16624      00000090 
 16625              		.p2align 3
 16626              	.L1408:
 16627              	.LBB884:
1174:sieve_extend.c ****         bitvector_t source1 = bitstorage_vector[source_vector+1];
 16628              		.loc 1 1174 9 view .LVU5459
1175:sieve_extend.c ****         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> shift_flipped;
 16629              		.loc 1 1175 9 view .LVU5460
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16630              		.loc 1 1176 9 view .LVU5461
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16631              		.loc 1 1177 9 view .LVU5462
 16632              		.loc 1 1178 9 view .LVU5463
 16633              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16634              		.loc 1 1177 29 is_stmt 0 view .LVU5464
 16635 5a60 C4417D6F 		vmovdqa	ymm13, YMMWORD PTR [r8]	# tmp247, MEM[base: _102, offset: 0B]
 16635      28
 16636 5a65 4983C020 		add	r8, 32	# ivtmp.681,
 16637              	.LVL997:
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16638              		.loc 1 1177 29 view .LVU5465
 16639 5a69 C4431546 		vperm2i128	ymm14, ymm13, YMMWORD PTR [r8], 33	# tmp158, tmp247, MEM[base: _102, offset: 32B],
 16639      3021
 16640              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16641              		.loc 1 1176 29 view .LVU5466
 16642 5a6f C4C30D0F 		vpalignr	ymm2, ymm14, YMMWORD PTR -32[r8], 8	# tmp162, tmp158, MEM[base: _102, offset: 0B],
 16642      50E008
 16643              	# sieve_extend.c:1177:         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << s
1177:sieve_extend.c ****         bitstorage_vector[copy_vector] = dest1 | dest2;
 16644              		.loc 1 1177 21 view .LVU5467
 16645 5a76 C4C10573 		vpsllq	ymm15, ymm14, 10	# dest2, tmp158,
 16645      F60A
 16646              	# sieve_extend.c:1176:         bitvector_t dest1 = __builtin_shuffle(source0,source1,shuffle1) >> s
1176:sieve_extend.c ****         bitvector_t dest2 = __builtin_shuffle(source0,source1,shuffle2) << shift;
 16647              		.loc 1 1176 21 view .LVU5468
 16648 5a7c C5E573D2 		vpsrlq	ymm3, ymm2, 54	# dest1, tmp162,
 16648      36
 16649              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16650              		.loc 1 1178 48 view .LVU5469
 16651 5a81 C585EBE3 		vpor	ymm4, ymm15, ymm3	# tmp164, dest2, dest1
GAS LISTING /tmp/ccfflXEb.s 			page 438


 16652              	# sieve_extend.c:1178:         bitstorage_vector[copy_vector] = dest1 | dest2;
 16653              		.loc 1 1178 40 view .LVU5470
 16654 5a85 C4C17D7F 		vmovdqa	YMMWORD PTR 64[r8], ymm4	# MEM[base: _84, offset: 12768B], tmp164
 16654      6040
 16655              	.LBE884:
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16656              		.loc 1 1173 54 is_stmt 1 view .LVU5471
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16657              		.loc 1 1173 37 view .LVU5472
 16658              	# sieve_extend.c:1173:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1173:sieve_extend.c ****         bitvector_t source0 = bitstorage_vector[source_vector];
 16659              		.loc 1 1173 5 is_stmt 0 view .LVU5473
 16660 5a8b 4C39C7   		cmp	rdi, r8	# _24, ivtmp.681
 16661 5a8e 75D0     		jne	.L1408	#,
 16662 5a90 C5F877   		vzeroupper
 16663              	.LBE873:
 16664              	# sieve_extend.c:1180: }
1179:sieve_extend.c ****     }
1180:sieve_extend.c **** }
 16665              		.loc 1 1180 1 view .LVU5474
 16666 5a93 C3       		ret	
 16667              		.cfi_endproc
 16668              	.LFE93:
 16670 5a94 66662E0F 		.p2align 4
 16670      1F840000 
 16670      00000090 
 16671              		.globl	testshuffle_vector2
 16673              	testshuffle_vector2:
 16674              	.LFB106:
 16675              		.cfi_startproc
 16676 5aa0 F30F1EFA 		endbr64	
 16677 5aa4 E967FDFF 		jmp	testshuffle_vector	#
 16677      FF
 16678              		.cfi_endproc
 16679              	.LFE106:
 16681 5aa9 0F1F8000 		.p2align 4
 16681      000000
 16682              		.globl	testshuffle_word
 16684              	testshuffle_word:
 16685              	.LVL998:
 16686              	.LFB95:
1181:sieve_extend.c **** 
1182:sieve_extend.c **** void testshuffle_vector2(bitword_t* __restrict bitstorage, counter_t max) {
1183:sieve_extend.c ****     
1184:sieve_extend.c ****     bitword_t* bitstorage_word     = (bitword_t*)bitstorage;
1185:sieve_extend.c ****     bitvector_t* bitstorage_vector = (bitvector_t*)bitstorage;
1186:sieve_extend.c **** 
1187:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i < max; i+=20) {
1188:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
1189:sieve_extend.c ****     }
1190:sieve_extend.c **** 
1191:sieve_extend.c ****     counter_t source_start = 66+64;
1192:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
1193:sieve_extend.c ****     bitstorage_word[wordindex(source_start)]  |= markmask_calc(source_start);
1194:sieve_extend.c ****     bitstorage_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
1195:sieve_extend.c **** 
1196:sieve_extend.c **** 
GAS LISTING /tmp/ccfflXEb.s 			page 439


1197:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
1198:sieve_extend.c ****     counter_t delta_word   = 4-((wordindex(destination_start) - wordindex(source_start)) % 4);
1199:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
1200:sieve_extend.c ****     
1201:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
1202:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
1203:sieve_extend.c **** 
1204:sieve_extend.c **** //    if (delta_bit) ....
1205:sieve_extend.c **** 
1206:sieve_extend.c ****     register const bitvector_t shuffle1 = { delta_word-1, delta_word, delta_word+1, delta_word+2 };
1207:sieve_extend.c ****     register const bitvector_t shuffle2 = { delta_word, delta_word+1, delta_word+2, delta_word+3 };
1208:sieve_extend.c ****     register const bitvector_t shift = { shift_bit, shift_bit, shift_bit, shift_bit };
1209:sieve_extend.c ****     register const bitvector_t shift_flipped = { shift_bit_flipped, shift_bit_flipped, shift_bit_fl
1210:sieve_extend.c **** 
1211:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++ ) {
1212:sieve_extend.c ****         register bitvector_t source0 = bitstorage_vector[source_vector];
1213:sieve_extend.c ****         register bitvector_t source1 = bitstorage_vector[source_vector+1];
1214:sieve_extend.c ****         bitstorage_vector[copy_vector] = (__builtin_shuffle(source0,source1,shuffle1) >> shift_flip
1215:sieve_extend.c ****     }
1216:sieve_extend.c **** }
1217:sieve_extend.c **** 
1218:sieve_extend.c **** void testshuffle_word(bitword_t* __restrict bitstorage, counter_t max) {
 16687              		.loc 1 1218 72 is_stmt 1 view -0
 16688              		.cfi_startproc
 16689              		.loc 1 1218 72 is_stmt 0 view .LVU5476
 16690 5ab0 F30F1EFA 		endbr64	
1219:sieve_extend.c ****     
1220:sieve_extend.c ****     bitword_t* bitstorage_word     = (bitword_t*)bitstorage;
 16691              		.loc 1 1220 5 is_stmt 1 view .LVU5477
 16692              	.LVL999:
1221:sieve_extend.c **** 
1222:sieve_extend.c ****     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 16693              		.loc 1 1222 5 view .LVU5478
 16694              	.LBB885:
 16695              		.loc 1 1222 10 view .LVU5479
 16696              		.loc 1 1222 25 view .LVU5480
 16697              	.LBE885:
 16698              	# sieve_extend.c:1218: void testshuffle_word(bitword_t* __restrict bitstorage, counter_t max) {
1218:sieve_extend.c ****     
 16699              		.loc 1 1218 72 is_stmt 0 view .LVU5481
 16700 5ab4 4157     		push	r15	#
 16701              		.cfi_def_cfa_offset 16
 16702              		.cfi_offset 15, -16
 16703              	.LBB886:
 16704              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 16705              		.loc 1 1222 5 view .LVU5482
 16706 5ab6 4883FE01 		cmp	rsi, 1	# max,
 16707              	.LBE886:
 16708              	# sieve_extend.c:1218: void testshuffle_word(bitword_t* __restrict bitstorage, counter_t max) {
1218:sieve_extend.c ****     
 16709              		.loc 1 1218 72 view .LVU5483
 16710 5aba 4156     		push	r14	#
 16711              		.cfi_def_cfa_offset 24
 16712              		.cfi_offset 14, -24
 16713 5abc 4155     		push	r13	#
 16714              		.cfi_def_cfa_offset 32
 16715              		.cfi_offset 13, -32
GAS LISTING /tmp/ccfflXEb.s 			page 440


 16716 5abe 4154     		push	r12	#
 16717              		.cfi_def_cfa_offset 40
 16718              		.cfi_offset 12, -40
 16719 5ac0 55       		push	rbp	#
 16720              		.cfi_def_cfa_offset 48
 16721              		.cfi_offset 6, -48
 16722 5ac1 53       		push	rbx	#
 16723              		.cfi_def_cfa_offset 56
 16724              		.cfi_offset 3, -56
 16725              	.LBB887:
 16726              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
 16727              		.loc 1 1222 5 view .LVU5484
 16728 5ac2 0F86C300 		jbe	.L1436	#,
 16728      0000
 16729              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
1223:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16730              		.loc 1 1223 39 view .LVU5485
 16731 5ac8 48830F02 		or	QWORD PTR [rdi], 2	# *_3,
 16732              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16733              		.loc 1 1222 5 view .LVU5486
 16734 5acc 4883FE15 		cmp	rsi, 21	# max,
 16735              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16736              		.loc 1 1223 42 view .LVU5487
 16737 5ad0 B9010000 		mov	ecx, 1	# tmp185,
 16737      00
 16738              		.loc 1 1223 9 is_stmt 1 view .LVU5488
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16739              		.loc 1 1222 42 view .LVU5489
 16740              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16741              		.loc 1 1222 43 is_stmt 0 view .LVU5490
 16742 5ad5 B8150000 		mov	eax, 21	# i,
 16742      00
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16743              		.loc 1 1222 25 is_stmt 1 view .LVU5491
 16744              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16745              		.loc 1 1222 5 is_stmt 0 view .LVU5492
 16746 5ada 0F86AB00 		jbe	.L1436	#,
 16746      0000
 16747              	.L1437:
 16748              		.loc 1 1223 9 is_stmt 1 discriminator 3 view .LVU5493
 16749              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16750              		.loc 1 1223 39 is_stmt 0 discriminator 3 view .LVU5494
 16751 5ae0 4889C2   		mov	rdx, rax	# tmp248, i
 16752              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16753              		.loc 1 1222 43 discriminator 3 view .LVU5495
 16754 5ae3 488D5814 		lea	rbx, 20[rax]	# tmp246,
 16755              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16756              		.loc 1 1223 39 discriminator 3 view .LVU5496
 16757 5ae7 48C1EA06 		shr	rdx, 6	# tmp248,
 16758              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16759              		.loc 1 1223 42 discriminator 3 view .LVU5497
 16760 5aeb C462F9F7 		shlx	r8, rcx, rax	# tmp251, tmp185, i
 16760      C1
GAS LISTING /tmp/ccfflXEb.s 			page 441


 16761              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16762              		.loc 1 1223 39 discriminator 3 view .LVU5498
 16763 5af0 4C0904D7 		or	QWORD PTR [rdi+rdx*8], r8	# *_3, tmp251
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16764              		.loc 1 1222 42 is_stmt 1 discriminator 3 view .LVU5499
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16765              		.loc 1 1222 25 discriminator 3 view .LVU5500
 16766              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16767              		.loc 1 1222 5 is_stmt 0 discriminator 3 view .LVU5501
 16768 5af4 4881FBFF 		cmp	rbx, 511	# tmp246,
 16768      010000
 16769 5afb 0F878A00 		ja	.L1436	#,
 16769      0000
 16770 5b01 4839DE   		cmp	rsi, rbx	# max, tmp246
 16771 5b04 0F868100 		jbe	.L1436	#,
 16771      0000
 16772              		.loc 1 1223 9 is_stmt 1 view .LVU5502
 16773              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16774              		.loc 1 1223 39 is_stmt 0 view .LVU5503
 16775 5b0a 4889DD   		mov	rbp, rbx	# tmp255, tmp246
 16776              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16777              		.loc 1 1222 43 view .LVU5504
 16778 5b0d 4C8D5028 		lea	r10, 40[rax]	# i,
 16779              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16780              		.loc 1 1223 39 view .LVU5505
 16781 5b11 48C1ED06 		shr	rbp, 6	# tmp255,
 16782              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16783              		.loc 1 1223 42 view .LVU5506
 16784 5b15 C462E1F7 		shlx	r9, rcx, rbx	# tmp258, tmp185, tmp246
 16784      C9
 16785              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16786              		.loc 1 1223 39 view .LVU5507
 16787 5b1a 4C090CEF 		or	QWORD PTR [rdi+rbp*8], r9	# *_3, tmp258
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16788              		.loc 1 1222 42 is_stmt 1 view .LVU5508
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16789              		.loc 1 1222 25 view .LVU5509
 16790              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16791              		.loc 1 1222 5 is_stmt 0 view .LVU5510
 16792 5b1e 4C39D6   		cmp	rsi, r10	# max, i
 16793 5b21 7668     		jbe	.L1436	#,
 16794              		.loc 1 1223 9 is_stmt 1 view .LVU5511
 16795              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16796              		.loc 1 1223 39 is_stmt 0 view .LVU5512
 16797 5b23 4D89D3   		mov	r11, r10	# tmp262, i
 16798              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16799              		.loc 1 1222 43 view .LVU5513
 16800 5b26 4C8D683C 		lea	r13, 60[rax]	# i,
 16801              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16802              		.loc 1 1223 39 view .LVU5514
 16803 5b2a 49C1EB06 		shr	r11, 6	# tmp262,
 16804              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16805              		.loc 1 1223 42 view .LVU5515
GAS LISTING /tmp/ccfflXEb.s 			page 442


 16806 5b2e C462A9F7 		shlx	r12, rcx, r10	# tmp265, tmp185, i
 16806      E1
 16807              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16808              		.loc 1 1223 39 view .LVU5516
 16809 5b33 4E0924DF 		or	QWORD PTR [rdi+r11*8], r12	# *_3, tmp265
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16810              		.loc 1 1222 42 is_stmt 1 view .LVU5517
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16811              		.loc 1 1222 25 view .LVU5518
 16812              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16813              		.loc 1 1222 5 is_stmt 0 view .LVU5519
 16814 5b37 4C39EE   		cmp	rsi, r13	# max, i
 16815 5b3a 764F     		jbe	.L1436	#,
 16816              		.loc 1 1223 9 is_stmt 1 view .LVU5520
 16817              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16818              		.loc 1 1223 39 is_stmt 0 view .LVU5521
 16819 5b3c 4D89EE   		mov	r14, r13	# tmp269, i
 16820              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16821              		.loc 1 1222 43 view .LVU5522
 16822 5b3f 488D5050 		lea	rdx, 80[rax]	# i,
 16823              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16824              		.loc 1 1223 39 view .LVU5523
 16825 5b43 49C1EE06 		shr	r14, 6	# tmp269,
 16826              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16827              		.loc 1 1223 42 view .LVU5524
 16828 5b47 C46291F7 		shlx	r15, rcx, r13	# tmp272, tmp185, i
 16828      F9
 16829              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16830              		.loc 1 1223 39 view .LVU5525
 16831 5b4c 4E093CF7 		or	QWORD PTR [rdi+r14*8], r15	# *_3, tmp272
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16832              		.loc 1 1222 42 is_stmt 1 view .LVU5526
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16833              		.loc 1 1222 25 view .LVU5527
 16834              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16835              		.loc 1 1222 5 is_stmt 0 view .LVU5528
 16836 5b50 4839D6   		cmp	rsi, rdx	# max, i
 16837 5b53 7636     		jbe	.L1436	#,
 16838              		.loc 1 1223 9 is_stmt 1 view .LVU5529
 16839              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16840              		.loc 1 1223 39 is_stmt 0 view .LVU5530
 16841 5b55 4989D0   		mov	r8, rdx	# tmp276, i
 16842              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16843              		.loc 1 1222 43 view .LVU5531
 16844 5b58 488D6864 		lea	rbp, 100[rax]	# i,
 16845              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16846              		.loc 1 1223 39 view .LVU5532
 16847 5b5c 49C1E806 		shr	r8, 6	# tmp276,
 16848              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16849              		.loc 1 1223 42 view .LVU5533
 16850 5b60 C4E2E9F7 		shlx	rbx, rcx, rdx	# tmp279, tmp185, i
 16850      D9
 16851              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
GAS LISTING /tmp/ccfflXEb.s 			page 443


 16852              		.loc 1 1223 39 view .LVU5534
 16853 5b65 4A091CC7 		or	QWORD PTR [rdi+r8*8], rbx	# *_3, tmp279
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16854              		.loc 1 1222 42 is_stmt 1 view .LVU5535
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16855              		.loc 1 1222 25 view .LVU5536
 16856              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16857              		.loc 1 1222 5 is_stmt 0 view .LVU5537
 16858 5b69 4839EE   		cmp	rsi, rbp	# max, i
 16859 5b6c 761D     		jbe	.L1436	#,
 16860              		.loc 1 1223 9 is_stmt 1 view .LVU5538
 16861              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16862              		.loc 1 1223 39 is_stmt 0 view .LVU5539
 16863 5b6e 4989E9   		mov	r9, rbp	# tmp283, i
 16864              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16865              		.loc 1 1222 43 view .LVU5540
 16866 5b71 4883C078 		add	rax, 120	# i,
 16867              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16868              		.loc 1 1223 39 view .LVU5541
 16869 5b75 49C1E906 		shr	r9, 6	# tmp283,
 16870              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16871              		.loc 1 1223 42 view .LVU5542
 16872 5b79 C462D1F7 		shlx	r10, rcx, rbp	# tmp286, tmp185, i
 16872      D1
 16873              	# sieve_extend.c:1223:         bitstorage_word[wordindex(i)] |= markmask(i);
 16874              		.loc 1 1223 39 view .LVU5543
 16875 5b7e 4E0914CF 		or	QWORD PTR [rdi+r9*8], r10	# *_3, tmp286
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16876              		.loc 1 1222 42 is_stmt 1 view .LVU5544
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16877              		.loc 1 1222 25 view .LVU5545
 16878              	# sieve_extend.c:1222:     for (counter_t i=1; i<8*64 && i<max; i+=20) {
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16879              		.loc 1 1222 5 is_stmt 0 view .LVU5546
 16880 5b82 4839C6   		cmp	rsi, rax	# max, i
 16881 5b85 0F8755FF 		ja	.L1437	#,
 16881      FFFF
 16882              	.LVL1000:
 16883              	.L1436:
1222:sieve_extend.c ****         bitstorage_word[wordindex(i)] |= markmask(i);
 16884              		.loc 1 1222 5 view .LVU5547
 16885              	.LBE887:
1224:sieve_extend.c ****     }
1225:sieve_extend.c **** 
1226:sieve_extend.c ****     counter_t source_start = 66+64;
 16886              		.loc 1 1226 5 is_stmt 1 view .LVU5548
1227:sieve_extend.c ****     counter_t destination_start = 3*4*64 + 12;
 16887              		.loc 1 1227 5 view .LVU5549
1228:sieve_extend.c ****     bitstorage_word[wordindex(source_start)]  |= markmask_calc(source_start);
 16888              		.loc 1 1228 5 view .LVU5550
1229:sieve_extend.c ****     bitstorage_word[wordindex(source_start+1)]  |= markmask_calc(source_start+1);
 16889              		.loc 1 1229 5 view .LVU5551
 16890 5b8b 488B4738 		mov	rax, QWORD PTR 56[rdi]	# D__lsm1.724, MEM[(uint64_t *)bitstorage_57(D) + 56B]
 16891              	# sieve_extend.c:1229:     bitstorage_word[wordindex(source_start+1)]  |= markmask_calc(source_star
 16892              		.loc 1 1229 49 is_stmt 0 view .LVU5552
GAS LISTING /tmp/ccfflXEb.s 			page 444


 16893 5b8f 48834F10 		or	QWORD PTR 16[rdi], 12	# MEM[(uint64_t *)bitstorage_57(D) + 16B],
 16893      0C
1230:sieve_extend.c **** 
1231:sieve_extend.c ****     counter_t source_vector = vectorindex(source_start);
 16894              		.loc 1 1231 5 is_stmt 1 view .LVU5553
 16895              	.LVL1001:
1232:sieve_extend.c ****     int32_t delta_bit    = bitindex_calc(destination_start) - bitindex_calc(source_start); // could
 16896              		.loc 1 1232 5 view .LVU5554
1233:sieve_extend.c ****     
1234:sieve_extend.c ****     bitshift_t shift_bit = delta_bit; 
 16897              		.loc 1 1234 5 view .LVU5555
1235:sieve_extend.c ****     bitshift_t shift_bit_flipped = WORD_SIZE_bitshift - shift_bit; 
 16898              		.loc 1 1235 5 view .LVU5556
1236:sieve_extend.c **** 
1237:sieve_extend.c ****     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_vector++) {
 16899              		.loc 1 1237 5 view .LVU5557
 16900              	.LBB888:
 16901              		.loc 1 1237 10 view .LVU5558
 16902              		.loc 1 1237 37 view .LVU5559
 16903 5b94 488B4F18 		mov	rcx, QWORD PTR 24[rdi]	# D__lsm0.723, MEM[(uint64_t *)bitstorage_57(D) + 24B]
 16904 5b98 4C8B7758 		mov	r14, QWORD PTR 88[rdi]	# D__lsm2.725, MEM[(uint64_t *)bitstorage_57(D) + 88B]
 16905 5b9c 4C8B6F10 		mov	r13, QWORD PTR 16[rdi]	# D__lsm0.711, MEM[(uint64_t *)bitstorage_57(D) + 16B]
 16906 5ba0 4C8B6730 		mov	r12, QWORD PTR 48[rdi]	# D__lsm1.712, MEM[(uint64_t *)bitstorage_57(D) + 48B]
 16907 5ba4 488B7750 		mov	rsi, QWORD PTR 80[rdi]	# D__lsm2.713, MEM[(uint64_t *)bitstorage_57(D) + 80B]
 16908              	.LVL1002:
 16909              		.loc 1 1237 37 is_stmt 0 view .LVU5560
 16910 5ba8 488B6F08 		mov	rbp, QWORD PTR 8[rdi]	# D__lsm0.715, MEM[(uint64_t *)bitstorage_57(D) + 8B]
 16911 5bac 488B5F28 		mov	rbx, QWORD PTR 40[rdi]	# D__lsm1.716, MEM[(uint64_t *)bitstorage_57(D) + 40B]
 16912 5bb0 488B5748 		mov	rdx, QWORD PTR 72[rdi]	# D__lsm2.717, MEM[(uint64_t *)bitstorage_57(D) + 72B]
 16913 5bb4 4C8B1F   		mov	r11, QWORD PTR [rdi]	# D__lsm0.719, *bitstorage_57(D)
 16914 5bb7 4C8B5720 		mov	r10, QWORD PTR 32[rdi]	# D__lsm1.720, MEM[(uint64_t *)bitstorage_57(D) + 32B]
 16915 5bbb 4C8B4F40 		mov	r9, QWORD PTR 64[rdi]	# D__lsm2.721, MEM[(uint64_t *)bitstorage_57(D) + 64B]
 16916 5bbf 48894424 		mov	QWORD PTR -16[rsp], rax	# %sfp, D__lsm1.724
 16916      F0
 16917 5bc4 488D4718 		lea	rax, 24[rdi]	# ivtmp.749,
 16918 5bc8 48894C24 		mov	QWORD PTR -24[rsp], rcx	# %sfp, D__lsm0.723
 16918      E8
 16919              	# sieve_extend.c:1237:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
 16920              		.loc 1 1237 20 view .LVU5561
 16921 5bcd 48C74424 		mov	QWORD PTR -32[rsp], 3	# %sfp,
 16921      E0030000 
 16921      00
 16922 5bd6 4C897424 		mov	QWORD PTR -8[rsp], r14	# %sfp, D__lsm2.725
 16922      F8
 16923              	.LVL1003:
 16924              	.L1439:
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 16925              		.loc 1 1238 9 is_stmt 1 discriminator 3 view .LVU5562
 16926              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
 16927              		.loc 1 1238 80 is_stmt 0 discriminator 3 view .LVU5563
 16928 5bdb 41BF3600 		mov	r15d, 54	# tmp312,
 16928      0000
 16929 5be1 C4E283F7 		shrx	rcx, QWORD PTR -32[rax], r15	# tmp190, MEM[base: _352, offset: -32B], tmp312
 16929      48E0
 16930              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
GAS LISTING /tmp/ccfflXEb.s 			page 445


1241:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 16931              		.loc 1 1241 140 discriminator 3 view .LVU5564
 16932 5be7 4C8B7C24 		mov	r15, QWORD PTR -24[rsp]	# D__lsm0.723, %sfp
 16932      E8
 16933              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 16934              		.loc 1 1238 140 discriminator 3 view .LVU5565
 16935 5bec 4D89D8   		mov	r8, r11	# tmp192, D__lsm0.719
 16936 5bef 49C1E00A 		sal	r8, 10	# tmp192,
 16937              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 16938              		.loc 1 1239 140 discriminator 3 view .LVU5566
 16939 5bf3 4989EE   		mov	r14, rbp	# tmp194, D__lsm0.715
 16940              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 16941              		.loc 1 1240 80 discriminator 3 view .LVU5567
 16942 5bf6 48C1ED36 		shr	rbp, 54	# tmp195,
 16943              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 16944              		.loc 1 1238 102 discriminator 3 view .LVU5568
 16945 5bfa 4C09C1   		or	rcx, r8	# _24, tmp192
 16946              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 16947              		.loc 1 1241 140 discriminator 3 view .LVU5569
 16948 5bfd 49C1E70A 		sal	r15, 10	# D__lsm0.723,
 16949              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 16950              		.loc 1 1240 140 discriminator 3 view .LVU5570
 16951 5c01 4D89E8   		mov	r8, r13	# tmp196, D__lsm0.711
 16952              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 16953              		.loc 1 1241 80 discriminator 3 view .LVU5571
 16954 5c04 49C1ED36 		shr	r13, 54	# tmp197,
 16955              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 16956              		.loc 1 1240 140 discriminator 3 view .LVU5572
 16957 5c08 49C1E00A 		sal	r8, 10	# tmp196,
 16958              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 16959              		.loc 1 1241 102 discriminator 3 view .LVU5573
 16960 5c0c 4D09EF   		or	r15, r13	# _51, tmp197
 16961              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 16962              		.loc 1 1238 140 discriminator 3 view .LVU5574
 16963 5c0f 4D89D5   		mov	r13, r10	# tmp201, D__lsm1.720
 16964              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 16965              		.loc 1 1240 102 discriminator 3 view .LVU5575
 16966 5c12 4909E8   		or	r8, rbp	# _42, tmp195
 16967              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 16968              		.loc 1 1239 80 discriminator 3 view .LVU5576
 16969 5c15 49C1EA36 		shr	r10, 54	# D__lsm1.720,
 16970 5c19 49C1EB36 		shr	r11, 54	# tmp193,
 16971 5c1d 4C89D5   		mov	rbp, r10	# tmp202, D__lsm1.720
 16972              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 16973              		.loc 1 1238 140 discriminator 3 view .LVU5577
 16974 5c20 49C1E50A 		sal	r13, 10	# tmp201,
 16975              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
GAS LISTING /tmp/ccfflXEb.s 			page 446


1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 16976              		.loc 1 1239 140 discriminator 3 view .LVU5578
 16977 5c24 4989DA   		mov	r10, rbx	# tmp203, D__lsm1.716
 16978 5c27 49C1E20A 		sal	r10, 10	# tmp203,
 16979 5c2b 49C1E60A 		sal	r14, 10	# tmp194,
 16980              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 16981              		.loc 1 1239 102 discriminator 3 view .LVU5579
 16982 5c2f 4C09D5   		or	rbp, r10	# D__lsm0.715, tmp203
 16983              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 16984              		.loc 1 1241 140 discriminator 3 view .LVU5580
 16985 5c32 4C8B5424 		mov	r10, QWORD PTR -16[rsp]	# D__lsm1.724, %sfp
 16985      F0
 16986              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 16987              		.loc 1 1239 102 discriminator 3 view .LVU5581
 16988 5c37 4D09DE   		or	r14, r11	# _33, tmp193
 16989              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 16990              		.loc 1 1238 42 discriminator 3 view .LVU5582
 16991 5c3a 48894848 		mov	QWORD PTR 72[rax], rcx	# MEM[base: _352, offset: 72B], _24
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 16992              		.loc 1 1239 9 is_stmt 1 discriminator 3 view .LVU5583
 16993              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 16994              		.loc 1 1238 80 is_stmt 0 discriminator 3 view .LVU5584
 16995 5c3e 41BB3600 		mov	r11d, 54	# tmp317,
 16995      0000
 16996 5c44 C462A3F7 		shrx	r11, QWORD PTR [rax], r11	# tmp199, MEM[base: _352, offset: 0B], tmp317
 16996      18
 16997              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 16998              		.loc 1 1239 42 discriminator 3 view .LVU5585
 16999 5c49 4C897050 		mov	QWORD PTR 80[rax], r14	# MEM[base: _352, offset: 80B], _33
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17000              		.loc 1 1240 9 is_stmt 1 discriminator 3 view .LVU5586
 17001              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17002              		.loc 1 1241 140 is_stmt 0 discriminator 3 view .LVU5587
 17003 5c4d 49C1E20A 		sal	r10, 10	# D__lsm1.724,
 17004              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17005              		.loc 1 1238 102 discriminator 3 view .LVU5588
 17006 5c51 4D09EB   		or	r11, r13	# D__lsm0.719, tmp201
 17007              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17008              		.loc 1 1240 42 discriminator 3 view .LVU5589
 17009 5c54 4C894058 		mov	QWORD PTR 88[rax], r8	# MEM[base: _352, offset: 88B], _42
 17010              		.loc 1 1241 9 is_stmt 1 discriminator 3 view .LVU5590
 17011              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17012              		.loc 1 1240 80 is_stmt 0 discriminator 3 view .LVU5591
 17013 5c58 4989DD   		mov	r13, rbx	# D__lsm1.716, D__lsm1.716
 17014 5c5b 49C1ED36 		shr	r13, 54	# D__lsm1.716,
 17015              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17016              		.loc 1 1240 140 discriminator 3 view .LVU5592
 17017 5c5f 4C89E3   		mov	rbx, r12	# tmp205, D__lsm1.712
GAS LISTING /tmp/ccfflXEb.s 			page 447


 17018 5c62 48C1E30A 		sal	rbx, 10	# tmp205,
 17019              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17020              		.loc 1 1241 80 discriminator 3 view .LVU5593
 17021 5c66 49C1EC36 		shr	r12, 54	# tmp206,
 17022              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17023              		.loc 1 1240 102 discriminator 3 view .LVU5594
 17024 5c6a 4909DD   		or	r13, rbx	# D__lsm0.711, tmp205
 17025              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17026              		.loc 1 1238 140 discriminator 3 view .LVU5595
 17027 5c6d 4C89CB   		mov	rbx, r9	# tmp210, D__lsm2.721
 17028              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17029              		.loc 1 1241 102 discriminator 3 view .LVU5596
 17030 5c70 4D09D4   		or	r12, r10	# tmp206, tmp207
 17031              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17032              		.loc 1 1238 140 discriminator 3 view .LVU5597
 17033 5c73 48C1E30A 		sal	rbx, 10	# tmp210,
 17034              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17035              		.loc 1 1239 80 discriminator 3 view .LVU5598
 17036 5c77 49C1E936 		shr	r9, 54	# D__lsm2.721,
 17037              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17038              		.loc 1 1241 42 discriminator 3 view .LVU5599
 17039 5c7b 4C89A080 		mov	QWORD PTR 128[rax], r12	# MEM[base: _352, offset: 128B], D__lsm0.723
 17039      000000
 17040              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17041              		.loc 1 1241 102 discriminator 3 view .LVU5600
 17042 5c82 4C896424 		mov	QWORD PTR -24[rsp], r12	# %sfp, D__lsm0.723
 17042      E8
 17043              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17044              		.loc 1 1238 80 discriminator 3 view .LVU5601
 17045 5c87 41BC3600 		mov	r12d, 54	# tmp326,
 17045      0000
 17046 5c8d C4629BF7 		shrx	r10, QWORD PTR 32[rax], r12	# tmp208, MEM[base: _352, offset: 32B], tmp326
 17046      5020
 17047              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17048              		.loc 1 1238 102 discriminator 3 view .LVU5602
 17049 5c93 4909DA   		or	r10, rbx	# D__lsm1.720, tmp210
 17050              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17051              		.loc 1 1239 80 discriminator 3 view .LVU5603
 17052 5c96 4C89CB   		mov	rbx, r9	# tmp211, D__lsm2.721
 17053              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17054              		.loc 1 1239 140 discriminator 3 view .LVU5604
 17055 5c99 4989D1   		mov	r9, rdx	# tmp212, D__lsm2.717
 17056 5c9c 49C1E10A 		sal	r9, 10	# tmp212,
 17057              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17058              		.loc 1 1240 80 discriminator 3 view .LVU5605
 17059 5ca0 4989D4   		mov	r12, rdx	# D__lsm2.717, D__lsm2.717
 17060              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
GAS LISTING /tmp/ccfflXEb.s 			page 448


 17061              		.loc 1 1239 102 discriminator 3 view .LVU5606
 17062 5ca3 4C09CB   		or	rbx, r9	# D__lsm1.716, tmp212
 17063              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17064              		.loc 1 1240 140 discriminator 3 view .LVU5607
 17065 5ca6 4889F2   		mov	rdx, rsi	# tmp214, D__lsm2.713
 17066              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17067              		.loc 1 1241 140 discriminator 3 view .LVU5608
 17068 5ca9 4C8B4C24 		mov	r9, QWORD PTR -8[rsp]	# D__lsm2.725, %sfp
 17068      F8
 17069              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17070              		.loc 1 1240 80 discriminator 3 view .LVU5609
 17071 5cae 49C1EC36 		shr	r12, 54	# D__lsm2.717,
 17072              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17073              		.loc 1 1240 140 discriminator 3 view .LVU5610
 17074 5cb2 48C1E20A 		sal	rdx, 10	# tmp214,
 17075              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17076              		.loc 1 1241 140 discriminator 3 view .LVU5611
 17077 5cb6 49C1E10A 		sal	r9, 10	# D__lsm2.725,
 17078              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17079              		.loc 1 1240 102 discriminator 3 view .LVU5612
 17080 5cba 4909D4   		or	r12, rdx	# D__lsm1.712, tmp214
 17081              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17082              		.loc 1 1241 80 discriminator 3 view .LVU5613
 17083 5cbd 48C1EE36 		shr	rsi, 54	# tmp215,
 17084              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17085              		.loc 1 1238 140 discriminator 3 view .LVU5614
 17086 5cc1 4889CA   		mov	rdx, rcx	# tmp219, _24
 17087              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17088              		.loc 1 1241 42 discriminator 3 view .LVU5615
 17089 5cc4 4C897860 		mov	QWORD PTR 96[rax], r15	# MEM[base: _352, offset: 96B], _51
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17090              		.loc 1 1237 54 is_stmt 1 discriminator 3 view .LVU5616
 17091              	.LVL1004:
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17092              		.loc 1 1237 37 discriminator 3 view .LVU5617
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17093              		.loc 1 1238 9 discriminator 3 view .LVU5618
 17094              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17095              		.loc 1 1241 102 is_stmt 0 discriminator 3 view .LVU5619
 17096 5cc8 4C09CE   		or	rsi, r9	# tmp215, tmp216
 17097              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17098              		.loc 1 1238 140 discriminator 3 view .LVU5620
 17099 5ccb 48C1E20A 		sal	rdx, 10	# tmp219,
 17100              	# sieve_extend.c:1237:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17101              		.loc 1 1237 65 discriminator 3 view .LVU5621
 17102 5ccf 48834424 		add	QWORD PTR -32[rsp], 4	# %sfp,
 17102      E004
 17103              	.LVL1005:
 17104              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17105              		.loc 1 1241 42 discriminator 3 view .LVU5622
GAS LISTING /tmp/ccfflXEb.s 			page 449


 17106 5cd5 4889B0A0 		mov	QWORD PTR 160[rax], rsi	# MEM[base: _352, offset: 160B], D__lsm1.724
 17106      000000
 17107 5cdc 4883E880 		sub	rax, -128	# ivtmp.749,
 17108              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17109              		.loc 1 1241 102 discriminator 3 view .LVU5623
 17110 5ce0 48897424 		mov	QWORD PTR -16[rsp], rsi	# %sfp, D__lsm1.724
 17110      F0
 17111              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17112              		.loc 1 1238 80 discriminator 3 view .LVU5624
 17113 5ce5 BE360000 		mov	esi, 54	# tmp335,
 17113      00
 17114 5cea C462CBF7 		shrx	r9, QWORD PTR -64[rax], rsi	# tmp217, MEM[base: _352, offset: 64B], tmp335
 17114      48C0
 17115              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17116              		.loc 1 1238 102 discriminator 3 view .LVU5625
 17117 5cf0 4909D1   		or	r9, rdx	# D__lsm2.721, tmp219
 17118              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17119              		.loc 1 1239 140 discriminator 3 view .LVU5626
 17120 5cf3 4C89F2   		mov	rdx, r14	# tmp221, _33
 17121              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17122              		.loc 1 1240 140 discriminator 3 view .LVU5627
 17123 5cf6 4C89C6   		mov	rsi, r8	# tmp223, _42
 17124              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17125              		.loc 1 1239 80 discriminator 3 view .LVU5628
 17126 5cf9 48C1E936 		shr	rcx, 54	# tmp220,
 17127              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17128              		.loc 1 1239 140 discriminator 3 view .LVU5629
 17129 5cfd 48C1E20A 		sal	rdx, 10	# tmp221,
 17130              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17131              		.loc 1 1240 80 discriminator 3 view .LVU5630
 17132 5d01 49C1EE36 		shr	r14, 54	# tmp222,
 17133              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17134              		.loc 1 1239 102 discriminator 3 view .LVU5631
 17135 5d05 4809CA   		or	rdx, rcx	# D__lsm2.717, tmp220
 17136              	# sieve_extend.c:1237:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17137              		.loc 1 1237 65 discriminator 3 view .LVU5632
 17138 5d08 488B4C24 		mov	rcx, QWORD PTR -32[rsp]	# copy_vector, %sfp
 17138      E0
 17139              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17140              		.loc 1 1240 140 discriminator 3 view .LVU5633
 17141 5d0d 48C1E60A 		sal	rsi, 10	# tmp223,
 17142              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17143              		.loc 1 1241 140 discriminator 3 view .LVU5634
 17144 5d11 49C1E70A 		sal	r15, 10	# tmp225,
 17145              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17146              		.loc 1 1240 102 discriminator 3 view .LVU5635
GAS LISTING /tmp/ccfflXEb.s 			page 450


 17147 5d15 4C09F6   		or	rsi, r14	# D__lsm2.713, tmp222
 17148              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17149              		.loc 1 1241 80 discriminator 3 view .LVU5636
 17150 5d18 49C1E836 		shr	r8, 54	# tmp224,
 17151              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17152              		.loc 1 1238 42 discriminator 3 view .LVU5637
 17153 5d1c 4C8958E8 		mov	QWORD PTR -24[rax], r11	# MEM[base: _352, offset: 104B], D__lsm0.719
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17154              		.loc 1 1239 9 is_stmt 1 discriminator 3 view .LVU5638
 17155              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17156              		.loc 1 1241 102 is_stmt 0 discriminator 3 view .LVU5639
 17157 5d20 4D09F8   		or	r8, r15	# tmp224, tmp225
 17158              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17159              		.loc 1 1239 42 discriminator 3 view .LVU5640
 17160 5d23 488968F0 		mov	QWORD PTR -16[rax], rbp	# MEM[base: _352, offset: 112B], D__lsm0.715
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17161              		.loc 1 1240 9 is_stmt 1 discriminator 3 view .LVU5641
 17162              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17163              		.loc 1 1240 42 is_stmt 0 discriminator 3 view .LVU5642
 17164 5d27 4C8968F8 		mov	QWORD PTR -8[rax], r13	# MEM[base: _352, offset: 120B], D__lsm0.711
 17165              		.loc 1 1241 9 is_stmt 1 discriminator 3 view .LVU5643
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17166              		.loc 1 1237 54 discriminator 3 view .LVU5644
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17167              		.loc 1 1237 37 discriminator 3 view .LVU5645
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17168              		.loc 1 1238 9 discriminator 3 view .LVU5646
 17169              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17170              		.loc 1 1238 42 is_stmt 0 discriminator 3 view .LVU5647
 17171 5d2b 4C895008 		mov	QWORD PTR 8[rax], r10	# MEM[base: _352, offset: 136B], D__lsm1.720
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17172              		.loc 1 1239 9 is_stmt 1 discriminator 3 view .LVU5648
 17173              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17174              		.loc 1 1239 42 is_stmt 0 discriminator 3 view .LVU5649
 17175 5d2f 48895810 		mov	QWORD PTR 16[rax], rbx	# MEM[base: _352, offset: 144B], D__lsm1.716
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17176              		.loc 1 1240 9 is_stmt 1 discriminator 3 view .LVU5650
 17177              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17178              		.loc 1 1240 42 is_stmt 0 discriminator 3 view .LVU5651
 17179 5d33 4C896018 		mov	QWORD PTR 24[rax], r12	# MEM[base: _352, offset: 152B], D__lsm1.712
 17180              		.loc 1 1241 9 is_stmt 1 discriminator 3 view .LVU5652
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17181              		.loc 1 1237 54 discriminator 3 view .LVU5653
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17182              		.loc 1 1237 37 discriminator 3 view .LVU5654
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17183              		.loc 1 1238 9 discriminator 3 view .LVU5655
 17184              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17185              		.loc 1 1238 42 is_stmt 0 discriminator 3 view .LVU5656
 17186 5d37 4C894828 		mov	QWORD PTR 40[rax], r9	# MEM[base: _352, offset: 168B], D__lsm2.721
GAS LISTING /tmp/ccfflXEb.s 			page 451


1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17187              		.loc 1 1239 9 is_stmt 1 discriminator 3 view .LVU5657
 17188              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17189              		.loc 1 1239 42 is_stmt 0 discriminator 3 view .LVU5658
 17190 5d3b 48895030 		mov	QWORD PTR 48[rax], rdx	# MEM[base: _352, offset: 176B], D__lsm2.717
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17191              		.loc 1 1240 9 is_stmt 1 discriminator 3 view .LVU5659
 17192              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17193              		.loc 1 1240 42 is_stmt 0 discriminator 3 view .LVU5660
 17194 5d3f 48897038 		mov	QWORD PTR 56[rax], rsi	# MEM[base: _352, offset: 184B], D__lsm2.713
 17195              		.loc 1 1241 9 is_stmt 1 discriminator 3 view .LVU5661
 17196              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17197              		.loc 1 1241 42 is_stmt 0 discriminator 3 view .LVU5662
 17198 5d43 4C894040 		mov	QWORD PTR 64[rax], r8	# MEM[base: _352, offset: 192B], D__lsm2.725
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17199              		.loc 1 1237 54 is_stmt 1 discriminator 3 view .LVU5663
 17200              	.LVL1006:
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17201              		.loc 1 1237 37 discriminator 3 view .LVU5664
 17202 5d47 4881F98F 		cmp	rcx, 399	# copy_vector,
 17202      010000
 17203              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17204              		.loc 1 1241 102 is_stmt 0 discriminator 3 view .LVU5665
 17205 5d4e 4C894424 		mov	QWORD PTR -8[rsp], r8	# %sfp, D__lsm2.725
 17205      F8
 17206 5d53 0F8582FE 		jne	.L1439	#,
 17206      FFFF
 17207 5d59 488D8780 		lea	rax, 12672[rdi]	# ivtmp.735,
 17207      310000
 17208 5d60 4C8DB7E0 		lea	r14, 12768[rdi]	# ivtmp.736,
 17208      310000
 17209 5d67 4881C7A0 		add	rdi, 12704	# _224,
 17209      310000
 17210              	.LVL1007:
 17211 5d6e 6690     		.p2align 4
 17212              		.p2align 3
 17213              	.L1440:
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17214              		.loc 1 1238 9 is_stmt 1 view .LVU5666
 17215              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17216              		.loc 1 1238 140 is_stmt 0 view .LVU5667
 17217 5d70 41B80A00 		mov	r8d, 10	# tmp343,
 17217      0000
 17218              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17219              		.loc 1 1238 80 view .LVU5668
 17220 5d76 41BF3600 		mov	r15d, 54	# tmp344,
 17220      0000
 17221              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17222              		.loc 1 1238 140 view .LVU5669
 17223 5d7c C462B9F7 		shlx	r11, QWORD PTR [rax], r8	# tmp226, MEM[base: _232, offset: 0B], tmp343
 17223      18
 17224              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
GAS LISTING /tmp/ccfflXEb.s 			page 452


1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17225              		.loc 1 1238 80 view .LVU5670
 17226 5d81 C4E283F7 		shrx	rbp, QWORD PTR -8[rax], r15	# tmp228, MEM[base: _232, offset: -8B], tmp344
 17226      68F8
 17227              	# sieve_extend.c:1238:         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-
1238:sieve_extend.c ****         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4  ] >> shift_bit_flipped
 17228              		.loc 1 1238 102 view .LVU5671
 17229 5d87 4909EB   		or	r11, rbp	# tmp230, tmp228
 17230 5d8a 4883C020 		add	rax, 32	# ivtmp.735,
 17231 5d8e 4D891E   		mov	QWORD PTR [r14], r11	# MEM[base: _231, offset: 0B], tmp230
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17232              		.loc 1 1239 9 is_stmt 1 view .LVU5672
 17233              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17234              		.loc 1 1239 140 is_stmt 0 view .LVU5673
 17235 5d91 C462B9F7 		shlx	r13, QWORD PTR -24[rax], r8	# tmp231, MEM[base: _232, offset: 8B], tmp345
 17235      68E8
 17236              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17237              		.loc 1 1239 80 view .LVU5674
 17238 5d97 C46283F7 		shrx	r10, QWORD PTR -32[rax], r15	# tmp233, MEM[base: _232, offset: 0B], tmp346
 17238      50E0
 17239              	# sieve_extend.c:1239:         bitstorage_word[copy_vector*4+1] = (bitstorage_word[source_vector*4 
1239:sieve_extend.c ****         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+1] >> shift_bit_flipped
 17240              		.loc 1 1239 102 view .LVU5675
 17241 5d9d 4D09D5   		or	r13, r10	# tmp235, tmp233
 17242 5da0 4D896E08 		mov	QWORD PTR 8[r14], r13	# MEM[base: _231, offset: 8B], tmp235
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17243              		.loc 1 1240 9 is_stmt 1 view .LVU5676
 17244              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17245              		.loc 1 1240 140 is_stmt 0 view .LVU5677
 17246 5da4 C4E2B9F7 		shlx	rbx, QWORD PTR -16[rax], r8	# tmp236, MEM[base: _232, offset: 16B], tmp347
 17246      58F0
 17247              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17248              		.loc 1 1240 80 view .LVU5678
 17249 5daa C46283F7 		shrx	r12, QWORD PTR -24[rax], r15	# tmp238, MEM[base: _232, offset: 8B], tmp348
 17249      60E8
 17250              	# sieve_extend.c:1240:         bitstorage_word[copy_vector*4+2] = (bitstorage_word[source_vector*4+
1240:sieve_extend.c ****         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+2] >> shift_bit_flipped
 17251              		.loc 1 1240 102 view .LVU5679
 17252 5db0 4C09E3   		or	rbx, r12	# tmp240, tmp238
 17253 5db3 49895E10 		mov	QWORD PTR 16[r14], rbx	# MEM[base: _231, offset: 16B], tmp240
 17254              		.loc 1 1241 9 is_stmt 1 view .LVU5680
 17255              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17256              		.loc 1 1241 80 is_stmt 0 view .LVU5681
 17257 5db7 C46283F7 		shrx	r9, QWORD PTR -16[rax], r15	# tmp241, MEM[base: _232, offset: 16B], tmp349
 17257      48F0
 17258              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17259              		.loc 1 1241 140 view .LVU5682
 17260 5dbd C4E2B9F7 		shlx	rdx, QWORD PTR -8[rax], r8	# tmp243, MEM[base: _232, offset: 24B], tmp350
 17260      50F8
 17261              	# sieve_extend.c:1241:         bitstorage_word[copy_vector*4+3] = (bitstorage_word[source_vector*4+
 17262              		.loc 1 1241 102 view .LVU5683
 17263 5dc3 4909D1   		or	r9, rdx	# tmp245, tmp243
 17264 5dc6 4D894E18 		mov	QWORD PTR 24[r14], r9	# MEM[base: _231, offset: 24B], tmp245
GAS LISTING /tmp/ccfflXEb.s 			page 453


1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17265              		.loc 1 1237 54 is_stmt 1 view .LVU5684
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17266              		.loc 1 1237 37 view .LVU5685
 17267 5dca 4983C620 		add	r14, 32	# ivtmp.736,
 17268              	# sieve_extend.c:1237:     for (counter_t copy_vector = 3; copy_vector<400; copy_vector++, source_v
1237:sieve_extend.c ****         bitstorage_word[copy_vector*4  ] = (bitstorage_word[source_vector*4-1] >> shift_bit_flipped
 17269              		.loc 1 1237 5 is_stmt 0 view .LVU5686
 17270 5dce 4839C7   		cmp	rdi, rax	# _224, ivtmp.735
 17271 5dd1 759D     		jne	.L1440	#,
 17272              	.LBE888:
 17273              	# sieve_extend.c:1243: }
1242:sieve_extend.c ****     }
1243:sieve_extend.c **** }
 17274              		.loc 1 1243 1 view .LVU5687
 17275 5dd3 5B       		pop	rbx	#
 17276              		.cfi_def_cfa_offset 48
 17277 5dd4 5D       		pop	rbp	#
 17278              		.cfi_def_cfa_offset 40
 17279 5dd5 415C     		pop	r12	#
 17280              		.cfi_def_cfa_offset 32
 17281 5dd7 415D     		pop	r13	#
 17282              		.cfi_def_cfa_offset 24
 17283 5dd9 415E     		pop	r14	#
 17284              		.cfi_def_cfa_offset 16
 17285 5ddb 415F     		pop	r15	#
 17286              		.cfi_def_cfa_offset 8
 17287 5ddd C3       		ret	
 17288              		.cfi_endproc
 17289              	.LFE95:
 17291              		.section	.rodata.str1.1
 17292              	.LC29:
 17293 0044 5573696E 		.string	"Using Pointers"
 17293      6720506F 
 17293      696E7465 
 17293      727300
 17294              	.LC30:
 17295 0053 2D2D6865 		.string	"--help"
 17295      6C7000
 17296              	.LC31:
 17297 005a 2D2D7665 		.string	"--verbose"
 17297      72626F73 
 17297      6500
 17298              	.LC32:
 17299 0064 4E6F2076 		.string	"No verbose level specified\n"
 17299      6572626F 
 17299      7365206C 
 17299      6576656C 
 17299      20737065 
 17300              		.section	.rodata.str1.8
 17301 03ae 0000     		.align 8
 17302              	.LC33:
 17303 03b0 4572726F 		.string	"Error: Invalid measurement time: %s\n"
 17303      723A2049 
 17303      6E76616C 
 17303      6964206D 
 17303      65617375 
GAS LISTING /tmp/ccfflXEb.s 			page 454


 17304              		.section	.rodata.str1.1
 17305              	.LC34:
 17306 0080 56657262 		.string	"Verbose level set to %d\n"
 17306      6F736520 
 17306      6C657665 
 17306      6C207365 
 17306      7420746F 
 17307              	.LC35:
 17308 0099 2D2D6368 		.string	"--check"
 17308      65636B00 
 17309              	.LC36:
 17310 00a1 2D2D7475 		.string	"--tune"
 17310      6E6500
 17311              	.LC37:
 17312 00a8 4E6F2074 		.string	"No tune level specified\n"
 17312      756E6520 
 17312      6C657665 
 17312      6C207370 
 17312      65636966 
 17313              		.section	.rodata.str1.8
 17314 03d5 000000   		.align 8
 17315              	.LC38:
 17316 03d8 4572726F 		.string	"Error: Invalid tune level: %s\n"
 17316      723A2049 
 17316      6E76616C 
 17316      69642074 
 17316      756E6520 
 17317              		.section	.rodata.str1.1
 17318              	.LC39:
 17319 00c1 54756E65 		.string	"Tune level set to %d\n"
 17319      206C6576 
 17319      656C2073 
 17319      65742074 
 17319      6F202564 
 17320              	.LC40:
 17321 00d7 2D2D7368 		.string	"--show"
 17321      6F7700
 17322              	.LC41:
 17323 00de 4E6F2073 		.string	"No show maximum specified\n"
 17323      686F7720 
 17323      6D617869 
 17323      6D756D20 
 17323      73706563 
 17324              	.LC42:
 17325 00f9 256A7500 		.string	"%ju"
 17326              		.section	.rodata.str1.8
 17327 03f7 00       		.align 8
 17328              	.LC43:
 17329 03f8 4572726F 		.string	"Error: Invalid show maximum: %s\n"
 17329      723A2049 
 17329      6E76616C 
 17329      69642073 
 17329      686F7720 
 17330              		.section	.rodata.str1.1
 17331              	.LC44:
 17332 00fd 53686F77 		.string	"Show maximum set to %ju\n"
 17332      206D6178 
GAS LISTING /tmp/ccfflXEb.s 			page 455


 17332      696D756D 
 17332      20736574 
 17332      20746F20 
 17333              	.LC45:
 17334 0116 496E7661 		.string	"Invalid size %s\n"
 17334      6C696420 
 17334      73697A65 
 17334      2025730A 
 17334      00
 17335              	.LC46:
 17336 0127 56616C69 		.string	"Validating... "
 17336      64617469 
 17336      6E672E2E 
 17336      2E2000
 17337              	.LC47:
 17338 0136 2E2E2E43 		.string	"...Checking size %ju ..."
 17338      6865636B 
 17338      696E6720 
 17338      73697A65 
 17338      20256A75 
 17339              	.LC48:
 17340 014f 2E626C6F 		.string	".blocksize %ju-"
 17340      636B7369 
 17340      7A652025 
 17340      6A752D00 
 17341              	.LC49:
 17342 015f 76616C69 		.string	"valid;"
 17342      643B00
 17343              	.LC50:
 17344 0166 2E2E2E56 		.string	"...Valid algorithm"
 17344      616C6964 
 17344      20616C67 
 17344      6F726974 
 17344      686D00
 17345              	.LC51:
 17346 0179 54756E69 		.string	"Tuning..."
 17346      6E672E2E 
 17346      2E00
 17347              	.LC52:
 17348 0183 2E283E29 		.string	".(>)"
 17348      00
 17349              		.section	.rodata.str1.8
 17350 0419 00000000 		.align 8
 17350      000000
 17351              	.LC53:
 17352 0420 626C6F63 		.string	"blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector %
 17352      6B73697A 
 17352      655F6269 
 17352      74732025 
 17352      31306A75 
 17353              		.section	.rodata.str1.1
 17354              	.LC54:
 17355 0188 2E2E2E2E 		.string	"...."
 17355      00
 17356              		.section	.rodata.str1.8
 17357 04a7 00       		.align 8
 17358              	.LC55:
GAS LISTING /tmp/ccfflXEb.s 			page 456


 17359 04a8 256A7520 		.string	"%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; best ve
 17359      72657375 
 17359      6C74732E 
 17359      20496E69 
 17359      74616C20 
 17360              		.section	.rodata.str1.1
 17361              	.LC56:
 17362 018d 42657374 		.string	"Best options"
 17362      206F7074 
 17362      696F6E73 
 17362      00
 17363              	.LC57:
 17364 019a 28256A75 		.string	"(%ju) "
 17364      292000
 17365              	.LC58:
 17366 01a1 2E2E2E00 		.string	"..."
 17367              	.LC59:
 17368 01a5 2E426573 		.string	".Best result:"
 17368      74207265 
 17368      73756C74 
 17368      3A00
 17369              		.section	.rodata.str1.8
 17370 050f 00       		.align 8
 17371              	.LC60:
 17372 0510 42656E63 		.string	"Benchmarking... with blocksize %ju steps: %ju/%ju/%ju\n"
 17372      686D6172 
 17372      6B696E67 
 17372      2E2E2E20 
 17372      77697468 
 17373 0547 00       		.align 8
 17374              	.LC62:
 17375 0548 726F6769 		.string	"rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n"
 17375      65727661 
 17375      6E64616D 
 17375      5F657874 
 17375      656E643B 
 17376 058a 00000000 		.align 8
 17376      0000
 17377              	.LC63:
 17378 0590 50617373 		.string	"Passes - per 5 seconds: %f - per second %f\n"
 17378      6573202D 
 17378      20706572 
 17378      20352073 
 17378      65636F6E 
 17379              		.section	.rodata.str1.1
 17380              	.LC64:
 17381 01b3 53686F77 		.string	"Show result set:"
 17381      20726573 
 17381      756C7420 
 17381      7365743A 
 17381      00
 17382              		.section	.text.startup,"ax",@progbits
 17383              		.p2align 4
 17384              		.globl	main
 17386              	main:
 17387              	.LVL1008:
 17388              	.LFB96:
GAS LISTING /tmp/ccfflXEb.s 			page 457


1244:sieve_extend.c **** int main(int argc, char *argv[]) {
 17389              		.loc 1 1244 34 is_stmt 1 view -0
 17390              		.cfi_startproc
 17391              		.loc 1 1244 34 is_stmt 0 view .LVU5689
 17392 0000 F30F1EFA 		endbr64	
 17393 0004 4157     		push	r15	#
 17394              		.cfi_def_cfa_offset 16
 17395              		.cfi_offset 15, -16
 17396 0006 4156     		push	r14	#
 17397              		.cfi_def_cfa_offset 24
 17398              		.cfi_offset 14, -24
 17399 0008 4155     		push	r13	#
 17400              		.cfi_def_cfa_offset 32
 17401              		.cfi_offset 13, -32
 17402 000a 4154     		push	r12	#
 17403              		.cfi_def_cfa_offset 40
 17404              		.cfi_offset 12, -40
 17405 000c 55       		push	rbp	#
 17406              		.cfi_def_cfa_offset 48
 17407              		.cfi_offset 6, -48
 17408 000d 53       		push	rbx	#
 17409              		.cfi_def_cfa_offset 56
 17410              		.cfi_offset 3, -56
 17411 000e 488DA424 		lea	rsp, -248[rsp]	#,
 17411      08FFFFFF 
 17412              		.cfi_def_cfa_offset 304
 17413              	# sieve_extend.c:1244: int main(int argc, char *argv[]) {
 17414              		.loc 1 1244 34 view .LVU5690
 17415 0016 64488B04 		mov	rax, QWORD PTR fs:40	# tmp571, MEM[(<address-space-1> long unsigned int *)40B]
 17415      25280000 
 17415      00
 17416 001f 48898424 		mov	QWORD PTR 232[rsp], rax	# D.7629, tmp571
 17416      E8000000 
 17417 0027 31C0     		xor	eax, eax	# tmp571
1245:sieve_extend.c ****     
1246:sieve_extend.c **** //     struct sieve_t* sieve = sieve_create(1000000);
1247:sieve_extend.c **** //     bitvector_t* bitstorage = (bitvector_t*)sieve->bitstorage;
1248:sieve_extend.c **** 
1249:sieve_extend.c **** //     int passes1 = benchmark(1, testshuffle_vector , sieve->bitstorage, 500000);
1250:sieve_extend.c **** //     int passes2 = benchmark(1, testshuffle_vector2, sieve->bitstorage, 500000);
1251:sieve_extend.c **** //     // int passes3 = benchmark(1, test3, sieve->bitstorage, 500000);
1252:sieve_extend.c **** 
1253:sieve_extend.c **** //     // testshuffle(bitstorage,1000000);
1254:sieve_extend.c **** // //    dump_bitstorage((bitword_t *)bitstorage,20);
1255:sieve_extend.c **** 
1256:sieve_extend.c **** //     sieve_delete(sieve);
1257:sieve_extend.c **** //     printf("Passes1:"); printfcomma2(passes1);printf("\n");
1258:sieve_extend.c **** //     printf("Passes2:"); printfcomma2(passes2);printf("\n");
1259:sieve_extend.c **** //     // printf("Passes3:"); printfcomma2(passes3);printf("\n");
1260:sieve_extend.c **** //     exit(0);
1261:sieve_extend.c ****     
1262:sieve_extend.c ****     
1263:sieve_extend.c ****     counter_t option_maxFactor  = default_sieve_limit;
 17418              		.loc 1 1263 5 is_stmt 1 view .LVU5691
 17419              	# sieve_extend.c:1263:     counter_t option_maxFactor  = default_sieve_limit;
 17420              		.loc 1 1263 15 is_stmt 0 view .LVU5692
 17421 0029 48C78424 		mov	QWORD PTR 176[rsp], 1000000	# option_maxFactor,
GAS LISTING /tmp/ccfflXEb.s 			page 458


 17421      B0000000 
 17421      40420F00 
1264:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 17422              		.loc 1 1264 5 is_stmt 1 view .LVU5693
 17423              	.LBB997:
 17424              	# sieve_extend.c:1269:     for (int arg=1; arg < argc; arg++) {
1265:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
1266:sieve_extend.c ****     int option_check = default_check_level;
1267:sieve_extend.c ****     int option_tunelevel = default_tune_level;
1268:sieve_extend.c **** 
1269:sieve_extend.c ****     for (int arg=1; arg < argc; arg++) {
 17425              		.loc 1 1269 5 is_stmt 0 view .LVU5694
 17426 0035 83FF01   		cmp	edi, 1	# argc,
 17427              	.LBE997:
 17428              	# sieve_extend.c:1264:     counter_t option_showMaxFactor = default_showMaxFactor;
1264:sieve_extend.c ****     counter_t option_showMaxFactor = default_showMaxFactor;
 17429              		.loc 1 1264 15 view .LVU5695
 17430 0038 48C78424 		mov	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 17430      B8000000 
 17430      00000000 
1265:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 17431              		.loc 1 1265 5 is_stmt 1 view .LVU5696
 17432              	# sieve_extend.c:1265:     int option_verboselevel = default_verbose_level;
1265:sieve_extend.c ****     int option_verboselevel = default_verbose_level;
 17433              		.loc 1 1265 9 is_stmt 0 view .LVU5697
 17434 0044 C78424A8 		mov	DWORD PTR 168[rsp], 2	# option_verboselevel,
 17434      00000002 
 17434      000000
1266:sieve_extend.c ****     int option_tunelevel = default_tune_level;
 17435              		.loc 1 1266 5 is_stmt 1 view .LVU5698
 17436              	.LVL1009:
1267:sieve_extend.c **** 
 17437              		.loc 1 1267 5 view .LVU5699
 17438              	# sieve_extend.c:1267:     int option_tunelevel = default_tune_level;
1267:sieve_extend.c **** 
 17439              		.loc 1 1267 9 is_stmt 0 view .LVU5700
 17440 004f C78424AC 		mov	DWORD PTR 172[rsp], 0	# option_tunelevel,
 17440      00000000 
 17440      000000
 17441              		.loc 1 1269 5 is_stmt 1 view .LVU5701
 17442              	.LBB1022:
 17443              		.loc 1 1269 10 view .LVU5702
 17444              	.LVL1010:
 17445              		.loc 1 1269 21 view .LVU5703
 17446              	# sieve_extend.c:1269:     for (int arg=1; arg < argc; arg++) {
 17447              		.loc 1 1269 5 is_stmt 0 view .LVU5704
 17448 005a 0F8E2C05 		jle	.L1488	#,
 17448      0000
 17449 0060 89FD     		mov	ebp, edi	# argc, tmp527
 17450 0062 4989F4   		mov	r12, rsi	# argv, tmp528
 17451              	# sieve_extend.c:1269:     for (int arg=1; arg < argc; arg++) {
 17452              		.loc 1 1269 14 view .LVU5705
 17453 0065 BB010000 		mov	ebx, 1	# arg,
 17453      00
 17454 006a 4C8D2D00 		lea	r13, .LC30[rip]	# tmp467,
 17454      000000
 17455              	# sieve_extend.c:1271:         else if (strcmp(argv[arg], "--verbose")==0) {
GAS LISTING /tmp/ccfflXEb.s 			page 459


1270:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1271:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17456              		.loc 1 1271 18 view .LVU5706
 17457 0071 4C8D3500 		lea	r14, .LC31[rip]	# tmp482,
 17457      000000
 17458 0078 EB66     		jmp	.L1471	#
 17459              	.LVL1011:
 17460 007a 660F1F44 		.p2align 4,,7
 17460      0000
 17461              		.p2align 3
 17462              	.L1607:
1272:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17463              		.loc 1 1272 13 is_stmt 1 view .LVU5707
 17464              	# sieve_extend.c:1272:             if (++arg >= argc) { fprintf(stderr, "No verbose level specified
 17465              		.loc 1 1272 16 is_stmt 0 view .LVU5708
 17466 0080 83C301   		add	ebx, 1	# arg,
 17467              	.LVL1012:
 17468              		.loc 1 1272 16 view .LVU5709
 17469 0083 39DD     		cmp	ebp, ebx	# argc, arg
 17470 0085 0F8E2B0F 		jle	.L1605	#,
 17470      0000
1273:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 17471              		.loc 1 1273 13 is_stmt 1 view .LVU5710
 17472              	# sieve_extend.c:1273:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17473              		.loc 1 1273 28 is_stmt 0 view .LVU5711
 17474 008b 4D8D7C04 		lea	r15, 8[r12+rax]	# _16,
 17474      08
 17475              	# sieve_extend.c:1273:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17476              		.loc 1 1273 17 view .LVU5712
 17477 0090 488D9424 		lea	rdx, 168[rsp]	# tmp303,
 17477      A8000000 
 17478 0098 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_16
 17479 009b 31C0     		xor	eax, eax	#
 17480 009d 488D3500 		lea	rsi, .LC26[rip]	#,
 17480      000000
 17481 00a4 E8000000 		call	__isoc99_sscanf@PLT	#
 17481      00
 17482              	.LVL1013:
 17483              	# sieve_extend.c:1273:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17484              		.loc 1 1273 16 view .LVU5713
 17485 00a9 83F801   		cmp	eax, 1	# tmp529,
 17486 00ac 0F850C05 		jne	.L1477	#,
 17486      0000
 17487              	# sieve_extend.c:1273:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17488              		.loc 1 1273 91 discriminator 1 view .LVU5714
 17489 00b2 8B9424A8 		mov	edx, DWORD PTR 168[rsp]	# option_verboselevel.16_19, option_verboselevel
 17489      000000
 17490              	# sieve_extend.c:1273:             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option
 17491              		.loc 1 1273 68 discriminator 1 view .LVU5715
 17492 00b9 83FA04   		cmp	edx, 4	# option_verboselevel.16_19,
 17493 00bc 0F8FFC04 		jg	.L1477	#,
 17493      0000
1274:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid measurement time: %s\n", argv[arg]); usage(argv[0])
1275:sieve_extend.c ****             }
1276:sieve_extend.c ****             printf("Verbose level set to %d\n",option_verboselevel);
 17494              		.loc 1 1276 13 is_stmt 1 view .LVU5716
 17495              	.LVL1014:
GAS LISTING /tmp/ccfflXEb.s 			page 460


 17496              	.LBB998:
 17497              	.LBI998:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17498              		.loc 3 105 1 view .LVU5717
 17499              	.LBB999:
 17500              		.loc 3 107 3 view .LVU5718
 17501              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17502              		.loc 3 107 10 is_stmt 0 view .LVU5719
 17503 00c2 488D3500 		lea	rsi, .LC34[rip]	#,
 17503      000000
 17504 00c9 BF010000 		mov	edi, 1	#,
 17504      00
 17505 00ce 31C0     		xor	eax, eax	#
 17506 00d0 E8000000 		call	__printf_chk@PLT	#
 17506      00
 17507              	.LVL1015:
 17508              	.L1479:
 17509              		.loc 3 107 10 view .LVU5720
 17510              	.LBE999:
 17511              	.LBE998:
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17512              		.loc 1 1269 33 is_stmt 1 discriminator 2 view .LVU5721
 17513              	# sieve_extend.c:1269:     for (int arg=1; arg < argc; arg++) {
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17514              		.loc 1 1269 36 is_stmt 0 discriminator 2 view .LVU5722
 17515 00d5 83C301   		add	ebx, 1	# arg,
 17516              	.LVL1016:
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17517              		.loc 1 1269 21 is_stmt 1 discriminator 2 view .LVU5723
 17518              	# sieve_extend.c:1269:     for (int arg=1; arg < argc; arg++) {
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17519              		.loc 1 1269 5 is_stmt 0 discriminator 2 view .LVU5724
 17520 00d8 39DD     		cmp	ebp, ebx	# argc, arg
 17521 00da 0F8E0001 		jle	.L1606	#,
 17521      0000
 17522              	.LVL1017:
 17523              	.L1471:
1270:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17524              		.loc 1 1270 9 is_stmt 1 view .LVU5725
 17525              	# sieve_extend.c:1270:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1270:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17526              		.loc 1 1270 24 is_stmt 0 view .LVU5726
 17527 00e0 4863C3   		movsx	rax, ebx	# arg, arg
 17528              	# sieve_extend.c:1270:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1270:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17529              		.loc 1 1270 13 view .LVU5727
 17530 00e3 41B90700 		mov	r9d, 7	# tmp292,
 17530      0000
 17531              	# sieve_extend.c:1270:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1270:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17532              		.loc 1 1270 24 view .LVU5728
 17533 00e9 48C1E003 		sal	rax, 3	# _2,
 17534              	# sieve_extend.c:1270:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1270:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17535              		.loc 1 1270 13 view .LVU5729
 17536 00ed 4C89EF   		mov	rdi, r13	# tmp291, tmp467
 17537              	# sieve_extend.c:1270:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
GAS LISTING /tmp/ccfflXEb.s 			page 461


1270:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17538              		.loc 1 1270 24 view .LVU5730
 17539 00f0 4D8D3C04 		lea	r15, [r12+rax]	# _3,
 17540              	# sieve_extend.c:1270:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1270:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17541              		.loc 1 1270 13 view .LVU5731
 17542 00f4 4C89C9   		mov	rcx, r9	# tmp493, tmp292
 17543 00f7 4D8B07   		mov	r8, QWORD PTR [r15]	# _4, *_3
 17544 00fa 4C89C6   		mov	rsi, r8	# _4, _4
 17545 00fd F3A6     		repz cmpsb
 17546 00ff 0F97C2   		seta	dl	#, tmp293
 17547 0102 80DA00   		sbb	dl, 0	# _5
 17548              	# sieve_extend.c:1270:         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
1270:sieve_extend.c ****         else if (strcmp(argv[arg], "--verbose")==0) {
 17549              		.loc 1 1270 12 view .LVU5732
 17550 0105 84D2     		test	dl, dl	# _5
 17551 0107 0F84CE04 		je	.L1603	#,
 17551      0000
1271:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17552              		.loc 1 1271 14 is_stmt 1 view .LVU5733
 17553              	# sieve_extend.c:1271:         else if (strcmp(argv[arg], "--verbose")==0) {
1271:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17554              		.loc 1 1271 18 is_stmt 0 view .LVU5734
 17555 010d B90A0000 		mov	ecx, 10	# tmp298,
 17555      00
 17556 0112 4C89C6   		mov	rsi, r8	# _4, _4
 17557 0115 4C89F7   		mov	rdi, r14	# tmp297, tmp482
 17558 0118 F3A6     		repz cmpsb
 17559 011a 410F97C2 		seta	r10b	#, tmp299
 17560 011e 4180DA00 		sbb	r10b, 0	# _11
 17561              	# sieve_extend.c:1271:         else if (strcmp(argv[arg], "--verbose")==0) {
1271:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No verbose level specified\n"); usage(argv[0]); }
 17562              		.loc 1 1271 17 view .LVU5735
 17563 0122 4584D2   		test	r10b, r10b	# _11
 17564 0125 0F8455FF 		je	.L1607	#,
 17564      FFFF
1277:sieve_extend.c ****         } 
1278:sieve_extend.c ****         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17565              		.loc 1 1278 14 is_stmt 1 view .LVU5736
 17566              	# sieve_extend.c:1278:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17567              		.loc 1 1278 18 is_stmt 0 view .LVU5737
 17568 012b B9080000 		mov	ecx, 8	# tmp308,
 17568      00
 17569 0130 4C89C6   		mov	rsi, r8	# _4, _4
 17570 0133 488D3D00 		lea	rdi, .LC35[rip]	# tmp307,
 17570      000000
 17571 013a F3A6     		repz cmpsb
 17572 013c 410F97C3 		seta	r11b	#, tmp309
 17573 0140 4180DB00 		sbb	r11b, 0	# _23
 17574              	# sieve_extend.c:1278:         else if (strcmp(argv[arg], "--check")==0) { option_check=1; }
 17575              		.loc 1 1278 17 view .LVU5738
 17576 0144 4584DB   		test	r11b, r11b	# _23
 17577 0147 748C     		je	.L1479	#,
1279:sieve_extend.c ****         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17578              		.loc 1 1279 14 is_stmt 1 view .LVU5739
 17579              	# sieve_extend.c:1279:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17580              		.loc 1 1279 18 is_stmt 0 view .LVU5740
GAS LISTING /tmp/ccfflXEb.s 			page 462


 17581 0149 4C89C6   		mov	rsi, r8	# _4, _4
 17582 014c 488D3D00 		lea	rdi, .LC36[rip]	# tmp313,
 17582      000000
 17583 0153 4C89C9   		mov	rcx, r9	# tmp499, tmp292
 17584 0156 F3A6     		repz cmpsb
 17585 0158 0F97C2   		seta	dl	#, tmp315
 17586 015b 80DA00   		sbb	dl, 0	# _24
 17587              	# sieve_extend.c:1279:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17588              		.loc 1 1279 17 view .LVU5741
 17589 015e 84D2     		test	dl, dl	# _24
 17590 0160 0F855A01 		jne	.L1480	#,
 17590      0000
 17591              		.loc 1 1279 52 is_stmt 1 discriminator 1 view .LVU5742
 17592              	# sieve_extend.c:1279:         else if (strcmp(argv[arg], "--tune")==0) { option_tunelevel=0;
 17593              		.loc 1 1279 68 is_stmt 0 discriminator 1 view .LVU5743
 17594 0166 C78424AC 		mov	DWORD PTR 172[rsp], 0	# option_tunelevel,
 17594      00000000 
 17594      000000
1280:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"); usage(argv[0]); }
 17595              		.loc 1 1280 13 is_stmt 1 discriminator 1 view .LVU5744
 17596              	# sieve_extend.c:1280:             if (++arg >= argc) { fprintf(stderr, "No tune level specified\n"
 17597              		.loc 1 1280 16 is_stmt 0 discriminator 1 view .LVU5745
 17598 0171 83C301   		add	ebx, 1	# arg,
 17599              	.LVL1018:
 17600              		.loc 1 1280 16 discriminator 1 view .LVU5746
 17601 0174 39DD     		cmp	ebp, ebx	# argc, arg
 17602 0176 0F8E7A0E 		jle	.L1608	#,
 17602      0000
1281:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 17603              		.loc 1 1281 13 is_stmt 1 view .LVU5747
 17604              	# sieve_extend.c:1281:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17605              		.loc 1 1281 28 is_stmt 0 view .LVU5748
 17606 017c 4D8D7C04 		lea	r15, 8[r12+rax]	# _29,
 17606      08
 17607              	# sieve_extend.c:1281:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17608              		.loc 1 1281 17 view .LVU5749
 17609 0181 488D9424 		lea	rdx, 172[rsp]	# tmp319,
 17609      AC000000 
 17610 0189 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_29
 17611 018c 31C0     		xor	eax, eax	#
 17612 018e 488D3500 		lea	rsi, .LC26[rip]	#,
 17612      000000
 17613 0195 E8000000 		call	__isoc99_sscanf@PLT	#
 17613      00
 17614              	.LVL1019:
 17615              	# sieve_extend.c:1281:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17616              		.loc 1 1281 16 view .LVU5750
 17617 019a 83F801   		cmp	eax, 1	# tmp530,
 17618 019d 0F85350E 		jne	.L1482	#,
 17618      0000
 17619              	# sieve_extend.c:1281:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17620              		.loc 1 1281 85 discriminator 1 view .LVU5751
 17621 01a3 8B9424AC 		mov	edx, DWORD PTR 172[rsp]	# option_tunelevel.20_32, option_tunelevel
 17621      000000
 17622              	# sieve_extend.c:1281:             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tu
 17623              		.loc 1 1281 65 discriminator 1 view .LVU5752
 17624 01aa 83FA04   		cmp	edx, 4	# option_tunelevel.20_32,
GAS LISTING /tmp/ccfflXEb.s 			page 463


 17625 01ad 0F8F250E 		jg	.L1482	#,
 17625      0000
1282:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid tune level: %s\n", argv[arg]); usage(argv[0]);
1283:sieve_extend.c ****             }
1284:sieve_extend.c ****             printf("Tune level set to %d\n",option_tunelevel);
 17626              		.loc 1 1284 13 is_stmt 1 view .LVU5753
 17627              	.LVL1020:
 17628              	.LBB1000:
 17629              	.LBI1000:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17630              		.loc 3 105 1 view .LVU5754
 17631              	.LBB1001:
 17632              		.loc 3 107 3 view .LVU5755
 17633              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17634              		.loc 3 107 10 is_stmt 0 view .LVU5756
 17635 01b3 31C0     		xor	eax, eax	#
 17636 01b5 488D3500 		lea	rsi, .LC39[rip]	#,
 17636      000000
 17637 01bc BF010000 		mov	edi, 1	#,
 17637      00
 17638              	.LBE1001:
 17639              	.LBE1000:
 17640              	# sieve_extend.c:1269:     for (int arg=1; arg < argc; arg++) {
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17641              		.loc 1 1269 36 view .LVU5757
 17642 01c1 83C301   		add	ebx, 1	# arg,
 17643              	.LVL1021:
 17644              	.LBB1003:
 17645              	.LBB1002:
 17646              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17647              		.loc 3 107 10 view .LVU5758
 17648 01c4 E8000000 		call	__printf_chk@PLT	#
 17648      00
 17649              	.LVL1022:
 17650              		.loc 3 107 10 view .LVU5759
 17651              	.LBE1002:
 17652              	.LBE1003:
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17653              		.loc 1 1269 33 is_stmt 1 view .LVU5760
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17654              		.loc 1 1269 21 view .LVU5761
 17655              	# sieve_extend.c:1269:     for (int arg=1; arg < argc; arg++) {
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17656              		.loc 1 1269 5 is_stmt 0 view .LVU5762
 17657 01c9 39DD     		cmp	ebp, ebx	# argc, arg
 17658 01cb 0F8F0FFF 		jg	.L1471	#,
 17658      FFFF
 17659 01d1 66662E0F 		.p2align 4
 17659      1F840000 
 17659      0000000F 
 17659      1F4000
 17660              		.p2align 3
 17661              	.L1606:
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17662              		.loc 1 1269 5 view .LVU5763
 17663              	.LBE1022:
1285:sieve_extend.c ****         }
GAS LISTING /tmp/ccfflXEb.s 			page 464


1286:sieve_extend.c ****         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1287:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
1288:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
1289:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
1290:sieve_extend.c ****             }
1291:sieve_extend.c ****             printf("Show maximum set to %ju\n",(uintmax_t)option_showMaxFactor);
1292:sieve_extend.c ****         }
1293:sieve_extend.c ****         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 1) {
1294:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
1295:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
1296:sieve_extend.c ****         }
1297:sieve_extend.c ****     }
1298:sieve_extend.c **** 
1299:sieve_extend.c ****     if (option_runonce) { // used for stats and debugging
 17664              		.loc 1 1299 5 is_stmt 1 view .LVU5764
1300:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, default_blocksize);
1301:sieve_extend.c ****         printf("\nResult set:\n");
1302:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
1303:sieve_extend.c ****         int valid = validatePrimeCount(sieve,3);
1304:sieve_extend.c ****         if (!valid) printf("The sieve is NOT valid\n");
1305:sieve_extend.c ****         else printf("The sieve is VALID\n");
1306:sieve_extend.c ****         sieve_delete(sieve);
1307:sieve_extend.c ****         exit(0);
1308:sieve_extend.c ****     }
1309:sieve_extend.c **** 
1310:sieve_extend.c ****     struct timespec start_time,end_time;
 17665              		.loc 1 1310 5 view .LVU5765
1311:sieve_extend.c **** 
1312:sieve_extend.c ****     if (option_verboselevel >=1) {
 17666              		.loc 1 1312 5 view .LVU5766
 17667              	# sieve_extend.c:1312:     if (option_verboselevel >=1) {
 17668              		.loc 1 1312 8 is_stmt 0 view .LVU5767
 17669 01e0 8BAC24A8 		mov	ebp, DWORD PTR 168[rsp]	#, option_verboselevel
 17669      000000
 17670              	.LVL1023:
 17671              		.loc 1 1312 8 view .LVU5768
 17672 01e7 85ED     		test	ebp, ebp	#
 17673 01e9 0F8F9D03 		jg	.L1488	#,
 17673      0000
 17674              	.LVL1024:
 17675              	.L1489:
1313:sieve_extend.c ****         #if __APPLE__
1314:sieve_extend.c ****             printf("Apple detected. Using arrays instead of pointers\n");
1315:sieve_extend.c ****         #else
1316:sieve_extend.c ****             printf("Using Pointers\n");
1317:sieve_extend.c ****         #endif
1318:sieve_extend.c ****     }
1319:sieve_extend.c ****         
1320:sieve_extend.c ****     if (option_check) {
1321:sieve_extend.c ****         // Count the number of primes and validate the result
1322:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Validating... ");
1323:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 17676              		.loc 1 1323 9 is_stmt 1 view .LVU5769
 17677              	# sieve_extend.c:1323:         if (option_verboselevel >= 2) printf("\n");
 17678              		.loc 1 1323 12 is_stmt 0 view .LVU5770
 17679 01ef 83BC24A8 		cmp	DWORD PTR 168[rsp], 1	# option_verboselevel,
 17679      00000001 
GAS LISTING /tmp/ccfflXEb.s 			page 465


 17680 01f7 7E0A     		jle	.L1490	#,
 17681              		.loc 1 1323 39 is_stmt 1 view .LVU5771
 17682              	.LVL1025:
 17683              	.LBB1023:
 17684              	.LBI1023:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17685              		.loc 3 105 1 view .LVU5772
 17686              	.LBB1024:
 17687              		.loc 3 107 3 view .LVU5773
 17688              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17689              		.loc 3 107 10 is_stmt 0 view .LVU5774
 17690 01f9 BF0A0000 		mov	edi, 10	#,
 17690      00
 17691 01fe E8000000 		call	putchar@PLT	#
 17691      00
 17692              	.LVL1026:
 17693              	.L1490:
 17694              		.loc 3 107 10 view .LVU5775
 17695              	.LBE1024:
 17696              	.LBE1023:
 17697              	.LBB1025:
 17698              	# sieve_extend.c:1269:     for (int arg=1; arg < argc; arg++) {
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17699              		.loc 1 1269 14 view .LVU5776
 17700 0203 C7442428 		mov	DWORD PTR 40[rsp], 5	# %sfp,
 17700      05000000 
 17701 020b 41BD6400 		mov	r13d, 100	# sieveSize_check,
 17701      0000
 17702              	.LBE1025:
 17703              	.LBB1026:
 17704              	.LBB1027:
 17705              	.LBB1028:
 17706              	.LBB1029:
 17707              	.LBB1030:
 17708              	.LBB1031:
 17709              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17710              		.loc 3 107 10 view .LVU5777
 17711 0211 4C8D3500 		lea	r14, .LC48[rip]	# tmp481,
 17711      000000
 17712              	.L1497:
 17713              	.LVL1027:
 17714              		.loc 3 107 10 view .LVU5778
 17715              	.LBE1031:
 17716              	.LBE1030:
 17717              	.LBE1029:
 17718              	.LBE1028:
1324:sieve_extend.c **** 
1325:sieve_extend.c ****         // validate algorithm - run one time for all sizes
1326:sieve_extend.c ****         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; sieveSize_check *=10) {
1327:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 17719              		.loc 1 1327 13 is_stmt 1 view .LVU5779
 17720              	# sieve_extend.c:1327:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 17721              		.loc 1 1327 37 is_stmt 0 view .LVU5780
 17722 0218 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17722      000000
 17723              	# sieve_extend.c:1327:             if (option_verboselevel >= 2) printf("...Checking size %ju ...",
 17724              		.loc 1 1327 16 view .LVU5781
GAS LISTING /tmp/ccfflXEb.s 			page 466


 17725 021f 83F801   		cmp	eax, 1	# prephitmp_67,
 17726 0222 7E1D     		jle	.L1491	#,
 17727              		.loc 1 1327 43 is_stmt 1 view .LVU5782
 17728              	.LVL1028:
 17729              	.LBB1047:
 17730              	.LBI1047:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17731              		.loc 3 105 1 view .LVU5783
 17732              	.LBB1048:
 17733              		.loc 3 107 3 view .LVU5784
 17734              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17735              		.loc 3 107 10 is_stmt 0 view .LVU5785
 17736 0224 4C89EA   		mov	rdx, r13	#, sieveSize_check
 17737 0227 488D3500 		lea	rsi, .LC47[rip]	#,
 17737      000000
 17738 022e BF010000 		mov	edi, 1	#,
 17738      00
 17739 0233 31C0     		xor	eax, eax	#
 17740 0235 E8000000 		call	__printf_chk@PLT	#
 17740      00
 17741              	.LVL1029:
 17742 023a 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17742      000000
 17743              	.LVL1030:
 17744              	.L1491:
 17745              		.loc 3 107 10 view .LVU5786
 17746              	.LBE1048:
 17747              	.LBE1047:
 17748              	.LBE1027:
 17749              	.LBE1026:
 17750              	.LBB1057:
 17751              	# sieve_extend.c:1269:     for (int arg=1; arg < argc; arg++) {
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17752              		.loc 1 1269 14 view .LVU5787
 17753 0241 41BC0500 		mov	r12d, 5	# ivtmp_69,
 17753      0000
 17754 0247 BD000400 		mov	ebp, 1024	# blocksize_bits,
 17754      00
 17755 024c EB56     		jmp	.L1495	#
 17756              	.LVL1031:
 17757 024e 6690     		.p2align 4,,7
 17758              		.p2align 3
 17759              	.L1492:
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 17760              		.loc 1 1269 14 view .LVU5788
 17761              	.LBE1057:
 17762              	.LBB1058:
 17763              	.LBB1054:
 17764              	.LBB1049:
 17765              	.LBB1042:
1328:sieve_extend.c ****             struct sieve_t *sieve_check;
1329:sieve_extend.c ****             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; blocksize_bits *= 2) {
1330:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
1331:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17766              		.loc 1 1331 17 is_stmt 1 view .LVU5789
 17767              	# sieve_extend.c:1331:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17768              		.loc 1 1331 31 is_stmt 0 view .LVU5790
GAS LISTING /tmp/ccfflXEb.s 			page 467


 17769 0250 4889EE   		mov	rsi, rbp	#, blocksize_bits
 17770 0253 4C89EF   		mov	rdi, r13	#, sieveSize_check
 17771 0256 E8000000 		call	sieve_shake	#
 17771      00
 17772              	.LVL1032:
 17773              	# sieve_extend.c:1332:                 int valid = validatePrimeCount(sieve_check,option_verboselev
1332:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 17774              		.loc 1 1332 29 view .LVU5791
 17775 025b 8BB424A8 		mov	esi, DWORD PTR 168[rsp]	#, option_verboselevel
 17775      000000
 17776              	# sieve_extend.c:1331:                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
1331:sieve_extend.c ****                 int valid = validatePrimeCount(sieve_check,option_verboselevel);
 17777              		.loc 1 1331 31 view .LVU5792
 17778 0262 4989C7   		mov	r15, rax	# sieve_check, tmp533
 17779              	.LVL1033:
 17780              		.loc 1 1332 17 is_stmt 1 view .LVU5793
 17781              	# sieve_extend.c:1332:                 int valid = validatePrimeCount(sieve_check,option_verboselev
 17782              		.loc 1 1332 29 is_stmt 0 view .LVU5794
 17783 0265 4889C7   		mov	rdi, rax	#, sieve_check
 17784 0268 E8000000 		call	validatePrimeCount	#
 17784      00
 17785              	.LVL1034:
 17786              	.LBB1033:
 17787              	.LBB1034:
 17788              	# sieve_extend.c:113:     free(sieve->bitstorage);
 113:sieve_extend.c ****     free(sieve);
 17789              		.loc 1 113 5 view .LVU5795
 17790 026d 498B3F   		mov	rdi, QWORD PTR [r15]	#, sieve_check_130->bitstorage
 17791              	.LBE1034:
 17792              	.LBE1033:
 17793              	# sieve_extend.c:1332:                 int valid = validatePrimeCount(sieve_check,option_verboselev
 17794              		.loc 1 1332 29 view .LVU5796
 17795 0270 89C3     		mov	ebx, eax	# valid, tmp534
 17796              	.LVL1035:
1333:sieve_extend.c ****                 sieve_delete(sieve_check);
 17797              		.loc 1 1333 17 is_stmt 1 view .LVU5797
 17798              	.LBB1036:
 17799              	.LBI1033:
 112:sieve_extend.c ****     free(sieve->bitstorage);
 17800              		.loc 1 112 13 view .LVU5798
 17801              	.LBB1035:
 113:sieve_extend.c ****     free(sieve);
 17802              		.loc 1 113 5 view .LVU5799
 17803 0272 E8000000 		call	free@PLT	#
 17803      00
 17804              	.LVL1036:
 114:sieve_extend.c **** }
 17805              		.loc 1 114 5 view .LVU5800
 17806 0277 4C89FF   		mov	rdi, r15	#, sieve_check
 17807 027a E8000000 		call	free@PLT	#
 17807      00
 17808              	.LVL1037:
 114:sieve_extend.c **** }
 17809              		.loc 1 114 5 is_stmt 0 view .LVU5801
 17810              	.LBE1035:
 17811              	.LBE1036:
1334:sieve_extend.c ****                 if (!valid) return 0; else if (option_verboselevel >= 3) printf("valid;");
GAS LISTING /tmp/ccfflXEb.s 			page 468


 17812              		.loc 1 1334 17 is_stmt 1 view .LVU5802
 17813              	# sieve_extend.c:1334:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17814              		.loc 1 1334 20 is_stmt 0 view .LVU5803
 17815 027f 85DB     		test	ebx, ebx	# valid
 17816 0281 0F84D902 		je	.L1533	#,
 17816      0000
 17817              		.loc 1 1334 44 is_stmt 1 discriminator 2 view .LVU5804
 17818              	# sieve_extend.c:1334:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17819              		.loc 1 1334 68 is_stmt 0 discriminator 2 view .LVU5805
 17820 0287 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 17820      000000
 17821              	# sieve_extend.c:1334:                 if (!valid) return 0; else if (option_verboselevel >= 3) pri
 17822              		.loc 1 1334 47 discriminator 2 view .LVU5806
 17823 028e 83F802   		cmp	eax, 2	# prephitmp_67,
 17824 0291 0F8FE900 		jg	.L1609	#,
 17824      0000
 17825              	.LBE1042:
1329:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17826              		.loc 1 1329 75 is_stmt 1 discriminator 2 view .LVU5807
 17827              	# sieve_extend.c:1329:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1329:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17828              		.loc 1 1329 90 is_stmt 0 discriminator 2 view .LVU5808
 17829 0297 4801ED   		add	rbp, rbp	# blocksize_bits
 17830              	.LVL1038:
1329:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17831              		.loc 1 1329 49 is_stmt 1 discriminator 2 view .LVU5809
 17832              	# sieve_extend.c:1329:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1329:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17833              		.loc 1 1329 13 is_stmt 0 discriminator 2 view .LVU5810
 17834 029a 4183EC01 		sub	r12d, 1	# ivtmp_69,
 17835 029e 0F840301 		je	.L1610	#,
 17835      0000
 17836              	.LVL1039:
 17837              	.L1495:
 17838              	.LBB1043:
1330:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17839              		.loc 1 1330 17 is_stmt 1 view .LVU5811
 17840              	# sieve_extend.c:1330:                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uint
1330:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17841              		.loc 1 1330 20 is_stmt 0 view .LVU5812
 17842 02a4 83F802   		cmp	eax, 2	# prephitmp_67,
 17843 02a7 7EA7     		jle	.L1492	#,
1330:sieve_extend.c ****                 sieve_check = sieve_shake(sieveSize_check, blocksize_bits);
 17844              		.loc 1 1330 47 is_stmt 1 view .LVU5813
 17845              	.LVL1040:
 17846              	.LBB1037:
 17847              	.LBI1030:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17848              		.loc 3 105 1 view .LVU5814
 17849              	.LBB1032:
 17850              		.loc 3 107 3 view .LVU5815
 17851              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17852              		.loc 3 107 10 is_stmt 0 view .LVU5816
 17853 02a9 4889EA   		mov	rdx, rbp	#, blocksize_bits
 17854 02ac 4C89F6   		mov	rsi, r14	#, tmp481
 17855 02af BF010000 		mov	edi, 1	#,
 17855      00
GAS LISTING /tmp/ccfflXEb.s 			page 469


 17856 02b4 31C0     		xor	eax, eax	#
 17857 02b6 E8000000 		call	__printf_chk@PLT	#
 17857      00
 17858              	.LVL1041:
 17859 02bb EB93     		jmp	.L1492	#
 17860              	.LVL1042:
 17861 02bd 0F1F00   		.p2align 4,,7
 17862              		.p2align 3
 17863              	.L1480:
 17864              		.loc 3 107 10 view .LVU5817
 17865              	.LBE1032:
 17866              	.LBE1037:
 17867              	.LBE1043:
 17868              	.LBE1049:
 17869              	.LBE1054:
 17870              	.LBE1058:
 17871              	.LBB1059:
1286:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17872              		.loc 1 1286 14 is_stmt 1 view .LVU5818
 17873              	# sieve_extend.c:1286:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1286:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17874              		.loc 1 1286 18 is_stmt 0 view .LVU5819
 17875 02c0 4C89C9   		mov	rcx, r9	# tmp292, tmp292
 17876 02c3 4C89C6   		mov	rsi, r8	# _4, _4
 17877 02c6 488D3D00 		lea	rdi, .LC40[rip]	# tmp323,
 17877      000000
 17878 02cd F3A6     		repz cmpsb
 17879 02cf 410F97C1 		seta	r9b	#, tmp325
 17880 02d3 4180D900 		sbb	r9b, 0	# _36
 17881              	# sieve_extend.c:1286:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1286:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17882              		.loc 1 1286 17 view .LVU5820
 17883 02d7 4584C9   		test	r9b, r9b	# _36
 17884 02da 756C     		jne	.L1484	#,
1286:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17885              		.loc 1 1286 52 is_stmt 1 discriminator 1 view .LVU5821
 17886              	# sieve_extend.c:1286:         else if (strcmp(argv[arg], "--show")==0) { option_showMaxFactor=0;
1286:sieve_extend.c ****             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\n"); usage(argv[0]); }
 17887              		.loc 1 1286 72 is_stmt 0 discriminator 1 view .LVU5822
 17888 02dc 48C78424 		mov	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 17888      B8000000 
 17888      00000000 
1287:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17889              		.loc 1 1287 13 is_stmt 1 discriminator 1 view .LVU5823
 17890              	# sieve_extend.c:1287:             if (++arg >= argc) { fprintf(stderr, "No show maximum specified\
1287:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17891              		.loc 1 1287 16 is_stmt 0 discriminator 1 view .LVU5824
 17892 02e8 83C301   		add	ebx, 1	# arg,
 17893              	.LVL1043:
1287:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 17894              		.loc 1 1287 16 discriminator 1 view .LVU5825
 17895 02eb 39DD     		cmp	ebp, ebx	# argc, arg
 17896 02ed 0F8E2E0D 		jle	.L1611	#,
 17896      0000
1288:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17897              		.loc 1 1288 13 is_stmt 1 view .LVU5826
 17898              	# sieve_extend.c:1288:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
GAS LISTING /tmp/ccfflXEb.s 			page 470


1288:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17899              		.loc 1 1288 28 is_stmt 0 view .LVU5827
 17900 02f3 4D8D7C04 		lea	r15, 8[r12+rax]	# _41,
 17900      08
 17901              	# sieve_extend.c:1288:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1288:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17902              		.loc 1 1288 17 view .LVU5828
 17903 02f8 488D9424 		lea	rdx, 184[rsp]	# tmp329,
 17903      B8000000 
 17904 0300 498B3F   		mov	rdi, QWORD PTR [r15]	#, *_41
 17905 0303 31C0     		xor	eax, eax	#
 17906 0305 488D3500 		lea	rsi, .LC42[rip]	#,
 17906      000000
 17907 030c E8000000 		call	__isoc99_sscanf@PLT	#
 17907      00
 17908              	.LVL1044:
 17909              	# sieve_extend.c:1288:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1288:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17910              		.loc 1 1288 16 view .LVU5829
 17911 0311 83F801   		cmp	eax, 1	# tmp531,
 17912 0314 0F85CD0C 		jne	.L1486	#,
 17912      0000
 17913              	# sieve_extend.c:1288:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1288:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17914              		.loc 1 1288 106 discriminator 1 view .LVU5830
 17915 031a 488B9424 		mov	rdx, QWORD PTR 184[rsp]	# option_showMaxFactor.24_44, option_showMaxFactor
 17915      B8000000 
 17916              	# sieve_extend.c:1288:             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) 
1288:sieve_extend.c ****                 fprintf(stderr, "Error: Invalid show maximum: %s\n", argv[arg]); usage(argv[0]);
 17917              		.loc 1 1288 82 discriminator 1 view .LVU5831
 17918 0322 483B9424 		cmp	rdx, QWORD PTR 176[rsp]	# option_showMaxFactor.24_44, option_maxFactor
 17918      B0000000 
 17919 032a 0F87B70C 		ja	.L1486	#,
 17919      0000
1291:sieve_extend.c ****         }
 17920              		.loc 1 1291 13 is_stmt 1 view .LVU5832
 17921              	.LVL1045:
 17922              	.LBB1004:
 17923              	.LBI1004:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17924              		.loc 3 105 1 view .LVU5833
 17925              	.LBB1005:
 17926              		.loc 3 107 3 view .LVU5834
 17927              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17928              		.loc 3 107 10 is_stmt 0 view .LVU5835
 17929 0330 488D3500 		lea	rsi, .LC44[rip]	#,
 17929      000000
 17930 0337 BF010000 		mov	edi, 1	#,
 17930      00
 17931 033c 31C0     		xor	eax, eax	#
 17932 033e E8000000 		call	__printf_chk@PLT	#
 17932      00
 17933              	.LVL1046:
 17934 0343 E98DFDFF 		jmp	.L1479	#
 17934      FF
 17935              	.LVL1047:
 17936              		.p2align 4,,7
GAS LISTING /tmp/ccfflXEb.s 			page 471


 17937              		.p2align 3
 17938              	.L1484:
 17939              		.loc 3 107 10 view .LVU5836
 17940              	.LBE1005:
 17941              	.LBE1004:
1293:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17942              		.loc 1 1293 14 is_stmt 1 view .LVU5837
 17943              	# sieve_extend.c:1293:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1293:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17944              		.loc 1 1293 18 is_stmt 0 view .LVU5838
 17945 0348 31C0     		xor	eax, eax	#
 17946 034a 488D9424 		lea	rdx, 176[rsp]	# tmp331,
 17946      B0000000 
 17947 0352 488D3500 		lea	rsi, .LC42[rip]	#,
 17947      000000
 17948 0359 4C89C7   		mov	rdi, r8	#, _4
 17949 035c E8000000 		call	__isoc99_sscanf@PLT	#
 17949      00
 17950              	.LVL1048:
 17951              	# sieve_extend.c:1293:         else if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_maxFactor) != 
1293:sieve_extend.c ****             fprintf(stderr, "Invalid size %s\n",argv[arg]); usage(argv[0]); 
 17952              		.loc 1 1293 17 view .LVU5839
 17953 0361 83F801   		cmp	eax, 1	# tmp532,
 17954 0364 0F846BFD 		je	.L1479	#,
 17954      FFFF
1294:sieve_extend.c ****             printf("Maximum set to %ju\n",(uintmax_t)option_maxFactor);
 17955              		.loc 1 1294 13 is_stmt 1 view .LVU5840
 17956              	.LVL1049:
 17957              	.LBB1006:
 17958              	.LBI1006:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17959              		.loc 3 98 1 view .LVU5841
 17960              	.LBB1007:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17961              		.loc 3 100 3 view .LVU5842
 17962              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17963              		.loc 3 100 10 is_stmt 0 view .LVU5843
 17964 036a 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_3
 17965 036d 488D1500 		lea	rdx, .LC45[rip]	#,
 17965      000000
 17966 0374 E94F0200 		jmp	.L1602	#
 17966      00
 17967              	.LVL1050:
 17968 0379 0F1F8000 		.p2align 4,,7
 17968      000000
 17969              		.p2align 3
 17970              	.L1609:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 17971              		.loc 3 100 10 view .LVU5844
 17972              	.LBE1007:
 17973              	.LBE1006:
 17974              	.LBE1059:
 17975              	.LBB1060:
 17976              	.LBB1055:
 17977              	.LBB1050:
 17978              	.LBB1044:
GAS LISTING /tmp/ccfflXEb.s 			page 472


 17979              		.loc 1 1334 74 is_stmt 1 view .LVU5845
 17980              	.LBB1038:
 17981              	.LBI1038:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 17982              		.loc 3 105 1 view .LVU5846
 17983              	.LBB1039:
 17984              		.loc 3 107 3 view .LVU5847
 17985              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 17986              		.loc 3 107 10 is_stmt 0 view .LVU5848
 17987 0380 31C0     		xor	eax, eax	#
 17988 0382 488D3500 		lea	rsi, .LC49[rip]	#,
 17988      000000
 17989 0389 BF010000 		mov	edi, 1	#,
 17989      00
 17990              	.LBE1039:
 17991              	.LBE1038:
 17992              	.LBE1044:
 17993              	# sieve_extend.c:1329:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1329:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 17994              		.loc 1 1329 90 view .LVU5849
 17995 038e 4801ED   		add	rbp, rbp	# blocksize_bits
 17996              	.LVL1051:
 17997              	.LBB1045:
 17998              	.LBB1041:
 17999              	.LBB1040:
 18000              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18001              		.loc 3 107 10 view .LVU5850
 18002 0391 E8000000 		call	__printf_chk@PLT	#
 18002      00
 18003              	.LVL1052:
 18004 0396 8B8424A8 		mov	eax, DWORD PTR 168[rsp]	# prephitmp_67, option_verboselevel
 18004      000000
 18005              	.LVL1053:
 18006              		.loc 3 107 10 view .LVU5851
 18007              	.LBE1040:
 18008              	.LBE1041:
 18009              	.LBE1045:
1329:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18010              		.loc 1 1329 75 is_stmt 1 view .LVU5852
1329:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18011              		.loc 1 1329 49 view .LVU5853
 18012              	# sieve_extend.c:1329:             for (counter_t blocksize_bits=1024; blocksize_bits<=2*1024*8; bl
1329:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18013              		.loc 1 1329 13 is_stmt 0 view .LVU5854
 18014 039d 4183EC01 		sub	r12d, 1	# ivtmp_69,
 18015 03a1 0F85FDFE 		jne	.L1495	#,
 18015      FFFF
 18016              	.L1610:
1329:sieve_extend.c ****                 if (option_verboselevel >= 3) printf(".blocksize %ju-",(uintmax_t)blocksize_bits);
 18017              		.loc 1 1329 13 view .LVU5855
 18018              	.LBE1050:
1335:sieve_extend.c ****             }
1336:sieve_extend.c ****             if (option_verboselevel >= 2) printf("\n");
 18019              		.loc 1 1336 13 is_stmt 1 view .LVU5856
 18020              	# sieve_extend.c:1336:             if (option_verboselevel >= 2) printf("\n");
 18021              		.loc 1 1336 16 is_stmt 0 view .LVU5857
 18022 03a7 83F801   		cmp	eax, 1	# prephitmp_67,
GAS LISTING /tmp/ccfflXEb.s 			page 473


 18023 03aa 7E0A     		jle	.L1496	#,
 18024              		.loc 1 1336 43 is_stmt 1 view .LVU5858
 18025              	.LVL1054:
 18026              	.LBB1051:
 18027              	.LBI1051:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18028              		.loc 3 105 1 view .LVU5859
 18029              	.LBB1052:
 18030              		.loc 3 107 3 view .LVU5860
 18031              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18032              		.loc 3 107 10 is_stmt 0 view .LVU5861
 18033 03ac BF0A0000 		mov	edi, 10	#,
 18033      00
 18034 03b1 E8000000 		call	putchar@PLT	#
 18034      00
 18035              	.LVL1055:
 18036              	.L1496:
 18037              		.loc 3 107 10 view .LVU5862
 18038              	.LBE1052:
 18039              	.LBE1051:
 18040              	.LBE1055:
1326:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18041              		.loc 1 1326 75 is_stmt 1 discriminator 2 view .LVU5863
 18042              	# sieve_extend.c:1326:         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; si
1326:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18043              		.loc 1 1326 91 is_stmt 0 discriminator 2 view .LVU5864
 18044 03b6 4F8D6CAD 		lea	r13, 0[r13+r13*4]	# tmp337,
 18044      00
 18045              	.LVL1056:
1326:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18046              		.loc 1 1326 91 discriminator 2 view .LVU5865
 18047 03bb 4D01ED   		add	r13, r13	# sieveSize_check
 18048              	.LVL1057:
1326:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18049              		.loc 1 1326 47 is_stmt 1 discriminator 2 view .LVU5866
 18050              	# sieve_extend.c:1326:         for (counter_t sieveSize_check = 100; sieveSize_check <= 1000000; si
1326:sieve_extend.c ****             if (option_verboselevel >= 2) printf("...Checking size %ju ...",(uintmax_t)sieveSize_ch
 18051              		.loc 1 1326 9 is_stmt 0 discriminator 2 view .LVU5867
 18052 03be 836C2428 		sub	DWORD PTR 40[rsp], 1	# %sfp,
 18052      01
 18053 03c3 0F854FFE 		jne	.L1497	#,
 18053      FFFF
 18054              	.LBE1060:
1337:sieve_extend.c ****         }
1338:sieve_extend.c ****         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 18055              		.loc 1 1338 9 is_stmt 1 view .LVU5868
 18056              	# sieve_extend.c:1338:         if (option_verboselevel >= 1) printf("...Valid algorithm\n");
 18057              		.loc 1 1338 12 is_stmt 0 view .LVU5869
 18058 03c9 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 18058      00000000 
 18059 03d1 0F8FCC09 		jg	.L1612	#,
 18059      0000
1339:sieve_extend.c ****     }
1340:sieve_extend.c ****     
1341:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 18060              		.loc 1 1341 5 is_stmt 1 view .LVU5870
 18061              	.LVL1058:
GAS LISTING /tmp/ccfflXEb.s 			page 474


1342:sieve_extend.c ****     if (option_tunelevel) {
 18062              		.loc 1 1342 5 view .LVU5871
 18063              	# sieve_extend.c:1342:     if (option_tunelevel) {
 18064              		.loc 1 1342 9 is_stmt 0 view .LVU5872
 18065 03d7 448B8424 		mov	r8d, DWORD PTR 172[rsp]	# option_tunelevel.41_405, option_tunelevel
 18065      AC000000 
 18066              	# sieve_extend.c:1341:     counter_t best_blocksize_bits = default_blocksize;
1341:sieve_extend.c ****     if (option_tunelevel) {
 18067              		.loc 1 1341 15 view .LVU5873
 18068 03df 41BC0000 		mov	r12d, 262144	# best_result$blocksize_bits,
 18068      0400
 18069              	# sieve_extend.c:1342:     if (option_tunelevel) {
 18070              		.loc 1 1342 8 view .LVU5874
 18071 03e5 4585C0   		test	r8d, r8d	# option_tunelevel.41_405
 18072 03e8 0F85B802 		jne	.L1613	#,
 18072      0000
 18073              	.LVL1059:
 18074              	.L1526:
 18075              	.LBB1061:
1343:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
1344:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1345:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1346:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1347:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
1348:sieve_extend.c ****     }
1349:sieve_extend.c **** 
1350:sieve_extend.c ****     double max_time = default_sieve_duration;
1351:sieve_extend.c ****     if (best_blocksize_bits > 0) {
1352:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
1353:sieve_extend.c ****         counter_t passes = 0;
 18076              		.loc 1 1353 9 is_stmt 1 view .LVU5875
1354:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 18077              		.loc 1 1354 9 view .LVU5876
1355:sieve_extend.c ****         double elapsed_time = 0;
 18078              		.loc 1 1355 9 view .LVU5877
1356:sieve_extend.c ****         struct sieve_t *sieve;
 18079              		.loc 1 1356 9 view .LVU5878
1357:sieve_extend.c ****         clock_gettime(CLOCK_MONOTONIC,&start_time);
 18080              		.loc 1 1357 9 view .LVU5879
 18081 03ee 488DB424 		lea	rsi, 192[rsp]	# tmp440,
 18081      C0000000 
 18082 03f6 BF010000 		mov	edi, 1	#,
 18082      00
 18083 03fb E8000000 		call	clock_gettime@PLT	#
 18083      00
 18084              	.LVL1060:
1358:sieve_extend.c ****         while (elapsed_time <= max_time) {
 18085              		.loc 1 1358 9 view .LVU5880
 18086              		.loc 1 1358 15 view .LVU5881
 18087              	# sieve_extend.c:1353:         counter_t passes = 0;
1353:sieve_extend.c ****         counter_t blocksize_bits = best_blocksize_bits;
 18088              		.loc 1 1353 19 is_stmt 0 view .LVU5882
 18089 0400 4531FF   		xor	r15d, r15d	# passes
 18090 0403 4C8DAC24 		lea	r13, 208[rsp]	# tmp464,
 18090      D0000000 
 18091              	.LVL1061:
 18092              	.L1527:
GAS LISTING /tmp/ccfflXEb.s 			page 475


1359:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 18093              		.loc 1 1359 13 is_stmt 1 view .LVU5883
 18094              	# sieve_extend.c:1359:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
 18095              		.loc 1 1359 21 is_stmt 0 view .LVU5884
 18096 040b 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	#, option_maxFactor
 18096      B0000000 
 18097 0413 4C89E6   		mov	rsi, r12	#, best_result$blocksize_bits
 18098              	# sieve_extend.c:1361:             passes++;
1360:sieve_extend.c ****             sieve_delete(sieve);
1361:sieve_extend.c ****             passes++;
 18099              		.loc 1 1361 19 view .LVU5885
 18100 0416 4983C701 		add	r15, 1	# passes,
 18101              	# sieve_extend.c:1359:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1359:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 18102              		.loc 1 1359 21 view .LVU5886
 18103 041a E8000000 		call	sieve_shake	#
 18103      00
 18104              	.LVL1062:
 18105              	.LBB1062:
 18106              	.LBB1063:
 18107              	# sieve_extend.c:113:     free(sieve->bitstorage);
 113:sieve_extend.c ****     free(sieve);
 18108              		.loc 1 113 5 view .LVU5887
 18109 041f 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_148->bitstorage
 18110              	.LBE1063:
 18111              	.LBE1062:
 18112              	# sieve_extend.c:1359:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1359:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 18113              		.loc 1 1359 21 view .LVU5888
 18114 0422 4989C6   		mov	r14, rax	# sieve, tmp536
 18115              	.LVL1063:
1360:sieve_extend.c ****             sieve_delete(sieve);
 18116              		.loc 1 1360 13 is_stmt 1 view .LVU5889
 18117              	.LBB1067:
 18118              	.LBI1062:
 112:sieve_extend.c ****     free(sieve->bitstorage);
 18119              		.loc 1 112 13 view .LVU5890
 18120              	.LBB1064:
 113:sieve_extend.c ****     free(sieve);
 18121              		.loc 1 113 5 view .LVU5891
 18122 0425 E8000000 		call	free@PLT	#
 18122      00
 18123              	.LVL1064:
 114:sieve_extend.c **** }
 18124              		.loc 1 114 5 view .LVU5892
 18125 042a 4C89F7   		mov	rdi, r14	#, sieve
 18126 042d E8000000 		call	free@PLT	#
 18126      00
 18127              	.LVL1065:
 114:sieve_extend.c **** }
 18128              		.loc 1 114 5 is_stmt 0 view .LVU5893
 18129              	.LBE1064:
 18130              	.LBE1067:
 18131              		.loc 1 1361 13 is_stmt 1 view .LVU5894
1362:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 18132              		.loc 1 1362 13 view .LVU5895
 18133 0432 4C89EE   		mov	rsi, r13	#, tmp464
GAS LISTING /tmp/ccfflXEb.s 			page 476


 18134 0435 BF010000 		mov	edi, 1	#,
 18134      00
 18135 043a E8000000 		call	clock_gettime@PLT	#
 18135      00
 18136              	.LVL1066:
1363:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 18137              		.loc 1 1363 13 view .LVU5896
 18138              	# sieve_extend.c:1363:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18139              		.loc 1 1363 62 is_stmt 0 view .LVU5897
 18140 043f C4E1D32A 		vcvtsi2sd	xmm5, xmm5, QWORD PTR 216[rsp]	# tmp443, end_time.tv_nsec
 18140      AC24D800 
 18140      0000
 18141              	# sieve_extend.c:1363:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18142              		.loc 1 1363 68 view .LVU5898
 18143 0449 C4E1EB2A 		vcvtsi2sd	xmm2, xmm2, QWORD PTR 192[rsp]	# tmp444, start_time.tv_sec
 18143      9424C000 
 18143      0000
 18144              	# sieve_extend.c:1363:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18145              		.loc 1 1363 108 view .LVU5899
 18146 0453 C461BB2A 		vcvtsi2sd	xmm8, xmm8, QWORD PTR 200[rsp]	# tmp446, start_time.tv_nsec
 18146      8424C800 
 18146      0000
 18147              	# sieve_extend.c:1363:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18148              		.loc 1 1363 44 view .LVU5900
 18149 045d C461B32A 		vcvtsi2sd	xmm9, xmm9, QWORD PTR 208[rsp]	# tmp447, end_time.tv_sec
 18149      8C24D000 
 18149      0000
 18150              	# sieve_extend.c:1358:         while (elapsed_time <= max_time) {
1358:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 18151              		.loc 1 1358 15 view .LVU5901
 18152 0467 C57B1015 		vmovsd	xmm10, QWORD PTR .LC61[rip]	# tmp649,
 18152      00000000 
 18153 046f C4E2E99B 		vfmsub132sd	xmm5, xmm2, QWORD PTR .LC8[rip]	# _305, tmp444,
 18153      2D000000 
 18153      00
 18154 0478 C462B19D 		vfnmadd132sd	xmm8, xmm9, QWORD PTR .LC8[rip]	# _306, tmp447,
 18154      05000000 
 18154      00
 18155              	# sieve_extend.c:1363:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18156              		.loc 1 1363 26 view .LVU5902
 18157 0481 C4C15358 		vaddsd	xmm0, xmm5, xmm8	# elapsed_time, _305, _306
 18157      C0
 18158              	.LVL1067:
1358:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 18159              		.loc 1 1358 15 is_stmt 1 view .LVU5903
 18160 0486 C5792FD0 		vcomisd	xmm10, xmm0	# tmp649, elapsed_time
 18161 048a 0F828500 		jb	.L1599	#,
 18161      0000
 18162              	.LVL1068:
1359:sieve_extend.c ****             sieve_delete(sieve);
 18163              		.loc 1 1359 13 view .LVU5904
 18164              	# sieve_extend.c:1359:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1359:sieve_extend.c ****             sieve_delete(sieve);
 18165              		.loc 1 1359 21 is_stmt 0 view .LVU5905
 18166 0490 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	#, option_maxFactor
 18166      B0000000 
 18167 0498 4C89E6   		mov	rsi, r12	#, best_result$blocksize_bits
GAS LISTING /tmp/ccfflXEb.s 			page 477


 18168              	# sieve_extend.c:1361:             passes++;
1361:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 18169              		.loc 1 1361 19 view .LVU5906
 18170 049b 4983C701 		add	r15, 1	# passes,
 18171              	# sieve_extend.c:1359:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1359:sieve_extend.c ****             sieve_delete(sieve);
 18172              		.loc 1 1359 21 view .LVU5907
 18173 049f E8000000 		call	sieve_shake	#
 18173      00
 18174              	.LVL1069:
 18175              	.LBB1068:
 18176              	.LBB1065:
 18177              	# sieve_extend.c:113:     free(sieve->bitstorage);
 113:sieve_extend.c ****     free(sieve);
 18178              		.loc 1 113 5 view .LVU5908
 18179 04a4 488B38   		mov	rdi, QWORD PTR [rax]	#, sieve_148->bitstorage
 18180              	.LBE1065:
 18181              	.LBE1068:
 18182              	# sieve_extend.c:1359:             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksiz
1359:sieve_extend.c ****             sieve_delete(sieve);
 18183              		.loc 1 1359 21 view .LVU5909
 18184 04a7 4889C5   		mov	rbp, rax	# sieve, tmp538
1360:sieve_extend.c ****             passes++;
 18185              		.loc 1 1360 13 is_stmt 1 view .LVU5910
 18186              	.LVL1070:
 18187              	.LBB1069:
 112:sieve_extend.c ****     free(sieve->bitstorage);
 18188              		.loc 1 112 13 view .LVU5911
 18189              	.LBB1066:
 113:sieve_extend.c ****     free(sieve);
 18190              		.loc 1 113 5 view .LVU5912
 18191 04aa E8000000 		call	free@PLT	#
 18191      00
 18192              	.LVL1071:
 114:sieve_extend.c **** }
 18193              		.loc 1 114 5 view .LVU5913
 18194 04af 4889EF   		mov	rdi, rbp	#, sieve
 18195 04b2 E8000000 		call	free@PLT	#
 18195      00
 18196              	.LVL1072:
 114:sieve_extend.c **** }
 18197              		.loc 1 114 5 is_stmt 0 view .LVU5914
 18198              	.LBE1066:
 18199              	.LBE1069:
1361:sieve_extend.c ****             clock_gettime(CLOCK_MONOTONIC,&end_time);
 18200              		.loc 1 1361 13 is_stmt 1 view .LVU5915
1362:sieve_extend.c ****             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_time.tv_sec - start_time
 18201              		.loc 1 1362 13 view .LVU5916
 18202 04b7 4C89EE   		mov	rsi, r13	#, tmp464
 18203 04ba BF010000 		mov	edi, 1	#,
 18203      00
 18204 04bf E8000000 		call	clock_gettime@PLT	#
 18204      00
 18205              	.LVL1073:
 18206              		.loc 1 1363 13 view .LVU5917
 18207              	# sieve_extend.c:1363:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18208              		.loc 1 1363 62 is_stmt 0 view .LVU5918
GAS LISTING /tmp/ccfflXEb.s 			page 478


 18209 04c4 C461A32A 		vcvtsi2sd	xmm11, xmm11, QWORD PTR 216[rsp]	# tmp521, end_time.tv_nsec
 18209      9C24D800 
 18209      0000
 18210              	# sieve_extend.c:1363:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18211              		.loc 1 1363 68 view .LVU5919
 18212 04ce C4619B2A 		vcvtsi2sd	xmm12, xmm12, QWORD PTR 192[rsp]	# tmp522, start_time.tv_sec
 18212      A424C000 
 18212      0000
 18213              	# sieve_extend.c:1363:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18214              		.loc 1 1363 108 view .LVU5920
 18215 04d8 C461932A 		vcvtsi2sd	xmm13, xmm13, QWORD PTR 200[rsp]	# tmp524, start_time.tv_nsec
 18215      AC24C800 
 18215      0000
 18216              	# sieve_extend.c:1363:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18217              		.loc 1 1363 44 view .LVU5921
 18218 04e2 C4618B2A 		vcvtsi2sd	xmm14, xmm14, QWORD PTR 208[rsp]	# tmp525, end_time.tv_sec
 18218      B424D000 
 18218      0000
 18219              	# sieve_extend.c:1358:         while (elapsed_time <= max_time) {
1358:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 18220              		.loc 1 1358 15 view .LVU5922
 18221 04ec C57B103D 		vmovsd	xmm15, QWORD PTR .LC61[rip]	# tmp656,
 18221      00000000 
 18222 04f4 C462999B 		vfmsub132sd	xmm11, xmm12, QWORD PTR .LC8[rip]	# _305, tmp522,
 18222      1D000000 
 18222      00
 18223 04fd C462899D 		vfnmadd132sd	xmm13, xmm14, QWORD PTR .LC8[rip]	# _306, tmp525,
 18223      2D000000 
 18223      00
 18224              	# sieve_extend.c:1363:             elapsed_time = end_time.tv_sec + end_time.tv_nsec*1e-9 - start_t
 18225              		.loc 1 1363 26 view .LVU5923
 18226 0506 C4C12358 		vaddsd	xmm0, xmm11, xmm13	# elapsed_time, _305, _306
 18226      C5
 18227              	.LVL1074:
1358:sieve_extend.c ****             sieve = sieve_shake(option_maxFactor, blocksize_bits);//blocksize_bits);
 18228              		.loc 1 1358 15 is_stmt 1 view .LVU5924
 18229 050b C5792FF8 		vcomisd	xmm15, xmm0	# tmp656, elapsed_time
 18230 050f 0F83F6FE 		jnb	.L1527	#,
 18230      FFFF
 18231              	.L1599:
1364:sieve_extend.c ****         }
1365:sieve_extend.c ****         printf("rogiervandam_extend;%ju;%f;1;algorithm=other,faithful=yes,bits=1\n", (uintmax_t)pas
 18232              		.loc 1 1365 9 view .LVU5925
 18233              	.LVL1075:
 18234              	.LBB1070:
 18235              	.LBI1070:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18236              		.loc 3 105 1 view .LVU5926
 18237              	.LBB1071:
 18238              		.loc 3 107 3 view .LVU5927
 18239              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18240              		.loc 3 107 10 is_stmt 0 view .LVU5928
 18241 0515 4C89FA   		mov	rdx, r15	#, passes
 18242 0518 488D3500 		lea	rsi, .LC62[rip]	#,
 18242      000000
 18243 051f BF010000 		mov	edi, 1	#,
 18243      00
GAS LISTING /tmp/ccfflXEb.s 			page 479


 18244 0524 B8010000 		mov	eax, 1	#,
 18244      00
 18245 0529 C5FB1144 		vmovsd	QWORD PTR 40[rsp], xmm0	# %sfp, elapsed_time
 18245      2428
 18246 052f E8000000 		call	__printf_chk@PLT	#
 18246      00
 18247              	.LVL1076:
 18248              		.loc 3 107 10 view .LVU5929
 18249              	.LBE1071:
 18250              	.LBE1070:
1366:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - per second %f\n", 5*pass
 18251              		.loc 1 1366 9 is_stmt 1 view .LVU5930
 18252              	# sieve_extend.c:1366:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
 18253              		.loc 1 1366 12 is_stmt 0 view .LVU5931
 18254 0534 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 18254      00000000 
 18255 053c 0F8FF500 		jg	.L1614	#,
 18255      0000
 18256              	.LVL1077:
 18257              	.L1525:
 18258              		.loc 1 1366 12 view .LVU5932
 18259              	.LBE1061:
1367:sieve_extend.c ****     }
1368:sieve_extend.c ****     
1369:sieve_extend.c ****     if (option_showMaxFactor > 0) {
 18260              		.loc 1 1369 5 is_stmt 1 view .LVU5933
 18261              	# sieve_extend.c:1369:     if (option_showMaxFactor > 0) {
 18262              		.loc 1 1369 8 is_stmt 0 view .LVU5934
 18263 0542 4883BC24 		cmp	QWORD PTR 184[rsp], 0	# option_showMaxFactor,
 18263      B8000000 
 18263      00
 18264 054b 0F859300 		jne	.L1615	#,
 18264      0000
 18265 0551 66662E0F 		.p2align 4
 18265      1F840000 
 18265      0000000F 
 18265      1F4000
 18266              		.p2align 3
 18267              	.L1533:
 18268              	.LBB1078:
 18269              	.LBB1056:
 18270              	.LBB1053:
 18271              	.LBB1046:
1334:sieve_extend.c ****             }
 18272              		.loc 1 1334 29 is_stmt 1 discriminator 1 view .LVU5935
 18273              	.LBE1046:
 18274              	.LBE1053:
 18275              	.LBE1056:
 18276              	.LBE1078:
 18277              	# sieve_extend.c:1376: }
1370:sieve_extend.c ****         printf("Show result set:\n");
1371:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
1372:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
1373:sieve_extend.c ****         sieve_delete(sieve);
1374:sieve_extend.c ****         printf("\n");
1375:sieve_extend.c ****     }
1376:sieve_extend.c **** }
GAS LISTING /tmp/ccfflXEb.s 			page 480


 18278              		.loc 1 1376 1 is_stmt 0 discriminator 1 view .LVU5936
 18279 0560 488B8424 		mov	rax, QWORD PTR 232[rsp]	# tmp572, D.7629
 18279      E8000000 
 18280 0568 64483304 		xor	rax, QWORD PTR fs:40	# tmp572, MEM[(<address-space-1> long unsigned int *)40B]
 18280      25280000 
 18280      00
 18281 0571 0F85A50A 		jne	.L1616	#,
 18281      0000
 18282              	# sieve_extend.c:1376: }
 18283              		.loc 1 1376 1 view .LVU5937
 18284 0577 488DA424 		lea	rsp, 248[rsp]	#,
 18284      F8000000 
 18285              		.cfi_remember_state
 18286              		.cfi_def_cfa_offset 56
 18287 057f 31C0     		xor	eax, eax	#
 18288 0581 5B       		pop	rbx	#
 18289              		.cfi_def_cfa_offset 48
 18290 0582 5D       		pop	rbp	#
 18291              		.cfi_def_cfa_offset 40
 18292 0583 415C     		pop	r12	#
 18293              		.cfi_def_cfa_offset 32
 18294 0585 415D     		pop	r13	#
 18295              		.cfi_def_cfa_offset 24
 18296 0587 415E     		pop	r14	#
 18297              		.cfi_def_cfa_offset 16
 18298 0589 415F     		pop	r15	#
 18299              		.cfi_def_cfa_offset 8
 18300 058b C3       		ret	
 18301              	.L1488:
 18302              		.cfi_restore_state
1316:sieve_extend.c ****         #endif
 18303              		.loc 1 1316 13 is_stmt 1 view .LVU5938
 18304              	.LVL1078:
 18305              	.LBB1079:
 18306              	.LBI1079:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18307              		.loc 3 105 1 view .LVU5939
 18308              	.LBB1080:
 18309              		.loc 3 107 3 view .LVU5940
 18310              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18311              		.loc 3 107 10 is_stmt 0 view .LVU5941
 18312 058c 488D3D00 		lea	rdi, .LC29[rip]	#,
 18312      000000
 18313 0593 E8000000 		call	puts@PLT	#
 18313      00
 18314              	.LVL1079:
 18315              		.loc 3 107 10 view .LVU5942
 18316              	.LBE1080:
 18317              	.LBE1079:
1320:sieve_extend.c ****         // Count the number of primes and validate the result
 18318              		.loc 1 1320 5 is_stmt 1 view .LVU5943
1322:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18319              		.loc 1 1322 9 view .LVU5944
 18320              	# sieve_extend.c:1322:         if (option_verboselevel >= 1) printf("Validating... ");
1322:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18321              		.loc 1 1322 12 is_stmt 0 view .LVU5945
 18322 0598 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
GAS LISTING /tmp/ccfflXEb.s 			page 481


 18322      00000000 
 18323 05a0 0F8E49FC 		jle	.L1489	#,
 18323      FFFF
1322:sieve_extend.c ****         if (option_verboselevel >= 2) printf("\n");
 18324              		.loc 1 1322 39 is_stmt 1 view .LVU5946
 18325              	.LVL1080:
 18326              	.LBB1081:
 18327              	.LBI1081:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18328              		.loc 3 105 1 view .LVU5947
 18329              	.LBB1082:
 18330              		.loc 3 107 3 view .LVU5948
 18331              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18332              		.loc 3 107 10 is_stmt 0 view .LVU5949
 18333 05a6 488D3500 		lea	rsi, .LC46[rip]	#,
 18333      000000
 18334 05ad BF010000 		mov	edi, 1	#,
 18334      00
 18335 05b2 31C0     		xor	eax, eax	#
 18336 05b4 E8000000 		call	__printf_chk@PLT	#
 18336      00
 18337              	.LVL1081:
 18338 05b9 E931FCFF 		jmp	.L1489	#
 18338      FF
 18339              	.LVL1082:
 18340              	.L1477:
 18341              		.loc 3 107 10 view .LVU5950
 18342              	.LBE1082:
 18343              	.LBE1081:
 18344              	.LBB1083:
1274:sieve_extend.c ****             }
 18345              		.loc 1 1274 17 is_stmt 1 view .LVU5951
 18346              	.LBB1008:
 18347              	.LBI1008:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18348              		.loc 3 98 1 view .LVU5952
 18349              	.LBB1009:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18350              		.loc 3 100 3 view .LVU5953
 18351              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18352              		.loc 3 100 10 is_stmt 0 view .LVU5954
 18353 05be 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_16
 18354 05c1 488D1500 		lea	rdx, .LC33[rip]	#,
 18354      000000
 18355              	.LVL1083:
 18356              	.L1602:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18357              		.loc 3 100 10 view .LVU5955
 18358              	.LBE1009:
 18359              	.LBE1008:
 18360              	.LBB1010:
 18361              	.LBB1011:
 18362 05c8 488B3D00 		mov	rdi, QWORD PTR stderr[rip]	#, stderr
 18362      000000
 18363 05cf BE010000 		mov	esi, 1	#,
 18363      00
GAS LISTING /tmp/ccfflXEb.s 			page 482


 18364 05d4 31C0     		xor	eax, eax	#
 18365 05d6 E8000000 		call	__fprintf_chk@PLT	#
 18365      00
 18366              	.LVL1084:
 18367              	.L1603:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 18368              		.loc 3 100 10 view .LVU5956
 18369              	.LBE1011:
 18370              	.LBE1010:
1282:sieve_extend.c ****             }
 18371              		.loc 1 1282 80 is_stmt 1 view .LVU5957
 18372 05db 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 18373 05df E8000000 		call	usage	#
 18373      00
 18374              	.LVL1085:
 18375              	.L1615:
1282:sieve_extend.c ****             }
 18376              		.loc 1 1282 80 is_stmt 0 view .LVU5958
 18377              	.LBE1083:
 18378              	.LBB1084:
1370:sieve_extend.c ****         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFactor);
 18379              		.loc 1 1370 9 is_stmt 1 view .LVU5959
 18380              	.LBB1085:
 18381              	.LBI1085:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18382              		.loc 3 105 1 view .LVU5960
 18383              	.LBB1086:
 18384              		.loc 3 107 3 view .LVU5961
 18385              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18386              		.loc 3 107 10 is_stmt 0 view .LVU5962
 18387 05e4 488D3D00 		lea	rdi, .LC64[rip]	#,
 18387      000000
 18388 05eb E8000000 		call	puts@PLT	#
 18388      00
 18389              	.LVL1086:
 18390              		.loc 3 107 10 view .LVU5963
 18391              	.LBE1086:
 18392              	.LBE1085:
1371:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 18393              		.loc 1 1371 9 is_stmt 1 view .LVU5964
 18394              	# sieve_extend.c:1371:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFact
1371:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 18395              		.loc 1 1371 33 is_stmt 0 view .LVU5965
 18396 05f0 488BBC24 		mov	rdi, QWORD PTR 176[rsp]	# option_maxFactor.52_94, option_maxFactor
 18396      B0000000 
 18397 05f8 4889FE   		mov	rsi, rdi	#, option_maxFactor.52_94
 18398 05fb E8000000 		call	sieve_shake	#
 18398      00
 18399              	.LVL1087:
 18400              	# sieve_extend.c:1372:         show_primes(sieve, option_showMaxFactor);
1372:sieve_extend.c ****         sieve_delete(sieve);
 18401              		.loc 1 1372 9 view .LVU5966
 18402 0600 488B9424 		mov	rdx, QWORD PTR 184[rsp]	#, option_showMaxFactor
 18402      B8000000 
 18403              	# sieve_extend.c:1371:         struct sieve_t* sieve = sieve_shake(option_maxFactor, option_maxFact
1371:sieve_extend.c ****         show_primes(sieve, option_showMaxFactor);
 18404              		.loc 1 1371 33 view .LVU5967
GAS LISTING /tmp/ccfflXEb.s 			page 483


 18405 0608 4989C4   		mov	r12, rax	# sieve, tmp537
 18406              	.LVL1088:
1372:sieve_extend.c ****         sieve_delete(sieve);
 18407              		.loc 1 1372 9 is_stmt 1 view .LVU5968
 18408 060b 488D7008 		lea	rsi, 8[rax]	# tmp462,
 18409 060f 4889C7   		mov	rdi, rax	#, sieve
 18410 0612 E8000000 		call	show_primes.isra.0	#
 18410      00
 18411              	.LVL1089:
1373:sieve_extend.c ****         printf("\n");
 18412              		.loc 1 1373 9 view .LVU5969
 18413              	.LBB1087:
 18414              	.LBI1087:
 112:sieve_extend.c ****     free(sieve->bitstorage);
 18415              		.loc 1 112 13 view .LVU5970
 18416              	.LBB1088:
 113:sieve_extend.c ****     free(sieve);
 18417              		.loc 1 113 5 view .LVU5971
 18418 0617 498B3C24 		mov	rdi, QWORD PTR [r12]	#, sieve_153->bitstorage
 18419 061b E8000000 		call	free@PLT	#
 18419      00
 18420              	.LVL1090:
 114:sieve_extend.c **** }
 18421              		.loc 1 114 5 view .LVU5972
 18422 0620 4C89E7   		mov	rdi, r12	#, sieve
 18423 0623 E8000000 		call	free@PLT	#
 18423      00
 18424              	.LVL1091:
 114:sieve_extend.c **** }
 18425              		.loc 1 114 5 is_stmt 0 view .LVU5973
 18426              	.LBE1088:
 18427              	.LBE1087:
1374:sieve_extend.c ****     }
 18428              		.loc 1 1374 9 is_stmt 1 view .LVU5974
 18429              	.LBB1089:
 18430              	.LBI1089:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18431              		.loc 3 105 1 view .LVU5975
 18432              	.LBB1090:
 18433              		.loc 3 107 3 view .LVU5976
 18434              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18435              		.loc 3 107 10 is_stmt 0 view .LVU5977
 18436 0628 BF0A0000 		mov	edi, 10	#,
 18436      00
 18437 062d E8000000 		call	putchar@PLT	#
 18437      00
 18438              	.LVL1092:
 18439 0632 E929FFFF 		jmp	.L1533	#
 18439      FF
 18440              	.LVL1093:
 18441              	.L1614:
 18442              		.loc 3 107 10 view .LVU5978
 18443              	.LBE1090:
 18444              	.LBE1089:
 18445              	.LBE1084:
 18446              	.LBB1091:
1366:sieve_extend.c ****     }
GAS LISTING /tmp/ccfflXEb.s 			page 484


 18447              		.loc 1 1366 39 is_stmt 1 discriminator 1 view .LVU5979
 18448              	.LBB1072:
 18449              	.LBI1072:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18450              		.loc 3 105 1 discriminator 1 view .LVU5980
 18451              	.LBB1073:
 18452              		.loc 3 107 3 discriminator 1 view .LVU5981
 18453              	.LBE1073:
 18454              	.LBE1072:
 18455              	# sieve_extend.c:1366:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1366:sieve_extend.c ****     }
 18456              		.loc 1 1366 39 is_stmt 0 discriminator 1 view .LVU5982
 18457 0637 C4C1FB2A 		vcvtsi2sd	xmm0, xmm0, r15	# tmp450, passes
 18457      C7
 18458 063c 4D85FF   		test	r15, r15	# passes
 18459 063f C5FB1074 		vmovsd	xmm6, QWORD PTR 40[rsp]	# elapsed_time, %sfp
 18459      2428
 18460 0645 7919     		jns	.L1530	#,
 18461 0647 4C89F9   		mov	rcx, r15	# tmp452, passes
 18462 064a 4D89FA   		mov	r10, r15	# tmp453, passes
 18463 064d 48D1E9   		shr	rcx	# tmp452
 18464 0650 4183E201 		and	r10d, 1	# tmp453,
 18465 0654 4C09D1   		or	rcx, r10	# tmp517, tmp453
 18466 0657 C4E1C32A 		vcvtsi2sd	xmm7, xmm7, rcx	# tmp451, tmp517
 18466      F9
 18467 065c C5C358C7 		vaddsd	xmm0, xmm7, xmm7	# tmp450, tmp451, tmp451
 18468              	.L1530:
1366:sieve_extend.c ****     }
 18469              		.loc 1 1366 39 discriminator 1 view .LVU5983
 18470 0660 C5FB5ECE 		vdivsd	xmm1, xmm0, xmm6	# tmp454, tmp450, elapsed_time
 18471              	# sieve_extend.c:1366:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1366:sieve_extend.c ****     }
 18472              		.loc 1 1366 95 discriminator 1 view .LVU5984
 18473 0664 4B8D14BF 		lea	rdx, [r15+r15*4]	# tmp455,
 18474              	# sieve_extend.c:1366:         if (option_verboselevel >= 1) printf("Passes - per 5 seconds: %f - p
1366:sieve_extend.c ****     }
 18475              		.loc 1 1366 39 discriminator 1 view .LVU5985
 18476 0668 4885D2   		test	rdx, rdx	# tmp455
 18477 066b C4E1E32A 		vcvtsi2sd	xmm3, xmm3, rdx	# tmp456, tmp455
 18477      DA
 18478 0670 7915     		jns	.L1532	#,
 18479 0672 4989D3   		mov	r11, rdx	# tmp458, tmp455
 18480 0675 83E201   		and	edx, 1	# tmp459,
 18481 0678 49D1EB   		shr	r11	# tmp458
 18482 067b 4909D3   		or	r11, rdx	# tmp518, tmp459
 18483 067e C4C1DB2A 		vcvtsi2sd	xmm4, xmm4, r11	# tmp457, tmp518
 18483      E3
 18484 0683 C5DB58DC 		vaddsd	xmm3, xmm4, xmm4	# tmp456, tmp457, tmp457
 18485              	.L1532:
 18486 0687 C5E35EC6 		vdivsd	xmm0, xmm3, xmm6	# tmp460, tmp456, elapsed_time
 18487              	.LBB1075:
 18488              	.LBB1074:
 18489              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18490              		.loc 3 107 10 discriminator 1 view .LVU5986
 18491 068b 488D3500 		lea	rsi, .LC63[rip]	#,
 18491      000000
 18492 0692 BF010000 		mov	edi, 1	#,
GAS LISTING /tmp/ccfflXEb.s 			page 485


 18492      00
 18493 0697 B8020000 		mov	eax, 2	#,
 18493      00
 18494 069c E8000000 		call	__printf_chk@PLT	#
 18494      00
 18495              	.LVL1094:
 18496 06a1 E99CFEFF 		jmp	.L1525	#
 18496      FF
 18497              	.LVL1095:
 18498              	.L1613:
 18499              		.loc 3 107 10 discriminator 1 view .LVU5987
 18500              	.LBE1074:
 18501              	.LBE1075:
 18502              	.LBE1091:
 18503              	.LBB1092:
1343:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18504              		.loc 1 1343 9 is_stmt 1 view .LVU5988
 18505              	# sieve_extend.c:1343:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1343:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 18506              		.loc 1 1343 44 is_stmt 0 view .LVU5989
 18507 06a6 448B9424 		mov	r10d, DWORD PTR 168[rsp]	# option_verboselevel.42_64, option_verboselevel
 18507      A8000000 
 18508 06ae 4183E801 		sub	r8d, 1	#,
 18509 06b2 4C8B9C24 		mov	r11, QWORD PTR 176[rsp]	# option_maxFactor.43_65, option_maxFactor
 18509      B0000000 
 18510 06ba 4183F802 		cmp	r8d, 2	# _215,
 18511 06be 44895424 		mov	DWORD PTR 104[rsp], r10d	# %sfp, option_verboselevel.42_64
 18511      68
 18512 06c3 4C899C24 		mov	QWORD PTR 136[rsp], r11	# %sfp, option_maxFactor.43_65
 18512      88000000 
 18513              	.LVL1096:
 18514              	.LBB1093:
 18515              	.LBI1093:
 945:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 18516              		.loc 1 945 27 is_stmt 1 view .LVU5990
 18517              	.LBB1094:
 946:sieve_extend.c **** 
 18518              		.loc 1 946 5 view .LVU5991
 948:sieve_extend.c ****     best_blocksize_bits = 0;
 18519              		.loc 1 948 5 view .LVU5992
 949:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18520              		.loc 1 949 5 view .LVU5993
 950:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18521              		.loc 1 950 5 view .LVU5994
 951:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 18522              		.loc 1 951 5 view .LVU5995
 952:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 18523              		.loc 1 952 5 view .LVU5996
 953:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 18524              		.loc 1 953 5 view .LVU5997
 954:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 18525              		.loc 1 954 5 view .LVU5998
 955:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 18526              		.loc 1 955 5 view .LVU5999
 956:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 18527              		.loc 1 956 5 view .LVU6000
 957:sieve_extend.c ****     double sample_duration = default_sample_duration;
GAS LISTING /tmp/ccfflXEb.s 			page 486


 18528              		.loc 1 957 5 view .LVU6001
 958:sieve_extend.c **** 
 18529              		.loc 1 958 5 view .LVU6002
 961:sieve_extend.c ****         case 1:
 18530              		.loc 1 961 5 view .LVU6003
 18531 06cb 0F86EA07 		jbe	.L1534	#,
 18531      0000
 18532 06d1 C5FB1035 		vmovsd	xmm6, QWORD PTR .LC28[rip]	# sample_duration,
 18532      00000000 
 18533 06d9 48C74424 		mov	QWORD PTR 120[rsp], 5	# %sfp,
 18533      78050000 
 18533      00
 18534 06e2 48C74424 		mov	QWORD PTR 112[rsp], 128	# %sfp,
 18534      70800000 
 18534      00
 18535 06eb 48C78424 		mov	QWORD PTR 144[rsp], 32	# %sfp,
 18535      90000000 
 18535      20000000 
 18536 06f7 48C78424 		mov	QWORD PTR 152[rsp], 4	# %sfp,
 18536      98000000 
 18536      04000000 
 18537 0703 C5FB11B4 		vmovsd	QWORD PTR 128[rsp], xmm6	# %sfp, sample_duration
 18537      24800000 
 18537      00
 18538              	.LVL1097:
 18539              	.L1502:
 990:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18540              		.loc 1 990 5 view .LVU6004
 18541              	# sieve_extend.c:990:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 990:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18542              		.loc 1 990 33 is_stmt 0 view .LVU6005
 18543 070c B8400000 		mov	eax, 64	# tmp350,
 18543      00
 18544 0711 31D2     		xor	edx, edx	# tmp349
 18545 0713 48F7B424 		div	QWORD PTR 152[rsp]	# %sfp
 18545      98000000 
 18546              	# sieve_extend.c:990:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 990:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18547              		.loc 1 990 254 view .LVU6006
 18548 071b 31D2     		xor	edx, edx	# tmp357
 18549              	# sieve_extend.c:992:     counter_t tuning_results=0;
 992:sieve_extend.c ****     counter_t tuning_result_index=0;
 18550              		.loc 1 992 15 view .LVU6007
 18551 071d 4531FF   		xor	r15d, r15d	# tuning_results
 18552              	# sieve_extend.c:990:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 990:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18553              		.loc 1 990 83 view .LVU6008
 18554 0720 488D7801 		lea	rdi, 1[rax]	# _232,
 18555              	.LVL1098:
 991:sieve_extend.c ****     counter_t tuning_results=0;
 18556              		.loc 1 991 5 is_stmt 1 view .LVU6009
 18557              	# sieve_extend.c:990:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 990:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18558              		.loc 1 990 254 is_stmt 0 view .LVU6010
 18559 0724 B8001000 		mov	eax, 4096	# tmp358,
 18559      00
 18560 0729 48F77424 		div	QWORD PTR 112[rsp]	# %sfp
GAS LISTING /tmp/ccfflXEb.s 			page 487


 18560      70
 18561              	.LVL1099:
 18562              	# sieve_extend.c:990:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 990:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18563              		.loc 1 990 148 view .LVU6011
 18564 072e 31D2     		xor	edx, edx	# tmp367
 18565              	# sieve_extend.c:991:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 991:sieve_extend.c ****     counter_t tuning_results=0;
 18566              		.loc 1 991 41 view .LVU6012
 18567 0730 480FAFC7 		imul	rax, rdi	# tmp363, _232
 18568              	.LVL1100:
 991:sieve_extend.c ****     counter_t tuning_results=0;
 18569              		.loc 1 991 41 view .LVU6013
 18570 0734 480FAFF8 		imul	rdi, rax	# tmp364, tmp363
 18571              	.LVL1101:
 18572              	# sieve_extend.c:990:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 990:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18573              		.loc 1 990 148 view .LVU6014
 18574 0738 B8000100 		mov	eax, 256	# tmp368,
 18574      00
 18575 073d 48F7B424 		div	QWORD PTR 144[rsp]	# %sfp
 18575      90000000 
 18576              	# sieve_extend.c:990:     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_s
 990:sieve_extend.c ****     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_result));
 18577              		.loc 1 990 201 view .LVU6015
 18578 0745 4883C001 		add	rax, 1	# tmp373,
 18579              	# sieve_extend.c:991:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 991:sieve_extend.c ****     counter_t tuning_results=0;
 18580              		.loc 1 991 41 view .LVU6016
 18581 0749 480FAFF8 		imul	rdi, rax	# tmp374, tmp373
 18582 074d 48C1E708 		sal	rdi, 8	# tmp374,
 18583 0751 E8000000 		call	malloc@PLT	#
 18583      00
 18584              	.LVL1102:
 18585              	# sieve_extend.c:948:     double best_avg = 0;
 948:sieve_extend.c ****     best_blocksize_bits = 0;
 18586              		.loc 1 948 12 view .LVU6017
 18587 0756 C5F157C9 		vxorpd	xmm1, xmm1, xmm1	# best_avg
 18588              	# sieve_extend.c:991:     tuning_result_type* tuning_result = malloc(max_results * sizeof(tuning_re
 991:sieve_extend.c ****     counter_t tuning_results=0;
 18589              		.loc 1 991 41 view .LVU6018
 18590 075a 48894424 		mov	QWORD PTR 64[rsp], rax	# %sfp, tmp535
 18590      40
 18591              	.LVL1103:
 992:sieve_extend.c ****     counter_t tuning_result_index=0;
 18592              		.loc 1 992 5 is_stmt 1 view .LVU6019
 993:sieve_extend.c ****     
 18593              		.loc 1 993 5 view .LVU6020
 995:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18594              		.loc 1 995 5 view .LVU6021
 18595              	.LBB1095:
 995:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18596              		.loc 1 995 10 view .LVU6022
 995:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18597              		.loc 1 995 42 view .LVU6023
 18598              	.LBE1095:
 18599              	# sieve_extend.c:952:     counter_t best_vectorstep_faster = 0;
GAS LISTING /tmp/ccfflXEb.s 			page 488


 952:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 18600              		.loc 1 952 15 is_stmt 0 view .LVU6024
 18601 075f 48C74424 		mov	QWORD PTR 96[rsp], 0	# %sfp,
 18601      60000000 
 18601      00
 18602              	# sieve_extend.c:951:     counter_t best_mediumstep_faster = 0;
 951:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 18603              		.loc 1 951 15 view .LVU6025
 18604 0768 48C74424 		mov	QWORD PTR 88[rsp], 0	# %sfp,
 18604      58000000 
 18604      00
 18605              	# sieve_extend.c:950:     counter_t best_smallstep_faster = 0;
 950:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 18606              		.loc 1 950 15 view .LVU6026
 18607 0771 48C74424 		mov	QWORD PTR 80[rsp], 0	# %sfp,
 18607      50000000 
 18607      00
 18608              	# sieve_extend.c:949:     best_blocksize_bits = 0;
 949:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 18609              		.loc 1 949 25 view .LVU6027
 18610 077a 48C74424 		mov	QWORD PTR 72[rsp], 0	# %sfp,
 18610      48000000 
 18610      00
 18611              	.LBB1125:
 18612              	# sieve_extend.c:995:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_counte
 995:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18613              		.loc 1 995 20 view .LVU6028
 18614 0783 48C74424 		mov	QWORD PTR 48[rsp], 0	# %sfp,
 18614      30000000 
 18614      00
 18615              	.LBE1125:
 18616              	# sieve_extend.c:948:     double best_avg = 0;
 948:sieve_extend.c ****     best_blocksize_bits = 0;
 18617              		.loc 1 948 12 view .LVU6029
 18618 078c C5FB114C 		vmovsd	QWORD PTR 56[rsp], xmm1	# %sfp, best_avg
 18618      2438
 18619              	.LVL1104:
 18620              	.L1504:
 18621              	.LBB1126:
 18622              	.LBB1096:
 996:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18623              		.loc 1 996 62 is_stmt 1 view .LVU6030
 18624              	.LBB1097:
 18625              	.LBB1098:
 18626              	# sieve_extend.c:998:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 998:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18627              		.loc 1 998 32 is_stmt 0 view .LVU6031
 18628 0792 4C8B4424 		mov	r8, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18628      30
 18629 0797 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, smallstep_faster
 18629      28
 18630              	.LVL1105:
 18631 079c 0F1F4000 		.p2align 4
 18632              		.p2align 3
 18633              	.L1516:
 998:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18634              		.loc 1 998 32 view .LVU6032
GAS LISTING /tmp/ccfflXEb.s 			page 489


 18635              	.LBE1098:
 997:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18636              		.loc 1 997 67 is_stmt 1 view .LVU6033
 18637              	.LBB1121:
 18638              	# sieve_extend.c:998:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 998:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18639              		.loc 1 998 32 is_stmt 0 view .LVU6034
 18640 07a0 4C8B7424 		mov	r14, QWORD PTR 40[rsp]	# vectorstep_faster, %sfp
 18640      28
 18641              	.LVL1106:
 18642 07a5 66662E0F 		.p2align 4
 18642      1F840000 
 18642      000000
 18643              		.p2align 3
 18644              	.L1514:
 998:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18645              		.loc 1 998 50 is_stmt 1 view .LVU6035
 18646              	.LBB1099:
 18647              	# sieve_extend.c:999:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 999:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18648              		.loc 1 999 36 is_stmt 0 view .LVU6036
 18649 07b0 C744246C 		mov	DWORD PTR 108[rsp], 6	# %sfp,
 18649      06000000 
 18650              	.LBE1099:
 18651              	# sieve_extend.c:998:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 998:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18652              		.loc 1 998 32 view .LVU6037
 18653 07b8 41BC0001 		mov	r12d, 256	# blocksize_kb,
 18653      0000
 18654              	.LVL1107:
 18655 07be 6690     		.p2align 4
 18656              		.p2align 3
 18657              	.L1512:
 18658              	.LBB1119:
 999:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18659              		.loc 1 999 49 is_stmt 1 view .LVU6038
 18660 07c0 4F8D147F 		lea	r10, [r15+r15*2]	# tmp401,
 18661              	# sieve_extend.c:999:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 999:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18662              		.loc 1 999 134 is_stmt 0 view .LVU6039
 18663 07c4 4C89E3   		mov	rbx, r12	# ivtmp.787, blocksize_kb
 18664 07c7 4C8B5C24 		mov	r11, QWORD PTR 64[rsp]	# tuning_result, %sfp
 18664      40
 18665              	# sieve_extend.c:999:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 999:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18666              		.loc 1 999 36 view .LVU6040
 18667 07cc 31ED     		xor	ebp, ebp	# free_bits
 18668 07ce 49C1E205 		sal	r10, 5	# tmp402,
 18669              	# sieve_extend.c:999:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 999:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18670              		.loc 1 999 134 view .LVU6041
 18671 07d2 48C1E30D 		sal	rbx, 13	# ivtmp.787,
 18672 07d6 4F8D2C13 		lea	r13, [r11+r10]	# ivtmp.786,
 18673 07da EB4F     		jmp	.L1510	#
 18674              	.LVL1108:
 18675 07dc 0F1F4000 		.p2align 4,,7
 18676              		.p2align 3
GAS LISTING /tmp/ccfflXEb.s 			page 490


 18677              	.L1507:
 18678              	.LBB1100:
1016:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 18679              		.loc 1 1016 29 is_stmt 1 view .LVU6042
1017:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 18680              		.loc 1 1017 29 view .LVU6043
1018:sieve_extend.c ****                             best_mediumstep_faster = mediumstep_faster;
 18681              		.loc 1 1018 29 view .LVU6044
1019:sieve_extend.c ****                             best_vectorstep_faster = vectorstep_faster;
 18682              		.loc 1 1019 29 view .LVU6045
1020:sieve_extend.c ****                             if (option_verboselevel >=2) { printf(".(>)"); tuning_result_print(tuni
 18683              		.loc 1 1020 29 view .LVU6046
1021:sieve_extend.c ****                         }
 18684              		.loc 1 1021 29 view .LVU6047
 18685              	# sieve_extend.c:1021:                             if (option_verboselevel >=2) { printf(".(>)"); t
1021:sieve_extend.c ****                         }
 18686              		.loc 1 1021 32 is_stmt 0 view .LVU6048
 18687 07e0 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 18687      01
 18688 07e5 0F8F0504 		jg	.L1617	#,
 18688      0000
1021:sieve_extend.c ****                         }
 18689              		.loc 1 1021 32 view .LVU6049
 18690 07eb 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 18690      28
 18691 07f0 488B5424 		mov	rdx, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18691      30
 18692 07f5 4C897424 		mov	QWORD PTR 96[rsp], r14	# %sfp, vectorstep_faster
 18692      60
 18693              	# sieve_extend.c:1016:                             best_avg = tuning_result[tuning_result_index].av
1016:sieve_extend.c ****                             best_blocksize_bits = blocksize_bits;
 18694              		.loc 1 1016 38 view .LVU6050
 18695 07fa C5FB115C 		vmovsd	QWORD PTR 56[rsp], xmm3	# %sfp, _256
 18695      2438
 18696 0800 48897424 		mov	QWORD PTR 88[rsp], rsi	# %sfp, mediumstep_faster
 18696      58
 18697              	# sieve_extend.c:1017:                             best_blocksize_bits = blocksize_bits;
1017:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 18698              		.loc 1 1017 49 view .LVU6051
 18699 0805 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, ivtmp.787
 18699      48
 18700 080a 48895424 		mov	QWORD PTR 80[rsp], rdx	# %sfp, smallstep_faster
 18700      50
 18701              	.LVL1109:
 18702              	.L1505:
1024:sieve_extend.c ****                     }
 18703              		.loc 1 1024 25 is_stmt 1 view .LVU6052
1024:sieve_extend.c ****                     }
 18704              		.loc 1 1024 25 is_stmt 0 view .LVU6053
 18705              	.LBE1100:
 999:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18706              		.loc 1 999 141 is_stmt 1 view .LVU6054
 18707              	# sieve_extend.c:999:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 999:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18708              		.loc 1 999 151 is_stmt 0 view .LVU6055
 18709 080f 488B5424 		mov	rdx, QWORD PTR 112[rsp]	# freebits_steps, %sfp
 18709      70
GAS LISTING /tmp/ccfflXEb.s 			page 491


 18710 0814 4983C560 		add	r13, 96	# ivtmp.786,
 18711 0818 4801D5   		add	rbp, rdx	# free_bits, freebits_steps
 18712              	.LVL1110:
 999:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18713              		.loc 1 999 49 is_stmt 1 view .LVU6056
 18714 081b 4829D3   		sub	rbx, rdx	# ivtmp.787, freebits_steps
 18715              	.LVL1111:
 18716              	# sieve_extend.c:999:                     for (counter_t free_bits=0; (free_bits < (anticiped_cache
 999:sieve_extend.c ****                         counter_t blocksize_bits = (blocksize_kb * 1024 * 8) - free_bits;
 18717              		.loc 1 999 21 is_stmt 0 view .LVU6057
 18718 081e 4881FDFF 		cmp	rbp, 4095	# free_bits,
 18718      0F0000
 18719 0825 0F87ED00 		ja	.L1506	#,
 18719      0000
 18720              	.LVL1112:
 18721              	.L1510:
 18722              	.LBB1117:
1000:sieve_extend.c **** 
 18723              		.loc 1 1000 25 is_stmt 1 view .LVU6058
1003:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 18724              		.loc 1 1003 25 view .LVU6059
 18725              	# sieve_extend.c:1010:                         tuning_result[tuning_result_index].smallstep_faster 
1010:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18726              		.loc 1 1010 77 is_stmt 0 view .LVU6060
 18727 082b 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18727      30
 18728 0830 4C89FE   		mov	rsi, r15	# tuning_results, tuning_results
 18729              	# sieve_extend.c:1004:                         tuning_result[tuning_result_index].maxints = maxints
1004:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18730              		.loc 1 1004 68 view .LVU6061
 18731 0833 488B8C24 		mov	rcx, QWORD PTR 136[rsp]	# option_maxFactor.43_65, %sfp
 18731      88000000 
 18732              	# sieve_extend.c:1003:                         tuning_results++;
1003:sieve_extend.c ****                         tuning_result[tuning_result_index].maxints = maxints;
 18733              		.loc 1 1003 39 view .LVU6062
 18734 083b 4983C701 		add	r15, 1	# tuning_results,
 18735              	.LVL1113:
1004:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18736              		.loc 1 1004 25 is_stmt 1 view .LVU6063
 18737              	# sieve_extend.c:1006:                         tuning_result[tuning_result_index].sample_max = samp
1006:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18738              		.loc 1 1006 71 is_stmt 0 view .LVU6064
 18739 083f 4C8B4C24 		mov	r9, QWORD PTR 120[rsp]	# sample_max, %sfp
 18739      78
 18740              	# sieve_extend.c:1011:                         tuning_result[tuning_result_index].mediumstep_faster
1011:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18741              		.loc 1 1011 78 view .LVU6065
 18742 0844 488B4424 		mov	rax, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 18742      28
 18743              	# sieve_extend.c:1010:                         tuning_result[tuning_result_index].smallstep_faster 
1010:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18744              		.loc 1 1010 77 view .LVU6066
 18745 0849 49897D20 		mov	QWORD PTR 32[r13], rdi	# MEM[base: _520, offset: 32B], smallstep_faster
 18746              	# sieve_extend.c:1013:                         tune_benchmark(tuning_result, tuning_result_index);
1013:sieve_extend.c **** 
 18747              		.loc 1 1013 25 view .LVU6067
 18748 084d 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	#, %sfp
GAS LISTING /tmp/ccfflXEb.s 			page 492


 18748      40
 18749              	# sieve_extend.c:1005:                         tuning_result[tuning_result_index].sample_duration =
1005:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18750              		.loc 1 1005 76 view .LVU6068
 18751 0852 C5FB10A4 		vmovsd	xmm4, QWORD PTR 128[rsp]	# sample_duration, %sfp
 18751      24800000 
 18751      00
 18752              	# sieve_extend.c:1004:                         tuning_result[tuning_result_index].maxints = maxints
1004:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_duration = sample_duration;
 18753              		.loc 1 1004 68 view .LVU6069
 18754 085b 49894D00 		mov	QWORD PTR 0[r13], rcx	# MEM[base: _520, offset: 0B], option_maxFactor.43_65
1005:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18755              		.loc 1 1005 25 is_stmt 1 view .LVU6070
 18756              	# sieve_extend.c:1006:                         tuning_result[tuning_result_index].sample_max = samp
1006:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18757              		.loc 1 1006 71 is_stmt 0 view .LVU6071
 18758 085f 4D894D38 		mov	QWORD PTR 56[r13], r9	# MEM[base: _520, offset: 56B], sample_max
 18759              	# sieve_extend.c:1007:                         tuning_result[tuning_result_index].blocksize_kb = bl
1007:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 18760              		.loc 1 1007 73 view .LVU6072
 18761 0863 4D896510 		mov	QWORD PTR 16[r13], r12	# MEM[base: _520, offset: 16B], blocksize_kb
 18762              	# sieve_extend.c:1008:                         tuning_result[tuning_result_index].free_bits = free_
1008:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 18763              		.loc 1 1008 70 view .LVU6073
 18764 0867 49896D18 		mov	QWORD PTR 24[r13], rbp	# MEM[base: _520, offset: 24B], free_bits
 18765              	# sieve_extend.c:1009:                         tuning_result[tuning_result_index].blocksize_bits = 
1009:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 18766              		.loc 1 1009 75 view .LVU6074
 18767 086b 49895D08 		mov	QWORD PTR 8[r13], rbx	# MEM[base: _520, offset: 8B], ivtmp.787
 18768              	# sieve_extend.c:1011:                         tuning_result[tuning_result_index].mediumstep_faster
1011:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18769              		.loc 1 1011 78 view .LVU6075
 18770 086f 49894528 		mov	QWORD PTR 40[r13], rax	# MEM[base: _520, offset: 40B], mediumstep_faster
 18771              	# sieve_extend.c:1012:                         tuning_result[tuning_result_index].vectorstep_faster
1012:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 18772              		.loc 1 1012 78 view .LVU6076
 18773 0873 4D897530 		mov	QWORD PTR 48[r13], r14	# MEM[base: _520, offset: 48B], vectorstep_faster
 18774              	# sieve_extend.c:1005:                         tuning_result[tuning_result_index].sample_duration =
1005:sieve_extend.c ****                         tuning_result[tuning_result_index].sample_max = sample_max;
 18775              		.loc 1 1005 76 view .LVU6077
 18776 0877 C4C17B11 		vmovsd	QWORD PTR 64[r13], xmm4	# MEM[base: _520, offset: 64B], sample_duration
 18776      6540
1006:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_kb = blocksize_kb;
 18777              		.loc 1 1006 25 is_stmt 1 view .LVU6078
1007:sieve_extend.c ****                         tuning_result[tuning_result_index].free_bits = free_bits;
 18778              		.loc 1 1007 25 view .LVU6079
1008:sieve_extend.c ****                         tuning_result[tuning_result_index].blocksize_bits = blocksize_bits;
 18779              		.loc 1 1008 25 view .LVU6080
1009:sieve_extend.c ****                         tuning_result[tuning_result_index].smallstep_faster = smallstep_faster;
 18780              		.loc 1 1009 25 view .LVU6081
1010:sieve_extend.c ****                         tuning_result[tuning_result_index].mediumstep_faster = mediumstep_faster;
 18781              		.loc 1 1010 25 view .LVU6082
1011:sieve_extend.c ****                         tuning_result[tuning_result_index].vectorstep_faster = vectorstep_faster;
 18782              		.loc 1 1011 25 view .LVU6083
1012:sieve_extend.c ****                         tune_benchmark(tuning_result, tuning_result_index);
 18783              		.loc 1 1012 25 view .LVU6084
1013:sieve_extend.c **** 
GAS LISTING /tmp/ccfflXEb.s 			page 493


 18784              		.loc 1 1013 25 view .LVU6085
 18785 087d E8000000 		call	tune_benchmark	#
 18785      00
 18786              	.LVL1114:
1015:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18787              		.loc 1 1015 25 view .LVU6086
 18788              	# sieve_extend.c:1015:                         if ( tuning_result[tuning_result_index].avg > best_a
1015:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18789              		.loc 1 1015 64 is_stmt 0 view .LVU6087
 18790 0882 C4C17B10 		vmovsd	xmm3, QWORD PTR 88[r13]	# _256, MEM[base: _520, offset: 88B]
 18790      5D58
 18791              	# sieve_extend.c:1015:                         if ( tuning_result[tuning_result_index].avg > best_a
1015:sieve_extend.c ****                             best_avg = tuning_result[tuning_result_index].avg;
 18792              		.loc 1 1015 28 view .LVU6088
 18793 0888 C5F92F5C 		vcomisd	xmm3, QWORD PTR 56[rsp]	# _256, %sfp
 18793      2438
 18794 088e 0F874CFF 		ja	.L1507	#,
 18794      FFFF
 18795              	.L1508:
1023:sieve_extend.c ****                         tuning_result_index++;
 18796              		.loc 1 1023 25 is_stmt 1 view .LVU6089
 18797              	# sieve_extend.c:1023:                         if (option_verboselevel >= 3) { printf("...."); tuni
1023:sieve_extend.c ****                         tuning_result_index++;
 18798              		.loc 1 1023 28 is_stmt 0 view .LVU6090
 18799 0894 837C2468 		cmp	DWORD PTR 104[rsp], 2	# %sfp,
 18799      02
 18800 0899 0F8E70FF 		jle	.L1505	#,
 18800      FFFF
1023:sieve_extend.c ****                         tuning_result_index++;
 18801              		.loc 1 1023 57 is_stmt 1 view .LVU6091
 18802              	.LVL1115:
 18803              	.LBB1101:
 18804              	.LBI1101:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18805              		.loc 3 105 1 view .LVU6092
 18806              	.LBB1102:
 18807              		.loc 3 107 3 view .LVU6093
 18808              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18809              		.loc 3 107 10 is_stmt 0 view .LVU6094
 18810 089f 488D3500 		lea	rsi, .LC54[rip]	#,
 18810      000000
 18811 08a6 BF010000 		mov	edi, 1	#,
 18811      00
 18812 08ab 31C0     		xor	eax, eax	#
 18813 08ad E8000000 		call	__printf_chk@PLT	#
 18813      00
 18814              	.LVL1116:
 18815              		.loc 3 107 10 view .LVU6095
 18816              	.LBE1102:
 18817              	.LBE1101:
1023:sieve_extend.c ****                         tuning_result_index++;
 18818              		.loc 1 1023 73 is_stmt 1 view .LVU6096
 18819              	.LBB1103:
 18820              	.LBI1103:
 937:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 18821              		.loc 1 937 20 view .LVU6097
 18822              	.LBB1104:
GAS LISTING /tmp/ccfflXEb.s 			page 494


 938:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 18823              		.loc 1 938 5 view .LVU6098
 18824              	.LBB1105:
 18825              	.LBI1105:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18826              		.loc 3 105 1 view .LVU6099
 18827              	.LBB1106:
 18828              		.loc 3 107 3 view .LVU6100
 18829              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18830              		.loc 3 107 10 is_stmt 0 view .LVU6101
 18831 08b2 498B4538 		mov	rax, QWORD PTR 56[r13]	# MEM[base: _520, offset: 56B], MEM[base: _520, offset: 56B]
 18832 08b6 BF010000 		mov	edi, 1	#,
 18832      00
 18833 08bb C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[base: _520, offset: 80B], MEM[base: _520, offset: 80B]
 18833      4550
 18834 08c1 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _520, offset: 16B], MEM[base: _520, offset: 16B]
 18835 08c5 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _520, offset: 8B], MEM[base: _520, offset: 8B]
 18836 08c9 48894424 		mov	QWORD PTR 24[rsp], rax	#, MEM[base: _520, offset: 56B]
 18836      18
 18837 08ce B8030000 		mov	eax, 3	#,
 18837      00
 18838 08d3 498B7548 		mov	rsi, QWORD PTR 72[r13]	# MEM[base: _520, offset: 72B], MEM[base: _520, offset: 72B]
 18839 08d7 48897424 		mov	QWORD PTR 16[rsp], rsi	#, MEM[base: _520, offset: 72B]
 18839      10
 18840 08dc 488D3500 		lea	rsi, .LC53[rip]	#,
 18840      000000
 18841 08e3 4D8B4530 		mov	r8, QWORD PTR 48[r13]	# MEM[base: _520, offset: 48B], MEM[base: _520, offset: 48B]
 18842 08e7 4C894424 		mov	QWORD PTR 8[rsp], r8	#, MEM[base: _520, offset: 48B]
 18842      08
 18843 08ec 4D8B5528 		mov	r10, QWORD PTR 40[r13]	# MEM[base: _520, offset: 40B], MEM[base: _520, offset: 40B]
 18844 08f0 4C891424 		mov	QWORD PTR [rsp], r10	#, MEM[base: _520, offset: 40B]
 18845 08f4 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _520, offset: 32B]
 18846 08f8 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _520, offset: 24B]
 18847 08fc C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[base: _520, offset: 88B]
 18847      5558
 18848 0902 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[base: _520, offset: 64B]
 18848      4D40
 18849 0908 E8000000 		call	__printf_chk@PLT	#
 18849      00
 18850              	.LVL1117:
 18851              		.loc 3 107 10 view .LVU6102
 18852              	.LBE1106:
 18853              	.LBE1105:
 18854              	# sieve_extend.c:943: }
 943:sieve_extend.c **** 
 18855              		.loc 1 943 1 view .LVU6103
 18856 090d E9FDFEFF 		jmp	.L1505	#
 18856      FF
 18857              	.LVL1118:
 18858              		.p2align 4,,7
 18859 0912 660F1F44 		.p2align 3
 18859      0000
 18860              	.L1506:
 943:sieve_extend.c **** 
 18861              		.loc 1 943 1 view .LVU6104
 18862              	.LBE1104:
 18863              	.LBE1103:
GAS LISTING /tmp/ccfflXEb.s 			page 495


 18864              	.LBE1117:
 18865              	.LBE1119:
 998:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18866              		.loc 1 998 67 is_stmt 1 view .LVU6105
 18867              	# sieve_extend.c:998:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 998:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18868              		.loc 1 998 80 is_stmt 0 view .LVU6106
 18869 0918 49D1EC   		shr	r12	# blocksize_kb
 18870              	.LVL1119:
 998:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18871              		.loc 1 998 50 is_stmt 1 view .LVU6107
 18872              	# sieve_extend.c:998:                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_k
 998:sieve_extend.c ****                     for (counter_t free_bits=0; (free_bits < (anticiped_cache_line_bytesize*8*4) &&
 18873              		.loc 1 998 17 is_stmt 0 view .LVU6108
 18874 091b 836C246C 		sub	DWORD PTR 108[rsp], 1	# %sfp,
 18874      01
 18875 0920 0F859AFE 		jne	.L1512	#,
 18875      FFFF
 18876              	.LBE1121:
 997:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18877              		.loc 1 997 109 is_stmt 1 view .LVU6109
 18878              	# sieve_extend.c:997:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_
 997:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18879              		.loc 1 997 127 is_stmt 0 view .LVU6110
 18880 0926 4C03B424 		add	r14, QWORD PTR 144[rsp]	# vectorstep_faster, %sfp
 18880      90000000 
 18881              	.LVL1120:
 997:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18882              		.loc 1 997 67 is_stmt 1 view .LVU6111
 18883              	# sieve_extend.c:997:             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_
 997:sieve_extend.c ****                 for (counter_t blocksize_kb=256; blocksize_kb>=8; blocksize_kb /= 2) {
 18884              		.loc 1 997 13 is_stmt 0 view .LVU6112
 18885 092e 4981FE00 		cmp	r14, 256	# vectorstep_faster,
 18885      010000
 18886 0935 0F8675FE 		jbe	.L1514	#,
 18886      FFFF
 18887              	.LBE1097:
 996:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18888              		.loc 1 996 102 is_stmt 1 view .LVU6113
 18889              	# sieve_extend.c:996:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faste
 996:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18890              		.loc 1 996 120 is_stmt 0 view .LVU6114
 18891 093b 4C8BB424 		mov	r14, QWORD PTR 152[rsp]	# smallstep_faster_steps, %sfp
 18891      98000000 
 18892              	.LVL1121:
 996:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18893              		.loc 1 996 120 view .LVU6115
 18894 0943 4C017424 		add	QWORD PTR 40[rsp], r14	# %sfp, smallstep_faster_steps
 18894      28
 18895              	.LVL1122:
 996:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18896              		.loc 1 996 120 view .LVU6116
 18897 0948 4C8B6424 		mov	r12, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 18897      28
 18898              	.LVL1123:
 996:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18899              		.loc 1 996 62 is_stmt 1 view .LVU6117
GAS LISTING /tmp/ccfflXEb.s 			page 496


 18900              	# sieve_extend.c:996:         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faste
 996:sieve_extend.c ****             for (counter_t vectorstep_faster = mediumstep_faster; vectorstep_faster <= VECTOR_SIZE_
 18901              		.loc 1 996 9 is_stmt 0 view .LVU6118
 18902 094d 4983FC40 		cmp	r12, 64	# mediumstep_faster,
 18903 0951 0F8649FE 		jbe	.L1516	#,
 18903      FFFF
 18904              	.LBE1096:
 995:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18905              		.loc 1 995 83 is_stmt 1 view .LVU6119
 18906              	# sieve_extend.c:995:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_counte
 995:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18907              		.loc 1 995 100 is_stmt 0 view .LVU6120
 18908 0957 488B9C24 		mov	rbx, QWORD PTR 152[rsp]	# smallstep_faster_steps, %sfp
 18908      98000000 
 18909 095f 48015C24 		add	QWORD PTR 48[rsp], rbx	# %sfp, smallstep_faster_steps
 18909      30
 18910              	.LVL1124:
 995:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18911              		.loc 1 995 100 view .LVU6121
 18912 0964 4C8B6C24 		mov	r13, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 18912      30
 18913              	.LVL1125:
 995:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18914              		.loc 1 995 42 is_stmt 1 view .LVU6122
 18915              	# sieve_extend.c:995:     for (counter_t smallstep_faster = 0; smallstep_faster <= WORD_SIZE_counte
 995:sieve_extend.c ****         for (counter_t mediumstep_faster = smallstep_faster; mediumstep_faster <= WORD_SIZE_counter
 18916              		.loc 1 995 5 is_stmt 0 view .LVU6123
 18917 0969 4983FD20 		cmp	r13, 32	# smallstep_faster,
 18918 096d 0F861FFE 		jbe	.L1504	#,
 18918      FFFF
 18919              	.LBE1126:
1030:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 18920              		.loc 1 1030 5 is_stmt 1 view .LVU6124
 18921              	# sieve_extend.c:1030:     if (option_verboselevel >= 2) {
1030:sieve_extend.c ****         printf("%ju results. Inital best blocksize: %ju; best smallstep %ju; best mediumstep %ju; b
 18922              		.loc 1 1030 8 is_stmt 0 view .LVU6125
 18923 0973 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 18923      01
 18924 0978 7E3A     		jle	.L1517	#,
1031:sieve_extend.c ****         printf("Best options\n");
 18925              		.loc 1 1031 9 is_stmt 1 view .LVU6126
 18926              	.LVL1126:
 18927              	.LBB1127:
 18928              	.LBI1127:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18929              		.loc 3 105 1 view .LVU6127
 18930              	.LBB1128:
 18931              		.loc 3 107 3 view .LVU6128
 18932              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18933              		.loc 3 107 10 is_stmt 0 view .LVU6129
 18934 097a 488B6C24 		mov	rbp, QWORD PTR 96[rsp]	# best_vectorstep_faster, %sfp
 18934      60
 18935              	.LVL1127:
 18936              		.loc 3 107 10 view .LVU6130
 18937 097f BF010000 		mov	edi, 1	#,
 18937      00
 18938 0984 4C8B4C24 		mov	r9, QWORD PTR 88[rsp]	#, %sfp
GAS LISTING /tmp/ccfflXEb.s 			page 497


 18938      58
 18939 0989 4C89FA   		mov	rdx, r15	#, tuning_results
 18940 098c 4C8B4424 		mov	r8, QWORD PTR 80[rsp]	#, %sfp
 18940      50
 18941 0991 488D3500 		lea	rsi, .LC55[rip]	#,
 18941      000000
 18942 0998 488B4C24 		mov	rcx, QWORD PTR 72[rsp]	#, %sfp
 18942      48
 18943 099d 31C0     		xor	eax, eax	#
 18944 099f 48892C24 		mov	QWORD PTR [rsp], rbp	#, best_vectorstep_faster
 18945 09a3 E8000000 		call	__printf_chk@PLT	#
 18945      00
 18946              	.LVL1128:
 18947              		.loc 3 107 10 view .LVU6131
 18948              	.LBE1128:
 18949              	.LBE1127:
1032:sieve_extend.c ****     }
 18950              		.loc 1 1032 9 is_stmt 1 view .LVU6132
 18951              	.LBB1129:
 18952              	.LBI1129:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 18953              		.loc 3 105 1 view .LVU6133
 18954              	.LBB1130:
 18955              		.loc 3 107 3 view .LVU6134
 18956              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 18957              		.loc 3 107 10 is_stmt 0 view .LVU6135
 18958 09a8 488D3D00 		lea	rdi, .LC56[rip]	#,
 18958      000000
 18959 09af E8000000 		call	puts@PLT	#
 18959      00
 18960              	.LVL1129:
 18961              	.L1517:
 18962              		.loc 3 107 10 view .LVU6136
 18963              	.LBE1130:
 18964              	.LBE1129:
 18965              	.LBB1131:
 18966              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 18967              		.loc 1 1050 24 view .LVU6137
 18968 09b4 4531DB   		xor	r11d, r11d	# step
 18969              	.LBE1131:
 18970              	.LBB1132:
 18971              	# sieve_extend.c:1042:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18972              		.loc 1 1042 75 view .LVU6138
 18973 09b7 41BE0A00 		mov	r14d, 10	# tmp476,
 18973      0000
 18974 09bd 4C8B6C24 		mov	r13, QWORD PTR 120[rsp]	# sample_max, %sfp
 18974      78
 18975              	.LVL1130:
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18976              		.loc 1 1042 75 view .LVU6139
 18977 09c2 4C8B6424 		mov	r12, QWORD PTR 64[rsp]	# tuning_result, %sfp
 18977      40
 18978              	.LVL1131:
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18979              		.loc 1 1042 75 view .LVU6140
GAS LISTING /tmp/ccfflXEb.s 			page 498


 18980 09c7 4C895C24 		mov	QWORD PTR 48[rsp], r11	# %sfp, step
 18980      30
 18981              	.LVL1132:
 18982              	.L1522:
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 18983              		.loc 1 1042 75 view .LVU6141
 18984              	.LBE1132:
1035:sieve_extend.c ****         qsort(tuning_result, (size_t)tuning_results, sizeof(tuning_result_type), compare_tuning_res
 18985              		.loc 1 1035 11 is_stmt 1 view .LVU6142
 18986 09cc 4983FF04 		cmp	r15, 4	# tuning_results,
 18987 09d0 0F862E04 		jbe	.L1618	#,
 18987      0000
1036:sieve_extend.c ****         step++;
 18988              		.loc 1 1036 9 view .LVU6143
 18989 09d6 488D0D00 		lea	rcx, compare_tuning_result[rip]	#,
 18989      000000
 18990 09dd BA600000 		mov	edx, 96	#,
 18990      00
 18991 09e2 4C89FE   		mov	rsi, r15	#, tuning_results
 18992 09e5 4C89E7   		mov	rdi, r12	#, tuning_result
 18993 09e8 E8000000 		call	qsort@PLT	#
 18993      00
 18994              	.LVL1133:
1037:sieve_extend.c ****         if (option_verboselevel >= 2) {
 18995              		.loc 1 1037 9 view .LVU6144
1038:sieve_extend.c ****             tuning_result_index = 0;
 18996              		.loc 1 1038 9 view .LVU6145
 18997              	# sieve_extend.c:1037:         step++;
1037:sieve_extend.c ****         if (option_verboselevel >= 2) {
 18998              		.loc 1 1037 13 is_stmt 0 view .LVU6146
 18999 09ed 48834424 		add	QWORD PTR 48[rsp], 1	# %sfp,
 18999      3001
 19000              	.LVL1134:
 19001              	# sieve_extend.c:1038:         if (option_verboselevel >= 2) {
1038:sieve_extend.c ****             tuning_result_index = 0;
 19002              		.loc 1 1038 12 view .LVU6147
 19003 09f3 837C2468 		cmp	DWORD PTR 104[rsp], 1	# %sfp,
 19003      01
 19004 09f8 0F8F8902 		jg	.L1518	#,
 19004      0000
 19005              	.L1520:
1048:sieve_extend.c **** 
 19006              		.loc 1 1048 9 is_stmt 1 view .LVU6148
 19007              	# sieve_extend.c:1048:         tuning_results = tuning_results / 2;
1048:sieve_extend.c **** 
 19008              		.loc 1 1048 24 is_stmt 0 view .LVU6149
 19009 09fe 49D1EF   		shr	r15	# tuning_results
 19010              	.LVL1135:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19011              		.loc 1 1050 9 is_stmt 1 view .LVU6150
 19012              	.LBB1141:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19013              		.loc 1 1050 14 view .LVU6151
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19014              		.loc 1 1050 29 view .LVU6152
 19015              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccfflXEb.s 			page 499


 19016              		.loc 1 1050 24 is_stmt 0 view .LVU6153
 19017 0a01 31ED     		xor	ebp, ebp	# i
 19018 0a03 4D89FB   		mov	r11, r15	# tmp490, tuning_results
 19019 0a06 498D5C24 		lea	rbx, 56[r12]	# ivtmp.768,
 19019      38
 19020 0a0b 4183E307 		and	r11d, 7	# tmp490,
 19021 0a0f 0F84D300 		je	.L1519	#,
 19021      0000
 19022 0a15 4983FB01 		cmp	r11, 1	# tmp490,
 19023 0a19 0F84AA00 		je	.L1577	#,
 19023      0000
 19024 0a1f 4983FB02 		cmp	r11, 2	# tmp490,
 19025 0a23 0F848A00 		je	.L1578	#,
 19025      0000
 19026 0a29 4983FB03 		cmp	r11, 3	# tmp490,
 19027 0a2d 746E     		je	.L1579	#,
 19028 0a2f 4983FB04 		cmp	r11, 4	# tmp490,
 19029 0a33 7452     		je	.L1580	#,
 19030 0a35 4983FB05 		cmp	r11, 5	# tmp490,
 19031 0a39 7436     		je	.L1581	#,
 19032 0a3b 4983FB06 		cmp	r11, 6	# tmp490,
 19033 0a3f 741A     		je	.L1582	#,
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19034              		.loc 1 1051 13 is_stmt 1 view .LVU6154
 19035 0a41 31F6     		xor	esi, esi	#
 19036 0a43 4C89E7   		mov	rdi, r12	#, tuning_result
 19037 0a46 E8000000 		call	tune_benchmark	#
 19037      00
 19038              	.LVL1136:
1052:sieve_extend.c ****         }
 19039              		.loc 1 1052 13 view .LVU6155
 19040              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19041              		.loc 1 1050 48 is_stmt 0 view .LVU6156
 19042 0a4b BD010000 		mov	ebp, 1	# i,
 19042      00
 19043              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19044              		.loc 1 1052 41 view .LVU6157
 19045 0a50 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19046              		.loc 1 1050 47 is_stmt 1 view .LVU6158
 19047              	.LVL1137:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19048              		.loc 1 1050 29 view .LVU6159
 19049 0a53 498D9C24 		lea	rbx, 152[r12]	# ivtmp.768,
 19049      98000000 
 19050              	.L1582:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19051              		.loc 1 1051 13 view .LVU6160
 19052 0a5b 4889EE   		mov	rsi, rbp	#, i
 19053 0a5e 4C89E7   		mov	rdi, r12	#, tuning_result
 19054 0a61 E8000000 		call	tune_benchmark	#
 19054      00
 19055              	.LVL1138:
1052:sieve_extend.c ****         }
 19056              		.loc 1 1052 13 view .LVU6161
GAS LISTING /tmp/ccfflXEb.s 			page 500


 19057              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19058              		.loc 1 1050 48 is_stmt 0 view .LVU6162
 19059 0a66 4883C501 		add	rbp, 1	# i,
 19060              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19061              		.loc 1 1052 41 view .LVU6163
 19062 0a6a 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19063              		.loc 1 1050 47 is_stmt 1 view .LVU6164
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19064              		.loc 1 1050 29 view .LVU6165
 19065 0a6d 4883C360 		add	rbx, 96	# ivtmp.768,
 19066              	.L1581:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19067              		.loc 1 1051 13 view .LVU6166
 19068 0a71 4889EE   		mov	rsi, rbp	#, i
 19069 0a74 4C89E7   		mov	rdi, r12	#, tuning_result
 19070 0a77 E8000000 		call	tune_benchmark	#
 19070      00
 19071              	.LVL1139:
1052:sieve_extend.c ****         }
 19072              		.loc 1 1052 13 view .LVU6167
 19073              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19074              		.loc 1 1050 48 is_stmt 0 view .LVU6168
 19075 0a7c 4883C501 		add	rbp, 1	# i,
 19076              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19077              		.loc 1 1052 41 view .LVU6169
 19078 0a80 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19079              		.loc 1 1050 47 is_stmt 1 view .LVU6170
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19080              		.loc 1 1050 29 view .LVU6171
 19081 0a83 4883C360 		add	rbx, 96	# ivtmp.768,
 19082              	.L1580:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19083              		.loc 1 1051 13 view .LVU6172
 19084 0a87 4889EE   		mov	rsi, rbp	#, i
 19085 0a8a 4C89E7   		mov	rdi, r12	#, tuning_result
 19086 0a8d E8000000 		call	tune_benchmark	#
 19086      00
 19087              	.LVL1140:
1052:sieve_extend.c ****         }
 19088              		.loc 1 1052 13 view .LVU6173
 19089              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19090              		.loc 1 1050 48 is_stmt 0 view .LVU6174
 19091 0a92 4883C501 		add	rbp, 1	# i,
 19092              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19093              		.loc 1 1052 41 view .LVU6175
 19094 0a96 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19095              		.loc 1 1050 47 is_stmt 1 view .LVU6176
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
GAS LISTING /tmp/ccfflXEb.s 			page 501


 19096              		.loc 1 1050 29 view .LVU6177
 19097 0a99 4883C360 		add	rbx, 96	# ivtmp.768,
 19098              	.L1579:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19099              		.loc 1 1051 13 view .LVU6178
 19100 0a9d 4889EE   		mov	rsi, rbp	#, i
 19101 0aa0 4C89E7   		mov	rdi, r12	#, tuning_result
 19102 0aa3 E8000000 		call	tune_benchmark	#
 19102      00
 19103              	.LVL1141:
1052:sieve_extend.c ****         }
 19104              		.loc 1 1052 13 view .LVU6179
 19105              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19106              		.loc 1 1050 48 is_stmt 0 view .LVU6180
 19107 0aa8 4883C501 		add	rbp, 1	# i,
 19108              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19109              		.loc 1 1052 41 view .LVU6181
 19110 0aac 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19111              		.loc 1 1050 47 is_stmt 1 view .LVU6182
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19112              		.loc 1 1050 29 view .LVU6183
 19113 0aaf 4883C360 		add	rbx, 96	# ivtmp.768,
 19114              	.L1578:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19115              		.loc 1 1051 13 view .LVU6184
 19116 0ab3 4889EE   		mov	rsi, rbp	#, i
 19117 0ab6 4C89E7   		mov	rdi, r12	#, tuning_result
 19118 0ab9 E8000000 		call	tune_benchmark	#
 19118      00
 19119              	.LVL1142:
1052:sieve_extend.c ****         }
 19120              		.loc 1 1052 13 view .LVU6185
 19121              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19122              		.loc 1 1050 48 is_stmt 0 view .LVU6186
 19123 0abe 4883C501 		add	rbp, 1	# i,
 19124              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19125              		.loc 1 1052 41 view .LVU6187
 19126 0ac2 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19127              		.loc 1 1050 47 is_stmt 1 view .LVU6188
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19128              		.loc 1 1050 29 view .LVU6189
 19129 0ac5 4883C360 		add	rbx, 96	# ivtmp.768,
 19130              	.L1577:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19131              		.loc 1 1051 13 view .LVU6190
 19132 0ac9 4889EE   		mov	rsi, rbp	#, i
 19133 0acc 4C89E7   		mov	rdi, r12	#, tuning_result
 19134              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19135              		.loc 1 1050 48 is_stmt 0 view .LVU6191
 19136 0acf 4883C501 		add	rbp, 1	# i,
GAS LISTING /tmp/ccfflXEb.s 			page 502


 19137              	# sieve_extend.c:1051:             tune_benchmark(tuning_result, i);
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19138              		.loc 1 1051 13 view .LVU6192
 19139 0ad3 E8000000 		call	tune_benchmark	#
 19139      00
 19140              	.LVL1143:
1052:sieve_extend.c ****         }
 19141              		.loc 1 1052 13 is_stmt 1 view .LVU6193
 19142              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19143              		.loc 1 1052 41 is_stmt 0 view .LVU6194
 19144 0ad8 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19145              		.loc 1 1050 47 is_stmt 1 view .LVU6195
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19146              		.loc 1 1050 29 view .LVU6196
 19147 0adb 4883C360 		add	rbx, 96	# ivtmp.768,
 19148              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19149              		.loc 1 1050 9 is_stmt 0 view .LVU6197
 19150 0adf 4939EF   		cmp	r15, rbp	# tuning_results, i
 19151 0ae2 0F84E4FE 		je	.L1522	#,
 19151      FFFF
 19152              	.L1519:
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19153              		.loc 1 1051 13 is_stmt 1 view .LVU6198
 19154 0ae8 4889EE   		mov	rsi, rbp	#, i
 19155 0aeb 4C89E7   		mov	rdi, r12	#, tuning_result
 19156 0aee E8000000 		call	tune_benchmark	#
 19156      00
 19157              	.LVL1144:
1052:sieve_extend.c ****         }
 19158              		.loc 1 1052 13 view .LVU6199
 19159 0af3 488D7B60 		lea	rdi, 96[rbx]	# tmp492,
 19160              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19161              		.loc 1 1052 41 is_stmt 0 view .LVU6200
 19162 0af7 4C012B   		add	QWORD PTR [rbx], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19163              		.loc 1 1050 47 is_stmt 1 view .LVU6201
 19164 0afa 48897C24 		mov	QWORD PTR 40[rsp], rdi	# %sfp, tmp492
 19164      28
 19165              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19166              		.loc 1 1050 48 is_stmt 0 view .LVU6202
 19167 0aff 488D7501 		lea	rsi, 1[rbp]	# tmp491,
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19168              		.loc 1 1050 29 is_stmt 1 view .LVU6203
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19169              		.loc 1 1051 13 view .LVU6204
 19170 0b03 4C89E7   		mov	rdi, r12	#, tuning_result
 19171 0b06 E8000000 		call	tune_benchmark	#
 19171      00
 19172              	.LVL1145:
1052:sieve_extend.c ****         }
 19173              		.loc 1 1052 13 view .LVU6205
 19174              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccfflXEb.s 			page 503


1052:sieve_extend.c ****         }
 19175              		.loc 1 1052 41 is_stmt 0 view .LVU6206
 19176 0b0b 4C8B4C24 		mov	r9, QWORD PTR 40[rsp]	# tmp492, %sfp
 19176      28
 19177 0b10 488D83C0 		lea	rax, 192[rbx]	# ivtmp.768,
 19177      000000
 19178              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19179              		.loc 1 1050 48 view .LVU6207
 19180 0b17 488D7502 		lea	rsi, 2[rbp]	# i,
 19181              	# sieve_extend.c:1051:             tune_benchmark(tuning_result, i);
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19182              		.loc 1 1051 13 view .LVU6208
 19183 0b1b 4C89E7   		mov	rdi, r12	#, tuning_result
 19184 0b1e 48894424 		mov	QWORD PTR 40[rsp], rax	# %sfp, ivtmp.768
 19184      28
 19185              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19186              		.loc 1 1052 41 view .LVU6209
 19187 0b23 4D0129   		add	QWORD PTR [r9], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19188              		.loc 1 1050 47 is_stmt 1 view .LVU6210
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19189              		.loc 1 1050 29 view .LVU6211
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19190              		.loc 1 1051 13 view .LVU6212
 19191 0b26 E8000000 		call	tune_benchmark	#
 19191      00
 19192              	.LVL1146:
1052:sieve_extend.c ****         }
 19193              		.loc 1 1052 13 view .LVU6213
 19194              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19195              		.loc 1 1052 41 is_stmt 0 view .LVU6214
 19196 0b2b 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.768, %sfp
 19196      28
 19197 0b30 4C8D8320 		lea	r8, 288[rbx]	# ivtmp.768,
 19197      010000
 19198 0b37 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.768
 19198      28
 19199              	# sieve_extend.c:1051:             tune_benchmark(tuning_result, i);
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19200              		.loc 1 1051 13 view .LVU6215
 19201 0b3c 4C89E7   		mov	rdi, r12	#, tuning_result
 19202              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19203              		.loc 1 1052 41 view .LVU6216
 19204 0b3f 4C012E   		add	QWORD PTR [rsi], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19205              		.loc 1 1050 47 is_stmt 1 view .LVU6217
 19206              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19207              		.loc 1 1050 48 is_stmt 0 view .LVU6218
 19208 0b42 488D7503 		lea	rsi, 3[rbp]	# i,
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19209              		.loc 1 1050 29 is_stmt 1 view .LVU6219
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
GAS LISTING /tmp/ccfflXEb.s 			page 504


 19210              		.loc 1 1051 13 view .LVU6220
 19211 0b46 E8000000 		call	tune_benchmark	#
 19211      00
 19212              	.LVL1147:
1052:sieve_extend.c ****         }
 19213              		.loc 1 1052 13 view .LVU6221
 19214              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19215              		.loc 1 1052 41 is_stmt 0 view .LVU6222
 19216 0b4b 4C8B5424 		mov	r10, QWORD PTR 40[rsp]	# ivtmp.768, %sfp
 19216      28
 19217 0b50 488D9380 		lea	rdx, 384[rbx]	# ivtmp.768,
 19217      010000
 19218              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19219              		.loc 1 1050 48 view .LVU6223
 19220 0b57 488D7504 		lea	rsi, 4[rbp]	# i,
 19221              	# sieve_extend.c:1051:             tune_benchmark(tuning_result, i);
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19222              		.loc 1 1051 13 view .LVU6224
 19223 0b5b 4C89E7   		mov	rdi, r12	#, tuning_result
 19224 0b5e 48895424 		mov	QWORD PTR 40[rsp], rdx	# %sfp, ivtmp.768
 19224      28
 19225              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19226              		.loc 1 1052 41 view .LVU6225
 19227 0b63 4D012A   		add	QWORD PTR [r10], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19228              		.loc 1 1050 47 is_stmt 1 view .LVU6226
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19229              		.loc 1 1050 29 view .LVU6227
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19230              		.loc 1 1051 13 view .LVU6228
 19231 0b66 E8000000 		call	tune_benchmark	#
 19231      00
 19232              	.LVL1148:
1052:sieve_extend.c ****         }
 19233              		.loc 1 1052 13 view .LVU6229
 19234              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19235              		.loc 1 1052 41 is_stmt 0 view .LVU6230
 19236 0b6b 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# ivtmp.768, %sfp
 19236      28
 19237 0b70 4C8D9BE0 		lea	r11, 480[rbx]	# ivtmp.768,
 19237      010000
 19238              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19239              		.loc 1 1050 48 view .LVU6231
 19240 0b77 488D7505 		lea	rsi, 5[rbp]	# i,
 19241              	# sieve_extend.c:1051:             tune_benchmark(tuning_result, i);
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19242              		.loc 1 1051 13 view .LVU6232
 19243 0b7b 4C89E7   		mov	rdi, r12	#, tuning_result
 19244 0b7e 4C895C24 		mov	QWORD PTR 40[rsp], r11	# %sfp, ivtmp.768
 19244      28
 19245              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
GAS LISTING /tmp/ccfflXEb.s 			page 505


 19246              		.loc 1 1052 41 view .LVU6233
 19247 0b83 4C0129   		add	QWORD PTR [rcx], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19248              		.loc 1 1050 47 is_stmt 1 view .LVU6234
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19249              		.loc 1 1050 29 view .LVU6235
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19250              		.loc 1 1051 13 view .LVU6236
 19251 0b86 E8000000 		call	tune_benchmark	#
 19251      00
 19252              	.LVL1149:
1052:sieve_extend.c ****         }
 19253              		.loc 1 1052 13 view .LVU6237
 19254              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19255              		.loc 1 1052 41 is_stmt 0 view .LVU6238
 19256 0b8b 488B7C24 		mov	rdi, QWORD PTR 40[rsp]	# ivtmp.768, %sfp
 19256      28
 19257 0b90 4C8D8B40 		lea	r9, 576[rbx]	# ivtmp.768,
 19257      020000
 19258 0b97 4C894C24 		mov	QWORD PTR 40[rsp], r9	# %sfp, ivtmp.768
 19258      28
 19259              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19260              		.loc 1 1050 48 view .LVU6239
 19261 0b9c 488D7506 		lea	rsi, 6[rbp]	# i,
 19262              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19263              		.loc 1 1052 41 view .LVU6240
 19264 0ba0 4C012F   		add	QWORD PTR [rdi], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19265              		.loc 1 1050 47 is_stmt 1 view .LVU6241
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19266              		.loc 1 1050 29 view .LVU6242
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19267              		.loc 1 1051 13 view .LVU6243
 19268 0ba3 4C89E7   		mov	rdi, r12	#, tuning_result
 19269 0ba6 E8000000 		call	tune_benchmark	#
 19269      00
 19270              	.LVL1150:
1052:sieve_extend.c ****         }
 19271              		.loc 1 1052 13 view .LVU6244
 19272              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19273              		.loc 1 1052 41 is_stmt 0 view .LVU6245
 19274 0bab 488B4424 		mov	rax, QWORD PTR 40[rsp]	# ivtmp.768, %sfp
 19274      28
 19275              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19276              		.loc 1 1050 48 view .LVU6246
 19277 0bb0 488D7507 		lea	rsi, 7[rbp]	# i,
 19278 0bb4 4C8D83A0 		lea	r8, 672[rbx]	# ivtmp.768,
 19278      020000
 19279              	# sieve_extend.c:1051:             tune_benchmark(tuning_result, i);
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19280              		.loc 1 1051 13 view .LVU6247
 19281 0bbb 4C89E7   		mov	rdi, r12	#, tuning_result
GAS LISTING /tmp/ccfflXEb.s 			page 506


 19282 0bbe 4C894424 		mov	QWORD PTR 40[rsp], r8	# %sfp, ivtmp.768
 19282      28
 19283              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19284              		.loc 1 1050 48 view .LVU6248
 19285 0bc3 4883C508 		add	rbp, 8	# i,
 19286              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19287              		.loc 1 1052 41 view .LVU6249
 19288 0bc7 4C0128   		add	QWORD PTR [rax], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19289              		.loc 1 1050 47 is_stmt 1 view .LVU6250
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19290              		.loc 1 1050 29 view .LVU6251
1051:sieve_extend.c ****             tuning_result[i].sample_max += sample_max;
 19291              		.loc 1 1051 13 view .LVU6252
 19292 0bca 4881C300 		add	rbx, 768	# ivtmp.768,
 19292      030000
 19293 0bd1 E8000000 		call	tune_benchmark	#
 19293      00
 19294              	.LVL1151:
1052:sieve_extend.c ****         }
 19295              		.loc 1 1052 13 view .LVU6253
 19296              	# sieve_extend.c:1052:             tuning_result[i].sample_max += sample_max;
1052:sieve_extend.c ****         }
 19297              		.loc 1 1052 41 is_stmt 0 view .LVU6254
 19298 0bd6 488B7424 		mov	rsi, QWORD PTR 40[rsp]	# ivtmp.768, %sfp
 19298      28
 19299 0bdb 4C012E   		add	QWORD PTR [rsi], r13	# MEM[base: _159, offset: 0B], sample_max
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19300              		.loc 1 1050 47 is_stmt 1 view .LVU6255
 19301              	.LVL1152:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19302              		.loc 1 1050 29 view .LVU6256
 19303              	# sieve_extend.c:1050:         for (counter_t i=0; i<tuning_results; i++) {
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19304              		.loc 1 1050 9 is_stmt 0 view .LVU6257
 19305 0bde 4939EF   		cmp	r15, rbp	# tuning_results, i
 19306 0be1 0F8501FF 		jne	.L1519	#,
 19306      FFFF
 19307 0be7 E9E0FDFF 		jmp	.L1522	#
 19307      FF
 19308              	.LVL1153:
 19309 0bec 0F1F4000 		.p2align 4,,7
 19310              		.p2align 3
 19311              	.L1617:
1050:sieve_extend.c ****             tune_benchmark(tuning_result, i);
 19312              		.loc 1 1050 9 view .LVU6258
 19313              	.LBE1141:
 19314              	.LBB1142:
 19315              	.LBB1124:
 19316              	.LBB1123:
 19317              	.LBB1122:
 19318              	.LBB1120:
 19319              	.LBB1118:
 19320              	.LBB1107:
 19321              	.LBB1108:
GAS LISTING /tmp/ccfflXEb.s 			page 507


 19322              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19323              		.loc 3 107 10 view .LVU6259
 19324 0bf0 488D3500 		lea	rsi, .LC52[rip]	#,
 19324      000000
 19325 0bf7 BF010000 		mov	edi, 1	#,
 19325      00
 19326 0bfc C5FB115C 		vmovsd	QWORD PTR 56[rsp], xmm3	# %sfp, _256
 19326      2438
 19327              	.LBE1108:
 19328              	.LBE1107:
1021:sieve_extend.c ****                         }
 19329              		.loc 1 1021 60 is_stmt 1 view .LVU6260
 19330              	.LVL1154:
 19331              	.LBB1110:
 19332              	.LBI1107:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19333              		.loc 3 105 1 view .LVU6261
 19334              	.LBB1109:
 19335              		.loc 3 107 3 view .LVU6262
 19336              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19337              		.loc 3 107 10 is_stmt 0 view .LVU6263
 19338 0c02 31C0     		xor	eax, eax	#
 19339 0c04 E8000000 		call	__printf_chk@PLT	#
 19339      00
 19340              	.LVL1155:
 19341              		.loc 3 107 10 view .LVU6264
 19342              	.LBE1109:
 19343              	.LBE1110:
1021:sieve_extend.c ****                         }
 19344              		.loc 1 1021 76 is_stmt 1 view .LVU6265
 19345              	.LBB1111:
 19346              	.LBI1111:
 937:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19347              		.loc 1 937 20 view .LVU6266
 19348              	.LBB1112:
 938:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19349              		.loc 1 938 5 view .LVU6267
 19350              	.LBB1113:
 19351              	.LBI1113:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19352              		.loc 3 105 1 view .LVU6268
 19353              	.LBB1114:
 19354              		.loc 3 107 3 view .LVU6269
 19355              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19356              		.loc 3 107 10 is_stmt 0 view .LVU6270
 19357 0c09 4D8B4538 		mov	r8, QWORD PTR 56[r13]	# MEM[base: _520, offset: 56B], MEM[base: _520, offset: 56B]
 19358 0c0d BF010000 		mov	edi, 1	#,
 19358      00
 19359 0c12 498B4D10 		mov	rcx, QWORD PTR 16[r13]	# MEM[base: _520, offset: 16B], MEM[base: _520, offset: 16B]
 19360 0c16 488D3500 		lea	rsi, .LC53[rip]	#,
 19360      000000
 19361 0c1d C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r13]	# MEM[base: _520, offset: 80B], MEM[base: _520, offset: 80B]
 19361      4550
 19362 0c23 B8030000 		mov	eax, 3	#,
 19362      00
 19363 0c28 498B5508 		mov	rdx, QWORD PTR 8[r13]	# MEM[base: _520, offset: 8B], MEM[base: _520, offset: 8B]
 19364 0c2c 4C894424 		mov	QWORD PTR 24[rsp], r8	#, MEM[base: _520, offset: 56B]
GAS LISTING /tmp/ccfflXEb.s 			page 508


 19364      18
 19365 0c31 4D8B5548 		mov	r10, QWORD PTR 72[r13]	# MEM[base: _520, offset: 72B], MEM[base: _520, offset: 72B]
 19366 0c35 4C895424 		mov	QWORD PTR 16[rsp], r10	#, MEM[base: _520, offset: 72B]
 19366      10
 19367 0c3a 4D8B5D30 		mov	r11, QWORD PTR 48[r13]	# MEM[base: _520, offset: 48B], MEM[base: _520, offset: 48B]
 19368 0c3e 4C895C24 		mov	QWORD PTR 8[rsp], r11	#, MEM[base: _520, offset: 48B]
 19368      08
 19369 0c43 4D8B4D28 		mov	r9, QWORD PTR 40[r13]	# MEM[base: _520, offset: 40B], MEM[base: _520, offset: 40B]
 19370 0c47 4C890C24 		mov	QWORD PTR [rsp], r9	#, MEM[base: _520, offset: 40B]
 19371 0c4b 4D8B4D20 		mov	r9, QWORD PTR 32[r13]	#, MEM[base: _520, offset: 32B]
 19372 0c4f 4D8B4518 		mov	r8, QWORD PTR 24[r13]	#, MEM[base: _520, offset: 24B]
 19373 0c53 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r13]	#, MEM[base: _520, offset: 88B]
 19373      5558
 19374 0c59 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r13]	#, MEM[base: _520, offset: 64B]
 19374      4D40
 19375 0c5f E8000000 		call	__printf_chk@PLT	#
 19375      00
 19376              	.LVL1156:
 19377              		.loc 3 107 10 view .LVU6271
 19378              	.LBE1114:
 19379              	.LBE1113:
 19380              	# sieve_extend.c:943: }
 943:sieve_extend.c **** 
 19381              		.loc 1 943 1 view .LVU6272
 19382 0c64 488B4C24 		mov	rcx, QWORD PTR 40[rsp]	# mediumstep_faster, %sfp
 19382      28
 19383 0c69 488B7C24 		mov	rdi, QWORD PTR 48[rsp]	# smallstep_faster, %sfp
 19383      30
 19384 0c6e 4C897424 		mov	QWORD PTR 96[rsp], r14	# %sfp, vectorstep_faster
 19384      60
 19385              	.LBE1112:
 19386              	.LBE1111:
 19387              	# sieve_extend.c:1017:                             best_blocksize_bits = blocksize_bits;
1017:sieve_extend.c ****                             best_smallstep_faster = smallstep_faster;
 19388              		.loc 1 1017 49 view .LVU6273
 19389 0c73 48895C24 		mov	QWORD PTR 72[rsp], rbx	# %sfp, ivtmp.787
 19389      48
 19390              	.LBB1116:
 19391              	.LBB1115:
 19392              	# sieve_extend.c:943: }
 943:sieve_extend.c **** 
 19393              		.loc 1 943 1 view .LVU6274
 19394 0c78 48894C24 		mov	QWORD PTR 88[rsp], rcx	# %sfp, mediumstep_faster
 19394      58
 19395 0c7d 48897C24 		mov	QWORD PTR 80[rsp], rdi	# %sfp, smallstep_faster
 19395      50
 19396 0c82 E90DFCFF 		jmp	.L1508	#
 19396      FF
 19397              	.LVL1157:
 19398              	.L1518:
 943:sieve_extend.c **** 
 19399              		.loc 1 943 1 view .LVU6275
 19400              	.LBE1115:
 19401              	.LBE1116:
 19402              	.LBE1118:
 19403              	.LBE1120:
 19404              	.LBE1122:
GAS LISTING /tmp/ccfflXEb.s 			page 509


 19405              	.LBE1123:
 19406              	.LBE1124:
 19407              	.LBE1142:
1039:sieve_extend.c ****             printf("(%ju) ",(uintmax_t)step); tuning_result_print(tuning_result[tuning_result_index
 19408              		.loc 1 1039 13 is_stmt 1 view .LVU6276
1040:sieve_extend.c ****             if (option_verboselevel >= 3) {
 19409              		.loc 1 1040 13 view .LVU6277
 19410              	.LBB1143:
 19411              	.LBI1143:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19412              		.loc 3 105 1 view .LVU6278
 19413              	.LBB1144:
 19414              		.loc 3 107 3 view .LVU6279
 19415              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19416              		.loc 3 107 10 is_stmt 0 view .LVU6280
 19417 0c87 488B5424 		mov	rdx, QWORD PTR 48[rsp]	#, %sfp
 19417      30
 19418 0c8c 488D3500 		lea	rsi, .LC57[rip]	#,
 19418      000000
 19419 0c93 BF010000 		mov	edi, 1	#,
 19419      00
 19420 0c98 31C0     		xor	eax, eax	#
 19421 0c9a E8000000 		call	__printf_chk@PLT	#
 19421      00
 19422              	.LVL1158:
 19423              		.loc 3 107 10 view .LVU6281
 19424              	.LBE1144:
 19425              	.LBE1143:
1040:sieve_extend.c ****             if (option_verboselevel >= 3) {
 19426              		.loc 1 1040 47 is_stmt 1 view .LVU6282
 19427              	.LBB1145:
 19428              	.LBI1145:
 937:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19429              		.loc 1 937 20 view .LVU6283
 19430              	.LBB1146:
 938:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19431              		.loc 1 938 5 view .LVU6284
 19432              	.LBB1147:
 19433              	.LBI1147:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19434              		.loc 3 105 1 view .LVU6285
 19435              	.LBB1148:
 19436              		.loc 3 107 3 view .LVU6286
 19437              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19438              		.loc 3 107 10 is_stmt 0 view .LVU6287
 19439 0c9f 498B5C24 		mov	rbx, QWORD PTR 56[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 56B], MEM[(struc
 19439      38
 19440 0ca4 488D3500 		lea	rsi, .LC53[rip]	#,
 19440      000000
 19441 0cab C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 80B], MEM[(s
 19441      442450
 19442 0cb2 498B4C24 		mov	rcx, QWORD PTR 16[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 16B], MEM[(struc
 19442      10
 19443 0cb7 498B5424 		mov	rdx, QWORD PTR 8[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 8B], MEM[(struct 
 19443      08
 19444 0cbc 48895C24 		mov	QWORD PTR 24[rsp], rbx	#, MEM[(struct tuning_result_type *)tuning_result_242 + 56B]
 19444      18
GAS LISTING /tmp/ccfflXEb.s 			page 510


 19445 0cc1 498B7C24 		mov	rdi, QWORD PTR 72[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 72B], MEM[(struc
 19445      48
 19446 0cc6 48897C24 		mov	QWORD PTR 16[rsp], rdi	#, MEM[(struct tuning_result_type *)tuning_result_242 + 72B]
 19446      10
 19447 0ccb BF010000 		mov	edi, 1	#,
 19447      00
 19448 0cd0 4D8B4C24 		mov	r9, QWORD PTR 48[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 48B], MEM[(struct
 19448      30
 19449 0cd5 4C894C24 		mov	QWORD PTR 8[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_242 + 48B]
 19449      08
 19450 0cda 498B4424 		mov	rax, QWORD PTR 40[r12]	# MEM[(struct tuning_result_type *)tuning_result_242 + 40B], MEM[(struc
 19450      28
 19451 0cdf 48890424 		mov	QWORD PTR [rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_242 + 40B]
 19452 0ce3 B8030000 		mov	eax, 3	#,
 19452      00
 19453 0ce8 4D8B4C24 		mov	r9, QWORD PTR 32[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 32B]
 19453      20
 19454 0ced 4D8B4424 		mov	r8, QWORD PTR 24[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 24B]
 19454      18
 19455 0cf2 C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 88B]
 19455      542458
 19456 0cf9 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r12]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 64B]
 19456      4C2440
 19457 0d00 E8000000 		call	__printf_chk@PLT	#
 19457      00
 19458              	.LVL1159:
 19459              		.loc 3 107 10 view .LVU6288
 19460              	.LBE1148:
 19461              	.LBE1147:
 19462              	.LBE1146:
 19463              	.LBE1145:
1041:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 19464              		.loc 1 1041 13 is_stmt 1 view .LVU6289
 19465              	# sieve_extend.c:1041:             if (option_verboselevel >= 3) {
1041:sieve_extend.c ****                 for (counter_t tuning_result_index=0; tuning_result_index<min(10,tuning_results); t
 19466              		.loc 1 1041 16 is_stmt 0 view .LVU6290
 19467 0d05 837C2468 		cmp	DWORD PTR 104[rsp], 2	# %sfp,
 19467      02
 19468 0d0a 0F84EEFC 		je	.L1520	#,
 19468      FFFF
 19469 0d10 498D5C24 		lea	rbx, 8[r12]	# ivtmp.774,
 19469      08
 19470              	.LBB1149:
 19471              	# sieve_extend.c:1042:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19472              		.loc 1 1042 32 view .LVU6291
 19473 0d15 31ED     		xor	ebp, ebp	# tuning_result_index
 19474              	.L1521:
 19475              	.LVL1160:
1043:sieve_extend.c ****                 }
 19476              		.loc 1 1043 21 is_stmt 1 view .LVU6292
 19477              	.LBB1133:
 19478              	.LBI1133:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19479              		.loc 3 105 1 view .LVU6293
 19480              	.LBB1134:
 19481              		.loc 3 107 3 view .LVU6294
GAS LISTING /tmp/ccfflXEb.s 			page 511


 19482              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19483              		.loc 3 107 10 is_stmt 0 view .LVU6295
 19484 0d17 488D3500 		lea	rsi, .LC58[rip]	#,
 19484      000000
 19485 0d1e BF010000 		mov	edi, 1	#,
 19485      00
 19486 0d23 31C0     		xor	eax, eax	#
 19487              	.LBE1134:
 19488              	.LBE1133:
 19489              	# sieve_extend.c:1042:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19490              		.loc 1 1042 118 view .LVU6296
 19491 0d25 4883C501 		add	rbp, 1	# tuning_result_index,
 19492              	.LVL1161:
 19493              	.LBB1136:
 19494              	.LBB1135:
 19495              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19496              		.loc 3 107 10 view .LVU6297
 19497 0d29 E8000000 		call	__printf_chk@PLT	#
 19497      00
 19498              	.LVL1162:
 19499              		.loc 3 107 10 view .LVU6298
 19500              	.LBE1135:
 19501              	.LBE1136:
1043:sieve_extend.c ****                 }
 19502              		.loc 1 1043 36 is_stmt 1 view .LVU6299
 19503              	.LBB1137:
 19504              	.LBI1137:
 937:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19505              		.loc 1 937 20 view .LVU6300
 19506              	.LBB1138:
 938:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19507              		.loc 1 938 5 view .LVU6301
 19508              	.LBB1139:
 19509              	.LBI1139:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19510              		.loc 3 105 1 view .LVU6302
 19511              	.LBB1140:
 19512              		.loc 3 107 3 view .LVU6303
 19513              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19514              		.loc 3 107 10 is_stmt 0 view .LVU6304
 19515 0d2e 488B7330 		mov	rsi, QWORD PTR 48[rbx]	# MEM[base: _224, offset: 48B], MEM[base: _224, offset: 48B]
 19516 0d32 BF010000 		mov	edi, 1	#,
 19516      00
 19517 0d37 488B4B08 		mov	rcx, QWORD PTR 8[rbx]	# MEM[base: _224, offset: 8B], MEM[base: _224, offset: 8B]
 19518 0d3b B8030000 		mov	eax, 3	#,
 19518      00
 19519 0d40 C5FB1043 		vmovsd	xmm0, QWORD PTR 72[rbx]	# MEM[base: _224, offset: 72B], MEM[base: _224, offset: 72B]
 19519      48
 19520 0d45 4883C360 		add	rbx, 96	# ivtmp.774,
 19521 0d49 48897424 		mov	QWORD PTR 24[rsp], rsi	#, MEM[base: _224, offset: 48B]
 19521      18
 19522 0d4e 488D3500 		lea	rsi, .LC53[rip]	#,
 19522      000000
 19523 0d55 4C8B43E0 		mov	r8, QWORD PTR -32[rbx]	# MEM[base: _224, offset: 64B], MEM[base: _224, offset: 64B]
 19524 0d59 4C894424 		mov	QWORD PTR 16[rsp], r8	#, MEM[base: _224, offset: 64B]
 19524      10
GAS LISTING /tmp/ccfflXEb.s 			page 512


 19525 0d5e 4C8B53C8 		mov	r10, QWORD PTR -56[rbx]	# MEM[base: _224, offset: 40B], MEM[base: _224, offset: 40B]
 19526 0d62 4C895424 		mov	QWORD PTR 8[rsp], r10	#, MEM[base: _224, offset: 40B]
 19526      08
 19527 0d67 488B53C0 		mov	rdx, QWORD PTR -64[rbx]	# MEM[base: _224, offset: 32B], MEM[base: _224, offset: 32B]
 19528 0d6b 48891424 		mov	QWORD PTR [rsp], rdx	#, MEM[base: _224, offset: 32B]
 19529 0d6f 4C8B4BB8 		mov	r9, QWORD PTR -72[rbx]	#, MEM[base: _224, offset: 24B]
 19530 0d73 4C8B43B0 		mov	r8, QWORD PTR -80[rbx]	#, MEM[base: _224, offset: 16B]
 19531 0d77 488B53A0 		mov	rdx, QWORD PTR -96[rbx]	#, MEM[base: _224, offset: 0B]
 19532 0d7b C5FB1053 		vmovsd	xmm2, QWORD PTR -16[rbx]	#, MEM[base: _224, offset: 80B]
 19532      F0
 19533 0d80 C5FB104B 		vmovsd	xmm1, QWORD PTR -40[rbx]	#, MEM[base: _224, offset: 56B]
 19533      D8
 19534 0d85 E8000000 		call	__printf_chk@PLT	#
 19534      00
 19535              	.LVL1163:
 19536              		.loc 3 107 10 view .LVU6305
 19537              	.LBE1140:
 19538              	.LBE1139:
 19539              	.LBE1138:
 19540              	.LBE1137:
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19541              		.loc 1 1042 99 is_stmt 1 view .LVU6306
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19542              		.loc 1 1042 55 view .LVU6307
 19543              	# sieve_extend.c:1042:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19544              		.loc 1 1042 75 is_stmt 0 view .LVU6308
 19545 0d8a 4983FF0A 		cmp	r15, 10	# tuning_results,
 19546 0d8e 4C89F1   		mov	rcx, r14	# tmp424, tmp476
 19547 0d91 490F46CF 		cmovbe	rcx, r15	# tuning_results,, tmp424
 19548              	# sieve_extend.c:1042:                 for (counter_t tuning_result_index=0; tuning_result_index<mi
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19549              		.loc 1 1042 17 view .LVU6309
 19550 0d95 4839CD   		cmp	rbp, rcx	# tuning_result_index, tmp424
 19551 0d98 0F8279FF 		jb	.L1521	#,
 19551      FFFF
 19552 0d9e E95BFCFF 		jmp	.L1520	#
 19552      FF
 19553              	.LVL1164:
 19554              	.L1612:
1042:sieve_extend.c ****                     printf("..."); tuning_result_print(tuning_result[tuning_result_index]);
 19555              		.loc 1 1042 17 view .LVU6310
 19556              	.LBE1149:
 19557              	.LBE1094:
 19558              	.LBE1093:
 19559              	.LBE1092:
1338:sieve_extend.c ****     }
 19560              		.loc 1 1338 39 is_stmt 1 view .LVU6311
 19561              	.LBB1168:
 19562              	.LBI1168:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19563              		.loc 3 105 1 view .LVU6312
 19564              	.LBB1169:
 19565              		.loc 3 107 3 view .LVU6313
 19566              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19567              		.loc 3 107 10 is_stmt 0 view .LVU6314
 19568 0da3 488D3D00 		lea	rdi, .LC50[rip]	#,
GAS LISTING /tmp/ccfflXEb.s 			page 513


 19568      000000
 19569              	.LBE1169:
 19570              	.LBE1168:
 19571              	# sieve_extend.c:1341:     counter_t best_blocksize_bits = default_blocksize;
1341:sieve_extend.c ****     if (option_tunelevel) {
 19572              		.loc 1 1341 15 view .LVU6315
 19573 0daa 41BC0000 		mov	r12d, 262144	# best_result$blocksize_bits,
 19573      0400
 19574              	.LBB1171:
 19575              	.LBB1170:
 19576              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19577              		.loc 3 107 10 view .LVU6316
 19578 0db0 E8000000 		call	puts@PLT	#
 19578      00
 19579              	.LVL1165:
 19580              		.loc 3 107 10 view .LVU6317
 19581              	.LBE1170:
 19582              	.LBE1171:
1341:sieve_extend.c ****     if (option_tunelevel) {
 19583              		.loc 1 1341 5 is_stmt 1 view .LVU6318
1342:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19584              		.loc 1 1342 5 view .LVU6319
 19585              	# sieve_extend.c:1342:     if (option_tunelevel) {
1342:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19586              		.loc 1 1342 9 is_stmt 0 view .LVU6320
 19587 0db5 448B8424 		mov	r8d, DWORD PTR 172[rsp]	# option_tunelevel.41_63, option_tunelevel
 19587      AC000000 
 19588              	# sieve_extend.c:1342:     if (option_tunelevel) {
1342:sieve_extend.c ****         tuning_result_type tuning_result = tune(option_tunelevel, option_maxFactor, option_verbosel
 19589              		.loc 1 1342 8 view .LVU6321
 19590 0dbd 4585C0   		test	r8d, r8d	# option_tunelevel.41_63
 19591 0dc0 0F858701 		jne	.L1619	#,
 19591      0000
 19592              	.LVL1166:
 19593              	.L1499:
 19594              	.LBB1172:
1352:sieve_extend.c ****         counter_t passes = 0;
 19595              		.loc 1 1352 9 is_stmt 1 view .LVU6322
 19596              	# sieve_extend.c:1352:         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize
1352:sieve_extend.c ****         counter_t passes = 0;
 19597              		.loc 1 1352 12 is_stmt 0 view .LVU6323
 19598 0dc6 83BC24A8 		cmp	DWORD PTR 168[rsp], 0	# option_verboselevel,
 19598      00000000 
 19599 0dce 0F8E1AF6 		jle	.L1526	#,
 19599      FFFF
1352:sieve_extend.c ****         counter_t passes = 0;
 19600              		.loc 1 1352 39 is_stmt 1 discriminator 1 view .LVU6324
 19601              	.LVL1167:
 19602              	.LBB1076:
 19603              	.LBI1076:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19604              		.loc 3 105 1 discriminator 1 view .LVU6325
 19605              	.LBB1077:
 19606              		.loc 3 107 3 discriminator 1 view .LVU6326
 19607              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19608              		.loc 3 107 10 is_stmt 0 discriminator 1 view .LVU6327
 19609 0dd4 4C8B0D00 		mov	r9, QWORD PTR global_VECTORSTEP_FASTER[rip]	#, global_VECTORSTEP_FASTER
GAS LISTING /tmp/ccfflXEb.s 			page 514


 19609      000000
 19610 0ddb 4C89E2   		mov	rdx, r12	#, best_result$blocksize_bits
 19611 0dde 4C8B0500 		mov	r8, QWORD PTR global_MEDIUMSTEP_FASTER[rip]	#, global_MEDIUMSTEP_FASTER
 19611      000000
 19612 0de5 488D3500 		lea	rsi, .LC60[rip]	#,
 19612      000000
 19613 0dec 488B0D00 		mov	rcx, QWORD PTR global_SMALLSTEP_FASTER[rip]	#, global_SMALLSTEP_FASTER
 19613      000000
 19614 0df3 BF010000 		mov	edi, 1	#,
 19614      00
 19615 0df8 31C0     		xor	eax, eax	#
 19616 0dfa E8000000 		call	__printf_chk@PLT	#
 19616      00
 19617              	.LVL1168:
 19618 0dff E9EAF5FF 		jmp	.L1526	#
 19618      FF
 19619              	.LVL1169:
 19620              	.L1618:
 19621              		.loc 3 107 10 discriminator 1 view .LVU6328
 19622              	.LBE1077:
 19623              	.LBE1076:
 19624              	.LBE1172:
 19625              	.LBB1173:
 19626              	.LBB1165:
 19627              	.LBB1162:
1056:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19628              		.loc 1 1056 5 is_stmt 1 view .LVU6329
 19629              	# sieve_extend.c:1056:     tuning_result_type best_result = tuning_result[0];
1056:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19630              		.loc 1 1056 24 is_stmt 0 view .LVU6330
 19631 0e04 4C8B7C24 		mov	r15, QWORD PTR 64[rsp]	# tuning_result, %sfp
 19631      40
 19632              	.LVL1170:
 19633              	# sieve_extend.c:1057:     if (option_verboselevel >= 1) {
1057:sieve_extend.c ****         tuning_result_index = 0;
 19634              		.loc 1 1057 8 view .LVU6331
 19635 0e09 837C2468 		cmp	DWORD PTR 104[rsp], 0	# %sfp,
 19635      00
 19636              	# sieve_extend.c:1056:     tuning_result_type best_result = tuning_result[0];
1056:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19637              		.loc 1 1056 24 view .LVU6332
 19638 0e0e 4D8B6708 		mov	r12, QWORD PTR 8[r15]	# best_result$blocksize_bits, MEM[(struct tuning_result_type *)tuning_re
 19639              	.LVL1171:
1056:sieve_extend.c ****     if (option_verboselevel >= 1) {
 19640              		.loc 1 1056 24 view .LVU6333
 19641 0e12 4D8B7720 		mov	r14, QWORD PTR 32[r15]	# best_result$smallstep_faster, MEM[(struct tuning_result_type *)tuning
 19642 0e16 498B6F28 		mov	rbp, QWORD PTR 40[r15]	# best_result$mediumstep_faster, MEM[(struct tuning_result_type *)tunin
 19643 0e1a 498B5F30 		mov	rbx, QWORD PTR 48[r15]	# best_result$vectorstep_faster, MEM[(struct tuning_result_type *)tunin
1057:sieve_extend.c ****         tuning_result_index = 0;
 19644              		.loc 1 1057 5 is_stmt 1 view .LVU6334
 19645              	# sieve_extend.c:1057:     if (option_verboselevel >= 1) {
1057:sieve_extend.c ****         tuning_result_index = 0;
 19646              		.loc 1 1057 8 is_stmt 0 view .LVU6335
 19647 0e1e 7E6E     		jle	.L1524	#,
1058:sieve_extend.c ****         printf(".Best result:"); tuning_result_print(tuning_result[tuning_result_index]);
 19648              		.loc 1 1058 9 is_stmt 1 view .LVU6336
 19649              	.LVL1172:
GAS LISTING /tmp/ccfflXEb.s 			page 515


1059:sieve_extend.c ****     }
 19650              		.loc 1 1059 9 view .LVU6337
 19651              	.LBB1150:
 19652              	.LBI1150:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19653              		.loc 3 105 1 view .LVU6338
 19654              	.LBB1151:
 19655              		.loc 3 107 3 view .LVU6339
 19656              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19657              		.loc 3 107 10 is_stmt 0 view .LVU6340
 19658 0e20 488D3500 		lea	rsi, .LC59[rip]	#,
 19658      000000
 19659 0e27 BF010000 		mov	edi, 1	#,
 19659      00
 19660 0e2c 31C0     		xor	eax, eax	#
 19661 0e2e E8000000 		call	__printf_chk@PLT	#
 19661      00
 19662              	.LVL1173:
 19663              		.loc 3 107 10 view .LVU6341
 19664              	.LBE1151:
 19665              	.LBE1150:
1059:sieve_extend.c ****     }
 19666              		.loc 1 1059 34 is_stmt 1 view .LVU6342
 19667              	.LBB1152:
 19668              	.LBI1152:
 937:sieve_extend.c ****     printf("blocksize_bits %10ju; blocksize %4jukb; free_bits %5ju; small %2ju; medium %2ju; vector
 19669              		.loc 1 937 20 view .LVU6343
 19670              	.LBB1153:
 938:sieve_extend.c ****                             (uintmax_t)tuning_result.blocksize_bits, (uintmax_t)tuning_result.block
 19671              		.loc 1 938 5 view .LVU6344
 19672              	.LBB1154:
 19673              	.LBI1154:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19674              		.loc 3 105 1 view .LVU6345
 19675              	.LBB1155:
 19676              		.loc 3 107 3 view .LVU6346
 19677              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19678              		.loc 3 107 10 is_stmt 0 view .LVU6347
 19679 0e33 4D8B4F38 		mov	r9, QWORD PTR 56[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 56B], MEM[(struct
 19680 0e37 BF010000 		mov	edi, 1	#,
 19680      00
 19681 0e3c C4C17B10 		vmovsd	xmm0, QWORD PTR 80[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 80B], MEM[(s
 19681      4750
 19682 0e42 498B4F10 		mov	rcx, QWORD PTR 16[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 16B], MEM[(struc
 19683 0e46 498B5708 		mov	rdx, QWORD PTR 8[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 8B], MEM[(struct 
 19684 0e4a 4C894C24 		mov	QWORD PTR 24[rsp], r9	#, MEM[(struct tuning_result_type *)tuning_result_242 + 56B]
 19684      18
 19685 0e4f 498B4748 		mov	rax, QWORD PTR 72[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 72B], MEM[(struc
 19686 0e53 48894424 		mov	QWORD PTR 16[rsp], rax	#, MEM[(struct tuning_result_type *)tuning_result_242 + 72B]
 19686      10
 19687 0e58 B8030000 		mov	eax, 3	#,
 19687      00
 19688 0e5d 498B7730 		mov	rsi, QWORD PTR 48[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 48B], MEM[(struc
 19689 0e61 48897424 		mov	QWORD PTR 8[rsp], rsi	#, MEM[(struct tuning_result_type *)tuning_result_242 + 48B]
 19689      08
 19690 0e66 488D3500 		lea	rsi, .LC53[rip]	#,
 19690      000000
GAS LISTING /tmp/ccfflXEb.s 			page 516


 19691 0e6d 4D8B4728 		mov	r8, QWORD PTR 40[r15]	# MEM[(struct tuning_result_type *)tuning_result_242 + 40B], MEM[(struct
 19692 0e71 4C890424 		mov	QWORD PTR [rsp], r8	#, MEM[(struct tuning_result_type *)tuning_result_242 + 40B]
 19693 0e75 4D8B4F20 		mov	r9, QWORD PTR 32[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 32B]
 19694 0e79 4D8B4718 		mov	r8, QWORD PTR 24[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 24B]
 19695 0e7d C4C17B10 		vmovsd	xmm2, QWORD PTR 88[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 88B]
 19695      5758
 19696 0e83 C4C17B10 		vmovsd	xmm1, QWORD PTR 64[r15]	#, MEM[(struct tuning_result_type *)tuning_result_242 + 64B]
 19696      4F40
 19697 0e89 E8000000 		call	__printf_chk@PLT	#
 19697      00
 19698              	.LVL1174:
 19699              	.L1524:
 19700              		.loc 3 107 10 view .LVU6348
 19701              	.LBE1155:
 19702              	.LBE1154:
 19703              	.LBE1153:
 19704              	.LBE1152:
1062:sieve_extend.c ****     return best_result;
 19705              		.loc 1 1062 5 is_stmt 1 view .LVU6349
 19706 0e8e 488B7C24 		mov	rdi, QWORD PTR 64[rsp]	#, %sfp
 19706      40
 19707 0e93 E8000000 		call	free@PLT	#
 19707      00
 19708              	.LVL1175:
1063:sieve_extend.c **** }
 19709              		.loc 1 1063 5 view .LVU6350
1063:sieve_extend.c **** }
 19710              		.loc 1 1063 5 is_stmt 0 view .LVU6351
 19711              	.LBE1162:
 19712              	.LBE1165:
1344:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 19713              		.loc 1 1344 9 is_stmt 1 view .LVU6352
 19714              	# sieve_extend.c:1344:         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
1344:sieve_extend.c ****         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
 19715              		.loc 1 1344 33 is_stmt 0 view .LVU6353
 19716 0e98 4C893500 		mov	QWORD PTR global_SMALLSTEP_FASTER[rip], r14	# global_SMALLSTEP_FASTER, best_result$smallstep_f
 19716      000000
1345:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 19717              		.loc 1 1345 9 is_stmt 1 view .LVU6354
 19718              	.LBE1173:
 19719              	# sieve_extend.c:1351:     if (best_blocksize_bits > 0) {
1351:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19720              		.loc 1 1351 8 is_stmt 0 view .LVU6355
 19721 0e9f 4D85E4   		test	r12, r12	# best_result$blocksize_bits
 19722              	.LBB1174:
 19723              	# sieve_extend.c:1345:         global_MEDIUMSTEP_FASTER = tuning_result.mediumstep_faster;
1345:sieve_extend.c ****         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
 19724              		.loc 1 1345 34 view .LVU6356
 19725 0ea2 48892D00 		mov	QWORD PTR global_MEDIUMSTEP_FASTER[rip], rbp	# global_MEDIUMSTEP_FASTER, best_result$mediumste
 19725      000000
1346:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 19726              		.loc 1 1346 9 is_stmt 1 view .LVU6357
 19727              	# sieve_extend.c:1346:         global_VECTORSTEP_FASTER = tuning_result.vectorstep_faster;
1346:sieve_extend.c ****         best_blocksize_bits = tuning_result.blocksize_bits;
 19728              		.loc 1 1346 34 is_stmt 0 view .LVU6358
 19729 0ea9 48891D00 		mov	QWORD PTR global_VECTORSTEP_FASTER[rip], rbx	# global_VECTORSTEP_FASTER, best_result$vectorste
 19729      000000
GAS LISTING /tmp/ccfflXEb.s 			page 517


1347:sieve_extend.c ****     }
 19730              		.loc 1 1347 9 is_stmt 1 view .LVU6359
 19731              	.LVL1176:
1347:sieve_extend.c ****     }
 19732              		.loc 1 1347 9 is_stmt 0 view .LVU6360
 19733              	.LBE1174:
1350:sieve_extend.c ****     if (best_blocksize_bits > 0) {
 19734              		.loc 1 1350 5 is_stmt 1 view .LVU6361
1351:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19735              		.loc 1 1351 5 view .LVU6362
 19736              	# sieve_extend.c:1351:     if (best_blocksize_bits > 0) {
1351:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19737              		.loc 1 1351 8 is_stmt 0 view .LVU6363
 19738 0eb0 0F848CF6 		je	.L1525	#,
 19738      FFFF
 19739 0eb6 E90BFFFF 		jmp	.L1499	#
 19739      FF
 19740              	.LVL1177:
 19741              	.L1534:
1351:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19742              		.loc 1 1351 8 view .LVU6364
 19743 0ebb 488D3D00 		lea	rdi, CSWTCH.124[rip]	# tmp339,
 19743      000000
 19744 0ec2 4C8D0D00 		lea	r9, CSWTCH.125[rip]	# tmp341,
 19744      000000
 19745 0ec9 488D2D00 		lea	rbp, CSWTCH.126[rip]	# tmp343,
 19745      000000
 19746              	.LVL1178:
1351:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19747              		.loc 1 1351 8 view .LVU6365
 19748 0ed0 488D1D00 		lea	rbx, CSWTCH.127[rip]	# tmp345,
 19748      000000
 19749              	.LVL1179:
1351:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19750              		.loc 1 1351 8 view .LVU6366
 19751 0ed7 4A8B0CC7 		mov	rcx, QWORD PTR [rdi+r8*8]	# smallstep_faster_steps, CSWTCH.124
 19752 0edb 4F8B34C1 		mov	r14, QWORD PTR [r9+r8*8]	# vectorstep_faster_steps, CSWTCH.125
 19753 0edf 4E8B7CC5 		mov	r15, QWORD PTR 0[rbp+r8*8]	# freebits_steps, CSWTCH.126
 19753      00
 19754              	.LVL1180:
1351:sieve_extend.c ****         if (option_verboselevel >= 1) printf("Benchmarking... with blocksize %ju steps: %ju/%ju/%ju
 19755              		.loc 1 1351 8 view .LVU6367
 19756 0ee4 C4A17B10 		vmovsd	xmm7, QWORD PTR [rbx+r8*8]	# sample_duration, CSWTCH.127
 19756      3CC3
 19757 0eea 48898C24 		mov	QWORD PTR 152[rsp], rcx	# %sfp, smallstep_faster_steps
 19757      98000000 
 19758 0ef2 4C89B424 		mov	QWORD PTR 144[rsp], r14	# %sfp, vectorstep_faster_steps
 19758      90000000 
 19759 0efa 4C897C24 		mov	QWORD PTR 112[rsp], r15	# %sfp, freebits_steps
 19759      70
 19760              	.LBB1175:
 19761              	# sieve_extend.c:1269:     for (int arg=1; arg < argc; arg++) {
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19762              		.loc 1 1269 14 view .LVU6368
 19763 0eff 48C74424 		mov	QWORD PTR 120[rsp], 8	# %sfp,
 19763      78080000 
 19763      00
GAS LISTING /tmp/ccfflXEb.s 			page 518


 19764 0f08 C5FB11BC 		vmovsd	QWORD PTR 128[rsp], xmm7	# %sfp, sample_duration
 19764      24800000 
 19764      00
 19765              	.L1500:
 19766              	.LVL1181:
1269:sieve_extend.c ****         if (strcmp(argv[arg], "--help")==0) { usage(argv[0]); }
 19767              		.loc 1 1269 14 view .LVU6369
 19768              	.LBE1175:
 19769              	.LBB1176:
 19770              	.LBB1166:
 19771              	.LBB1163:
 988:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19772              		.loc 1 988 5 is_stmt 1 view .LVU6370
 19773              	# sieve_extend.c:988:     if (option_verboselevel >= 1) printf("Tuning..."); 
 988:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19774              		.loc 1 988 8 is_stmt 0 view .LVU6371
 19775 0f11 448B6C24 		mov	r13d, DWORD PTR 104[rsp]	# option_verboselevel.42_64, %sfp
 19775      68
 19776              	.LVL1182:
 988:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19777              		.loc 1 988 8 view .LVU6372
 19778 0f16 4585ED   		test	r13d, r13d	# option_verboselevel.42_64
 19779 0f19 0F8EEDF7 		jle	.L1502	#,
 19779      FFFF
 988:sieve_extend.c ****     if (option_verboselevel >= 2) printf("\n");
 19780              		.loc 1 988 35 is_stmt 1 view .LVU6373
 19781              	.LVL1183:
 19782              	.LBB1156:
 19783              	.LBI1156:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19784              		.loc 3 105 1 view .LVU6374
 19785              	.LBB1157:
 19786              		.loc 3 107 3 view .LVU6375
 19787              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19788              		.loc 3 107 10 is_stmt 0 view .LVU6376
 19789 0f1f 31C0     		xor	eax, eax	#
 19790 0f21 488D3500 		lea	rsi, .LC51[rip]	#,
 19790      000000
 19791 0f28 BF010000 		mov	edi, 1	#,
 19791      00
 19792              	.LBE1157:
 19793              	.LBE1156:
 19794              	# sieve_extend.c:989:     if (option_verboselevel >= 2) printf("\n");
 989:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19795              		.loc 1 989 8 view .LVU6377
 19796 0f2d 4489EB   		mov	ebx, r13d	# option_verboselevel.42_64, option_verboselevel.42_64
 19797              	.LBB1159:
 19798              	.LBB1158:
 19799              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19800              		.loc 3 107 10 view .LVU6378
 19801 0f30 E8000000 		call	__printf_chk@PLT	#
 19801      00
 19802              	.LVL1184:
 19803              		.loc 3 107 10 view .LVU6379
 19804              	.LBE1158:
 19805              	.LBE1159:
 989:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
GAS LISTING /tmp/ccfflXEb.s 			page 519


 19806              		.loc 1 989 5 is_stmt 1 view .LVU6380
 19807              	# sieve_extend.c:989:     if (option_verboselevel >= 2) printf("\n");
 989:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19808              		.loc 1 989 8 is_stmt 0 view .LVU6381
 19809 0f35 83EB01   		sub	ebx, 1	# option_verboselevel.42_64,
 19810 0f38 0F84CEF7 		je	.L1502	#,
 19810      FFFF
 989:sieve_extend.c ****     const size_t max_results = ((size_t)(WORD_SIZE_counter/smallstep_faster_steps)+1) * ((size_t)(W
 19811              		.loc 1 989 35 is_stmt 1 view .LVU6382
 19812              	.LVL1185:
 19813              	.LBB1160:
 19814              	.LBI1160:
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19815              		.loc 3 105 1 view .LVU6383
 19816              	.LBB1161:
 19817              		.loc 3 107 3 view .LVU6384
 19818              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:107:   return __printf_chk (__USE_FORTIFY_LEVEL - 1, 
 19819              		.loc 3 107 10 is_stmt 0 view .LVU6385
 19820 0f3e BF0A0000 		mov	edi, 10	#,
 19820      00
 19821 0f43 E8000000 		call	putchar@PLT	#
 19821      00
 19822              	.LVL1186:
 19823 0f48 E9BFF7FF 		jmp	.L1502	#
 19823      FF
 19824              	.LVL1187:
 19825              	.L1619:
 19826              		.loc 3 107 10 view .LVU6386
 19827              	.LBE1161:
 19828              	.LBE1160:
 19829              	.LBE1163:
 19830              	.LBE1166:
1343:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19831              		.loc 1 1343 9 is_stmt 1 view .LVU6387
 19832              	# sieve_extend.c:1343:         tuning_result_type tuning_result = tune(option_tunelevel, option_max
1343:sieve_extend.c ****         global_SMALLSTEP_FASTER = tuning_result.smallstep_faster;
 19833              		.loc 1 1343 44 is_stmt 0 view .LVU6388
 19834 0f4d 8B9424A8 		mov	edx, DWORD PTR 168[rsp]	# option_verboselevel.42_64, option_verboselevel
 19834      000000
 19835 0f54 4183E801 		sub	r8d, 1	#,
 19836 0f58 488BB424 		mov	rsi, QWORD PTR 176[rsp]	# option_maxFactor.43_65, option_maxFactor
 19836      B0000000 
 19837 0f60 4183F802 		cmp	r8d, 2	# _215,
 19838 0f64 89542468 		mov	DWORD PTR 104[rsp], edx	# %sfp, option_verboselevel.42_64
 19839 0f68 4889B424 		mov	QWORD PTR 136[rsp], rsi	# %sfp, option_maxFactor.43_65
 19839      88000000 
 19840              	.LVL1188:
 19841              	.LBB1167:
 945:sieve_extend.c ****     counter_t best_blocksize_bits = default_blocksize;
 19842              		.loc 1 945 27 is_stmt 1 view .LVU6389
 19843              	.LBB1164:
 946:sieve_extend.c **** 
 19844              		.loc 1 946 5 view .LVU6390
 948:sieve_extend.c ****     best_blocksize_bits = 0;
 19845              		.loc 1 948 5 view .LVU6391
 949:sieve_extend.c ****     counter_t best_smallstep_faster = 0;
 19846              		.loc 1 949 5 view .LVU6392
GAS LISTING /tmp/ccfflXEb.s 			page 520


 950:sieve_extend.c ****     counter_t best_mediumstep_faster = 0;
 19847              		.loc 1 950 5 view .LVU6393
 951:sieve_extend.c ****     counter_t best_vectorstep_faster = 0;
 19848              		.loc 1 951 5 view .LVU6394
 952:sieve_extend.c ****     counter_t smallstep_faster_steps = 4;
 19849              		.loc 1 952 5 view .LVU6395
 953:sieve_extend.c ****     counter_t mediumstep_faster_steps = 4;
 19850              		.loc 1 953 5 view .LVU6396
 954:sieve_extend.c ****     counter_t vectorstep_faster_steps = 32;
 19851              		.loc 1 954 5 view .LVU6397
 955:sieve_extend.c ****     counter_t freebits_steps = anticiped_cache_line_bytesize;
 19852              		.loc 1 955 5 view .LVU6398
 956:sieve_extend.c ****     counter_t sample_max = default_sample_max;
 19853              		.loc 1 956 5 view .LVU6399
 957:sieve_extend.c ****     double sample_duration = default_sample_duration;
 19854              		.loc 1 957 5 view .LVU6400
 958:sieve_extend.c **** 
 19855              		.loc 1 958 5 view .LVU6401
 961:sieve_extend.c ****         case 1:
 19856              		.loc 1 961 5 view .LVU6402
 19857 0f70 0F8645FF 		jbe	.L1534	#,
 19857      FFFF
 19858 0f76 C5FB1005 		vmovsd	xmm0, QWORD PTR .LC28[rip]	# sample_duration,
 19858      00000000 
 19859 0f7e 48C74424 		mov	QWORD PTR 120[rsp], 5	# %sfp,
 19859      78050000 
 19859      00
 19860 0f87 48C74424 		mov	QWORD PTR 112[rsp], 128	# %sfp,
 19860      70800000 
 19860      00
 19861 0f90 48C78424 		mov	QWORD PTR 144[rsp], 32	# %sfp,
 19861      90000000 
 19861      20000000 
 19862 0f9c 48C78424 		mov	QWORD PTR 152[rsp], 4	# %sfp,
 19862      98000000 
 19862      04000000 
 19863 0fa8 C5FB1184 		vmovsd	QWORD PTR 128[rsp], xmm0	# %sfp, sample_duration
 19863      24800000 
 19863      00
 19864 0fb1 E95BFFFF 		jmp	.L1500	#
 19864      FF
 19865              	.LVL1189:
 19866              	.L1605:
 961:sieve_extend.c ****         case 1:
 19867              		.loc 1 961 5 is_stmt 0 view .LVU6403
 19868              	.LBE1164:
 19869              	.LBE1167:
 19870              	.LBE1176:
 19871              	.LBB1177:
1272:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19872              		.loc 1 1272 34 is_stmt 1 discriminator 1 view .LVU6404
 19873              	.LBB1013:
 19874              	.LBI1013:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19875              		.loc 3 98 1 discriminator 1 view .LVU6405
 19876              	.LBB1014:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
GAS LISTING /tmp/ccfflXEb.s 			page 521


 19877              		.loc 3 100 3 discriminator 1 view .LVU6406
 19878              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19879              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6407
 19880 0fb6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19880      000000
 19881 0fbd BA1B0000 		mov	edx, 27	#,
 19881      00
 19882 0fc2 BE010000 		mov	esi, 1	#,
 19882      00
 19883 0fc7 488D3D00 		lea	rdi, .LC32[rip]	#,
 19883      000000
 19884 0fce E8000000 		call	fwrite@PLT	#
 19884      00
 19885              	.LVL1190:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19886              		.loc 3 100 10 discriminator 1 view .LVU6408
 19887              	.LBE1014:
 19888              	.LBE1013:
1272:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_verboselevel) != 1 || option_verboselevel > 4) {
 19889              		.loc 1 1272 83 is_stmt 1 discriminator 1 view .LVU6409
 19890 0fd3 E903F6FF 		jmp	.L1603	#
 19890      FF
 19891              	.L1482:
1282:sieve_extend.c ****             }
 19892              		.loc 1 1282 17 view .LVU6410
 19893              	.LVL1191:
 19894              	.LBB1015:
 19895              	.LBI1010:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19896              		.loc 3 98 1 view .LVU6411
 19897              	.LBB1012:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19898              		.loc 3 100 3 view .LVU6412
 19899              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19900              		.loc 3 100 10 is_stmt 0 view .LVU6413
 19901 0fd8 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_29
 19902 0fdb 488D1500 		lea	rdx, .LC38[rip]	#,
 19902      000000
 19903 0fe2 E9E1F5FF 		jmp	.L1602	#
 19903      FF
 19904              	.LVL1192:
 19905              	.L1486:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19906              		.loc 3 100 10 view .LVU6414
 19907              	.LBE1012:
 19908              	.LBE1015:
1289:sieve_extend.c ****             }
 19909              		.loc 1 1289 17 is_stmt 1 view .LVU6415
 19910              	.LBB1016:
 19911              	.LBI1016:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19912              		.loc 3 98 1 view .LVU6416
 19913              	.LBB1017:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19914              		.loc 3 100 3 view .LVU6417
GAS LISTING /tmp/ccfflXEb.s 			page 522


 19915              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19916              		.loc 3 100 10 is_stmt 0 view .LVU6418
 19917 0fe7 498B0F   		mov	rcx, QWORD PTR [r15]	#, *_41
 19918 0fea 488D1500 		lea	rdx, .LC43[rip]	#,
 19918      000000
 19919 0ff1 E9D2F5FF 		jmp	.L1602	#
 19919      FF
 19920              	.LVL1193:
 19921              	.L1608:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19922              		.loc 3 100 10 view .LVU6419
 19923              	.LBE1017:
 19924              	.LBE1016:
1280:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19925              		.loc 1 1280 34 is_stmt 1 discriminator 1 view .LVU6420
 19926              	.LBB1018:
 19927              	.LBI1018:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19928              		.loc 3 98 1 discriminator 1 view .LVU6421
 19929              	.LBB1019:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19930              		.loc 3 100 3 discriminator 1 view .LVU6422
 19931              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19932              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6423
 19933 0ff6 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19933      000000
 19934 0ffd 488D3D00 		lea	rdi, .LC37[rip]	#,
 19934      000000
 19935 1004 BA180000 		mov	edx, 24	#,
 19935      00
 19936 1009 BE010000 		mov	esi, 1	#,
 19936      00
 19937 100e E8000000 		call	fwrite@PLT	#
 19937      00
 19938              	.LVL1194:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19939              		.loc 3 100 10 discriminator 1 view .LVU6424
 19940              	.LBE1019:
 19941              	.LBE1018:
1280:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19942              		.loc 1 1280 80 is_stmt 1 discriminator 1 view .LVU6425
 19943 1013 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 19944 1017 E8000000 		call	usage	#
 19944      00
 19945              	.LVL1195:
 19946              	.L1616:
1280:sieve_extend.c ****             if (sscanf(argv[arg], "%d", &option_tunelevel) != 1 || option_tunelevel > 4) {
 19947              		.loc 1 1280 80 is_stmt 0 discriminator 1 view .LVU6426
 19948              	.LBE1177:
 19949              	# sieve_extend.c:1376: }
 19950              		.loc 1 1376 1 view .LVU6427
 19951 101c E8000000 		call	__stack_chk_fail@PLT	#
 19951      00
 19952              	.LVL1196:
 19953              	.L1611:
GAS LISTING /tmp/ccfflXEb.s 			page 523


 19954              	.LBB1178:
1287:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19955              		.loc 1 1287 34 is_stmt 1 discriminator 1 view .LVU6428
 19956              	.LBB1020:
 19957              	.LBI1020:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 19958              		.loc 3 98 1 discriminator 1 view .LVU6429
 19959              	.LBB1021:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19960              		.loc 3 100 3 discriminator 1 view .LVU6430
 19961              	# /usr/include/x86_64-linux-gnu/bits/stdio2.h:100:   return __fprintf_chk (__stream, __USE_FORTIFY_
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19962              		.loc 3 100 10 is_stmt 0 discriminator 1 view .LVU6431
 19963 1021 488B0D00 		mov	rcx, QWORD PTR stderr[rip]	#, stderr
 19963      000000
 19964 1028 488D3D00 		lea	rdi, .LC41[rip]	#,
 19964      000000
 19965 102f BA1A0000 		mov	edx, 26	#,
 19965      00
 19966 1034 BE010000 		mov	esi, 1	#,
 19966      00
 19967 1039 E8000000 		call	fwrite@PLT	#
 19967      00
 19968              	.LVL1197:
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 19969              		.loc 3 100 10 discriminator 1 view .LVU6432
 19970              	.LBE1021:
 19971              	.LBE1020:
1287:sieve_extend.c ****             if (sscanf(argv[arg], "%ju", (uintmax_t*)&option_showMaxFactor) != 1 || option_showMaxF
 19972              		.loc 1 1287 82 is_stmt 1 discriminator 1 view .LVU6433
 19973 103e 498B3C24 		mov	rdi, QWORD PTR [r12]	#, *argv_161(D)
 19974 1042 E8000000 		call	usage	#
 19974      00
 19975              	.LVL1198:
 19976              	.LBE1178:
 19977              		.cfi_endproc
 19978              	.LFE96:
 19980              		.section	.rodata
 19981              		.align 16
 19984              	CSWTCH.127:
 19985 0000 9A999999 		.long	2576980378
 19986 0004 9999B93F 		.long	1069128089
 19987 0008 9A999999 		.long	2576980378
 19988 000c 9999C93F 		.long	1070176665
 19989 0010 9A999999 		.long	2576980378
 19990 0014 9999C93F 		.long	1070176665
 19991 0018 00000000 		.align 16
 19991      00000000 
 19994              	CSWTCH.126:
 19995 0020 00080000 		.quad	2048
 19995      00000000 
 19996 0028 00040000 		.quad	1024
 19996      00000000 
 19997 0030 40000000 		.quad	64
 19997      00000000 
 19998 0038 00000000 		.align 16
 19998      00000000 
GAS LISTING /tmp/ccfflXEb.s 			page 524


 20001              	CSWTCH.125:
 20002 0040 20000000 		.quad	32
 20002      00000000 
 20003 0048 10000000 		.quad	16
 20003      00000000 
 20004 0050 04000000 		.quad	4
 20004      00000000 
 20005 0058 00000000 		.align 16
 20005      00000000 
 20008              	CSWTCH.124:
 20009 0060 10000000 		.quad	16
 20009      00000000 
 20010 0068 08000000 		.quad	8
 20010      00000000 
 20011 0070 04000000 		.quad	4
 20011      00000000 
 20012              		.globl	global_VECTORSTEP_FASTER
 20013              		.data
 20014              		.align 8
 20017              	global_VECTORSTEP_FASTER:
 20018 0000 60000000 		.quad	96
 20018      00000000 
 20019              		.globl	global_MEDIUMSTEP_FASTER
 20020              		.bss
 20021              		.align 8
 20024              	global_MEDIUMSTEP_FASTER:
 20025 0000 00000000 		.zero	8
 20025      00000000 
 20026              		.globl	global_SMALLSTEP_FASTER
 20027              		.align 8
 20030              	global_SMALLSTEP_FASTER:
 20031 0008 00000000 		.zero	8
 20031      00000000 
 20032              		.section	.rodata.cst32,"aM",@progbits,32
 20033              		.align 32
 20034              	.LC0:
 20035 0000 00000000 		.quad	0
 20035      00000000 
 20036 0008 01000000 		.quad	1
 20036      00000000 
 20037 0010 02000000 		.quad	2
 20037      00000000 
 20038 0018 03000000 		.quad	3
 20038      00000000 
 20039              		.align 32
 20040              	.LC1:
 20041 0020 08000000 		.quad	8
 20041      00000000 
 20042 0028 08000000 		.quad	8
 20042      00000000 
 20043 0030 08000000 		.quad	8
 20043      00000000 
 20044 0038 08000000 		.quad	8
 20044      00000000 
 20045              		.align 32
 20046              	.LC2:
 20047 0040 04000000 		.quad	4
GAS LISTING /tmp/ccfflXEb.s 			page 525


 20047      00000000 
 20048 0048 04000000 		.quad	4
 20048      00000000 
 20049 0050 04000000 		.quad	4
 20049      00000000 
 20050 0058 04000000 		.quad	4
 20050      00000000 
 20051              		.align 32
 20052              	.LC3:
 20053 0060 3F000000 		.long	63
 20054 0064 3F000000 		.long	63
 20055 0068 3F000000 		.long	63
 20056 006c 3F000000 		.long	63
 20057 0070 3F000000 		.long	63
 20058 0074 3F000000 		.long	63
 20059 0078 3F000000 		.long	63
 20060 007c 3F000000 		.long	63
 20061              		.section	.rodata.cst8,"aM",@progbits,8
 20062              		.align 8
 20063              	.LC6:
 20064 0000 00000000 		.long	0
 20065 0004 00000000 		.long	0
 20066              		.align 8
 20067              	.LC7:
 20068 0008 00000000 		.long	0
 20069 000c 0000F87F 		.long	2146959360
 20070              		.align 8
 20071              	.LC8:
 20072 0010 95D626E8 		.long	3894859413
 20073 0014 0B2E113E 		.long	1041313291
 20074              		.align 8
 20075              	.LC28:
 20076 0018 9A999999 		.long	2576980378
 20077 001c 9999B93F 		.long	1069128089
 20078              		.align 8
 20079              	.LC61:
 20080 0020 00000000 		.long	0
 20081 0024 00001440 		.long	1075052544
 20082              		.text
 20083              	.Letext0:
 20084              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 20085              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 20086              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 20087              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 20088              		.file 8 "/usr/include/stdio.h"
 20089              		.file 9 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 20090              		.file 10 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h"
 20091              		.file 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h"
 20092              		.file 12 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h"
 20093              		.file 13 "/usr/include/stdint.h"
 20094              		.file 14 "/usr/include/time.h"
 20095              		.file 15 "/usr/include/math.h"
 20096              		.file 16 "/usr/include/stdlib.h"
 20097              		.file 17 "<built-in>"
 46275              		.section	.note.gnu.property,"a"
 46276              		.align 8
 46277 0000 04000000 		.long	 1f - 0f
GAS LISTING /tmp/ccfflXEb.s 			page 526


 46278 0004 10000000 		.long	 4f - 1f
 46279 0008 05000000 		.long	 5
 46280              	0:
 46281 000c 474E5500 		.string	 "GNU"
 46282              	1:
 46283              		.align 8
 46284 0010 020000C0 		.long	 0xc0000002
 46285 0014 04000000 		.long	 3f - 2f
 46286              	2:
 46287 0018 03000000 		.long	 0x3
 46288              	3:
 46289 001c 00000000 		.align 8
 46290              	4:
GAS LISTING /tmp/ccfflXEb.s 			page 527


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sieve_extend.c
     /tmp/ccfflXEb.s:86     .text:0000000000000000 extendSieve_smallSize
     /tmp/ccfflXEb.s:20034  .rodata.cst32:0000000000000000 .LC0
     /tmp/ccfflXEb.s:20040  .rodata.cst32:0000000000000020 .LC1
     /tmp/ccfflXEb.s:20046  .rodata.cst32:0000000000000040 .LC2
     /tmp/ccfflXEb.s:20052  .rodata.cst32:0000000000000060 .LC3
     /tmp/ccfflXEb.s:1228   .text:00000000000006c0 compare_tuning_result
     /tmp/ccfflXEb.s:1254   .text:00000000000006e0 extendSieve_shiftright_ivdep
     /tmp/ccfflXEb.s:3032   .text:00000000000012a0 setBitsTrue_largeRange_vector
     /tmp/ccfflXEb.s:4875   .text:0000000000001ca0 extendSieve_aligned
     /tmp/ccfflXEb.s:5764   .text:0000000000002220 extendSieve_shiftleft
     /tmp/ccfflXEb.s:8438   .text:00000000000032b0 show_primes.isra.0
     /tmp/ccfflXEb.s:8433   .rodata.str1.1:0000000000000006 .LC5
     /tmp/ccfflXEb.s:8431   .rodata.str1.1:0000000000000000 .LC4
     /tmp/ccfflXEb.s:8845   .text:0000000000003450 sieve_shake
     /tmp/ccfflXEb.s:20030  .bss:0000000000000008 global_SMALLSTEP_FASTER
     /tmp/ccfflXEb.s:20024  .bss:0000000000000000 global_MEDIUMSTEP_FASTER
     /tmp/ccfflXEb.s:20017  .data:0000000000000000 global_VECTORSTEP_FASTER
     /tmp/ccfflXEb.s:12866  .text:00000000000045c0 tune_benchmark
     /tmp/ccfflXEb.s:20067  .rodata.cst8:0000000000000008 .LC7
     /tmp/ccfflXEb.s:20071  .rodata.cst8:0000000000000010 .LC8
     /tmp/ccfflXEb.s:13101  .text:0000000000004700 validatePrimeCount
     /tmp/ccfflXEb.s:13082  .rodata.str1.8:0000000000000000 .LC9
     /tmp/ccfflXEb.s:13088  .rodata.str1.1:0000000000000023 .LC11
     /tmp/ccfflXEb.s:13092  .rodata.str1.8:00000000000000c0 .LC12
     /tmp/ccfflXEb.s:13085  .rodata.str1.8:0000000000000058 .LC10
     /tmp/ccfflXEb.s:13095  .rodata.str1.8:00000000000000f8 .LC13
     /tmp/ccfflXEb.s:14350  .text:0000000000004e80 usage
     /tmp/ccfflXEb.s:14310  .rodata.str1.8:0000000000000148 .LC14
     /tmp/ccfflXEb.s:14313  .rodata.str1.1:0000000000000031 .LC15
     /tmp/ccfflXEb.s:14317  .rodata.str1.8:0000000000000168 .LC16
     /tmp/ccfflXEb.s:14320  .rodata.str1.8:00000000000001a8 .LC17
     /tmp/ccfflXEb.s:14323  .rodata.str1.8:00000000000001d8 .LC18
     /tmp/ccfflXEb.s:14326  .rodata.str1.8:0000000000000220 .LC19
     /tmp/ccfflXEb.s:14329  .rodata.str1.8:0000000000000250 .LC20
     /tmp/ccfflXEb.s:14332  .rodata.str1.8:0000000000000290 .LC21
     /tmp/ccfflXEb.s:14335  .rodata.str1.8:00000000000002d0 .LC22
     /tmp/ccfflXEb.s:14338  .rodata.str1.8:0000000000000320 .LC23
     /tmp/ccfflXEb.s:14341  .rodata.str1.8:0000000000000348 .LC24
     /tmp/ccfflXEb.s:14344  .rodata.str1.8:0000000000000378 .LC25
     /tmp/ccfflXEb.s:14595  .text:0000000000005000 printfcomma2
     /tmp/ccfflXEb.s:14587  .rodata.str1.1:000000000000003b .LC26
     /tmp/ccfflXEb.s:14589  .rodata.str1.1:000000000000003e .LC27
     /tmp/ccfflXEb.s:14721  .text:0000000000005070 printfcomma
     /tmp/ccfflXEb.s:15181  .text:00000000000051d0 benchmark
     /tmp/ccfflXEb.s:20063  .rodata.cst8:0000000000000000 .LC6
     /tmp/ccfflXEb.s:15475  .text:00000000000053d0 test
     /tmp/ccfflXEb.s:15779  .text:0000000000005560 test2
     /tmp/ccfflXEb.s:15899  .text:00000000000056f0 test3
     /tmp/ccfflXEb.s:16168  .text:0000000000005810 testshuffle_vector
     /tmp/ccfflXEb.s:16673  .text:0000000000005aa0 testshuffle_vector2
     /tmp/ccfflXEb.s:16684  .text:0000000000005ab0 testshuffle_word
     /tmp/ccfflXEb.s:17386  .text.startup:0000000000000000 main
     /tmp/ccfflXEb.s:17294  .rodata.str1.1:0000000000000053 .LC30
     /tmp/ccfflXEb.s:17296  .rodata.str1.1:000000000000005a .LC31
     /tmp/ccfflXEb.s:17305  .rodata.str1.1:0000000000000080 .LC34
GAS LISTING /tmp/ccfflXEb.s 			page 528


     /tmp/ccfflXEb.s:17307  .rodata.str1.1:0000000000000099 .LC35
     /tmp/ccfflXEb.s:17309  .rodata.str1.1:00000000000000a1 .LC36
     /tmp/ccfflXEb.s:17318  .rodata.str1.1:00000000000000c1 .LC39
     /tmp/ccfflXEb.s:17339  .rodata.str1.1:000000000000014f .LC48
     /tmp/ccfflXEb.s:17337  .rodata.str1.1:0000000000000136 .LC47
     /tmp/ccfflXEb.s:17320  .rodata.str1.1:00000000000000d7 .LC40
     /tmp/ccfflXEb.s:17324  .rodata.str1.1:00000000000000f9 .LC42
     /tmp/ccfflXEb.s:17331  .rodata.str1.1:00000000000000fd .LC44
     /tmp/ccfflXEb.s:17333  .rodata.str1.1:0000000000000116 .LC45
     /tmp/ccfflXEb.s:17341  .rodata.str1.1:000000000000015f .LC49
     /tmp/ccfflXEb.s:20079  .rodata.cst8:0000000000000020 .LC61
     /tmp/ccfflXEb.s:17374  .rodata.str1.8:0000000000000548 .LC62
     /tmp/ccfflXEb.s:17292  .rodata.str1.1:0000000000000044 .LC29
     /tmp/ccfflXEb.s:17335  .rodata.str1.1:0000000000000127 .LC46
     /tmp/ccfflXEb.s:17302  .rodata.str1.8:00000000000003b0 .LC33
     /tmp/ccfflXEb.s:17380  .rodata.str1.1:00000000000001b3 .LC64
     /tmp/ccfflXEb.s:17377  .rodata.str1.8:0000000000000590 .LC63
     /tmp/ccfflXEb.s:20075  .rodata.cst8:0000000000000018 .LC28
     /tmp/ccfflXEb.s:17354  .rodata.str1.1:0000000000000188 .LC54
     /tmp/ccfflXEb.s:17351  .rodata.str1.8:0000000000000420 .LC53
     /tmp/ccfflXEb.s:17358  .rodata.str1.8:00000000000004a8 .LC55
     /tmp/ccfflXEb.s:17361  .rodata.str1.1:000000000000018d .LC56
     /tmp/ccfflXEb.s:17347  .rodata.str1.1:0000000000000183 .LC52
     /tmp/ccfflXEb.s:17363  .rodata.str1.1:000000000000019a .LC57
     /tmp/ccfflXEb.s:17365  .rodata.str1.1:00000000000001a1 .LC58
     /tmp/ccfflXEb.s:17343  .rodata.str1.1:0000000000000166 .LC50
     /tmp/ccfflXEb.s:17371  .rodata.str1.8:0000000000000510 .LC60
     /tmp/ccfflXEb.s:17367  .rodata.str1.1:00000000000001a5 .LC59
     /tmp/ccfflXEb.s:20008  .rodata:0000000000000060 CSWTCH.124
     /tmp/ccfflXEb.s:20001  .rodata:0000000000000040 CSWTCH.125
     /tmp/ccfflXEb.s:19994  .rodata:0000000000000020 CSWTCH.126
     /tmp/ccfflXEb.s:19984  .rodata:0000000000000000 CSWTCH.127
     /tmp/ccfflXEb.s:17345  .rodata.str1.1:0000000000000179 .LC51
     /tmp/ccfflXEb.s:17298  .rodata.str1.1:0000000000000064 .LC32
     /tmp/ccfflXEb.s:17315  .rodata.str1.8:00000000000003d8 .LC38
     /tmp/ccfflXEb.s:17328  .rodata.str1.8:00000000000003f8 .LC43
     /tmp/ccfflXEb.s:17311  .rodata.str1.1:00000000000000a8 .LC37
     /tmp/ccfflXEb.s:17322  .rodata.str1.1:00000000000000de .LC41

UNDEFINED SYMBOLS
__stack_chk_fail
_GLOBAL_OFFSET_TABLE_
memcpy
__printf_chk
putchar
aligned_alloc
clock_gettime
free
puts
stderr
__fprintf_chk
fwrite
exit
__isoc99_sscanf
malloc
qsort
